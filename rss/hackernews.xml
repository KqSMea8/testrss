<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Python startup time: milliseconds matter</title>
<link>https://mail.python.org/pipermail/python-dev/2018-May/153296.html</link>
<guid isPermaLink="true" >https://mail.python.org/pipermail/python-dev/2018-May/153296.html</guid>
<description>&lt;head&gt;&lt;title&gt;[Python-Dev] Python startup time&lt;/title&gt;&lt;link rel=&quot;Index&quot; href=&quot;index.html&quot; /&gt;&lt;link rel=&quot;made&quot; href=&quot;mailto:python-dev%40python.org?Subject=Re%3A%20%5BPython-Dev%5D%20Python%20startup%20time&amp;amp;In-Reply-To=%3Cde448a2e-89c1-9fe2-f9e7-1c88c484bc2e%40gmail.com%3E&quot; /&gt;&lt;meta name=&quot;robots&quot; content=&quot;index,nofollow&quot; /&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link rel=&quot;Previous&quot; href=&quot;153294.html&quot; /&gt;&lt;link rel=&quot;Next&quot; href=&quot;153297.html&quot; /&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; id=&quot;readabilityBody&quot; readability=&quot;66.46071329061&quot;&gt;

&lt;p&gt;&lt;strong&gt;Gregory Szorc&lt;/strong&gt; &lt;a href=&quot;mailto:python-dev%40python.org?Subject=Re%3A%20%5BPython-Dev%5D%20Python%20startup%20time&amp;amp;In-Reply-To=%3Cde448a2e-89c1-9fe2-f9e7-1c88c484bc2e%40gmail.com%3E&quot; title=&quot;[Python-Dev] Python startup time&quot;&gt;gregory.szorc at gmail.com&lt;/a&gt;&lt;br /&gt;&lt;em&gt;Tue May 1 23:26:54 EDT 2018&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;pre&gt;
On 7/19/2017 12:15 PM, Larry Hastings wrote:
&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; On 07/19/2017 05:59 AM, Victor Stinner wrote:
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; Mercurial startup time is already 45.8x slower than Git whereas tested
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; Mercurial runs on Python 2.7.12. Now try to sell Python 3 to Mercurial
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; developers, with a startup time 2x - 3x slower...
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; When Matt Mackall spoke at the Python Language Summit some years back, I
&lt;/em&gt;&amp;gt;&lt;em&gt; recall that he specifically complained about Python startup time.  He
&lt;/em&gt;&amp;gt;&lt;em&gt; said Python 3 &quot;didn't solve any problems for [them]&quot;--they'd already
&lt;/em&gt;&amp;gt;&lt;em&gt; solved their Unicode hygiene problems--and that Python's slow startup
&lt;/em&gt;&amp;gt;&lt;em&gt; time was already a big problem for them.  Python 3 being /even slower/
&lt;/em&gt;&amp;gt;&lt;em&gt; to start was absolutely one of the reasons why they didn't want to upgrade.
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; You might think &quot;what's a few milliseconds matter&quot;.  But if you run
&lt;/em&gt;&amp;gt;&lt;em&gt; hundreds of commands in a shell script it adds up.  git's speed is one
&lt;/em&gt;&amp;gt;&lt;em&gt; of the few bright spots in its UX, and hg's comparative slowness here is
&lt;/em&gt;&amp;gt;&lt;em&gt; a palpable disadvantage.
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; So please continue efforts for make Python startup even faster to beat
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; all other programming languages, and finally convince Mercurial to
&lt;/em&gt;&amp;gt;&amp;gt;&lt;em&gt; upgrade ;-)
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; I believe Mercurial is, finally, slowly porting to Python 3.
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt;     &lt;a href=&quot;https://www.mercurial-scm.org/wiki/Python3&quot;&gt;https://www.mercurial-scm.org/wiki/Python3&lt;/a&gt;
&lt;/em&gt;&amp;gt;&lt;em&gt; 
&lt;/em&gt;&amp;gt;&lt;em&gt; Nevertheless, I can't really be annoyed or upset at them moving slowly
&lt;/em&gt;&amp;gt;&lt;em&gt; to adopt Python 3, as Matt's objections were entirely legitimate.
&lt;/em&gt;
I just now found found this thread when searching the archive for
threads about startup time. And I was searching for threads about
startup time because Mercurial's startup time has been getting slower
over the past few months and this is causing substantial pain.

As I posted back in 2014 [1], CPython's startup overhead was &amp;gt;10% of the
total CPU time in Mercurial's test suite. And when you factor in the
time to import modules that get Mercurial to a point where it can run
commands, it was more like 30%!

Mercurial's full test suite currently runs `hg` ~25,000 times. Using
Victor's startup time numbers of 6.4ms for 2.7 and 14.5ms for
3.7/master, Python startup overhead contributes ~160s on 2.7 and ~360s
on 3.7/master. Even if you divide this by the number of available CPU
cores, we're talking dozens of seconds of wall time just waiting for
CPython to get to a place where Mercurial's first bytecode can execute.

And the problem is worse when you factor in the time it takes to import
Mercurial's own modules.

As a concrete example, I recently landed a Mercurial patch [2] that
stubs out zope.interface to prevent the import of 9 modules on every
`hg` invocation. This &quot;only&quot; saved ~6.94ms for a typical `hg`
invocation. But this decreased the CPU time required to run the test
suite on my i7-6700K from ~4450s to ~3980s (~89.5% of original) - a
reduction of almost 8 minutes of CPU time (and over 1 minute of wall time)!

By the time CPython gets Mercurial to a point where we can run useful
code, we've already blown most of or past the time budget where humans
perceive an action/command as instantaneous. If you ignore startup
overhead, Mercurial's performance compares quite well to Git's for many
operations. But the reality is that CPython startup overhead makes it
look like Mercurial is non-instantaneous before Mercurial even has the
opportunity to execute meaningful code!

Mercurial provides a `chg` program that essentially spins up a daemon
`hg` process running a &quot;command server&quot; so the `chg` program [written in
C - no startup overhead] can dispatch commands to an already-running
Python/`hg` process and avoid paying the startup overhead cost. When you
run Mercurial's test suite using `chg`, it completes *minutes* faster.
`chg` exists mainly as a workaround for slow startup overhead.

Changing gears, my day job is maintaining Firefox's build system. We use
Python heavily in the build system. And again, Python startup overhead
is problematic. I don't have numbers offhand, but we invoke likely a few
hundred Python processes as part of building Firefox. It should be
several thousand. But, we've had to &quot;hack&quot; parts of the build system to
&quot;batch&quot; certain build actions in single process invocations in order to
avoid Python startup overhead. This undermines the ability of some build
tools to formulate a reasonable understanding of the DAG and it causes a
bit of pain for build system developers and makes it difficult to
achieve &quot;no-op&quot; and fast incremental builds because we're always
invoking certain Python processes because we've had to move DAG
awareness out of the build backend and into Python. At some point, we'll
likely replace Python code with Rust so the build system is more &quot;pure&quot;
and easier to maintain and reason about.

I've seen posts in this thread and elsewhere in the CPython development
universe that challenge whether milliseconds in startup time matter.
Speaking as a Mercurial and Firefox build system developer,
*milliseconds absolutely matter*. Going further, *fractions of
milliseconds matter*. For Mercurial's test suite with its ~25,000 Python
process invocations, 1ms translates to ~25s of CPU time. With 2.7,
Mercurial can dispatch commands in ~50ms. When you load common
extensions, it isn't uncommon to see process startup overhead of
100-150ms! A millisecond here. A millisecond there. Before you know it,
we're talking *minutes* of CPU (and potentially wall) time in order to
run Mercurial's test suite (or build Firefox, or ...).

&amp;gt;&lt;em&gt;From my perspective, Python process startup and module import overhead
&lt;/em&gt;is a severe problem for Python. I don't say this lightly, but in my mind
the problem causes me to question the viability of Python for popular
use cases, such as CLI applications. When choosing a programming
language, I want one that will scale as a project grows. Vanilla process
overhead has Python starting off significantly slower than compiled code
(or even Perl) and adding module import overhead into the mix makes
Python slower and slower as projects grow. As someone who has to deal
with this slowness on a daily basis, I can tell you that it is extremely
frustrating and it does matter. I hope that the importance of the
problem will be acknowledged (milliseconds *do* matter) and that
creative minds will band together to address it. Since I am
disproportionately impacted by this issue, if there's anything I can do
to help, let me know.

Gregory

[1] &lt;a href=&quot;https://mail.python.org/pipermail/python-dev/2014-May/134528.html&quot;&gt;https://mail.python.org/pipermail/python-dev/2014-May/134528.html&lt;/a&gt;
[2] &lt;a href=&quot;https://www.mercurial-scm.org/repo/hg/rev/856f381ad74b&quot;&gt;https://www.mercurial-scm.org/repo/hg/rev/856f381ad74b&lt;/a&gt;
&lt;/pre&gt;
&lt;hr /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://mail.python.org/mailman/listinfo/python-dev&quot;&gt;More information about the Python-Dev mailing list&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 02 May 2018 17:00:41 +0000</pubDate>
<dc:creator>vanni</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mail.python.org/pipermail/python-dev/2018-May/153296.html</dc:identifier>
</item>
<item>
<title>Proton Native – React Native for the desktop</title>
<link>https://proton-native.js.org/</link>
<guid isPermaLink="true" >https://proton-native.js.org/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://proton-native.js.org/&quot;&gt;https://proton-native.js.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16978901&quot;&gt;https://news.ycombinator.com/item?id=16978901&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 362&lt;/p&gt;&lt;p&gt;# Comments: 166&lt;/p&gt;</description>
<pubDate>Wed, 02 May 2018 16:57:16 +0000</pubDate>
<dc:creator>zengid</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://proton-native.js.org/</dc:identifier>
</item>
<item>
<title>&amp;#039;Anti-authority&amp;#039; tech rebels take on ISPs, connect NYC with cheap Wi-Fi</title>
<link>http://www.cbc.ca/news/technology/wifi-nyc-mesh-new-york-city-1.4617106</link>
<guid isPermaLink="true" >http://www.cbc.ca/news/technology/wifi-nyc-mesh-new-york-city-1.4617106</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;span&gt;It's a promise that seems almost too good to be true: super-fast internet that's cheap, and free of the contracts and hassles that come with major service providers.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That's not a pipe dream for Brian Hall, it's his goal.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The lead volunteer behind the community group NYC Mesh aims to bring affordable internet with lightning-quick downloads to everyone in New York, one building at a time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Our typical speeds are 80 to 110 megabits a second,&quot; Hall says, pointing out that streaming something like Netflix only requires about 5 Mbps.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633503.1524595956!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/brian-hall.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Brian Hall, the lead volunteer behind the community group NYC Mesh, installs an antenna on a member's building. Due to the nature of a mesh network, adding buildings helps expand the group's overall wireless coverage area. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;CBC News joined him one afternoon on a roof in the Brooklyn neighbourhood of Greenpoint. Hall was installing the latest addition to the mesh network that will deliver his vision.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;The worksite is one of the group's latest customers, a converted warehouse that houses a video production company. The regular commercial internet providers were going to charge tens of thousands of dollars to get them online.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;NYC Mesh took on the job for a small installation fee of a few hundred dollars and a monthly donation.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Mesh networks explained&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;So what is a mesh network?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Picture a spiderweb of wireless connections. The main signal originates from what's called the Supernode. It's a direct plugin to the internet, via an internet exchange point — the same place Internet Service Providers get their connection.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The signal from the supernode, sent out wirelessly via an antenna, covers an area of several kilometres.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;From there, a mesh of smaller antennas spread out on rooftops or balconies receive that signal. They're connected to Wi-Fi access points that allow people to use the internet.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;

&lt;span class=&quot;media-caption&quot;&gt;This is a quick description of the workings of a wireless mesh network that provides broadband internet service to New Yorkers using wi-fi. 0:26&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Each supernode can connect thousands of users.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And the&lt;/span&gt; access points talk to the others around them, so if one goes down for some reason the rest still work.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Mesh networks are an alternative to standard ISP hookups. You're not provided with an internet connection through their cable, but through — in our case —Wi-Fi networks,&quot; says Jason Howard, a programmer and actor who's helping with the latest installation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;NYC Mesh bought an industrial-strength connection to the internet right at an Internet Exchange Point (IXP), in this case a futuristic-looking tower in downtown Manhattan. It's the same place that internet service providers (ISPs) like Verizon and Spectrum connect to the internet, accessing massive amounts of wired bandwidth.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633519.1524596247!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/jason-howard.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Jason Howard, a programmer and actor, volunteers with NYC Mesh. Here he helps with the group's installation at a converted warehouse in New York City. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;NYC Mesh then installed an antenna on the roof of the IXP. That became the supernode, the heart of its mesh network.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;From there it beams out and receives Wi-Fi signals, connecting to receivers on rooftops spread through the East Village and Chinatown, and across the river into parts of Brooklyn.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Myth of the ISP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Zach Giles is one of the brains behind the network and one its busiest volunteers. When he's not working his day job in finance, he's maintaining the supernode. The rooftop has become his second office.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;He's a mesh network evangelist who says most people don't realize they don't need to rely on traditional ISPs to get online.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;That's the myth of the ISP,&quot; Giles says in between installing another antenna.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633533.1524596672!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/zach-giles.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Zach Giles is one of the technical brains behind the NYC Mesh network and one its busiest volunteers. When he's not working at his day job in finance, he's maintaining the group's primary supernode, seen here in the background.  (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&quot;The internet doesn't really cost you anything, it's just the connection [that has a fee]. So however you can get plugged in — then you're on the internet. Nobody owns the internet, there's no one to pay.&quot;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Staring out over a city of millions with so many potential users, Giles says he wishes he could shout out that message for everyone to hear that there are other — and cheaper — ways to connect to the internet than corporate ISPs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One person who has heard the message is Jessica Marshall. A mechanical engineer, she's been watching NYC Mesh's growth for a while.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633528.1524596571!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/zach-giles.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Giles says most people don't realize there are cheaper ways to connect to the internet than relying on corporate internet service providers.  (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;On the day CBC News joined Hall and Howard, Marshall tagged along as well, ready to take a more hands-on role. Like Giles and the other volunteers, she sees the work as a mission.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Marshall says she's driven by, &quot;the fact that I didn't have to rely on a gigantic company that's headquartered somewhere else — that's run by people who don't care about me or the internet necessarily, but profits.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;She adds that, &quot;You can build your own internet [connection] and have control over it.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Net neutrality&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Since 2013, NYC Mesh has installed 154 antennas around New York, offering service to thousands of people.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When net neutrality rules in the U.S. were repealed in December, interest in NYC Mesh spiked dramatically. The group went from 500 requests for installation all of last year to 1,300 so far this year.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The fear drawing some new users to NYC Mesh is that, with net neutrality rules gone — the Federal Communications Commission in the U.S. took them off the books on Monday — ISPs have the ability to block or slow down access to various websites or potentially charge for access to certain sites.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633499.1524595750!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/jessica-marshall.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Jessica Marshall, a mechanical engineer, is one of the latest volunteers with NYC Mesh. She joined partly because she likes the idea of having some control over how she accesses the internet. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;The new FCC rules do require ISPs to disclose any throttling, as well as when they prioritize the speed of some content over others. But for many users, the end of net neutrality goes against the spirit of the internet as something that should be open and accessible to all.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;NYC Mesh promises they won't slow down internet speeds or limit access to sites, and will never store, track or monitor personal data.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The ability to get around the big internet providers gives a Robin Hood-esque feel to the volunteers at NYC Mesh, many of whom, like Howard, admit to a rebellious streak.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Howard says he doesn't see himself as a revolutionary — &quot;maybe just anti-authority,&quot; he adds with a smile.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;The big companies would have you think that there's no option than them, especially in New York City,&quot; Howard says. &quot;It's so refreshing to come across this ability to do something else as an alternative.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Still niche&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;But for all its growth, NYC Mesh is still very much in its infancy, says&lt;/span&gt; Motherboard science writer Kaleigh Rogers.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;It's still such a small sort of niche community.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;She says mesh networks challenge the public's sense of how the internet operates.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633481.1524595414!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/kaleigh-rogers.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Kaleigh Rogers, a science writer with Motherboard, says while NYC Mesh is growing quickly, the understanding and adoption of mesh networks by U.S. consumers as a whole is still in its infancy. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&quot;We are so used to the internet being this other thing, run by private businesses. But there's no reason why it has to be. You know, the core infrastructure that rigs up the whole planet with internet, anyone can connect to it,&quot; she says, echoing Gile's point.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Rogers does point out, however, that one of the barriers to entry for mesh customers can be the technical requirements.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Unlike signing up with a commercial ISP, which just involves a phone call to a major provider, a mesh network requires customers to invest a bit more time and effort.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633524.1524596414!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/nyc-mesh.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Jason Howard, left, Jessica Marshall and Brian Hall install wifi equipment on the rooftop of a new member's building. They offer to do the work for new customers at a fraction of the price charged by commercial ISPs.  (CBC)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&quot;You have to understand a little bit about the technical aspects of it,&quot; Rogers says.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;So I think people are a little intimidated. And it's just not as widely known — we don't have any really good 'use' cases here in North America that show how active and how nice [mesh] can be if you actually have enough users.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;While there are mesh networks dotting the U.S., she says the best working example of what mesh technology can do is in Spain. Guifi.net has more than 34,000 nodes covering an area of roughly 50,000 square kilometres across the Catalonia region.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Inside the mesh&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Back in New York, most of NYC Mesh's users are clustered around the first supernode in downtown Manhattan, in Chinatown and the Lower East Side. The surge in interest has allowed the group to build a second supernode in Brooklyn, expanding coverage there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Linda Justice has been using the network for about a year and a half. She read about the project in a local newspaper and was instantly drawn to the idea of a community-driven network.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4627470.1524172901!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/nyc-mesh.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;NYC Mesh holds public information nights to tell people how the technology works, and how they plan to expand service in New York. (Steven D'Souza/CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&quot;I love the idea of communities coming together and supporting each other. I think that's very good, because if it wasn't for them I wouldn't even have Wi-Fi, I'd have to go down to the park and sit out there,&quot; she says.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;She adds that the difference in cost is remarkable. She gives NYC Mesh a donation of $20 a month, when she can. Justice was paying close to $100 a month with her old provider.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633490.1524595524!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/linda-justice.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;New York resident Linda Justice says that if she didn't have affordable access to NYC Mesh service in her building, she'd have to go to a nearby park to get wifi in order to work. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Justice admits she's not the most tech-savvy person, and doesn't always understand what Brian Hall and the other volunteers are saying. What she does know is that her speeds are a bit slower at times because her signal is being bounced through various nodes to get to her, but that's an acceptable tradeoff.  &lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&quot;It's worth it to take the time and learn about it,&quot; Justice says.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;Bridging the digital divide&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Affordability is one feature of mesh networks, another is resiliency.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the routers are interconnected, if one node goes down, the others can pick up the slack. So even if the main connection to the internet is lost during a power outage, the mesh network can maintain connectivity among its access points for basic functions like text messaging.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633475.1524595204!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/clayton-banks.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Clayton Banks, head of community tech group Silicon Harlem, is building a mesh network in his community with funding help from the government. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;During Superstorm Sandy in 2012, a mesh network in Red Hook in Brooklyn managed to stay up, even when power and other utilities shut down. With limited service and a small number of connections, it allowed neighbours, and even FEMA, to stay connected during the storm.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;The U.S. government is now funding mesh networks in various neighbourhoods to prepare for the next storm.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Harlem, Clayton Banks jumped at the chance to provide his area with one. As head of community tech group Silicon Harlem, he sees the potential reaching far beyond the initial rollout to local businesses.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;We're going to help your kids learn a little bit more about technology. We're going to hire people in this community. We want to be able to give more digital literacy in here,&quot; Banks says, noting that close 40 per cent of residents in East Harlem don't have access to broadband internet.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4633477.1524595301!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/clayton-banks.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;Banks scopes out potential spots for mesh-network wifi access points in his neighbourhood, noting that close 40 per cent of residents in East Harlem don't have access to broadband internet. (CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Bridging the digital divide by providing low-cost, high-speed internet is the goal for his mesh network. He says he's tired of seeing kids in his neighbourhood forced to go to coffee shops and use Wi-Fi there to do homework.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&quot;I had a 15-year-old young person come to me and say 'I don't have a computer at home and we don't have broadband. I'm falling behind because those who have those things are no smarter, but they just have the tools to get it done.' So that's why this is so vital.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;What's next for mesh&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;NYC Mesh currently has two supernodes and estimates that with about a dozen more it could blanket the entire city with wireless internet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Growth is ramping up and more users means more funding, but it's still a volunteer-driven organization — something that may have to change as it scales up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There's also debate in the community about whether to start charging more for the service as more users join the network.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.4627474.1524172991!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/nyc-mesh.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;NYC Mesh currently operates two supernodes providing broadband internet to New York neighbourhoods. Its master plan is to keep adding supernodes - the group estimates it could blanket the city's whole population with about a dozen more. (Steven D'Souza/CBC)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;The group also knows there will be growing pains as they challenge the status quo and that it's only a matter of time before the big ISPs take notice, which could bring new challenges.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;But Giles says his group is a return to the original idea of what the internet was supposed to be, free and accessible to all.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;I would think it's actually actually how it used to be - we are going back to simpler time. It looks complicated, lots of wires, but it's simple.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Watch Steven D'Souza's feature on NYC Mesh on Wednesday night's The National on CBC television and &lt;a href=&quot;http://www.cbc.ca/news/thenational&quot;&gt;streamed online&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 02 May 2018 16:23:31 +0000</pubDate>
<dc:creator>standeven</dc:creator>
<og:url>http://www.cbc.ca/news/technology/wifi-nyc-mesh-new-york-city-1.4617106</og:url>
<og:title>'Myth of the ISP': Volunteers aim to blanket Big Apple with cheap, fast Wi-Fi | CBC News</og:title>
<og:image>https://i.cbc.ca/1.4633541.1524596837!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_620/zach-giles.jpg</og:image>
<og:description>The volunteer community group NYC Mesh is working to bring affordable internet with lightning-quick downloads to New York, one building at a time.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cbc.ca/news/technology/wifi-nyc-mesh-new-york-city-1.4617106</dc:identifier>
</item>
<item>
<title>Rust in production at Figma</title>
<link>https://blog.figma.com/rust-in-production-at-figma-e10a0ec31929</link>
<guid isPermaLink="true" >https://blog.figma.com/rust-in-production-at-figma-e10a0ec31929</guid>
<description>&lt;p&gt;

&lt;h2 name=&quot;a86e&quot; id=&quot;a86e&quot; class=&quot;graf graf--h4 graf-after--h3 graf--subtitle&quot;&gt;How Mozilla’s new language dramatically improved our server-side performance&lt;/h2&gt;
&lt;/p&gt;&lt;div readability=&quot;188.21156622158&quot;&gt;
&lt;p name=&quot;86c2&quot; id=&quot;86c2&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Like building state-of-the-art web apps?&lt;/em&gt; &lt;a href=&quot;https://www.figma.com/careers&quot; data-href=&quot;https://www.figma.com/careers&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Come work at Figma!&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p name=&quot;b562&quot; id=&quot;b562&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At &lt;a href=&quot;https://www.figma.com/&quot; data-href=&quot;https://www.figma.com/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Figma&lt;/a&gt;, performance is one of our most important features. We strive to enable teams to work at the speed of thought, and our multiplayer syncing engine is a critical part of this vision. Everyone should see each change made to a Figma document in real time.&lt;/p&gt;
&lt;p name=&quot;dd71&quot; id=&quot;dd71&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The multiplayer server we &lt;a href=&quot;https://blog.figma.com/multiplayer-editing-in-figma-8f8076c6c3a6&quot; data-href=&quot;https://blog.figma.com/multiplayer-editing-in-figma-8f8076c6c3a6&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener&quot; target=&quot;_blank&quot;&gt;launched with two years ago&lt;/a&gt; is written in TypeScript and has served us surprisingly well, but Figma is rapidly growing more popular and that server isn’t going to be able to keep up. We decided to fix this by rewriting it in Rust.&lt;/p&gt;
&lt;p name=&quot;bb04&quot; id=&quot;bb04&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot; data-href=&quot;https://www.rust-lang.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Rust&lt;/a&gt; is a new programming language from Mozilla, the company that makes Firefox. They’re using it to build a next-generation browser prototype called &lt;a href=&quot;https://research.mozilla.org/servo-engines/&quot; data-href=&quot;https://research.mozilla.org/servo-engines/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Servo&lt;/a&gt; which demonstrates that browsers can be way faster than they are today. Rust is similar to C++ in performance and low-level ability but has a type system which &lt;a href=&quot;https://polyfloyd.net/post/how-rust-helps-you-prevent-bugs/&quot; data-href=&quot;https://polyfloyd.net/post/how-rust-helps-you-prevent-bugs/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;automatically prevents whole classes of nasty bugs&lt;/a&gt; that are common in C++ programs.&lt;/p&gt;
&lt;p name=&quot;471c&quot; id=&quot;471c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We chose Rust for this rewrite because it combines best-in-class speed with low resource usage while still offering the safety of standard server languages. Low resource usage was particularly important to us because some of the performance issues with the old server were caused by the garbage collector.&lt;/p&gt;
&lt;p name=&quot;f76c&quot; id=&quot;f76c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We think this is an interesting case study of using Rust in production and want to share the issues we encountered and the benefits we achieved in the hope that it will be useful to others considering a similar rewrite.&lt;/p&gt;
&lt;h3 name=&quot;776e&quot; id=&quot;776e&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Scaling our service with Rust&lt;/h3&gt;
&lt;p name=&quot;141e&quot; id=&quot;141e&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Our multiplayer service is run on a fixed number of machines, each with a fixed number of workers, and each document lives exclusively on one specific worker. That means each worker is responsible for some fraction of currently open Figma documents. It looks something like this:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*b_L0C2dgCIsZSuRtdT2aOg.png&quot; data-width=&quot;1115&quot; data-height=&quot;741&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*b_L0C2dgCIsZSuRtdT2aOg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*b_L0C2dgCIsZSuRtdT2aOg.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;1d17&quot; id=&quot;1d17&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The main problem with the old server was the unpredictable latency spikes during syncing. The server was written in TypeScript and, being single-threaded, couldn’t process operations in parallel. That meant a single slow operation would lock up the entire worker until it was complete. A common operation is to encode the document and Figma documents can get very large, so operations would take an arbitrarily-long amount of time. Users connected to that worker would be unable to sync their changes in the meantime.&lt;/p&gt;
&lt;p name=&quot;fc8b&quot; id=&quot;fc8b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Throwing more hardware at the problem wouldn’t have solved this issue because a single slow operation would still lock up the worker for all files associated with that worker. And we couldn’t just create a separate node.js process for every document because the memory overhead of the JavaScript VM would have been too high. Really only a handful of documents were ever big enough to cause problems, but they were affecting the quality of service for everyone. Our temporary solution was to isolate the crazy documents to a completely separate pool of “heavy” workers:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*8bzkHy9Fg3fZXTEHIm65kg.png&quot; data-width=&quot;1115&quot; data-height=&quot;741&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*8bzkHy9Fg3fZXTEHIm65kg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*8bzkHy9Fg3fZXTEHIm65kg.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;9933&quot; id=&quot;9933&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This kept the service up but meant we had to continually look out for crazy documents and move them over to the heavy worker pool by hand. It bought us enough time to solve these problems for real, which we did by moving the performance-sensitive parts of the multiplayer server into a separate child process. That child process is written in Rust and communicates with its host process using stdin and stdout. It uses so little memory compared to the old system that we can afford to fully parallelize all documents by just using a separate child process per document. And serialization time is now over 10x faster so the service is now acceptably fast even in the worst case. The new architecture looks like this:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*JvrV35TNvuARMRcvFpeMaQ.png&quot; data-width=&quot;1175&quot; data-height=&quot;741&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*JvrV35TNvuARMRcvFpeMaQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*JvrV35TNvuARMRcvFpeMaQ.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;a7d0&quot; id=&quot;a7d0&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Server-side performance improvements&lt;/h3&gt;
&lt;p name=&quot;91d6&quot; id=&quot;91d6&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The performance improvements are incredible. The following graphs show various metrics for the week before, during, and after the progressive rollout. The huge drop in the middle is where the progressive rollout hit 100%. Keep in mind that these improvements are in server-side performance, not client-side performance, so they mainly just mean that the service will continue to run smoothly for everyone without any hiccups.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*s7uU1Sd7IF7xOjR2mv4xRA.png&quot; data-width=&quot;720&quot; data-height=&quot;413&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*s7uU1Sd7IF7xOjR2mv4xRA.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*s7uU1Sd7IF7xOjR2mv4xRA.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*1sXGPC5m0cc_u_L-tt0m-Q.png&quot; data-width=&quot;1115&quot; data-height=&quot;639&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*1sXGPC5m0cc_u_L-tt0m-Q.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*1sXGPC5m0cc_u_L-tt0m-Q.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*b3y9hIkhXJFe4aeVQQBOqQ.png&quot; data-width=&quot;720&quot; data-height=&quot;413&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*b3y9hIkhXJFe4aeVQQBOqQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*b3y9hIkhXJFe4aeVQQBOqQ.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Ta8MtAg17e_L9qo09r-IxA.png&quot; data-width=&quot;720&quot; data-height=&quot;413&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Ta8MtAg17e_L9qo09r-IxA.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Ta8MtAg17e_L9qo09r-IxA.png&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*YxXXHIm6PTXEx-muh_h2xQ.png&quot; data-width=&quot;1115&quot; data-height=&quot;639&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*YxXXHIm6PTXEx-muh_h2xQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*YxXXHIm6PTXEx-muh_h2xQ.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;cd26&quot; id=&quot;cd26&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Here are the numeric changes in peak metrics as compared to the old server:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*48agi3zbT2Ifc2rDxE85pQ.png&quot; data-width=&quot;1115&quot; data-height=&quot;639&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*48agi3zbT2Ifc2rDxE85pQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*48agi3zbT2Ifc2rDxE85pQ.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;ec03&quot; id=&quot;ec03&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;The benefits and drawbacks of Rust&lt;/h3&gt;
&lt;p name=&quot;5ecf&quot; id=&quot;5ecf&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;While Rust helped us write a high performance server, it turns out the language wasn’t as ready as we thought. It’s much newer than standard server-side languages and still has a lot of rough edges (described below).&lt;/p&gt;
&lt;p name=&quot;d737&quot; id=&quot;d737&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As a result, we dropped our initial plan to rewrite our whole server in Rust and chose to focus solely on the performance-sensitive part instead. Here are the pros and cons we encountered in that rewrite:&lt;/p&gt;
&lt;h4 name=&quot;ff5b&quot; id=&quot;ff5b&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Pros&lt;/h4&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;eaea&quot; id=&quot;eaea&quot; class=&quot;graf graf--li graf-after--h4&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Low memory usage&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;d8cc&quot; id=&quot;d8cc&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Rust combines fine-grained control over memory layout with the lack of a GC and has a very minimal standard library. It used so little memory that it was actually practical to just start a separate Rust process for every document.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;b9ad&quot; id=&quot;b9ad&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Awesome performance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;7bc9&quot; id=&quot;7bc9&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Rust definitely delivered on its promise of optimal performance, both because it can take advantage of all of LLVM’s optimizations and because the language itself is designed with performance in mind. Rust’s &lt;a href=&quot;https://doc.rust-lang.org/1.22.0/std/slice/&quot; data-href=&quot;https://doc.rust-lang.org/1.22.0/std/slice/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;slices&lt;/a&gt; make passing raw pointers around easy, ergonomic, and safe, and we used that a lot to avoid copying data during parsing. The &lt;a href=&quot;https://doc.rust-lang.org/std/collections/struct.HashMap.html&quot; data-href=&quot;https://doc.rust-lang.org/std/collections/struct.HashMap.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;HashMap API&lt;/a&gt; is implemented with &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_probing&quot; data-href=&quot;https://en.wikipedia.org/wiki/Linear_probing&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;linear probing&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash_table#Robin_Hood_hashing&quot; data-href=&quot;https://en.wikipedia.org/wiki/Hash_table#Robin_Hood_hashing&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Robin Hood hashing&lt;/a&gt;, so unlike C++’s &lt;a href=&quot;http://en.cppreference.com/w/cpp/container/unordered_map&quot; data-href=&quot;http://en.cppreference.com/w/cpp/container/unordered_map&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;unordered_map API&lt;/a&gt; the contents can be stored inline in a single allocation and are much more cache-efficient.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;5168&quot; id=&quot;5168&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Solid toolchain&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;d827&quot; id=&quot;d827&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Rust comes with &lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot; data-href=&quot;https://doc.rust-lang.org/cargo/index.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;cargo&lt;/a&gt; built-in, which is a build tool, package manager, test runner, and documentation generator. This is a standard addition for most modern languages but is a very welcome improvement coming from the outdated world of C++, the other language we had considered using for the rewrite. Cargo was well-documented and easy to use, and it had helpful defaults.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;b44c&quot; id=&quot;b44c&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Friendly error messages&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;d8df&quot; id=&quot;d8df&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Rust is more complex than other languages because it has an additional piece, the borrow checker, with its own unique rules that need to be learned. People have put a lot of effort into making the error messages readable and it really shows. They make learning Rust much nicer.&lt;/p&gt;
&lt;h4 name=&quot;29e5&quot; id=&quot;29e5&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Cons&lt;/h4&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;ce4e&quot; id=&quot;ce4e&quot; class=&quot;graf graf--li graf-after--h4&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Lifetimes are confusing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;bf65&quot; id=&quot;bf65&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;In Rust, storing a pointer in a variable can prevent you from mutating the thing it points to as long as that variable is in scope. This guarantees safety but is overly restrictive since the variable may not be needed anymore by the time the mutation happens. Even as someone who has been following Rust from the start, who writes compilers for fun, and who knows how to think like the borrow checker, it’s still frustrating to have to pause your work to solve the little unnecessary borrow checker puzzles that can come up regularly as you work. There are good examples of the problems this creates in &lt;a href=&quot;http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/&quot; data-href=&quot;http://smallcultfollowing.com/babysteps/blog/2016/04/27/non-lexical-lifetimes-introduction/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;00af&quot; id=&quot;00af&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;What we did about it:&lt;/em&gt; We simplified our program to a single event loop that reads data from stdin and writes data to stdout (stderr is used for logging). Data either lives forever or only lives for the duration of the event loop. This eliminated pretty much all borrow checker complexities.&lt;/p&gt;
&lt;p name=&quot;e2c3&quot; id=&quot;e2c3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;How this is being fixed:&lt;/em&gt; The Rust community is planning to address this with &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md&quot; data-href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;non-lexical lifetimes&lt;/a&gt;. This feature shrinks the lifetime of a variable such that it stops after the last time it’s used. Then a pointer will no longer prevent the mutation of the thing it points to for the rest of the scope, which will eliminate many borrow checker false-positives.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;a136&quot; id=&quot;a136&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Errors are hard to debug&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;c493&quot; id=&quot;c493&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Error-handling in Rust is intended to be done by returning a value called “Result” that can represent either success or failure. Unlike with exceptions, creating an error value in Rust does not capture a stack trace so any stack traces you get are for the code that reported the error instead of the code that caused the error.&lt;/p&gt;
&lt;p name=&quot;a924&quot; id=&quot;a924&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;What we did about it:&lt;/em&gt; We ended up converting all errors to strings immediately and then using a macro that includes the line and column of the failure in the string. This was verbose but got the job done.&lt;/p&gt;
&lt;p name=&quot;7aaa&quot; id=&quot;7aaa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;How this is being fixed:&lt;/em&gt; The Rust community has apparently come up with several workarounds for this issue. One of them is called &lt;a href=&quot;https://docs.rs/error-chain/*/error_chain/&quot; data-href=&quot;https://docs.rs/error-chain/*/error_chain/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;error-chain&lt;/a&gt; and another one is called &lt;a href=&quot;https://boats.gitlab.io/failure/&quot; data-href=&quot;https://boats.gitlab.io/failure/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;failure&lt;/a&gt;. We didn’t realize these existed and we aren’t sure if there’s a standard approach.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;9b20&quot; id=&quot;9b20&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Many libraries are still early&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;e2ff&quot; id=&quot;e2ff&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Figma’s document format is compressed so our server needed to be able to handle compressed data. We tried using two separate Rust compression libraries that were both used by Servo, Mozilla’s next-generation browser prototype, but both had subtle correctness issues that would have resulted in data loss.&lt;/p&gt;
&lt;p name=&quot;d0de&quot; id=&quot;d0de&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;What we did about it:&lt;/em&gt; We ended up just using a tried-and-true C library instead. Rust is built on LLVM so it’s pretty trivial to call C code from Rust. Everything is just LLVM bitcode in the end!&lt;/p&gt;
&lt;p name=&quot;92ef&quot; id=&quot;92ef&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;How this is being fixed:&lt;/em&gt; The bugs in the affected libraries were reported and have since been fixed.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;2555&quot; id=&quot;2555&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Asynchronous Rust is difficult&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;eb2b&quot; id=&quot;eb2b&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Our multiplayer server talks over WebSockets and makes HTTP requests every so often. We tried writing these request handlers in Rust but hit some concerning ergonomic issues around the &lt;a href=&quot;https://docs.rs/futures/*/futures/&quot; data-href=&quot;https://docs.rs/futures/*/futures/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;futures API&lt;/a&gt; (Rust’s answer for asynchronous programming). The futures API is very efficient but somewhat complex as a result.&lt;/p&gt;
&lt;p name=&quot;ed79&quot; id=&quot;ed79&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For example, chaining operations together is done by constructing a giant nested type that represents the whole operation chain. This means everything for that chain can be allocated in a single allocation, but it means that error messages generate long unreadable errors reminiscent of template errors in C++ (an example is &lt;a href=&quot;https://gist.github.com/evanw/06a672db1897482eadfbbf37ebf9b9ec&quot; data-href=&quot;https://gist.github.com/evanw/06a672db1897482eadfbbf37ebf9b9ec&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;). That combined with other issues such as needing to adapt between different error types and having to solve complex lifetime issues made us decide to abandon this approach.&lt;/p&gt;
&lt;p name=&quot;5582&quot; id=&quot;5582&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;What we did about it:&lt;/em&gt; Instead of going all-in on Rust, we decided to keep the network handling in node.js for now. The node.js process creates a separate Rust child process per document and communicates with it using a message-based protocol over stdin and stdout. All network traffic is passed between processes using these messages.&lt;/p&gt;
&lt;p name=&quot;e4d8&quot; id=&quot;e4d8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;How this is being fixed:&lt;/em&gt; The Rust team is hard at work on &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2033-experimental-coroutines.md&quot; data-href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/2033-experimental-coroutines.md&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;adding async/await to Rust&lt;/a&gt;, which should solve many of these issues by hiding the complexity of futures underneath the language itself. This will allow the “?” error-handling operator that currently only works with synchronous code to also work with asynchronous code, which will cut down on boilerplate.&lt;/p&gt;
&lt;h4 name=&quot;ca72&quot; id=&quot;ca72&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Rust and the future&lt;/h4&gt;
&lt;p name=&quot;aa26&quot; id=&quot;aa26&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;While we hit some speed bumps, I want to emphasize that our experience with Rust was very positive overall. It’s an incredibly promising project with a solid core and a healthy community. I’m confident these issues will end up being solved over time.&lt;/p&gt;
&lt;p name=&quot;a524&quot; id=&quot;a524&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Our multiplayer server is a small amount of performance-critical code with minimal dependencies, so rewriting it in Rust even with the issues that came up was a good tradeoff for us. It enabled us to improve server-side multiplayer editing performance by an order of magnitude and set Figma’s multiplayer server up to scale long into the future.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 02 May 2018 15:35:59 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Rust in production at Figma – Figma Design</og:title>
<og:url>https://blog.figma.com/rust-in-production-at-figma-e10a0ec31929</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*LoKiYs4SoAtkpFufNdD0AA.png</og:image>
<og:description>How Mozilla’s new language dramatically improved our server-side performance</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.figma.com/rust-in-production-at-figma-e10a0ec31929?gi=bff4c112a0fc</dc:identifier>
</item>
<item>
<title>MIT lecturer Ana Bell discusses books to learn CS and programming</title>
<link>https://fivebooks.com/best-books/programming-computer-science-ana-bell/</link>
<guid isPermaLink="true" >https://fivebooks.com/best-books/programming-computer-science-ana-bell/</guid>
<description>&lt;p class=&quot;question&quot;&gt;Before we start on the books you’ve chosen, since we’re going to talk about learning computer science and programming, I’m curious to know about your own learning path. Did you become interested in computers early in your life, or did you make that choice as you were going to university?&lt;/p&gt;
&lt;p&gt;It was pretty early in my life. It was through my dad, who was a software engineer and electrical engineer. When I was about eleven or twelve, he started to build his own computer and had my sister and me help out. Then he showed me the Java programming language, and started teaching me the basics of Java.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;Sounds like a great dad! Then you chose computer science as an undergraduate and graduate program, and from there you went on to a PhD in computational biology?&lt;/p&gt;
&lt;p&gt;That’s right, at Princeton.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;&lt;a href=&quot;https://fivebooks.com/best-books/biology-sean-carroll/&quot;&gt;Biology&lt;/a&gt; is often chosen for computer science-related PhDs, but people don’t always stay in the field. Is that your case or do you still work on genomics?&lt;/p&gt;
&lt;p&gt;I no longer work on genomics. I became interested in the biology applications of computer science as I entered graduate school, so I decided to try to focus on that. But unfortunately I didn’t have the necessary training from undergrad, I had only taken the basic biology courses. So, oftentimes, I was relying on other students in my lab to help out with the domain knowledge part of analysing the machine learning results. I decided that I didn’t want to pursue genomics, but I really enjoyed the teaching that I did in graduate school, so my career path changed.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;Let’s start talking about learning programming. Do you have any opinion on the “learning to code” debate? A few years ago everyone seemed to think that we should all learn how to code. In recent years or even months, other people have started saying “actually, it’s an interesting skill to have, but not as important to have as basic counting, writing and reading”. Do you think it can be beneficial to everyone to learn how to program, or does it remain an advanced skill that is interesting only to people who want to pursue it?&lt;/p&gt;
&lt;p&gt;It’s a skill that everybody should have. Once you can solve a problem in a computational way, it’s easy to automate and get the computer to do the task for you many times really quickly. The programming part is easy to get, there are many resources online that you can find, and you can learn any language by yourself. It’s a skill you could have and use in your everyday life to improve it.&lt;/p&gt;
&lt;p class=&quot;pullquote inline-el&quot;&gt;“Everybody should have the skill of thinking computationally”&lt;/p&gt;
&lt;p&gt;But the skill that we’re actually trying to learn here is the idea of thinking in a logical, or computational way. It’s about learning the syntax of a language. So you have maths, you have English, and to be able to excel in both of those fields you need a different way of thinking. Computer science, or thinking in a computational way, falls somewhere in the middle: you do need to have a logical way of thinking, but there’s also a little bit of creativity that’s involved. Everybody should have the skill of thinking computationally.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;And I guess it’s the goal of programs like &lt;a href=&quot;https://scratch.mit.edu/&quot;&gt;Scratch&lt;/a&gt; to let younger students focus on the computational and algorithmic aspects, and not on the syntax?&lt;/p&gt;
&lt;p&gt;Exactly, for kids the easiest way is to use visual software. You drag and drop something and immediately you see the results and what changes. That’s a great way to teach and an intuitive way to learn.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;You’re teaching undergraduate students, aged around 18 to 20. If we widen this to anybody with an interest in learning how to program, regardless of their age and their higher education background, how hard would you say this is? It’s often said that programming is a skill that lends itself very well to self-teaching, that people who have not studied it at university can pick it up later. Would you agree with that or do you think that pursuing a proper university degree will make you a better programmer?&lt;/p&gt;
&lt;p&gt;If you only want to learn how to program, you can definitely do that by yourself. Even young children can learn how to program. The difficult part that isn’t as easy to grasp on your own is to think in a computational way. It’s tough to understand that an algorithm is just a recipe, and even tougher to come up with new recipes yourself. You need to always expose yourself to that, through coding practice, lectures, chatting with somebody, or visually drawing out ideas. I think a course or something more formal would be necessary to understand algorithms.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;Another common view is that programming is difficult to learn later in life. Do you have any experience with people managing to learn it in their fifties or sixties?&lt;/p&gt;
&lt;p&gt;You can learn it later on in life, but it’s harder. The biological aspect is obvious of course: it becomes harder to learn anything as you grow older. But I run the &lt;a href=&quot;https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11&quot;&gt;online version of the MIT introductory course on edX&lt;/a&gt;, and we’ve got students as young as 11 taking the course. It’s a hard course, they struggle through it but a few of them actually make it and they feel great. And then we’ve got 70-year-olds taking it, and they can also succeed. There aren’t as many young or old students taking the edX course, but with perseverance they can do great. Biology is one thing, but I think success is more about the person.&lt;/p&gt;
&lt;aside class=&quot;ancillary-block -left show-for-medium-up anchor-offset&quot; id=&quot;book-31147&quot;&gt;&lt;div class=&quot;single-book inline -placeholders&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0735611319&quot; id=&quot;book-code-the-hidden-language-of-computer-hardware-and-software&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;336&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_.jpg 336w, https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_-202x300.jpg 202w, https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_-314x467.jpg 314w&quot; sizes=&quot;(max-width: 336px) 100vw, 336px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;buy-button&quot;&gt;Buy&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;show-for-small-only inline-el&quot;&gt;&lt;div class=&quot;row single-book -with-number&quot; readability=&quot;5.7777777777778&quot;&gt;
&lt;div class=&quot;small-6 columns&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0735611319&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;336&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_.jpg 336w, https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_-202x300.jpg 202w, https://fivebooks.com/app/uploads/2018/04/0735611319.01.LZ_-314x467.jpg 314w&quot; sizes=&quot;(max-width: 336px) 100vw, 336px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;small-14 columns&quot; readability=&quot;6.7407407407407&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;
&lt;h2 class=&quot;title&quot;&gt;Code: The Hidden Language of Computer Hardware and Software&lt;/h2&gt;
&lt;h3 class=&quot;author&quot;&gt;Charles Petzold&lt;/h3&gt;
&lt;/p&gt;
&lt;a class=&quot;buy-button&quot; target=&quot;_blank&quot; href=&quot;https://fivebooks.com/buy/0735611319&quot;&gt;Buy&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;question&quot;&gt;Let’s start talking about the books you’ve chosen. The first is &lt;em&gt;Code: The Hidden Language of Computer Hardware and Software&lt;/em&gt; by Charles Petzold. I’d never heard of this one before but it seems very interesting. Is this a nice first step, to check how interested you are in the topic?&lt;/p&gt;
&lt;p&gt;I picked it because it tells you how a computer works. A lot of times, people think that the monitor is the computer. I don’t know how common of a misconception that is, but it is definitely one! This book talks about all the chips and the gates, and it goes from a very low level all the way up. It gets you to use your imagination to virtually build a computer. It’s easy to read, you can lie down on the couch and enjoy it—it’s not so much of a textbook. It demystifies the magic of a computer and what it is. There is no theory involved, rather it presents the components and how they come together.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;So you would recommend it to anyone with an interest in programming, even if they don’t want to start coding themselves?&lt;/p&gt;
&lt;p&gt;Exactly. If you don’t want to learn how to code but still want to learn what a computer is and a little bit of history behind it, this is a very good book. It goes all the way from the chips that make up the computer, up to the peripherals like the screen and keyboard. The details of how we build computers haven’t changed since Petzold wrote the book. But the size of things has changed!&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;And then, after this introductory book on programming, if a reader finds they really are interested and want to learn programming, this would be a good point to choose a language. Is that right?&lt;/p&gt;
&lt;p&gt;Yes, the first book tells you about the hardware. Then if you want to learn how to program, you’ll need to learn a programming language. To do this, you don’t have to use a book, there are many tutorials online.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;For complete beginners, one of the inevitable questions is, ‘which language should I start with?’ Why is Python so often recommended? Ten or fifteen years ago, students of computer science used to start with lower-level languages such as C/C++ or Java, and there has been a big shift in recent years, even though Python has been around since the 1990s. Do you think there’s a particular reason for that?&lt;/p&gt;
&lt;p&gt;The first reason is that more people want to learn how to program, and languages like C/C++ and Java are cumbersome, so the syntax is not as easy to understand. What makes Python interesting and easy to learn is that it’s like a rough translation of English into code. You’re speaking this sort of broken English, and if you read Python code out loud, you can often tell what’s going on, which is nice. In Python you also don’t have to declare types of variables, as you’d have to do in C/C++ or Java; that makes it even more accessible. You don’t have to think about that aspect, the language does it for you. Having eliminated these annoying little things is what makes Python enjoyable to everyone.&lt;/p&gt;
&lt;p class=&quot;pullquote inline-el&quot;&gt;“It’s tough to understand that an algorithm is just a recipe, and even tougher to come up with new recipes yourself”&lt;/p&gt;
&lt;p&gt;The other reason is the push towards data science, and generally working with a lot of data. It makes Python nicer to use, because it’s close to languages like Matlab or R. With Python, you can write easy and quick scripts, without too many pesky language details. A lot of people who are not computer scientists or programmers want to get into this field of data science and analyse the data that’s coming their way. Usability makes Python a very attractive language.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;So Python would definitely be your obvious recommendation, or do you see any alternatives out there for beginners?&lt;/p&gt;
&lt;p&gt;Python is the easiest to learn, and is enough if you’re not going to work in the field of computer science and programming. Beyond that, Java is the other big one that I would recommend, and then C++. You have a lot more control in those languages and your code becomes much more efficient. If you’re dealing with a critical application like flying an airplane, you would not want to write that software in Python!&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;You’ve recently written your own introduction to programming, &lt;em&gt;&lt;a href=&quot;https://fivebooks.com/buy/1617293784&quot;&gt;Get Programming: Learn to code with Python&lt;/a&gt;&lt;/em&gt;&lt;em&gt;.&lt;/em&gt; You must have gathered a lot of insights from your experience teaching hundreds of students at MIT. Is there anything in particular that you do in the book, that is sometimes done wrong when it comes to teaching programming?&lt;/p&gt;
&lt;p&gt;There’s no right or wrong way to teach programming, but one specificity is that I don’t actually get into code before chapter 4. I focus on getting the reader to understand what computer science is, and getting their head around that way of thinking about things.&lt;/p&gt;
&lt;p class=&quot;pullquote inline-el&quot;&gt;“What makes Python interesting and easy to learn is that it’s like a rough translation of English into code”&lt;/p&gt;
&lt;p&gt;One of the earliest chapters is “principles of learning a programming language”, the fact that you only do what you’re told to do. As humans we can infer things; if someone tells you to make dinner, you know that means going to the kitchen, taking pots and pans, using ingredients, etc. But if you said “make dinner” to a computer, it wouldn’t know where to start. So I’m trying to get readers to understand that a computer needs very specific commands, because it doesn’t know how to infer anything. Then the book goes through learning Python, while continuing to stress those points along the way.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;One final question before we delve into the rest of your selection. Of course at Five Books we’re very interested in people’s favourite books, but there are so many resources online to learn programming. Do you think there are still merits to learning computer science with books?&lt;/p&gt;
&lt;p&gt;It’s funny you should say that. When I started thinking about this interview and the books I would choose, my first reaction was that you almost don’t need to read books anymore. It’s much easier and quicker to search online. When you have a question, chances are that several people already asked and answered it on sites like StackOverflow. Books can’t compete with that. What you can get out of programming books is the thought process behind the ideas. Language takes a back seat to the concepts presented, in the sense that ideas in a book should be universal to any programming language. They should be relevant to beginners as well as people who have been programming for 20 years, and as relevant today as when people started programming. I tried to focus on books that present this: not books that are language-specific, but books that present ideas you should be aware of, no matter your programming background and what year this is.&lt;/p&gt;
&lt;aside class=&quot;ancillary-block -left show-for-medium-up anchor-offset&quot; id=&quot;book-31148&quot;&gt;&lt;div class=&quot;single-book inline -placeholders&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0132350882&quot; id=&quot;book-clean-code-a-handbook-of-agile-software-craftsmanship&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;387&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_.jpg 387w, https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_-232x300.jpg 232w, https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_-314x406.jpg 314w&quot; sizes=&quot;(max-width: 387px) 100vw, 387px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;buy-button&quot;&gt;Buy&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;show-for-small-only inline-el&quot;&gt;&lt;div class=&quot;row single-book -with-number&quot; readability=&quot;5.7662337662338&quot;&gt;
&lt;div class=&quot;small-6 columns&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0132350882&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;387&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_.jpg 387w, https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_-232x300.jpg 232w, https://fivebooks.com/app/uploads/2018/04/0132350882.01.LZ_-314x406.jpg 314w&quot; sizes=&quot;(max-width: 387px) 100vw, 387px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;small-14 columns&quot; readability=&quot;6.7272727272727&quot;&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;
&lt;h2 class=&quot;title&quot;&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/h2&gt;
&lt;h3 class=&quot;author&quot;&gt;Robert C. Martin&lt;/h3&gt;
&lt;/p&gt;
&lt;a class=&quot;buy-button&quot; target=&quot;_blank&quot; href=&quot;https://fivebooks.com/buy/0132350882&quot;&gt;Buy&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;question&quot;&gt;Your second book is &lt;em&gt;Clean Code&lt;/em&gt; by Robert C. Martin. Its subtitle is &lt;em&gt;A Handbook of Agile Software Craftsmanship&lt;/em&gt;. Can you tell us what it’s about?&lt;/p&gt;
&lt;p&gt;This book is going to show you how to write code that is readable by yourself in the future, or by somebody else. Martin wrote it in a very approachable way, and what I liked when I read it is that it starts talking about code right away. It actually starts with the most basic thing, which is how to name objects in your code. When you’re programming, you’re working with objects all the time; so to make your code readable, you need to use proper names for your variables. That’s the first chapter, and this is often overlooked so I was happy to see that.&lt;/p&gt;
&lt;div class=&quot;inline-box -newsletter inline-el&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;explanation&quot;&gt;Get the weekly Five Books newsletter&lt;/p&gt;

&lt;/div&gt;
&lt;p&gt;The tone of the book is quite conversational. Again, you can sit on the couch and read it; you don’t need to code. You can actually enjoy it if you don’t know how to program at all. Each chapter begins with a little scenario, often a conversation between two people, and it sets the scene for what the chapter will be talking about. That’s very helpful, and it makes it a very nice book to sit down with and read through.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;This idea of readable code is a traditional piece of advice, especially from teachers to students. But readability, and especially commenting, are often seen as one of the most boring parts of programming. How do you convince your own students that it’s not a waste of time and that clean code will be valuable to both other people who read their programs, but also to their future self?&lt;/p&gt;
&lt;p&gt;Well, I still haven’t been able to convince my students that it’s important! I don’t know if it’s possible. Sometimes even I don’t do it and regret it later. It’s a matter of not doing it, and then coming back to your code weeks later and not remembering what you did, and learning from those experiences! Two of the books I chose focus on making your code readable; so yes, it’s very important.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;The idea that there can be such a thing as “code craftsmanship” is often difficult to grasp for beginners or people who don’t program. Can you explain what is usually understood—or your own definition—of what well-crafted code is?&lt;/p&gt;
&lt;p&gt;First, well-crafted code is readable code. This means having comments that describe the thought process and what the code is trying to do—not how it’s doing it. Good variable names would also fall under that category. The other part is organising your code. That means using the right amount of classes and functions, and using them in the right away. You don’t want to write too many and over-engineer your code, but you shouldn’t write too few either so that the few you have are complex and not easy to understand. You want to have the right amount to make them useful and reusable.&lt;/p&gt;
&lt;p&gt;Those are the two main conditions to perfectly-crafted code. The balance between them is something that you can’t learn on you own so well. That’s where you would need a lot of practice, or working with somebody else, or reading somebody else’s code. Those are great ways to discover bad pieces of code, but also programs that you’ll find perfect and completely understandable. This craftsmanship part is where the creativity comes into programming, what makes it different from being only about math. It’s closer to learning English in this way.&lt;/p&gt;
&lt;aside class=&quot;ancillary-block -left show-for-medium-up anchor-offset&quot; id=&quot;book-31149&quot;&gt;&lt;div class=&quot;single-book inline -placeholders&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0735619670&quot; id=&quot;book-code-complete-a-practical-handbook-of-software-construction&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;410&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_.jpg 410w, https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_-246x300.jpg 246w, https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_-314x383.jpg 314w&quot; sizes=&quot;(max-width: 410px) 100vw, 410px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;buy-button&quot;&gt;Buy&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;show-for-small-only inline-el&quot;&gt;&lt;div class=&quot;row single-book -with-number&quot; readability=&quot;5.780487804878&quot;&gt;
&lt;div class=&quot;small-6 columns&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0735619670&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;410&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_.jpg 410w, https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_-246x300.jpg 246w, https://fivebooks.com/app/uploads/2018/04/0735619670.01.LZ_-314x383.jpg 314w&quot; sizes=&quot;(max-width: 410px) 100vw, 410px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;small-14 columns&quot; readability=&quot;6.7439024390244&quot;&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;
&lt;h2 class=&quot;title&quot;&gt;Code Complete: A Practical Handbook of Software Construction&lt;/h2&gt;
&lt;h3 class=&quot;author&quot;&gt;Steve McConnell&lt;/h3&gt;
&lt;/p&gt;
&lt;a class=&quot;buy-button&quot; target=&quot;_blank&quot; href=&quot;https://fivebooks.com/buy/0735619670&quot;&gt;Buy&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;question&quot;&gt;Your third book is &lt;em&gt;Code Complete: A Practical Handbook of Software Construction&lt;/em&gt;, by Steve McConnell. Is this going further into the same idea, or does this book add something different?&lt;/p&gt;
&lt;p&gt;It’s a pretty long book. It’s like &lt;em&gt;Clean Code&lt;/em&gt; but it goes further. &lt;em&gt;Clean Code&lt;/em&gt; gives examples in Java; this one gives examples in several different languages, to emphasize that the concepts it’s teaching aren’t language-specific and should be applicable to any language. It doesn’t teach you the code, it teaches you the software construction: commenting, classes, debugging, refactoring…&lt;/p&gt;
&lt;p&gt;While &lt;em&gt;Clean Code&lt;/em&gt; teaches best practices to individuals who are writing code for themselves, &lt;em&gt;Code Complete&lt;/em&gt; is for people working in industry, writing software for companies, which means they’re giving their code to other people. It even has little checklists at key points in the book; if you are in industry, you can make sure that your code is readable and debugged by going through these checklists and making sure you’re touching upon all aspects. So it’s definitely more geared toward industry. If you have an interest in going into that, this would be the book to read. It’s a pretty old book, but it’s still very relevant. I remember my dad reading it.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;Do you think that the concepts presented in these two books are what makes you go from someone who is able to program, to someone who programs very well?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Code Complete&lt;/em&gt; goes a step beyond cleaning your code, and makes sure that it is also deployable, or works at a larger scale in the context of a company or an industry. But having clean code would be enough to be a pretty good programmer.&lt;/p&gt;
&lt;aside class=&quot;ancillary-block -left show-for-medium-up anchor-offset&quot; id=&quot;book-31150&quot;&gt;&lt;div class=&quot;single-book inline -placeholders&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/032157351X&quot; id=&quot;book-algorithms&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;361&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_.jpg 361w, https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_-217x300.jpg 217w, https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_-314x435.jpg 314w&quot; sizes=&quot;(max-width: 361px) 100vw, 361px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;buy-button&quot;&gt;Buy&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;show-for-small-only inline-el&quot;&gt;&lt;div class=&quot;row single-book -with-number&quot; readability=&quot;5.6170212765957&quot;&gt;
&lt;div class=&quot;small-6 columns&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/032157351X&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;361&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_.jpg 361w, https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_-217x300.jpg 217w, https://fivebooks.com/app/uploads/2018/04/032157351X.01.LZ_-314x435.jpg 314w&quot; sizes=&quot;(max-width: 361px) 100vw, 361px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;small-14 columns&quot; readability=&quot;6.5531914893617&quot;&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;
&lt;h2 class=&quot;title&quot;&gt;Algorithms&lt;/h2&gt;
&lt;h3 class=&quot;author&quot;&gt;Robert Sedgewick &amp;amp; Kevin Wayne&lt;/h3&gt;
&lt;/p&gt;
&lt;a class=&quot;buy-button&quot; target=&quot;_blank&quot; href=&quot;https://fivebooks.com/buy/032157351X&quot;&gt;Buy&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;question&quot;&gt;Let’s go on to your fourth book, on a different topic: it’s called &lt;em&gt;Algorithms&lt;/em&gt;, by Robert Sedgewick and Kevin Wayne. This is an exhaustive book on algorithms. What can you tell us about them?&lt;/p&gt;
&lt;p&gt;The book presents some very basic algorithms, using Java. It’s written by two authors I’ve worked with in grad school at Princeton. There are two main books on algorithms used in universities, and this is one of them. They both present the same important algorithms that you’ll need to know, but this one does it in a much more approachable way. Every algorithm you see in the book is also implemented in Java, so if you want to run it, you can copy the code and execute it yourself. I like that it’s so practical. It doesn’t bog you down in mathematical terminology and proofs, which I also like.&lt;/p&gt;
&lt;p&gt;I wouldn’t recommend sitting on the couch with this one, because you’ll need to be a bit more proactive. But as far as algorithm books go, this one is pretty approachable. I would say it’s also helpful if you’re going to go for programming interviews. They usually ask you to either write some algorithm or piece of code, and reading this book beforehand would be very useful to get ready.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;The word “algorithm” seems to have taken on a huge significance in the last few years, in the media discourse about people’s fears of black boxes and manipulation. I find this very curious because when you learn computer science, algorithms are actually anything but black boxes. They’re very clear, step-by-step programs where you go from a problem to a detailed solution. Do you think that educating people about what algorithms are would be beneficial, and make us less scared of them?&lt;/p&gt;
&lt;p&gt;That’s a great point. Algorithms sound like something mysterious, but they’re not. They’re recipes, with a series of steps to go from an input to an output. It’s very simple, and there is nothing mysterious or malicious about that. If you’re going to learn computer science, or if you want to start programming, you should learn something about an algorithm at some point. And even the general public should know that there’s nothing crazy going on with algorithms, even though that word is being thrown around without much meaning attached to it. It’s very straightforward, in the same way that you would bake using a recipe, or build a piece of Ikea furniture.&lt;/p&gt;
&lt;aside class=&quot;ancillary-block -left show-for-medium-up anchor-offset&quot; id=&quot;book-31151&quot;&gt;&lt;div class=&quot;single-book inline -placeholders&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0262162091&quot; id=&quot;book-types-and-programming-languages&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;361&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_.jpg 361w, https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_-217x300.jpg 217w, https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_-314x435.jpg 314w&quot; sizes=&quot;(max-width: 361px) 100vw, 361px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;buy-button&quot;&gt;Buy&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;aside class=&quot;show-for-small-only inline-el&quot;&gt;&lt;div class=&quot;row single-book -with-number&quot; readability=&quot;5.6785714285714&quot;&gt;
&lt;div class=&quot;small-6 columns&quot;&gt;&lt;a href=&quot;https://fivebooks.com/buy/0262162091&quot; target=&quot;_blank&quot;&gt;&lt;img width=&quot;361&quot; height=&quot;500&quot; src=&quot;https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_.jpg&quot; class=&quot;cover wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_.jpg 361w, https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_-217x300.jpg 217w, https://fivebooks.com/app/uploads/2018/04/0262162091.01.LZ_-314x435.jpg 314w&quot; sizes=&quot;(max-width: 361px) 100vw, 361px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;small-14 columns&quot; readability=&quot;6.625&quot;&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;
&lt;h2 class=&quot;title&quot;&gt;Types and Programming Languages&lt;/h2&gt;
&lt;h3 class=&quot;author&quot;&gt;Benjamin C. Pierce&lt;/h3&gt;
&lt;/p&gt;
&lt;a class=&quot;buy-button&quot; target=&quot;_blank&quot; href=&quot;https://fivebooks.com/buy/0262162091&quot;&gt;Buy&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;question&quot;&gt;Finally, your fifth book is &lt;em&gt;Types and Programming Languages&lt;/em&gt;, by Benjamin C. Pierce. This seems to delve deeper into some of the mathematical theory behind programming. Can you try to explain to our readers what type theory is, and why it’s important to understand it?&lt;/p&gt;
&lt;p&gt;This final book is pretty advanced. It’s about programming language design. The best way to explain it is to draw a parallel between the physical world and programming languages. If you think about the physical world around us—objects, things in nature, etc.—we have come up with mathematics to help us describe what’s happening, in a systematic and logical way. Computer science is the same thing, but for what’s going on inside a computer. And around this idea of computations, you can build type systems. Type systems are the maths we’ve come up with; they help us describe computations or what’s going in a program, what operations are happening. They help us reason about what a program is doing, and often help programmers avoid mistakes when writing code. For example a type system might be able to say: ‘you’re trying to multiply a word by a decimal number, that doesn’t make any sense.’&lt;/p&gt;
&lt;p class=&quot;pullquote inline-el&quot;&gt;“You do need a strong grasp of maths, but not the traditional maths people think of ”&lt;/p&gt;
&lt;p&gt;It’s not a book for beginners, but it’s a good book if you’re interested in the theory behind programming languages. In the first book you’ve learned about the hardware, and in the next books you’ve learned about good code, and then algorithms. Now you can learn about programming languages themselves: how to write one, and how they do what they’re supposed to do.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;This leads me to another aspect we haven’t talked about yet: people often say that to study computer science, you need to be good at maths. Do you still think that’s the case today, when computers hide so much of the computational theory behind layers of abstraction, or do you think that to program well, you still need a strong understanding of maths?&lt;/p&gt;
&lt;p&gt;That’s a great question. You do need a strong grasp of maths, but not the traditional maths that people think of. When people think of maths, they think of operations, adding things, doing calculations. The mathematical grasp that you need is more on the logical side: thinking about binary choices—something that’s ‘true’ or ‘false’. This logical way of thinking, which is the way a computer thinks, is also a branch of mathematics. Unfortunately you only study it in undergraduate education, but you encounter it in life in a lot of ways. When you’re doing an online quiz where you follow a flowchart to find what kind of dog you are, you’re using logic to figure out something. That kind of maths is very useful, and that’s what gives you the mind of a programmer. But you have to change your thought process to think of statements in a programming language instead of pictures of dogs!&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;To come back to computer science in general, it’s a field that is infamous for its lack of diversity, with very low proportions of women and people of colour. Have you noticed any improvement in the last few years? Your own role in teaching computer science to undergraduate students seems like a step in the right direction.&lt;/p&gt;
&lt;p&gt;There’s definitely improvement at many levels of education. A lot of women are taking my introductory course in computer science, because they recognise that it’s a useful skill to have. In my class we have about 40% women, which is pretty high. Our staff is somewhat large—we have 15 teaching assistants—and the majority of them are actually women. A lot of times, female students will take the course, they’ll love it, they’ll major in computer science, and towards the end they’ll want to give back. And I love that, because they often want to be teaching assistants, and they’re very dedicated and they do a very good job. And because 80% of our staff is female, then that cycle starts: the students taking the class see that the majority of TAs are women, so they think ‘I can do this too!’, and that helps push rates even higher. Of course the push towards general computer science education in high school will definitely help as well.&lt;/p&gt;
&lt;p class=&quot;question&quot;&gt;That’s a great transition to my last question: what piece of advice would you give to high school students thinking of starting a career in computer science?&lt;/p&gt;
&lt;p&gt;I would say just go for it. Pick a language, stick with it, and learn as much as you can. It doesn’t matter what language, even if you start with a visual language like Scratch, that’s awesome. It starts to get you thinking about computer science, and the logical way that computers think. That’s a huge step towards succeeding in computer science post-secondary school.&lt;/p&gt;

&lt;div class=&quot;update&quot; readability=&quot;8.2070484581498&quot;&gt;
&lt;p&gt;&lt;em&gt;Five Books aims to keep its book recommendations and interviews up to date. If you are the interviewee and would like to update your choice of books (or even just what you say about them) please email us at &lt;a href=&quot;mailto:editor@fivebooks.com&quot;&gt;editor@fivebooks.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;social-buttons&quot;&gt;
&lt;div class=&quot;row&quot;&gt;

&lt;div class=&quot;small-5 medium-1 columns end&quot;&gt;
&lt;div id=&quot;email-this&quot; class=&quot;reveal-modal email-dialog tiny&quot; data-reveal=&quot;&quot; aria-labelledby=&quot;share-via-email&quot; aria-hidden=&quot;true&quot; role=&quot;dialog&quot; readability=&quot;6&quot;&gt;
&lt;h2 id=&quot;share-via-email&quot; class=&quot;title&quot;&gt;Email this interview&lt;/h2&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;inline-box -donate inline-el&quot;&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;columns&quot;&gt;
&lt;p class=&quot;explanation&quot;&gt;Support Five Books&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot; readability=&quot;9.3201892744479&quot;&gt;
&lt;div class=&quot;columns&quot; readability=&quot;13.735015772871&quot;&gt;
&lt;p class=&quot;also&quot;&gt;Five Books interviews are expensive to produce. If you've enjoyed this interview, please support us by donating a small amount, or by buying some of our most recommended books from &lt;a target=&quot;_blank&quot; href=&quot;https://www.amazon.com/shop/five_books&quot;&gt;Amazon&lt;/a&gt;. Since we are enrolled in their affiliate program, we receive a small percentage of any product you buy, at no extra cost to you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 02 May 2018 14:14:24 +0000</pubDate>
<dc:creator>sharjeelsayed</dc:creator>
<og:type>article</og:type>
<og:title>The Best Books on Computer Science and Programming | Five Books</og:title>
<og:description>The best books on programming and computer science, as recommended by Ana Bell, lecturer in the Electrical Engineering and Computer Science Department at the Massachusetts Institute of Technology.</og:description>
<og:url>https://fivebooks.com/best-books/programming-computer-science-ana-bell/</og:url>
<og:image>https://fivebooks.com/best-books/programming-computer-science-ana-bell/shareimage.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fivebooks.com/best-books/programming-computer-science-ana-bell/</dc:identifier>
</item>
<item>
<title>Both in rich and poor countries, universal health care brings huge benefits</title>
<link>https://www.economist.com/news/special-report/21740873-argument-universal-health-care-clear-getting-there-difficult-says-john</link>
<guid isPermaLink="true" >https://www.economist.com/news/special-report/21740873-argument-universal-health-care-clear-getting-there-difficult-says-john</guid>
<description>&lt;p&gt;IN MAY 2014 DOZENS of mourners attended the funeral of a healer in the Kailahun District of eastern Sierra Leone. She had died after tending to people struck by fever, vomiting and bloody diarrhoea. As women ritually washed her corpse, 14 of them contracted the virus that had killed her and many who had sought her remedies. After the Ebola virus had swept through west Africa in the worst epidemic of the 21st century so far, as many as 365 deaths were traced to that single burial. In all, the outbreak killed 11,310 people.&lt;/p&gt;
&lt;p&gt;When Bailor Barrie, a Sierra Leonean doctor, heard about the first cases of Ebola in his country, he knew it would spread quickly and widely. “Sierra Leone is a health desert,” he says. “No surveillance; no public health; no health system.” Life expectancy was already just 50 years, and an eighth of children died before their fifth birthday. Most clinics offered no prospect of affordable, accurate diagnosis and effective treatment, so few people trusted them when they became ill. Before the outbreak the country had just one doctor for every 50,000 people. (America has one for about every 400; China one for 275.) Then 7% of Sierra Leone’s health workers died from Ebola during the epidemic.&lt;/p&gt;
&lt;div class=&quot;newsletter-form newsletter-form--inline&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;newsletter-form__message&quot; readability=&quot;7&quot;&gt;&lt;strong&gt;Get our daily newsletter&lt;/strong&gt;
&lt;p&gt;Upgrade your inbox and get our Daily Dispatch and Editor's Picks.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;That epidemic was an avoidable tragedy. A slow international response, especially by the World Health Organisation (WHO, the UN’s Geneva-based public-health body), and inadequate domestic health systems proved a lethal mix. Probably more people died as an indirect result of the outbreak than from the virus itself. The number of children treated for malaria in Sierra Leone in September 2014 was 39% down on four months earlier because health workers were overwhelmed.&lt;/p&gt;
&lt;p&gt;Writing in April 2015, Bill Gates, whose family foundation spends more on health aid than most rich countries do, expressed the hope that Ebola would serve as a wake-up call for public health. Since then the World Bank has launched a facility that will help meet the cost of responding to a future pandemic. Tedros Adhanom Ghebreyesus, the Ethiopian who took over as boss of the WHO in July, receives daily briefings on disease outbreaks. That did not happen under his immediate predecessor, Dr Margaret Chan, who occupied the post for ten years.&lt;/p&gt;
&lt;p&gt;But Ebola has also encouraged a broader rethink of the approach to global health, shifting the emphasis from trying to eradicate single diseases to building health systems that are resilient to diverse threats and less reliant on aid. One of its aims is to reduce the number of people pushed into poverty by having to pay for health care. Central to this effort is the embrace of universal health care, the idea that everyone should be able to get the care they need without facing financial ruin. All countries have committed themselves to getting there by 2030 as part of the UN’s “sustainable development goals”, a voluminous set of targets agreed on in 2015. That commitment marks a new chapter in global health. Even though recent years have seen remarkable improvements—child deaths, for example, fell from 10m in 2000 to 6m in 2015—much remains to be done.&lt;/p&gt;
&lt;div class=&quot;latest-updates-panel__container latest-updates-panel__container--blog-post&quot;&gt;

&lt;ul class=&quot;latest-updates-panel__body&quot;&gt;&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Police have used genealogy to make an arrest in a murder case&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;A brutal attack in Afghanistan is a grisly reminder of the dangers reporters face&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Gun politics after Parkland&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;The world’s first neighbourhood built “from the internet up”&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Environmentalist art before there was an “environment”&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;li class=&quot;latest-updates-panel-card__wrapper&quot; readability=&quot;-2&quot;&gt;
&lt;article class=&quot;latest-updates-panel__article-link&quot; readability=&quot;27&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;latest-updates-panel-card__title&quot;&gt;Why “Powellism” versus “Enochonomics” tears liberals apart&lt;/h3&gt;
&lt;/p&gt;

&lt;/article&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;A report published in December by the World Bank and the WHO found that at least half the world’s population does not have access to what it called “essential” health services, such as antenatal care, basic treatment for malaria, HIV and tuberculosis, and checks for high blood pressure. Another study, in 2015, for the &lt;em class=&quot;Italic&quot;&gt;Lancet&lt;/em&gt;, a medical journal, estimated that 5bn people around the world cannot get basic surgery such as a caesarean section, a laparotomy (an incision into the abdominal wall) or a repair for a fractured bone.&lt;/p&gt;
&lt;p&gt;According to the paper from the World Bank and the WHO, 800m people spend more than 10% of their household budget on health care, and nearly 100m are pushed into extreme poverty (defined as having less than $1.90 a day to live on) every year by out-of-pocket health expenses. This chimes with smaller-scale studies. A survey last year of patients at a government hospital in Uganda discovered that 53% of their households had to borrow money to pay for treatment and 21% sold possessions. About 17% lost their job.&lt;/p&gt;
&lt;div class=&quot;component-image blog-post__image&quot;&gt;&lt;img src=&quot;https://cdn.static-economist.com/sites/default/files/images/print-edition/20180428_SRC133_0.png&quot; alt=&quot;&quot; class=&quot;component-image__img blog-post-article-image&quot; srcset=&quot;/sites/default/files/imagecache/200-width/images/print-edition/20180428_SRC133_0.png 200w, /sites/default/files/imagecache/300-width/images/print-edition/20180428_SRC133_0.png 300w, /sites/default/files/imagecache/400-width/images/print-edition/20180428_SRC133_0.png 400w, /sites/default/files/imagecache/640-width/images/print-edition/20180428_SRC133_0.png 640w, /sites/default/files/imagecache/800-width/images/print-edition/20180428_SRC133_0.png 800w, /sites/default/files/imagecache/1000-width/images/print-edition/20180428_SRC133_0.png 1000w, /sites/default/files/imagecache/1200-width/images/print-edition/20180428_SRC133_0.png 1200w, /sites/default/files/imagecache/1280-width/images/print-edition/20180428_SRC133_0.png 1280w, /sites/default/files/imagecache/1600-width/images/print-edition/20180428_SRC133_0.png 1600w&quot; sizes=&quot;(min-width: 600px) 640px, calc(100vw - 20px)&quot;/&gt;&lt;/div&gt;
&lt;p&gt;It used to be common even for people in rich countries to have to choose between financial or physical health. When Britain’s National Health Service, the world’s first universal-health-care system free at the point of use, was set up in 1948, households received leaflets telling them that the service would “relieve your money worries in time of illness”. Since then many more countries have followed suit with comprehensive health-insurance schemes (see chart).&lt;/p&gt;
&lt;p&gt;As countries get richer, they spend more on health. This is known as “the first law of health economics”. As a share of GDP, the developed world spends roughly twice as much on health as developing countries do. But this does not mean that once the world gets richer, universal health care will necessarily follow. Nor are rising incomes the only cause of improving health. Wealth and health are intertwined, but only up to a point.&lt;/p&gt;
&lt;div class=&quot;component-image blog-post__image&quot;&gt;&lt;img src=&quot;https://cdn.static-economist.com/sites/default/files/images/print-edition/20180428_SRC137_0.png&quot; alt=&quot;&quot; class=&quot;component-image__img blog-post-article-image&quot; srcset=&quot;/sites/default/files/imagecache/200-width/images/print-edition/20180428_SRC137_0.png 200w, /sites/default/files/imagecache/300-width/images/print-edition/20180428_SRC137_0.png 300w, /sites/default/files/imagecache/400-width/images/print-edition/20180428_SRC137_0.png 400w, /sites/default/files/imagecache/640-width/images/print-edition/20180428_SRC137_0.png 640w, /sites/default/files/imagecache/800-width/images/print-edition/20180428_SRC137_0.png 800w, /sites/default/files/imagecache/1000-width/images/print-edition/20180428_SRC137_0.png 1000w, /sites/default/files/imagecache/1200-width/images/print-edition/20180428_SRC137_0.png 1200w, /sites/default/files/imagecache/1280-width/images/print-edition/20180428_SRC137_0.png 1280w, /sites/default/files/imagecache/1600-width/images/print-edition/20180428_SRC137_0.png 1600w&quot; sizes=&quot;(min-width: 600px) 640px, calc(100vw - 20px)&quot;/&gt;&lt;/div&gt;
&lt;p&gt;In “The Great Escape”, a book on the historical relationship between health and growth, Angus Deaton, a Nobel laureate in economics, explains that a country’s GDP per person is linked to its life expectancy (see chart). On average, as countries’ GDP per person rises, their people live longer. Higher incomes mean they have more money to buy food and medicines, and governments are better able to afford public-health measures such as sanitation. But life expectancy over time has increased even more than implied by rising incomes. For Mr Deaton this is evidence that income is not the only factor; the application of knowledge also matters. “There are ways of ensuring good health at low incomes, and ways of spending large sums of money to no purpose,” he says. America is a case in point.&lt;/p&gt;
&lt;p class=&quot;xhead&quot;&gt;You don’t have to be rich&lt;/p&gt;
&lt;p&gt;This special report will argue that universal health care is both desirable and possible, even in low-income countries. Some countries achieved near-universal coverage when they were still relatively poor. Japan reached 80% when its GDP per person was about $5,500 a year. More recently, several developing countries have shown that low income and comprehensive health care are not mutually exclusive. Thailand, for example, has a universal health-insurance programme and a life expectancy close to that in the OECD club of mostly rich countries. In both Chile and Costa Rica income per person is roughly 25% of that in the United States and health spending per person just 12%, but life expectancy in all three countries is about the same. Rwanda’s GDP per person is only $750, but its health scheme covers more than 90% of its population and infant mortality has halved in a decade. “Ebola would not have happened there,” says Dr Barrie.&lt;/p&gt;
&lt;p&gt;This may start off a virtuous cycle. It is becoming increasingly clear that better health can lead to higher incomes, as well as the other way around. Economists at the World Bank used to call spending on health a “social overhead”, but now they believe that it speeds up growth, says Timothy Evans, one of its senior directors. A study in 2011 carried out by the University of St Gallen looked at 12 European countries between 1820 and 2010 and found a close link between the expansion of health care, a fall in mortality rates and growth in GDP per person. Another study found that in Britain as much as 30% of the growth in GDP between 1780 and 1979 may have been due to better health and nutrition. A paper by two leading economists, Dean Jamison and Lawrence Summers, found that 11% of the income gains in developing countries between 1970 and 2000 were attributable to lower adult-mortality rates.&lt;/p&gt;
&lt;p&gt;Smaller-scale studies support these historical analyses. Improving health, for example through malaria-eradication efforts, is associated with children receiving more schooling and going on to earn more money in adulthood. And lower out-of-pocket health costs reduce inefficiencies in purchasing health care and can encourage consumer spending. Clearing land of disease-carrying parasites can open it up to farming, mining and other forms of development.&lt;/p&gt;
&lt;p&gt;Pioneering countries and new research have added to the argument in favour of universal health care. So, too, has the growing realisation among the biggest institutions in global health that eliminating specific diseases is hard in places where basic health systems are dysfunctional. Indeed, single-disease programmes can make the problem worse by setting up parallel structures or diverting health workers. Mr Gates has recently called for more investment in primary health care, a core part of achieving full coverage, to improve the outcomes of his foundation’s schemes.&lt;/p&gt;
&lt;p&gt;Making a commitment to universal health care is the easy bit. The hard part, for both governments and international organisations, is to find ways to make the best use of limited resources and then get on with reform. That task is made even tougher by shifts in the burden of disease.&lt;/p&gt;
&lt;div class=&quot;blog-post__siblings-list-aside&quot;&gt;&lt;span class=&quot;blog-post__side-flytitle&quot;&gt;Special report: An affordable necessity&lt;/span&gt;&lt;span class=&quot;blog-post__side-text&quot;&gt;More in this special report:&lt;/span&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 02 May 2018 14:11:55 +0000</pubDate>
<dc:creator>nopinsight</dc:creator>
<og:description>The argument for universal health care is clear. But getting there is difficult, says John McDermott</og:description>
<og:image>https://cdn.static-economist.com/sites/default/files/images/print-edition/20180428_SRP007_1.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.economist.com/news/special-report/21740873-argument-universal-health-care-clear-getting-there-difficult-says-john</og:url>
<og:title>Both in rich and poor countries, universal health care brings huge benefits</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.economist.com/news/special-report/21740873-argument-universal-health-care-clear-getting-there-difficult-says-john</dc:identifier>
</item>
<item>
<title>Jupyter Receives the ACM Software System Award</title>
<link>https://blog.jupyter.org/jupyter-receives-the-acm-software-system-award-d433b0dfe3a2</link>
<guid isPermaLink="true" >https://blog.jupyter.org/jupyter-receives-the-acm-software-system-award-d433b0dfe3a2</guid>
<description>&lt;p name=&quot;cce5&quot; id=&quot;cce5&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;It is our pleasure to announce that Project Jupyter has been &lt;a href=&quot;https://awards.acm.org/about/2017-technical-awards&quot; data-href=&quot;https://awards.acm.org/about/2017-technical-awards&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;awarded&lt;/a&gt; the 2017 &lt;a href=&quot;https://awards.acm.org/software-system&quot; data-href=&quot;https://awards.acm.org/software-system&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ACM Software System Award&lt;/a&gt;, a significant honor for the project. We are humbled to join an illustrious list of projects that contains major highlights of computing history, including &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix&quot; data-href=&quot;https://en.wikipedia.org/wiki/Unix&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Unix&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/TeX&quot; data-href=&quot;https://en.wikipedia.org/wiki/TeX&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;TeX&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/S_%28programming_language%29&quot; data-href=&quot;https://en.wikipedia.org/wiki/S_(programming_language)&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;S&lt;/a&gt; (R’s predecessor), &lt;a href=&quot;https://en.wikipedia.org/wiki/World_Wide_Web&quot; data-href=&quot;https://en.wikipedia.org/wiki/World_Wide_Web&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the Web&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/NCSA_Mosaic&quot; data-href=&quot;https://en.wikipedia.org/wiki/NCSA_Mosaic&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Mosaic&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_%28programming_language%29&quot; data-href=&quot;https://en.wikipedia.org/wiki/Java_(programming_language)&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Java&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/INGRES&quot; data-href=&quot;https://en.wikipedia.org/wiki/INGRES&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;INGRES&lt;/a&gt; (modern databases) and &lt;a href=&quot;https://en.wikipedia.org/wiki/ACM_Software_System_Award&quot; data-href=&quot;https://en.wikipedia.org/wiki/ACM_Software_System_Award&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;more&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;25b5&quot; id=&quot;25b5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Officially, the recipients of the award are the fifteen members of the Jupyter steering council as of November 2016, the date of nomination (listed in chronological order of joining the project): Fernando Pérez, Brian Granger, Min Ragan-Kelley, Paul Ivanov, Thomas Kluyver, Jason Grout, Matthias Bussonnier, Damián Avila, Steven Silvester, Jonathan Frederic, Kyle Kelley, Jessica Hamrick, Carol Willing, Sylvain Corlay and Peter Parente.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*wU7C4LRdnyFC5a09B-LMrA.jpeg&quot; data-width=&quot;1594&quot; data-height=&quot;618&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*wU7C4LRdnyFC5a09B-LMrA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*wU7C4LRdnyFC5a09B-LMrA.jpeg&quot;/&gt;&lt;/div&gt;
A tiny subset of the Jupyter contributors and users that made Jupyter possible — Biannual development meeting, 2016, LBNL.
&lt;p name=&quot;5ade&quot; id=&quot;5ade&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This is the largest team ever to receive this award, and we are delighted that the ACM was willing to recognize that modern collaborative projects are created by large teams, and should be rewarded as such. Still, we emphasize that Jupyter is made possible by many more people than these fifteen recipients. This award honors the large group of contributors and users that has made IPython and Jupyter what they are today. The recipients are stewards of this common good, and it is our responsibility to help this broader community continue to thrive.&lt;/p&gt;
&lt;p name=&quot;2928&quot; id=&quot;2928&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Below, we’ll summarize the story of our journey, including the technical and human sides of this effort. You can learn more about Jupyter from our &lt;a href=&quot;https://jupyter.org&quot; data-href=&quot;https://jupyter.org&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;website&lt;/a&gt;, and you can meet the vibrant Jupyter community by attending &lt;a href=&quot;https://conferences.oreilly.com/jupyter/jup-ny&quot; data-href=&quot;https://conferences.oreilly.com/jupyter/jup-ny&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;JupyterCon&lt;/a&gt;, August 21–25, 2018, in New York City.&lt;/p&gt;
&lt;h3 name=&quot;b5f4&quot; id=&quot;b5f4&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;In the beginning&lt;/h3&gt;
&lt;p name=&quot;0858&quot; id=&quot;0858&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Project Jupyter was officially &lt;a href=&quot;https://youtu.be/JDrhn0-r9Eg?t=4m15s&quot; data-href=&quot;https://youtu.be/JDrhn0-r9Eg?t=4m15s&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;unveiled&lt;/a&gt; with its current name in 2014 at the SciPy scientific Python conference. However, Jupyter’s roots date back nearly 17 years to when Fernando Pérez &lt;a href=&quot;https://mail.python.org/pipermail/python-list/2001-December/093408.html&quot; data-href=&quot;https://mail.python.org/pipermail/python-list/2001-December/093408.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;announced&lt;/a&gt; his open source IPython project as a graduate student in 2001. IPython provided tools for interactive computing in the Python language (the ‘I’ is for ‘Interactive’), with an emphasis on the exploratory workflow of scientists: run some code, plot and examine some results, think about the next step based on these outcomes, and iterate. IPython itself was &lt;a href=&quot;https://gist.github.com/fperez/1579699&quot; data-href=&quot;https://gist.github.com/fperez/1579699&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;born&lt;/a&gt; out of merging an initial prototype with Nathan Gray’s LazyPython and Janko Hauser’s IPP, inspired by a &lt;a href=&quot;http://www.onlamp.com/pub/a/python/2001/10/11/pythonnews.html&quot; data-href=&quot;http://www.onlamp.com/pub/a/python/2001/10/11/pythonnews.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;2001 O’Reilly Radar post&lt;/a&gt; — collaboration has been part of our DNA since day one.&lt;/p&gt;
&lt;p name=&quot;2400&quot; id=&quot;2400&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;From those humble beginnings, a community of like-minded scientists grew around IPython. Some contributors have moved on to other endeavors, while others are still at the heart of the project. For example, Brian Granger and Min Ragan-Kelley joined the effort around 2004 and today lead multiple areas of the project. Our team gradually grew, both with members who were able to dedicate significant amounts of effort to the project as well as a larger, but equally significant, “long tail” community of users and contributors.&lt;/p&gt;
&lt;p name=&quot;32c4&quot; id=&quot;32c4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In 2011, after development of our first interactive client-server tool (our Qt Console), &lt;a href=&quot;http://blog.fperez.org/2012/01/ipython-notebook-historical.html&quot; data-href=&quot;http://blog.fperez.org/2012/01/ipython-notebook-historical.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;multiple notebook prototypes&lt;/a&gt;, and a summer-long &lt;a href=&quot;https://mail.scipy.org/pipermail/ipython-dev/2011-September/008151.html&quot; data-href=&quot;https://mail.scipy.org/pipermail/ipython-dev/2011-September/008151.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;coding sprint&lt;/a&gt; by Brian Granger, we were able to &lt;a href=&quot;https://ipython.org/ipython-doc/3/whatsnew/version0.12.html#an-interactive-browser-based-notebook-with-rich-media-support&quot; data-href=&quot;https://ipython.org/ipython-doc/3/whatsnew/version0.12.html#an-interactive-browser-based-notebook-with-rich-media-support&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;release&lt;/a&gt; the first version of the IPython Notebook. This effort paved the path to our modern architecture and vision of Jupyter.&lt;/p&gt;
&lt;h3 name=&quot;21ff&quot; id=&quot;21ff&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;What is Jupyter?&lt;/h3&gt;
&lt;p name=&quot;33e2&quot; id=&quot;33e2&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Project Jupyter develops open source software, standardizes protocols for interactive computing across dozens of programming languages, and defines open formats for communicating results with others.&lt;/p&gt;
&lt;h4 name=&quot;7c4a&quot; id=&quot;7c4a&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Interactive computation&lt;/h4&gt;
&lt;p name=&quot;b7e3&quot; id=&quot;b7e3&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;On the technical front, Jupyter occupies an interesting area of today’s computing landscape. Our world is flooded with data that requires computers to process, analyze, and manipulate, yet the questions and insights are still the purview of humans. Our tools are explicitly designed for the task of computing &lt;em class=&quot;markup--em markup--p-em&quot;&gt;interactively&lt;/em&gt;, that is, where a human executes code, looks at the results of this execution, and decides the next steps based on these outcomes. Jupyter has become an important part of the daily workflow in research, education, journalism, and industry.&lt;/p&gt;
&lt;p name=&quot;034a&quot; id=&quot;034a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Whether running a quick script at the IPython terminal, or doing a deep dive into a dataset in a Jupyter notebook, our tools aim to make this workflow as fluid, pleasant, and effective as possible. For example, we built powerful completion tools to help you discover the structure of your code and data, a &lt;a href=&quot;https://nbviewer.jupyter.org/github/ipython/ipython/blob/master/examples/IPython%20Kernel/Rich%20Output.ipynb&quot; data-href=&quot;https://nbviewer.jupyter.org/github/ipython/ipython/blob/master/examples/IPython%20Kernel/Rich%20Output.ipynb&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;flexible display protocol&lt;/a&gt; to show results enriched by the multimedia capabilities of your web browser, and an &lt;a href=&quot;https://ipywidgets.readthedocs.io/en/latest/examples/Widget%20Basics.html&quot; data-href=&quot;https://ipywidgets.readthedocs.io/en/latest/examples/Widget%20Basics.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;interactive widget system&lt;/a&gt; to let you easily create GUI controls like sliders to explore parameters of your computation. All these tools have evolved from their IPython origins into open, &lt;a href=&quot;http://jupyter-client.readthedocs.io/en/stable/messaging.html&quot; data-href=&quot;http://jupyter-client.readthedocs.io/en/stable/messaging.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;documented protocols&lt;/a&gt; that can be implemented in any programming language as a “Jupyter kernel”. There are &lt;a href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot; data-href=&quot;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;over 100 Jupyter kernels&lt;/a&gt; today, created by many members of the community.&lt;/p&gt;

Exploring a large dataset interactively using the widget protocol and tools.
&lt;p name=&quot;b797&quot; id=&quot;b797&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Our experience building and using the Jupyter Notebook application for the last few years has now led to its next-generation successor, &lt;a href=&quot;https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906&quot; data-href=&quot;https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;JupyterLab&lt;/a&gt;, which is now ready for users. JupyterLab is a web application that exposes all the elements above not only as an end-user application, but also as interoperable building blocks designed to enable entirely new workflows. JupyterLab has already been adopted by large scientific projects such as the &lt;a href=&quot;https://www.lsst.org/&quot; data-href=&quot;https://www.lsst.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Large Synoptic Survey Telescope project&lt;/a&gt;.&lt;/p&gt;
&lt;h4 name=&quot;3bbd&quot; id=&quot;3bbd&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Communicating results&lt;/h4&gt;
&lt;p name=&quot;e53f&quot; id=&quot;e53f&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;In today’s data-rich world, working with the computer is only half of the picture. Its complement is working with other humans, be it your partners, colleagues, students, clients, or even your future self months down the road. The open Jupyter notebook file format is designed to capture, display and share natural language, code, and results in a single &lt;em class=&quot;markup--em markup--p-em&quot;&gt;computational narrative&lt;/em&gt;. These narratives exist in the tradition of &lt;em class=&quot;markup--em markup--p-em&quot;&gt;literate programming&lt;/em&gt; that dates back to &lt;a href=&quot;https://www-cs-faculty.stanford.edu/~knuth/lp.html&quot; data-href=&quot;https://www-cs-faculty.stanford.edu/~knuth/lp.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Knuth’s work&lt;/a&gt;, but here the focus is weaving computation and data specific to a given problem, in what we sometimes refer to as &lt;a href=&quot;http://blog.fperez.org/2013/04/literate-computing-and-computational.html&quot; data-href=&quot;http://blog.fperez.org/2013/04/literate-computing-and-computational.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;literate computing&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;.&lt;/em&gt; While existing computational systems like Maple, Mathematica and SageMath all informed our experience, our focus in Jupyter has been on the creation of open standardized formats that can benefit the entire scientific community and support the long-term sharing and archiving of computational knowledge, regardless of programming language.&lt;/p&gt;
&lt;p name=&quot;508c&quot; id=&quot;508c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We have also built tools to support Jupyter deployment in multi-user environments, whether a single server in your group or a &lt;a href=&quot;https://www.edx.org/professional-certificate/berkeleyx-foundations-of-data-science&quot; data-href=&quot;https://www.edx.org/professional-certificate/berkeleyx-foundations-of-data-science&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;large cloud deployment supporting thousands of students&lt;/a&gt;. &lt;a href=&quot;https://jupyterhub.readthedocs.io/&quot; data-href=&quot;https://jupyterhub.readthedocs.io/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;JupyterHub&lt;/a&gt; and projects that build upon it, like &lt;a href=&quot;https://mybinder.org&quot; data-href=&quot;https://mybinder.org&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Binder&lt;/a&gt; and &lt;a href=&quot;https://binderhub.readthedocs.io&quot; data-href=&quot;https://binderhub.readthedocs.io&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;BinderHub&lt;/a&gt;, now support industry deployments, large-scale education, reproducible research, and the seamless sharing of live computational environments.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*IBExnuyXvjLul_Cba75wWw.png&quot; data-width=&quot;1528&quot; data-height=&quot;514&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*IBExnuyXvjLul_Cba75wWw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*IBExnuyXvjLul_Cba75wWw.png&quot;/&gt;&lt;/div&gt;
Data Science class at UC Berkeley, taught using Jupyter.
&lt;p name=&quot;0d6d&quot; id=&quot;0d6d&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We are delighted to see, for example, how the LIGO Collaboration, awarded the &lt;a href=&quot;https://www.nobelprize.org/nobel_prizes/physics/laureates/2017/press.html&quot; data-href=&quot;https://www.nobelprize.org/nobel_prizes/physics/laureates/2017/press.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;2017 Nobel Prize in Physics&lt;/a&gt; for the observation of gravitational waves, offers their data and analysis code for the public in the form of Jupyter Notebooks hosted on Binder at their &lt;a href=&quot;https://losc.ligo.org/tutorials&quot; data-href=&quot;https://losc.ligo.org/tutorials&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Open Science Center&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Msgqb8LKmLJSKLLOXZs7Bw.png&quot; data-width=&quot;1244&quot; data-height=&quot;474&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Msgqb8LKmLJSKLLOXZs7Bw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Msgqb8LKmLJSKLLOXZs7Bw.png&quot;/&gt;&lt;/div&gt;
Measurement and prediction of gravitational waves formed by two black holes merging. Adapted from &lt;a href=&quot;https://github.com/minrk/ligo-binder&quot; data-href=&quot;https://github.com/minrk/ligo-binder&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/minrk/ligo-binder&lt;/a&gt;.
&lt;h4 name=&quot;1a0c&quot; id=&quot;1a0c&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Open standards nourish an innovative ecosystem&lt;/h4&gt;
&lt;p name=&quot;cc4e&quot; id=&quot;cc4e&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;In Project Jupyter, we have concentrated on standardizing &lt;a href=&quot;http://jupyter-client.readthedocs.io/en/stable/messaging.html&quot; data-href=&quot;http://jupyter-client.readthedocs.io/en/stable/messaging.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;protocols&lt;/a&gt; and &lt;a href=&quot;http://nbformat.readthedocs.io/en/stable/format_description.html&quot; data-href=&quot;http://nbformat.readthedocs.io/en/stable/format_description.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;formats&lt;/a&gt; evolved from community needs, independent of any specific implementation. The stability and interoperability of open standards provides a foundation for others to experiment, collaborate, and build tools inspired by their unique goals and perspectives.&lt;/p&gt;
&lt;p name=&quot;6b36&quot; id=&quot;6b36&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For example, while we provide the &lt;a href=&quot;https://nbviewer.jupyter.org&quot; data-href=&quot;https://nbviewer.jupyter.org&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;nbviewer&lt;/a&gt; service that renders notebooks from any online source for convenient sharing, many people would rather see their notebooks directly on GitHub. This was not possible originally, but the existence of a well-documented notebook format enabled GitHub to develop their own rendering pipeline, which now shows HTML versions of notebooks rendered in a way that conforms to their security requirements.&lt;/p&gt;
&lt;p name=&quot;6466&quot; id=&quot;6466&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Similarly, there exist multiple client applications in addition to the Jupyter Notebook and JupyterLab to create and execute notebooks, each with its own use case and focus: the open source &lt;a href=&quot;https://nteract.io&quot; data-href=&quot;https://nteract.io&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;nteract&lt;/a&gt; project develops a lightweight desktop application to run notebooks; &lt;a href=&quot;https://cocalc.com&quot; data-href=&quot;https://cocalc.com&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CoCalc&lt;/a&gt;, a startup founded by William Stein, the creator of &lt;a href=&quot;https://www.sagemath.org/&quot; data-href=&quot;https://www.sagemath.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;SageMath&lt;/a&gt;, offers a web-based client with real-time collaboration that includes Jupyter alongside SageMath, LaTeX, and tools focused on education; and Google now provides &lt;a href=&quot;https://colab.research.google.com&quot; data-href=&quot;https://colab.research.google.com&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Colaboratory&lt;/a&gt;, another web notebook frontend that runs alongside the rest of the Google Documents suite, with execution in the Google Cloud.&lt;/p&gt;
&lt;p name=&quot;a504&quot; id=&quot;a504&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;These are only a few examples, but they illustrate the value of open protocols and standards: they serve open-source communities, startups, and large corporations equally well. We hope that as the project grows, interested parties will continue to engage with us so we can keep refining these ideas and developing new ones in support of a more interoperable and open ecosystem.&lt;/p&gt;
&lt;h3 name=&quot;8257&quot; id=&quot;8257&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Growing a community&lt;/h3&gt;
&lt;p name=&quot;1856&quot; id=&quot;1856&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;IPython and Jupyter have grown to be the product of thousands of contributors, and the ACM Software System Award should be seen as a recognition of this combined work. Over the years, we evolved from the typical pattern of an ad-hoc assembly of interested people loosely coordinating on a mailing list to a much more structured project. We formalized our &lt;a href=&quot;https://github.com/jupyter/governance&quot; data-href=&quot;https://github.com/jupyter/governance&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;governance model&lt;/a&gt; and instituted a &lt;a href=&quot;https://jupyter.org/about&quot; data-href=&quot;https://jupyter.org/about&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Steering Council&lt;/a&gt;. We continue to evolve these ideas as the project grows, always seeking to ensure the project is welcoming, supports an increasingly diverse community, and helps solidify a foundation for it to be sustainable. This process isn’t unique to Jupyter, and we’ve learned from other larger projects such as Python itself.&lt;/p&gt;
&lt;p name=&quot;d7a1&quot; id=&quot;d7a1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Jupyter exists at the intersection of distributed open source development, university-centered research and education, and industry engagement. While the original team came mostly from the academic world, from the start we’ve recognized the value of engaging industry and other partners. This led, for example, to our &lt;a href=&quot;https://github.com/jupyter/governance/blob/master/projectlicense.md&quot; data-href=&quot;https://github.com/jupyter/governance/blob/master/projectlicense.md&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;BSD licensing choice&lt;/a&gt;, best articulated by &lt;a href=&quot;http://nipy.sourceforge.net/nipy/devel/faq/johns_bsd_pitch.html&quot; data-href=&quot;http://nipy.sourceforge.net/nipy/devel/faq/johns_bsd_pitch.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;the late John Hunter in 2004&lt;/a&gt;. Beyond licensing, we’ve actively sought to maintain a dialog with all these stakeholders:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;6e86&quot; id=&quot;6e86&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;We are &lt;a href=&quot;https://www.numfocus.org/sponsored-projects&quot; data-href=&quot;https://www.numfocus.org/sponsored-projects&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;part of the NumFOCUS Foundation&lt;/a&gt;, working as part of a rich tapestry of other scientifically-focused open source projects. Jupyter is a portal to many of these tools, and we need the entire ecosystem to remain healthy.&lt;/li&gt;
&lt;li name=&quot;97f2&quot; id=&quot;97f2&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;We have &lt;a href=&quot;https://blog.jupyter.org/new-funding-for-jupyter-12009a836867&quot; data-href=&quot;https://blog.jupyter.org/new-funding-for-jupyter-12009a836867&quot; class=&quot;markup--anchor markup--li-anchor&quot; target=&quot;_blank&quot;&gt;obtained significant funding&lt;/a&gt; from the Alfred P. Sloan Foundation, the Gordon and Betty Moore Foundation, and the Helmsley Trust.&lt;/li&gt;
&lt;li name=&quot;ecca&quot; id=&quot;ecca&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;We engage directly with industry partners. Many of our developers hail from industry: we have ongoing active collaborations with companies such as Bloomberg and Quansight on the development of JupyterLab, and with O’Reilly Media on JupyterCon. We have received funding and direct support in the past from Bloomberg, Microsoft, Google, Anaconda, and others.&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;a4ed&quot; id=&quot;a4ed&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;The problem of sustainably developing open source software systems of lasting intellectual and technical value, that serve users as diverse as high-school educators, large universities, Nobel prize-winning science teams, startups, and the largest technology companies in the world, is an ongoing challenge. We need to build healthy communities, find significant resources, provide organizational infrastructure, and value professional and personal time invested in open source. There is a rising awareness among volunteers, business leaders, academic promotion and tenure boards, professional organizations, government agencies, and others of the need to support and sustain critical open source projects. We invite you to engage with us as we continue to explore solutions to these needs and build these foundations for the future.&lt;/p&gt;
&lt;h3 name=&quot;13c3&quot; id=&quot;13c3&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Acknowledgments&lt;/h3&gt;
&lt;p name=&quot;f7e2&quot; id=&quot;f7e2&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The award was given to the above fifteen members of the Steering Council. But this award truly belongs to the community, and we’d like to thank all that have made Jupyter possible, from newcomers to long-term contributors. The project exists to serve the community and wouldn’t be possible without you.&lt;/p&gt;
&lt;p name=&quot;0d7d&quot; id=&quot;0d7d&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;We are grateful for the generous support of our funders. Jupyter’s scale and complexity require dedicated effort, and this would be impossible without the financial resources provided (now and in the past) by the Alfred P. Sloan Foundation, the Gordon and Betty Moore Foundation, the Helmsley Trust, the Simons Foundation, Lawrence Berkeley National Laboratory, the European Union Horizon 2020 program, Anaconda Inc, Bloomberg, Enthought, Google, Microsoft, Rackspace, and O’Reilly Media. Finally, the recipients of the award have been supported by our employers, who often have put faith in the long-term value of this type of work well before the outcomes were evident: Anaconda, Berkeley Lab, Bloomberg, CalPoly, DeepMind, European XFEL, Google, JP Morgan, Netflix, QuantStack, Simula Research Lab, UC Berkeley and Valassis Digital.&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 13:51:49 +0000</pubDate>
<dc:creator>williamstein</dc:creator>
<og:title>Jupyter receives the ACM Software System Award – Jupyter Blog</og:title>
<og:url>https://blog.jupyter.org/jupyter-receives-the-acm-software-system-award-d433b0dfe3a2</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*4gB92wu3PVYsKabkNCkgjg.png</og:image>
<og:description>It is our pleasure to announce that Project Jupyter has been awarded the 2017 ACM Software System Award, a significant honor for the…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jupyter.org/jupyter-receives-the-acm-software-system-award-d433b0dfe3a2?gi=3ed11758d885</dc:identifier>
</item>
<item>
<title>Lobe – Deep Learning Made Simple</title>
<link>https://lobe.ai</link>
<guid isPermaLink="true" >https://lobe.ai</guid>
<description>&lt;div&gt;
&lt;div class=&quot;heroContainerDesktop&quot;&gt;
&lt;div class=&quot;modal_out&quot; id=&quot;modal&quot;&gt;

&lt;div class=&quot;modal_dialog&quot;&gt;
&lt;div class=&quot;modal_content&quot;&gt;
&lt;p&gt;&lt;iframe width=&quot;0&quot; height=&quot;0&quot; src=&quot;https://www.youtube.com/embed/IN69suHxS8w?rel=0&amp;amp;showinfo=0&amp;amp;enablejsapi=1&quot; frameborder=&quot;0&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;hero&quot;&gt;
&lt;div class=&quot;heroLeftSide&quot; readability=&quot;9&quot;&gt;&lt;img src=&quot;https://lobe.ai/static/logo.9ed96b39.png&quot; alt=&quot;&quot; class=&quot;heroLogo&quot;/&gt;&lt;div class=&quot;heroLeftText&quot; readability=&quot;38&quot;&gt;
&lt;div class=&quot;HeadingLarge HeadingLargeLeftOffset noMobile&quot;&gt;&lt;span&gt;Teach your app&lt;/span&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Teach your app to&lt;/p&gt;

&lt;p&gt;see emotions.&lt;/p&gt;
&lt;p&gt;Build, train, and ship custom deep learning&lt;br/&gt;models using a simple visual interface.&lt;/p&gt;
&lt;p&gt;Build, train, and ship custom deep learning models using a simple visual interface.&lt;/p&gt;
&lt;div class=&quot;watchDemoVideo&quot;&gt;
&lt;p&gt;Watch Tour&lt;/p&gt;
&lt;span class=&quot;heroSignup noMobile&quot;&gt;Join Beta&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;heroContainerMobile&quot;&gt;
&lt;div class=&quot;modal_out&quot; id=&quot;modal&quot;&gt;

&lt;div class=&quot;modal_dialog&quot;&gt;
&lt;div class=&quot;modal_content&quot;&gt;
&lt;p&gt;&lt;iframe width=&quot;0&quot; height=&quot;0&quot; src=&quot;https://www.youtube.com/embed/IN69suHxS8w?rel=0&amp;amp;showinfo=0&amp;amp;enablejsapi=1&quot; frameborder=&quot;0&quot; allow=&quot;encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;hero&quot;&gt;
&lt;div class=&quot;heroLeftSide&quot; readability=&quot;8.6478260869565&quot;&gt;
&lt;div class=&quot;heroLeftText&quot; readability=&quot;36.513043478261&quot;&gt;
&lt;p&gt;Teach your app to&lt;/p&gt;

&lt;p&gt;see emotions.&lt;/p&gt;
&lt;p&gt;Build, train, and ship custom deep learning&lt;br/&gt;models using a simple visual interface.&lt;/p&gt;
&lt;p&gt;Build, train, and ship custom&lt;br/&gt;deep learning models using&lt;br/&gt;a simple visual interface.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;madeSimple&quot; class=&quot;section&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Drag, drop, learn.&lt;/p&gt;
&lt;p&gt;Drag, drop, learn.&lt;/p&gt;
&lt;p&gt;Lobe is an easy-to-use visual tool that lets you build custom deep learning models, quickly train them, and ship them directly in your app without writing any code. Start by dragging in a folder of training examples from your desktop. Lobe automatically builds you a custom deep learning model and begins training. When you’re done, you can export a trained model and ship it directly in your app.&lt;/p&gt;

&lt;div id=&quot;container123&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;steps123BulletPoint BodySmall&quot; data-aos-anchor=&quot;#container123&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;0&quot; data-aos-offset=&quot;50&quot; readability=&quot;33&quot;&gt;

Drag in your training data and Lobe automatically builds you a custom deep learning model. Then refine your model by adjusting settings and connecting pre-trained building blocks.&lt;/div&gt;
&lt;div class=&quot;steps123BulletPoint BodySmall&quot; data-aos-anchor=&quot;#container123&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;200&quot; data-aos-offset=&quot;50&quot; readability=&quot;35&quot;&gt;

Monitor training progress in real-time with interactive charts and test results that update live as your model improves. Cloud training lets you get results quickly, without slowing down your computer.&lt;/div&gt;
&lt;div class=&quot;steps123BulletPoint BodySmall&quot; data-aos-anchor=&quot;#container123&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;400&quot; data-aos-offset=&quot;50&quot; readability=&quot;33&quot;&gt;

Export your trained model to TensorFlow or CoreML and run it directly in your app on iOS and Android. Or use the easy-to-use Lobe Developer API and run your model remotely over the air.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;dragAndDropContainer&quot; class=&quot;section&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Connect together&lt;br/&gt;smart lobes.&lt;/p&gt;
&lt;p&gt;Connect together smart building blocks called lobes to quickly create custom deep learning models. For example, connect the Hand &amp;amp; Face lobe to find the most prominent hand in the image. Then connect the Detect Features lobe to find important features in the hand. Finally connect the Generate Labels lobe to predict what emoji is in the image. Refine your model by adjusting each lobes unique settings or go under the hood and edit any lobe’s sub-layers.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;exploreContainer&quot; class=&quot;section&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;Explore your&lt;br/&gt;dataset visually.&lt;/p&gt;
&lt;p&gt;Your entire dataset is displayed visually so you can easily browse and sort through all your examples. Select any icon and see how that example is performing in your model. Your dataset is also automatically split into a Lesson, used to teach your model during training, and a Test used to evaluate how your model performs in the real world on new examples it has never seen before.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;fastTrainingContainer&quot; class=&quot;section&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Real-time&lt;br/&gt;training results.&lt;/p&gt;
&lt;p&gt;Super fast cloud training gives you real-time results without bogging down your computer. Interactive charts let you monitor your model’s accuracy and understand how it is improving over time. The best accuracy is automatically selected and saved so you don’t need to worry about overfitting.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;advancedContainer&quot; class=&quot;section&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;Advanced control&lt;br/&gt;over every layer.&lt;/p&gt;
&lt;p&gt;Built on top of the deep learning frameworks TensorFlow and Keras, Lobe lets you go under the hood and control every layer of your model. Tune hyperparameters, add layers, and design completely new architectures using hundreds of advanced building block lobes. Watch your model take shape as you visually edit your graph and see your changes take effect right away.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;apiContainer&quot; class=&quot;section&quot; readability=&quot;10.5&quot;&gt;
&lt;p&gt;Ship it in your&lt;br/&gt;application.&lt;/p&gt;
&lt;div class=&quot;BodyLarge apiTextContainer&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#apiContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;200&quot; readability=&quot;37&quot;&gt;
&lt;p&gt;When your model is done training, it can be exported to TensorFlow or CoreML and run directly in your app. Or with the easy-to-use Lobe Developer API your model can be hosted in the cloud and integrated into your app using the language of your choice. And because Lobe is built on top of industry standards, your model’s performance and compatibility is always uncompromised.&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;apiCallContainer&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#apiContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;400&quot;&gt;
&lt;div class=&quot;apiTabContainer noMobile&quot;&gt;
&lt;p&gt;&lt;span&gt;JSON&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;C#&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Go&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Java&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Javascript&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Node&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OCaml&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Objective-C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PHP&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Python&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ruby&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Swift&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;apiDropdownContainer mobile&quot;&gt;
&lt;p&gt;Developer API&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;apiCodeContainer&quot; readability=&quot;14&quot;&gt;
&lt;div class=&quot;apiInput&quot; readability=&quot;8.5&quot;&gt;

&lt;p&gt;&lt;span class=&quot;apiModalInnerUrlMessage&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;http://api.lobe.ai/predict?key=987-987-987-987&amp;amp;docID=123-123-123-123&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;apiModalInnerCode&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;JSON&quot;&gt;inputs: {
  selfie: &quot;base64 image&quot;,
  object: &quot;hand&quot;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;apiModalInnerCode&quot; readability=&quot;21&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;JSON noMobile&quot;&gt;outputs: {
  emoji: ✌️,
  confidences: [(✌️, 0.9), (👍, 0.05), (👌, 0.04)]
}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;JSON mobile mobileOutput&quot;&gt;outputs: {
  emoji: ✌️,
  confidences: [
    (✌️, 0.9),
    (👍, 0.05),
    (👌, 0.04)
  ]
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;examplesContainer&quot;&gt;

&lt;div class=&quot;examplesIconContainer noMobile&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;0&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/california-plants&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_California%20Plants.3d6771b0.jpg&quot; alt=&quot;California Plants&quot;/&gt;&lt;/a&gt;
&lt;p&gt;California Plants&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;100&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/rose-petal-generator&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Rose%20GAN.bce5e4e5.jpg&quot; alt=&quot;Petal Generator&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Petal Generator&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;200&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/water-tank&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Water%20Tank.0a0c79b4.jpg&quot; alt=&quot;Water Tank&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Water Tank&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/3D-motion&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_3D%20Motion.9087d2c3.jpg&quot; alt=&quot;3D Motion&quot;/&gt;&lt;/a&gt;
&lt;p&gt;3D Motion&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;400&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/coffee-weight&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Coffee%20Weight.14fd6567.jpg&quot; alt=&quot;Coffee Weight&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Coffee Weight&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;500&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/hand-face-tracker&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Hand%20&amp;amp;%20Face.b7738fd8.jpg&quot; alt=&quot;Hand &amp;amp; Face&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Hand &amp;amp; Face&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;600&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/physics&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Physics.f18b392c.jpg&quot; alt=&quot;Physics&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Physics&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;700&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/tuner&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Tuner.516f241f.jpg&quot; alt=&quot;Tuner&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Tuner&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIconContainerTablet&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;
&lt;div class=&quot;examplesMobileRow&quot;&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;0&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/california-plants&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_California%20Plants.3d6771b0.jpg&quot; alt=&quot;California Plants&quot;/&gt;&lt;/a&gt;
&lt;p&gt;California Plants&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;100&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/rose-petal-generator&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Rose%20GAN.bce5e4e5.jpg&quot; alt=&quot;Petal Generator&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Petal Generator&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;200&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/water-tank&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Water%20Tank.0a0c79b4.jpg&quot; alt=&quot;Water Tank&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Water Tank&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/3D-motion&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_3D%20Motion.9087d2c3.jpg&quot; alt=&quot;3D Motion&quot;/&gt;&lt;/a&gt;
&lt;p&gt;3D Motion&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesMobileRow&quot;&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;400&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/coffee-weight&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Coffee%20Weight.14fd6567.jpg&quot; alt=&quot;Coffee Weight&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Coffee Weight&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;500&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/hand-face-tracker&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Hand%20&amp;amp;%20Face.b7738fd8.jpg&quot; alt=&quot;Hand &amp;amp; Face&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Hand &amp;amp; Face&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;600&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/physics&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Physics.f18b392c.jpg&quot; alt=&quot;Physics&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Physics&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;700&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/tuner&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Tuner.516f241f.jpg&quot; alt=&quot;Tuner&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Tuner&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIconContainerMobile mobile&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;
&lt;div class=&quot;examplesMobileRow&quot;&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;0&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/california-plants&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_California%20Plants.3d6771b0.jpg&quot; alt=&quot;California Plants&quot;/&gt;&lt;/a&gt;
&lt;p&gt;California Plants&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;100&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/rose-petal-generator&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Rose%20GAN.bce5e4e5.jpg&quot; alt=&quot;Petal Generator&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Petal Generator&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;200&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/water-tank&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Water%20Tank.0a0c79b4.jpg&quot; alt=&quot;Water Tank&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Water Tank&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesMobileRow&quot;&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;300&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/hand-face-tracker&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Hand%20&amp;amp;%20Face.b7738fd8.jpg&quot; alt=&quot;Hand &amp;amp; Face&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Hand &amp;amp; Face&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;400&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/coffee-weight&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Coffee%20Weight.14fd6567.jpg&quot; alt=&quot;Coffee Weight&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Coffee Weight&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;examplesIcon&quot; data-aos=&quot;fade-up&quot; data-aos-anchor-placement=&quot;top-bottom&quot; data-aos-anchor=&quot;#examplesContainer&quot; data-aos-duration=&quot;1000&quot; data-aos-delay=&quot;500&quot;&gt;&lt;a class=&quot;examplesIconContent&quot; href=&quot;https://lobe.ai/examples/tuner&quot;&gt;&lt;img class=&quot;examplesImage&quot; src=&quot;https://lobe.ai/static/Showcase%20Icons_Tuner.516f241f.jpg&quot; alt=&quot;Tuner&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Tuner&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 02 May 2018 13:36:59 +0000</pubDate>
<dc:creator>adammenges</dc:creator>
<og:url>https://lobe.ai</og:url>
<og:title>Lobe | Deep Learning Made Simple</og:title>
<og:description>An easy-to-use visual tool that lets you build, train, and ship custom deep learning models without writing code.</og:description>
<og:image>https://lobe.ai/Lobe-OpenGraphImage.jpg</og:image>
<og:type>website</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://lobe.ai/</dc:identifier>
</item>
<item>
<title>DigitalOcean Introduces Kubernetes Product</title>
<link>https://www.digitalocean.com/press/releases/digitalocean-introduces-kubernetes-product/</link>
<guid isPermaLink="true" >https://www.digitalocean.com/press/releases/digitalocean-introduces-kubernetes-product/</guid>
<description>&lt;p class=&quot;bui-u-mb--xlarge&quot;&gt;&lt;a href=&quot;https://www.digitalocean.com/press/releases/&quot;&gt;Press Releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;New Product Provides the Easiest Kubernetes Deployment Experience to its One Million Plus Developers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KUBECON EUROPE, Copenhagen, Denmark&lt;/strong&gt; – May 2, 2018 – &lt;a href=&quot;http://www.digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;, the cloud platform for developers and their teams, today announced its DigitalOcean Kubernetes product, the easiest way to run containerized applications in the cloud. Designed for developers and businesses who want a simple way to deploy and manage container workloads, DigitalOcean Kubernetes removes the headache involved in setting up, managing and securing Kubernetes clusters while incorporating DigitalOcean’s trademark simplicity and ease of use.&lt;/p&gt;
&lt;p&gt;“Over the last year, Kubernetes has emerged as the container orchestration platform of choice, and as one of the leading public clouds, investing in supporting our customers’ adoption of containers was a natural evolution to our roadmap,” said DigitalOcean VP of Product Shiven Ramji. “We’ve always been devoted to providing simple solutions for developers — starting with our cloud servers, Droplets. This product is no exception, allowing developers to focus on successfully shipping their applications while not being burdened by the complexity involved with creating and running a highly scalable and secure cluster across multiple apps.”  &lt;/p&gt;
&lt;p&gt;The application container market is &lt;a href=&quot;https://451research.com/blog/1351-application-containers-will-be-a-$2-7bn-market-by-2020,-representing-a-small-but-high-growth-segment-of-the-cloud-enabling-technologies-market&quot;&gt;estimated to grow to $2.7B&lt;/a&gt; by 2020, according to 451 Research. Further, developers and those in DevOps are growing more committed to Kubernetes: in 2016, just under half said they were committed to the system but by 2017, 77 percent said the same, &lt;a href=&quot;https://www.cncf.io/blog/2017/06/28/survey-shows-kubernetes-leading-orchestration-platform/&quot;&gt;according to the Cloud Native Computing Foundation&lt;/a&gt;. Despite Kubernetes’ growing popularity, on its own, it can be complex for developers to manage.&lt;/p&gt;
&lt;p&gt;By offering Kubernetes integrated with DigitalOcean’s core product suite — which includes Compute Servers, Block Storage, Object Storage, Firewalls, Load Balancers and more — businesses will have the freedom to run their existing workloads on DigitalOcean without special configuration. Key features and benefits of DigitalOcean Kubernetes include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Dedicated Managed Kubernetes Cluster&lt;/strong&gt;: Each customer receives their own cluster, which provides security and isolation for their containerized applications with access to the full Kubernetes API.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrated Storage Scalability&lt;/strong&gt;: DigitalOcean products for block storage and object storage are built in, providing storage for any amount of data.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Included Security&lt;/strong&gt;: Cloud Firewalls are included, making it easy to manage network traffic in and out of the Kubernetes cluster. Additionally, DigitalOcean will provide cluster security scanning capabilities to alert users of flaws and vulnerabilities.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous Delivery&lt;/strong&gt;: Simple integration with popular continuous integration services; developers can easily set up a full continuous delivery pipeline in two clicks, providing faster and more robust rollout of new application functionality.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Team Management&lt;/strong&gt;: Kubernetes deployments can be a large team effort. DigitalOcean’s “teams” feature allows development teams to easily manage access and permissions to the cluster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extended Insights&lt;/strong&gt;: In typical Kubernetes environments, metrics, logs and events can be lost if nodes are spun down. To help developers learn from the performance of past environments, the DigitalOcean Kubernetes product will store this information separate from the node indefinitely.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-click Integrations&lt;/strong&gt;: Similar to the existing one-click setups and integrations for Droplets, the product includes one-click integrations to deploy an entire application stack so developers can focus on solving their business problems and worry less about their Kubernetes cluster setup.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;DigitalOcean Kubernetes will be available through an early access program starting in June with general availability planned for later this year. Sign up for early access at &lt;a href=&quot;http://do.co/k8s&quot;&gt;http://do.co/k8s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Resources&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;About DigitalOcean&lt;/h2&gt;
&lt;p&gt;Founded in 2012, DigitalOcean provides the easiest cloud platform to deploy, manage, and scale applications of any size, removing infrastructure friction and providing predictability so developers and their teams can spend more time building software that customers love. DigitalOcean is approaching $200 million in run rate and has a community of 3.5 million developers with 12 data centers across the globe. In addition to its headquarters in New York, DigitalOcean has an office in Cambridge, Mass. and remote employees around the world. For more information, simply visit &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;https://www.digitalocean.com&lt;/a&gt; or follow &lt;a href=&quot;https://twitter.com/digitalocean&quot;&gt;@digitalocean&lt;/a&gt; on Twitter.&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 13:10:59 +0000</pubDate>
<dc:creator>fatterypt</dc:creator>
<og:url>https://www.digitalocean.com/press/releases/digitalocean-introduces-kubernetes-product/</og:url>
<og:title>DigitalOcean Introduces Kubernetes Product for Simple, Scalable Container Deployment and Orchestration</og:title>
<og:description>DigitalOcean is a simple and robust cloud computing platform, designed for developers. Spin up a server in seconds, starting at $5.</og:description>
<og:image>https://www.digitalocean.com/assets/media/logo-a721c4a7.png</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.digitalocean.com/press/releases/digitalocean-introduces-kubernetes-product/</dc:identifier>
</item>
<item>
<title>GCC 8.1 Released</title>
<link>https://gcc.gnu.org/ml/gcc/2018-05/msg00017.html</link>
<guid isPermaLink="true" >https://gcc.gnu.org/ml/gcc/2018-05/msg00017.html</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;Jakub Jelinek - GCC 8.1 Released&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;40.669866300994&quot;&gt;
&lt;p&gt;This is the mail archive of the &lt;tt&gt;gcc@gcc.gnu.org&lt;/tt&gt; mailing list for the &lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GCC project&lt;/a&gt;. &lt;/p&gt;
&lt;hr /&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;From&lt;/em&gt;: Jakub Jelinek &amp;lt;jakub at redhat dot com&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To&lt;/em&gt;: gcc at gcc dot gnu dot org&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Date&lt;/em&gt;: Wed, 2 May 2018 14:15:24 +0200&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Subject&lt;/em&gt;: GCC 8.1 Released&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reply-to&lt;/em&gt;: Jakub Jelinek &amp;lt;jakub at redhat dot com&amp;gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr /&gt;&lt;pre&gt;
We are proud to announce the next, major release of the
GNU Compiler Collection.

Are you tired of your existing compilers?
Want fresh new language features and better optimizations?
Make your day with the new GCC 8.1!

GCC 8.1 is a major release containing substantial new
functionality not available in GCC 7.x or previous GCC releases.

The C++ front-end now has experimental support for some parts of the
upcoming C++2a draft, with the -std=c++2a and -std=gnu++2a options, and the
libstdc++ library has some further C++17 and C++2a draft library features
implemented too.

This releases features significant improvements in the emitted diagnostics,
including improved locations, location ranges and fix-it hints (especially
in the C++ front-end), and various new warnings have been added.

Profile driven optimizations have been significantly improved, on x86
functions are now split into hot and cold regions by default.  The link time
optimizations now have a new way of emitting the DWARF debug information,
which makes LTO optimized code more debuggable.  New loop optimizers have
added and existing improved and some, like -ftree-loop-distribution,
-floop-unroll-and-jam and -floop-interchange have been enabled by default at
-O3.

The AArch64 target now supports the Scalable Vector Extension, which
features vectors with runtime determined number of elements.

Some code that compiled successfully with older GCC versions might require
source changes, see &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org/gcc-8/porting_to.html&quot;&gt;http://gcc.gnu.org/gcc-8/porting_to.html&lt;/a&gt; for
details.

See

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://gcc.gnu.org/gcc-8/changes.html&quot;&gt;https://gcc.gnu.org/gcc-8/changes.html&lt;/a&gt;

for more information about changes in GCC 8.1.

This release is available from the FTP servers listed here:

 &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.gnu.org/order/ftp.html&quot;&gt;http://www.gnu.org/order/ftp.html&lt;/a&gt;

The release is in gcc/gcc-8.1.0/ subdirectory.

If you encounter difficulties using GCC 8.1, please do not contact me
directly.  Instead, please visit &lt;a rel=&quot;nofollow&quot; href=&quot;http://gcc.gnu.org&quot;&gt;http://gcc.gnu.org&lt;/a&gt; for information about
getting help.

Driving a leading free software project such as GNU Compiler Collection
would not be possible without support from its many contributors.
Not to only mention its developers but especially its regular testers
and users which contribute to its high quality.  The list of individuals
is too large to thank individually!

Please consider a donation to the GNU Toolchain Fund to support the
continued development of GCC!

&lt;/pre&gt;
&lt;hr /&gt;&lt;/body&gt;</description>
<pubDate>Wed, 02 May 2018 12:26:05 +0000</pubDate>
<dc:creator>edelsohn</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://gcc.gnu.org/ml/gcc/2018-05/msg00017.html</dc:identifier>
</item>
</channel>
</rss>