<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Towards Battery-Free HD Video Streaming [video]</title>
<link>http://batteryfreevideo.cs.washington.edu/</link>
<guid isPermaLink="true" >http://batteryfreevideo.cs.washington.edu/</guid>
<description>&lt;p&gt;Video streaming has traditionally been considered an extremely power-hungry operation. Existing approaches optimize the camera and communication modules individually to minimize their power consumption. However, designing a video streaming device requires power-consuming hardware components and computationally intensive video codec algorithms that interface the camera and the communication modules. For example, monochrome HD video streaming at 60 fps requires an ADC operating at a sampling rate of 55.3 MHz and a video codec that can handle uncompressed data being generated at 442 Mbps. We present a novel architecture that enables HD video streaming from a low-power, wearable camera to a nearby mobile device. To achieve this, we present an &quot;analog&quot; video backscatter technique that feeds analog pixels from the photo-diodes directly to the backscatter hardware, thereby eliminating power-consuming hardware components, such as ADCs and codecs. To evaluate our work, we simulate an ASIC, which achieves 60 fps 720p and 1080p HD video streaming for 321 µW and 806 µW, respectively. This translates to 1000x to 10,000x lower power than it used for existing digital video streaming approaches. Our empirical results also show that we can harvest sufficient energy to enable battery-free 30 fps 1080p video streaming at up to 8~feet. Finally, we design a proof-of-concept prototype with off-the-shelf hardware components that successfully backscatter 720p HD video at 10 fps up to 16 feet.&lt;/p&gt;
</description>
<pubDate>Fri, 20 Apr 2018 03:24:56 +0000</pubDate>
<dc:creator>InclinedPlane</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://batteryfreevideo.cs.washington.edu/</dc:identifier>
</item>
<item>
<title>A.I. Researchers Are Making More Than $1M, Even at a Nonprofit</title>
<link>https://www.nytimes.com/2018/04/19/technology/artificial-intelligence-salaries-openai.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2018/04/19/technology/artificial-intelligence-salaries-openai.html</guid>
<description>&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;Mr. Sutskever was part of a three-researcher team at the University of Toronto that &lt;a href=&quot;https://www.nytimes.com/2017/11/28/technology/artificial-intelligence-research-toronto.html&quot; title=&quot;&quot; target=&quot;_blank&quot; class=&quot;css-1dccl0s eo5o5yb0&quot;&gt;created key so-called computer vision technology&lt;/a&gt;. Mr. Goodfellow invented a technique that allows machines to &lt;a href=&quot;https://www.wired.com/2016/04/openai-elon-musk-sam-altman-plan-to-set-artificial-intelligence-free/&quot; title=&quot;&quot; target=&quot;_blank&quot; class=&quot;css-1dccl0s eo5o5yb0&quot;&gt;create fake digital photos&lt;/a&gt; that are nearly indistinguishable from the real thing.&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;“When you hire a star, you are not just hiring a star,” Mr. Nicholson of the start-up Skymind said. “You are hiring everyone they attract. And you are paying for all the publicity they will attract.”&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;Other researchers at OpenAI, including Greg Brockman, who leads the lab alongside Mr. Sutskever, did not receive such high salaries during the lab’s first year.&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;In 2016, according to the tax forms, Mr. Brockman, who had served as chief technology officer at the financial technology start-up Stripe, made $175,000. As one of the founders of the organization, however, he most likely took a salary below market value. Two other researchers with more experience in the field — though still very young — made between $275,000 and $300,000 in salary alone in 2016, according to the forms.&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;Though the pool of available A.I. researchers is growing, it is not growing fast enough. “If anything, demand for that talent is growing faster than the supply of new researchers, because A.I. is moving from early adopters to wider use,” Mr. Nicholson said.&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;That means it can be hard for companies to hold on to their talent. Last year, after only 11 months at OpenAI, Mr. Goodfellow returned to Google. Mr. Abbeel and two other researchers &lt;a href=&quot;https://www.nytimes.com/2017/11/06/technology/artificial-intelligence-start-up.html&quot; title=&quot;&quot; target=&quot;_blank&quot; class=&quot;css-1dccl0s eo5o5yb0&quot;&gt;left the lab to create a robotics start-up, Embodied Intelligence&lt;/a&gt;. (Mr. Abbeel has since signed back on as a part-time adviser to OpenAI.) And another researcher, Andrej Karpathy, left to become the head of A.I. at Tesla, which is also building autonomous driving technology.&lt;/p&gt;
&lt;p class=&quot;css-imjp5j e2kc3sl0&quot;&gt;In essence, Mr. Musk was poaching his own talent. Since then, he has stepped down from the OpenAI board, with the lab saying this would allow him to “eliminate a potential future conflict.”&lt;/p&gt;
</description>
<pubDate>Thu, 19 Apr 2018 21:20:11 +0000</pubDate>
<dc:creator>wei_jok</dc:creator>
<og:url>https://www.nytimes.com/2018/04/19/technology/artificial-intelligence-salaries-openai.html</og:url>
<og:type>article</og:type>
<og:title>A.I. Researchers Are Making More Than $1 Million, Even at a Nonprofit</og:title>
<og:image>https://static01.nyt.com/images/2018/04/20/business/20AISALARY-1/20AISALARY-1-facebookJumbo.jpg</og:image>
<og:description>Tax forms filed by OpenAI provide insight into the enormous salaries and bonuses paid to artificial intelligence specialists across the world.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2018/04/19/technology/artificial-intelligence-salaries-openai.html</dc:identifier>
</item>
<item>
<title>Stripe Home</title>
<link>https://stripe.com/blog/stripe-home</link>
<guid isPermaLink="true" >https://stripe.com/blog/stripe-home</guid>
<description>&lt;p&gt;At Stripe, we’ve always been intentional about how we communicate, share information, and stay connected. Back when Stripe was smaller, it was easy for this to happen automatically. But by the time we hit around 150 people, it became &lt;a href=&quot;https://en.wikipedia.org/wiki/Dunbar%27s_number&quot;&gt;hard to know everyone’s name&lt;/a&gt;. So at a company hackathon, a few Stripes created &lt;em&gt;People&lt;/em&gt;, a directory to help Stripes meet and get to really know each other.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;People&lt;/em&gt; focused on connecting individuals across the company: Stripes could set their own bios, create networks around common interests, and generally experiment with new ways to express who they are. &lt;em&gt;People&lt;/em&gt; also gave us our first concept of a people API, which set the stage for automating our notification systems and made it quick to roll out new people-oriented features (like seating charts!).&lt;/p&gt;
&lt;p&gt;We’ve since turned &lt;em&gt;People&lt;/em&gt; turned into a full-fledged product called &lt;em&gt;Home&lt;/em&gt;, weaving both how we know one another and share information beyond email into the same product. Used by 99% of Stripes in the last month, &lt;em&gt;Home&lt;/em&gt; is the source of truth for who we are, what we’re doing, and why—and a platform for enabling individuals and helping them get to know one another.&lt;/p&gt;
&lt;p&gt;Here’s a quick tour through a few &lt;em&gt;Home&lt;/em&gt; highlights:&lt;/p&gt;
&lt;h3&gt;People worldwide&lt;/h3&gt;

&lt;p&gt;The people at Stripe are what bring and keep so many of us here, so we’ve made it easy to meet folks across the company. In the spirit of the original &lt;em&gt;People&lt;/em&gt;, new Stripes are front and center on &lt;em&gt;Home&lt;/em&gt; along with their own quick video introductions, a flipbook through existing Stripes (can you get their name right?), and activities happening around the company (ranging from classes we host to events for our users).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Home&lt;/em&gt; was also designed to encourage Stripes to get to know each person beyond their team and the projects they’re working on. We’ve found that building connections across the company makes it easier for us to share, learn from fresh perspectives and build a sense of belonging early on. Everyone has their own personal page that describes how to get ahold of them for work, where they work, and any quick background they’d like to share.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Home&lt;/em&gt; can’t paint the complete picture of the person behind the page, but it helps break the ice. Outside &lt;em&gt;Home&lt;/em&gt;, we encourage people to meet in person—one of our more structured approaches involves a chat bot that helps schedule lunches among Stripes who are least likely to know each other (more than 5,000 lunches have been facilitated since it was set up!).&lt;/p&gt;
&lt;h3&gt;Multiple teams, one company&lt;/h3&gt;
&lt;p&gt;We don’t view teams as information silos or hard boundaries. Instead, we’ve designed teams to empower a group of individuals to take end-to-end ownership over an area and act autonomously toward their goals, while sharing lessons with the rest of Stripe. Helping teams share their knowledge to the company makes it easier for individuals at Stripe to find context that will both guide them in their work and help them learn above and beyond their role.&lt;/p&gt;

&lt;p&gt;But with dozens of teams at Stripe, it’s tough to keep track of every area. To help, we built the team index as a central place to find any team at Stripe. &lt;em&gt;Home&lt;/em&gt; randomly features teams and the individuals within them at the top to help keep Stripes aware. Individual team pages are like the people pages: they provide a common interface for getting ahold of the team, finding useful resources the team has shared, and even watching video introductions for the entire group at once. (We now have ten offices globally and built similar pages for those at a recent hackathon.)&lt;/p&gt;
&lt;div class=&quot;image-center&quot;&gt;&lt;img width=&quot;650&quot; src=&quot;https://stripe.com/img/blog/posts/home/home-team-design.png&quot;/&gt;&lt;/div&gt;
&lt;h3&gt;Knowledge sharing&lt;/h3&gt;
&lt;div class=&quot;image-center&quot;&gt;&lt;img width=&quot;653&quot; src=&quot;https://stripe.com/img/blog/posts/home/home-search.png&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Individual Stripes collaborate—a lot. Last year we created more than 20,000 documents, ranging from email drafts to project proposals to canonical documentation relied on across the entire company.&lt;/p&gt;
&lt;p&gt;Our search system lets Stripe look across documents, people, teams, and even API models, with live filters to help narrow the corpus quickly. The search interface is completely API-driven with modular content indexers underneath, so it’s easy to add new types of content to the same interface we use to find everything else. (API models were a recent addition.)&lt;/p&gt;
&lt;p&gt;We still have a lot to do along these lines. Search satisfies the curious who know roughly what they’re looking for. Next up, we’d like to incorporate our canonical documentation into a structure that not only helps people browse and keep up with changes, but also helps Stripes find information they wouldn’t go hunting for on their own that would nevertheless benefit them (like lessons from another team’s retrospective).&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Under the hood, &lt;em&gt;Home&lt;/em&gt; is built on the same technology as our user-facing products (such as the Dashboard) because we wanted to make it easy to move between developing user-facing and internally-facing products. This has made &lt;em&gt;Home&lt;/em&gt; a favorite for new Stripes’ spin-up projects and a popular go-to for Hackathon projects. The search feature described was built by a new class of Stripes as their very first project and office pages were built at our most recent hackathon.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Home&lt;/em&gt; is such an important part of how we work together and stay connected; it remains a work in progress along with Stripe as a whole. We’re still figuring out how to balance transparency with information overload, serendipity with curated content, and crisp interfaces and team boundaries with the actual human part that makes the company what it is. Our next projects are all about evolving knowledge discovery: from team pages that weave the individuals, metrics, and our users together to a better way to browse and publish information.&lt;/p&gt;
&lt;p class=&quot;cta&quot;&gt;Interested in working on &lt;em&gt;Home&lt;/em&gt;? Join Stripe. &lt;a href=&quot;https://stripe.com/jobs/positions/full-stack-engineer-org-effectiveness&quot; class=&quot;button&quot;&gt;View Openings&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 19 Apr 2018 17:46:31 +0000</pubDate>
<dc:creator>wgyn</dc:creator>
<og:title>Stripe Home</og:title>
<og:url>https://stripe.com/blog/stripe-home</og:url>
<og:description>At Stripe, we’ve always been intentional about how we communicate, share information, and stay connected. Back when Stripe was smaller, it was easy for this to happen automatically. But by the time we hit around 150 people, it became hard to know everyone’s name. So at a company hackathon, a few Stripes created People, a directory to help Stripes meet and get to really know each other. People focused on connecting individuals across the company: Stripes could set their own bios, create networks around common interests, and generally experiment with new ways to express who they are. People also gave us our first concept of a people API, which set the stage for automating our notification systems and made it quick to roll out new people-oriented features (like seating charts!). We’ve since turned People turned into a full-fledged product called Home, weaving both how we know one another and share information beyond email into the same product. Used by 99% of Stripes in the last month, Home is the source of truth for who we are, what we’re doing, and why—and a platform for enabling individuals and helping them get to know one another. Here’s a quick tour through a few Home highlights: People worldwide The people at Stripe are what bring and keep so many of us here, so we’ve made it easy to meet folks across the company. In the spirit of the original People, new Stripes are front and center on Home along with their own quick video introductions, a flipbook through existing Stripes (can you get their name right?), and activities happening around the company (ranging from classes we host to events for our users). Home was also designed to encourage Stripes to get to know each person beyond their team and the projects they’re working on. We’ve found that building connections across the company makes it easier for us to share, learn from fresh perspectives and build a sense of belonging early on. Everyone has their own personal page that describes how to get ahold of them for work, where they work, and any quick background they’d like to share. Home can’t paint the complete picture of the person behind the page, but it helps break the ice. Outside Home, we encourage people to meet in person—one of our more structured approaches involves a chat bot that helps schedule lunches among Stripes who are least likely to know each other (more than 5,000 lunches have been facilitated since it was set up!). Multiple teams, one company We don’t view teams as information silos or hard boundaries. Instead, we’ve designed teams to empower a group of individuals to take end-to-end ownership over an area and act autonomously toward their goals, while sharing lessons with the rest of Stripe. Helping teams share their knowledge to the company makes it easier for individuals at Stripe to find context that will both guide them in their work and help them learn above and beyond their role. But with dozens of teams at Stripe, it’s tough to keep track of every area. To help, we built the team index as a central place to find any team at Stripe. Home randomly features teams and the individuals within them at the top to help keep Stripes aware. Individual team pages are like the people pages: they provide a common interface for getting ahold of the team, finding useful resources the team has shared, and even watching video introductions for the entire group at once. (We now have ten offices globally and built similar pages for those at a recent hackathon.) Knowledge sharing Individual Stripes collaborate—a lot. Last year we created more than 20,000 documents, ranging from email drafts to project proposals to canonical documentation relied on across the entire company. Our search system lets Stripe look across documents, people, teams, and even API models, with live filters to help narrow the corpus quickly. The search interface is completely API-driven with modular content indexers underneath, so it’s easy to add new types of content to the same interface we use to find everything else. (API models were a recent addition.) We still have a lot to do along these lines. Search satisfies the curious who know roughly what they’re looking for. Next up, we’d like to incorporate our canonical documentation into a structure that not only helps people browse and keep up with changes, but also helps Stripes find information they wouldn’t go hunting for on their own that would nevertheless benefit them (like lessons from another team’s retrospective). Under the hood, Home is built on the same technology as our user-facing products (such as the Dashboard) because we wanted to make it easy to move between developing user-facing and internally-facing products. This has made Home a favorite for new Stripes’ spin-up projects and a popular go-to for Hackathon projects. The search feature described was built by a new class of Stripes as their very first project and office pages were built at our most recent hackathon. Home is such an important part of how we work together and stay connected; it remains a work in progress along with Stripe as a whole. We’re still figuring out how to balance transparency with information overload, serendipity with curated content, and crisp interfaces and team boundaries with the actual human part that makes the company what it is. Our next projects are all about evolving knowledge discovery: from team pages that weave the individuals, metrics, and our users together to a better way to browse and publish information. Interested in working on Home? Join Stripe. View Openings</og:description>
<og:image>https://stripe.com/img/v3/home/social.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stripe.com/blog/stripe-home</dc:identifier>
</item>
<item>
<title>Scuttlebutt, a Decentralized Alternative to Facebook</title>
<link>https://www.inthemesh.com/archive/secure-scuttlebutt-facebook-alternative/</link>
<guid isPermaLink="true" >https://www.inthemesh.com/archive/secure-scuttlebutt-facebook-alternative/</guid>
<description>&lt;p&gt;On July 15, 2014, I decided to delete my Facebook account. The social media behemoth had gone too far in using all our personal data for profit, psychological research, and crowd manipulation. I was done.&lt;/p&gt;
&lt;p&gt;I wanted to take back what was mine and leave the platform, which meant downloading all of my data. But I was surprised to find that when I clicked the “Download” button on the settings page, all I got back was a copy of my profile page.&lt;/p&gt;
&lt;p&gt;As a computer programmer, I knew that Facebook keeps users’ pictures, private conversations, lists of friends, likes, shares, locations, technical data about users’ devices, and much more, and stores it all in their data warehouses around the world. The vast majority of my personal data was missing. I took it anyway, and deleted my account.&lt;/p&gt;
&lt;p&gt;A lot has changed since then, including &lt;a href=&quot;https://www.nytimes.com/2018/04/11/technology/personaltech/i-downloaded-the-information-that-facebook-has-on-me-yikes.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how much you can take with you&lt;/a&gt; when you leave Facebook — though Facebook keeps that data and a lot more they still don’t let you download when you leave. With the revelations of the &lt;a href=&quot;https://www.nytimes.com/2018/03/19/technology/facebook-cambridge-analytica-explained.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cambridge Analytica&lt;/a&gt; scandal and &lt;a href=&quot;https://www.theguardian.com/technology/live/2018/apr/10/mark-zuckerberg-testimony-live-congress-facebook-cambridge-analytica&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;the media circus&lt;/a&gt; that’s ensued in its subsequent fallout, many people outside the developer community have become aware of the scope of Facebook’s data collection practices.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;I’m sure there was a time when feudal serfdom and colonial rule seemed ‘too big to quit’ as well.”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our personal data is — to put it simply — used to create highly detailed Facebook advertising profiles. The company releases some information to law enforcement or academic researchers on an ad hoc basis, but keeps the &lt;a href=&quot;https://datacenterfrontier.com/inside-facebooks-blu-ray-cold-storage-data-center/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;bulk of the data&lt;/a&gt; for Facebook and Facebook only. Of course, unscrupulous firms like Cambridge Analytica are also able to access some users’ personal data by finding exploits in Facebook’s &lt;a href=&quot;https://www.wsj.com/articles/facebooks-lax-data-policies-led-to-cambridge-analytica-crisis-1521590720&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;policies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Long before the internet became an everyday tool for everyone in the developed world, minimalist sculptor Richard Serra suggested that &lt;a href=&quot;https://books.google.com/books?dq=tv+you+are+the+product&amp;amp;ei=PWVbVf7jH4rfsAXUt4GwBg&amp;amp;hl=en&amp;amp;id=gI_jNL7PN2QC&amp;amp;lpg=PA104&amp;amp;ots=FHKejNRHOb&amp;amp;pg=PA104&amp;amp;sa=X&amp;amp;sig=J53UVdUf7QAEJ3c7LxNKP-xINu0&amp;amp;source=bl&amp;amp;ved=0CDUQ6AEwBg#v=onepage&amp;amp;q=product&amp;amp;f=false&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;if you aren’t paying for the product&lt;/a&gt;, you &lt;em&gt;are&lt;/em&gt; the product. This is very obviously true in the case of Facebook, which collects data not to be creepy, but because it is profitable to do so. (Creepiness is just a byproduct.) In 2016, the company generated about &lt;a href=&quot;https://qz.com/605343/how-much-money-did-you-make-for-facebook-last-year/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;$43 per user&lt;/a&gt; in the United States and Canada alone, and over $4 billion worldwide.&lt;/p&gt;
&lt;p&gt;The biggest problem with Facebook is not the newsfeed, the algorithms or even the ads. It’s that Facebook considers its users’ accounts as part of the company’s private assets. Our data is acquired en masse, collected, and assembled in order to be monetized without regard for the interests of the people and communities from whom this data is harvested.&lt;/p&gt;
&lt;p&gt;The public is starting to see the data practices of large tech companies for what they are: invasive, dehumanizing, and corrosive to the public conversations and civic institutions that form the bedrock of our social and political lives.&lt;/p&gt;
&lt;p&gt;When the Cambridge Analytica news broke, major media organizations like The New York Times published a string of &lt;a href=&quot;https://www.nytimes.com/2018/03/24/opinion/sunday/delete-facebook-does-not-fix-problem.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;fatalistic pieces&lt;/a&gt; warning users that Facebook may have become “&lt;a href=&quot;https://www.nytimes.com/2018/03/21/technology/personaltech/delete-facebook.html?smid=fb-nytimes&amp;amp;smtyp=cur&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;too big to quit&lt;/a&gt;.” Facebook controls so much of our online experiences, in one way or another, the argument goes, that attempting to leave the social media platform can prove catastrophic. (I’m sure there was a time when feudal serfdom and colonial rule seemed “too big to quit” as well.)&lt;/p&gt;
&lt;p&gt;There is a kernel of truth to these kinds of warnings. Facebook exercises outsize control over our online behavior. We’ve become so accustomed to seeing “&lt;a href=&quot;https://developers.facebook.com/docs/facebook-login&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sign in with Facebook&lt;/a&gt;” on registration forms and login screens that it barely registers an impression. And many people don’t realize Facebook directly owns platforms like Instagram or WhatsApp, which means those user accounts &lt;a href=&quot;https://www.cnbc.com/2018/04/04/facebook-updates-its-terms-of-service-to-include-messenger-instagram.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;belong to Facebook&lt;/a&gt;, too. These seemingly innocuous interfaces have an insidious way of restricting our freedom in cyberspace. That’s the price of convenience, but for many of us that price has become too high.&lt;/p&gt;
&lt;p&gt;The total number of active users on Facebook today is as large as the total number of people on the internet in 2011: &lt;a href=&quot;https://zephoria.com/top-15-valuable-facebook-statistics/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2.1 billion users&lt;/a&gt;. In other words, as many people as there were on the entire planet during World War II. Today, Facebook and Google refer over &lt;a href=&quot;http://www.businessinsider.com/google-facebook-news-traffic-chart-2017-5&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;70 percent&lt;/a&gt; of all web traffic, which is just &lt;a href=&quot;https://www.theguardian.com/commentisfree/2018/mar/28/all-the-data-facebook-google-has-on-you-privacy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;one way&lt;/a&gt; they can collect users’ data.&lt;/p&gt;
&lt;p&gt;Opt-in to Facebook and you give up important rights to have a say in how your personal data is used; opt-out of Facebook and potentially isolate yourself from your friends, family, professional opportunities and more. Since Facebook opened its gates to the public in 2008, billions of people have chosen the former. The network effect of all of these individual choices means, for many who would like to opt out today, the opportunity costs are simply too great.&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;If we can choose which medium to use when sharing our data, we can be active on a digital social network and independent from the privatized internet.”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We have a word for relationships you can’t afford to leave: coercion. Far too many people today are on Facebook not because they choose to be there, but because the company has consciously and deliberately created a platform that forces them to stay. As Margaret Thatcher used to say, “&lt;a href=&quot;https://en.wikipedia.org/wiki/There_is_no_alternative&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;There is no alternative&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;Except there is.&lt;/p&gt;
&lt;p&gt;A year ago I joined a group of programmers who are building a new type of social network, called &lt;a href=&quot;https://www.scuttlebutt.nz/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Secure Scuttlebutt&lt;/a&gt;. It’s not a startup or even a nonprofit — it’s just open-source software that allows users to be in touch with their friends.&lt;/p&gt;
&lt;p&gt;What makes Scuttlebutt unique is the simple idea that users should own and control all of their data. My Scuttlebutt account is not kept behind a login gate. It’s just stored locally on my computer, like any other file.&lt;/p&gt;
&lt;p&gt;Because users own all of the files that make up Scuttlebutt, they can store their data anywhere. For example, I have 800 MB worth of data — that’s small enough to fit on a microSD card. This represents two years of status updates, friends’ status updates, contact information, photos, and what have you. As soon as I put the card into my phone, Scuttlebutt automatically updates and syncs with the new posts that my friends or I make. The user always owns their data — they can take it out and literally hold it in their hand — but this data is also dynamically linked in to the social network.&lt;/p&gt;
&lt;p&gt;Let’s make our virtual selves as free as our physical selves.&lt;/p&gt;
&lt;p&gt;One way we can do this is to embrace peer-to-peer protocols across the Internet. Scuttlebutt excels at this — your app talks to your friend’s app and asks for the latest. This is how it updates across the social network.&lt;/p&gt;
&lt;p&gt;Because your data is always with you, Scuttlebutt allows you to share it in different ways. For instance, through a shared wifi network, you can transfer the latest news between two computers that are physically near one another. In the future, we will also enable Bluetooth transfer. This means it’s a social network that uses the internet, but it is not &lt;em&gt;dependent&lt;/em&gt; on the internet.&lt;/p&gt;
&lt;p&gt;If we continue to keep data locked up in cloud accounts, there is no future for the web. On the other hand, if we can choose which medium to use when sharing our data, we can be active on a digital social network and independent from the privatized internet. Let’s make a home for each digital being.&lt;/p&gt;
&lt;p&gt;Setting up your own Scuttlebutt account is easy. Take a look at the video below, or visit their website for instructions on &lt;a href=&quot;https://www.scuttlebutt.nz/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;getting started&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/236358264&quot; width=&quot;720&quot; height=&quot;405&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/236358264&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A Scuttlebutt Love Story&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/user70865009&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;zach&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Apr 2018 17:01:12 +0000</pubDate>
<dc:creator>bpierre</dc:creator>
<og:type>article</og:type>
<og:title>In The Mesh - Scuttlebutt, A Decentralized Alternative To Facebook</og:title>
<og:description>Secure Scuttlebutt is a new kind of social network in which users own and control all of their data, writes Andre Staltz.</og:description>
<og:url>https://www.inthemesh.com/archive/secure-scuttlebutt-facebook-alternative/</og:url>
<og:image>https://www.inthemesh.com/wp-content/uploads/2018/04/own_your_data_cover.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.inthemesh.com/archive/secure-scuttlebutt-facebook-alternative/</dc:identifier>
</item>
<item>
<title>Apple open-sources FoundationDB</title>
<link>https://www.foundationdb.org/blog/foundationdb-is-open-source/</link>
<guid isPermaLink="true" >https://www.foundationdb.org/blog/foundationdb-is-open-source/</guid>
<description>&lt;span class=&quot;published-date&quot;&gt;Published April 19, 2018&lt;/span&gt;
&lt;h2 id=&quot;the-next-chapter&quot;&gt;The next chapter&lt;/h2&gt;
&lt;p&gt;Starting today, FoundationDB starts its next chapter as an open source project!&lt;/p&gt;
&lt;p&gt;FoundationDB is a distributed datastore, designed from the ground up to be deployed on clusters of commodity hardware. These clusters scale well as you add machines, automatically heal from hardware failures, and have a simple API. The key-value store supports fully global, cross-row ACID transactions. That's the highest level of data consistency possible. What does this mean for you? Strong consistency makes your application code simpler, your data models more efficient, and your failure modes less surprising.&lt;/p&gt;
&lt;p&gt;The great thing is that FoundationDB is already well-established — it's actively developed and has years of production use. We intend to drive FoundationDB forward as a community project and we welcome your participation.&lt;/p&gt;
&lt;h2 id=&quot;a-powerful-abstraction&quot;&gt;A powerful abstraction&lt;/h2&gt;
&lt;p&gt;We believe FoundationDB can become the foundation of the next generation of distributed databases. Since its beginnings in 2010 as a startup, the world of databases has increasingly aligned with FoundationDB to favor data consistency.&lt;/p&gt;
&lt;p&gt;The vision of FoundationDB is to start with a simple, powerful core and extend it through the addition of “layers”. The key-value store, which is open sourced today, is the core, focused on incorporating only features that aren’t possible to write in layers. Layers extend that core by adding features to model specific types of data and handle their access patterns.&lt;/p&gt;
&lt;p&gt;The fundamental architecture of FoundationDB, including its use of layers, promotes the best practices of scalable and manageable systems. By running multiple layers on a single cluster (for example a document store layer and a graph layer), you can match your specific applications to the best data model. Running less infrastructure reduces your organization's operational and technical overhead.&lt;/p&gt;
&lt;p&gt;By open sourcing the FoundationDB core, we expect the quantity and variety of layers to develop rapidly. When we think about the FoundationDB community, we approach it both in terms of the core itself and the ecosystem of layers that it enables.&lt;/p&gt;

&lt;p&gt;By open sourcing FoundationDB, our goal is to build an open community. All major development will be done in the open. We’ve outlined a design document process to ensure that this work is done transparently and with community input. We’ve taken early steps to outline project governance to provide a basic structure that will enable members of the community who actively contribute to have a greater voice in the project decision-making.&lt;/p&gt;
&lt;p&gt;We also want FoundationDB to be a healthy and responsive community. To that end, we’ve adopted a code of conduct based on the Contributor Covenant to outline the behaviors we encourage and those we disallow.&lt;/p&gt;
&lt;p&gt;We’d love your participation. Here are several ways you can get involved:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ask questions on the FoundationDB community forums: &lt;a href=&quot;https://forums.foundationdb.org/&quot;&gt;forums.foundationdb.org&lt;/a&gt;. We have categories for user-related questions (how do I use X) as well as development questions (I am digging into the FoundationDB core and want to change Y). Say hello!&lt;/li&gt;
&lt;li&gt;Help improve the software by reporting bugs through GitHub issues.&lt;/li&gt;
&lt;li&gt;Make contributions to the core software and documentation (please see the project’s &lt;a href=&quot;https://www.github.com/apple/foundationdb/blob/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;get-started&quot;&gt;Get Started&lt;/h2&gt;
&lt;p&gt;The source for FoundationDB is available at &lt;a href=&quot;https://www.github.com/apple/foundationdb/&quot;&gt;github.com/apple/foundationdb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://apple.github.io/foundationdb/getting-started-mac.html&quot;&gt;Getting Started guide&lt;/a&gt; for the basics of how to install, use, and develop against FoundationDB. Binary installers are available for macOS, Windows, and Linux at &lt;a href=&quot;https://www.foundationdb.org/download/&quot;&gt;www.foundationdb.org/download/&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Apr 2018 16:41:57 +0000</pubDate>
<dc:creator>spullara</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.foundationdb.org/blog/foundationdb-is-open-source/</dc:identifier>
</item>
<item>
<title>How engineers can stand out from the applicant pool</title>
<link>https://www.keyvalues.com/blog/how-engineers-can-stand-out-from-the-applicant-pool</link>
<guid isPermaLink="true" >https://www.keyvalues.com/blog/how-engineers-can-stand-out-from-the-applicant-pool</guid>
<description>&lt;p class=&quot;blog-published-date&quot;&gt;April 19th, 2018&lt;/p&gt;

&lt;div class=&quot;block&quot; readability=&quot;17&quot;&gt;
&lt;p&gt;Everyone wants to stand out when they‘re applying for new opportunities, including me. In fact, it’s one of the most common questions engineers ask me these days.&lt;/p&gt;
&lt;p&gt;To get more ideas, I reached out to people who have been on both sides of the table: engineers who have been employed in the past, but are now founders of their own companies and hiring engineers.&lt;/p&gt;
&lt;p&gt;I asked each technical founder the same question:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;blog-quote&quot;&gt;What have you done in the past, or seen other engineers do, to stand out from the applicant pool?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;The responses were so good, I had to share.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;24.515738498789&quot;&gt;
&lt;h3&gt;Daria Rose Evdokimova &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of &lt;a href=&quot;https://www.keyvalues.com/voiceops&quot; class=&quot;blog--profile-link&quot; data-page-location=&quot;blog&quot;&gt;VoiceOps&lt;/a&gt;, previously engineering at Coinbase, Gusto, and Google.&lt;/p&gt;
&lt;p&gt;I didn’t wait for recruiters to reach out to me, but did my research and found companies I was most excited about and reached out directly to technical recruiters with a very specific explanation of why I wanted to work for them. E.g. I repeatedly heard that Gusto had the best culture and treated their employees extremely well, and I wanted to learn more about that (it turned out to be completely true).&lt;/p&gt;
&lt;p&gt;Now being on the other side of the table, as a person who looks at all the applications that come in for &lt;a href=&quot;https://www.keyvalues.com/voiceops&quot;&gt;VoiceOps&lt;/a&gt;, I can say that it’s extremely easy to figure out if a person has done their research and is applying specifically to us, or if they have no idea which company they’re submitting their application for.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;52&quot;&gt;
&lt;h3&gt;Amy Hoy &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of Stacking the Bricks, 30x500, Freckle Time Tracking, and more.&lt;/p&gt;
&lt;p&gt;The best thing any engineer can do to stand out is to help others. Lots of folks say, “Contribute to open source!” but that’s only one way to do it.&lt;/p&gt;
&lt;p&gt;Back when I was more active in programming, everybody in my language communities knew who I was — I became a go-to person — and yet I never contributed to OSS. People trusted my programming ability because of the things I wrote about programming. My cheat sheets built my credibility. Only a person who understands can teach others… but, in a glorious flip side, teaching others builds understanding. Speaking about programming or relevant professional topics, recording screencasts, sharing code snippets, designing cheat sheets, writing blog posts, all of these things will build reputation and communication skills and demonstrate that you are a well-rounded individual and not just a keyboard jockey.&lt;/p&gt;
&lt;p&gt;Another thing is to have some kind of cross-over skill, whether it’s ethics, philosophy, business, accessibility, design, sales, public speaking, security, the front-end guy who knows databases, the back-end girl who knows CSS, etc.&lt;/p&gt;
&lt;p&gt;Lastly, even if you never do any of the above, learn how to listen, elicit requirements, and understand business goals. If you can go to an interviewer and explain how you and your skills will help the business as a whole and not just “Solve Interesting Problems,” you’ll be ahead of the pack. Most employees never look up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;16.825102880658&quot;&gt;
&lt;h3&gt;Christine Spang &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of &lt;a href=&quot;https://www.keyvalues.com/nylas&quot; class=&quot;blog--profile-link&quot; data-page-location=&quot;blog&quot;&gt;Nylas&lt;/a&gt;, previously engineering at Ksplice (bought by Oracle).&lt;/p&gt;
&lt;p&gt;Significant open source contributions are one, but they require a lot of free time which not everybody has. I got lucky having gotten into this when I was a teenager when I had a lot of free time.&lt;/p&gt;
&lt;p&gt;In onsite interviews, one of the things you can do to stand out is express genuine excitement and curiosity. These traits are infectious and show that you’re likely to put in effort to be successful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;16&quot;&gt;
&lt;h3&gt;Leah Culver &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of Breaker, previously developer advocate and engineer at Dropbox.&lt;/p&gt;
&lt;p&gt;When an engineer is a fan of the product, they stand out. If they’ve been using the product, they can guess what some of the technical challenges will be and may already have suggestions for improvements. I also personally look for engineers with a collaborative attitude rather than a competitive one. Humility is important too. Everyone makes mistakes and all software has bugs, but being willing and able to quickly fix issues as they arise is the key to keeping everything moving at a startup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;10.746987951807&quot;&gt;
&lt;h3&gt;Michelle Glauser &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of Techtonica, previously freelancing as a software engineer.&lt;/p&gt;
&lt;p&gt;People really stand out when they make websites specifically targeted at companies they want to work at to showcase their skills, like &lt;a href=&quot;http://www.nina4airbnb.com/&quot;&gt;http://www.nina4airbnb.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block&quot; readability=&quot;14&quot;&gt;
&lt;h3&gt;Jen Dewalt &lt;/h3&gt;
&lt;p class=&quot;quoter-description&quot;&gt;Founder of Zube, previously Head of Growth at Wit.ai (acquired by Facebook).&lt;/p&gt;
&lt;p&gt;For me, it’s all about “what have you built.” I’m totally uninterested in whether someone can whiteboard some ridiculous academic problem. I love to see engineers who have made real things that they can talk about passionately. I think that’s a much better indicator of success than whether they can write bubble sort on a whiteboard.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 19 Apr 2018 16:34:43 +0000</pubDate>
<dc:creator>lynnetye</dc:creator>
<og:description>Technical founders share stories and advice about how software engineers can stand out from the applicant pool.</og:description>
<og:image>https://firebasestorage.googleapis.com/v0/b/key-values-development.appspot.com/o/images%2Fkeyvalues%2FBlog%2Ffb-how-engineers-can-stand-out--tech-founders.jpg?alt=media&amp;token=c55bf67f-8e0f-412e-a5d5-90ced9e35922</og:image>
<og:title>How engineers can stand out from the applicant pool (advice from technical founders) - Key Values</og:title>
<og:url>https://www.keyvalues.com/blog/how-engineers-can-stand-out-from-the-applicant-pool</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.keyvalues.com/blog/how-engineers-can-stand-out-from-the-applicant-pool</dc:identifier>
</item>
<item>
<title>‘I Fundamentally Believe That My Time at Reddit Made the World a Worse Place’</title>
<link>http://nymag.com/selectall/2018/04/dan-mccomas-reddit-product-svp-and-imzy-founder-interview.html</link>
<guid isPermaLink="true" >http://nymag.com/selectall/2018/04/dan-mccomas-reddit-product-svp-and-imzy-founder-interview.html</guid>
<description>&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43ljjm009uq7yekqrrzlej@published&quot; data-word-count=&quot;64&quot;&gt;&lt;em&gt;Over the last few months, Select All has interviewed more than a dozen prominent technology figures about what has gone wrong with the contemporary internet for a project called “&lt;/em&gt;&lt;a href=&quot;http://nymag.com/selectall/2018/04/an-apology-for-the-internet-from-the-people-who-built-it.html&quot;&gt;&lt;em&gt;The Internet Apologizes&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.” We’re now publishing lengthier transcripts of each individual interview. This interview features Dan McComas, the former senior vice-president for product of Reddit and the founder and CEO of&lt;/em&gt; &lt;a href=&quot;https://www.nytimes.com/2016/06/09/technology/imzy-is-a-kinder-gentler-reddit-if-it-can-stay-that-way.html&quot;&gt;&lt;em&gt;Imzy, a community-focused platform&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg5bjqm4001o2c5zl6trjckf@published&quot; data-word-count=&quot;9&quot;&gt;&lt;em&gt;You can&lt;/em&gt; &lt;a href=&quot;http://nymag.com/tags/the-internet-apologizes/&quot;&gt;&lt;em&gt;find other interviews from this series here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg5bj4ty001h2c5zwdf61g05@published&quot; data-word-count=&quot;173&quot;&gt;&lt;strong&gt;Reddit started a couple of years after Facebook, and it’s super giant, and the kind of thing that you were present for was the challenge of building a platform that can accommodate a really large and sprawling set of communities, but at the same time make sure that it’s able to maintain community standards. You worked at it, I know, from the product end. I’m interested in hearing a bit about how you came to work at Reddit, and the questions you were thinking about.&lt;/strong&gt;&lt;br/&gt;I came to work at Reddit through Reddit Gifts. I started Reddit Gifts, and the intention there was just really to see if we could get people to do nice things for other people. That was it. It was just kind of a concept that we came up with and then ran with it. It ended up being pretty impactful, I think, to the overall community. Ultimately, it was too much time for us to manage, so we were going to shut it down, and then Reddit acquired us.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo6m00243b5zq1s5euqd@published&quot; data-word-count=&quot;87&quot;&gt;I came in to work at Reddit officially in 2011, and kept doing Reddit Gifts and also being involved with the Reddit side. For a few years there, it was just interesting. I was watching them kind of from the outside, but from the inside as well because I was privy to all the conversations going on. That was kind of during the time of, I think, the r/jailbait debacle. We were acquired just before Yishan became CEO. I worked really closely with Yishan throughout the years.&lt;/p&gt;



&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnv9000u3b5ziws4zkhg@published&quot; data-word-count=&quot;62&quot;&gt;For me, it was an interesting aspect that I got on it because I got to see the inner workings of the decisions they were making and why they were making the decisions they were making, but I wasn’t in the position, nor would I want to be in the position, of having any kind of impact on the decisions being made.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnvc000w3b5zcqe7213r@published&quot; data-word-count=&quot;148&quot;&gt;&lt;strong&gt;What were some of those critical decisions that you’re thinking of?&lt;/strong&gt;&lt;br/&gt;First, I’ll say there were very few decisions made. I think that the biggest problem that Reddit had and continues to have, and that all of the platforms, Facebook and Twitter, and Discord now continue to have is that they’re not making decisions, is that there is absolutely no active thought going into their problems — problems that are going to exist in coming months or years — and what they can do to combat them. I know firsthand that between 2011 and 2015 or 2016, there was just really no thought going into it until I took over product, Ellen [Pao] took over the CEO role, and Jessica [Moreno] took over the head of community role, and we started trying to think about what was going on and what was going to be happening in the future.&lt;/p&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnve000y3b5z90s5dnxw@published&quot; data-word-count=&quot;92&quot;&gt;We can talk about those decisions if you want, but I think the more interesting aspect is just why people aren’t thinking about this stuff, and how can we get people to think about this stuff. That’s really half of the premise of why Imzy was started. I think there’s just a complete breakdown in the kind of thought process behind how your technology is going to affect the users that use it and the world at large, and the incentive structure that is behind Silicon Valley start-ups and how they’re formed.&lt;/p&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnvc000v3b5zo5c07z10@published&quot; data-word-count=&quot;56&quot;&gt;&lt;strong&gt;What’s that incentive structure?&lt;/strong&gt;&lt;br/&gt;The incentive structure is simply growth at all costs. There was never, in any board meeting that I have ever attended, a conversation about the users, about things that were going on that were bad, about potential dangers, about decisions that might affect potential dangers. There was never a conversation about that stuff.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnwg00133b5zljcj6bfq@published&quot; data-word-count=&quot;62&quot;&gt;The only time we would ever hear anything from the board on that stuff is when there were huge press debacles like the Anderson Cooper thing. In that case, we would get a call from the people who were being negatively affected by the press basically wanting to know how they should answer and what we were going to do about it.&lt;/p&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnwg00123b5z4lz3p3ix@published&quot; data-word-count=&quot;19&quot;&gt;The kind of classic comment that would come up in every board meeting was, “Why aren’t you growing faster?”&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnwc00103b5zcqw4rl98@published&quot; data-word-count=&quot;14&quot;&gt;We’d say, “Well, we’ve grown by 40 million visitors since the last board meeting.”&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnwf00113b5zsoglxs72@published&quot; data-word-count=&quot;29&quot;&gt;And the response was, “That’s slower than the internet is growing; that’s not enough. You have to grow more.” Ultimately, that is why Ellen and I were let go.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnzd001b3b5zpizy195a@published&quot; data-word-count=&quot;108&quot;&gt;&lt;strong&gt;Because you pushed back against that?&lt;/strong&gt;&lt;br/&gt;Because there was so much shit going on: on the site; in the press because of Ellen’s case; internally in the company, we had just moved everybody to San Francisco and pretty much the entire employee base was totally pissed off, and there was so much cleanup to be done just from an organization side; and the technology was in such bad shape. There was no way that we could focus on the type of growth efforts that they wanted. And if you have a small staff, you have to focus on the problems that are going to give you the biggest impact.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnyh00163b5z3pale4jr@published&quot; data-word-count=&quot;137&quot;&gt;If you look from a product angle, if you look at that just from a funnel basis, it’s like 99 percent of everybody who visits Reddit don’t know what Reddit is. They find it by organic search or from a person sharing it. They land on a page and they leave and they never come back. The biggest opportunity to grow Reddit is to focus on that part of the funnel. By doing that, and putting 90 percent of your resources toward focusing on that part of the funnel, you pretty much completely ignore everything that’s actually going on on the site. You ignore the moderators; you ignore the users who are contributing content; you ignore the communities that are being created and the activities going on within them. You basically risk the health of your platform.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnyh00153b5z8rz0ge84@published&quot; data-word-count=&quot;62&quot;&gt;It’s a really mismatched incentive structure because if Reddit, specifically, focused all their efforts on the health of their platform, on the people that are really the contributors and not the consumers, they would see growth beyond what they’re getting. It’s kind of a backward way of looking at the problem from a traditional product perspective because you’re not directly affecting growth.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnyi00173b5zsz3lfhvx@published&quot; data-word-count=&quot;79&quot;&gt;&lt;strong&gt;Why, then, do they care so much about growth? Revenue?&lt;/strong&gt;&lt;br/&gt;From the inside, I can tell you that the board is never asking about revenue. They honestly don’t care, and they said as much. They’re only asking about growth. They believe that if they have a billion unique visitors a month, that they have a property that is going to be worth a ton of money in some way eventually. They really do look at it in that abstract way.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnzg001d3b5zyx083cpw@published&quot; data-word-count=&quot;25&quot;&gt;I know they’re making a lot of strides on the advertising side. But I guarantee, that is not their focus. Their focus is purely growth.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnzj001e3b5z956zg2dm@published&quot; data-word-count=&quot;18&quot;&gt;&lt;strong&gt;This dynamic at Reddit is hardly unique. It seems like it applies to all the major digital platforms.&lt;/strong&gt;&lt;br/&gt;Absolutely.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lnz8001a3b5zhbja5iyt@published&quot; data-word-count=&quot;168&quot;&gt;&lt;strong&gt;In Reddit’s case, that presented a lot of challenges, and it means that they prioritized growth and sacrificed instituting measures or investing in the kinds of changes that would have made the site less toxic. Looking at it from the outside and based on your experience at Reddit and your knowledge of that platform, how do you see this problem mapping onto Facebook or YouTube or Twitter?&lt;/strong&gt;&lt;br/&gt;Yeah, those sites are wholly different in their incentive structure at this point. It’s a bit different and nuanced in that they’re all public. That brings on a number of other expectations. There is an ultimate expectation of revenue and profit. There’s also another expectation of — I wouldn’t say growth, but I would say a predictable pattern of growth, I guess. I don’t think it’s Facebook’s ultimate objective to get to 5 billion users or something. They have a humongous user base and they don’t want to lose anybody, and they want to have the right kind of activity going on.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo0s001f3b5zm58qatxt@published&quot; data-word-count=&quot;184&quot;&gt;I absolutely disagree with a lot of people and think that Facebook has done a better job at this than any other company. I think they have tried to prioritize user safety and they have tried to put processes in place for managing content. I think Twitter is much worse. I think, ultimately, the problem that Reddit has is the same as Twitter and Discord. By focusing on growth and growth only and ignoring the problems, they amassed a large set of cultural norms on their platforms. Their cultural norms are different for every community, but they tend to stem from harassment or abuse or bad behavior, and they have worked themselves into a position where they’re completely defensive and they can just never catch up on the problem. I really don’t believe it’s possible for either of them to catch up on the problem. I think the best that they can do is figure out how to hide this behavior from an average user. I don’t see any way that it’s going to improve. I have no hope for either of those platforms.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo0w001i3b5zrb63zkf7@published&quot; data-word-count=&quot;88&quot;&gt;&lt;strong&gt;Why?&lt;/strong&gt;&lt;br/&gt;I just think that the problems are too ingrained, in not only the site and the site’s communities and users but in the general understanding and expectations of the public. I think that if you ask pretty much anybody about Reddit, they’re either not going to know what Reddit is, which is the large majority of people, or they’re going to be like, “Oh, it’s that place where there’s jailbait or something like that.” I don’t think that they’re going to be able to turn these things around.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo0w001g3b5ziueoc4gr@published&quot; data-word-count=&quot;135&quot;&gt;&lt;strong&gt;Were there moments in which Reddit chose to double down on something and made it that much harder to work toward a solution?&lt;/strong&gt;&lt;br/&gt;I don’t know. I’m trying to think about your question. The typical pattern that we always went through was, there would be a bunch of bad behavior on the site, and the community team would have to deal with it and would be really annoyed. Sometimes they would take the free-speech side and decide that we don’t want to make a call on this. Other times they would say, “Hey, we need to take care of this,” and somebody above them would raise either the free-speech side or the “I don’t want to deal with this because it would cause too many problems on the site” side. That was more often the response.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo17001k3b5zgytc63fz@published&quot; data-word-count=&quot;124&quot;&gt;There are a couple of subreddits, some of which have been banned and some haven’t, but the FatPeopleHate one was a really bad one. There are a bunch of animal-cruelty subreddits, specifically with a sexual nature, that they would always refuse to ban. The arguments were usually, “We don’t want to touch this because these are our most volatile users and they’ll just make things a nightmare,” and then, ultimately, these things will bubble up, make it into the press, and then we would make a decision to change things. We would deal with the immediate impact, which was painful, would last a week or two, and then it would go away. For the most part, unfortunately, I see them still following this pattern.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo23001m3b5zc2mhf783@published&quot; data-word-count=&quot;57&quot;&gt;&lt;strong&gt;Is there something recent that you’re thinking of?&lt;/strong&gt;&lt;br/&gt;I can’t remember the specific instances right now, but there was a bunch of press about things that were going on on Reddit and Discord, and they both reacted and banned the subreddit. They made an announcement, “We’re taking a bigger stance against these things.” Discord made the same announcement.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo24001o3b5zsjxut7cv@published&quot; data-word-count=&quot;68&quot;&gt;It’s just more of the same. I don’t see them getting in front of the problem and it’s a total bummer, to be honest. It’s a super bummer. I hate it. I still grapple with the fact that I worked at Reddit, and so does Jessica. She’s decided to leave the industry completely. She’s completely changing her career and has left the tech industry altogether. It’s a bummer.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo22001l3b5zfpvwlt9j@published&quot; data-word-count=&quot;199&quot;&gt;&lt;strong&gt;There’s now this rising chorus of tech executives who, whether it’s because of the Russia election stuff or user privacy concerns or broader user safety issues, are speaking out. Do you think this could amount to any substantial change?&lt;/strong&gt;&lt;br/&gt;I don’t think the existing platforms are going to change. I do believe that new platforms could be started up, could operate better, could be more mindful, and could create better infrastructure and platforms for the large public. But in order to do that, I think that one of two things needs to happen. I think that the venture capitalists need to kind of reframe their thinking on how these companies look as they start up and grow. I know firsthand that at least the investors that I worked with at Imzy are not ready to undertake that path. Imzy shut down, we still had $8 million in the bank, and we had raised $11 million. I know firsthand the palate of these investors, and from my experience, the majority of Silicon Valley investors are all the same archetype. I think that somebody needs to come along and change their thinking on that. I don’t think that that’s going to happen.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo29001q3b5zi0ta2xuc@published&quot; data-word-count=&quot;171&quot;&gt;The other way is for a group of people to get together and create a modern platform using in some way their own resources, or finding the resources in interesting ways to do so. Unfortunately, it’s a really expensive process to build a platform like this. It takes a lot of engineering, it takes a lot of human power, it takes a lot of marketing and PR power, and it’s just an expensive process and it takes a long time. It’s really hard to get a network effect going. It would take years. It’s just a really hard process that somebody needs to be in for that ride. I just don’t believe that right now we have found the right mix of the right founders and team to build the infrastructure, and the right funding mechanism to make that happen. I tried, and it just totally didn’t work. It failed. I don’t know. I would love to take a crack at it, but it’s fucking hard to put these resources together.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo3d001t3b5z64wcy5ie@published&quot; data-word-count=&quot;206&quot;&gt;&lt;strong&gt;Let’s say you were able to change the thinking and you were able to get a group of folks who were interested in putting up the capital necessary to create a new platform. Could you get a seat at the table with Facebook and Twitter?&lt;/strong&gt;&lt;br/&gt;I think it’s absolutely possible, but it takes a couple of major factors. I think a start-up needs to think about the monetization and how it can work with the users instead of against the users. I think they need to figure out the right funding mechanisms and incentive structures that also work toward the users. I think they need to have the right product team in place to focus on users. You’ll start to see a pattern emerge here. I think that they need to have a community or a service team from day one that focuses on users’ well-being. I think they need to have the right intentions. I think you need to get all those kinds of things in place; you need to understand the investment that you’re in for, as far as time. Most start-ups these days have a 12-to-18-month horizon that they look at, and that’s just not enough. That’s not enough to build one of these platforms.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo36001r3b5zytmkfnmg@published&quot; data-word-count=&quot;62&quot;&gt;Reddit got lucky. I always thought being acquired and then ignored by Condé Nast was a blessing and a curse. It allowed the communities time to organically grow. Developers let it set and evolve. And that’s exactly the opportunity the platforms need — they need that time to find their footing and to find a number of different cohorts to grow in.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo3f001u3b5z2m48mjzj@published&quot; data-word-count=&quot;87&quot;&gt;I think that the acquisition that happened was a weird one. I think Condé Nast wanted some street cred, that’s why they bought it. I don’t think they knew what they were buying. In fact, I know they didn’t know what to do with it other than just to let it sit and gain some momentum. Now [co-founder and CEO] Steve [Huffman] is able to grow it into something, and I think he’s gonna do a great job. I think he’s gonna grow it into something huge.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo3f001v3b5zw2zx2is3@published&quot; data-word-count=&quot;44&quot;&gt;&lt;strong&gt;But you don’t think that growth solves the problems?&lt;/strong&gt;&lt;br/&gt;No, absolutely not. It’s just gonna keep getting worse. I fundamentally believe that my time at Reddit made the world a worse place. And that sucks, and it sucks to have to say that about myself.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo4v001y3b5z9g8ljz64@published&quot; data-word-count=&quot;176&quot;&gt;&lt;strong&gt;If you were talking to people making platforms now, what would you urge them to pay attention to?&lt;/strong&gt;&lt;br/&gt;I don’t have very many opinions or thoughts about what Reddit or Twitter should do at this time. I just don’t. But I’ve got a lot of advice for start-ups, and it’s not very fucking complicated. It’s just: Think about the impact that you want to have on your users and on the people consuming your content and do the right thing. They know what the right thing is. Discord knows what the right thing is. I had conversations with Jason [Citron] a year ago about the problem of white supremacy on his site, and he said, “I don’t want to invade their privacy by going into their channels and reading what they’re doing.” And I said, “They’re gonna cause deaths because you’re not doing that.” And he said, “You really think so?” And I said, “Yeah.” And sure enough they didn’t do anything, and sure enough deaths were caused because of the shit going on in their channels.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo4w001z3b5z526qcqdu@published&quot; data-word-count=&quot;53&quot;&gt;These things can be foreseen. Don’t be idiots about it. You’re people, you see what’s going on, you see trends that are forming, just fucking do something. It’s not that hard. That’s my advice to founders of start-ups, just be mindful of it. Or put somebody in charge of being mindful of it.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo4z00223b5zjzdv75v2@published&quot; data-word-count=&quot;176&quot;&gt;&lt;strong&gt;All the big companies do have people who are paid to mind this, but it doesn’t seem to be enough.&lt;/strong&gt;&lt;br/&gt;My guess is that Reddit has six to ten community managers. And even if they had double that, that’s not enough. And my guess is that they have five engineers working on it; that’s just not enough. When I was there and we scaled up the community team, there were three people on the community team. There was a community of 250 million people. It’s not enough. Facebook and Twitter have teams in other countries taking care of the worst of the internet, and Reddit hasn’t even considered doing something like that. And it takes a big investment. I think you’ve got to get out in front of the problem when you start up, and you gotta be able and willing to invest in what it takes to keep up with it. But I think that ignoring either of those puts you in a place where I don’t think you can ever really catch up from it.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjg43lo4z00213b5zcphyc636@published&quot; data-word-count=&quot;55&quot;&gt;&lt;strong&gt;I really appreciate you taking the time to speak with me. I’ve been thinking about this for a few years, and it’s felt at once kind of affirming to see it blow up this way, and at the same time totally terrifying.&lt;/strong&gt;&lt;br/&gt;It’s awful and it’s gonna get worse, so you’re in the right business.&lt;/p&gt;
</description>
<pubDate>Thu, 19 Apr 2018 15:42:51 +0000</pubDate>
<dc:creator>smacktoward</dc:creator>
<og:title>‘I Fundamentally Believe That My Time at Reddit Made the World a Worse Place’</og:title>
<og:url>http://nymag.com/selectall/2018/04/dan-mccomas-reddit-product-svp-and-imzy-founder-interview.html</og:url>
<og:description>A conversation with former Reddit product head Dan McComas on the problems with Reddit, Twitter, and the rest of the web.</og:description>
<og:image>https://pixel.nymag.com/imgs/daily/selectall/2018/04/10/internet-sorry/dan-mccomas.w1200.h630.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://nymag.com/selectall/2018/04/dan-mccomas-reddit-product-svp-and-imzy-founder-interview.html</dc:identifier>
</item>
<item>
<title>MySQL 8.0 is now generally available</title>
<link>https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/</link>
<guid isPermaLink="true" >https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/</guid>
<description>&lt;p&gt;We proudly announce General Availability of MySQL 8.0. &lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Download now!&lt;/a&gt; MySQL 8.0 is an extremely exciting new version of the world’s most popular open source database with improvements across the board. Some key enhancements include:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;SQL&lt;/strong&gt; Window functions, Common Table Expressions, NOWAIT and SKIP LOCKED, Descending Indexes, Grouping, Regular Expressions, Character Sets, Cost Model, and Histograms.&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON&lt;/strong&gt; Extended syntax, new functions, improved sorting, and partial updates. With JSON table functions you can use the SQL machinery for JSON data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GIS&lt;/strong&gt; Geography support. Spatial Reference Systems (SRS), as well as SRS aware spatial datatypes,  spatial indexes,  and spatial functions.&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reliability&lt;/strong&gt; DDL statements have become atomic and crash safe, meta-data is stored in a single, transactional data dictionary. Powered by InnoDB! &lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt; Significant enhancements to Performance Schema, Information Schema, Configuration Variables, and Error Logging.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manageability&lt;/strong&gt; Remote management, Undo tablespace management, and new instant DDL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; OpenSSL improvements, new default authentication, SQL Roles, breaking up the super privilege, password strength, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt; InnoDB is significantly better at Read/Write workloads, IO bound workloads, and high contention “hot spot” workloads. Added Resource Group feature to give users an option optimize for specific workloads on specific hardware by mapping user threads to CPUs.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The above represents some of the highlights and I encourage you to further drill into the complete series of Milestone blog posts—&lt;a href=&quot;http://mysqlserverteam.com/the-mysql-8-0-0-milestone-release-is-available/&quot;&gt;8.0.0&lt;/a&gt;, &lt;a href=&quot;http://mysqlserverteam.com/the-mysql-8-0-1-milestone-release-is-available/&quot;&gt;8.0.1&lt;/a&gt;, &lt;a href=&quot;http://mysqlserverteam.com/the-mysql-8-0-2-milestone-release-is-available/&quot;&gt;8.0.2&lt;/a&gt;, &lt;a href=&quot;https://mysqlserverteam.com/the-mysql-8-0-3-release-candidate-is-available/&quot;&gt;8.0.3&lt;/a&gt;, and &lt;a href=&quot;https://mysqlserverteam.com/the-mysql-8-0-4-release-candidate-is-available/&quot;&gt;8.0.4&lt;/a&gt; —and even further down in to the individual &lt;a href=&quot;http://dev.mysql.com/worklog/&quot;&gt;worklogs&lt;/a&gt; with their specifications and implementation details. Or perhaps you prefer to just look at the source code at &lt;a href=&quot;https://github.com/mysql&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github.com/mysql&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Developer features&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;MySQL Developers want new features and MySQL 8.0 delivers many new and much requested features in areas such as SQL, JSON, Regular Expressions, and GIS. Developers also want to be able to store Emojis, thus UTF8MB4 is now the default character set in 8.0. Finally there are improvements in Datatypes, with bit-wise operations on BINARY datatypes and improved IPv6 and UUID functions.&lt;/p&gt;
&lt;h3&gt;SQL&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;Window Functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 delivers SQL window functions.   Similar to grouped aggregate functions, window functions perform some calculation on a set of rows, e.g. &lt;tt&gt;COUNT&lt;/tt&gt; or &lt;tt&gt;SUM&lt;/tt&gt;. But where a grouped aggregate collapses this set of rows into a single row, a window function will perform the aggregation for each row in the result set.&lt;/p&gt;
&lt;p&gt;Window functions come in two flavors: SQL aggregate functions used as window functions and specialized window functions. This is the set of aggregate functions in MySQL that support windowing: &lt;tt&gt;COUNT&lt;/tt&gt;, &lt;tt&gt;SUM&lt;/tt&gt;, &lt;tt&gt;AVG&lt;/tt&gt;, &lt;tt&gt;MIN&lt;/tt&gt;, &lt;tt&gt;MAX&lt;/tt&gt;, &lt;tt&gt;BIT_OR&lt;/tt&gt;, &lt;tt&gt;BIT_AND&lt;/tt&gt;, &lt;tt&gt;BIT_XOR&lt;/tt&gt;, &lt;tt&gt;STDDEV_POP&lt;/tt&gt; (and its synonyms &lt;tt&gt;STD&lt;/tt&gt;, &lt;tt&gt;STDDEV&lt;/tt&gt;), &lt;tt&gt;STDDEV_SAMP&lt;/tt&gt;, &lt;tt&gt;VAR_POP&lt;/tt&gt; (and its synonym &lt;tt&gt;VARIANCE&lt;/tt&gt;) and &lt;tt&gt;VAR_SAMP&lt;/tt&gt;. The set of specialized window functions are: &lt;tt&gt;RANK&lt;/tt&gt;, &lt;tt&gt;DENSE_RANK&lt;/tt&gt;, &lt;tt&gt;PERCENT_RANK&lt;/tt&gt;, &lt;tt&gt;CUME_DIST&lt;/tt&gt;, &lt;tt&gt;NTILE&lt;/tt&gt;, &lt;tt&gt;ROW_NUMBER&lt;/tt&gt;, &lt;tt&gt;FIRST_VALUE&lt;/tt&gt;, &lt;tt&gt;LAST_VALUE&lt;/tt&gt;, &lt;tt&gt;NTH_VALUE&lt;/tt&gt;, &lt;tt&gt;LEAD&lt;/tt&gt; and &lt;tt&gt;LAG&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Support for window functions (a.k.a. analytic functions) is a frequent user request. Window functions have long been part of standard SQL (SQL 2003). See blog post by Dag Wanvik &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-2-introducing-window-functions/&quot;&gt;here&lt;/a&gt; as well as blog post by Guilhem Bichot &lt;a href=&quot;https://mysqlserverteam.com/row-numbering-ranking-how-to-use-less-user-variables-in-mysql-queries/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Common Table Expression&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 delivers [Recursive] Common Table Expressions (CTEs).  Non-recursive CTEs can be explained as “improved derived tables” as it allow the derived table to be referenced more than once. A recursive CTE is a set of rows which is built iteratively: from an initial set of rows, a process derives new rows, which grow the set, and those new rows are fed into the process again, producing more rows, and so on, until the process produces no more rows. CTE is a commonly requested SQL feature, see for example feature request &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=16244&quot;&gt;16244&lt;/a&gt; and &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=32174&quot;&gt;32174&lt;/a&gt; . See blog posts by Guilhem Bichot &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-labs-recursive-common-table-expressions-in-mysql-ctes/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-labs-recursive-common-table-expressions-in-mysql-ctes-part-two-how-to-generate-series/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-labs-recursive-common-table-expressions-in-mysql-ctes-part-three-hierarchies/&quot;&gt;here&lt;/a&gt;, and &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-1-recursive-common-table-expressions-in-mysql-ctes-part-four-depth-first-or-breadth-first-traversal-transitive-closure-cycle-avoidance/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;NOWAIT and SKIP LOCKED&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 delivers &lt;code&gt;NOWAIT&lt;/code&gt; and &lt;code&gt;SKIP LOCKED&lt;/code&gt; alternatives in the SQL locking clause. Normally, when a row is locked due to an &lt;code&gt;UPDATE&lt;/code&gt; or a &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt;, any other transaction will have to wait to access that locked row. In some use cases there is a need to either return immediately if a row is locked or ignore locked rows. A locking clause using &lt;code&gt;NOWAIT&lt;/code&gt; will never wait to acquire a row lock. Instead, the query will fail with an error. A locking clause using &lt;code&gt;SKIP LOCKED&lt;/code&gt; will never wait to acquire a row lock on the listed tables. Instead, the locked rows are skipped and not read at all. NOWAIT and SKIP LOCKED are frequently requested SQL features. See for example feature request &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=49763&quot;&gt;49763&lt;/a&gt; . We also want to say thank you to &lt;em&gt;Kyle Oppenheim &lt;/em&gt;for his code contribution! See blog post by Martin Hansson &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-1-using-skip-locked-and-nowait-to-handle-hot-rows/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Descending Indexes&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 delivers support for indexes in descending order. Values in such an index are arranged in descending order, and we scan it forward. Before 8.0, when a user create a descending index, we created an ascending index and scanned it backwards. One benefit is that forward index scans are faster than backward index scans. Another benefit of a real descending index is that it enables us to use indexes instead of filesort for an &lt;code&gt;ORDER BY&lt;/code&gt; clause with mixed &lt;code&gt;ASC/DESC&lt;/code&gt; sort key parts. &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html&quot;&gt;Descending Indexes&lt;/a&gt; is a frequently requested SQL feature. See for example feature request &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=13375&quot;&gt;13375&lt;/a&gt; . See blog post by Chaithra Gopalareddy  &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-labs-descending-indexes-in-mysql/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;GROUPING&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0  delivers &lt;code&gt;GROUPING()&lt;/code&gt;, &lt;code&gt;SQL_FEATURE T433&lt;/code&gt;. The &lt;code&gt;GROUPING()&lt;/code&gt; function distinguishes super-aggregate rows from regular grouped rows. &lt;code&gt;GROUP BY&lt;/code&gt; extensions such as &lt;code&gt;ROLLUP&lt;/code&gt; produce super-aggregate rows where the set of all values is represented by null. Using the &lt;code&gt;GROUPING()&lt;/code&gt; function, you can distinguish a null representing the set of all values in a super-aggregate row from a &lt;code&gt;NULL&lt;/code&gt; in a regular row. GROUPING is a frequently requested SQL feature. See feature requests &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=3156&quot;&gt;3156&lt;/a&gt; and &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=46053&quot;&gt;46053&lt;/a&gt;. Thank you to &lt;em&gt;Zoe Dong&lt;/em&gt; and &lt;em&gt;Shane Adams&lt;/em&gt; for code contributions in feature request &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=46053&quot;&gt;46053&lt;/a&gt; ! See blog post by Chaithra Gopalareddy  &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-grouping-function/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Optimizer Hints&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;In 5.7 we introduced a new hint syntax for &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/optimizer-hints.html&quot;&gt;optimizer hints&lt;/a&gt;. With the new syntax, hints can be specified directly after the &lt;code&gt;SELECT | INSERT | REPLACE | UPDATE | DELETE&lt;/code&gt; keywords in an SQL statement, enclosed in &lt;code&gt;/*+ */&lt;/code&gt; style comments. (See 5.7 blog post by Sergey Glukhov &lt;a href=&quot;https://mysqlserverteam.com/new-optimizer-hints-in-mysql/&quot;&gt;here&lt;/a&gt;). In MySQL 8.0 we complete the picture by fully utilizing this new style:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;MySQL 8.0 adds hints for &lt;code&gt;INDEX_MERGE&lt;/code&gt; and &lt;code&gt;NO_INDEX_MERGE&lt;/code&gt;. This allows the user to control index merge behavior for an individual query without changing the optimizer switch.&lt;/li&gt;
&lt;li&gt;MySQL 8.0 adds hints for &lt;code&gt;JOIN_FIXED_ORDER&lt;/code&gt;, &lt;code&gt;JOIN_ORDER&lt;/code&gt;, &lt;code&gt;JOIN_PREFIX&lt;/code&gt;, and &lt;code&gt;JOIN_SUFFIX&lt;/code&gt;. This allows the user to control table order for the join execution.&lt;/li&gt;
&lt;li&gt;MySQL 8.0 adds a hint called &lt;code&gt;SET_VAR&lt;/code&gt;.  The &lt;code&gt;SET_VAR&lt;/code&gt; hint will set the value for a given system variable for the next statement only. Thus the value will be reset to the previous value after the statement is over. See blog post by Sergey Glukhov &lt;a href=&quot;https://mysqlserverteam.com/new-optimizer-hint-for-changing-the-session-system-variable/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We prefer the new style of optimizer hints as preferred over the old-style hints and setting of &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_optimizer_switch&quot;&gt;&lt;code&gt;optimizer_switch&lt;/code&gt;&lt;/a&gt; values. By not being inter-mingled with SQL, the new hints can be injected in many places in a query string. They also have clearer semantics in being a hint (vs directive).&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 adds new JSON functions and improves performance for sorting and grouping JSON values.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Extended Syntax for Ranges in JSON path expressions&lt;/strong&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 extends the syntax for ranges in JSON path expressions. For example &lt;code&gt;SELECT JSON_EXTRACT('[1, 2, 3, 4, 5]', '$[1 to 3]');&lt;/code&gt; results in &lt;code&gt;[2, 3, 4]&lt;/code&gt;. The new syntax introduced is a subset of the SQL standard syntax, described in SQL:2016, 9.39 SQL/JSON path language: syntax and semantics. See also &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=79052&quot;&gt;Bug#79052&lt;/a&gt; reported by Roland Bouman.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Table Functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds JSON table functions which enables the use of the SQL machinery for JSON data. &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-table-functions.html&quot;&gt;JSON_TABLE()&lt;/a&gt;&lt;/code&gt; creates a relational view of JSON  data. It maps the result of a JSON data evaluation into relational rows and columns. The user can query the result returned by the function as a regular relational table using SQL, e.g. join, project, and aggregate.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Aggregation Functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds the aggregation functions &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_json-arrayagg&quot;&gt;JSON_ARRAYAGG()&lt;/a&gt;&lt;/code&gt; to generate JSON arrays and &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_json-objectagg&quot;&gt;JSON_OBJECTAGG()&lt;/a&gt;&lt;/code&gt; to generate JSON objects . This makes it possible to combine JSON documents in multiple rows into a JSON array or a JSON object. See blog post by Catalin Besleaga &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-labs-json-aggregation-functions/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Merge Functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;The &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html#function_json-merge-patch&quot;&gt;JSON_MERGE_PATCH()&lt;/a&gt;&lt;/code&gt; function implements the semantics of JavaScript (and other scripting languages) specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7396&quot;&gt;RFC7396&lt;/a&gt;, i.e. it removes duplicates by precedence of the second document. For example, &lt;code class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;JSON_MERGE&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;'{&quot;a&quot;:1,&quot;b&quot;:2 }'&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;'{&quot;a&quot;:3,&quot;c&quot;:4 }'&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; # &lt;span class=&quot;com&quot;&gt;returns {&quot;a&quot;:3,&quot;b&quot;:2,&quot;c&quot;:4}&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html#function_json-merge-preserve&quot;&gt;JSON_MERGE_PRESERVE()&lt;/a&gt;&lt;/code&gt; function has the semantics of JSON_MERGE() implemented in MySQL 5.7 which preserves all values, for example  &lt;code class=&quot;prettyprint prettyprinted&quot;&gt;&lt;span class=&quot;pln&quot;&gt;JSON_MERGE&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;'{&quot;a&quot;: 1,&quot;b&quot;:2}'&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;'{&quot;a&quot;:3,&quot;c&quot;:4}'&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# returns {&quot;a&quot;:[1,3],&quot;b&quot;:2,&quot;c&quot;:4}.&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The existing &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html#function_json-merge&quot;&gt;JSON_MERGE()&lt;/a&gt;&lt;/code&gt; function is deprecated in MySQL 8.0 to remove ambiguity for the merge operation. See also proposal in &lt;a href=&quot;http://bugs.mysql.com/bug.php?id=81283&quot;&gt;Bug#81283&lt;/a&gt; and blog post by Morgan Tocker &lt;a href=&quot;https://mysqlserverteam.com/proposal-to-change-the-behavior-of-json_merge/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Pretty Function&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds a &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html#function_json-pretty&quot;&gt;JSON_PRETTY()&lt;/a&gt;&lt;/code&gt; function in MySQL. The function accepts either a JSON native data-type or string representation of JSON and returns a JSON formatted string in a human-readable way with new lines and indentation.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Size Functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds JSON functions related to space usage for a given JSON object. The &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html#function_json-storage-size&quot;&gt;JSON_STORAGE_SIZE()&lt;/a&gt;&lt;/code&gt; returns the actual size in bytes for a JSON datatype.  The &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html#function_json-storage-free&quot;&gt;JSON_STORAGE_FREE()&lt;/a&gt;&lt;/code&gt; returns the free space of a JSON binary type in bytes, including fragmentation and padding saved for inplace update.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Improved Sorting&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 gives better performance for sorting/grouping JSON values by using variable length sort keys. Preliminary benchmarks shows from 1.2 to 18 times improvement in sorting, depending on use case.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;JSON Partial Update&lt;/strong&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds support for partial update for the &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html#function_json-remove&quot;&gt;JSON_REMOVE()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html#function_json-set&quot;&gt;JSON_SET()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html#function_json-replace&quot;&gt;JSON_REPLACE()&lt;/a&gt;&lt;/code&gt; functions.  If only some parts of a JSON document are updated, we want to give information to the handler about what was changed, so that the storage engine and replication don’t need to write the full document. In a replicated environment, it cannot be guaranteed that the layout of a JSON document is exactly the same on the slave and the master, so the physical diffs cannot be used to reduce the network I/O for row-based replication. Thus, MySQL 8.0 provides logical diffs that row-based replication can send over the wire and reapply on the slave. See blog post by Knut Anders Hatlen &lt;a href=&quot;https://mysqlserverteam.com/partial-update-of-json-values/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;GIS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 delivers geography support. This includes meta-data support for Spatial Reference System (SRS), as well as SRS aware spatial datatypes,  spatial indexes,  and spatial functions. In short, MySQL 8.0 understands latitude and longitude coordinates on the earth’s surface and can, for example, correctly calculate the distances between two points on the earths surface in any of the about 5000 supported spatial reference systems.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Spatial Reference System (SRS)&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;The &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/st-spatial-reference-systems-table.html&quot;&gt;ST_SPATIAL_REFERENCE_SYSTEMS&lt;/a&gt;&lt;/code&gt; information schema view provides information about available spatial reference systems for spatial data. This view is based on the SQL/MM (ISO/IEC 13249-3) standard. Each spatial reference system is identified by an SRID number. MySQL 8.0 ships with about 5000 SRIDs from the &lt;a href=&quot;http://www.epsg.org/EPSGhome.aspx&quot;&gt;EPSG Geodetic Parameter Dataset&lt;/a&gt;, covering georeferenced ellipsoids and 2d projections (i.e. all 2D spatial reference systems).&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;SRID aware spatial datatypes&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;Spatial datatypes can be attributed with the spatial reference system definition, for example with SRID 4326 like this: &lt;code&gt;CREATE TABLE t1 (g GEOMETRY SRID 4326);&lt;/code&gt; The SRID is here a SQL type modifier for the GEOMETRY datatype. Values inserted into a column with an SRID property must be in that SRID. Attempts to insert values with other SRIDs results in an exception condition being raised. Unmodified types, i.e., types with no SRID specification, will continue to accept all SRIDs, as before.&lt;/p&gt;
&lt;p&gt;MySQL 8.0 adds the &lt;code&gt;INFORMATION_SCHEMA.ST_GEOMETRY_COLUMNS&lt;/code&gt; view as specified in SQL/MM Part 3, Sect. 19.2. This view will list all GEOMETRY columns in the MySQL instance and for each column it will list the standard &lt;code&gt;SRS_NAME&lt;/code&gt; , &lt;code&gt;SRS_ID&lt;/code&gt; , and &lt;code class=&quot;literal&quot;&gt;GEOMETRY_TYPE_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;SRID aware spatial indexes&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;Spatial indexes can be created on spatial datatypes. Columns in spatial indexes must be declared NOT NULL. For example like this: &lt;code&gt;CREATE TABLE t1 (g GEOMETRY SRID 4326 NOT NULL, SPATIAL INDEX(g));&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Columns with a spatial index should have an SRID type modifier to allow the optimizer to use the index. If a spatial index is created on a column that doesn’t have an SRID type modifier, a warning is issued.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;SRID aware spatial functions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 extends spatial functions such as  &lt;code&gt;ST_Distance()&lt;/code&gt; and &lt;code&gt;ST_Length()&lt;/code&gt; to detect that its parameters are in a geographic (ellipsoidal) SRS and to compute the distance on the ellipsoid. So far, &lt;code&gt;ST_Distance&lt;/code&gt; and spatial relations such as &lt;code&gt;ST_Within&lt;/code&gt;, &lt;code&gt;ST_Intersects&lt;/code&gt;, &lt;code&gt;ST_Contains&lt;/code&gt;, &lt;code&gt;ST_Crosses&lt;/code&gt;, etc.  support geographic computations. The behavior of each ST function is as defined in SQL/MM Part 3 Spatial.&lt;/p&gt;
&lt;h3&gt;Character Sets&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 makes &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.5/en/charset-unicode-utf8mb4.html&quot;&gt;UTF8MB4&lt;/a&gt; the default character set. SQL performance – such as sorting UTF8MB4 strings  – has been improved by a factor of 20 in 8.0 as compared to  5.7. UTF8MB4 is the dominating character encoding for the web, and this move will make life easier for the vast majority of MySQL users.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The default character set has changed from &lt;code&gt;latin1&lt;/code&gt; to &lt;code&gt;utf8mb4&lt;/code&gt; and the default collation has changed from &lt;code&gt;latin1_swedish_ci&lt;/code&gt; to &lt;code&gt;utf8mb4_800_ci_ai&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The changes in defaults applies to libmysql and server command tools as well as the server itself.&lt;/li&gt;
&lt;li&gt;The changes are also reflected in MTR tests, running with new default charset.&lt;/li&gt;
&lt;li&gt;The collation weight and case mapping are based on &lt;a href=&quot;http://www.unicode.org/versions/Unicode9.0.0/&quot;&gt;Unicode 9.0.0&lt;/a&gt; , announced by the Unicode committee on Jun 21, 2016.&lt;/li&gt;
&lt;li&gt;The 21 language specific case insensitive collations available for latin1 (MySQL legacy) have been implemented for  &lt;code&gt;utf8mb4&lt;/code&gt; collations, for example the Czech collation becomes utf8mb4_cs_800_ai_ci. See complete list in &lt;a href=&quot;http://dev.mysql.com/worklog/task/?id=9108&quot;&gt;WL#9108&lt;/a&gt; . See blog post by Xing Zhang &lt;a href=&quot;http://mysqlserverteam.com/new-collations-in-mysql-8-0-0/&quot;&gt;here&lt;/a&gt; .&lt;/li&gt;
&lt;li&gt;Added support for case and accent sensitive collations. MySQL 8.0 supports all 3 levels of collation weight defined by DUCET (Default Unicode Collation Entry Table). See blog post by Xing Zhang &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-1-accent-and-case-sensitive-collations-for-utf8mb4/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Japanese &lt;code&gt;utf8mb4_ja_0900_as_cs&lt;/code&gt; collation for &lt;code&gt;utf8mb4&lt;/code&gt; which sorts characters by using three levels’ weight. This gives the correct sorting order for Japanese. See blog post by Xing Zhang &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-1-japanese-collation-for-utf8mb4/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Japanese with additional kana sensitive feature, &lt;code&gt;utf8mb4_ja_0900_as_cs_ks&lt;/code&gt;,  where ‘ks’ stands for ‘kana sensitive’. See blog post by Xing Zhang &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-kana-sensitive-collation-for-japanese/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Changed all new collations, from Unicode 9.0.0 forward, to be &lt;code&gt;NO PAD&lt;/code&gt; instead of &lt;code&gt;PAD STRING&lt;/code&gt;, ie., treat spaces at the end of a string like any other character. This is done to improve consistency and performance. Older collations are left in place.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See also blog posts by Bernt Marius Johnsen &lt;a href=&quot;http://mysqlserverteam.com/debugging-character-set-issues-by-example/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-collations-migrating-from-older-collations/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-collations-the-devil-is-in-the-details/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Datatypes&lt;/strong&gt;&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;Bit-wise operations on binary data types&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 extends the bit-wise operations (‘bit-wise AND’, etc) to also work with &lt;code&gt;[VAR]BINARY/[TINY|MEDIUM|LONG]BLOB&lt;/code&gt;. Prior to 8.0 bit-wise operations were only supported for integers. If you used bit-wise operations on binaries the arguments were implicitly cast to &lt;code&gt;BIGINT&lt;/code&gt; (64 bit) before the operation, thus possibly losing bits. From 8.0 and onward bit-wise operations work for all &lt;code&gt;BINARY&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; data types, casting arguments such that bits are not lost.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;IPV6 manipulation&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 improves the usability of IPv6 manipulation by supporting bit-wise operations on BINARY data types. In MySQL 5.6 we introduced  the &lt;code&gt;INET6_ATON()&lt;/code&gt; and &lt;code&gt;INET6_NTOA()&lt;/code&gt; functions which convert IPv6 addresses between text form like &lt;code&gt;'fe80::226:b9ff:fe77:eb17'&lt;/code&gt; and &lt;code&gt;VARBINARY(16)&lt;/code&gt;. However, until now we could not combine these IPv6 functions with  bit-wise operations since such operations would – wrongly – convert output to &lt;code&gt;BIGINT&lt;/code&gt;. For example, if we have an IPv6 address and want to test it against a network mask, we can now use  &lt;code&gt;INET6_ATON(address)&lt;br/&gt;&amp;amp; INET6_ATON(network)&lt;/code&gt; because &lt;code&gt;INET6_ATON()&lt;/code&gt; correctly returns the &lt;code&gt;VARBINARY(16)&lt;/code&gt; datatype (128 bits). See blog post by Catalin Besleaga &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-storing-ipv6/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;UUID manipulations&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 improves the usability of UUID manipulations by implementing three new SQL functions: &lt;code&gt;UUID_TO_BIN()&lt;/code&gt;, &lt;code&gt;BIN_TO_UUID()&lt;/code&gt;, and &lt;code&gt;IS_UUID()&lt;/code&gt;. The first one converts from UUID formatted text to &lt;code&gt;VARBINARY(16)&lt;/code&gt;, the second one from &lt;code&gt;VARBINARY(16)&lt;/code&gt; to UUID formatted text, and the last one checks the validity of an UUID formatted text. The UUID stored as a &lt;code&gt;VARBINARY(16)&lt;/code&gt; can be indexed using functional indexes. The functions &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; and &lt;code&gt;UUID_TO_BIN()&lt;/code&gt; can also shuffle the time-related bits and move them at the beginning making it index friendly and avoiding the random inserts in the B-tree, this way reducing the insert time. The lack of such functionality has been mentioned as one of the &lt;a href=&quot;https://www.percona.com/blog/2014/12/19/store-uuid-optimized-way/&quot;&gt;drawbacks of using UUID’s&lt;/a&gt;. See blog post by Catalin Besleaga &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-uuid-support/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Cost Model&lt;/strong&gt;&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;Query Optimizer Takes Data Buffering into Account&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 chooses query plans based on knowledge about whether data resides in-memory or on-disk. This happens automatically, as seen from the end user there is no configuration involved. Historically, the MySQL cost model has assumed data to reside on spinning disks. The cost constants associated with looking up data in-memory and on-disk are now different, thus, the optimizer will choose more optimal access methods for the two cases, based on knowledge of the location of data. See blog post by Øystein Grøvlen &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-query-optimizer-takes-data-buffering-into-account/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Optimizer Histograms&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements histogram statistics. With Histograms, the user can create statistics on the data distribution for a column in a table, typically done for non-indexed columns, which then will be used by the query optimizer in finding the optimal query plan. The primary use case for histogram statistics is for calculating the selectivity (filter effect) of predicates of the form “COLUMN operator CONSTANT”.&lt;/p&gt;
&lt;p&gt;The user creates a histogram by means of the &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html&quot;&gt;ANALYZE TABLE&lt;/a&gt;&lt;/code&gt; syntax which has been extended to accept two new clauses: &lt;code&gt;UPDATE HISTOGRAM ON column [, column] [WITH n BUCKETS]&lt;/code&gt; and &lt;code&gt;DROP HISTOGRAM ON column [, column]&lt;/code&gt;. The number of buckets is optional, the default is 100. The histogram statistics are stored in the dictionary table “column_statistics” and accessible through the view &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/column-statistics-table.html&quot;&gt;information_schema.COLUMN_STATISTICS&lt;/a&gt;&lt;/code&gt;. The histogram is  stored as a JSON object due to the flexibility of the JSON datatype. &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html&quot;&gt;ANALYZE TABLE&lt;/a&gt;&lt;/code&gt;  will automatically decide whether to sample the base table or not, based on table size. It will also decide whether to build a &lt;em&gt;singleton&lt;/em&gt; or a &lt;em&gt;equi-height&lt;/em&gt; histogram based on the data distribution and the number of buckets specified. See blog post by Erik Frøseth &lt;a href=&quot;https://mysqlserverteam.com/histogram-statistics-in-mysql/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Regular Expressions&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 supports regular expressions for UTF8MB4 as well as new functions like &lt;code&gt;REGEXP_INSTR()&lt;/code&gt;, &lt;code&gt;REGEXP_LIKE()&lt;/code&gt;, &lt;code&gt;REGEXP_REPLACE()&lt;/code&gt;, and &lt;code&gt;REGEXP_SUBSTR()&lt;/code&gt;.  The system variables &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_stack_limit&quot;&gt;regexp_stack_limit&lt;/a&gt; (default 32 steps) and &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_regexp_time_limit&quot;&gt;regexp_time_limit&lt;/a&gt; (default &lt;code class=&quot;literal&quot;&gt;8000000&lt;/code&gt; bytes) have been added to control the execution. The &lt;code&gt;REGEXP_REPLACE()&lt;/code&gt;  function is one of the most requested features by the MySQL community, for example see feature request reported as &lt;a href=&quot;http://bugs.mysql.com/bug.php?id=27389&quot;&gt;BUG #27389&lt;/a&gt; by Hans Ginzel. See also blog posts by Martin Hansson &lt;a href=&quot;https://mysqlserverteam.com/new-regular-expression-functions-in-mysql-8-0/&quot;&gt;here&lt;/a&gt; and Bernt Marius Johnsen &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-regular-expressions-and-character-properties/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Dev Ops features&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Dev Ops care about operational aspects of the database, typically about reliability, availability, performance, security, observability, and manageability. High Availability comes with MySQL InnoDB Cluster and MySQL Group Replication which will be covered by a separate blog post. Here follows what 8.0 brings to the table in the other categories.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Reliability&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 increases the overall reliability of MySQL because :&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;MySQL 8.0 stores its meta-data into InnoDB, a proven transactional storage engine.  System tables such as Users and Privileges  as well as Data Dictionary tables now reside in InnoDB.&lt;/li&gt;
&lt;li&gt;MySQL 8.0 eliminates one source of potential inconsistency.  In 5.7 and earlier versions there are essentially two data dictionaries, one for the Server layer and one for the InnoDB layer, and these can get out of sync in some crashing scenarios.   In 8.0 there is only one data dictionary.&lt;/li&gt;
&lt;li&gt;MySQL 8.0 ensures atomic, crash safe DDL. With this the user is guaranteed that any DDL statement will either be executed fully or not at all. This is particularly important in a replicated environment, otherwise there can be scenarios where masters and slaves (nodes) get out of sync, causing data-drift.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This work is done in the context of the new, transactional data dictionary. See blog posts by Staale Deraas &lt;a href=&quot;https://mysqlserverteam.com/atomic-ddl-in-mysql-8-0/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-data-dictionary-status-in-the-8-0-0-dmr/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;Information Schema (speed up)&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 reimplements Information Schema. In the new implementation the Information Schema tables are simple views on data dictionary tables stored in InnoDB. This is by far more efficient than the old implementation with up to 100 times speedup. This makes Information Schema practically usable by external tooling. See blog posts by  Gopal Shankar &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-improvements-to-information_schema/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://mysqlserverteam.com/mysql-8-0-scaling-and-performance-of-information_schema/&quot;&gt;here&lt;/a&gt; , and the  blog post by Ståle Deraas &lt;a href=&quot;https://mysqlserverteam.com/further-improvements-on-information_schema-in-mysql-8-0-3/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Performance Schema (speed up)&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 speeds up performance schema queries by adding more than 100 indexes on performance schema tables.  The indexes on performance schema tables are predefined. They cannot be deleted,added or altered. A performance schema index is implemented as a filtered scan across the existing table data, rather than a traversal through a separate data structure. There are no B-trees or hash tables to be constructed, updated or otherwise managed. Performance Schema tables indexes behave like hash indexes in that a) they quickly retrieve the desired rows, and b) do not provide row ordering, leaving the server to sort the result set if necessary. However, depending on the query, indexes obviate the need for a full table scan and will return a considerably smaller result set. Performance schema indexes are visible with &lt;code&gt;SHOW INDEXES&lt;/code&gt; and are represented in the &lt;code&gt;EXPLAIN&lt;/code&gt; output for queries that reference indexed columns. See &lt;a href=&quot;http://mysqlserverteam.com/using-sys-session-as-an-alternative-to-show-processlist/#comment-11037&quot;&gt;comment&lt;/a&gt; from Simon Mudd. See blog post by Marc Alff &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-performance-schema-now-with-indexes/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Configuration Variables&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds useful information about configuration variables, such as the variable name, &lt;em&gt;min/max&lt;/em&gt; values, &lt;em&gt;where&lt;/em&gt; the current value came from,  &lt;em&gt;who&lt;/em&gt; made the change and &lt;em&gt;when&lt;/em&gt; it was made. This information is found in a new performance schema table called  &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/variables-info-table.html&quot;&gt;variables_info&lt;/a&gt;&lt;/code&gt;. See blog post by  Satish Bharathy &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-persisting-configuration-variables/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Client Error Reporting – Message Counts&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 makes it possible to look at aggregated counts of client  &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/error-messages-server.html&quot;&gt;error messages&lt;/a&gt; reported by the server. The user can look at statistics from 5 different tables: Global count, summary per thread, summary per user, summary per host, or summary per account. For each error message the user can see the number of errors raised, the number of errors handled by the SQL exception handler, “first seen” timestamp, and “last seen” timestamp. Given the right privileges the user can either &lt;code&gt;SELECT&lt;/code&gt; from these tables or &lt;code&gt;TRUNCATE&lt;/code&gt; to reset statistics. See blog post by Mayank Prasad &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-performance-schema-instrumentation-of-server-errors/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Statement Latency  Histograms&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 provides performance schema histograms of statements latency, for the purpose of better visibility of query response times. This work also computes “P95”, “P99” and “P999” percentiles from collected histograms. These percentiles can be used as indicators of quality of service. See blog post by Frédéric Descamps &lt;a href=&quot;http://lefred.be/content/mysql-8-0-statements-latency-histograms/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Data Locking Dependencies Graph&lt;/strong&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 instruments data locks in the performance schema. When transaction A is locking row R, and transaction B is waiting on this very same row, B is effectively blocked by A. The added instrumentation exposes which data is locked (R), who owns the lock (A), and who is waiting for the data (B). See blog post by Frédéric Descamps &lt;a href=&quot;http://lefred.be/content/mysql-8-0-data-locking-visibility/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Digest Query Sample&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 makes some changes to the &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/statement-summary-tables.html&quot;&gt;events_statements_summary_by_digest&lt;/a&gt; performance schema table to capture a full example query and some key information about this query example. The column &lt;code&gt;QUERY_SAMPLE_TEXT&lt;/code&gt; is added to capture a query sample so that users can run EXPLAIN on a real query and to get a query plan. The column &lt;code&gt;QUERY_SAMPLE_SEEN&lt;/code&gt; is added  to capture the query sample timestamp. The column &lt;code&gt;QUERY_SAMPLE_TIMER_WAIT&lt;/code&gt; is added to capture the query sample execution time. The columns &lt;code&gt;FIRST_SEEN&lt;/code&gt; and &lt;code&gt;LAST_SEEN&lt;/code&gt;  have been modified to use fractional seconds. See blog post by Frédéric Descamps &lt;a href=&quot;http://lefred.be/content/mysql-8-0-digest-query-samples-in-performance_schema/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Meta-data about Instruments&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0  adds meta-data such as &lt;em&gt;properties&lt;/em&gt;, &lt;em&gt;volatility&lt;/em&gt;, and &lt;em&gt;documentation&lt;/em&gt; to the performance schema table  &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/setup-instruments-table.html&quot;&gt;setup_instruments&lt;/a&gt;. This read only meta-data act as online documentation for instruments, to be looked at by users or tools. See blog post by Frédéric Descamps &lt;a href=&quot;http://lefred.be/content/mysql-8-0-meta-data-added-to-performance_schemas-instruments/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Error Logging&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 delivers a major overhaul of the MySQL &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/error-log.html&quot;&gt;error log&lt;/a&gt;. From a software architecture perspective the error log is made a component in the new  service infrastructure. This means that advanced users can write their own error log implementation if desired. Most users will not want to write their own error log implementation but still want some flexibility in what to write and where to write it.  Hence, 8.0 offers users facilities to add &lt;em&gt;sinks (where)&lt;/em&gt; and &lt;em&gt;filters (what)&lt;/em&gt;.  MySQL 8.0 implements a filtering service (API) and a default filtering service implementation (component). Filtering here means to suppress certain log messages (selection) and/or fields within a given log message (projection). MySQL 8.0 implements a log writer service (API) and a default log writer service implementation (component).  Log writers accept a log event and write it to a log. This log can be a classic file, syslog, EventLog and a new JSON log writer.&lt;/p&gt;
&lt;p&gt;By default, without any configuration, MySQL 8.0 delivers many out-of-the-box error log improvements such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Error numbering:&lt;/strong&gt; The format is a number in the 10000 series preceded by “MY-“, for example “MY-10001”. Error numbers will be stable in a GA release, but the corresponding error texts are allowed to change (i.e. improve) in maintenance releases.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System messages:&lt;/strong&gt; System messages are written to the error log as [System] instead of [Error], [Warning], [Note]. [System] and [Error] messages are printed regardless of verbosity and cannot be suppressed.  [System] messages are only used in a few places, mainly associated with major state transitions such as starting or stopping the server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduced verbosity:&lt;/strong&gt; The default of &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_log_error_verbosity&quot;&gt;log_error_verbosity&lt;/a&gt; changes from 3 (Notes) to 2 (Warning). This makes MySQL 8.0 error log less verbose by default.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source Component:&lt;/strong&gt; Each message is annotated with one of three values [Server], [InnoDB], [Replic] showing which sub-system the message is coming from.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This is what is written to the error log  in 8.0 GA after startup :&lt;/p&gt;
&lt;div id=&quot;crayon-5ad99e59a2ef9100844073&quot; class=&quot;crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate&quot; data-settings=&quot; minimize scroll-mouseover&quot;&gt;


&lt;div class=&quot;crayon-plain-wrap&quot;&gt;
&lt;textarea wrap=&quot;soft&quot; class=&quot;crayon-plain print-no&quot; data-settings=&quot;dblclick&quot; readonly=&quot;readonly&quot;&gt;
2018-03-08T10:14:29.289863Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.5) starting as process 8063
2018-03-08T10:14:29.745356Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
2018-03-08T10:14:29.765159Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.5'  socket: '/tmp/mysql.sock'  port: 3306  Source distribution.
2018-03-08T10:16:51.343979Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.5)  Source distribution.
&lt;/textarea&gt;&lt;/div&gt;
&lt;div class=&quot;crayon-main&quot;&gt;
&lt;table class=&quot;crayon-table&quot;&gt;&lt;tr class=&quot;crayon-row&quot;&gt;&lt;td class=&quot;crayon-nums&quot; data-settings=&quot;show&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;crayon-code&quot;&gt;
&lt;div class=&quot;crayon-pre&quot;&gt;
&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-5ad99e59a2ef9100844073-1&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;08T10&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;29.289863Z&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;MY&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;010116&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;sbin&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;mysqld&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;mysqld&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;8.0.5&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;starting&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;crayon-i&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;8063&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-5ad99e59a2ef9100844073-2&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;08T10&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;29.745356Z&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;MY&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;010068&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;CA&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;certificate&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;pem&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;crayon-r&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;crayon-t&quot;&gt;signed&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;crayon-line&quot; id=&quot;crayon-5ad99e59a2ef9100844073-3&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;08T10&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;29.765159Z&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;MY&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;010931&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;sbin&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;mysqld&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;ready&lt;/span&gt; &lt;span class=&quot;crayon-st&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;connections&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'8.0.5'&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-s&quot;&gt;'/tmp/mysql.sock'&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;3306&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;Source&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;distribution&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;crayon-line crayon-striped-line&quot; id=&quot;crayon-5ad99e59a2ef9100844073-4&quot;&gt;&lt;span class=&quot;crayon-cn&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;08T10&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;51.343979Z&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;MY&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;crayon-cn&quot;&gt;010910&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;sbin&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;crayon-v&quot;&gt;mysqld&lt;/span&gt;&lt;span class=&quot;crayon-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;Shutdown&lt;/span&gt; &lt;span class=&quot;crayon-e&quot;&gt;complete&lt;/span&gt; &lt;span class=&quot;crayon-sy&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;crayon-i&quot;&gt;mysqld&lt;/span&gt; &lt;span class=&quot;crayon-cn&quot;&gt;8.0.5&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;crayon-h&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;crayon-e&quot;&gt;Source&lt;/span&gt; &lt;span class=&quot;crayon-v&quot;&gt;distribution&lt;/span&gt;&lt;span class=&quot;crayon-sy&quot;&gt;.&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The introduction of error numbering in the error log allows MySQL to improve an error text in upcoming maintenance releases (if needed) while keeping the error number (ID) unchanged.   Error numbers also act as the basis for filtering/suppression  and internationalization/localization.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Manageability&lt;/strong&gt;&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;INVISIBLE Indexes&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 adds the capability of toggling the visibility of an index (visible/invisible). An invisible index is not considered by the optimizer when it makes the query execution plan. However, the index is still maintained in the background so it is cheap to make it visible again. The purpose of this is for a DBA / DevOp to determine whether an index can be dropped or not. If you suspect an index of not being used you first make it invisible, then monitor query performance, and finally remove the index if no query slow down is experienced. This feature has been asked for by many users, for example through &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=70299&quot;&gt;Bug#70299&lt;/a&gt;. See blog post by Martin Hansson &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-invisible-indexes/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Flexible Undo Tablespace Management&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 gives the user full control over Undo tablespaces, i.e. &lt;em&gt;how many&lt;/em&gt; tablespaces, &lt;em&gt;where&lt;/em&gt; are they placed, and &lt;em&gt;how many rollback segments&lt;/em&gt; in each.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;em&gt;No more Undo log in the System tablespace.&lt;/em&gt; Undo log is migrated out of the System tablespace and into Undo tablespaces during upgrade. This gives an upgrade path for existing 5.7 installation using the system tablespace for undo logs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Undo tablespaces can be managed separately from the System tablespace.&lt;/em&gt; For example, Undo tablespaces can be put on fast storage.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Reclaim space taken by unusually large transactions (online).&lt;/em&gt; A minimum of two Undo tablespaces are created to allow for tablespace truncation. This allows InnoDB to shrink the undo tablespace because one Undo tablespace can be active while the other is truncated.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;More rollback segments results in less contention.&lt;/em&gt; The  user might choose to have up to 127 Undo tablespaces, each one having up to 128 rollback segments. More rollback segments mean that concurrent transactions are more likely to use separate rollback segments for their undo logs which results in less contention for the same resources.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;See blog post by Kevin Lewis &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-2-more-flexible-undo-tablespace-management/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;SET PERSIST for global variables&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 makes it possible to persist global, dynamic server variables. Many server variables are both GLOBAL and DYNAMIC and can be reconfigured while the server is running. For example: &lt;code&gt;SET GLOBAL sql_mode='STRICT_TRANS_TABLES';&lt;/code&gt; However, such settings are lost upon a server restart.&lt;/p&gt;
&lt;p&gt;This work makes it possible to write &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/set-variable.html&quot;&gt;SET PERSIST sql_mode='STRICT_TRANS_TABLES';&lt;/a&gt;&lt;/code&gt; The effect is that the setting will survive a server restart. There are many usage scenarios for this functionality but most importantly it gives a way to manage server settings when editing the configuration files is inconvenient or not an option. For example in some hosted environments you don’t have file system access, all that you have is the ability to connect to one or more servers. As for &lt;code&gt;SET GLOBAL&lt;/code&gt; you need the super privilege for &lt;code&gt;SET PERSIST&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There is also the &lt;code&gt;RESET PERSIST&lt;/code&gt; command. The &lt;code&gt;RESET PERSIST&lt;/code&gt; command has the semantic of removing the configuration variable from the persist configuration, thus converting it to have similar behavior as &lt;code&gt;SET GLOBAL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;MySQL 8.0 allows &lt;code&gt;SET PERSIST&lt;/code&gt; to set most read-only variables as well, the new values will here take effect at the next server restart.  Note that a small subset of read-only variables are left intentionally not settable. See blog post by  Satish Bharathy &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-persisting-configuration-variables/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Remote Management&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements an SQL RESTART command. The purpose is to enable remote management of a MySQL server over an SQL connection, for example to set a non-dynamic configuration variable by &lt;code&gt;SET PERSIST&lt;/code&gt; followed by a &lt;code&gt;RESTART&lt;/code&gt;.  See blog post &lt;a href=&quot;http://lefred.be/content/mysql-8-0-changing-configuration-easily-and-cloud-friendly/&quot;&gt;MySQL 8.0: changing configuration easily and cloud friendly !&lt;/a&gt;  by Frédéric Descamps.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Rename Tablespace (SQL DDL)&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html&quot;&gt;ALTER TABLESPACE s1 RENAME TO s2;&lt;/a&gt;&lt;/code&gt; A shared/general tablespace is a user-visible entity which users can CREATE, ALTER, and DROP. See also &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=26949&quot;&gt;Bug#26949&lt;/a&gt;, &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=32497&quot;&gt;Bug#32497&lt;/a&gt;, and &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=58006&quot;&gt;Bug#58006&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Rename Column (SQL DDL)&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/alter-table.html&quot;&gt;ALTER TABLE ... RENAME COLUMN old_name TO new_name;&lt;/a&gt;&lt;/code&gt;This is an improvement over existing syntax ALTER TABLE &amp;lt;table_name&amp;gt; CHANGE … which requires re-specification of all the attributes of the column. The old/existing syntax has the disadvantage that all the column information might not be available to the application trying to do the rename. There is also a risk of accidental data type change in the old/existing syntax which might result in data loss.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Security features&lt;/strong&gt;&lt;/h3&gt;
&lt;h6&gt;&lt;strong&gt;New Default Authentication Plugin&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 changes the default authentication plugin from &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html&quot;&gt;mysql_native_password&lt;/a&gt; to &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html&quot;&gt;caching_sha2_password&lt;/a&gt;. Correspondingly, libmysqlclient will  use caching_sha2_password as the default authentication mechanism, too. The new  caching_sha2_password  combines better security (SHA2 algorithm) with high performance (caching). The general direction is that we recommend all users to use TLS/SSL for all  their network communication. See blog post by Harin Vadodaria &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;OpenSSL by Default in Community Edition&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 is unifying on &lt;a href=&quot;https://en.wikipedia.org/wiki/OpenSSL&quot;&gt;OpenSSL&lt;/a&gt; as the default TLS/SSL library for both MySQL Enterprise Edition and MySQL Community Edition.  Previously, MySQL Community Edition used &lt;a href=&quot;https://en.wikipedia.org/wiki/WolfSSL&quot;&gt;YaSSL&lt;/a&gt;. Supporting OpenSSL in the MySQL Community Edition has been one of the most frequently requested features. See blog post by Frédéric Descamps &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-4-openssl-and-mysql-community-edition/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;OpenSSL is Dynamically Linked&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 is linked dynamically with OpenSSL. Seen from the &lt;a href=&quot;https://dev.mysql.com/downloads/repo/&quot;&gt;MySQL Repository&lt;/a&gt; users perspective , the MySQL packages depends on the OpenSSL files provided by the Linux system at hand. By dynamically linking, OpenSSL updates can be applied upon availability without requiring a MySQL upgrade or patch. See blog post by Frédéric Descamps &lt;a href=&quot;https://mysqlserverteam.com/mysql-8-0-4-openssl-and-mysql-community-edition/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Encryption of Undo and Redo log&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements data-at-rest encryption of UNDO and REDO logs. In 5.7 we introduced &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/innodb-tablespace-encryption.html&quot;&gt;Tablespace Encryption&lt;/a&gt; for InnoDB tables stored in file-per-table tablespaces. This feature provides at-rest encryption for physical tablespace data files. In 8.0 we extend this to include UNDO and REDO logs.  See documentation &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/innodb-tablespace-encryption.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;SQL roles&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implements SQL Roles. A role is a named collection of privileges. The purpose is to simplify the user access right management. One can grant roles to users, grant privileges to roles, create roles, drop roles, and decide what roles are applicable during a session. See blog post by Frédéric Descamps &lt;a href=&quot;http://lefred.be/content/mysql-8-0-listing-roles/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Allow grants and revokes for PUBLIC&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 introduces the configuration variable &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_mandatory_roles&quot;&gt;&lt;code&gt;mandatory-roles&lt;/code&gt;&lt;/a&gt; which can be used for automatic assignment and granting of &lt;em&gt;default roles&lt;/em&gt; when new users are created. Example: &lt;code&gt;&lt;code&gt;role1&lt;/code&gt;@&lt;code&gt;%&lt;/code&gt;,&lt;code&gt;role2&lt;/code&gt;,role3,role4@localhost&lt;/code&gt;.  All the specified roles are always considered granted to every user and they can’t be revoked. These roles still require activation unless they are made into default roles. When the new server configuration variable &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_activate_all_roles_on_login&quot;&gt;&lt;code&gt;activate-all-roles-on-login&lt;/code&gt;&lt;/a&gt; is set to “ON”, all granted roles are always activated after the user has authenticated.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Breaking up the super privileges&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0  defines a set of new granular privileges for various aspects of what SUPER is used for in previous releases. The purpose is to limit user access rights to what is needed for the job at hand and nothing more. For example &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin&quot;&gt;BINLOG_ADMIN&lt;/a&gt;, &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin&quot;&gt;CONNECTION_ADMIN&lt;/a&gt;, and &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin&quot;&gt;ROLE_ADMIN&lt;/a&gt;.&lt;/p&gt;

&lt;h6&gt;&lt;strong&gt;Authorization model to manage XA-transactions&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 introduces a new system privilege &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin&quot;&gt;XA_RECOVER_ADMIN&lt;/a&gt;&lt;/code&gt; which controls the capability to execute the statement &lt;code&gt;XA RECOVER&lt;/code&gt;. An attempt to do &lt;code&gt;XA RECOVER&lt;/code&gt; by a user who wasn’t granted the new system privilege &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin&quot;&gt;XA_RECOVER_ADMIN&lt;/a&gt;&lt;/code&gt; will cause an error.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Password rotation policy&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 introduces restrictions on password reuse. Restrictions can be configured at global level as well as individual user level. Password history is kept secure because it may give clues about habits or patterns used by individual users when they change their password. The &lt;em&gt;password rotation policy&lt;/em&gt; comes in addition to other, existing mechanisms such as the &lt;em&gt;password expiration policy&lt;/em&gt; and &lt;em&gt;allowed password policy&lt;/em&gt;. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/password-management.html&quot;&gt;Password Management&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Slow down brute force attacks on user passwords&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 introduces a delay in the authentication process based on consecutive unsuccessful login attempts. The purpose is to slow down brute force attacks on user passwords. It is possible to configure the number of consecutive unsuccessful attempts before the delay is introduced and the maximum amount of delay introduced.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Retire skip-grant-tables&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0  disallows remote connections when the server is started with &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_skip-grant-tables&quot;&gt;–skip-grant-tables&lt;/a&gt;&lt;/code&gt;.  See also &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=79027&quot;&gt;Bug#79027&lt;/a&gt; reported by Omar Bourja.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Add mysqld_safe-functionality to server&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 implement parts of the logic currently found in the &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/mysqld-safe.html&quot;&gt;mysqld_safe&lt;/a&gt;&lt;/code&gt; script inside the server. The work improves server usability in some scenarios for example when using the &lt;code&gt;--daemonize&lt;/code&gt; startup option. The work also make users less dependent upon the &lt;code&gt;mysqld_safe script&lt;/code&gt;, which we hope to remove in the future. It also fixes &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=75343&quot;&gt;Bug#75343&lt;/a&gt; reported by Peter Laursen.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 8.0 comes with better performance for Read/Write workloads, IO bound workloads, and high contention “hot spot” workloads. In addition, the new Resource Group feature gives users an option to optimize for specific workloads on specific hardware by mapping user threads to CPUs.&lt;/p&gt;
&lt;h6&gt;&lt;strong&gt;Scaling Read/Write Workloads&lt;/strong&gt;&lt;/h6&gt;
&lt;div&gt;MySQL 8.0 scales well on RW and heavy write workloads. On intensive RW workloads we observe better performance already from 4 concurrent users  and more than 2 times better performance on high loads comparing to MySQL 5.7. We can say that while 5.7 significantly improved scalability for Read Only workloads, 8.0 significantly improves scalability for Read/Write workloads.  The effect is that MySQL improves  hardware utilization (efficiency) for standard server side hardware (like systems with 2 CPU sockets). This improvement is due to re-designing how InnoDB writes to the REDO log. In contrast to the historical implementation where user threads were constantly fighting to log their data changes, in the new REDO log solution user threads are now lock-free, REDO writing and flushing is managed by dedicated background threads, and the whole REDO processing becomes event-driven.  See blog post by Dimitri Kravtchuk &lt;a href=&quot;http://dimitrik.free.fr/blog/archives/2017/10/mysql-performance-80-redesigned-redo-log-readwrite-workloads-scalability.html&quot;&gt;here&lt;/a&gt;.&lt;/div&gt;
&lt;div&gt;
&lt;h6&gt;&lt;strong&gt;Utilizing IO Capacity (Fast Storage)&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;div&gt;MySQL 8.0 allows users to use every storage device to its full power. For example, testing with Intel Optane flash devices we were able to out-pass 1M Point-Select QPS in a fully IO-bound workload. (IO bound means that data are not cached in buffer pool but must be retrieved from secondary storage). This improvement is due to getting rid of the  &lt;code&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/monitor-innodb-mutex-waits-performance-schema.html&quot;&gt;fil_system_mutex&lt;/a&gt;&lt;/code&gt; global lock.&lt;/div&gt;
&lt;/div&gt;
&lt;h6&gt;&lt;strong&gt;Better Performance upon High Contention Loads (“hot rows”)&lt;br/&gt;&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;MySQL 8.0 significantly improves the performance for high contention workloads. A high contention workload occurs when multiple transactions are waiting for a lock on the same row in a table,  causing queues of waiting transactions. Many real world workloads are not smooth over for example a day but might have bursts at certain hours (&lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;Pareto distributed&lt;/a&gt;). MySQL 8.0 deals much better with such bursts both in terms of transactions per second, mean latency, and 95th percentile latency. The benefit to the end user is better hardware utilization (efficiency) because the system needs less spare capacity and can thus run with a higher average load. The original patch was contributed by Jiamin Huang (&lt;a href=&quot;https://bugs.mysql.com/bug.php?id=84266&quot;&gt;Bug#84266&lt;/a&gt;). Please study the &lt;a href=&quot;https://arxiv.org/pdf/1602.01871.pdf&quot;&gt;Contention-Aware Transaction Scheduling&lt;/a&gt; (CATS) algorithm and read the MySQL blog post by Jiamin Huang and Sunny Bains &lt;a href=&quot;https://mysqlserverteam.com/contention-aware-transaction-scheduling-arriving-in-innodb-to-boost-performance/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;
&lt;h6&gt;&lt;strong&gt;Resource Groups&lt;/strong&gt;&lt;/h6&gt;
&lt;/div&gt;
&lt;p&gt;MySQL 8.0 introduces global Resource Groups to MySQL. With Resource Groups, DevOps/DBAs can manage the mapping between user/system threads and CPUs. This can be used to split workloads across CPUs to obtain better efficiency and/or performance in some use cases. Thus, Resource Groups adds a tool to the DBA toolbox,  a tool which can help the DBA to increase hardware utilization or to increase query stability. As an example, with a Sysbench RW workload running on a Intel(R) Xeon (R) CPU E7-4860 2.27 GHz 40 cores-HT box we doubled the overall throughput  by limiting the Write load to 10 cores. Resource Groups is a fairly advanced tool which requires skilled DevOps/DBA to be used effectively as effects will vary with type of load and with the hardware at hand.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Other Features&lt;/strong&gt;&lt;/h2&gt;

&lt;div class=&quot;simplesocialbuttons simplesocial-sm-round simplesocialbuttons_inline simplesocialbuttons-align-left post-9061 post simplesocialbuttons-inline-no-animation&quot;&gt;&lt;button class=&quot;simplesocial-fb-share&quot; target=&quot;_blank&quot; data-href=&quot;https://www.facebook.com/sharer/sharer.php?u=https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/&quot; onclick=&quot;javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;&quot;&gt;&lt;span class=&quot;simplesocialtxt&quot;&gt;Facebook&lt;/span&gt;&lt;/button&gt; &lt;button class=&quot;simplesocial-twt-share&quot; data-href=&quot;https://twitter.com/share?text=What%E2%80%99s+New+in+MySQL+8.0%3F+%28Generally+Available%29&amp;amp;url=https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/&quot; rel=&quot;nofollow&quot; onclick=&quot;javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;&quot;&gt;&lt;span class=&quot;simplesocialtxt&quot;&gt;Twitter&lt;/span&gt;&lt;/button&gt; &lt;button class=&quot;simplesocial-gplus-share&quot; data-href=&quot;https://plus.google.com/share?url=https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/&quot; onclick=&quot;javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;&quot;&gt;&lt;span class=&quot;simplesocialtxt&quot;&gt;Google+&lt;/span&gt;&lt;/button&gt; &lt;button target=&quot;popup&quot; class=&quot;simplesocial-linkedin-share&quot; data-href=&quot;https://www.linkedin.com/cws/share?url=https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/&quot; onclick=&quot;javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;&quot;&gt;&lt;span class=&quot;simplesocialtxt&quot;&gt;LinkedIn&lt;/span&gt;&lt;/button&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 19 Apr 2018 14:01:18 +0000</pubDate>
<dc:creator>theodorejb</dc:creator>
<og:type>article</og:type>
<og:title>What’s New in MySQL 8.0? (Generally Available)</og:title>
<og:url>https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/</og:url>
<og:description>We proudly announce General Availability of MySQL 8.0. Download now! MySQL 8.0 is an extremely exciting new version of the world’s most popular open source database with improvements across the boa…</og:description>
<og:image>https://mysqlserverteam.com/wp-content/uploads/2018/01/MySQL_Icon_256x256.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://mysqlserverteam.com/whats-new-in-mysql-8-0-generally-available/</dc:identifier>
</item>
<item>
<title>List of places to find remote jobs and freelancing projects</title>
<link>https://drive.google.com/open?id=1JfNAbUX_lN9K3MCNHO15GJtJ5qpk7H9Cl3xTBwv2FR8</link>
<guid isPermaLink="true" >https://drive.google.com/open?id=1JfNAbUX_lN9K3MCNHO15GJtJ5qpk7H9Cl3xTBwv2FR8</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://drive.google.com/open?id=1JfNAbUX_lN9K3MCNHO15GJtJ5qpk7H9Cl3xTBwv2FR8&quot;&gt;https://drive.google.com/open?id=1JfNAbUX_lN9K3MCNHO15GJtJ5qpk7H9Cl3xTBwv2FR8&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16875868&quot;&gt;https://news.ycombinator.com/item?id=16875868&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 537&lt;/p&gt;&lt;p&gt;# Comments: 56&lt;/p&gt;</description>
<pubDate>Thu, 19 Apr 2018 13:52:05 +0000</pubDate>
<dc:creator>pankmahar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.google.com/spreadsheets/d/1JfNAbUX_lN9K3MCNHO15GJtJ5qpk7H9Cl3xTBwv2FR8/htmlview?usp=drive_web&amp;sle=true</dc:identifier>
</item>
<item>
<title>Flow chart of cognitive biases</title>
<link>https://www.breakdown-notes.com/makemap/load/biases</link>
<guid isPermaLink="true" >https://www.breakdown-notes.com/makemap/load/biases</guid>
<description>&lt;span class=&quot;close_modal&quot;&gt;×&lt;/span&gt;&lt;h2 id=&quot;modal_save&quot; class=&quot;tablink&quot;&gt;Save Map&lt;/h2&gt;
&lt;h2 id=&quot;modal_load&quot; class=&quot;tablink&quot;&gt;Load Map&lt;/h2&gt;
&lt;div id=&quot;save&quot; class=&quot;modal_tab&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;div class=&quot;clear&quot;&gt;
&lt;h3&gt;Choose name for save file&lt;/h3&gt;

&lt;/div&gt;
&lt;div class=&quot;clear&quot; readability=&quot;6.5&quot;&gt;
&lt;h3&gt;Save to local storage&lt;/h3&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;label&gt;For local storage, press&lt;/label&gt; &lt;button id=&quot;savebutton_local&quot; type=&quot;button&quot; class=&quot;big-button&quot;&gt;save local&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;half-right&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;help&quot;&gt;Saving in your local store means saving it in your browsers 'history'. A bit like a cookie. You will be able to access it later via the load option. IMPORTANT: deleting cookies will also delete your maps in local storage. Saving in local storage is not meant for long term, but usefull when quicksaving while working on a map.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;dl_vis&quot; class=&quot;clear&quot;&gt;
&lt;h3&gt;Save by downloading&lt;/h3&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;half-left&quot;&gt;
&lt;p&gt;&lt;label&gt;For download, press&lt;/label&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;half-right&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;help&quot;&gt;Downloading will download the file in json format to your download folder. After downloading you can store the downloaded file anyplace you like. You will be able to load it later via the load menu and continue working with it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;modal_github_save_section&quot; class=&quot;clear&quot;&gt;
&lt;h3&gt;Save as Github Gist&lt;/h3&gt;
&lt;div readability=&quot;7.5&quot;&gt;

&lt;div class=&quot;half-right&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;help&quot;&gt;This option will save the map as a gist on github. This is the easiest way to share your notes / maps. Do mind however that the gist will be saved public. That means your data is not private.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;For downloading your map as a pdf or as an image file, see the Export menu (close current menu, in the menu on the left).&lt;/h3&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;load&quot; class=&quot;modal_tab&quot;&gt;


&lt;div class=&quot;section modal_sub_tab hidden&quot;&gt;
&lt;h3&gt;Maps in local storage&lt;/h3&gt;

&lt;p&gt;&lt;button id=&quot;load_local_map&quot; class=&quot;big-button&quot;&gt;load&lt;/button&gt; &lt;button id=&quot;delete_local_maps&quot; class=&quot;big-button&quot;&gt;delete&lt;/button&gt; &lt;button id=&quot;dump_local_maps&quot; class=&quot;big-button&quot;&gt;download all&lt;/button&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section modal_sub_tab hidden&quot;&gt;
&lt;h3&gt;Upload map from gist&lt;/h3&gt;


&lt;/div&gt;
&lt;div class=&quot;section&quot;&gt;
&lt;h3&gt;load options&lt;/h3&gt;
&lt;div class=&quot;clear&quot;&gt;&lt;label&gt;new map&lt;/label&gt;

&lt;label&gt;load in current&lt;/label&gt; &lt;span&gt;&quot;load in current&quot; will not load slides&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 19 Apr 2018 12:59:04 +0000</pubDate>
<dc:creator>cher14</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.breakdown-notes.com/makemap</dc:identifier>
</item>
</channel>
</rss>