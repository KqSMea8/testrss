<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>iOS 11 Horror Story: The Rise and Fall of iOS Security</title>
<link>https://blog.elcomsoft.com/2017/11/ios-11-horror-story-the-rise-and-fall-of-ios-security/</link>
<guid isPermaLink="true" >https://blog.elcomsoft.com/2017/11/ios-11-horror-story-the-rise-and-fall-of-ios-security/</guid>
<description>&lt;p&gt;We loved what Apple used to do about security. During the past years, the company managed to build a complete, multi-layer system to secure its hardware and software ecosystem and protect its customers against common threats. Granted, the system was not without its flaws (most notably, the obligatory use of a trusted phone number – think SS7 vulnerability – for the purpose of two-factor authentication), but overall it was still the most secure mobile ecosystem on the market.&lt;/p&gt;
&lt;p&gt;Not anymore. The release of iOS 11, which we praised in the past for the &lt;a href=&quot;https://blog.elcomsoft.com/2017/09/new-security-measures-in-ios-11-and-their-forensic-implications/&quot;&gt;new S.O.S. mode and the requirement to enter a passcode in order to establish trust&lt;/a&gt; with a new computer, also made a number of other changes under the hood that we have recently discovered. Each and every one of these changes was aimed at making the user’s life easier (as in “more convenience”), and each came with a small trade off in security. Combined together, these seemingly small changes made devastating synergy, effectively stripping each and every protection layer off the previously secure system. Today, only one thing is protecting your data, your iOS device and all other Apple devices you have registered on your Apple account.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The passcode&lt;/strong&gt;. This is all that’s left of iOS security in iOS 11. If the attacker has your iPhone and your passcode is compromised, you lose your data; your passwords to third-party online accounts; your Apple ID password (and obviously the second authentication factor is not a problem). Finally, you lose access to all other Apple devices that are registered with your Apple ID; they can be wiped or locked remotely. All that, and more, just because of one passcode and stripped-down security in iOS 11.&lt;/p&gt;

&lt;h2&gt;So What’s the Big Deal?&lt;/h2&gt;
&lt;p&gt;If you are working in a sensitive environment, is front door security all you need to secure a building? Don’t you need additional checks or e-keys to enter some rooms? This no longer applies to iOS. Once you have a passcode, you then have access to everything. Let us have a look at what you can do to the user and their data once you have their i-device and know their passcode.&lt;/p&gt;
&lt;h2&gt;The iTunes Backup Password&lt;/h2&gt;
&lt;p&gt;Imagine you’re working for a company whose main business is breaking passwords. iPhone backups one can make with Apple iTunes or third-party apps such as &lt;a href=&quot;https://www.elcomsoft.com/eift.html&quot;&gt;iOS Forensic Toolkit&lt;/a&gt; can be protected with a password. That password is strong or very strong depending on the version of iOS. Your company builds better software, while Apple makes backup passwords even more secure. In the end, Apple seemingly wins the race: breaking those passwords now requires a powerful computer (or multiple computers) equipped with high-end video cards, but even then, you cannot try more than handful passwords per second.&lt;/p&gt;
&lt;p&gt;Then Apple makes a sudden twist, allowing anyone to simply reset that highly secure password. That’s what they did in iOS 11. If you have access to the device and know its passcode, you will no longer need to perform lengthy attacks. Just go ahead and remove that password.&lt;/p&gt;
&lt;p&gt;Why is this important? Before I tell you that, let us look at how it used to be in iOS 8, 9 and 10.&lt;/p&gt;
&lt;h3&gt;Backup Passwords in iOS 8, 9 and 10&lt;/h3&gt;
&lt;p&gt;In these versions of iOS, one could protect their backups by specifying a backup password in iTunes. One would only need to do it once. Once a password was set, all future backups made on that computer and any other computer, with no exceptions, would be protected with that password:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/macos-itunes12-7-iphone7-summary-backups-encrypt-backup-callout.jpg&quot; width=&quot;500&quot; height=&quot;299&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The password would become the property of the i-device and not the PC (or the copy of iTunes) that was used to set the password. You could connect your phone to a different computer and make a local backup with a freshly installed copy of iTunes, and that backup would still be protected with the password you set a long time ago.&lt;/p&gt;
&lt;p&gt;Any attempt to change or remove that password must pass through iOS, which would require to provide the old password first. Forgot the original password? There’s no going back, you’re stuck with what you have unless you are willing to factory reset the device and lose all data in the process.&lt;/p&gt;
&lt;p&gt;If you ask me, this was a perfect and carefully thought through solution. Want to protect your data against an attacker? Set a long and complex backup password and don’t store it anywhere. Forgot that password? You can still make a cloud backup and restore your phone from that backup; even your passwords (keychain) would be restored if you rolled out the cloud backup onto the same device you made the backup from (or used iCloud Keychain if that was to be a different device).&lt;/p&gt;
&lt;p&gt;A perfect system? Apparently, it was not to everyone’s liking. The users whined. The police complained. The FBI complained. And Apple gave up.&lt;/p&gt;
&lt;h3&gt;iOS 11: Stripping Backup Passwords&lt;/h3&gt;
&lt;p&gt;In iOS 11 you can still specify a backup password in iTunes, and you still cannot change or reset it through iTunes if you don’t know the original password. However, this means very little as you can now easily remove that password from iOS settings.&lt;/p&gt;
&lt;p&gt;This is what Apple has to say in its &lt;a href=&quot;https://support.apple.com/en-us/HT205220&quot;&gt;Knowledge Base&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can’t restore an encrypted backup without its password. With iOS 11 or later, you can make a new encrypted backup of your device by resetting the password. Here’s what to do:&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;em&gt;On your iOS device, go to Settings &amp;gt; General &amp;gt; Reset.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Tap Reset All Settings and enter your iOS passcode.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Follow the steps to reset your settings. This won’t affect your user data or passwords, but it will reset settings like display brightness, Home screen layout, and wallpaper. It also removes your encrypted backup password.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Connect your device to iTunes again and create a new encrypted backup.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;em&gt;You won’t be able to use previous encrypted backups, but you can back up your current data using iTunes and setting a new backup password.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you have a device with iOS 10 or earlier, you can’t reset the password. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You’ll be looking for these settings:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4410 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset1-1-311x550.png&quot; alt=&quot;&quot; width=&quot;311&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset1-1-311x550.png 311w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset1-1-579x1024.png 579w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset1-1.png 750w&quot; sizes=&quot;(max-width: 311px) 100vw, 311px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4411 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset2-1-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset2-1-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset2-1-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/reset2-1.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;That’s it? That’s it. You have just removed the backup password. You can now make a new backup or, rather, extract information from the device. Don’t rush and make sure to specify a temporary password (“123” always works) before you make that backup. A password-protected backup will allow you decrypting the user’s passwords, credit card data, health data and other things that would be otherwise inaccessible.&lt;/p&gt;
&lt;p&gt;So, set a temporary password, make that backup, decrypt it with &lt;a href=&quot;https://www.elcomsoft.com/eppb.html&quot;&gt;Elcomsoft Phone Breaker&lt;/a&gt; or just use &lt;em&gt;Keychain Explorer&lt;/em&gt; (a tool in Elcomsoft Phone Breaker) to access that user’s passwords, authentication tokens, credit card numbers and other interesting things. Oh, and their pictures, too.&lt;/p&gt;
&lt;p&gt;Passwords:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/keychain.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-4436&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/keychain-550x345.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;345&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/keychain-550x345.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/keychain-768x482.png 768w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/keychain-1024x643.png 1024w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While there, look for their Google Account password. If it is there in the keychain (and I don’t see why not), you’ll gain access to a whole lot of highly interesting information including several years worth of precise location data, all passwords they saved in Chrome, Google Photos, bookmarks, Google search history and a log more. Two-factor authentication? I bet it’s that SIM card or Google Prompt on the iPhone in your hands.&lt;/p&gt;
&lt;p&gt;What if you don’t have any photos in the backup? Check in the iOS Settings app whether iCloud Photo Library is enabled in iCloud account – Sync – Photos. If it is, the photos are synced with iCloud and are not included in local or cloud backups. Simply switching this feature off makes it possible to back up the photos into a local backup.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;wp-image-4414 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/iCloud-Photos-422x550.png&quot; alt=&quot;&quot; width=&quot;287&quot; height=&quot;374&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/iCloud-Photos-422x550.png 422w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/iCloud-Photos.png 442w&quot; sizes=&quot;(max-width: 287px) 100vw, 287px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;What if the iPhone in question runs an earlier version of iOS that does not allow removing backup passwords? I say you’re lucky because you can simply update that device to iOS 11 and then reset that password. We tried this strategy multiple times, and not once did we have an issue.&lt;/p&gt;
&lt;p&gt;What if the device simply cannot run iOS 11, like that iPhone 5c from San-Bernardino? If this is the case, your best bet is attempting to jailbreak that iPhone. 32-bit devices (iPhone 4s, 5, and 5c) allow for complete physical acquisition (including the keychain). Just note that we are talking about the situation when the passcode is known, though that was not the case in San-Bernardino.&lt;/p&gt;
&lt;p&gt;With access to just an iPhone and its passcode, you have already gained access to all of the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Everything contained in a local backup (with a password)&lt;/li&gt;
&lt;li&gt;Passwords and tokens from the local keychain&lt;/li&gt;
&lt;li&gt;Local pictures and videos&lt;/li&gt;
&lt;li&gt;Application data (mostly SQLite)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This alone is massive, but that was just the beginning. You can do more; in fact, a lot more. What if I say you can now change the user’s Apple ID password, remove iCloud lock, remotely lock and/or erase user’s other devices and make sure they can never get back control over their account?&lt;/p&gt;
&lt;h2&gt;Changing Apple ID Password and Removing iCloud Lock&lt;/h2&gt;
&lt;p&gt;Normally, changing an account password requires confirming the old password first. In some cases, one could reset a password by receiving a one-time password reset link to a trusted address. This is about the same for the Big Three (Apple, Google and Microsoft) if you do it through the browser.&lt;/p&gt;
&lt;p&gt;But (and this is a very important “but”) Apple has its own way. For Apple accounts with two-factor authentication, one can &lt;a href=&quot;https://blog.elcomsoft.com/2017/11/breaking-apple-icloud-reset-password-and-bypass-two-factor-authentication/&quot;&gt;simply reset their Apple ID password&lt;/a&gt; from the device by confirming their device passcode (as opposed to supplying their old Apple ID password).&lt;/p&gt;
&lt;p&gt;What does that mean in practice? If you have someone’s iPhone, and you happen to know or can recover the passcode (solutions allowing to brute-force device passcodes are available on the market), you can do the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Change the user’s Apple ID password&lt;/li&gt;
&lt;li&gt;Remove iCloud lock (then reset and re-activate the iPhone on another account)&lt;/li&gt;
&lt;li&gt;Discover physical location of their other devices registered on the same Apple account&lt;/li&gt;
&lt;li&gt;Remotely lock or erase those devices&lt;/li&gt;
&lt;li&gt;Replace original user’s trusted phone number (from then on, you’ll be receiving that user’s 2FA codes to your own SIM card)&lt;/li&gt;
&lt;li&gt;Access everything stored in the user’s iCloud account&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So how do you reset the user’s Apple account / iCloud password? For that, we’ll use the preinstalled Find My Phone app (reminder: this is going to work on 2FA-enabled accounts only):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4415 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_1_FMP-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_1_FMP-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_1_FMP-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_1_FMP.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;From there, tap “Forgot Apple ID or password?” The app will prompt for device passcode:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4416 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_2_Passcode-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_2_Passcode-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_2_Passcode-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_2_Passcode.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Enter the passcode. During the next step, enter and confirm a new Apple ID password (same as iCloud password):&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4417 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_3_ChangePassword-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_3_ChangePassword-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_3_ChangePassword-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method2_3_ChangePassword.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;It’s that simple. You were never prompted to enter the original Apple account password; device passcode was enough to reset account password.&lt;/p&gt;
&lt;p&gt;Is this a bug in the Find My Phone app? Absolutely not! You can do the same even without using the app. Open the Settings app on the user’s iPhone, and open the user’s Apple ID settings. From there, open Password &amp;amp; Security:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4418 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_3_PasswordAndSecurity-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_3_PasswordAndSecurity-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_3_PasswordAndSecurity-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_3_PasswordAndSecurity.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Tap Change Password. You will be prompted for device passcode:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4420 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_4_EnterPasscode-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_4_EnterPasscode-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_4_EnterPasscode-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_4_EnterPasscode.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Then you’ll be able to change the password to iCloud / Apple ID:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4421 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_5_ChangePassword-309x550.png&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_5_ChangePassword-309x550.png 309w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_5_ChangePassword-576x1024.png 576w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/Method1_5_ChangePassword.png 750w&quot; sizes=&quot;(max-width: 309px) 100vw, 309px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In fact, you can do even more from the Settings app compared to Find My Phone. In addition to account password, you can also replace the user’s Trusted Phone Number with your own phone number, making it insanely difficult for the ex-owner to regain control over now-yours Apple account. In order to replace the trusted phone number, first add and confirm a new trusted number; then you can remove the old one.&lt;/p&gt;
&lt;p&gt;At this point, removing iCloud lock (the very lock that protects iOS devices from theft) it as easy as switching off Find My iPhone and typing your newly created Apple ID password.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4422 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/find-413x550.jpg&quot; alt=&quot;&quot; width=&quot;413&quot; height=&quot;550&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/find-413x550.jpg 413w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/find-768x1024.jpg 768w&quot; sizes=&quot;(max-width: 413px) 100vw, 413px&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Accessing iCloud Account&lt;/h2&gt;
&lt;p&gt;Access to iCloud data (backups, synced data, iCloud Photos and stored passwords) is normally securely protected. In order to access that data you would need a login and password (and access to the second authentication factor).&lt;/p&gt;
&lt;p&gt;Wait! We’ve just reset the user’s iCloud password, and we’ve just added a new phone number to receive one-time codes! This means we can easily access everything the user has in their Apple account, including iCloud backups, photos taken on all of their devices, their iCloud Keychain, contacts, call logs, and a lot more.&lt;/p&gt;
&lt;h2&gt;iCloud Backups&lt;/h2&gt;
&lt;p&gt;We wrote about iCloud backups many times before. In a word, Apple may store up to three last backups per device. If the user has multiple iOS devices registered on the same Apple ID, up to 3 cloud backups will be available for each device.&lt;/p&gt;
&lt;p&gt;By resetting the iCloud password, you’ve just opened the possibility to access those backups. All you need is the user’s Apple ID, your newly reset password, and one-time code to pass two-factor authentication.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/iOS/iphone7-ios11-settings-apple-id-password-security-verification-code.jpg&quot;&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/iOS/iphone7-ios11-settings-apple-id-password-security-verification-code.jpg&quot; width=&quot;218&quot; height=&quot;445&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Use Elcomsoft Phone Breaker to download backups. [Tools] | [Apple] | [Download from iCloud] | [Backups].&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4423 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/download_backup-550x362.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;362&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/download_backup-550x362.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/download_backup.png 618w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The backup will be downloaded and saved in the iTunes format. You can view its content with &lt;a href=&quot;https://www.elcomsoft.com/epv.html&quot;&gt;Elcomsoft Phone Viewer&lt;/a&gt; or other forensic tools.&lt;/p&gt;
&lt;h2&gt;Call Logs, Files and Synced Data&lt;/h2&gt;
&lt;p&gt;iCloud is a lot more than just backups. Apple devices use iCloud to sync information such as browser bookmarks and open tabs, Web browsing history, contacts, notes, call logs, and even passwords. This information is collected and synchronized across all devices registered on the same Apple account.&lt;/p&gt;
&lt;p&gt;Extracting synced data is simple. Just use &lt;span&gt;Elcomsoft Phone Breaker&lt;/span&gt; to download, and &lt;span&gt;Elcomsoft Phone Viewer&lt;/span&gt; to analyse.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4424 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/epv_calls-550x433.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;433&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/epv_calls-550x433.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/epv_calls-768x605.png 768w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/epv_calls.png 832w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;What if the user has a Mac? We can then access Documents and Desktop files synced by that Mac with iCloud Drive! Use Elcomsoft Phone Breaker: [Tools] | [Apple] | [Download from iCloud] | [iCloud Drive] to obtain those files. Finally, as an added bonus, you may be able to extract the user’s FileVault2 recovery key (if the user allowed cloud recovery, that is).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud_files.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-4437&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud_files-550x362.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;362&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud_files-550x362.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud_files-768x506.png 768w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud_files-1024x675.png 1024w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The Passwords: iCloud Keychain&lt;/h2&gt;
&lt;p&gt;iCloud Keychain is a cloud service for synchronizing Safari passwords, authentication tokens and payment information across iOS devices. After changing iCloud password and assuming you know device passcode (and this, for the purpose of this article, is a given), you can easily download those passwords.&lt;/p&gt;
&lt;p&gt;Step 1: in Elcomsoft Phone Breaker click [Tool] | [Apple] | [Download from iCloud] | [Keychain]&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4425 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-1-550x362.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;362&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-1-550x362.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-1.png 618w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Step 2: use login, password and 2FA code to log in to iCloud&lt;/p&gt;
&lt;p&gt;Step 3: select a trusted device from the list (this must be the device that you know the passcode to) and enter its passcode into the &lt;em&gt;Device passcode&lt;/em&gt; box&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4426 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-2-550x362.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;362&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-2-550x362.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-2.png 618w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Step 4: the iCloud Keychain will be downloaded. You can now go back to the main window and open &lt;em&gt;Keychain Explorer&lt;/em&gt; to access those passwords. By the way, you will now have access to the original (old) password to the user’s Apple ID account, as well as (possibly) passwords and tokens to that user’s other Apple ID accounts, if there are any. In addition, you may also see passwords to email accounts and Wi-Fi networks, as well as pretty much every password the user typed in Safaru.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4427 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-3-550x367.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;367&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-3-550x367.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-3.png 612w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-medium wp-image-4428 aligncenter&quot; src=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-4-550x366.png&quot; alt=&quot;&quot; width=&quot;550&quot; height=&quot;366&quot; srcset=&quot;https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-4-550x366.png 550w, https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud-keychain-4.png 612w&quot; sizes=&quot;(max-width: 550px) 100vw, 550px&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With the release of iOS 11, Apple developers made too many assumptions, breaking the fragile security/convenience balance and shifting it heavily onto convenience side.&lt;/p&gt;
&lt;p&gt;Once an intruder gains access to the user’s iPhone and knows (or recovers) the passcode, there is no single extra layer of protection left. Everything (and I mean, everything) is now completely exposed. Local backups, the keychain, iCloud lock, Apple account password, cloud backups and photos, passwords from the iCloud Keychain, call logs, location data, browsing history, browser tabs and even the user’s original Apple ID password are quickly exposed. The intruder gains control over the user’s other Apple devices registered on the same Apple account, having the ability to remotely erase or lock those devices. Finally, regaining control over hijacked account is made difficult as even the trusted phone number can be replaced.&lt;/p&gt;
&lt;p&gt;This is just scary. Why Apple decided to get rid of the system that used to deliver a seemingly perfect balance between security and convenience is beyond us.&lt;/p&gt;
&lt;p&gt;If you don’t think this is a big issue, just one word for you: &lt;a href=&quot;https://en.wikipedia.org/wiki/ICloud_leaks_of_celebrity_photos&quot;&gt;celebgate&lt;/a&gt;. Obviously, the victims had a password protecting their accounts, and yet that was not enough to stop hackers from stealing their photos. This is what the second protection layer is for as delivered by two-factor authentication. What I am saying is: once &lt;em&gt;they&lt;/em&gt; have &lt;em&gt;your&lt;/em&gt; iPhone and &lt;em&gt;your&lt;/em&gt; passcode, you are no longer in control of &lt;em&gt;their&lt;/em&gt; device and &lt;em&gt;their&lt;/em&gt; Apple account.&lt;/p&gt;
&lt;p&gt;What can you do to protect yourself? Since the passcode is now the one and only safeguard left, make sure you use at least 6 digits. Four-digit PINs are no longer secure. Other than that, we’ll just wait and see if Apple can fix it.&lt;/p&gt;
&lt;div class=&quot;nodash&quot; readability=&quot;14.893617021277&quot;&gt;
&lt;p&gt;Tags: &lt;a href=&quot;https://blog.elcomsoft.com/tag/2fa/&quot; rel=&quot;tag&quot;&gt;2FA&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/elcomsoft-phone-breaker/&quot; rel=&quot;tag&quot;&gt;Elcomsoft Phone Breaker&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/elcomsoft-phone-viewer/&quot; rel=&quot;tag&quot;&gt;Elcomsoft Phone Viewer&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/epb/&quot; rel=&quot;tag&quot;&gt;EPB&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/epv/&quot; rel=&quot;tag&quot;&gt;EPV&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/filevault/&quot; rel=&quot;tag&quot;&gt;FileVault&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/icloud/&quot; rel=&quot;tag&quot;&gt;iCloud&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/ios-11/&quot; rel=&quot;tag&quot;&gt;ios 11&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/passcode/&quot; rel=&quot;tag&quot;&gt;passcode&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/tag/two-factor-authentication/&quot; rel=&quot;tag&quot;&gt;Two-Factor Authentication&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;postmetadata alt&quot;&gt;&lt;small&gt;This entry was posted on Wednesday, November 29th, 2017 at 4:59 pm and is filed under &lt;a href=&quot;https://blog.elcomsoft.com/category/did-you-know-that/&quot; rel=&quot;category tag&quot;&gt;Did you know that...?&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/category/security/&quot; rel=&quot;category tag&quot;&gt;Security&lt;/a&gt;, &lt;a href=&quot;https://blog.elcomsoft.com/category/software/&quot; rel=&quot;category tag&quot;&gt;Software&lt;/a&gt;. You can follow any responses to this entry through the &lt;a href=&quot;https://blog.elcomsoft.com/2017/11/ios-11-horror-story-the-rise-and-fall-of-ios-security/feed/&quot;&gt;RSS 2.0&lt;/a&gt; feed. Both comments and pings are currently closed.&lt;/small&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 01 Dec 2017 06:55:07 +0000</pubDate>
<dc:creator>Maakuth</dc:creator>
<og:title>iOS 11 Horror Story: the Rise and Fall of iOS Security</og:title>
<og:url>https://blog.elcomsoft.com/2017/11/ios-11-horror-story-the-rise-and-fall-of-ios-security/</og:url>
<og:type>article</og:type>
<og:description>We loved what Apple used to do about security. During the past years, the company managed to build a complete, multi-layer system to secure its hardware and software ecosystem and protect its customers against common threats. Granted, the system was not without its flaws (most notably, the obligator</og:description>
<og:image>https://blog.elcomsoft.com/wp-content/uploads/2017/11/icloud1200x630.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.elcomsoft.com/2017/11/ios-11-horror-story-the-rise-and-fall-of-ios-security/</dc:identifier>
</item>
<item>
<title>Writing a C Compiler, Part 1</title>
<link>https://norasandler.com/2017/11/29/Write-a-Compiler.html</link>
<guid isPermaLink="true" >https://norasandler.com/2017/11/29/Write-a-Compiler.html</guid>
<description>&lt;p&gt;This is the first post in a series on writing your own C compiler. Here are some reasons to write a compiler:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You’ll learn about abstract syntax trees (ASTs) and how programs can represent and manipulate other programs. Handy for working with linters, static analyzers, and metaprogramming of all sorts.&lt;/li&gt;
&lt;li&gt;You’ll learn about assembly, calling conventions, and all the gritty, low-level details of how computers, like, do stuff.&lt;/li&gt;
&lt;li&gt;It seems like an impossibly hard project (but isn’t!), so writing one will make you feel like a badass.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I’ve been working on my own C compiler, &lt;a href=&quot;https://github.com/nlsandler/nqcc&quot;&gt;nqcc&lt;/a&gt; for the past several weeks, using Abdulaziz Ghuloum’s &lt;a href=&quot;http://scheme2006.cs.uchicago.edu/11-ghuloum.pdf&quot;&gt;An Incremental Approach to Compiler Construction&lt;/a&gt; as a roadmap. I really like Ghuloum’s approach: you start by compiling a tiny, trivial subset of your source language all the way down to &lt;a href=&quot;https://drawings.jvns.ca/assembly/&quot;&gt;x86 assembly&lt;/a&gt;. Then you add new language features, one step at a time. In step one, you just return constants; in a later step you handle addition and subtraction; and so on. Every step is small enough to feel manageable, and at the end of the every step you have a working compiler.&lt;/p&gt;
&lt;p&gt;This series is adapted from Ghuloum’s paper - the original paper is about compiling Scheme, so I had to make some adjustments to compile C instead. I’ll cover arithmetic operations, conditionals, local variables, function calls, and perhaps more. I’ve also written some &lt;a href=&quot;https://github.com/nlsandler/write_a_c_compiler&quot;&gt;test programs&lt;/a&gt; that you can use to validate that each stage of your compiler works correctly.&lt;/p&gt;

&lt;p&gt;Before you start, you need to decide on two things: what language to write your compiler in, and how to handle parsing and lexing. You can implement the compiler in whatever language you like, but I’d recommend using a language with sum types and pattern matching&lt;sup id=&quot;anchor1&quot;&gt;&lt;a href=&quot;https://norasandler.com/2017/11/29/Write-a-Compiler.html#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, like OCaml, Haskell, or Rust. It will be SO MUCH EASIER to build and traverse an AST if you do. I started writing nqcc in Python, which I know very well, then got fed up and switched to OCaml, which I didn’t know well at all, and it was definitely worth it.&lt;/p&gt;
&lt;p&gt;You also need to decide whether to write your own parser and lexer or use automatic parser and scanner generators (e.g. &lt;a href=&quot;https://github.com/westes/flex&quot;&gt;flex&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/software/bison/&quot;&gt;bison&lt;/a&gt;). In this series of posts, I’ll show you how to write a lexer (or scanner) and recursive descent parser by hand. Using a parser generator is probably easier, but I haven’t tried it so I could be wrong. You could probably also use a scanner generator for lexing, but hand-write your own parser. Basically, do whatever you like, but I’m only going to talk about hand-writing a lexer and parser for the rest of this series, so if you want to use bison and flex you’re on your own.&lt;/p&gt;

&lt;p&gt;This week, we’ll compile a program that returns a single integer. We’ll also set up the three basic passes of our compiler. This will be a lot of work for not that much payoff, but the architecture we define now will make it easy to add more language features later on.&lt;/p&gt;
&lt;p&gt;Here’s a program we’d like to compile - we’ll call it return_2.c:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We’ll only handle programs with a single function, &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;, consisting of a single return statement. The only thing that varies is the value of the integer being returned. We won’t handle hex or octal integer literals, just decimal. To verify that your compiler works correctly, you’ll need to compile a program, run it, and check its return code:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./YOUR_COMPILER return_2.c &lt;span class=&quot;c&quot;&gt;# compile the source file shown above&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./gcc &lt;span class=&quot;nt&quot;&gt;-m32&lt;/span&gt; return_2.s &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; return_2 &lt;span class=&quot;c&quot;&gt;# assemble it into an executable&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./return_2 &lt;span class=&quot;c&quot;&gt;# run the executable you just compiled&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# check the return code; it should be 2&lt;/span&gt;
2 
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your compiler will produce x86 assembly. We won’t transform the assembly into an executable ourselves - that’s the job of the assembler and linker, which are separate programs&lt;sup id=&quot;anchor2&quot;&gt;&lt;a href=&quot;https://norasandler.com/2017/11/29/Write-a-Compiler.html#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. To see how this program looks in assembly, let’s compile it with gcc&lt;sup id=&quot;anchor3&quot;&gt;&lt;a href=&quot;https://norasandler.com/2017/11/29/Write-a-Compiler.html#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gcc &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-O3&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-fno-asynchronous-unwind-tables&lt;/span&gt; return_2.c
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;return_2.s
    .section __TEXT,__text_startup,regular,pure_instructions
    .align 4
    .globl _main
_main:
    movl    &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;, %eax
    ret
    .subsections_via_symbols
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now, let’s look at the assembly itself. We can ignore the &lt;code class=&quot;highlighter-rouge&quot;&gt;.section&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.align&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.subsections_via_symbols&lt;/code&gt; directives - if you delete them, you can still assemble and run return_2.s&lt;sup id=&quot;anchor4&quot;&gt;&lt;a href=&quot;https://norasandler.com/2017/11/29/Write-a-Compiler.html#fn4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;.globl _main&lt;/code&gt; indicates that the &lt;code class=&quot;highlighter-rouge&quot;&gt;_main&lt;/code&gt; symbol should be visible to the linker; otherwise it can’t find the entry point to the program. Finally, we have our actual assembly instructions:&lt;/p&gt;
&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;                  &lt;span class=&quot;c&quot;&gt;; label for start of &quot;main&quot; function&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;movl&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eax&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;; move constant &quot;2&quot; into the EAX register&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt;                 &lt;span class=&quot;c&quot;&gt;; return from function&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The most important point here is that when a function returns, the EAX register will contain its return value. The &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; function’s return value will be the program’s exit code.&lt;/p&gt;
&lt;p&gt;The only thing that can change in this snippet of assembly is the return value. So one very simple approach would be to use a regular expression to extract the return value from the source code, then plug it into the assembly. Here’s a 20-line Python script to do that:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#expected form of a C program, without line breaks&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;source_re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r&quot;int main\s*\(\s*\)\s*{\s*return\s+(?P&amp;lt;ret&amp;gt;[0-9]+)\s*;\s*}&quot;&lt;/span&gt; 

&lt;span class=&quot;n&quot;&gt;assembly_format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;    
    .globl _main
_main:
    movl    ${}, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;eax
    ret
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;source_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assembly_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.s&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assembly_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source_re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# extract the named &quot;ret&quot; group, containing the return value&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ret'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assembly_format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But parsing the whole program with one big regular expression isn’t a viable long-term strategy. Instead, we’ll split up the compiler into three stages: lexing, parsing, and code generation. As far as I know, this is a pretty standard compiler architecture, except you’d normally want a bunch of optimization passes between parsing and code generation.&lt;/p&gt;
&lt;h2 id=&quot;lexing&quot;&gt;Lexing&lt;/h2&gt;
&lt;p&gt;The lexer (also called the scanner or tokenizer) is the phase of the compiler that breaks up a string (the source code) into a list of tokens. A token is the smallest unit the parser can understand - if a program is like a paragraph, tokens are like individual words. (Many tokens &lt;em&gt;are&lt;/em&gt; individual words, separated by whitespace.) Variable names, keywords, and constants, and punctuation like braces are all examples of tokens. Here’s a list of all the tokens in return_2.c:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;Identifier “main”&lt;/li&gt;
&lt;li&gt;Open parentheses&lt;/li&gt;
&lt;li&gt;Close parentheses&lt;/li&gt;
&lt;li&gt;Open brace&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;Constant “2”&lt;/li&gt;
&lt;li&gt;Semicolon&lt;/li&gt;
&lt;li&gt;Close brace&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that some tokens have a value (e.g. the constant token has value “2”) and some don’t (like parentheses and braces). Also note that there are no whitespace tokens. (In some languages, like Python, whitespace is significant and you do need tokens to represent it.)&lt;/p&gt;
&lt;p&gt;Here are all the tokens your lexer needs to recognize, and the regular expression defining each of them:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open brace &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Close brace &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open parenthesis &lt;code class=&quot;highlighter-rouge&quot;&gt;\(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Close parenthesis &lt;code class=&quot;highlighter-rouge&quot;&gt;\)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Semicolon &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Int keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Return keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Identifier &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z]\w*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Integer literal &lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9]+&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you want, you could just have a “keyword” token type, instead of a different token type for each keyword.&lt;/p&gt;
&lt;h4 id=&quot;-task&quot;&gt;☑ Task:&lt;/h4&gt;
&lt;p&gt;Write a &lt;em&gt;lex&lt;/em&gt; function that accepts a file and returns a list of tokens. It should work for all step 1 examples in the test suite, including the invalid ones. (The invalid examples should raise errors in the parser, not the lexer.) To keep things simple, we only lex decimal integers. If you like, you can extend your lexer to handle octal and hex integers too.&lt;/p&gt;
&lt;p&gt;You might notice that we can’t lex negative integers. That’s not an accident - C doesn’t have negative integer constants. It just has a negation operator, which can be applied to positive integers. We’ll add negation in the next post.&lt;/p&gt;
&lt;h2 id=&quot;parsing&quot;&gt;Parsing&lt;/h2&gt;
&lt;p&gt;The next step is transforming our list of tokens into an abstract syntax tree. An AST is one way to represent the structure of a program. In most programming languages, language constructs like conditionals and function declarations are made up of simpler constructs, like variables and constants. ASTs capture this relationship; the root of the AST will be the entire program, and each node will have children representing its constituent parts. Let’s look at a small example:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;if (a &amp;lt; b) {
    c = 2;
    return c;
} else {
    c = 3;
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This code snippet is an if statement, so we’ll label the root of our AST “if statement”. It will have three children:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The condition (&lt;code class=&quot;highlighter-rouge&quot;&gt;a &amp;lt; b&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The if body (&lt;code class=&quot;highlighter-rouge&quot;&gt;c = 2; return c;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The else body (&lt;code class=&quot;highlighter-rouge&quot;&gt;c = 3;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Each of these components can be broken down further. For example, the condition is a binary &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; operation with two children:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first operand (variable &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The second operand (variable &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;An assignment statement (like &lt;code class=&quot;highlighter-rouge&quot;&gt;c=2;&lt;/code&gt;) also has two children: the variable being updated (&lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt;), and the expression assigned to it (&lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The if body, on the other hand, can have an arbitrary number of children - each statement is a child node. In this case it has two children because there are two statements. The children are ordered - &lt;code class=&quot;highlighter-rouge&quot;&gt;c=2;&lt;/code&gt; precedes &lt;code class=&quot;highlighter-rouge&quot;&gt;return c;&lt;/code&gt; because it comes first in the source code.&lt;/p&gt;
&lt;p&gt;Here’s the full AST for this code snippet:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://norasandler.com/assets/AST.svg&quot; alt=&quot;Image of diagram; text outline follows&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;screen-reader-only&quot;&gt;
&lt;ul&gt;&lt;li&gt;if statement
&lt;ul&gt;&lt;li&gt;condition: binary operation (&amp;lt;)
&lt;ul&gt;&lt;li&gt;operand 1: variable a&lt;/li&gt;
&lt;li&gt;operand 2: variable b&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;if body: statement list
&lt;ul&gt;&lt;li&gt;statement 1: assignment
&lt;ul&gt;&lt;li&gt;variable: c&lt;/li&gt;
&lt;li&gt;right-hand side: constant 2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;statement 2: return
&lt;ul&gt;&lt;li&gt;return value: variable c&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;else body: statement list
&lt;ul&gt;&lt;li&gt;statement 1: assignment
&lt;ul&gt;&lt;li&gt;variable: c&lt;/li&gt;
&lt;li&gt;right-hand side: constant 3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;And here’s pseudocode for constructing this AST:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;//create if condition
cond = BinaryOp(op='&amp;gt;', operand_1=Var(a), operand_2=Var(b))

//create if body
assign = Assignment(var=Var(c), rhs=Const(2))
return = Return(val=Var(c))
if_body = [assign, return]

//create else body
assign_else = Assignment(var=Var(c), rhs=Const(3))
else_body = [assign_else]

//construct if statement
if = If(condition=cond, body=if_body, else=else_body)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For now, though, we don’t need to worry about conditionals, variable assignments, or binary operators. Right now, the only AST nodes we need to support are programs, function declarations, statements, and expressions. Here’s how we’ll define each of them:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;program = Program(function_declaration)
function_declaration = Function(string, statement) //string is the function name
statement = Return(exp)
exp = Constant(int) 
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Right now, a program consists of a single function, &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;. Later on we’ll define a program as a list of functions. A function has a name and a body. Later, a function will also have a list of arguments. In a real C compiler, we’d also need to store the function’s return type, but right now we only have integer types. A function body is a single statement; later it will be a list of statements. There’s only one type of statement: a return statement. Later we’ll add other types of statements, like conditionals and variable declarations. A return statement has one child, an expression - this is the value being returned. For now an expression can only be an integer constant. Later we’ll let expressions include arithmetic operations, which will allow us to parse statements like &lt;code class=&quot;highlighter-rouge&quot;&gt;return 2+2;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As we add new language constructs, we’ll update the definitions of our AST nodes. For example, we’ll eventually add a new type of statement: variable assignment. When we do, we’ll add a new form to our &lt;code class=&quot;highlighter-rouge&quot;&gt;statement&lt;/code&gt; definition:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;statement = Return(exp) | Assign(variable, exp)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here’s a diagram of the AST for return_2.c:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://norasandler.com/assets/return_2_ast.svg&quot; alt=&quot;Image of diagram; text outline follows&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;screen-reader-only&quot;&gt;
&lt;ul&gt;&lt;li&gt;Program
&lt;ul&gt;&lt;li&gt;Function (name: main)
&lt;ul&gt;&lt;li&gt;body
&lt;ul&gt;&lt;li&gt;return statement
&lt;ul&gt;&lt;li&gt;constant (value: 2)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;Finally, we need a formal grammar, which defines how series of tokens can be combined to form language constructs. We’ll define it here in &lt;a href=&quot;https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form&quot;&gt;Backus-Naur Form&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&amp;lt;program&amp;gt; ::= &amp;lt;function&amp;gt;
&amp;lt;function&amp;gt; ::= &quot;int&quot; &amp;lt;id&amp;gt; &quot;(&quot; &quot;)&quot; &quot;{&quot; &amp;lt;statement &quot;}&quot;
&amp;lt;statement&amp;gt; ::= &quot;return&quot; &amp;lt;exp&amp;gt; &quot;;&quot;
&amp;lt;exp&amp;gt; ::= &amp;lt;int&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Each of the lines above is a &lt;em&gt;production rule&lt;/em&gt;, defining how a language construct can be built from other language constructs and tokens. Every symbol that appears on the left-hand side of a production rule (i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;program&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;function&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;statement&amp;gt;&lt;/code&gt;) is a non-terminal symbol. Individual tokens (keywords, ids, punctuation, etc.) are terminal symbols. Note that, while this grammar tells us what sequence of tokens constitutes a valid C program, it &lt;em&gt;doesn’t&lt;/em&gt; tell us exactly how to transform that program into an AST - for example, there’s no production rule corresponding to the Constant node in the AST. We could rewrite our grammar to have a production rule for constants, but we don’t have to in order to parse the program.&lt;/p&gt;
&lt;p&gt;Right now the grammar is extremely simple; there’s only one production rule for each non-terminal symbol. Later, some non-terminal symbols will have multiple production rules. For example, if we added support for variable declarations, we could have the following rule for deriving statements:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&amp;lt;statement&amp;gt; ::= &quot;return&quot; &amp;lt;int&amp;gt; &quot;;&quot; | &quot;int&quot; &amp;lt;id&amp;gt; &quot;=&quot; &amp;lt;int&amp;gt; &quot;;&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To transform a list of tokens into an AST, we’ll use a technique called recursive descent parsing. We’ll define a function to parse each non-terminal symbol in the grammar and return a corresponding AST node. The function to parse symbol &lt;em&gt;S&lt;/em&gt; should remove tokens from the start of the list until it reaches a valid derivation of &lt;em&gt;S&lt;/em&gt;. If, before it’s done parsing, it hits a token that isn’t in the production rule for &lt;em&gt;S&lt;/em&gt;, it should fail. If the rule for &lt;em&gt;S&lt;/em&gt; contains other non-terminals, it should call other functions to parse them.&lt;/p&gt;
&lt;p&gt;Here’s the pseudocode for parsing a statement:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;def parse_statement(tokens):
    tok = tokens.next()
    if tok.type != &quot;RETURN_KEYWORD&quot;:
        fail()
    tok = tokens.next()
    if tok.type != &quot;INT&quot;
        fail()
    exp = parse_exp(tokens) //parse_exp will pop off more tokens
    statement = Return(exp)

    tok = tokens.next()
    if tok.type != &quot;SEMICOLON&quot;:
        fail()

    return statement
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Later, the production rules will be recursive (e.g. an arithmetic expression can contain other expressions), which means the parsing functions will be recursive too - hence the name recursive descent parser.&lt;/p&gt;
&lt;h4 id=&quot;-task-1&quot;&gt;☑ Task:&lt;/h4&gt;
&lt;p&gt;Write a &lt;em&gt;parse&lt;/em&gt; function that accepts a list of tokens and returns an AST, rooted at a Program node. The function should build the correct AST for all valid step 1 examples, and raise an error on all invalid step 1 examples. If you want, you can also have your parser fail gracefully if it encounters integers above your system’s INT_MAX.&lt;/p&gt;
&lt;p&gt;There are a lot of ways to represent an AST in code - each type of node could be its own class or its own datatype, depending on what language you’re writing your compiler in. For example, here’s how you might define AST nodes as OCaml datatypes:&lt;/p&gt;
&lt;div class=&quot;language-ocaml highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fun_decl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Prog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fun_decl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;code-generation&quot;&gt;Code Generation&lt;/h2&gt;
&lt;p&gt;Now that we’ve built an AST, we’re ready to generate some assembly! Like we saw before, we only need to emit four lines of assembly. To emit it, we’ll traverse the AST in &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Post-order&quot;&gt;post-order&lt;/a&gt;. That means we’ll visit, in order:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The function name (not really a &lt;em&gt;node&lt;/em&gt;, but the first thing in the function definition)&lt;/li&gt;
&lt;li&gt;The return value&lt;/li&gt;
&lt;li&gt;The return statement&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This traversal ensures that a value is defined before it’s used; for example, we generate the return value before it’s referenced in the return statement.&lt;/p&gt;
&lt;p&gt;Here’s the assembly we need:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;To generate a function (e.g. function “foo”):
&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_foo&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BODY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GOES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;To generate a return statement (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;return 3;&lt;/code&gt;):
&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt; &lt;span class=&quot;n&quot;&gt;movl&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eax&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ret&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;-task-2&quot;&gt;☑ Task:&lt;/h4&gt;
&lt;p&gt;Write a &lt;em&gt;generate&lt;/em&gt; function that accepts an AST and generates assembly. It can return the assembly as a string or write it directly to a file. It should generate correct assembly for all valid step 1 examples.&lt;/p&gt;
&lt;h2 id=&quot;optional-pretty-printing&quot;&gt;(Optional) Pretty printing&lt;/h2&gt;
&lt;p&gt;You’ll probably want a utility function to print out your AST, to help with debugging. You can write it now, or wait until you need it. Here’s what nqcc’s pretty printer outputs for return_2.c:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;FUN INT main:
    params: ()
    body:
        RETURN Int&amp;lt;2&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This example includes some information your AST doesn’t need, like the return type and list of function parameters.&lt;/p&gt;
&lt;h4 id=&quot;-task-3&quot;&gt;☑ Task:&lt;/h4&gt;
&lt;p&gt;Write a &lt;em&gt;pretty-print&lt;/em&gt; funcion that takes an AST and prints it out in a readable way.&lt;/p&gt;
&lt;h2 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;/h2&gt;
&lt;h4 id=&quot;-task-4&quot;&gt;☑ Task:&lt;/h4&gt;
&lt;p&gt;Write a program that accepts a C source file and outputs an executable. The program should:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Read in the file&lt;/li&gt;
&lt;li&gt;Lex it&lt;/li&gt;
&lt;li&gt;Parse it&lt;/li&gt;
&lt;li&gt;Generate assembly&lt;/li&gt;
&lt;li&gt;Write the assembly to a file&lt;/li&gt;
&lt;li&gt;Invoke GCC command to convert the assembly to an executable:
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;gcc -m32 assembly.s -o out
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this command, “assembly.s” is the name of the assembly file and “out” is the name of the executable you want to generate. The &lt;code class=&quot;highlighter-rouge&quot;&gt;-m32&lt;/code&gt; option tells GCC to build a 32-bit binary. You can omit that option and build 64-bit binaries if you want, but you’ll need to make some changes to the code generation steps later on (e.g. using 64-bit registers).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;(Optional) Delete the assembly file.&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;
&lt;p&gt;You can test that your compiler is working properly with the test script &lt;a href=&quot;https://github.com/nlsandler/write_a_c_compiler&quot;&gt;here&lt;/a&gt;. It will compile a set of test programs using your compiler, execute them, and make sure they return the right value.&lt;/p&gt;
&lt;p&gt;To invoke it:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;./test_compiler.sh /path/to/your/compiler
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In order to test it with the script, your compiler needs to follow this spec:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It can be invoked from the command line, taking only a C source file as an argument, e.g.: &lt;code class=&quot;highlighter-rouge&quot;&gt;./YOUR_COMPILER /path/to/program.c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When passed &lt;code class=&quot;highlighter-rouge&quot;&gt;program.c&lt;/code&gt;, it generates executable &lt;code class=&quot;highlighter-rouge&quot;&gt;program&lt;/code&gt; in the same directory.&lt;/li&gt;
&lt;li&gt;It doesn’t generate assembly or an executable if parsing fails (this is what the test script checks for invalid test programs).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The script doesn’t check whether your compiler outputs sensible error messages, but you can use the invalid test programs to test that manually.&lt;/p&gt;

&lt;p&gt;In the next post, we’ll add three unary operators: &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;. Stay tuned!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you have any questions, corrections, or other feedback, you can &lt;a href=&quot;https://norasandler.com/cdn-cgi/l/email-protection#67090815062709081506140609030b02154904080a&quot;&gt;email me&lt;/a&gt; or &lt;a href=&quot;https://github.com/nlsandler/write_a_c_compiler/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.wilfred.me.uk/blog/2014/08/27/baby-steps-to-a-c-compiler/&quot;&gt;Baby Steps to a C Compiler&lt;/a&gt; - a post about another C compiler inspired by Ghuloum’s paper.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf&quot;&gt;C11 Standard&lt;/a&gt;, the current C language specification. Annex A is a summary of C’s grammar, so it’s a good reference for parsing. You probably don’t need to read this all the way through.&lt;/li&gt;
&lt;/ul&gt;



</description>
<pubDate>Fri, 01 Dec 2017 04:28:02 +0000</pubDate>
<dc:creator>sidcool</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://norasandler.com/2017/11/29/Write-a-Compiler.html</dc:identifier>
</item>
<item>
<title>A Map Showing How Much Time It Takes English-Speakers to Learn Foreign Languages</title>
<link>http://www.openculture.com/2017/11/a-map-showing-how-much-time-it-takes-to-learn-foreign-languages-from-easiest-to-hardest.html</link>
<guid isPermaLink="true" >http://www.openculture.com/2017/11/a-map-showing-how-much-time-it-takes-to-learn-foreign-languages-from-easiest-to-hardest.html</guid>
<description>&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1045254&quot; src=&quot;http://cdn8.openculture.com/2017/11/28204353/Language-Difficulties.png&quot; alt=&quot;&quot; width=&quot;859&quot; height=&quot;767&quot; srcset=&quot;http://cdn8.openculture.com/2017/11/28204353/Language-Difficulties.png 859w, http://cdn8.openculture.com/2017/11/28204353/Language-Difficulties-150x134.png 150w, http://cdn8.openculture.com/2017/11/28204353/Language-Difficulties-300x268.png 300w, http://cdn8.openculture.com/2017/11/28204353/Language-Difficulties-768x686.png 768w&quot; sizes=&quot;(max-width: 859px) 100vw, 859px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Do you want to speak more languages? Sure, &lt;a href=&quot;https://www.youtube.com/watch?v=Fj23I8hgj28&quot;&gt;as Sally Struthers used to say so often&lt;/a&gt;, we all do. But the requirements of attaining proficiency in any foreign tongue, no doubt unlike those correspondence courses pitched by that &lt;em&gt;All in the Family&lt;/em&gt; star turned daytime TV icon, can seem frustratingly demanding and unclear. But thanks to the research efforts of the &lt;a href=&quot;https://www.state.gov/m/fsi/&quot;&gt;Foreign Service Institute&lt;/a&gt;, the center of foreign-language training for the United States government for the past 70 years, you can get a sense of how much time it takes, as a native or native-level English speaker, to master any of a host of languages spoken all across the world.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/MapPorn/comments/7dith2/language_difficult_rankings_in_europe_according/?st=jakhznjw&amp;amp;sh=06912f7e&quot;&gt;The map above&lt;/a&gt; visualizes the languages of Europe (at least those deemed diplomatically important enough to be taught at the FSI), coloring them according the average time commitment they require of an English speaker. In pink, we have the English-speaking countries. The red countries speak Category I languages, those most closely related to English and thus learnable in 575 to 600 hours of study: the traditional high-school foreign languages of Spanish and French, for instance, or the less commonly taught but just about as easily learnable Portuguese and Italian. If you'd like a little more challenge, why not try your hand at German, whose 750 hours of study puts it in Category II — quite literally, a category of its own?&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;In total, the FSI ranks languages into six categories of difficulty, including English's Category 0. The higher up the scale you go, the less recognizable the languages might look to an English-speaking monoglot. Category III contains no European languages at all (though it does contain Indonesian, widely regarded as one of the objectively easiest languages to learn). Category IV offers a huge variety of languages from Amharic to Czech to Nepali to Tagalog, each demanding 44 weeks (or 1100 hours) of study. Then, at the very summit of the linguistic mountain, we find the switched-up grammar, highly unfamiliar scripts, and potentially mystifying cultural assumptions of Category V, &quot;languages which are exceptionally difficult for native English speakers.&quot;&lt;/p&gt;
&lt;p&gt;To that most formidable group belong Arabic, Chinese both Mandarin and Cantonese, Korean, and — this with an asterisk meaning &quot;usually more difficult than other languages in the same category&quot; — Japanese. Now if, like me, you consider studying foreign languages one of your main pursuits, you know that possessing a genuine interest in a language — in its mechanics, in its ongoing evolution, in the cultures that created it and the cultures it in turn creates — can do wonders to get you through even the most aggravating difficulties on the long journey to commanding it. Then again, I'm also a native English speaker who chose to move to Korea, where I study not just the Category-V Korean but the Category-V* Japanese through Korean; you might want to take with a grain of salt the words, in any language, of so obvious a masochist.&lt;/p&gt;
&lt;p&gt;You'll find the full &lt;a href=&quot;https://www.atlasandboots.com/foreign-service-institute-language-difficulty/&quot;&gt;Foreign Service Institute language difficulty ranking list&lt;/a&gt; below. No matter which category you'd like to take on, you can get a start at our&lt;a href=&quot;http://www.openculture.com/2016/11/215-hours-of-free-foreign-language-lessons-on-spotify.html&quot;&gt; Free Foreign Language Lessons collection&lt;/a&gt;, many of whose materials come produced by the FSI itself.&lt;/p&gt;
&lt;blockquote readability=&quot;29&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Category I: 23-24 weeks (575-600 hours)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Languages closely related to English&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Afrikaans&lt;/p&gt;
&lt;p&gt;Danish&lt;/p&gt;
&lt;p&gt;Dutch&lt;/p&gt;
&lt;p&gt;French&lt;/p&gt;
&lt;p&gt;Italian&lt;/p&gt;
&lt;p&gt;Norwegian&lt;/p&gt;
&lt;p&gt;Portuguese&lt;/p&gt;
&lt;p&gt;Romanian&lt;/p&gt;
&lt;p&gt;Spanish&lt;/p&gt;
&lt;p&gt;Swedish&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Category II: 30 weeks (750 hours)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Languages similar to English&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;German&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Category III: 36 weeks (900 hours)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Languages with linguistic and/or cultural differences from English&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Indonesian&lt;/p&gt;
&lt;p&gt;Malaysian&lt;/p&gt;
&lt;p&gt;Swahili&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Category IV: 44 weeks (1100 hours)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Languages with significant linguistic and/or cultural differences from English&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Albanian&lt;/p&gt;
&lt;p&gt;Amharic&lt;/p&gt;
&lt;p&gt;Armenian&lt;/p&gt;
&lt;p&gt;Azerbaijani&lt;/p&gt;
&lt;p&gt;Bengali&lt;/p&gt;
&lt;p&gt;Bosnian&lt;/p&gt;
&lt;p&gt;Bulgarian&lt;/p&gt;
&lt;p&gt;Burmese&lt;/p&gt;
&lt;p&gt;Croatian&lt;/p&gt;
&lt;p&gt;Czech&lt;/p&gt;
&lt;p&gt;*Estonian&lt;/p&gt;
&lt;p&gt;*Finnish&lt;/p&gt;
&lt;p&gt;*Georgian&lt;/p&gt;
&lt;p&gt;Greek&lt;/p&gt;
&lt;p&gt;Hebrew&lt;/p&gt;
&lt;p&gt;Hindi&lt;/p&gt;
&lt;p&gt;*Hungarian&lt;/p&gt;
&lt;p&gt;Icelandic&lt;/p&gt;
&lt;p&gt;Khmer&lt;/p&gt;
&lt;p&gt;Lao&lt;/p&gt;
&lt;p&gt;Latvian&lt;/p&gt;
&lt;p&gt;Lithuanian&lt;/p&gt;
&lt;p&gt;Macedonian&lt;/p&gt;
&lt;p&gt;*Mongolian&lt;/p&gt;
&lt;p&gt;Nepali&lt;/p&gt;
&lt;p&gt;Pashto&lt;/p&gt;
&lt;p&gt;Persian (Dari, Farsi, Tajik)&lt;/p&gt;
&lt;p&gt;Polish&lt;/p&gt;
&lt;p&gt;Russian&lt;/p&gt;
&lt;p&gt;Serbian&lt;/p&gt;
&lt;p&gt;Sinhala&lt;/p&gt;
&lt;p&gt;Slovak&lt;/p&gt;
&lt;p&gt;Slovenian&lt;/p&gt;
&lt;p&gt;Tagalog&lt;/p&gt;
&lt;p&gt;*Thai&lt;/p&gt;
&lt;p&gt;Turkish&lt;/p&gt;
&lt;p&gt;Ukrainian&lt;/p&gt;
&lt;p&gt;Urdu&lt;/p&gt;
&lt;p&gt;Uzbek&lt;/p&gt;
&lt;p&gt;*Vietnamese&lt;/p&gt;
&lt;p&gt;Xhosa&lt;/p&gt;
&lt;p&gt;Zulu&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Category V: 88 weeks (2200 hours)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Languages which are exceptionally difficult for native English speakers&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Arabic&lt;/p&gt;
&lt;p&gt;Cantonese (Chinese)&lt;/p&gt;
&lt;p&gt;Mandarin (Chinese)&lt;/p&gt;
&lt;p&gt;*Japanese&lt;/p&gt;
&lt;p&gt;Korean&lt;/p&gt;
&lt;p&gt;* Usually more difficult than other languages in the same category.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://bigthink.com/strange-maps/how-long-to-learn-that-language-heres-a-map-for-that&quot;&gt;via Big Think&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related Content:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/freelanguagelessons&quot;&gt;Learn 48 Languages Online for Free: Spanish, Chinese, English &amp;amp; More&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2016/11/215-hours-of-free-foreign-language-lessons-on-spotify.html&quot;&gt;215 Hours of Free Foreign Language Lessons on Spotify: French, Chinese, German, Russian &amp;amp; More&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2015/06/the-tree-of-languages-illustrated-in-a-big-beautiful-infographic.html&quot;&gt;The Tree of Languages Illustrated in a Big, Beautiful Infographic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2017/10/where-did-the-english-language-come-from-an-animated-introduction.html&quot;&gt;Where Did the English Language Come From?: An Animated Introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Based in Seoul, &lt;a href=&quot;http://blog.colinmarshall.org/&quot;&gt;Colin Marshall&lt;/a&gt; writes and broadcasts on cities and culture. His projects include the book &lt;/em&gt;The Stateless City: a Walk through 21st-Century Los Angeles &lt;em&gt;and the video series &lt;/em&gt;&lt;a href=&quot;https://vimeo.com/channels/thecityincinema&quot;&gt;The City in Cinema&lt;/a&gt;&lt;em&gt;. Follow him on Twitter at &lt;a href=&quot;https://twitter.com/#%21/colinmarshall&quot;&gt;@colinmarshall&lt;/a&gt; or on &lt;a href=&quot;https://www.facebook.com/colinmarshallessayist&quot;&gt;Faceboo&lt;/a&gt;&lt;a href=&quot;https://www.facebook.com/colinmarshallessayist&quot;&gt;k&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;br/&gt;</description>
<pubDate>Fri, 01 Dec 2017 02:58:37 +0000</pubDate>
<dc:creator>Thevet</dc:creator>
<og:type>article</og:type>
<og:url>http://www.openculture.com/2017/11/a-map-showing-how-much-time-it-takes-to-learn-foreign-languages-from-easiest-to-hardest.html</og:url>
<og:title>A Map Showing How Much Time It Takes to Learn Foreign Languages: From Easiest to Hardest</og:title>
<og:image>http://cdn8.openculture.com/2017/11/29000531/fsi-map-e1511942779698.png</og:image>
<og:description> Do you want to speak more languages? Sure, as Sally Struthers used to say so often, we all do.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.openculture.com/2017/11/a-map-showing-how-much-time-it-takes-to-learn-foreign-languages-from-easiest-to-hardest.html</dc:identifier>
</item>
<item>
<title>Reproducible Arch Linux</title>
<link>http://vdwaa.nl/arch/linux/reproducible/builds/security/reproducible-builds-arch/</link>
<guid isPermaLink="true" >http://vdwaa.nl/arch/linux/reproducible/builds/security/reproducible-builds-arch/</guid>
<description>&lt;p&gt;The reproducible build initiative has been started a long time ago by Debian and has been grown to include more projects. Arch is now also in the process of getting reproducible build support, thanks to the of hard work of Anthraxx, Sangy, and many more volunteers. In pacman git patches where landed to support reproducible builds which will be included in a hopefully soon next stable release! Meanwhile with help of the reproducible-builds.org rebuild infrastructure rebuilds have been started!&lt;/p&gt;
&lt;p&gt;Currently 77% of the 17% tested packages are reproducible as can be found &lt;a href=&quot;https://tests.reproducible-builds.org/archlinux/archlinux.html&quot;&gt;here&lt;/a&gt;. This page is fed by the work done by two &lt;a href=&quot;https://jenkins.debian.net/job/reproducible_builder_archlinux_2/&quot;&gt;Jenkins builders&lt;/a&gt;, which currently build the whole Arch repository. The builder builds the package twice in different environments and then uses &lt;a href=&quot;https://diffoscope.org/&quot;&gt;diffoscope&lt;/a&gt; to find differences in packages. Usually the differences are due to timestamps :-). Now that we have some results of rebuilds, we can start fixing our packages. The work I did so far:&lt;/p&gt;
&lt;ul readability=&quot;6.5172413793103&quot;&gt;&lt;li readability=&quot;1.9507389162562&quot;&gt;
&lt;p&gt;Fixing 404 sources of our packages, some of the source failures where due to ftp://kernel.org being used and not https://www.kernel.org. This has been fixed in SVN. Also old pypi links needed to be &lt;a href=&quot;https://git.archlinux.org/svntogit/packages.git/commit/?id=c93ea7238a2f06d295ae4df375fa33e708b90bcf&quot;&gt;fixed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.9236641221374&quot;&gt;
&lt;p&gt;One package’s .install file contained a killall statement, I’m not sure why but it &lt;em&gt;shouldn’t&lt;/em&gt; be required so it was &lt;a href=&quot;https://git.archlinux.org/svntogit/packages.git/commit/?id=29c6fe344f1a7bb40f8646669b35901f750ba85d&quot;&gt;eradicated&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.93243243243243&quot;&gt;
&lt;p&gt;Integrity mismatch, so upstream did a ninja re-release, annoying but &lt;a href=&quot;https://git.archlinux.org/svntogit/community.git/commit/?id=e7b0b7bcbf87196f29c196427450758d6be6a77c&quot;&gt;fixed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Imagemagick’s convert sets some metadata in the resized png’s which makes &lt;a href=&quot;https://git.archlinux.org/svntogit/community.git/commit/?id=ef304fa65de904746ec0c53e777f5432e6b7f584&quot;&gt;reproducible builds fail&lt;/a&gt;. Since it does not adhere to SOURCE_DATE_EPOCH.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.95833333333333&quot;&gt;
&lt;p&gt;Missing checkdepends on pytest-runner, which is automatically downloaded by the build tools but that failed in the reproducible build. Some simply adding the depdency to checkdepends &lt;a href=&quot;https://git.archlinux.org/svntogit/community.git/commit/?id=21de890413b72c914db993232e0ef604a4248524&quot;&gt;fixed it&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As you can see, only one of the bullet points was really an reproducible build issue the others where packaging issues. So I can conclude that reproducible builds will increase the packaging quality in the Arch repository. Having the packages in our repository always build-able will also help the Arch Linux 32 project.&lt;/p&gt;
&lt;p&gt;The Arch reproducible project still needs a lot of work, to make it possible to verify a package build as a user against the repository package.&lt;/p&gt;
&lt;p&gt;P.S.: If you are at 34C3 this year and interested, visit the reproducible build assembly.&lt;/p&gt;
&lt;hr/&gt;&lt;footer role=&quot;contentinfo&quot; readability=&quot;2.3052631578947&quot;&gt;
&lt;p class=&quot;byline&quot;&gt;&lt;strong&gt;Reproducible Arch Linux?!&lt;/strong&gt; was published on &lt;time datetime=&quot;2017-11-26T13:37:00+00:00&quot;&gt;November 26, 2017&lt;/time&gt;.&lt;/p&gt;
&lt;/footer&gt;</description>
<pubDate>Thu, 30 Nov 2017 22:47:57 +0000</pubDate>
<dc:creator>nwah1</dc:creator>
<og:type>article</og:type>
<og:title>Reproducible Arch Linux?!</og:title>
<og:description>The reproducible build initiative has been started a long time ago by Debian and has been grown to include more projects. Arch is now also in the process of getting reproducible build support, thanks to the of hard work of Anthraxx, Sangy, and many more volunteers. In pacman git patches where landed to support reproducible builds which will be included in a hopefully soon next stable release! Meanwhile with help of the reproducible-builds.org rebuild infrastructure rebuilds have been started!</og:description>
<og:url>http://vdwaa.nl/arch/linux/reproducible/builds/security/reproducible-builds-arch/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://vdwaa.nl/arch/linux/reproducible/builds/security/reproducible-builds-arch/</dc:identifier>
</item>
<item>
<title>Deep image prior &amp;#039;learns&amp;#039; on just one image</title>
<link>https://dmitryulyanov.github.io/deep_image_prior</link>
<guid isPermaLink="true" >https://dmitryulyanov.github.io/deep_image_prior</guid>
<description>&lt;div readability=&quot;25&quot;&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt; Deep convolutional networks have become a popular tool for image generation and restoration. Generally, their excellent performance is imputed to their ability to learn realistic image priors from a large number of example images. In this paper, we show that, on the contrary, the structure of a generator network is sufficient to capture a great deal of low-level image statistics prior to any learning. In order to do so, we show that a &lt;strong&gt;randomly-initialized neural network can be used as a handcrafted prior with excellent results in standard inverse problems such as denoising, superresolution, and inpainting.&lt;/strong&gt; Furthermore, the same prior can be used to invert deep neural representations to diagnose them, and to restore images based on flash-no flash input pairs.&lt;/p&gt;
&lt;p&gt;Apart from its diverse applications, our approach highlights the inductive bias captured by standard generator network architectures. It also bridges the gap between two very popular families of image restoration methods: learning-based methods using deep convolutional networks and learning-free methods based on handcrafted image priors such as self-similarity.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;35.384810126582&quot;&gt;
&lt;p&gt;Main idea&lt;/p&gt;
&lt;p&gt; In image restoration problems the goal is to recover original image $x$ having a corrupted image $x_0$. Such problems are often formulated as an optimization task:  \begin{equation}\label{eq1} \min_x E(x; x_0) + R(x)\,, \end{equation}  where $E(x; x_0)$ is a &lt;em&gt;data term&lt;/em&gt; and $R(x)$ is an &lt;em&gt;image prior&lt;/em&gt;. The data term $E(x; x_0)$ is usually easy to design for a wide range of problems, such as super-resolution, denoising, inpainting, while image prior $R(x)$ is a challenging one. Today's trend is to capture the prior $R(x)$ with a ConvNet by training it using large number of examples.&lt;/p&gt;
&lt;p&gt;We first notice, that for a surjective $g: \theta \mapsto x$ the following procedure in theory is equivalent to \eqref{eq1}: $$\min_\theta E(g(\theta); x_0) + R(g(\theta)) \,.$$ In practice $g$ dramatically changes how the image space is searched by an optimization method. Furthermore, by selecting a &quot;good&quot; (possibly injective) mapping $g$, we could get rid of the prior term. We define $g(\theta)$ as $f_\theta(z)$, where $f$ is a deep ConvNet with parameters $\theta$ and $z$ is a fixed input, leading to the formulation $$\min_\theta E(f_\theta (z); x_0) \,.$$ Here, the network $f_\theta$ is initialized randomly and input $z$ is filled with noise and fixed.&lt;/p&gt;
&lt;p&gt;In other words, &lt;strong&gt;instead of searching for the answer in the image space we now search for it in the space of neural network's parameters&lt;/strong&gt;. We emphasize that we never use a pretrained network or an image database. Only corrupted image $x_0$ is used in the restoration process.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://sites.skoltech.ru/app/data/uploads/sites/25/2017/11/deep_image_prior.pdf&quot;&gt;paper&lt;/a&gt; and &lt;a href=&quot;https://box.skoltech.ru/index.php/s/ib52BOoV58ztuPM&quot;&gt;supplementary material&lt;/a&gt; for details.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;11&quot;&gt;
&lt;p&gt;Visualization of restoration process&lt;/p&gt;
&lt;p class=&quot;hint&quot;&gt;Click on the image below and use left and right arrows or swipe.&lt;/p&gt;
&lt;p&gt;Comparison with other methods&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 30 Nov 2017 22:23:48 +0000</pubDate>
<dc:creator>singularity2001</dc:creator>
<og:image>https://raw.githubusercontent.com/DmitryUlyanov/deep-image-prior/master/data/teaser_compiled.png</og:image>
<og:title>Deep Image Prior</og:title>
<dc:format>text/html</dc:format>
<dc:identifier>https://dmitryulyanov.github.io/deep_image_prior</dc:identifier>
</item>
<item>
<title>Board games are back, thanks to lessons designers learned from computer games</title>
<link>https://www.1843magazine.com/features/tabletop-generals</link>
<guid isPermaLink="true" >https://www.1843magazine.com/features/tabletop-generals</guid>
<description>&lt;p class=&quot;has-dropcap&quot;&gt;Draughts is a funky little café tucked into a railway arch in Islington, in north London. It has exposed brick walls, a bar stocked with trendy craft beers and a selection of comfy chairs. The toast is artisanal and the avocados are smashed. But the most striking thing is the shelves arrayed at the back of the café. They groan with board games – more than 700 of them, according to Russell Chapman, who works there. When it was founded in 2014, Draughts became London’s first dedicated board-game café.&lt;/p&gt;&lt;p&gt;All the old classics are there: Monopoly, Risk, Battleship, along with their memories of family arguments at Christmas. But the main draw for the patrons is a new generation of deeper, more involving – simply better – games that have been devised over the past couple of decades. At one table a group of people are playing Pandemic, a tricky, strategy game in which players are cast as doctors and scientists trying to save the world from four plagues. Their neighbours are engrossed in a game of Castle Panic, in which the defenders co-operate to defend a fortress from a horde of encroaching monsters.&lt;/p&gt;&lt;p&gt;A board-game café sounds like the sort of niche business that appeals only to hip millennials with a fondness for ironic nostalgia. But, on a Friday afternoon, the crowd is more diverse than that, with families and 50-somethings alongside the youngsters. Draughts is doing so well that its owners are now pondering opening another branch. It is just one beneficiary of a new golden age in board games.&lt;/p&gt;&lt;p&gt;The most popular games sell in their millions. Top of the list is Settlers of Catan, in which players compete to settle a fictional wilderness. It has shifted more than 20m copies since the first edition of 5,000 was released in Germany in 1995. Dominion, a medieval-flavoured card game, released in 2008, has sold 2.5m copies.&lt;/p&gt;&lt;p&gt;There are now competitions and a festival circuit for the most committed fans. In 2016 174,000 people streamed through the doors at International Spieltage, the industry’s flagship trade-show-cum-festival, held every year in the German city of Essen. GenCon, held in America, counted 208,000 people through the turnstiles in 2017. The &lt;small&gt;UK&lt;/small&gt; Games Expo, held in Birmingham, has grown from 1,200 visitors in 2007 to 31,000 in 2017. The trend is global, but there are pockets of intense enthusiasm. One is Silicon Valley, where Settlers of Catan is an obsession among many. Reid Hoffman, LinkedIn’s founder and a board-game aficionado, says that Settlers of Catan is “the board game of entrepreneurship”. Earlier this year, Maybe Capital, a satirical game about the Valley, complete with discriminatory rewards for male and female players, was launched on Kickstarter, a crowd-funding site.&lt;/p&gt;&lt;p&gt;One reason for the tabletop-gaming boom is simply that the products have improved. The best modern games are sociable, engaging and easy to learn, but also cerebral, intriguing and difficult to master. The slow triumph of what used to be called “nerd culture” – think smartphone gaming and “Game of Thrones” on television – has given adults permission to engage openly in pastimes that were previously looked down on as juvenile. And the increasing ubiquity of screens has, paradoxically, fuelled a demand for in-person socialising. Board gaming is another example of an old-style, analogue pastime that, far from being killed by technology, has been reinvigorated by it.&lt;/p&gt;&lt;p&gt;The revival began in the 1990s, says Matt Leacock, an American game designer responsible for Pandemic, as the internet began spreading into people’s homes. Leacock was a programmer at Yahoo! at the time. Germany, he says, is the spiritual home of board-gaming. “For whatever reason there has always been a culture there of playing these things, of families sitting around the table at a weekend,” he says. The internet helped that culture spread: “I remember we used to rely on these little hobbyist websites that would do amateur translations into English of all the new German games that were coming out,” says Leacock. As with everything from Japanese cartoons to Jane Austen fandom, the internet helped bring together like-minded people all over the world.&lt;/p&gt;

&lt;p&gt;Those early websites have blossomed into a thriving scene of podcasts and YouTube channels, discussing strategy, spreading rumours of new games and offering reviews of the latest games. (“TableTop”, one of the most popular YouTube programmes, is hosted by Wil Wheaton, whom dedicated fans may remember from “Star Trek: The Next Generation”.) Fans can talk directly to designers, who, in turn, can recruit fans to test early versions of their games. Crowd-funding sites allow designers, whether amateur or professional, to raise money for games that have not yet been made, drastically reducing the risks involved in sinking time into a project. Draughts itself began life on Kickstarter, rather than with the traditional loan from a bank.&lt;/p&gt;&lt;p&gt;At the same time, says Steve Buckmaster of Esdevium Games, a British importer of board games, the prevalence of screens has made people keener to connect in person. Board games offer the sort of social experience that no amount of FaceTime, Skype or Destiny can quite replace. “People are sitting in front of a computer all day at work,” he says. “Do they really want to do even more of that when they get home?” Chapman agrees. “I think, paradoxically, one of the things social media can end up doing is keeping you away from your friends,” he says.&lt;/p&gt;&lt;p&gt;The cultural changes wrought by technology have helped, too. “I think the popularity of video games is a factor,” says Leacock. Over the past few decades video-gaming has grown into a $90bn industry. The typical gamer is in their 30s, and almost as likely to be a woman as a man. “It gets rid of this silly idea that games are something only kids should enjoy.” The tactility of board games can be a pleasure in an increasingly virtual world. Many modern games have rich, lovingly crafted pieces. In Kanagawa, for instance, the players are apprentices of Katsushika Hokusai, the most famous Japanese classical artist, and must strive to produce the best paintings in order to win the favour of their master. The playing pieces include a set of miniature brushes, a bamboo mat and a series of beautifully drawn cards featuring images of stags, mountains and blossom leaves. The goal of the game is to assemble them into a larger, harmonious painting.&lt;/p&gt;&lt;figure class=&quot;media pull-left&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;media__image&quot; src=&quot;https://1843magazine.static-economist.com/sites/default/files/201712_FE_GAM_02-CONTENTS-WEB.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;Finally, and perhaps most importantly, by bringing fans together and allowing them to trade wisdom and good ideas, technology has drastically improved the games themselves. One consequence of the board-gaming boom has been to help designers come up with a set of principles and rules-of-thumb that add up, more or less, to a theory of fun. One way to get a sense of it is to look at a well-known game that violates many of this theory’s tenets. Monopoly is, by most calculations, the bestselling board game of all time. Yet it languishes near the bottom of a list of games as reviewed by the users of BoardGameGeek, a popular website. In the eyes of a modern game designer, it does almost everything wrong. (One reason may be that Monopoly is a polemic disguised as a board game, designed to warn of the dangers of untrammelled capitalist power. It was not intended to be a jolly Christmas pastime.)&lt;/p&gt;&lt;p&gt;One of Monopoly’s big mistakes is positive feedback, designer-speak for a mechanism by which a small advantage early on snowballs into a big, insurmountable one later in the game, which makes things boring for the other players. Modern designers tend to prefer negative feedback, in which life gets harder for those doing well. Sometimes that is enforced by explicit penalties. Sometimes it emerges by itself, or through political dealing by other players. Conquering too many planets in a game of Twilight Imperium may make it hard to defend existing territory, for instance, especially if other players decide to gang up on the leader. That helps to keep things interesting for everyone.&lt;/p&gt;&lt;p&gt;Another problem is that Monopoly has a large element of luck (movement is controlled by rolling dice) and limited strategic depth. Some properties simply offer a better return on investment than others: buying them is always a good idea. Better to offer players less obvious, more thought-provoking choices: advantages that come with significant trade-offs, for instance, or whose usefulness varies depending on what is happening in the rest of the game. Hidden information opens up the potential for bluffing and misdirection. In Ticket to Ride, players compete to build railways across Europe. At the beginning, each player is given a set of secret objectives. If her opponents are to thwart them, they must first try to infer these from how she is playing. Introducing elements of politics, diplomacy or trading can give players things to do even when it is not their turn, helping to keep their interest from wandering.&lt;/p&gt;&lt;p&gt;And the new ideas are still coming. Pandemic, in which the players work together, fuelled a boom in co-operative games, uniting players to work together against the game itself. Computers are finding their way into board games directly: in X-Com (which is based on a bestselling video-game franchise) the players must work together to defend Earth from an alien invasion. The alien forces are marshalled by a smartphone app, which reacts to how the players are doing. By hiving the book-keeping off to a computer, designers are able to experiment with more complex sets of rules that would be fiddly and tedious for human players to administer.&lt;/p&gt;&lt;p&gt;The latest innovation is so-called “legacy” games, named for Risk: Legacy, a 2012 reboot of the classic game that founded the genre. As with modern &lt;small&gt;TV&lt;/small&gt; series, the idea is to introduce an overarching narrative, which advances as you play the game multiple times. As an extra twist, the rules change between each playthrough. Depending on the results of a particular game, players could receive instructions to draw new features onto the board, rip up existing rules or be given new powers or obstacles. One such game, Pandemic: Legacy, is, according to the denizens of BoardGameGeek, the single best board game ever made.&lt;/p&gt;&lt;p&gt;Despite its new-found popularity, board-gaming remains a slightly nerdy pastime (there are a number of fans among &lt;em&gt;Economist&lt;/em&gt; journalists). And although they are meant to be fun, squint and you can probably justify playing them on the grounds that it is good for you. Board-gaming will improve your mental arithmetic, give you a good grasp of probability and familiarise you with game theory.&lt;/p&gt;&lt;p&gt;The most hardcore games veer on simulation. Volko Ruhnke designs wargames based on real-world conflicts. A Distant Plain aims to recreate the Western invasion of Afghanistan in 2001, in all its political complexity. He is enthusiastic about games’ potential as a teaching tool. America’s spies, it seems, agree. One of Ruhnke’s sidelines is in designing wargames for the cia, which uses them to train analysts and operatives. “A wargame puts you into history in a way that no book can,” he says. “If I’m doing my job properly, the mechanics of the game will force you to consider the choices that real people had to make. That’s advanced. That’s grad-school history, not grade-school stuff.”&lt;/p&gt;&lt;figure class=&quot;media&quot; data-image-nozoom=&quot;true&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;media__image&quot; src=&quot;https://1843magazine.static-economist.com/sites/default/files/201712_FE_GAM_02-CONTENTS-wide-2.jpg&quot;/&gt;&lt;/figure&gt;
          </description>
<pubDate>Thu, 30 Nov 2017 21:28:45 +0000</pubDate>
<dc:creator>ohjeez</dc:creator>
<og:type>article</og:type>
<og:url>https://www.1843magazine.com/features/tabletop-generals</og:url>
<og:title>Table-top generals</og:title>
<og:image>https://1843magazine.static-economist.com/sites/default/files/styles/il_manual_crop_16_9/public/201712_FE_GAM_01-HEADER.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.1843magazine.com/features/tabletop-generals</dc:identifier>
</item>
<item>
<title>What do the best interviewers have in common?</title>
<link>http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/?p=1</link>
<guid isPermaLink="true" >http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/?p=1</guid>
<description>&lt;p&gt;At interviewing.io, we’ve analyzed and written at some depth about what makes for a good interview from the perspective of an interviewee. However, despite the inherent power imbalance, interviewing is a two-way street. I wrote a while ago about how, in this market, &lt;a href=&quot;http://blog.alinelerner.com/building-a-product-in-the-technical-recruiting-space-read-this-first/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;recruiting isn’t about vetting as much as it is about selling&lt;/a&gt;, and not engaging candidates in the course of talking to them for an hour is a woefully missed opportunity. But, just like solving interview questions is a learned skill that takes time and practice, so, too, is the other side of the table. Being a good interviewer takes time and effort and a fundamental willingness to get out of autopilot and engage meaningfully with the other person.&lt;/p&gt;&lt;p&gt;Of course, everyone and their uncle has strong opinions about what makes someone a good interviewer, so instead of waxing philosophical, we’ll present some data and focus on analytically answering questions like… Does it matter how strong of an engineering brand your company has, for instance? Do the questions you ask actually help get candidates excited? How important is it to give good hints to your candidate? How much should you talk about yourself? And is it true that, at the end of the day, what you say is way less important than how you make people feel?&lt;sup&gt;&lt;a id=&quot;interviewer-ref1&quot; href=&quot;http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/#interviewer-fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; And so on.&lt;/p&gt;
&lt;p&gt;Before I delve into our findings, I’ll say a few words about interviewing.io and the data we collect.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;The setup&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.interviewing.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;interviewing.io&lt;/a&gt; is an anonymous technical interviewing platform. On interviewing.io, people can practice technical interviewing anonymously, and if things go well, unlock real (still anonymous) interviews with companies like Lyft, Twitch, Quora, and more.&lt;/p&gt;
&lt;p&gt;The cool thing is that both practice and real interviews with companies take place within the interviewing.io ecosystem. As a result, we’re able to collect quite a bit of interview data and analyze it to better understand technical interviewing. One of the most important pieces of data we collect is feedback from both the interviewer and interviewee about how they thought the interview went and what they thought of each other. If you’re curious, you can see what the feedback forms for interviewers and interviewees look like below — in addition to one direct yes/no question, we also ask about a few different aspects of interview performance using a 1-4 scale. We also ask interviewees some extra questions that we don’t share with their interviewers, one of which is their own take on how they thought they did.&lt;/p&gt;
&lt;div id=&quot;attachment_118&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-09.13.30.png&quot; rel=&quot;attachment wp-att-118&quot;&gt;&lt;img class=&quot;size-full wp-image-118&quot; src=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-09.13.30.png&quot; alt=&quot;Feedback form for interviewers&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Feedback form for interviewers&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;attachment_122&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a href=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-09.02.07.png&quot; rel=&quot;attachment wp-att-122&quot;&gt;&lt;img class=&quot;size-full wp-image-122&quot; src=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-09.02.07.png&quot; alt=&quot;Feedback form for interviewees&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Feedback form for interviewees&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this post, we’ll be analyzing feedback and outcomes of thousands of real interviews with companies to figure out what traits the best interviewers have in common.&lt;/p&gt;
&lt;p&gt;Before we get into the nitty-gritty of individual interviewer behaviors, let’s first put the value of a good interviewer in context by looking at the impact of a company’s brand on the outcome. After all, if brand matters a lot, then maybe being a good interviewer isn’t as important as we might think.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;Brand strength&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So, does brand really matter for interview outcomes? One quick caveat before we get into the data: every interview on the platform is user-initiated. In other words, once you unlock our jobs portal (you have to do really well in practice interviews to do so), you decide who you talk to. So, candidates talking to companies on our platform will be predisposed to move forward because they’ve chosen the company in the first place. And, as should come as no surprise to anyone, companies with a very strong brand have an easier time pulling candidates (on our platform and out in the world at large) than their lesser-known counterparts. Moreover, many of the companies we work with do have a pretty strong brand, so our pool isn’t representative of the entire branding landscape. However, all is not lost — in addition to working with very recognizable brands, we work with a number of small, up-and-coming startups, so we hope that if you, the reader, are coming from a company that’s doing cool stuff but that hasn’t yet become a household name, our findings likely apply to you. And, as you’ll see, getting candidates in the door isn’t the same as keeping them.&lt;/p&gt;
&lt;p&gt;To try to quantify brand strength, we used three different measures: the company’s &lt;a href=&quot;https://klout.com/corp/score&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Klout Score&lt;/a&gt; (yes, that still exists), its Mattermark &lt;a href=&quot;https://support.mattermark.com/13622-scores/mindshare-score&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Mindshare Score&lt;/a&gt;, and its score on &lt;a href=&quot;https://www.glassdoor.com/Reviews/index.htm&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Glassdoor&lt;/a&gt; (under general reviews).&lt;sup&gt;&lt;a id=&quot;interviewer-ref2&quot; href=&quot;http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/#interviewer-fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;When we looked at interview outcomes relative to brand strength, its impact was not statistically significant. In other words, &lt;strong&gt;we found that brand strength didn’t matter at all when it came to either whether the candidate wanted to move forward or how excited the candidate was to work at the company&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This was a bit surprising, so I decided to dig deeper. Maybe brand strength doesn’t matter overall but matters when the interviewer or the questions they asked aren’t highly rated? In other words, can brand buttress less-than-stellar interviewers? Not so, according to our data. Brand didn’t matter even when you corrected for interviewer quality. In fact, of the top 10 best-rated companies on our platform, half have no brand to speak of, 3 are mid-sized YC companies that command respect in Bay Area circles but are definitely not universally recognizable, and only 2 have anything approaching household name status.&lt;/p&gt;
&lt;p&gt;So, what’s the takeaway here? &lt;strong&gt;Maybe the most realistic thing we can say is that while brand likely matters &lt;em&gt;a lot&lt;/em&gt; for getting candidates in the door, once they’re in, no matter how well-branded you are, they’re yours to lose.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;Choosing the question&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If brand doesn’t matter once you’ve actually gotten a candidate in the door, then what does? Turns out, the questions you ask matter a TON. As you recall, feedback on interviewing.io is symmetric, which means that in addition to the interviewer rating the candidate, the candidate also rates the interviewer, and one of the things we ask candidates is how good the question(s) they got asked were.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question quality was extremely significant&lt;/strong&gt; (p &amp;lt; 0.002 with an effect size of 1.25) &lt;strong&gt;when it came to whether the candidate wanted to move forward with the company. This held both when candidates did well and when they did poorly.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While we obviously can’t share the best questions (these are company interviews, after all), we can look at what candidates had to say about the best and worst-rated questions on the platform.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The good&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;I liked the fact that questions were building on top of each other so that previous work was not wasted and&lt;br/&gt;finding ways to improve on the given solution.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em&gt;Always nice to get questions that are more than just plain algorithms.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;Really good asking of a classic question, opened my mind up to edge cases and considerations that I never contemplated the couple of times I’ve been exposed to the internals of this data structure.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;This was the longest interviewing.io interview I have ever done, and it is also the most enjoyable one! I really like how we started with a simple data structure and implemented algorithms on top of it. It felt like working on a simple small-scale project and was fun.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;He chose an interesting and challenging interview problem that made me feel like I was learning while I was solving it. I can’t think of any improvements. He would be great to work with.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;I liked the question — it takes a relatively simple algorithms problem (build and traverse a tree) and adds some depth. I also liked that the interviewer connected the problem to a real product at [Redacted] which made it feel like less like a toy problem and more like a pared-down version of a real problem.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;This is my favorite question that I’ve encountered on this site. it was one of the only ones that seem like it had actual real-life applicability and was drawn from a real (or potentially real) business challenge. And it also nicely wove in challenges like complexity, efficiency, and blocking.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The bad&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;em&gt;Question wasn’t straightforward and it required a lot of thinking/understanding since functions/data structures weren’t defined until a lot later. [Redacted] is definitely a cool company to work for, but some form of structure in interviews would have been a lot more helpful. Spent a long time figuring out what the question is even asking, and interviewer was not language-agnostic.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;I was expecting a more technical/design question that showcases the ability to think about a problem. Having a domain-specific question (regex) limits the ability to show one’s problem-solving skills. I am sure with enough research one could come up with a beautiful regex expression but unless this is something one does often, I don’t think it [makes for] a very good assessment.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;This is not a good general interview question. A good interview question should have more than one solution with simplified constraints.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;Anatomy of a good interview question&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Layer complexity (including asking a warmup)&lt;/li&gt;
&lt;li&gt;No trivia&lt;/li&gt;
&lt;li&gt;Real-world components/relevance to the work the company is doing are preferable to textbook algorithmic problems&lt;/li&gt;
&lt;li&gt;If you’re asking a classic algorithmic question, that’s ok, but you ought to bring some nuance and depth to the table, and if you can teach the interviewee something interesting in the process, even better!&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;Asking the question&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One of the other things we ask candidates after their interviews is how helpful their interviewer was in guiding them to the solution. Providing your candidate with well-timed hints that get them out of the weeds without giving away too much is a delicate art that takes a lot of practice (and a lot of repetition), but how much does it matter?&lt;/p&gt;
&lt;p&gt;As it turns out, being able to do this well matters a ton. &lt;strong&gt;Being good at providing hints was extremely significant&lt;/strong&gt; (p &amp;lt;  0.00001 with an effect size of 2.95) &lt;strong&gt;when it came to whether the candidate wanted to move forward with the company (as before, we corrected for whether the interview went well)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You can see for yourself what candidates thought of their interviewers when it came to their helpfulness and engagement below. Though this attribute is a bit harder to quantify, it seems that hint quality is actually a specific instance of something bigger, namely the notion of turning something inherently adversarial into a collaborative exercise that leaves both people in a better place than where they started.&lt;sup&gt;&lt;a id=&quot;interviewer-ref3&quot; href=&quot;http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/#interviewer-fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;And if you can’t do that every time, then at the very least, be present and engaged during the interview. And no matter what the devil on your shoulder tells you, no good will ever come of opening Reddit in another tab.&lt;sup&gt;&lt;a id=&quot;interviewer-ref4&quot; href=&quot;http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/#interviewer-fn4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;One of the most memorable, pithy conversations I ever had about interviewing was with a seasoned engineer who had spent years as a very senior software architect at a huge tech company before going back to what he’d always liked in the first place, writing code. He’d conducted a lot of interviews over a career spanning several decades, and after trying out a number of different interview styles, what he settled on was elegant, simple, and satisfying. &lt;strong&gt;According to him, the purpose of any interview is to “see if we can be smart together.”&lt;/strong&gt; I like that so much, and it’s advice I repeat whenever anyone will listen.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The good&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;I liked that you laid out the structure of the interview at the outset and mentioned that the first question did not have any tricks. That helped set the pace of the interview so I didn’t spend an inordinate amount of time on the first one.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;The interview wasn’t easy, but it was really fun. It felt more like making a design discussion with a colleague than an interview. I think the question was designed/prepared to fill the 45 minute slot perfectly.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;I’m impressed by how quickly he identified the issue (typo) in my hash computation code and how gently he led me to locating it myself with two very high-level hints (“what other tests cases would you try?” and “would your code always work if you look for the the pattern that’s just there at the beginning of the string?”). Great job!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;He never corrected me, instead asked questions and for me to elaborate in areas where I was incorrect – I very much appreciate this.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;The question seemed very overwhelming at first but the interviewer was good at helping to break it down into smaller problems and suggest we focus on one of those first.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The bad&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;em&gt;[It] was a little nerve-wracking hearing you yawn while I was coding.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;em&gt;What I found much more difficult about this interview was the lack of back and forth as I went along, even if it was simple affirmation that “yes, that code you just wrote looks good”. There were times when it seemed like I was the only one who had talked in the past five minutes (I’m sure that’s an exaggeration). This made it feel much more like a performance than like a collaboration, and my heart was racing at the end as a result.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;em&gt;While the question was very straightforward, and [he] was likely looking for me to blow through it with no prompting whatsoever in order to consider moving forward in an interview process, it would have been helpful to get a discussion or even mild hinting from him when I was obviously stuck thinking about an approach to solve the the problem. While I did get to the answer in the end, having a conversation about it would have made it feel more like a journey and learning experience. That would have also been a strong demonstration of the collaborative culture that exists while working with teams of people at a tech company, and would have sold me more vis-a-vis my excitement level.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;em&gt;If an interview is set to 45 minutes, the questions should fit this time frame, because people plan accordingly. I think that if you plan to have a longer interview you should notify the interviewee beforehand, so he can be ready for it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;One issue I had with the question though is what exactly he was trying to evaluate from me with the question. At points we talking about very nitty-gritty details about python linked list or array iteration, but it was unclear at any point if that was what he was judging me on. I think in the future he could outline at the beginning what exactly he was looking for with the problem in order to keep the conversation focused and ensure he is well calibrated judging candidates.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;Try to be more familiar with all the possible solutions to the problem you choose to pose to the candidate. Try to work on communicating more clearly with the candidate.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;Anatomy of a good interview&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set expectations, and control timing/pacing&lt;/li&gt;
&lt;li&gt;Be engaged!&lt;/li&gt;
&lt;li&gt;Familiarity with the problem and its associated rabbit holes/garden paths&lt;/li&gt;
&lt;li&gt;Good balance of hints and letting candidate think&lt;/li&gt;
&lt;li&gt;Turn the interview into a collaborative exercise where both people are free to be smart together&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;The art of storytelling… and the importance of being human&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Beyond choosing and crafting good questions and being engaged (but not overbearing) during the interview, what else do top-rated interviewers have in common?&lt;/p&gt;
&lt;p&gt;The pervasive common thread I noticed among the best interviewers on our platform is, as above, a bit hard to quantify but dovetails well with the notion of being engaged and creating a collaborative experience. It’s taking a dehumanizing process and elevating it to an organic experience between two capable, thinking humans. Many times, that translates into revealing something real about yourself and telling a story. It can be sharing a bit about the company you work at and why, out of all the places you could have landed, you ended up there. Or some aspect of the company’s mission that resonated with you specifically. Or how the projects you’ve worked on tie into your own, personal goals.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The good&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;em&gt;I like the interview format, in particular how it was primarily a discussion about cool tech, as well as an honest description of the company… the discussion section was valuable, and may be a better gauge of fit anyway. It’s nice to see a company which places value on that 🙂&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;The interviewer was helpful throughout the interview. He didn’t mind any questions on their company’s internal technology decisions, or how it’s structured. I liked that the interviewer gave me a good insight of how the company functions.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;Extremely kind and very generous with explaining everything they do at [redacted]. Really interested in the technical challenges they’re working on. Great!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;good&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;em&gt;Interesting questions but the most valuable and interesting thing were the insights he gave me about [redacted]. He sounded very passionate about engineering in general, particularly about the challenges they are facing at [redacted]. Would love to work with him.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;The bad&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;[A] little bit of friendly banter (even if it’s just “how are you doing”?) at the very beginning of the interview would probably help a bit with keeping the candidate calm and comfortable.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class=&quot;bad&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;em&gt;I thought the interview was very impersonal, [and] I could not get a good read on the goal or mission of the company.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And, as we wrote about in a previous post, one of the most genuine, human things of all is &lt;a href=&quot;http://blog.interviewing.io/people-cant-gauge-their-own-interview-performance-and-that-makes-them-harder-to-hire/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;giving people immediate, actionable feedback&lt;/a&gt;. As you recall, during the feedback step that happens after each interview, we ask interviewees if they’d want to work with their interviewer. As it turns out, there’s a very statistically significant relationship (p &amp;lt; 0.00005)&lt;sup&gt;&lt;a id=&quot;interviewer-ref5&quot; href=&quot;http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/#interviewer-fn5&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; between whether people think they did well and whether they’d want to work with the interviewer. This means that when people think they did poorly, they may be a lot less likely to want to work with you. And by extension, it means that in every interview cycle, some portion of interviewees are losing interest in joining your company just because they didn’t think they did well, despite the fact that they actually did.&lt;/p&gt;
&lt;p&gt;How can one mitigate these losses? &lt;strong&gt;Give positive, actionable feedback immediately (or as soon as possible)! This way people don’t have time to go through the self-flagellation gauntlet that happens after a perceived poor performance, followed by the inevitable rationalization that they totally didn’t want to work there anyway.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;subheading&quot;&gt;How to be human&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Talk about what your company does… and what specifically about it appealed to you and made you want to join&lt;/li&gt;
&lt;li&gt;Talk about what you’re currently working on and how that fits in with what you’re passionate about&lt;/li&gt;
&lt;li&gt;When you like a candidate, give positive feedback as quickly as you can to save them from the self-flagellation that they’ll likely go through otherwise… and which might make them rationalize away wanting to work with you&lt;/li&gt;
&lt;li&gt;And, you know, be friendly. A little bit of warmth can go a long way.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span class=&quot;heading&quot;&gt;Becoming a better interviewer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Interviewing people is hard. It’s hard to come up with good questions, it’s hard to give a good interview, and it’s especially hard to be human in the face of conducting a never-ending parade of interviews. But, being a good interviewer is massively important. As we saw, while your company’s brand will get people in the door, once they’ve reached the technical interview, the playing field is effectively level, and you can no longer use your brand as a crutch to mask poor questions or a lack of engagement. And in this market, where the best candidates have a ton of options, when wielded properly, a good interview that elevates a potentially cold, transactional interaction into something real and genuine can become the selling point that gets great engineers to work for you, whether you’re a household name or a startup that just got its first users.&lt;/p&gt;
&lt;p&gt;Given how important it is to do interviews well, what are some things you can do to get better right away? &lt;strong&gt;One thing I found incredibly useful for coming up with good, original questions is to start a shared doc with your team where every time someone solves a problem they think is interesting, no matter how small, they jot down a quick note.&lt;/strong&gt; These notes don’t have to be fleshed out at all, but they can be the seeds for unique interview questions that give candidates insight into the day-to-day at your company. Turning these disjointed seeds into interview questions takes thought and effort — you have to prune out a lot of the details and distill the essence of the problem into something it doesn’t take the candidate a lot of work/setup to grok, and you’ll likely have to iterate on the question a few times before you get it right — but they payoff can be huge.&lt;/p&gt;
&lt;p&gt;Another thing you can do to get actionable feedback like the kind you saw in this post (and then immediately level up) is to get on interviewing.io as an interviewer. &lt;strong&gt;If you interview people in our double-blind practice pool, no one will know who you are or which company you represent, which means that you get a truly unbiased take on your interviewing ability, which includes your question quality, how excited people would be to work with you, and how good you are at helping people along without giving away too much.&lt;/strong&gt; It’s also a great way to go beyond your team, which can be pretty awkward, and try out new questions on a very engaged, high-quality user base. You’ll also get to keep replays of your interviews so you can revisit crucial moments and figure out exactly what you need to do to get better next time.&lt;/p&gt;
&lt;div id=&quot;attachment_118&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a href=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-11.52.16.png&quot; rel=&quot;attachment wp-att-118&quot;&gt;&lt;img class=&quot;size-full wp-image-118&quot; src=&quot;http://blog.interviewing.io/wp-content/uploads/2017/11/Screenshot-2017-11-29-11.52.16.png&quot; alt=&quot;Become a better interviewer with honest, actionable feedback from candidates&quot; width=&quot;800&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Become a better interviewer with honest, actionable feedback from candidates&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Want to hone your skills as an interviewer? Want to help new interviewers at your company warm up before they officially get added to your interview loops? You can &lt;a href=&quot;https://interviewing.io/signup&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;sign up to our platform as an interviewer&lt;/a&gt;, or (especially for groups) ping us at &lt;a href=&quot;mailto:interviewers@interviewing.io&quot;&gt;interviewers@interviewing.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 30 Nov 2017 20:26:11 +0000</pubDate>
<dc:creator>leeny</dc:creator>
<og:url>http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/</og:url>
<og:title>What do the best interviewers have in common? We looked at thousands of real interviews to find out.</og:title>
<og:description></og:description>
<og:type>article</og:type>
<og:image></og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.interviewing.io/what-do-the-best-interviewers-have-in-common-we-looked-at-thousands-of-real-interviews-to-find-out/</dc:identifier>
</item>
<item>
<title>Vision Kit – An image recognition device that can see and identify objects</title>
<link>https://aiyprojects.withgoogle.com/vision</link>
<guid isPermaLink="true" >https://aiyprojects.withgoogle.com/vision</guid>
<description>&lt;p&gt;Connect the two boards via the 40-pin header. Gently push the MIPI cable so that it folds into the space between the two boards.&lt;/p&gt;
&lt;p&gt;Press down to snap the spacers opposite the header into place. Press down to snap the spacers opposite the header into place. Push gently: forcing the standoffs into place may cause them to break.&lt;/p&gt;
</description>
<pubDate>Thu, 30 Nov 2017 20:16:57 +0000</pubDate>
<dc:creator>modeless</dc:creator>
<og:type>website</og:type>
<og:url>https://aiyprojects.withgoogle.com/</og:url>
<og:image>https://aiyprojects.withgoogle.com/static/images/aiy-projects-voice/box-and-shadow.png</og:image>
<og:title>Vision</og:title>
<og:description>Build an intelligent camera that can see and recognize objects using TensorFlow</og:description>
<dc:language>en_US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aiyprojects.withgoogle.com/vision</dc:identifier>
</item>
<item>
<title>System76 ME Firmware Updates Plan</title>
<link>http://blog.system76.com/post/168050597573/system76-me-firmware-updates-plan</link>
<guid isPermaLink="true" >http://blog.system76.com/post/168050597573/system76-me-firmware-updates-plan</guid>
<description>&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: We’ve been getting a lot of great feedback from people on &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D15819093&amp;amp;t=ODZkZTgwMGUyMDlhNTdiM2QxZjQ0MWNkYzg2YWNhMWFhMGVmMTk1NixObkpyMFQ5Tw%3D%3D&amp;amp;b=t%3AFIbKH4KzaAKkwlLoMpUiow&amp;amp;p=http%3A%2F%2Fblog.system76.com%2Fpost%2F168050597573%2Fsystem76-me-firmware-updates-plan&amp;amp;m=0&quot; target=&quot;_blank&quot;&gt;HackerNews&lt;/a&gt; and &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fwww.reddit.com%2Fr%2Flinux%2Fcomments%2F7gpcu5%2Fsystem76_will_disable_intel_management_engine_on%2F&amp;amp;t=YzEzNmNmZjQyYmU1MjVmZWZiNjE5ZTIyYjgxMDYwNWRmZjcwNTliYyxObkpyMFQ5Tw%3D%3D&amp;amp;b=t%3AFIbKH4KzaAKkwlLoMpUiow&amp;amp;p=http%3A%2F%2Fblog.system76.com%2Fpost%2F168050597573%2Fsystem76-me-firmware-updates-plan&amp;amp;m=0&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt;. Here are answers to a few common questions:&lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The System76 Firmware Update Tool is Open Source and located at &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fgithub.com%2Fsystem76%2Ffirmware-update&amp;amp;t=M2E4MzFjNGY4NmVlZjE2NzYzMjUyNDkxNGRjZWNmZDZkZGE5MTlhMCxObkpyMFQ5Tw%3D%3D&amp;amp;b=t%3AFIbKH4KzaAKkwlLoMpUiow&amp;amp;p=http%3A%2F%2Fblog.system76.com%2Fpost%2F168050597573%2Fsystem76-me-firmware-updates-plan&amp;amp;m=0&quot; target=&quot;_blank&quot;&gt;https://github.com/system76/firmware-update&lt;/a&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;The github repo includes the architectural and security details&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;Users are prompted to update firmware. A change log is included. Updates are not initiated without user action.&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;p&gt;Proprietary code always makes life harder and Intel’s Management Engine (ME) firmware is a particularly challenging chunk of secretive software. Thanks to issues identified by external security researchers, Intel initiated an audit of its ME firmware and discovered multiple critical vulnerabilities as described in &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fsecurity-center.intel.com%2Fadvisory.aspx%3Fintelid%3DINTEL-SA-00086%26languageid%3Den-fr&amp;amp;t=N2I4ZDI3M2YzMGJkNTNlNTQ5NDUwZmZjNjY0ODJkMDhmYzExZDYzMyxObkpyMFQ5Tw%3D%3D&amp;amp;b=t%3AFIbKH4KzaAKkwlLoMpUiow&amp;amp;p=http%3A%2F%2Fblog.system76.com%2Fpost%2F168050597573%2Fsystem76-me-firmware-updates-plan&amp;amp;m=0&quot; target=&quot;_blank&quot;&gt;SA-00086&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Separately, researchers at Positive Technologies discovered an undocumented High Assurance Platform (HAP) settings in Intel ME firmware. HAP was developed by the NSA for secure computing. Setting the “reserve_hap” bit to 1 disables the ME.&lt;/p&gt;
&lt;p&gt;In July of this year we began a project to automatically deliver firmware to System76 laptops similar to the way software is currently delivered through the operating system. We began testing the system in production on August 4th. Now it’s very near ready for laptop customers. For desktops, System76 will work on automated firmware delivery as part of our internal desktop &lt;a href=&quot;http://blog.system76.com/post/159767214983/entering-phase-three&quot; target=&quot;_blank&quot;&gt;design and manufacturing project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All of this has culminated in the System76 plan to address Intel’s November 20th vulnerability announcement and our ability to respond to future firmware update needs.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;System76 will automatically deliver updated firmware with a disabled ME on Intel 6th, 7th, and 8th Gen laptops. The ME provides no functionality for System76 laptop customers and is safe to disable.&lt;/li&gt;
&lt;li&gt;The roll out will occur over time and customers will be notified by email prior to delivery&lt;/li&gt;
&lt;li&gt;You must run Ubuntu 16.04 LTS, Ubuntu 17.04, Ubuntu 17.10, Pop!_OS 17.10, or an Ubuntu derivative and have the System76 driver installed to receive the latest firmware and disabled ME on laptops*&lt;/li&gt;
&lt;li&gt;System76 will investigate producing a distro-agnostic command line firmware install tool. Follow us on your preferred social network for updates.&lt;/li&gt;
&lt;li&gt;System76 will not disable the ME on desktops but will provide updated ME firmware&lt;/li&gt;
&lt;li&gt;Desktop customers will receive instructions for updating the ME via email as they are available&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There is a significant amount of testing and validation necessary before delivering the updated firmware and disabled ME. Disabling the ME will reduce future vulnerabilities and using our new firmware delivery infrastructure means future updates can roll out extremely fast and with a higher percentage of adoption (over listing affected models with links to firmware that most people don’t install).&lt;/p&gt;
&lt;p&gt;It is important to note, while we can currently disable the ME on laptops, Intel may change how the device functions in the future. We implore Intel to retain the ability for device manufactures and consumers to disable the ME.&lt;/p&gt;
&lt;p&gt;* To install the system76-driver (for System76 hardware) on Ubuntu based distributions run the following commands&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;sudo apt-add-repository -y ppa:system76-dev/stable&lt;br/&gt;sudo apt update&lt;br/&gt;sudo apt install -y system76-driver&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Our internal plan in detail with a list of affected products&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SA-00086 Vulnerability ME Update Project Plan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Laptops&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Disable the ME on all affected laptops&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Test combined ME and firmware delivery in production&lt;/li&gt;
&lt;li&gt;Add UEFI check to driver before starting the firmware daemon&lt;/li&gt;
&lt;li&gt;Fix the remaining automated firmware delivery system bug “Firmware, on occasion, doesn’t install on ‘U’ class products”&lt;/li&gt;
&lt;li&gt;Setup lab with all affected laptops&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Intel 6th Gen&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Bonobo (bonw11)&lt;/li&gt;
&lt;li&gt;Gazelle (gaze10)&lt;/li&gt;
&lt;li&gt;Gazelle (gaze11)&lt;/li&gt;
&lt;li&gt;Kudu (kudu2)&lt;/li&gt;
&lt;li&gt;Kudu (kudu3)&lt;/li&gt;
&lt;li&gt;Lemur (lemu6)&lt;/li&gt;
&lt;li&gt;Oryx (orxp1)&lt;/li&gt;
&lt;li&gt;Oryx (oryp2)&lt;/li&gt;
&lt;li&gt;Serval (serw9)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Intel 7th Gen&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Bonobo (bonw12)&lt;/li&gt;
&lt;li&gt;Galago (galp2)&lt;/li&gt;
&lt;li&gt;Gazelle (gaze12)&lt;/li&gt;
&lt;li&gt;Kudu (kudu4)&lt;/li&gt;
&lt;li&gt;Lemur (lemu7)&lt;/li&gt;
&lt;li&gt;Oryx (oryp3)&lt;/li&gt;
&lt;li&gt;Serval (serw10)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Intel 8th Gen&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Bonobo (bonw13)&lt;/li&gt;
&lt;li&gt;Galago (galp3)&lt;/li&gt;
&lt;li&gt;Lemur (lemu8)&lt;/li&gt;
&lt;li&gt;Serval (serw11)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Procure latest ME’s for affected models&lt;/li&gt;
&lt;li&gt;Set HAP bit to 1 on all ME’s without Intel BootGuard&lt;/li&gt;
&lt;li&gt;Create Intel BootGuard firmware with HAP bit set to 1&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;lemu6&lt;/li&gt;
&lt;li&gt;lemu7&lt;/li&gt;
&lt;li&gt;lemu8&lt;/li&gt;
&lt;li&gt;galp2&lt;/li&gt;
&lt;li&gt;galp3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add firmware with the new ME to the automated firmware delivery system&lt;/li&gt;
&lt;li&gt;Test delivery of the new ME and firmware to all models&lt;/li&gt;
&lt;li&gt;Confirm that ME is disabled on each model&lt;/li&gt;
&lt;li&gt;Draft email correspondence to customers&lt;/li&gt;
&lt;li&gt;Compile email list of affected lemu8 customers.&lt;/li&gt;
&lt;li&gt;Send email to lemu8 customers&lt;/li&gt;
&lt;li&gt;Send updated firmware and ME to lemu8 customers using automated delivery&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Work with the support team to evaluate any failures&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Based on those results, determine timing and delivery of the remaining firmware and update the project plan&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Desktops&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Update all affected models with new ME firmware&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create the “firmware” github repo structure for storing desktop firmware&lt;/li&gt;
&lt;li&gt;Procure updated ME for all models&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Intel 6th Generation&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Meerkat (meer2)&lt;/li&gt;
&lt;li&gt;Ratel (ratp5)&lt;/li&gt;
&lt;li&gt;Sable (sabl6)&lt;/li&gt;
&lt;li&gt;Wild Dog (wilp12)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Intel 7th Generation&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;Leopard (leow8)&lt;/li&gt;
&lt;li&gt;Meerkat (meer3)&lt;/li&gt;
&lt;li&gt;Wild Dog (wilp13)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;If the ME also requires a BIOS update, create customized BIOS for each model.&lt;/li&gt;
&lt;li&gt;Add firmware to the “firmware” github project &lt;a href=&quot;http://t.umblr.com/redirect?z=https%3A%2F%2Fgithub.com%2Fsystem76%2Ffirmware-desktop&amp;amp;t=NDZhYmNkN2EzYzZiZTYwMDkzYjg3MjA0NmMyNTEyYzQ3ODI3MDU2ZixObkpyMFQ5Tw%3D%3D&amp;amp;b=t%3AFIbKH4KzaAKkwlLoMpUiow&amp;amp;p=http%3A%2F%2Fblog.system76.com%2Fpost%2F168050597573%2Fsystem76-me-firmware-updates-plan&amp;amp;m=0&quot; target=&quot;_blank&quot;&gt;https://github.com/system76/firmware-desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Design desktop Guide page changes to include notification and firmware download&lt;/li&gt;
&lt;li&gt;Modify guides for affected desktops&lt;/li&gt;
&lt;li&gt;Draft email correspondence to customers&lt;/li&gt;
&lt;li&gt;Compile email list for all affected customers&lt;/li&gt;
&lt;li&gt;Send email notification&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Thu, 30 Nov 2017 20:13:23 +0000</pubDate>
<dc:creator>jcastro</dc:creator>
<og:title>System76 ME Firmware Updates Plan</og:title>
<og:url>http://blog.system76.com/post/168050597573/system76-me-firmware-updates-plan</og:url>
<og:description>Update: We’ve been getting a lot of great feedback from people on HackerNews and Reddit. Here are answers to a few common questions: • The System76 Firmware Update Tool is Open Source and located at...</og:description>
<og:type>tumblr-feed:entry</og:type>
<og:image>http://assets.tumblr.com/images/og/fb_landscape_share.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.system76.com/post/168050597573/system76-me-firmware-updates-plan</dc:identifier>
</item>
<item>
<title>Finance Pros Say You’ll Have to Pry Excel Out of Their Cold, Dead Hands</title>
<link>https://www.wsj.com/articles/finance-pros-say-youll-have-to-pry-excel-out-of-their-cold-dead-hands-1512060948</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/finance-pros-say-youll-have-to-pry-excel-out-of-their-cold-dead-hands-1512060948</guid>
<description>&lt;p&gt; Eric Schiller, a software engineer in Alexandria, Va., thought the job offer sounded pretty straightforward. A boutique insurance company wanted him to bundle its various financial departments into a single, modern, shareable data platform.&lt;/p&gt;  &lt;p&gt;At the time, the company’s actuaries were running their statistical analyses and risk calculations on a specialized Excel spreadsheet that nobody else could access, let alone comprehend. Mr. Schiller figured this would be an easy fix. “They’re mathematicians,” he told himself. “They think...
  &lt;/p&gt;</description>
<pubDate>Thu, 30 Nov 2017 20:06:14 +0000</pubDate>
<dc:creator>triplee</dc:creator>
<og:title>Finance Pros Say You’ll Have to Pry Excel Out of Their Cold, Dead Hands   </og:title>
<og:description>A Journal story about finance chiefs threatening to drop the spreadsheet software provoked a tempest of reader feedback, both pro and con. The upshot: try to eradicate it and you’re in for a brawl.</og:description>
<og:url>https://www.wsj.com/articles/finance-pros-say-youll-have-to-pry-excel-out-of-their-cold-dead-hands-1512060948</og:url>
<og:image>https://si.wsj.net/public/resources/images/BN-WI996_1129EX_SOC_20171129134459.jpg</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/finance-pros-say-youll-have-to-pry-excel-out-of-their-cold-dead-hands-1512060948</dc:identifier>
</item>
</channel>
</rss>