<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>JS Paint – A web-based MS Paint remake</title>
<link>http://jspaint.ml/</link>
<guid isPermaLink="true" >http://jspaint.ml/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;http://jspaint.ml/&quot;&gt;http://jspaint.ml/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16174478&quot;&gt;https://news.ycombinator.com/item?id=16174478&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 311&lt;/p&gt;&lt;p&gt;# Comments: 82&lt;/p&gt;</description>
<pubDate>Thu, 18 Jan 2018 03:35:23 +0000</pubDate>
<dc:creator>hjek</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://jspaint.ml/</dc:identifier>
</item>
<item>
<title>Nintendo Labo Official Site</title>
<link>https://labo.nintendo.com/</link>
<guid isPermaLink="true" >https://labo.nintendo.com/</guid>
<description>&lt;p class=&quot;legal&quot;&gt;*Manufacturer’s Suggested Retail Price. Actual price may vary.&lt;/p&gt;
&lt;p class=&quot;legal&quot;&gt;**Customization tools and materials not included.&lt;/p&gt;
&lt;p class=&quot;legal&quot;&gt;Nintendo Switch system required; sold separately. Parental supervision recommended&lt;/p&gt;
&lt;p class=&quot;copyright legal&quot;&gt;© 2018 Nintendo. Nintendo Labo, Joy-Con and Nintendo Switch are trademarks of Nintendo.&lt;/p&gt;
</description>
<pubDate>Wed, 17 Jan 2018 22:09:16 +0000</pubDate>
<dc:creator>fniephaus</dc:creator>
<og:title>Home – Nintendo Labo Official Site – Trailer, product information</og:title>
<og:description>Nintendo Labo™ is a series of DIY kits crafted to work with Nintendo Switch™. Build Toy-Con creations from cardboard and bring them to life with your Nintendo Switch system and the included software.</og:description>
<og:image>https://media.nintendo.com/labo/QdBpjFCp8So7QVdMxwai/fb-share.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://labo.nintendo.com/</dc:identifier>
</item>
<item>
<title>Indefinite solitary confinement in Canadian prisons ruled unconstitutional</title>
<link>http://www.cbc.ca/news/canada/british-columbia/charter-solitary-confinement-bc-ruling-1.4491526</link>
<guid isPermaLink="true" >http://www.cbc.ca/news/canada/british-columbia/charter-solitary-confinement-bc-ruling-1.4491526</guid>
<description>&lt;p&gt;A B.C. Supreme Court judge has ruled that the practice of prolonged and indefinite solitary confinement in Canadian prisons is unconstitutional. &lt;/p&gt;
&lt;p&gt;In a lengthy ruling released Wednesday, Justice Peter Leask found that the laws surrounding what is known as administrative segregation in prison discriminate against Aboriginal and mentally ill inmates.&lt;/p&gt;
&lt;p&gt;He said the existing rules create a situation in which a warden becomes judge and jury in terms of ordering extended periods of solitary confinement.&lt;/p&gt;
&lt;p&gt;&quot;I find as a fact that administrative segregation … is a form of solitary confinement that places all Canadian inmates subject to it at significant risk of serious psychological harm, including mental pain and suffering, and increased incidence of self-harm and suicide,&quot; Leask wrote.&lt;/p&gt;
&lt;h2&gt;'Stunning decision'&lt;/h2&gt;
&lt;p&gt;The B.C. Civil Liberties Association (BCCLA) and the John Howard Society of Canada (JHSC) brought the challenge against the federal government, arguing that rules regarding administrative segregation, more commonly known as solitary confinement, are inhuman and unconstitutional.&lt;/p&gt;
&lt;p&gt;Leask said he was prepared to suspend his ruling for 12 months in order to give the government time to craft an appropriate legislative response to his concerns.&lt;/p&gt;
&lt;p&gt;&quot;This is the most significant prison law decision from a trial court in Canadian history,&quot; said Jay Aubrey, a staff lawyer with the BCCLA.&lt;/p&gt;
&lt;p&gt;&quot;It is a stunning decision that is grounded in four decades of history, and the best social science and medical evidence on the impact on inmates health of solitary confinement, and alternatives to solitary confinement.&quot;&lt;/p&gt;
&lt;p&gt;The BCCLA and other intervenors argued that the sections of the Corrections and Conditional Release Act governing the practice of administrative segregation &quot;permit indeterminate and prolonged solitary confinement&quot; which has &quot;significant adverse effects on the physical, psychological and social health of inmates.&quot;&lt;/p&gt;
&lt;div class=&quot;figure&quot; readability=&quot;8&quot;&gt;&lt;img src=&quot;https://i.cbc.ca/1.2097769.1381990697!/httpImage/image.jpg_gen/derivatives/original_620/tp-ashley-smith-9743048.jpg&quot; alt=&quot;tp-ashley-smith-9743048&quot; width=&quot;100%&quot;/&gt;&lt;p class=&quot;figure-caption&quot;&gt;Ashley Smith took her own life inside a federal prison in 2007 after prolonged time in administrative segregation.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Public Safety Minister Ralph Goodale said in a statement the government will review the B.C. judgment along with an Ontario ruling which found administrative segregation for longer than five days is unconstitutional.&lt;/p&gt;
&lt;p&gt;Goodale said the government has new legislation before Parliament to impose time limits and independent oversight on solitary confinement. He also said Ottawa is improving conditions of confinement and investing nearly $60 million toward the treatment of mental illness.&lt;/p&gt;
&lt;p&gt;&quot;We will identify any further and better ideas that need to be incorporated in our reform package,&quot; Goodale said. &quot;But we have been proactive from the beginning and our work is already well advanced.&quot;&lt;/p&gt;
&lt;h2&gt;Litany of tragic cases&lt;/h2&gt;
&lt;p&gt;In his ruling, Leask cited many of the tragic cases which brought the issue of solitary confinement to the forefront in recent years, including that of Ashley Smith, a 19-year-old who died in a segregated prison cell in Kitchener, Ont., in 2007. A coroner's jury ruled Smith's self-inflicted choking death was a homicide.&lt;/p&gt;
&lt;p&gt;The judge also cites the death of Edward Snowshoe, a 22-year-old who took his own life at the Edmonton Institution in August 2010 after spending more than five months in segregation. A public inquiry concluded he had &quot;fallen through the cracks&quot; and that corrections officials were unaware he had attempted suicide numerous times at a previous facility and that he had been in segregation as long as he had.&lt;/p&gt;
&lt;p&gt;&quot;On the evidence before this court, the most serious deficiency in dealing with administrative segregation is the inadequacy of the government's processes for dealing with the mentally ill,&quot; Leask wrote.&lt;/p&gt;
&lt;p&gt;&quot;I am satisfied the law … fails to respond to the actual capacities and needs of mentally ill inmates and instead imposes burdens in a manner that has the effect of reinforcing, perpetuating or exacerbating their disadvantage.&quot;&lt;/p&gt;
&lt;p&gt;Leask also called on the correctional service to make a concerted effort to improve programs for Aboriginal inmates, who are over-represented in segregation.&lt;/p&gt;
&lt;p&gt;&quot;Beyond the risk of psychological harm inherent in the segregation experience itself, the fact that Aboriginal inmates are placed in segregation more often, with limited access to programming, impacts their ability to transfer to lower security institutions and to obtain conditional release, as they may not have been able to carry out their correctional plan and may not be perceived as significantly rehabilitated as a result,&quot; Leask wrote.&lt;/p&gt;
&lt;div class=&quot;figure&quot; readability=&quot;11&quot;&gt;&lt;img src=&quot;https://i.cbc.ca/1.4179732.1498579647!/fileImage/httpImage/image.jpg_gen/derivatives/original_620/edward-snowshoe.jpg&quot; alt=&quot;Edward Snowshoe&quot; width=&quot;100%&quot;/&gt;&lt;p class=&quot;figure-caption&quot;&gt;Edward Snowshoe, top right, with his family from Fort McPherson, N.W.T. Snowshoe took his own life after 162 days in segregation. (CBC News)&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;'Meaningful human contact'&lt;/h2&gt;
&lt;p&gt;The Corrections and Conditional Release Act provides for two types of segregation: disciplinary and administrative. Disciplinary segregation is limited to 30 days, whereas the length of administrative segregation is effectively left to the discretion of the warden.&lt;/p&gt;
&lt;p&gt;The Attorney General of Canada argued that administrative segregation as practised in federal prisons is not solitary confinement, since inmates have &quot;daily opportunity for meaningful human contact.&quot;&lt;/p&gt;
&lt;p&gt;They also claimed that administrative segregation is a necessary tool and that the length of placements is not indeterminate but calculated by the time needed to eliminate safety or security issues.&lt;/p&gt;
&lt;p&gt;The Attorney General asked for the 12 month suspension in the event that Leask ruled against them, arguing that the break would give the legislature &quot;sufficient time to craft an appropriate legislative response.&quot;&lt;/p&gt;
&lt;p&gt;Leask agreed, saying an immediate declaration of invalidity would pose a &quot;potential danger to the public or threaten the rule of law.&quot;&lt;/p&gt;
</description>
<pubDate>Wed, 17 Jan 2018 20:01:25 +0000</pubDate>
<dc:creator>joering2</dc:creator>
<og:title>Indefinite solitary confinement in Canadian prisons ruled unconstitutional by B.C. court</og:title>
<og:url>http://www.cbc.ca/news/canada/british-columbia/charter-solitary-confinement-bc-ruling-1.4491526</og:url>
<og:image>https://i.cbc.ca/1.4491532.1516213188!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_1180/segregation-decision.jpg</og:image>
<og:description>A B.C. Supreme Court judge has ruled that the practice of indefinite solitary confinement in Canadian prisons is unconstitutional.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cbc.ca/news/canada/british-columbia/charter-solitary-confinement-bc-ruling-1.4491526</dc:identifier>
</item>
<item>
<title>Microsoft MakeCode</title>
<link>https://makecode.com/</link>
<guid isPermaLink="true" >https://makecode.com/</guid>
<description>&lt;p&gt;&lt;iframe height=&quot;200&quot; src=&quot;https://www.youtube.com/embed/GYmdTFvxz80?html5=1&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;div class=&quot;content&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Air Guitar&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;micro:bit&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Use the light sensor and accelerometer to make sounds for a homemade cardboard air guitar.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;iframe height=&quot;200&quot; src=&quot;https://www.youtube.com/embed/VLdWm7LBGjs?html5=1&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;div class=&quot;content&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Mega Jump!&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;Minecraft&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Code a mod that lets you jump super high in Minecraft.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;iframe height=&quot;200&quot; src=&quot;https://www.youtube.com/embed/Us-tH3SP8XE?html5=1&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;div class=&quot;content&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Magic Wand&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;Circuit Playground Express&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A colorful wand that plays a tune when shaken.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://pxt.azureedge.net/blob/714618d6fa1f3befe697c55125e0d4a3b082e326/static/mb/projects/wallet/wallet.jpg&quot; alt=&quot;A micro:bit on a wallet made from duct tape&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;content&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Duct Tape Wallet&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;micro:bit&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Put a micro:bit on a wallet made from duct tape to count your money.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;iframe height=&quot;200&quot; src=&quot;https://www.youtube.com/embed/Ah4fEbJtklU?html5=1&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;div class=&quot;content&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Milk Carton Robot&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;micro:bit&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Build a little robot out of a milk carton that moves based on light sensor input.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;image&quot;&gt;&lt;img src=&quot;https://pxt.azureedge.net/blob/61913b89f9fa2d732f9bc6889382245140fb44f8/static/images/circuit_playground_laserTag_IMG_0486_2k.jpg&quot; alt=&quot;A CircuitPlayground laser tag&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;content&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Laser Tag&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;ms-fontWeight-semibold&quot;&gt;Circuit Playground Express&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Use infrared IR transmission to blast your targets!&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 17 Jan 2018 19:57:22 +0000</pubDate>
<dc:creator>mdturnerphys</dc:creator>
<og:title>Microsoft MakeCode</og:title>
<og:url>https://www.makecode.com</og:url>
<og:type>website</og:type>
<og:description>Microsoft MakeCode is a free, open-source Block and JavaScript learn-to-code editor that promotes a more inclusive approach to computing education.</og:description>
<og:image>https://pxt.azureedge.net/blob/ee2d103669ba726a97f02df3e0d90d7704adac05/static/logo/logo-card.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://makecode.com/</dc:identifier>
</item>
<item>
<title>Who the Hell Uses Onion Juice?</title>
<link>http://markbittman.com/who-the-hell-uses-onion-juice/</link>
<guid isPermaLink="true" >http://markbittman.com/who-the-hell-uses-onion-juice/</guid>
<description>&lt;div class=&quot;p_embed p_image_embed&quot;&gt;&lt;img alt=&quot;Howards_onion_juice&quot; src=&quot;http://asdoasdiadnsiuhiwuh.files.wordpress.com/2010/05/howards_onion_juice-scaled500.gif&quot; width=&quot;170&quot; height=&quot;504&quot;/&gt;&lt;/div&gt;
&lt;p&gt;By John Thorne (&lt;a href=&quot;http://www.outlawcook.com/&quot;&gt;http://www.outlawcook.com/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The other day I was leafing through a vintage edition of The Fannie Farmer Boston Cooking School Cookbook looking for American chop suey (a story for another time), when my eye fell on a recipe with an ingredient list that included a “few drops onion juice” — and suddenly I was a child again, poking around in my grandmother’s kitchen.&lt;/p&gt;
&lt;p&gt;It was an odd little room. The family lived on the bottom floor of a large duplex, built by my grandfather in the 1920s in Wollaston, on Boston’s South Shore. Long before I came along, my grandmother purchased a piano and turned the dining room into the piano room. Thus, the kitchen became the dining room and the adjoining pantry became the kitchen. It was just wide enough to hold the kitchen sink at one end and the gas stove at the other. (The refrigerator sat in the dining room.) Between them ran a narrow counter and, above and below it, storage shelves for cookware and food. This was the kitchen in which Nana prepared meals for a family of five children (my mother the only girl).&lt;br/&gt;&lt;span id=&quot;more-18837826&quot;/&gt;&lt;/p&gt;
&lt;p&gt;How she did it I’ll never know, partly because by the time I was old enough to attend to such things, rheumatoid arthritis had laid her low. However, in those days lots of kitchen shelves were not a necessity: a grocery order was a phone call away, and the milkman and the Cushman’s Bakery man came to the back door. (In fact, they came right through it, shouting a welcome as they did.) I do know that Nana was a good cook if a plain Yankee one, proud of her baking and willing to go the extra distance to give plain fare a touch of the special.&lt;/p&gt;
&lt;p&gt;Even so, she required little in the way of seasonings. I still recall those yellow rectangular tins with the Stickney &amp;amp; Poor brand name spelled out in bright red script: clove, cinnamon, nutmeg, mustard, and black pepper. Apart from a box of Bell’s poultry seasoning and a bottle of vanilla extract, the only other thing I remember is Howard’s Onion Juice, in its oddly elongated bottle.&lt;/p&gt;
&lt;p&gt;As a child, I had no interest in cooking, and not even a little boy could have fitted in the kitchen when Nana was at work. However, when I learned to read, I found the act so thrilling that I practiced this new skill on every label that came my way. When I parsed out the words “onion juice” I was deeply shocked. These were two words that simply did not belong together. Some juices, like grape juice, were rare treats, other juices — apple, orange, tomato — were a regular part of my life (all, by the way, poured out of cans), but … onion juice?  Did Grampa and Nana secretly drink the stuff? I never dared ask, but I never forgot, either.&lt;/p&gt;
&lt;p&gt;I put aside the search for American chop suey aside, lost in contemplation. Onion juice. I couldn’t remember it called for in any other cookbook. Do people still cook with it? Can you even buy it? It took but a moment at the keyboard to answer those questions: Howard’s Onion Juice still exists. Amazon.com sells it by the case. And people were attesting to how glad they were to find it, how they needed it for their spaghetti sauce and sloppy joes, their salad dressing.&lt;/p&gt;
&lt;p&gt;Well, there was no way I was going to order a case. Still, curiosity piqued, I decided to check out likely suspects here in Northampton (MA). First, I drove over to  Big Y, a local supermarket chain that prides itself on its New England roots, and poked around. But where should I look? On the spice shelves? Among the hot sauces? The gravy mixes? I finally asked one of the clerks. The query went up the management chain and came back down: “Never heard of it.”&lt;/p&gt;
&lt;p&gt;I tried our local grocery, Serios; their next-door competitor, State Street Fruit; then on to Atkin’s Farm Stand (unlikely, you think, but I did leave there with a bottle of Spanish sherry vinegar, a jar of an organic Indian simmer sauce, and a &lt;a href=&quot;http://www.morethangourmet.com/our-products/ready-to-use-sauces/red-wine-sauce&quot;&gt;little carton of red wine foundation sauce&lt;/a&gt; — impulse buying, my middle names). But, as to onion sauce, no, no, and no. I gave up and emailed &lt;a href=&quot;http://www.howardfoods.com/sj.html&quot;&gt;Howard’s Foods&lt;/a&gt; for help. They kindly pointed out that both their onion and garlic juices were sold at our other local supermarket, Stop &amp;amp; Shop. I had, in fact, looked there, but had suffered input overload in front of the dazzling (if mostly meretricious) display of seasonings. I simply failed to see it.&lt;/p&gt;
&lt;p&gt;Howard’s Onion Juice. The ingredient list is short and impeccable: onion juice, vinegar, salt. Despite a yelp of protest from my inner child, I take a nip straight from the bottle. (I had just finished eating a Greek salad and thought, “How could it hurt?”). It didn’t. Although the bottle claims that one teaspoon is equal to half an onion, Howard’s Onion Juice has none of that sharp-toothed bite of raw onion. In fact, it tastes sort of like onion breath smells — except now it’s in your own mouth and doesn’t go away.&lt;/p&gt;
&lt;p&gt;A politer way of saying this is that tastes like juice extracted from a boiled onion, plus a zip of vinegar. Unfortunately, my whole goal when cooking onions is to fry out the juice, and with it that hint of skunk cabbage. Not that I mean to diss Howard’s product. I can see adding a splash to anything liquid (soups, stews, broths) that could use a hit of the vegetable’s simultaneously tasty and malodorous vibes. But, really, is that what onion juice is all about? I know old-time cooks held garlic at arms’ length. But they didn’t treat onions like that — and certainly not cooked onions. There had to be something more to the story — and to Nana’s cooking — than this.&lt;/p&gt;
&lt;p&gt;Back I went to Fannie Farmer. We have twelve editions in our collection — not all of them, but most. Onion juice is there from the first, not poured from a bottle but made as needed right on the spot. In the original volume, you were instructed to get it by working the cut surface with a fine grater, but soon some culinary quick-wit discovered a much simpler method: “Cut a slice from the root end of the onion; scrape the juice with the edge of a teaspoon.”&lt;/p&gt;
&lt;p&gt;Try it. What you get isn’t so much juice as a thickish pulp, and it’s charged with flavor, right up there (almost) with finely minced raw garlic. As soon as I dipped a finger in it, I had to mix it up with some butter and eat it on toast. I surely breathed fire for an hour afterwards, a small price to pay for something so deliciously potent. This stuff is definitely not for kids.&lt;/p&gt;
&lt;p&gt;That naked power also explains why it was often added by the drop — and added it surely was. In the 1921 edition of Fannie Farmer, it is used to add savor to a &lt;a href=&quot;http://books.google.com/books?id=Cv-saVsW9G4C&amp;amp;dq=The%20Boston%20Cooking-School%20Cookbook&amp;amp;lr&amp;amp;num=30&amp;amp;as_brr=0&amp;amp;pg=PA188#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;lobster and oyster ragout&lt;/a&gt;; a savory of &lt;a href=&quot;http://books.google.com/books?id=Cv-saVsW9G4C&amp;amp;dq=The%20Boston%20Cooking-School%20Cookbook&amp;amp;lr&amp;amp;num=30&amp;amp;as_brr=0&amp;amp;pg=PA103#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;chopped chicken liver and hard-boiled egg&lt;/a&gt;; &lt;a href=&quot;http://books.google.com/books?id=Cv-saVsW9G4C&amp;amp;dq=The%20Boston%20Cooking-School%20Cookbook&amp;amp;lr&amp;amp;num=30&amp;amp;as_brr=0&amp;amp;pg=PA200%23v=onepage&amp;amp;q&amp;amp;f=false#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;Hamburg steak&lt;/a&gt;; &lt;a href=&quot;http://books.google.com/books?id=Cv-saVsW9G4C&amp;amp;dq=The%20Boston%20Cooking-School%20Cookbook&amp;amp;lr&amp;amp;num=30&amp;amp;as_brr=0&amp;amp;pg=PA558#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;Eggs à la Caracas&lt;/a&gt;, scrambled eggs with the odd but tasty sounding addition of tomatoes and smoked chipped beef; a host of stuffings … the list goes on and on. (It is also used uncooked — as see this &lt;a href=&quot;http://books.google.com/books?id=Cv-saVsW9G4C&amp;amp;dq=The%20Boston%20Cooking-School%20Cookbook&amp;amp;lr&amp;amp;num=30&amp;amp;as_brr=0&amp;amp;pg=PA329#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;simple corn salad&lt;/a&gt;.) In other words, it was deployed where we today would most likely add a touch of garlic.&lt;/p&gt;
&lt;p&gt;Howard’s Onion Juice appeared on the market in the early fifties, around the time I was learning to read. Consequently, that bottle, when I first saw it, was a newly offered convenience. But it is the original scraped raw onion pulp that is the revelation. As with garlic, halfway measures can be worse than none at all. I’m already working up ways to put real onion juice to work, from meatballs to clam fritters to onion (as in garlic) bread. Somewhere, Nana is … what? Smiling? Aghast? Whatever it is, it’s nice to be in the kitchen with her.&lt;/p&gt;
&lt;p&gt;(Copyright © John Thorne 2010)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pinterest.com/pin/create/button/&quot; data-pin-do=&quot;buttonBookmark&quot; data-pin-color=&quot;red&quot; data-pin-height=&quot;128&quot;&gt;&lt;img src=&quot;http://assets.pinterest.com/images/pidgets/pinit_fg_en_rect_red_28.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 17 Jan 2018 18:53:23 +0000</pubDate>
<dc:creator>peterwwillis</dc:creator>
<og:type>article</og:type>
<og:title>Who the Hell Uses Onion Juice? - Mark Bittman</og:title>
<og:description>By John Thorne (http://www.outlawcook.com/) The other day I was leafing through a vintage edition of The Fannie Farmer Boston Cooking School Cookbook looking for American chop suey (a story for another time), when my eye fell on a recipe with an i...</og:description>
<og:url>http://markbittman.com/who-the-hell-uses-onion-juice/</og:url>
<og:image>http://asdoasdiadnsiuhiwuh.files.wordpress.com/2010/05/howards_onion_juice-scaled500.gif</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://markbittman.com/who-the-hell-uses-onion-juice/</dc:identifier>
</item>
<item>
<title>Elixir v1.6 released: code formatter, dynamic supervisors, and more</title>
<link>https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/</link>
<guid isPermaLink="true" >https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/</guid>
<description>&lt;p&gt;Elixir v1.6 includes new features, enhancements, and bug fixes. The main feature in this release is a code formatter. Important improvements can also be found in the standard library and in the Mix build tool.&lt;/p&gt;
&lt;h2 id=&quot;code-formatter&quot;&gt;Code formatter&lt;/h2&gt;
&lt;p&gt;The big feature in Elixir v1.6 is the addition of &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#format_string!/2&quot;&gt;a code formatter&lt;/a&gt; and an accompanying &lt;code class=&quot;highlighter-rouge&quot;&gt;mix format&lt;/code&gt; task that adds automatic formatting to your projects.&lt;/p&gt;
&lt;p&gt;The goal of the formatter is to automate the styling of codebases into a unique and consistent layout used across teams and the whole community. Code is now easier to write, as you no longer need to concern yourself with formatting rules. Code is also easier to read, as you no longer need to convert the styles of other developers in your mind.&lt;/p&gt;
&lt;p&gt;The formatter also helps new developers to learn the language by giving immediate feedback on code structure, and eases code reviews by allowing teams to focus on business rules and code quality rather than code style.&lt;/p&gt;
&lt;p&gt;To automatically format your codebase, you can run the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;new &lt;code class=&quot;highlighter-rouge&quot;&gt;mix format&lt;/code&gt; task&lt;/a&gt;. A &lt;code class=&quot;highlighter-rouge&quot;&gt;.formatter.exs&lt;/code&gt; file may be added to your project root for rudimentary formatter configuration. The mix task also supports flags for CI integration. For instance, you can make your build or a Pull Request fail if the code is not formatted accordingly by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;--check-formatted&lt;/code&gt; flag. We also recommend developers to check their favorite editor and see if it already provides key bindings for &lt;code class=&quot;highlighter-rouge&quot;&gt;mix format&lt;/code&gt;, allowing a file or a code snippet to be formatted without hassle.&lt;/p&gt;
&lt;p&gt;The Elixir codebase itself &lt;a href=&quot;https://github.com/elixir-lang/elixir/issues/6643&quot;&gt;has already been fully formatted&lt;/a&gt; and all further contributions are expected to contain formatted code. We recommend existing codebases to be formatted in steps. While the formatter will correctly handle long lines and complex expressions, refactoring the code by breaking those into variables or smaller functions as you format them will lead to overall cleaner and more readable codebases.&lt;/p&gt;
&lt;h2 id=&quot;dynamic-supervisor&quot;&gt;Dynamic Supervisor&lt;/h2&gt;
&lt;p&gt;Supervisors in Elixir are responsible for starting, shutting down, and restarting child processes when things go wrong. Most of the interaction with supervisors happens through &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;Supervisor&lt;/code&gt; module&lt;/a&gt; and it provides three main strategies: &lt;code class=&quot;highlighter-rouge&quot;&gt;:one_for_one&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:rest_for_one&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;:one_for_all&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, sometimes the children of a supervisor are not known upfront and are rather started dynamically. For example, if you are building a web server, you have each request being handled by a separate supervised process. Those cases were handled in the Supervisor module under a special strategy called &lt;code class=&quot;highlighter-rouge&quot;&gt;:simple_one_for_one&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this special strategy changed the semantics of the supervisor in regards to initialization and shutdown. Plus some APIs expected different inputs or would be completely unavailable depending on the supervision strategy.&lt;/p&gt;
&lt;p&gt;Elixir v1.6 addresses this issue by introducing &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt;a new &lt;code class=&quot;highlighter-rouge&quot;&gt;DynamicSupervisor&lt;/code&gt; module&lt;/a&gt;, which encapsulates the old &lt;code class=&quot;highlighter-rouge&quot;&gt;:simple_one_for_one&lt;/code&gt; strategy and APIs in a proper module while allowing the documentation and API of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Supervisor&lt;/code&gt; module to focus on its main use cases. Having a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;DynamicSupervisor&lt;/code&gt; module also makes it simpler to add new features to the dynamic supervisor, such as the new &lt;code class=&quot;highlighter-rouge&quot;&gt;:max_children&lt;/code&gt; option that limits the maximum number of children supervised dynamically.&lt;/p&gt;
&lt;h2 id=&quot;deprecated-and-since-attributes&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@deprecated&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@since&lt;/code&gt; attributes&lt;/h2&gt;
&lt;p&gt;This release also introduces two new attributes associated with function definitions: &lt;code class=&quot;highlighter-rouge&quot;&gt;@deprecated&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@since&lt;/code&gt;. The former marks if a function or macro is deprecated, the latter annotates the version the API was introduced:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;@doc&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Breaks a collection into chunks&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;@since&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0.0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;@deprecated&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Use chunk_every/2 instead&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunk_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;chunk_every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunk_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;mix xref&lt;/code&gt; task was also updated to warn if your project calls deprecated code. So if a definition is marked as &lt;code class=&quot;highlighter-rouge&quot;&gt;@deprecated&lt;/code&gt; and a module invokes it, a warning will be emitted during compilation. This effectively provides libraries and frameworks a mechanism to deprecate code without causing multiple warnings to be printed in runtime and without impacting performance.&lt;/p&gt;
&lt;p&gt;Note those attributes are not yet available to tools that generate documentation. Such functionality will be added in Elixir v1.7 once &lt;a href=&quot;https://github.com/elixir-lang/elixir/issues/7198&quot;&gt;Elixir adopts EEP-48&lt;/a&gt;. We still recommend developers to start annotating their APIs so the information is already available when the tooling is updated.&lt;/p&gt;
&lt;h2 id=&quot;defguard-and-defguardp&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;defguard&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;defguardp&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Elixir provides the concepts of guards: expressions used alongside pattern matching to select a matching clause. Let’s see an example straight from &lt;a href=&quot;https://elixir-lang.org&quot;&gt;Elixir’s home page&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve_drinks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;age:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Code that serves drinks!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%User{age: age}&lt;/code&gt; is matching on a &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; struct with an age field and &lt;code class=&quot;highlighter-rouge&quot;&gt;when age &amp;gt;= 21&lt;/code&gt; is the guard.&lt;/p&gt;
&lt;p&gt;Since only a handful of constructs are &lt;a href=&quot;https://hexdocs.pm/elixir/guards.html#content&quot;&gt;allowed in guards&lt;/a&gt;, if you were in a situation where you had to check the age to be more than or equal to 21 in multiple places, extracting the guard to a separate function would be &lt;a href=&quot;https://github.com/elixir-lang/elixir/issues/2469&quot;&gt;less than obvious and error prone&lt;/a&gt;. To address those issues, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defguard/1&quot;&gt;this release introduces &lt;code class=&quot;highlighter-rouge&quot;&gt;defguard/1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;defguardp/1&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;defguard&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_drinking_age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve_drinks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;age:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_drinking_age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Code that serves drinks!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;iex-improvements&quot;&gt;IEx improvements&lt;/h2&gt;
&lt;p&gt;IEx also got its share of improvements. The new code formatter allows us to pretty print code snippets, types and specifications, improving the overall experience when exploring code through the terminal.&lt;/p&gt;
&lt;p&gt;The autocomplete mechanism also got smarter, being able to provide context autocompletion. For example, typing &lt;code class=&quot;highlighter-rouge&quot;&gt;t Enum.&lt;/code&gt; and hitting TAB will autocomplete only the types in Enum (in contrast to all functions). Typing &lt;code class=&quot;highlighter-rouge&quot;&gt;b GenServer.&lt;/code&gt; and hitting TAB will autocomplete only the behaviour callbacks.&lt;/p&gt;
&lt;p&gt;Finally, the breakpoint functionality added &lt;a href=&quot;https://elixir-lang.org/blog/2017/07/25/elixir-v1-5-0-released/&quot;&gt;in Elixir v1.5&lt;/a&gt; has been improved to support pattern matching and guards. For example, to pattern match on a function call when the first argument is the atom &lt;code class=&quot;highlighter-rouge&quot;&gt;:foo&lt;/code&gt;, you may do:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;iex&amp;gt; break! SomeFunction.call(:foo, _, _)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For more information, see &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;mix-xref&quot;&gt;mix xref&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Xref.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mix xref&lt;/code&gt;&lt;/a&gt; is a task added in Elixir v1.3 which provides general information about how modules and files in an application depend on each other. This release brings many improvements to &lt;code class=&quot;highlighter-rouge&quot;&gt;xref&lt;/code&gt;, extending the reach of the analysis and helping developers digest the vast amount of data it produces.&lt;/p&gt;
&lt;p&gt;One of such additions is the &lt;code class=&quot;highlighter-rouge&quot;&gt;--include-siblings&lt;/code&gt; option that can be given to all &lt;code class=&quot;highlighter-rouge&quot;&gt;xref&lt;/code&gt; commands inside umbrella projects. For example, to find all of the callers of a given module or function of an application in an umbrella:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ mix xref callers SomeModule --include-siblings
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;graph&lt;/code&gt; command in &lt;code class=&quot;highlighter-rouge&quot;&gt;mix xref&lt;/code&gt; now can also output general statistics about the graph. In &lt;a href=&quot;https://github.com/hexpm/hexpm&quot;&gt;the hexpm project&lt;/a&gt;, you would get:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ mix xref graph --format stats
Tracked files: 129 (nodes)
Compile dependencies: 256 (edges)
Structs dependencies: 46 (edges)
Runtime dependencies: 266 (edges)

Top 10 files with most outgoing dependencies:
  * test/support/factory.ex (18)
  * lib/hexpm/accounts/user.ex (13)
  * lib/hexpm/accounts/audit_log.ex (12)
  * lib/hexpm/web/controllers/dashboard_controller.ex (12)
  * lib/hexpm/repository/package.ex (12)
  * lib/hexpm/repository/releases.ex (11)
  * lib/hexpm/repository/release.ex (10)
  * lib/hexpm/web/controllers/package_controller.ex (10)
  * lib/mix/tasks/hexpm.stats.ex (9)
  * lib/hexpm/repository/registry_builder.ex (9)

Top 10 files with most incoming dependencies:
  * lib/hexpm/web/web.ex (84)
  * lib/hexpm/web/router.ex (29)
  * lib/hexpm/web/controllers/controller_helpers.ex (29)
  * lib/hexpm/web/controllers/auth_helpers.ex (28)
  * lib/hexpm/web/views/view_helpers.ex (27)
  * lib/hexpm/web/views/icons.ex (27)
  * lib/hexpm/web/endpoint.ex (23)
  * lib/hexpm/ecto/changeset.ex (22)
  * lib/hexpm/accounts/user.ex (19)
  * lib/hexpm/repo.ex (19)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mix xref graph&lt;/code&gt; also got the &lt;code class=&quot;highlighter-rouge&quot;&gt;--only-nodes&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--label&lt;/code&gt; options. The former asks Mix to only output file names (nodes) without the edges. The latter allows you to focus on certain relationships:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;# To get all files that depend on lib/foo.ex
mix xref graph --sink lib/foo.ex --only-nodes

# To get all files that depend on lib/foo.ex at compile time
mix xref graph --label compile --sink lib/foo.ex --only-nodes

# To get all files lib/foo.ex depends on
mix xref graph --source lib/foo.ex --only-nodes

# To limit statistics only to compile time dependencies
mix xref graph --format stats --label compile
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Those improvements will help developers better understand the relationship between files and reveal potentially complex parts of their systems.&lt;/p&gt;
&lt;p&gt;Other improvements in Mix include &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.Compiler.html&quot;&gt;better compiler diagnostics&lt;/a&gt; for editor integration, support for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;--slowest N&lt;/code&gt; flag in &lt;code class=&quot;highlighter-rouge&quot;&gt;mix test&lt;/code&gt;&lt;/a&gt; that shows the slowest tests in your suite, and a new &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Eprof.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mix profile.eprof&lt;/code&gt; task&lt;/a&gt; that provides time based profiling, complementing the existing &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cprof.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mix profile.cprof&lt;/code&gt; (count based)&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Fprof.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mix profile.fprof&lt;/code&gt; (flame based)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;summing-up&quot;&gt;Summing up&lt;/h2&gt;
&lt;p&gt;The full list of changes is available in our &lt;a href=&quot;https://github.com/elixir-lang/elixir/releases/tag/v1.6.0&quot;&gt;release notes&lt;/a&gt;. There are many other exciting changes, such as compiler enhancements to better track dependencies, leading to less files being recompiled whenever there are changes in project, and overall faster compilation.&lt;/p&gt;
&lt;p&gt;Work on Elixir v1.7 has already started. We still welcome developers to try out the &lt;a href=&quot;https://elixir-lang.org/blog/2017/10/31/stream-data-property-based-testing-and-data-generation-for-elixir/&quot;&gt;previously announced StreamData library&lt;/a&gt;, that aims to bring data generation and property-based testing to Elixir. The other &lt;a href=&quot;https://github.com/elixir-lang/elixir/issues&quot;&gt;features scheduled for v1.7 can be found in the issues tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Don’t forget to check &lt;a href=&quot;https://elixir-lang.org/install.html&quot;&gt;the Install section&lt;/a&gt; to get Elixir installed and our &lt;a href=&quot;http://elixir-lang.org/getting-started/introduction.html&quot;&gt;Getting Started guide&lt;/a&gt; to learn more.&lt;/p&gt;
</description>
<pubDate>Wed, 17 Jan 2018 18:47:29 +0000</pubDate>
<dc:creator>josevalim</dc:creator>
<og:title>Elixir v1.6 released</og:title>
<og:description>Elixir v1.6 includes a code formatter, defguard, dynamic supervision and new module attributes that improves code quality and the developer experience</og:description>
<og:url>https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://elixir-lang.org/blog/2018/01/17/elixir-v1-6-0-released/</dc:identifier>
</item>
<item>
<title>Apple plans new U.S. campus, to pay $38B in foreign cash taxes</title>
<link>https://www.reuters.com/article/us-apple-tax/apple-plans-new-u-s-campus-to-pay-38-billion-in-foreign-cash-taxes-idUSKBN1F62FJ</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-apple-tax/apple-plans-new-u-s-campus-to-pay-38-billion-in-foreign-cash-taxes-idUSKBN1F62FJ</guid>
<description>&lt;p&gt;(Reuters) - Apple Inc (&lt;span id=&quot;“symbol_AAPL.O_0”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=AAPL.O&quot;&gt;AAPL.O&lt;/a&gt;&lt;/span&gt;) will open a new campus as part of a five-year, $30 billion U.S. investment plan and will make about $38 billion in one-time tax payments on its overseas cash, one of the largest corporate spending plans announced since the passage of a tax cut signed by U.S. President Donald Trump.&lt;/p&gt;
&lt;p&gt;The company has been under increasing pressure to make U.S. investments since the 2016 presidential campaign, when Trump targeted the iPhone maker for making products in Asian factories.&lt;/p&gt;
&lt;p&gt;While Apple has announced no plans to change that practice and experts say it would be economically impractical to make iPhones in the United States, the company has begun to emphasize its U.S. economic impact, from developers who sell software on its App Store to the tens of billions of dollars per year it spends with U.S. suppliers.&lt;/p&gt;
&lt;p&gt;Between the spending plan, hiring 20,000 people, tax payments and business with U.S.-based suppliers, Apple on Wednesday estimated it would spend $350 billion in the United States over the next five years.&lt;/p&gt;
&lt;p&gt;It did not, however, say how much of the plan was new or how much of its $252.3 billion in cash abroad - the largest of any U.S. corporation - it would bring home. In addition to the $38 billion in taxes it must pay, Apple has run up $97 billion in U.S.-issued debt to pay for previous share buybacks and dividends.&lt;/p&gt;
&lt;p&gt;Some investors said the U.S. investments would give the company room to make more stock buybacks or pay dividends without criticism. Apple shares on Wednesday closed up 1.7 percent to $179.10.&lt;/p&gt;
&lt;p&gt;Walter Piecyk, managing director for TMT Research at BTIG Research, said he could not yet tell whether the U.S. expansion was an increase from a previous plan or meant investment abroad was being refocused in the United States. Reuters Breakingviews estimated that Apple could have increased U.S. headcount by 24,000 in the last five years.&lt;/p&gt;
&lt;p&gt;Trump described the move by Apple as a victory for his efforts.&lt;/p&gt;
&lt;p&gt;“I promised that my policies would allow companies like Apple to bring massive amounts of money back to the United States. Great to see Apple follow through as a result of TAX CUTS,” Trump wrote on Twitter.&lt;/p&gt;
&lt;p&gt;Asked in an interview with ABC News whether the job creation announcements were directly related to the Republican tax plan, Apple Chief Executive Officer Tim Cook gave a measured response.&lt;/p&gt;
&lt;p&gt;“Let me be clear: There are large parts of this that are a result of the tax reform, and there’s large parts of this we would have done in any situation,” Cook said in the interview.&lt;/p&gt;
&lt;h3&gt;APPLE SERVICES PUSH&lt;/h3&gt;
&lt;p&gt;About a third of Apple’s new spending will be on data centers to house its iCloud, App Store and Apple Music services, a sign of the rising importance of subscription services to a company known for its computers and gadgets. Apple has data centers in seven states.&lt;/p&gt;
&lt;div class=&quot;Image_container_1tVQo&quot; tabindex=&quot;-1&quot;&gt;


&lt;span class=&quot;Image_caption_KoNH1&quot;&gt;FILE PHOTO: The Apple Campus 2 is seen under construction in Cupertino, California in this aerial photo taken January 13, 2017. REUTERS/Noah Berger/File Photo&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;The announced U.S spending would be a significant part of Apple’s overall capital expenditures. Globally, the company spent $14.9 billion in 2017 and expects to spend $16 billion in 2018, figures that include both U.S.-based investments in data centers and other projects and Asian investments in tooling for its contract manufacturers.&lt;/p&gt;
&lt;p&gt;If Apple’s overall capital expenditures continue to expand at the same rate expected this year, the $30 billion investment in the United States could represent about a third of its capital expenditures over the next five years.&lt;/p&gt;
&lt;p&gt;The announced tax payment was roughly in line with expectations, said Cross Research analyst Shannon Cross. The tax bill requires companies to pay a one-time 15.5 percent tax on foreign-held earnings whether they intend to bring them back to the United States or not.&lt;/p&gt;
&lt;p&gt;Apple had set aside $36.3 billion in anticipation of tax payments on its foreign cash, meaning the payment would not represent a major impact on its cash flow this quarter.&lt;/p&gt;

&lt;p&gt;James Cordwell of Atlantic Equities said Apple’s U.S. investment plan could make it easier for the company to give more cash to shareholders.&lt;/p&gt;
&lt;p&gt;“Being seen to just hand the cash back to shareholders could spark some political sensitivities,” and the spending announcement could be part of Apple’s efforts to manage this issue, Cordwell said.&lt;/p&gt;
&lt;p&gt;Apple also said it would boost its advanced manufacturing fund, used to provide capital and support to suppliers such as Finisar Corp (&lt;span id=&quot;“symbol_FNSR.O_1”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=FNSR.O&quot;&gt;FNSR.O&lt;/a&gt;&lt;/span&gt;) and Corning Inc (&lt;span id=&quot;“symbol_GLW.N_2”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=GLW.N&quot;&gt;GLW.N&lt;/a&gt;&lt;/span&gt;), from $1 billion to $5 billion. Apple said it planned to spend $55 billion with U.S.-based suppliers in 2018, up from $50 billion last year.&lt;/p&gt;
&lt;h3&gt;AMAZON VS APPLE&lt;/h3&gt;
&lt;p&gt;Apple joins Amazon.com Inc (&lt;span id=&quot;“symbol_AMZN.O_3”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/finance/stocks/overview?symbol=AMZN.O&quot;&gt;AMZN.O&lt;/a&gt;&lt;/span&gt;) in scouting for a location for a new campus. Amazon finished taking applications from cities in October for its second headquarters.&lt;/p&gt;
&lt;p&gt;Amazon set off a scramble between cities across the nation to host the headquarters, and Apple’s announcement stirred broad interest. Chicago Mayor Rahm Emanuel told reporters on Wednesday, “We’re going to go compete and we’re going to put our best foot forward” to compete for an Apple campus. A Philadelphia Department of Commerce spokeswoman said the city would submit a proposal if Apple opened the process for bids.&lt;/p&gt;
&lt;p&gt;Apple has not said whether it had settled on a new campus location yet, and it did not make any commitments on the size of new spending or hiring specific to the campus. It did say it would initially house technical support for customers and would announce the location later this year.&lt;/p&gt;
&lt;p&gt;The facility would be in addition to its “spaceship” Apple Park headquarters in Cupertino, California; a campus in Austin, Texas, that houses customer service agents and some manufacturing; and an Elk Grove, California, unit with several thousand customer service agents and iPhones refurbishing technicians.&lt;/p&gt;
&lt;p&gt;Apple also has built its own data centers in North Carolina, Oregon, Nevada, Arizona and a recently announced project in Iowa, and leases data center space in other states.&lt;/p&gt;
&lt;div class=&quot;Attribution_attribution_o4ojT&quot; readability=&quot;13&quot;&gt;
&lt;p class=&quot;Attribution_content_27_rw&quot;&gt;Additional reporting by Sonam Rai, Pushkala Aripaka, Muvija M. and Laharee Chatterjee in Bengaluru, Karen Pierog in Chicago and Nick Brown in New York; Editing by Peter Henderson, Richard Chang and Leslie Adler&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer_1gqgJ&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle_7sKLj&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 17 Jan 2018 18:13:13 +0000</pubDate>
<dc:creator>chollida1</dc:creator>
<og:title>Apple plans new U.S. campus, to pay $38 billion in foreign cash taxes</og:title>
<og:url>https://www.reuters.com/article/us-apple-tax/apple-to-pay-38-billion-in-repatriation-tax-idUSKBN1F62FJ</og:url>
<og:type>article</og:type>
<og:description>Apple Inc will open a new campus as part of a five-year, $30 billion U.S. investment plan and will make about $38 billion in one-time tax payments on its overseas cash, one of the largest corporate spending plans announced since the passage of a tax cut signed by U.S. President Donald Trump.</og:description>
<og:image>https://s4.reutersmedia.net/resources/r/?m=02&amp;d=20180117&amp;t=2&amp;i=1222820612&amp;w=1200&amp;r=LYNXMPEE0G1PV</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-apple-tax/apple-plans-new-u-s-campus-to-pay-38-billion-in-foreign-cash-taxes-idUSKBN1F62FJ</dc:identifier>
</item>
<item>
<title>Turning Soybeans into Diesel Fuel Is Costing Billions</title>
<link>https://www.npr.org/sections/thesalt/2018/01/16/577649838/turning-soybeans-into-diesel-fuel-is-costing-us-billions</link>
<guid isPermaLink="true" >https://www.npr.org/sections/thesalt/2018/01/16/577649838/turning-soybeans-into-diesel-fuel-is-costing-us-billions</guid>
<description>&lt;div id=&quot;res578449678&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2018/01/16/gettyimages-8497759121_custom-403f041b019f2f4eba7eeec808ec668d0cb9b0ed-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2018/01/16/gettyimages-8497759121_custom-403f041b019f2f4eba7eeec808ec668d0cb9b0ed-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;An engineer shows a sample of biodiesel at an industrial complex in General Lagos, Santa Fe province, Argentina. The United States recently imposed duties on Argentine biodiesel, blocking it from the U.S. market. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Eitan Abramovich/AFP/Getty Images&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Eitan Abramovich/AFP/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2018/01/16/gettyimages-8497759121_custom-403f041b019f2f4eba7eeec808ec668d0cb9b0ed-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;12&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;An engineer shows a sample of biodiesel at an industrial complex in General Lagos, Santa Fe province, Argentina. The United States recently imposed duties on Argentine biodiesel, blocking it from the U.S. market.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Eitan Abramovich/AFP/Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This year, trucks and other heavy-duty motors in America will burn some 3 billion gallons of diesel fuel that was made from soybean oil. They're doing it, though, not because it's cheaper or better, but because they're required to, by law.&lt;/p&gt;
&lt;p&gt;The law is the Renewable Fuel Standard, or RFS. For some, especially Midwestern farmers, it's the key to creating clean energy from American soil and sun. For others — like many economists — it's a wasteful misuse of resources.&lt;/p&gt;
&lt;p&gt;And the most wasteful part of the RFS, according to some, is biodiesel. It's different from ethanol, a fuel that's made from corn and mixed into gasoline, also as required by the RFS. In fact, gasoline companies &lt;a href=&quot;https://www.npr.org/sections/thesalt/2016/02/10/466010209/the-shocking-truth-about-americas-ethanol-law-it-doesnt-matter-for-now&quot;&gt;probably&lt;/a&gt; would use ethanol even if there were no law requiring it, because ethanol is a useful fuel additive — at least up to a point. That's not true of biodiesel.&lt;/p&gt;
&lt;p&gt;&quot;This is an easy one, economically. Biodiesel is very expensive, relative to petroleum diesel,&quot; says Scott Irwin, an economist at the University of Illinois, who follows biofuel markets closely. He calculates that the extra cost for biodiesel comes to about $1.80 per gallon right now, meaning that the biofuel law is costing Americans about $5.4 billion a year.&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;aside id=&quot;ad-mobilebackfill-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Irwin explains that use of biodiesel is driven by three different parts of the Renewable Fuel Standard. The law includes a quota for biodiesel use, but in addition to that, biodiesel also is used in order to meet the law's demand for &quot;advanced biofuels.&quot; Finally, there's an overall quota for biofuels of all sorts, and companies are using biodiesel to meet that quota as well because they've run into limits on their ability to blend ethanol into gasoline.&lt;/p&gt;
&lt;p&gt;Defenders of biodiesel &lt;a href=&quot;https://unitedsoybean.org/media-center/issue-briefs/biodiesel/&quot;&gt;insist&lt;/a&gt; that it's a much cleaner fuel than regular diesel, because it doesn't come from the ground, but from soybean plants that capture carbon dioxide from the air as they grow. In fact, by the EPA's calculations, replacing petroleum-based fuel with biodiesel will cut greenhouse emissions at least in half.&lt;/p&gt;
&lt;p&gt;A growing number of environmentalists, however, say that this calculation is dead wrong. They say that if more soybeans are needed to make fuel in addition to food, it inevitably means that people somewhere on Earth will have to plow up grasslands or cut down forests in order to grow that additional supply — and clearing such land releases huge amounts of carbon dioxide into the atmosphere.&lt;/p&gt;
&lt;p&gt;Two environmental groups — ActionAid USA and Mighty Earth — just released a &lt;a href=&quot;https://www.actionaidusa.org/wp-content/uploads/2018/01/AAUSA_MightyEarth_Burned_FINAL_web.pdf&quot;&gt;report&lt;/a&gt; connecting America's biodiesel demands directly to deforestation in Argentina.&lt;/p&gt;
&lt;p&gt;Investigators from the two groups documented widespread clearing of Argentine forests in order to expand cultivation of soybeans. Simultaneously, Argentina expanded its exports of soybean-derived biodiesel to the United States. In 2016, in fact, Argentina shipped more than 400 million gallons of biodiesel to the U.S., equivalent to almost 15 percent of all the biodiesel that Americans consumed.&lt;/p&gt;
&lt;p&gt;The story, however, is more complicated than it seems. For one thing, that boom in Argentine biodiesel exports is over, at least for now. Last summer, the United States accused Argentina of subsidizing its biodiesel producers and &quot;dumping&quot; cheap biodiesel on the world market. In retaliation, the U.S. &lt;a href=&quot;https://enforcement.trade.gov/download/factsheets/factsheet-multiple-biodiesel-cvd-prelim-082217.pdf&quot;&gt;imposed&lt;/a&gt; hefty taxes on all biodiesel from Argentina. Overnight, those imports ceased. Americans now will have to rely on biodiesel produced here in the U.S. — which also is more expensive. (In a way, Argentina was doing the U.S. a favor, helping it satisfy its biodiesel demands more cheaply.)&lt;/p&gt;
&lt;p&gt;In addition, the most powerful factor driving demand for soybeans these days is China's appetite for soy meal, to feed its pigs and chickens, rather than America's need for soy oil to make fuel.&lt;/p&gt;
&lt;p&gt;&quot;The big story is China's demand,&quot; says Irwin of the University of Illinois. &quot;If anything is related to tearing up pastures in Argentina to grow soybeans, it's China and not biodiesel.&quot;&lt;/p&gt;
&lt;p&gt;In fact, China wants so much soy meal that it's boosted global supplies of soy oil, because soybeans, when they're crushed, yield both meal and oil. By satisfying China's demand for meal, soy processors inevitably end up with plenty of oil to sell, too. (Interestingly, this is a reversal of the situation a century ago, when soybeans were mainly grown for their oil, and producers struggled to find uses for the meal.)&lt;/p&gt;
</description>
<pubDate>Wed, 17 Jan 2018 17:12:37 +0000</pubDate>
<dc:creator>happy-go-lucky</dc:creator>
<og:title>Turning Soybeans Into Diesel Fuel Is Costing Us Billions</og:title>
<og:url>https://www.npr.org/sections/thesalt/2018/01/16/577649838/turning-soybeans-into-diesel-fuel-is-costing-us-billions</og:url>
<og:type>article</og:type>
<og:description>The law that requires America to turn some of its soybeans into diesel fuel for trucks has created a new industry. But it's costing American consumers about $5 billion each year.</og:description>
<og:image>https://media.npr.org/assets/img/2018/01/16/gettyimages-8497759121_wide-ec8df8b5d4aa328c733bf5f95761ec286c73b90d.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/sections/thesalt/2018/01/16/577649838/turning-soybeans-into-diesel-fuel-is-costing-us-billions</dc:identifier>
</item>
<item>
<title>Firefox’s new streaming and tiering compiler</title>
<link>https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/</guid>
<description>&lt;p&gt;People call WebAssembly a game changer because it makes it possible to run code on the web faster. Some of these &lt;a href=&quot;https://hacks.mozilla.org/2017/02/what-makes-webassembly-fast/&quot;&gt;speedups are already present&lt;/a&gt;, and some are yet to come.&lt;/p&gt;&lt;p&gt;One of these speedups is streaming compilation, where the browser compiles the code while the code is still being downloaded. Up until now, this was just a potential future speedup. But with the release of Firefox 58 next week, it becomes a reality.&lt;/p&gt;
&lt;p&gt;Firefox 58 also includes a new 2-tiered compiler. The new baseline compiler compiles code 10–15 times faster than the optimizing compiler.&lt;/p&gt;
&lt;p&gt;Combined, these two changes mean we compile code faster than it comes in from the network.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/ezgif-5-73711fc5d3.gif&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-31768&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/ezgif-5-73711fc5d3.gif&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;253&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On a desktop, we compile 30-60 megabytes of WebAssembly code per second. That’s &lt;a href=&quot;http://www.speedtest.net/global-index&quot;&gt;faster than the network&lt;/a&gt; delivers the packets.&lt;/p&gt;
&lt;p&gt;If you use Firefox Nightly or Beta, you can &lt;a href=&quot;https://lukewagner.github.io/test-tanks-compile-time/&quot;&gt;give it a try&lt;/a&gt; on your own device. Even on a pretty average mobile device, we can compile at 8 megabytes per second —which is faster than the average download speed for pretty much any mobile network.&lt;/p&gt;
&lt;p&gt;This means your code executes almost as soon as it finishes downloading.&lt;/p&gt;
&lt;h3 id=&quot;1091&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Why is this important?&lt;/h3&gt;
&lt;p&gt;Web performance advocates get prickly when sites ship a lot of JavaScript. That’s because downloading lots of JavaScript makes pages load slower.&lt;/p&gt;
&lt;p&gt;This is largely because of the parse and compile times. As &lt;a href=&quot;https://calendar.perfplanet.com/2017/tracking-cpu-with-long-tasks-api/&quot;&gt;Steve Souders points out&lt;/a&gt;, the old bottleneck for web performance used to be the network. But the new bottleneck for web performance is the CPU, and particularly the main thread.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/02.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31713&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/02-500x295.png&quot; alt=&quot;Old bottleneck, the network, on the left. New bottleneck, work on the CPU such as compiling, on the right&quot; width=&quot;500&quot; height=&quot;295&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/02-500x295.png 500w, https://hacks.mozilla.org/files/2018/01/02-250x147.png 250w, https://hacks.mozilla.org/files/2018/01/02-768x453.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we want to move as much work off the main thread as possible. We also want to start it as early as possible so we’re making use of all of the CPU’s time. Even better, we can do less CPU work altogether.&lt;/p&gt;
&lt;p&gt;With JavaScript, you can do some of this. You can parse files off of the main thread, as they stream in. But you’re still parsing them, which is a lot of work, and you have to wait until they are parsed before you can start compiling. And for compiling, you’re back on the main thread. This is because JS is usually &lt;a href=&quot;https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/&quot;&gt;compiled lazily&lt;/a&gt;, at runtime.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/03.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31714&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/03-500x167.png&quot; alt=&quot;Timeline showing packets coming in on the main thread, then parsing happening simultaneously on another thread. Once parse is done, execution begins on main thread, interrupted occassionally by compiling&quot; width=&quot;500&quot; height=&quot;167&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/03-500x167.png 500w, https://hacks.mozilla.org/files/2018/01/03-250x84.png 250w, https://hacks.mozilla.org/files/2018/01/03-768x257.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With WebAssembly, there’s less work to start with. Decoding WebAssembly is much simpler and faster than parsing JavaScript. And this decoding and the compilation can be split across multiple threads.&lt;/p&gt;
&lt;p&gt;This means multiple threads will be doing the baseline compilation, which makes it faster. Once it’s done, the baseline compiled code can start executing on the main thread. It won’t have to pause for compilation, like the JS does.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/04.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31715&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/04-500x202.png&quot; alt=&quot;Timeline showing packets coming in on the main thread, and decoding and baseline compiling happening across multiple threads simultaneously, resulting in execution starting faster and without compiling breaks.&quot; width=&quot;500&quot; height=&quot;202&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/04-500x202.png 500w, https://hacks.mozilla.org/files/2018/01/04-250x101.png 250w, https://hacks.mozilla.org/files/2018/01/04-768x310.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While the baseline compiled code is running on the main thread, other threads work on making a more optimized version. When the more optimized version is done, it can be swapped in so the code runs even faster.&lt;/p&gt;
&lt;p&gt;This changes the cost of loading WebAssembly to be more like decoding an image than loading JavaScript. And think about it… web performance advocates do get prickly about JS payloads of 150 kB, but an image payload of the same size doesn’t raise eyebrows.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/05.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31716&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/05-500x218.png&quot; alt=&quot;Developer advocate on the left tsk tsk-ing about large JS file. Developer advocate on the right shrugging about large image.&quot; width=&quot;500&quot; height=&quot;218&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/05-500x218.png 500w, https://hacks.mozilla.org/files/2018/01/05-250x109.png 250w, https://hacks.mozilla.org/files/2018/01/05-768x335.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That’s because load time is so much faster with images, as Addy Osmani explains in &lt;a href=&quot;https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e&quot;&gt;The Cost of JavaScript&lt;/a&gt;, and decoding an image doesn’t block the main thread, as Alex Russell discusses in &lt;a href=&quot;https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/&quot;&gt;Can You Afford It?: Real-world Web Performance Budgets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This doesn’t mean that we expect WebAssembly files to be as large as image files. While early WebAssembly tools created large files because they included lots of runtime, there’s currently a lot of work to make these files smaller. For example, Emscripten has a &lt;a href=&quot;https://github.com/kripken/emscripten/issues/5836&quot;&gt;“shrinking initiative”&lt;/a&gt;. In Rust, you can already get pretty small file sizes using the wasm32-unknown-unknown target, and there are tools like &lt;a href=&quot;https://github.com/alexcrichton/wasm-gc&quot;&gt;wasm-gc&lt;/a&gt; and &lt;a href=&quot;https://github.com/fitzgen/wasm-snip&quot;&gt;wasm-snip&lt;/a&gt; which can optimize this even more.&lt;/p&gt;
&lt;p&gt;What it does mean is that these WebAssembly files will load much faster than the equivalent JavaScript.&lt;/p&gt;
&lt;p&gt;This is big. As &lt;a href=&quot;https://twitter.com/wycats/status/942908325775077376&quot;&gt;Yehuda Katz points out&lt;/a&gt;, this is a game changer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/06.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31717&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/06-500x444.png&quot; alt=&quot;Tweet from Yehuda Katz saying it's possible to parse and compile wasm as fast as it comes over the network.&quot; width=&quot;500&quot; height=&quot;444&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/06-500x444.png 500w, https://hacks.mozilla.org/files/2018/01/06-250x222.png 250w, https://hacks.mozilla.org/files/2018/01/06-768x682.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So let’s look at how the new compiler works.&lt;/p&gt;
&lt;h3 id=&quot;4ad4&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Streaming compilation: start compiling earlier&lt;/h3&gt;
&lt;p&gt;If you start compiling the code earlier, you’ll finish compiling it earlier. That’s what streaming compilation does… makes it possible to start compiling the .wasm file as soon as possible.&lt;/p&gt;
&lt;p&gt;When you download a file, it doesn’t come down in one piece. Instead, it comes down in a series of packets.&lt;/p&gt;
&lt;p&gt;Before, as each packet in the .wasm file was being downloaded, the browser network layer would put it into an ArrayBuffer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/07.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31718&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/07-500x255.png&quot; alt=&quot;Packets coming in to network layer and being added to an ArrayBuffer&quot; width=&quot;500&quot; height=&quot;255&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/07-500x255.png 500w, https://hacks.mozilla.org/files/2018/01/07-250x127.png 250w, https://hacks.mozilla.org/files/2018/01/07-768x392.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, once that was done, it would move that ArrayBuffer over to the Web VM (aka the JS engine). That’s when the WebAssembly compiler would start compiling.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/08.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31719&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/08-500x218.png&quot; alt=&quot;Network layer pushing array buffer over to compiler&quot; width=&quot;500&quot; height=&quot;218&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/08-500x218.png 500w, https://hacks.mozilla.org/files/2018/01/08-250x109.png 250w, https://hacks.mozilla.org/files/2018/01/08-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But there’s no good reason to keep the compiler waiting. It’s technically possible to compile WebAssembly line by line. This means you should be able to start as soon as the first chunk comes in.&lt;/p&gt;
&lt;p&gt;So that’s what our new compiler does. It takes advantage of WebAssembly’s streaming API.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/09.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31720&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/09-500x132.png&quot; alt=&quot;WebAssembly.instantiateStreaming call, which takes a response object with the source file. This has to be served using MIME type application/wasm.&quot; width=&quot;500&quot; height=&quot;132&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/09-500x132.png 500w, https://hacks.mozilla.org/files/2018/01/09-250x66.png 250w, https://hacks.mozilla.org/files/2018/01/09-768x203.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you give &lt;code&gt;WebAssembly.instantiateStreaming&lt;/code&gt; a response object, the chunks will go right into the WebAssembly engine as soon as they arrive. Then the compiler can start working on the first chunk while the next one is still being downloaded.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/10.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31721&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/10-500x248.png&quot; alt=&quot;Packets going directly to compiler&quot; width=&quot;500&quot; height=&quot;248&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/10-500x248.png 500w, https://hacks.mozilla.org/files/2018/01/10-250x124.png 250w, https://hacks.mozilla.org/files/2018/01/10-768x380.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Besides being able to download and compile the code in parallel, there’s another advantage to this.&lt;/p&gt;
&lt;p&gt;The code section of the .wasm module comes before any data (which will go in the module’s memory object). So by streaming, the compiler can compile the code while the module’s data is still being downloaded. If your module needs a lot of data, the data can be megabytes, so this can be significant.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/11.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31722&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/11-500x260.png&quot; alt=&quot;File split between small code section at the top, and larger data section at the bottom&quot; width=&quot;500&quot; height=&quot;260&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/11-500x260.png 500w, https://hacks.mozilla.org/files/2018/01/11-250x130.png 250w, https://hacks.mozilla.org/files/2018/01/11-768x399.png 768w, https://hacks.mozilla.org/files/2018/01/11.png 1550w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With streaming, we start compiling earlier. But we can also make compiling faster.&lt;/p&gt;
&lt;h3 id=&quot;23fa&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Tier 1 baseline compiler: compile code faster&lt;/h3&gt;
&lt;p&gt;If you want code to run fast, you need to optimize it. But performing these optimizations while you’re compiling takes time, which makes compiling the code slower. So there’s a tradeoff.&lt;/p&gt;
&lt;p&gt;We can have the best of both of these worlds. If we use two compilers, we can have one that compiles quickly without too many optimizations, and another that compiles the code more slowly but creates more optimized code.&lt;/p&gt;
&lt;p&gt;This is called a tiered compiler. When code first comes in, it’s compiled by the Tier 1 (or baseline) compiler. Then, after the baseline compiled code starts running, a Tier 2 compiler goes through the code again and compiles a more optimized version in the background.&lt;/p&gt;
&lt;p&gt;Once it’s done, it hot-swaps the optimized code in for the previous baseline version. This makes the code execute faster.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/12.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31723&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/12-500x204.png&quot; alt=&quot;Timeline showing optimizing compiling happening in the background.&quot; width=&quot;500&quot; height=&quot;204&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/12-500x204.png 500w, https://hacks.mozilla.org/files/2018/01/12-250x102.png 250w, https://hacks.mozilla.org/files/2018/01/12-768x313.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript engines have been using tiered compilers for a long time. However, JS engines will only use the Tier 2 (or optimizing) compiler when a bit of code gets “warm”… when that part of the code gets called a lot.&lt;/p&gt;
&lt;p&gt;In contrast, the WebAssembly Tier 2 compiler will eagerly do a full recompilation, optimizing all of the code in the module. In the future, we may add more options for developers to control how eagerly or lazily optimization is done.&lt;/p&gt;
&lt;p&gt;This baseline compiler saves a lot of time at startup. It compiles code 10–15 times faster than the optimizing compiler. And the code it creates is, in our tests, only 2 times slower.&lt;/p&gt;
&lt;p&gt;This means your code will be running pretty fast even in those first few moments, when it’s still running the baseline compiled code.&lt;/p&gt;
&lt;h3 id=&quot;0453&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Parallelize: make it all even faster&lt;/h3&gt;
&lt;p&gt;In the &lt;a href=&quot;https://hacks.mozilla.org/2017/11/entering-the-quantum-era-how-firefox-got-fast-again-and-where-its-going-to-get-faster/&quot;&gt;article on Firefox Quantum&lt;/a&gt;, I explained coarse-grained and fine-grained parallelization. We use both for compiling WebAssembly.&lt;/p&gt;
&lt;p&gt;I mentioned above that the optimizing compiler will do its compilation in the background. This means that it leaves the main thread available to execute the code. The baseline compiled version of the code can run while the optimizing compiler does its recompilation.&lt;/p&gt;
&lt;p&gt;But on most computers that still leaves multiple cores unused. To make the best use of all of the cores, both of the compilers use fine-grained parallelization to split up the work.&lt;/p&gt;
&lt;p&gt;The unit of parallelization is the function. Each function can be compiled independently, on a different core. This is so fine-grained, in fact, that we actually need to batch these functions up into larger groups of functions. These batches get sent to different cores.&lt;/p&gt;
&lt;h3 id=&quot;5175&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;… then skip all that work entirely by caching it implicitly (future work)&lt;/h3&gt;
&lt;p&gt;Currently, decoding and compiling are redone every time you reload the page. But if you have the same .wasm file, it should compile to the same machine code.&lt;/p&gt;
&lt;p&gt;This means that most of the time, this work could be skipped. And in the future, this is what we’ll do. We’ll decode and compile on first page load, and then cache the resulting machine code in the HTTP cache. Then when you request that URL, it will pull out the precompiled machine code.&lt;/p&gt;
&lt;p&gt;This makes load time disappear for subsequent page loads.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/13.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-31724&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/01/13-500x217.png&quot; alt=&quot;Timeline showing all work disappearing with caching.&quot; width=&quot;500&quot; height=&quot;217&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/01/13-500x217.png 500w, https://hacks.mozilla.org/files/2018/01/13-250x109.png 250w, https://hacks.mozilla.org/files/2018/01/13-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The groundwork is already laid for this feature. We’re &lt;a href=&quot;https://blog.mozilla.org/javascript/2017/12/12/javascript-startup-bytecode-cache/&quot;&gt;caching JavaScript byte code like this&lt;/a&gt; in the Firefox 58 release. We just need to extend this support to caching the machine code for .wasm files.&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;6.5970873786408&quot;&gt;
&lt;p&gt;Lin is an engineer on the Mozilla Developer Relations team. She tinkers with JavaScript, WebAssembly, Rust, and Servo, and also draws code cartoons.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/lclarkmozilla-com/&quot;&gt;More articles by Lin Clark…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Wed, 17 Jan 2018 16:31:40 +0000</pubDate>
<dc:creator>markdog12</dc:creator>
<og:url>https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler</og:url>
<og:title>Making WebAssembly even faster: Firefox’s new streaming and tiering compiler – Mozilla Hacks - the Web developer blog</og:title>
<og:description>People call WebAssembly a game changer because it makes it possible to run code on the web faster. Some speedups are already present, and some are yet to come. With ...</og:description>
<og:image>https://hacks.mozilla.org/files/2018/01/Screenshot-2018-1-17-Making-WebAssembly-even-faster-Firefox’s-new-streaming-and-tiering-compiler-–-Mozilla-Hacks-the-Web-....png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/</dc:identifier>
</item>
<item>
<title>Datomic Cloud</title>
<link>http://blog.datomic.com/2018/01/datomic-cloud.html</link>
<guid isPermaLink="true" >http://blog.datomic.com/2018/01/datomic-cloud.html</guid>
<description>&lt;div&gt;&lt;span&gt;&lt;strong&gt;Datomic on AWS: Easy, Integrated, and Powerful&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;We are excited to announce the release of &lt;/span&gt;&lt;a href=&quot;http://www.datomic.com/&quot;&gt;Datomic Cloud&lt;/a&gt;&lt;span&gt;, making Datomic more accessible than ever before:&lt;/span&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Easy&lt;/strong&gt;&lt;span&gt;: Datomic Cloud is an Amazon Marketplace AMI. &lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrated&lt;/strong&gt;&lt;span&gt;: Datomic Cloud is closely integrated with AWS, &lt;/span&gt;&lt;em&gt;automatically&lt;/em&gt;&lt;span&gt; providing:&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Powerful: &lt;/strong&gt;&lt;span&gt;Datomic Cloud delivers the full Datomic information model&lt;/span&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div&gt;&lt;span&gt;Datomic Cloud is a new product intended for greenfield development on AWS. If you are not yet targeting the cloud, check out what &lt;/span&gt;&lt;a href=&quot;http://www.datomic.com/customers.html&quot;&gt;customers are saying&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;about the established line of Datomic On-Prem products (Datomic Pro and Enterprise).&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-53l7suMbyss/WDw4_QYOk5I/AAAAAAAAANQ/MmACZ8DAbKs6ORN66PZFARUe2W1zinMoQCPcBGAYYCw/s1600/DatomicLogo_Square.png&quot; imageanchor=&quot;1&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; data-original-height=&quot;451&quot; data-original-width=&quot;451&quot; height=&quot;100&quot; src=&quot;https://4.bp.blogspot.com/-53l7suMbyss/WDw4_QYOk5I/AAAAAAAAANQ/MmACZ8DAbKs6ORN66PZFARUe2W1zinMoQCPcBGAYYCw/s200/DatomicLogo_Square.png&quot; title=&quot;&quot; width=&quot;100&quot;/&gt;&lt;/a&gt;&lt;span&gt;Datomic Cloud is accessible through the latest release of the &lt;/span&gt;&lt;a href=&quot;http://docs.datomic.com/cloud/client/client-api.html&quot;&gt;Datomic Client API&lt;/a&gt;&lt;span&gt;. &lt;span&gt;To learn more, you can&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;


</description>
<pubDate>Wed, 17 Jan 2018 14:20:37 +0000</pubDate>
<dc:creator>grzm</dc:creator>
<og:url>http://blog.datomic.com/2018/01/datomic-cloud.html</og:url>
<og:title>Datomic Cloud</og:title>
<og:description> Datomic on AWS: Easy, Integrated, and Powerful We are excited to announce the release of  Datomic Cloud , making Datomic more accessible ...</og:description>
<og:image>https://4.bp.blogspot.com/-53l7suMbyss/WDw4_QYOk5I/AAAAAAAAANQ/MmACZ8DAbKs6ORN66PZFARUe2W1zinMoQCPcBGAYYCw/w1200-h630-p-k-no-nu/DatomicLogo_Square.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.datomic.com/2018/01/datomic-cloud.html</dc:identifier>
</item>
</channel>
</rss>