<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Upwork banned my account for &amp;#039;being dishonest&amp;#039;</title>
<link>https://www.ribice.ba/upwork-suspended/</link>
<guid isPermaLink="true" >https://www.ribice.ba/upwork-suspended/</guid>
<description>&lt;p&gt;There are plenty of articles online despising Upwork. For those that don’t know, Upwork is ‘the world’s largest online workplace where savvy businesses and professional freelancers go to work!’ Once I felt comfortable writing Go - I decided I could take some small side gigs to make connections and earn some extra cash. For reasons still unclear to me, that didn’t last for long.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/upwork.png#c&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I’ve registered on both oDesk and Elance (companies that merged into UpWork) before I was serious about programming. I’ve heard from friends, colleagues and local forums how they earn extra side money by completing some ‘simple’ gigs - translation, transcription, data entry etc. After applying to few gigs, I wasn’t quite successful in getting a gig and decided it wasn’t for me.&lt;/p&gt;
&lt;p&gt;Fast forward few years, being a software developer for 5 years I felt comfortable looking for gigs besides my full-time job. I was mostly interested in small tasks that should take few days to complete. On Upwork, I found plenty of them. The good thing is/was that very few people apply for Golang related gigs - so it isn’t hard to find one.&lt;/p&gt;
&lt;p&gt;The first contract I received was from a client that wanted to implement Swagger into their Go project - lovely. I even wrote an article on that few weeks ago - &lt;a href=&quot;https://ribice.ba/swagger-golang/&quot; target=&quot;_blank&quot;&gt;HERE&lt;/a&gt;. Even though the gig was way underpaid ($15) - I did it mostly to get a positive review, as reviews are very important on such sites. Besides adding the annotations needed for auto-generation of Swagger, the client asked me to fix issue she had with CORS and then to show her how to run swagger locally via Docker.&lt;/p&gt;
&lt;p&gt;Once I did both, the client paid me a total of $45 and left a 5-star review (“Great Guy..Helped me a lot).&lt;/p&gt;
&lt;p&gt;Two days later I get another contract - a simple CLI in Go. Great. Client’s budget was a bigger ($40), although I proposed $50 which he immediately accepted. At the same time, I get an email from Upwork - that I need to verify my identity by a ‘10-minute video chat.’&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/verification-email.png#c&quot; alt=&quot;Profile verification email&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Before starting the verification process, I completed the second gig but didn’t send the code yet - I wanted to review it a bit later.&lt;/p&gt;
&lt;p&gt;I clicked on the link from the email, joined the conversation and turned on my microphone and camera. After the interviewer introduced herself, she asked me for my address, city, country. The call quality was far from perfect, as (from my perspective) she had a very bad connection during the verification process.&lt;/p&gt;
&lt;p&gt;Upon answering these questions, I was asked: “How is it possible to propagate a session id in PHP”.&lt;/p&gt;
&lt;p&gt;“I don’t write PHP” - I replied. She talked a bit more, but I could barely understand her anything due to connection issues.&lt;/p&gt;
&lt;p&gt;“Please wait for an email regarding your account status in 24 hours or less. I appreciate your cooperation. I’ll be closing this chat now. Thank you for contacting Upwork. Have an amazing day!”&lt;/p&gt;
&lt;p&gt;“That went far easier and quicker than I expected. Lovely.” I had no clue what’s going to happen next. Eight minutes later I received the following email:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/verification-suspend.png#c&quot; alt=&quot;Account suspended&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I felt disappointed. I provided everything they asked for, and now my account is suspended for not being honest. I opened another chat instance, that was nearly immediately closed with the message:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;--------------------------------------------------
Agent : Feb 3, 2018, 1:47:26 PM
Hi, Thank you for contacting Upwork! This is Agent M.
Please give me a few minutes to pull up your account.
Please Stay on the Line.

--------------------------------------------------
Visitor : Feb 3, 2018, 1:47:32 PM
OK
--------------------------------------------------
Agent : Feb 3, 2018, 1:49:11 PM
I see that your account has been permanently suspended. For more information
regarding your account status, you will need to contact our Customer Support team
by submitting a support ticket at https://support.upwork.com/hc/en-us/requests/new

Thank you for contacting Upwork.
Have a great day.
Agent M. just closed this chat.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Before I had the time to read this reply the chat was closed. I did open another chat instance few hours later, and instead of saying ‘OK’ wrote the issue I had before chat was closed:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Visitor : Feb 3, 2018, 4:09:07 PM
Hi,

I talked to one of your colleagues today.

After trying to verify my profile (by video, providing my details), my call was closed,
and I received an email that my account was suspended for being dishonest.
I finished work for a client and would like to deliver now, but I'm unsure what 
happens now because my account is suspended.
Can you please look at the ticket and instruct me further how to verify my profile?

Thank you!
--------------------------------------------------
Agent N : Feb 3, 2018, 4:09:23 PM
Good day! This is Agent N and I will be assisting you today.
Please give me a few minutes to pull up your account.
--------------------------------------------------
Agent N : Feb 3, 2018, 4:15:12 PM
Thank you for waiting. I am sorry but your account has been closed and I am unable
to help you any further. There must be an email sent to you that explains why your
account was closed.
--------------------------------------------------
Visitor : Feb 3, 2018, 4:15:41 PM
You can look it up under ticket number: (#TicketNUM)
--------------------------------------------------
Agent N : Feb 3, 2018, 4:16:29 PM
Please refer to the ticket sent to you regarding your issue.
--------------------------------------------------
Agent N : Feb 3, 2018, 4:17:18 PM
I am sorry but your account has been closed and I am unable to help you any further.
--------------------------------------------------
Agent N : Feb 3, 2018, 4:17:26 PM
Thank you for contacting Upwork.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Although I did receive some feedback, it was meaningless. I still didn’t know why my account was suspended.&lt;/p&gt;
&lt;p&gt;I messaged my client, telling him I did finish what he wanted but I’ll wait until tomorrow to send it, hoping that I would resolve my issue by then.&lt;/p&gt;
&lt;p&gt;The next morning I saw a message from the client saying:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hi Emir,

A few minutes ago, I just received an email from Upwork stating:
---
Hello Client,

I’m happy to report that Emir Ribic’s Upwork profile has been verified.
Should you have any questions or need further assistance, please don't hesitate to get in touch.
Regards,

Upwork Trust &amp;amp; Safety
---
Can you test Upwork.com again?

Thanks!
Client
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Obviously, I thought that the issue was resolved and that I can proceed using my account. Instead, when I logged into my account, I noticed that my profile was indeed verified but the account was still suspended. The message I received from their support:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/upwork-verified.jpg#c&quot; alt=&quot;Account verified&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The message clearly states that I can submit proposals and accept offers from client - which was not the case. A paradox - my account was suspended for not being honest during the verification process, a day later I got verified but my account was still suspended.&lt;/p&gt;
&lt;p&gt;I replied to this ticket (as it was a newly created one by their support team) asking whether my account is going to be ‘unsuspended’ but the ticket was closed without any answer.&lt;/p&gt;
&lt;p&gt;As I completed the gig day before, I sent my client the solution we agreed to. Instead of the agreed $50, the client paid me $100 and left a positive review:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Excellent work! Very technically skilled and very detailed oriented.
Developed a very helpful golang solution.
Delivered project early while always delivering amazing, high-quality work!
Very highly recommended!
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I felt quite happy knowing that I helped someone and earned extra $100. On the other hand, my account was still suspended.&lt;/p&gt;
&lt;p&gt;Upwork has a support account on Twitter, to which I sent a message and explained my problem - my account was suspended for no obvious reasons. They did reply:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Hi Emir. I'm sorry to hear about the suspension of your account. Unfortunately,
the suspension of the account was due to a violation of Upwork ToS and, in this case,
I kindly ask you to refer to the notification sent to you about this matter.
We have systems in place to check freelancer accounts to make sure they are not
violating our Terms of Service and suspend accounts as needed.
Please, review our ToS for more reference on this topic.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Was this message automated/scripted? Probably yes. Still, I tried to recall whether I violated their TOS. I did remember that on an occasion or two, I sent a proposal to a client or two including a link to my &lt;a href=&quot;https://ribice.ba/resume&quot; target=&quot;_blank&quot;&gt;resume&lt;/a&gt;. I’ve read from many redditors that they do the same quite often. I felt I might get the job easier if someone lands on this blog, reads the articles and opens my GitHub. At the end, someone from Upwork can use this as an evidence against me - true, as it it violates the ToS, but let’s be honest - if you are freelancing as a software developer, it’s very, very hard not to give any contact information to your client. There are many ways that even if you refuse to communicate outside of UpWork (which I totally support), that you will need to do so. If your client demands usage of git (which they will if the project is anything larger than small tools), you’ll probably share your contact information by committing to that repo (commits contain email and your account info, e.g. GitHub account).&lt;/p&gt;
&lt;p&gt;Not to mention that my name, surname and employment history is publicly available on my profile. A simple google search involving ‘full name + company name’ gets my contact info (I found Linkedin and Facebook).&lt;/p&gt;
&lt;p&gt;Could that be the reason I was suspended? I didn’t have to wait for long. The last client I worked with (Golang CLI tool) contacted me in an hour, telling me that the &lt;strong&gt;money was refunded to him&lt;/strong&gt; with a message containing the reason my account was suspended:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;... Unfortunately, Emir Ribic did not pass our identity screening. ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yet again, they repeat that my account was suspended because I did not pass the identity screening, despite them verifying my account.&lt;/p&gt;
&lt;p&gt;At that time, I opened a thread on UpWork’s community forum (containing same explanation). Two days later I was banned from it (without any proper answer) because ‘my UpWork account is suspended.’ A few hours later, I received two emails (ticket replies) from UpWork’s support.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/upwork-checking.jpg#c&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ribice.ba/img/9/upwork-final-email.jpg#c&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I didn’t reply to this ticket or create a new one. I felt it was enough, even though I still didn’t know the reason my account was suspended. If someone from UpWork reads this and is not a freelancer hired by them (as was the case for every single person from support) I would like to know the real reason.&lt;/p&gt;
&lt;p&gt;I assume the ToS I agreed to while signing up allows them to suspend my account for no particular reason.&lt;/p&gt;
&lt;p&gt;At the end, I would recommend anyone to never focus and rely on a single stream of income. Imagine working hard on building UpWork (or similar site) portfolio, quitting a full-time job to go fully remote, and then getting suspended for no obvious reason.&lt;/p&gt;
</description>
<pubDate>Tue, 13 Feb 2018 13:21:49 +0000</pubDate>
<dc:creator>ribice</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ribice.ba/upwork-suspended/</dc:identifier>
</item>
<item>
<title>Shipping a Neural Network on iOS with CoreML, PyTorch, and React Native</title>
<link>https://attardi.org/pytorch-and-coreml</link>
<guid isPermaLink="true" >https://attardi.org/pytorch-and-coreml</guid>
<description>&lt;p&gt;This is the story of how I trained a simple &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Artificial_neural_network&quot;&gt;neural network&lt;/a&gt; to solve a well-defined yet novel challenge in a real i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; app. The problem is unique, but most of what I cover should apply to any task in any i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; app. That’s the beauty of neural networks.&lt;/p&gt;
&lt;p&gt;I’ll walk you through every step, from problem all the way to App Store. On the way we’ll take a quick detour into an alternative approach using simple math (fail), through tool building, dataset generation, neural network architecting, and PyTorch training. We’ll endure the treacherous Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; model converting to finally reach the React Native &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If this feels like too long a journey, not to worry. You can click the left side of this page to skip around. And if you’re just looking for a tl;dr, here are some links: &lt;a title=&quot;GitHub&quot; href=&quot;https://github.com/steadicat/pytorch-coreml-example&quot;&gt;code&lt;/a&gt;, &lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;test &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt;&lt;/a&gt;, &lt;a title=&quot;App Store&quot; href=&quot;https://itunes.apple.com/us/app/movement-watch-tracker/id1329445157&quot;&gt;i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; app&lt;/a&gt;, and &lt;a title=&quot;Twitter&quot; href=&quot;https://twitter.com/steadicat&quot;&gt;my Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;the-challenge&quot;&gt;The Challenge&lt;/h3&gt;
&lt;p&gt;I recently built &lt;a title=&quot;App Store&quot; href=&quot;https://itunes.apple.com/us/app/movement-watch-tracker/id1329445157&quot;&gt;a little i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; app&lt;/a&gt; for mechanical watch fanciers to track the accuracy of their watches over time.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;app store&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/app-store-f5a064ae08576cda97bdeca13f42f4b4-055fb.png&quot; srcset=&quot;/static/app-store-f5a064ae08576cda97bdeca13f42f4b4-73996.png 140w, /static/app-store-f5a064ae08576cda97bdeca13f42f4b4-ef45e.png 280w, /static/app-store-f5a064ae08576cda97bdeca13f42f4b4-055fb.png 560w, /static/app-store-f5a064ae08576cda97bdeca13f42f4b4-ca23e.png 737w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;a title=&quot;App Store&quot; href=&quot;https://itunes.apple.com/us/app/movement-watch-tracker/id1329445157&quot;&gt;Movement - Watch Tracker&lt;/a&gt; introducing itself in the App Store.
&lt;p&gt;In the app, watch owners add measurements by tapping the screen when their watch shows a certain time. Over time these measurements tell the story of how each watch is performing.&lt;/p&gt;
&lt;blockquote readability=&quot;19&quot;&gt;
&lt;h5 id=&quot;mechanical-watch-rabbit-hole&quot;&gt;Mechanical Watch Rabbit Hole&lt;/h5&gt;
&lt;p&gt;If you don’t own a mechanical watch, you may be thinking: what’s the point? The point of the app? No, the point of mechanical watches! My $40 Swatch is perfectly accurate. So is my iPhone, for that matter. I see, you’re one of &lt;em&gt;those&lt;/em&gt;. Bear with me. Just know that mechanical watches gain or lose a few seconds every day – if they’re good. Bad ones stray by a few &lt;em&gt;minutes&lt;/em&gt;. Good or bad, they stop running if you don’t wind them. Either way you need to reset them often. And you need to service them. If they come anywhere near a magnet, they start running wild until an expert waves a special machine around them while muttering a few incantations.&lt;/p&gt;
&lt;p&gt;True watch lovers obsess about caring for their watches, and measuring their accuracy is an importart part of the ritual. How else would you know yours is the best? Or if it needs service? It also helps in the rare case you might want to – you know – tell what time it is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The main feature of the app is a little chart, with points plotting how your watch has deviated from current time, and trendlines estimating how your watch is doing.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;charts&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/charts-652856d6680300dccabd9679342262da-055fb.png&quot; srcset=&quot;/static/charts-652856d6680300dccabd9679342262da-73996.png 140w, /static/charts-652856d6680300dccabd9679342262da-ef45e.png 280w, /static/charts-652856d6680300dccabd9679342262da-055fb.png 560w, /static/charts-652856d6680300dccabd9679342262da-c474d.png 840w, /static/charts-652856d6680300dccabd9679342262da-7a6e5.png 1120w, /static/charts-652856d6680300dccabd9679342262da-18fd4.png 1125w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
Watch charts and trendlines in the app.
&lt;p&gt;Computing a trendline given some points is easy. Use a &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Linear_regression&quot;&gt;linear regression&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, mechanical watches need to be reset to the current time often. Maybe they drift too far from current time, or maybe you neglect a watch for a day or two, it runs out of juice, and stops. These events create a “break” in the trendline. For example:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;trendlines&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-055fb.png&quot; srcset=&quot;/static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-73996.png 140w, /static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-ef45e.png 280w, /static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-055fb.png 560w, /static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-c474d.png 840w, /static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-7a6e5.png 1120w, /static/trendlines-7e64fa97daa87060eedc030fb6e91bb2-18fd4.png 1125w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
Two clearly separate runs: each gets a trendline.
&lt;p&gt;I didn’t wear that watch for a couple of days. When I picked it up again, I had to start over from zero.&lt;/p&gt;
&lt;p&gt;I wanted the app to show separate trendlines for each of these runs, but I didn’t want my users to have to do extra work. I would automatically figure out where to split the trendlines. How hard could it be?&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;failures&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/failures-ec8dc103099d3da78f1245fadd8ded58-055fb.png&quot; srcset=&quot;/static/failures-ec8dc103099d3da78f1245fadd8ded58-73996.png 140w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-ef45e.png 280w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-055fb.png 560w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-c474d.png 840w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-7a6e5.png 1120w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-d1a2f.png 1680w, /static/failures-ec8dc103099d3da78f1245fadd8ded58-af5ef.png 2267w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
Turns out, pretty hard.
&lt;p&gt;My plan was to Google my way out the problem, as one does. I soon found the right keywords: &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Segmented_regression&quot;&gt;segmented regression&lt;/a&gt;, and &lt;a href=&quot;https://onlinecourses.science.psu.edu/stat501/node/310&quot;&gt;piecewise linear regression&lt;/a&gt;. Then I found one person who &lt;a href=&quot;https://www.datadoghq.com/blog/engineering/piecewise-regression/&quot;&gt;solved this exact problem using basic math&lt;/a&gt;. Jackpot!&lt;/p&gt;
&lt;p&gt;Or not. That approach tries to split the trendline at every possible point and then decides which splits to keep based on how much they improve the mean squared error. Worth a shot, I guess.&lt;/p&gt;
&lt;p&gt;Turns out this solution is very sensitive to the parameters you pick, like how much lower the error needs to be for a split to be considered worth keeping. So I built a &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; to help me tweak the parameters. You can &lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;see what it looks like here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;test ui&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/test-ui-fbaf04f2dd763ca2cf71b72606513635-055fb.png&quot; srcset=&quot;/static/test-ui-fbaf04f2dd763ca2cf71b72606513635-73996.png 140w, /static/test-ui-fbaf04f2dd763ca2cf71b72606513635-ef45e.png 280w, /static/test-ui-fbaf04f2dd763ca2cf71b72606513635-055fb.png 560w, /static/test-ui-fbaf04f2dd763ca2cf71b72606513635-c474d.png 840w, /static/test-ui-fbaf04f2dd763ca2cf71b72606513635-98c03.png 854w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;The UI&lt;/a&gt; I used to create and visualize examples, with hot reload for paramater tuning.
&lt;p&gt;No matter how I tweaked the parameters, the algorithm was either splitting too frequently, or not frequently enough. This approach wasn’t going to cut it.&lt;/p&gt;
&lt;p&gt;I’ve experimented for years with neural networks, but never yet had had the opportunity to use one in a shipping app. This was my chance!&lt;/p&gt;
&lt;h3 id=&quot;the-tools&quot;&gt;The Tools&lt;/h3&gt;
&lt;p&gt;I reached for my neural networking tools. My mind was set that this would not just be another experiment, so I had one question to answer first: how would I deploy my trained model? Many tutorials sign off at the end of training and leave this part out.&lt;/p&gt;
&lt;p&gt;This being an i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; app, the obvious answer was &lt;a href=&quot;https://developer.apple.com/documentation/coreml&quot;&gt;Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;&lt;/a&gt;. It’s the only way I know of to run predictions on the &lt;span class=&quot;caps&quot;&gt;GPU&lt;/span&gt;; last I checked &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/CUDA&quot;&gt;&lt;span class=&quot;caps&quot;&gt;CUDA&lt;/span&gt;&lt;/a&gt; was not available on i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Another benefit of Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; is that it’s built in to the &lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt;, so I wouldn’t need to worry about compiling, linking, and shipping binaries of &lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; libraries with my little app.&lt;/p&gt;
&lt;blockquote readability=&quot;8.7260034904014&quot;&gt;
&lt;h5 id=&quot;coreml-caveats&quot;&gt;Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; Caveats&lt;/h5&gt;
&lt;p&gt;Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; is quite new. It only supports &lt;a href=&quot;https://apple.github.io/coremltools/coremlspecification/sections/NeuralNetwork.html&quot;&gt;a subset of all possible layers and operations&lt;/a&gt;. The &lt;a href=&quot;https://developer.apple.com/documentation/coreml/converting_trained_models_to_core_ml&quot;&gt;tools that Apple ships&lt;/a&gt; only convert models trained with &lt;a href=&quot;https://keras.io&quot;&gt;Keras&lt;/a&gt;. Ironically, Keras models don’t seem to perform well on Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;. If you profile a converted Keras model you’ll notice a great deal of time spent shuffling data into Caffe operations and back. It seems likely that Apple uses Caffe internally, and Keras support was tacked on. Caffe does not strike me as a great compile target for a Keras/TensorFlow model. Especially if you’re not dealing with images.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’d had mixed luck converting &lt;a href=&quot;https://keras.io&quot;&gt;Keras&lt;/a&gt; models to Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;, which is the Apple-sanctioned path (see box above), so was on the hunt for other ways to generate Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; models. Meanwhile, I was looking for an excuse to try out &lt;a href=&quot;http://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; (see box below). Somewhere along the way I stumbled upon &lt;a href=&quot;https://onnx.ai/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;&lt;/a&gt;, a proposed standard exchange format for neural network models. PyTorch is supported from day one. It occurred to me to look for an &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt; to Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; converter, and sure enough, &lt;a title=&quot;GitHub&quot; href=&quot;https://github.com/onnx/onnx-coreml&quot;&gt;one exists&lt;/a&gt;!&lt;/p&gt;
&lt;blockquote readability=&quot;24&quot;&gt;
&lt;h5 id=&quot;what-about-keras-and-tensorflow&quot;&gt;What about Keras and TensorFlow?&lt;/h5&gt;
&lt;p&gt;Like most people, I cut my neural teeth on TensorFlow. But my honeymoon period had ended. I was getting weary of the kitchen-sink approach to library management, the huge binaries, and the extremely slow startup times when training. TensorFlow &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;s are a sprawling mess. Keras mitigates that problem somewhat, but it’s a leaky abstraction. Debugging is hard if you don’t understand how things work underneath.&lt;/p&gt;
&lt;p&gt;PyTorch is a breath of fresh air. It’s faster to start up, which makes iterating more immediate and fun. It has a smaller &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;, and a simpler execution model. Unlike TensorFlow, it does not make you build a computation graph in advance, without any insight or control of how it gets executed. It feels much more like regular programming, it makes things easier to debug, and also enables more dynamic architectures – which I haven’t used yet, but a boy can dream.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I finally had all the pieces of the puzzle. I knew how I would train the network and I knew how I would deploy it on i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt;. However, I knew from some of my earlier experiments that many things could still go wrong. Only one way to find out.&lt;/p&gt;
&lt;h3 id=&quot;gathering-the-training-data&quot;&gt;Gathering the Training Data&lt;/h3&gt;
&lt;p&gt;In my experience with neural networks, assembling a large-enough quality dataset to train on is the hardest part. I imagine this is why most papers and tutorials start with a well-known public dataset, like &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/MNIST_database&quot;&gt;&lt;span class=&quot;caps&quot;&gt;MNIST&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, I like neural networks precisely because they can be applied to new and interesting problems. So I craft brew my own micro-datasets. Since my datasets are small, I limit myself to problems that are slightly more manageable than your run-of-the-mill Van Gogh-style portrait generation project.&lt;/p&gt;
&lt;p&gt;Fortunately, the problem at hand is simple (or so I thought), so a small dataset should do. On top of that, it’s a visual problem, so generating data and evaluating the neural networks should be easy… given a mouse, a pair of eyes, and the right tool.&lt;/p&gt;
&lt;h4 id=&quot;the-test-ui&quot;&gt;The Test &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;I had the perfect &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; already. I’d built it to tweak the parameters of my simple-math algorithm and see the effects in real time. It didn’t take me long to convert it into a &lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; for generating training examples&lt;/a&gt;. I added the option to specify where I thought runs should split.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;test ui nn&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-055fb.png&quot; srcset=&quot;/static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-73996.png 140w, /static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-ef45e.png 280w, /static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-055fb.png 560w, /static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-c474d.png 840w, /static/test-ui-nn-fb2d57b280996ce0efc1cbcee5f1dda0-15dea.png 851w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;Test UI&lt;/a&gt; with manually-entered splits, and red boxes around incorrect predictions.
&lt;p&gt;With a few clicks and a &lt;code&gt;JSON.stringify&lt;/code&gt; call, I had enough data to jump into Python.&lt;/p&gt;
&lt;blockquote readability=&quot;10.689130434783&quot;&gt;
&lt;h5 id=&quot;parcel&quot;&gt;Parcel&lt;/h5&gt;
&lt;p&gt;As an experienced web developer, I knew building this &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; as a web app with React was going to be easy. However, there was one part I was dreading, even though I’ve done it dozens of times before: configuring &lt;a href=&quot;https://webpack.js.org&quot;&gt;Webpack&lt;/a&gt;. So I took this as an opportunity to try &lt;a href=&quot;https://parceljs.org&quot;&gt;Parcel&lt;/a&gt;. Parcel worked out-of-the-box with zero configuration. It even worked with TypeScript. And hot code reload. I was able to have a fully working web app faster than typing &lt;code&gt;create-react-app&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;preprocessing-the-data&quot;&gt;Preprocessing the Data&lt;/h3&gt;
&lt;p&gt;Another common hurdle when designing a neural network is finding the optimal way to encode something fuzzy, like text of varying lengths, into numbers a neural networks can understand. Thankfully, the problem at hand is numbers to begin with.&lt;/p&gt;
&lt;p&gt;In my dataset, each example is a series of &lt;code&gt;[x, y]&lt;/code&gt; coordinates, one for each of the points in the input. I also have a list of coordinates for each of the splits that I’ve manually entered – which is what I will be training the network to learn.&lt;/p&gt;
&lt;p&gt;The above, as &lt;span class=&quot;caps&quot;&gt;JSON&lt;/span&gt;, looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;48&quot;&gt;
&lt;pre class=&quot;language-json&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;points&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;152&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;94&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;175&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;118&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;156&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;247&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;279&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;89&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;329&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;369&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;392&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;422&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;119&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;461&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;470&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;525&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;93&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;542&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;114&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;582&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;138&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;splits&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token number&quot;&gt;235&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token number&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token number&quot;&gt;467&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All I had to do to feed the list of points into a neural network was to pad it to a fixed length. I picked a number that felt large enough for my app (100). So I fed the network a 100-long series of pairs of floats (a.k.a. a tensor of shape &lt;code&gt;[100, 2]&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;29&quot;&gt;
&lt;pre class=&quot;language-json&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;69&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;152&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;94&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;175&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;118&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;156&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;247&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;279&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;89&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ... &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output is a series of bits, with ones marking a position where the trendline should be split. This will be in the shape &lt;code&gt;[100]&lt;/code&gt; – i.e. array of length 100.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;language-json&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ... &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are only 99 possible splits, since it doesn’t make sense to split at position 100. However, keeping the length the same simplifies the neural network. I’ll ignore the final bit in the output.&lt;/p&gt;
&lt;p&gt;As the neural network tries to approximate this series of ones and zeros, each output number will fall somewhere in-between. We can interpret those as the probability that a split should happen at a certain point, and split anywhere above a certain confidence value (typically 0.5).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;27&quot;&gt;
&lt;pre class=&quot;language-json&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.0002&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1057&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.0020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.3305&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.9997&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ... &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, you can see that the network is pretty confident we should split at positions 5 and 13 (correct!), but it’s not so sure about position 8 (wrong). It also thinks 12 might be a candidate, but not confident enough to call it (correct).&lt;/p&gt;
&lt;h4 id=&quot;encoding-the-inputs&quot;&gt;Encoding the Inputs&lt;/h4&gt;
&lt;p&gt;I like to factor out the data encoding logic into its own function, as I often need it in multiple places (training, evaluation, and sometimes even production).&lt;/p&gt;
&lt;p&gt;My &lt;code&gt;encode&lt;/code&gt; function takes a single example (a series of points of variable length), and returns a fixed-length tensor. I started with something that returned an empty tensor of the right shape:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    input_tensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zeros&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; input_tensor
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can already use this to start training and running your neural network, before you put in any real data. It won’t learn anything useful, but at least you’ll know your architecture works before you invest more time into preparing your data.&lt;/p&gt;
&lt;p&gt;Next I fill in the tensor with data:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    input_tensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zeros&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;padded_length&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        input_tensor&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt; 
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        input_tensor&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; input_tensor
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;h5 id=&quot;order-of-coordinates-in-pytorch-vs-tensorflow&quot;&gt;Order of Coordinates in PyTorch vs TensorFlow&lt;/h5&gt;
&lt;p&gt;If you’re paying attention, you might have noticed that the x/y coordinate comes before the position. In other words, the shape of each example is &lt;code&gt;[2, 100]&lt;/code&gt;, not &lt;code&gt;[100, 2]&lt;/code&gt; as you would expect – especially if you’re coming from TensorFlow. PyTorch convolutions (see later) expect coordinates in a different order: the &lt;em&gt;channel&lt;/em&gt; (x/y in this case, r/g/b in case of an image) comes before the index of the point.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;normalization&quot;&gt;Normalization&lt;/h4&gt;
&lt;p&gt;I now have the data in a format the neural network can accept. I could stop here, but it’s good practice to normalize the inputs so that the values cluster around 0. This is where floating point numbers have the highest precision.&lt;/p&gt;
&lt;p&gt;I find the minimum and maximum coordinates in each example and scale everything proportionally.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch

&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    min_x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    max_x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    min_y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ys&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    max_y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ys&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    y_shift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_y &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;
&lt;/span&gt;    
    
    input_tensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zeros&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padded_length&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;normalize_x&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;normalize_y&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max_x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; min_x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; y_shift
&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;padded_length&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        input_tensor&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; normalize_x&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        input_tensor&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; normalize_y&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;        &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; input_tensor
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;h5 id=&quot;processing-inside-the-network&quot;&gt;Processing Inside the Network&lt;/h5&gt;
&lt;p&gt;Many of the operations I’m writing in Python, like normalization, casting, etc., are available as operations inside most machine learning libraries. You could implement them that way, and they would be more efficient, potentially even running on the &lt;span class=&quot;caps&quot;&gt;GPU&lt;/span&gt;. However, I found that most of these operations are not supported by Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;16&quot;&gt;
&lt;h5 id=&quot;what-about-feature-engineering&quot;&gt;What about Feature Engineering?&lt;/h5&gt;
&lt;p&gt;Feature engineering is the process of further massaging the input in order to give the neural network a head-start. For example, in this case I could feed it not only the &lt;code&gt;[x, y]&lt;/code&gt; of each point, but also the distance, horizontal and vertical gaps, and slope of the line between each pair. However, I choose to believe that my neural network can learn to compute whatever it needs out of the input. In fact, I did try feeding a bunch of derived values as input, but that did not seem to help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;the-model&quot;&gt;The Model&lt;/h3&gt;
&lt;p&gt;Now comes the fun part, actually defining the neural network architecture. Since I’m dealing with spatial data, I reached for my favorite kind of neural network layer: the convolution.&lt;/p&gt;
&lt;h4 id=&quot;convolution&quot;&gt;Convolution&lt;/h4&gt;
&lt;p&gt;I think of convolution as code reuse for neural networks. A typical fully-connected layer has no concept of space and time. By using convolutions, you’re telling the neural network it can reuse what it learned across certain dimensions. In my case, it doesn’t matter where in the sequence a certain pattern occurs, the logic is the same, so I use a convolution across the time dimension.&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;h5 id=&quot;convolutions-as-performance-optimizations&quot;&gt;Convolutions as Performance Optimizations&lt;/h5&gt;
&lt;p&gt;An important realization is that, though convolutions sound… convoluted, their main benefit is that they actually simplify the network. By reusing logic, networks get smaller. Smaller networks need less data and are faster to train.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;16.655763239875&quot;&gt;
&lt;h5 id=&quot;what-about-rnns&quot;&gt;What about &lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s?&lt;/h5&gt;
&lt;p&gt;Recurrent neural networks (&lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s) are popular when dealing with sequential data. Roughly speaking, instead of looking at all the input at once, they process the sequence in order, build up a “memory” of what happened before, and use that memory to decide what happens next. This makes them a great fit for any sequence. However, &lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s are more complex, and as such take more time – and more data – to train. For smaller problems like this, &lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s tend to be overkill. Plus, &lt;a href=&quot;https://code.facebook.com/posts/1978007565818999/a-novel-approach-to-neural-machine-translation/&quot;&gt;recent papers&lt;/a&gt; have shown that properly designed &lt;span class=&quot;caps&quot;&gt;CNN&lt;/span&gt;s can achieve similar results faster than &lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s, even at tasks on which &lt;span class=&quot;caps&quot;&gt;RNN&lt;/span&gt;s traditionally shine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;architecture&quot;&gt;Architecture&lt;/h4&gt;
&lt;p&gt;Convolutions are very spatial, which means you need to have an excellent intuitive understanding of the shape of the data they expect as input and the shape of their output. I tend to sketch or visualize diagrams like these when I design my convolutional layers:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;diagram&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/diagram-af9a10acd36978e8a185d820c89a55d5-055fb.png&quot; srcset=&quot;/static/diagram-af9a10acd36978e8a185d820c89a55d5-73996.png 140w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-ef45e.png 280w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-055fb.png 560w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-c474d.png 840w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-7a6e5.png 1120w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-d1a2f.png 1680w, /static/diagram-af9a10acd36978e8a185d820c89a55d5-9d90f.png 2196w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
Diagram of the stacked convolutional layers and their shapes.
&lt;p&gt;The diagram shows the shapes of the functions (a.k.a. &lt;em&gt;kernels&lt;/em&gt;) that convert each layer into the next by sliding over the input from beginning to end, one slot at a time.&lt;/p&gt;
&lt;p&gt;I’m stacking convolutional layers like this for two reasons. First, stacking layers in general has been shown to help networks learn progressively more abstract concepts – this is why &lt;em&gt;deep learning&lt;/em&gt; is so popular. Second, as you can see from the diagram above, with each stack the kernels &lt;em&gt;fan out&lt;/em&gt;, like an upside-down tree. Each bit in the output layer gets to “see” more and more of the input sequence. This is my way of giving each point in the output more information about its context.&lt;/p&gt;
&lt;p&gt;The aim is to tweak the various parameters so the network progressively transforms the shape of the input into the shape of my output. Meanwhile I adjust the third dimension (depth) so that there’s enough “room” to carry forward just the right amount of information from the previous layers. I don’t want my layers to be too small, otherwise there might be too much information lost from the previous layers, and my network will struggle to make sense of anything. I don’t want them to be too big either, because they’ll take longer to train, and, quite likely, they’ll have enough “memory” to learn each of my examples individually, instead of being forced to create a summary that might be better at generalizing to never-before-seen examples.&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;h5 id=&quot;no-fully-connected-layers&quot;&gt;No Fully-Connected Layers?&lt;/h5&gt;
&lt;p&gt;Most neural networks, even convolutional ones, use one or more “fully-connected” (a.k.a. “dense”) layers, i.e. the simplest kind of layer, where every neuron in the layer is connected to every neuron in the previous layer. The thing about dense layers is that they have no sense of space (hence the name “dense”). Any spatial information is lost. This makes them great for typical classification tasks, where your output is a series of labels for the whole input. In my case, the output is as sequential as the input. For each point in the input there’s a probability value in the output representing whether to split there. So I want to keep the spatial information all the way through. No dense layers here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;pytorch-model&quot;&gt;PyTorch Model&lt;/h4&gt;
&lt;p&gt;To install PyTorch, I followed the instructions on the &lt;a href=&quot;http://pytorch.org/&quot;&gt;PyTorch homepage&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; http://download.pytorch.org/whl/torch-0.3.0.post4-cp27-none-macosx_10_6_x86_64.whl
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how the above structure translates to PyTorch code. I subclass &lt;code&gt;nn.Module&lt;/code&gt;, and in the constructor I define each layer I need. I’m choosing padding values carefully to preserve the length of my input. So if I have a convolution kernel that’s 7 wide, I pad by 3 on each side so that the kernel still has room to center on the first and last positions.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;31&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nn &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; nn

input_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
intermediate_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;
output_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Module&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__init__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;input_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv3 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv4 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;output_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sigmoid&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All the layers use the popular &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Rectifier_(neural_networks)&quot;&gt;Re&lt;span class=&quot;caps&quot;&gt;LU&lt;/span&gt;&lt;/a&gt; activation function, except the last one which uses a &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Sigmoid_function&quot;&gt;sigmoid&lt;/a&gt;. That’s so the output values get squashed into the 0–1 range, so they fall somewhere between the ones and zeros I’m providing as target values. Conveniently, numbers in this range can be interpreted as probabilities, which is why the sigmoid activation function is popular in the final layer of neural networks designed for classification tasks.&lt;/p&gt;
&lt;p&gt;The next step is to define a &lt;code&gt;forward()&lt;/code&gt; method, which will actually be called on each batch of your data during training:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nn &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; nn

input_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
intermediate_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;
output_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Module&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__init__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;input_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv3 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv4 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv1d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;output_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sigmoid&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv1&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv2&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv3&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv4&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forward&lt;/code&gt; method feeds the data through the convolutional layers, then flattens the output and returns it.&lt;/p&gt;
&lt;p&gt;This method is what makes PyTorch feel really different than TensorFlow. You’re writing real Python code that will actually be executed during training. If errors happen, they will happen in this function, which is code you wrote. You can even add print statements to see the data you’re getting and figure out what’s going on.&lt;/p&gt;
&lt;h3 id=&quot;training&quot;&gt;Training&lt;/h3&gt;
&lt;p&gt;To train a network in PyTorch, you create a dataset, wrap it in a data loader, then loop over it until your network has learned enough.&lt;/p&gt;
&lt;h4 id=&quot;pytorch-dataset&quot;&gt;PyTorch Dataset&lt;/h4&gt;
&lt;p&gt;To create a dataset, I subclass &lt;code&gt;Dataset&lt;/code&gt; and define a constructor, a &lt;code&gt;__len__&lt;/code&gt; method, and a &lt;code&gt;__getitem__&lt;/code&gt; method. The constructor is the perfect place to read in my &lt;span class=&quot;caps&quot;&gt;JSON&lt;/span&gt; file with all the examples:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; json
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;utils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Dataset

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PointsDataset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'data.json'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I return the length in &lt;code&gt;__len__&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; json
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;utils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Dataset

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PointsDataset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'data.json'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__len__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I return the input and output data for a single example from &lt;code&gt;__getitem__&lt;/code&gt;. I use &lt;code&gt;encode()&lt;/code&gt; defined earlier to encode the input. To encode the output, I create a new tensor of the right shape, fill it with zeros, and insert a 1 at every position where there should be a split.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; json
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;utils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Dataset

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PointsDataset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'data.json'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__len__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__getitem__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; idx&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        example &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;examples&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;idx&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        input_tensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;example&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        output_tensor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zeros&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; split_position &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; example&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'splits'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            index &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;                &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;example&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'points'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; split_position&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            output_tensor&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; input_tensor&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; output_tensor
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I then instantiate the dataset:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;dataset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; PointsDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;setting-aside-a-validation-set&quot;&gt;Setting Aside a Validation Set&lt;/h4&gt;
&lt;p&gt;I need to set aside some of the data to keep track of how my learning is going. This is called a &lt;em&gt;validation set&lt;/em&gt;. I like to automatically split out a random subset of examples for this purpose. PyTorch doesn’t provide an easy way to do that out of the box, so I used &lt;a title=&quot;GitHub&quot; href=&quot;https://github.com/pytorch/tnt&quot;&gt;PyTorchNet&lt;/a&gt;. It’s not in Py&lt;span class=&quot;caps&quot;&gt;PI&lt;/span&gt;, so I installed it straight from GitHub:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; git+https://github.com/pytorch/tnt.git
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I shuffle the dataset right before splitting it, so that the split is random. I take out 10% of my examples for the validation dataset.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torchnet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataset &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SplitDataset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ShuffleDataset
&lt;/span&gt;
dataset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; PointsDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;dataset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SplitDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ShuffleDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'validation'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;SplitDataset&lt;/code&gt; will let me switch between the two datasets as I alternate between training and validation later.&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;h5 id=&quot;test-set&quot;&gt;Test Set&lt;/h5&gt;
&lt;p&gt;It’s customary to set aside a third set of examples, called the &lt;em&gt;test set&lt;/em&gt;, which you never touch as you’re developing the network. The test set is used to confirm that your accuracy on the validation set was not a fluke. For now, with a dataset this small, I don’t have the luxury of keeping more data out of the training set. As for sanity checking my accuracy… running in production with real data will have to do!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;pytorch-dataloader&quot;&gt;PyTorch DataLoader&lt;/h4&gt;
&lt;p&gt;One more hoop to jump through. Data loaders spit out data from a dataset in batches. This is what you actually feed the neural network during training. I create a data loader for my dataset, configured to produce batches that are small and randomized.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torchnet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataset &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SplitDataset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ShuffleDataset

dataset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; PointsDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data_file&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
dataset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SplitDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ShuffleDataset&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'validation'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;loader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DataLoader&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; shuffle&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; batch_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;the-training-loop&quot;&gt;The Training Loop&lt;/h4&gt;
&lt;p&gt;Time to start training! First I tell the model it’s time to train:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I start my loop. Each iteration is called an &lt;em&gt;epoch&lt;/em&gt;. I started with a small number of epochs and then experimented to find the optimal number later.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Select our training dataset:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I iterate over the whole dataset in batches. The data loader will very conveniently give me inputs and outputs for each batch. All I need to do is wrap them in a PyTorch &lt;code&gt;Variable&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autograd &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Variable
&lt;/span&gt;
model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I feed the model! The model spits out what it thinks the output should be.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that I do some fancy math to figure out how far off the model is. Most of the complexity is so that I can ignore (“mask”) the output for points that are just padding. The interesting part is the &lt;code&gt;F.mse_loss()&lt;/code&gt; call, which is the mean squared error between the guessed output and what the output should actually be.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dim&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        float_mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        masked_logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; logits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        masked_target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        loss &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; F&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mse_loss&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logits&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I &lt;em&gt;backpropagate&lt;/em&gt;, i.e. take that error and use it to tweak the model to be more correct next time. I need an &lt;em&gt;optimizer&lt;/em&gt; to do this work for me:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;optimizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;optim&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Adam&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parameters&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dim&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        float_mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        masked_logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; logits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        masked_target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        loss &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; F&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mse_loss&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logits&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        optimizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zero_grad&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        loss&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;backward&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        optimizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;step&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once I’ve gone through all the batches, the epoch is over. I use the validation dataset to calculate and print out how the learning is going. Then I start over with the next epoch. The code in the &lt;code&gt;evaluate()&lt;/code&gt; function should look familiar. It does the same work I did during training, except using the validation data and with some extra metrics.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;train&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
optimizer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;optim&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Adam&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parameters&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dim&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        float_mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        masked_logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; logits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        masked_target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        loss &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; F&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mse_loss&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logits&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        
        optimizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;zero_grad&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        loss&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;backward&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        optimizer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;step&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    dataset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;select&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'validation'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    validation_loss&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; validation_accuracy&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; correct&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; evaluate&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'\r[{:4d}] - validation loss: {:8.6f} - validation accuracy: {:6.3f}% ({}/{} correct)'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        epoch &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        validation_loss&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        validation_accuracy&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        correct&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        total
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    sys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stdout&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;flush&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;evaluate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    inputs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    inputs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inputs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dim&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    correct &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eq&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    total &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mask&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    accuracy &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100.0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; correct &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; total
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    float_mask &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    masked_logits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; logits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    masked_target &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mul&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;float_mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    loss &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; F&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mse_loss&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logits&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;loss&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; accuracy&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; correct&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; total
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time to run it. This is what the output looks like.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   1&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.084769 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   2&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.017048 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   3&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016706 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   4&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016682 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   5&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016677 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016675 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   7&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016674 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   8&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016674 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;   9&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016674 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;  10&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.016673 - validation accuracy: 86.667% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;52/60 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 990&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008275 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 991&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008275 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 992&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008286 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 993&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008291 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 994&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008282 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 995&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008292 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 996&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008293 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 997&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008297 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 998&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008345 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; 999&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008338 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;1000&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; validation loss: 0.008318 - validation accuracy: 92.308% &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;48/52 correct&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see the network learns pretty quickly. In this particular run, the accuracy on the validation set was already at 87% at the end of the first epoch, peaked at 94% around epoch 220, then settled at around 92%. (I probably could have stopped it sooner.)&lt;/p&gt;
&lt;blockquote readability=&quot;9.8033472803347&quot;&gt;
&lt;h5 id=&quot;spot-instances&quot;&gt;Spot Instances&lt;/h5&gt;
&lt;p&gt;This network is small enough to train in a couple of minutes on my poor old first-generation &lt;a href=&quot;https://www.apple.com/macbook/&quot;&gt;Macbook Adorable&lt;/a&gt;. For training larger networks, nothing beats the price/performance ratio of an &lt;a href=&quot;https://aws.amazon.com/ec2/spot/pricing/&quot;&gt;&lt;span class=&quot;caps&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;GPU&lt;/span&gt;-optimized spot instance&lt;/a&gt;. If you do a lot of machine learning and can’t afford a &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Nvidia_Tesla&quot;&gt;Tesla&lt;/a&gt;, you owe it to yourself to write a little script to spin up an instance and run training on it. There are great &lt;span class=&quot;caps&quot;&gt;AMI&lt;/span&gt;s available that come with everything required, including &lt;span class=&quot;caps&quot;&gt;CUDA&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;evaluating&quot;&gt;Evaluating&lt;/h3&gt;
&lt;p&gt;My accuracy results were pretty decent out of the gate. To truly understand how the network was performing, I fed the output of the network back into the &lt;a href=&quot;https://attardi.org/pytorch-and-coreml-test-ui/&quot;&gt;test &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt;&lt;/a&gt;, so I could visualize how it succeeded and how it failed.&lt;/p&gt;
&lt;p&gt;There were many difficult examples where it was spot on, and it made me a proud daddy:&lt;/p&gt;
&lt;p&gt;As the network got better, I started thinking up more and more evil examples. Like this pair:&lt;/p&gt;
&lt;p&gt;I soon realized that the problem was way harder than I had imagined. Still, the network did well. It got to the point where I would cook up examples I was not be sure how to split myself. I would trust the network to figure it out. Like with this crazy one:&lt;/p&gt;
&lt;p&gt;Even when it “fails”, according to my arbitrary inputs, it’s arguably just as correct as I am. Sometimes it even makes me question my own judgment. Like, what was I thinking here?&lt;/p&gt;
&lt;p&gt;No, it’s not perfect. Here’s an example where it clearly fails. I forgive it though: I might have made that mistake myself.&lt;/p&gt;
&lt;p&gt;I’m quite satisfied with these results. I’m cheating a little bit here, since most of these examples I’ve already used to train the network. Running in the app on real data will be the real test. Still, this looks much more promising than the simple approach I used earlier. Time to ship it!&lt;/p&gt;
&lt;h3 id=&quot;deploying&quot;&gt;Deploying&lt;/h3&gt;
&lt;h4 id=&quot;adapting-to-onnxcoreml&quot;&gt;Adapting to &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;/Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;I’m not gonna lie, this was the scariest part. The conversion to Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; is a minefield covered in roadblocks and littered with pitfalls. I came close to giving up here.&lt;/p&gt;
&lt;p&gt;My first struggle was getting all the types right. On my first few tries I fed the network integers (such is my input data), but some type cast was causing the Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; conversion to fail. In this case I worked around it by explicitly casting my inputs to floats during preprocessing. With other networks – especially ones that use &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Word_embedding&quot;&gt;embeddings&lt;/a&gt; – I haven’t been so lucky.&lt;/p&gt;
&lt;p&gt;Another issue I ran into is that &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;-Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; does not support &lt;span class=&quot;caps&quot;&gt;1D&lt;/span&gt; convolutions, the kind I use. Despite being simpler, &lt;span class=&quot;caps&quot;&gt;1D&lt;/span&gt; convolutions are always the underdog, because working with text and sequences is not as cool as working with images. Thankfully, it’s pretty easy to reshape my data to add an extra bogus dimension. I changed the model to use &lt;span class=&quot;caps&quot;&gt;2D&lt;/span&gt; convolutions, and I used the &lt;code&gt;view()&lt;/code&gt; method on the input tensor to reshape the data to match what the &lt;span class=&quot;caps&quot;&gt;2D&lt;/span&gt; convolutions expect.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;nn &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; nn

input_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
intermediate_channels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Module&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token builtin&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;__init__&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv2d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;input_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv2d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv3 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv2d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ReLU&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv4 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sequential&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Conv2d&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;in_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;intermediate_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; out_channels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kernel_size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; padding&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;            nn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sigmoid&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv1&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv2&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv3&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;conv4&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;size&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; x
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;onnx&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Once those tweaks were done, I was finally able to export the trained model as Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;, through &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;. To export as &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;, I called the export function with an example of what the input would look like.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autograd &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Variable

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;dummy_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FloatTensor&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;export&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dummy_input&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;onnx-coreml&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;-Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;To convert the &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt; model to Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;, I used &lt;a title=&quot;GitHub&quot; href=&quot;https://github.com/onnx/onnx-coreml&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;-Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The version of &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt;-Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; on Py&lt;span class=&quot;caps&quot;&gt;PI&lt;/span&gt; is broken, so I installed the latest version straight from GitHub:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-bash&quot;&gt;
&lt;code&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; git+https://github.com/onnx/onnx-coreml.git
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;13.5&quot;&gt;
&lt;h5 id=&quot;makefile&quot;&gt;Makefile&lt;/h5&gt;
&lt;p&gt;I love writing Makefiles. They’re like &lt;span class=&quot;caps&quot;&gt;README&lt;/span&gt;s, but easier to run. I need a few dependencies for this project, many of which have unusual install procedures. I also like to use &lt;code&gt;virtualenv&lt;/code&gt; to install Python libraries, but I don’t want to have to remember to activate it. This Makefile does all the above for me. I just run &lt;code&gt;make train&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-makefile&quot;&gt;
&lt;code&gt;VIRTUALENV&lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;shell&lt;/span&gt; which virtualenv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ENV&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;env
SITE_PACKAGES&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/lib/python2.7/site-packages
PYTHON&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/usr/bin/python
LOAD_ENV&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;source &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/bin/activate

&lt;span class=&quot;token symbol&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;VIRTUALENV&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        virtualenv env --python&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PYTHON&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token symbol&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(SITE_PACKAGES)/torch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token symbol&quot;&gt;     &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(LOAD_ENV) &amp;amp;&amp;amp; pip install http&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//download.pytorch.org/whl/torch-0.3.0.post4-cp27-none-macosx_10_6_x86_64.whl

&lt;span class=&quot;token symbol&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(SITE_PACKAGES)/onnx_coreml&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token symbol&quot;&gt;     &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(LOAD_ENV) &amp;amp;&amp;amp; pip install git+https&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/onnx/onnx-coreml.git

&lt;span class=&quot;token symbol&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(SITE_PACKAGES)/torchnet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;token symbol&quot;&gt;     &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;(LOAD_ENV) &amp;amp;&amp;amp; pip install git+https&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//github.com/pytorch/tnt.git

&lt;span class=&quot;token symbol&quot;&gt;SplitModel.mlmodel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; env &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SITE_PACKAGES&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/torch &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SITE_PACKAGES&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/onnx_coreml &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SITE_PACKAGES&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;/torchnet train.py data.json
        &lt;span class=&quot;token variable&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;LOAD_ENV&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &amp;amp;&amp;amp; python train.py

&lt;span class=&quot;token symbol&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;@&lt;/span&gt;touch data.json
        &lt;span class=&quot;token operator&quot;&gt;@&lt;/span&gt;make SplitModel.mlmodel
&lt;span class=&quot;token builtin&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; train
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;I load the &lt;span class=&quot;caps&quot;&gt;ONNX&lt;/span&gt; model back in:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autograd &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Variable
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; onnx
&lt;/span&gt;
dummy_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FloatTensor&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;export&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dummy_input&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And convert it to a Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; model:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autograd &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Variable
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; onnx
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; onnx_coreml &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; convert
&lt;/span&gt;
dummy_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FloatTensor&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;export&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dummy_input&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;coreml_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; convert&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;'classifier'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    image_input_names&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'input'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    image_output_names&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'output'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    class_labels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I save the Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; model to a file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;language-python&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; torch
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;autograd &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Variable
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; onnx
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; onnx_coreml &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; convert

dummy_input &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Variable&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FloatTensor&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
torch&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;export&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dummy_input&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; verbose&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; onnx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'SplitModel.proto'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
coreml_model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; convert&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    model&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;'classifier'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    image_input_names&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'input'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    image_output_names&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'output'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    class_labels&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;coreml_model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;save&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'SplitModel.mlmodel'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;coreml&quot;&gt;Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Once I had a trained Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; model, I was ready to drag the model into Xcode:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;xcode&quot; title=&quot;&quot; src=&quot;https://attardi.org/static/xcode-590e354daab993f61062f0feab3b4694-055fb.png&quot; srcset=&quot;/static/xcode-590e354daab993f61062f0feab3b4694-73996.png 140w, /static/xcode-590e354daab993f61062f0feab3b4694-ef45e.png 280w, /static/xcode-590e354daab993f61062f0feab3b4694-055fb.png 560w, /static/xcode-590e354daab993f61062f0feab3b4694-c474d.png 840w, /static/xcode-590e354daab993f61062f0feab3b4694-88c81.png 871w&quot; sizes=&quot;(max-width: 560px) 100vw, 560px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
Drag the model in and Xcode will do some magic.
&lt;p&gt;Next step was to run it, so here comes the Swift code! First, I make sure I’m running on i&lt;span class=&quot;caps&quot;&gt;OS&lt;/span&gt; 11 or greater.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I create a &lt;code&gt;MLMultiArray&lt;/code&gt; and fill it with the input data. To do so I had to port over the &lt;code&gt;encode()&lt;/code&gt; logic from earlier. The Swift &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; for Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; is obviously designed for Objective-C, hence all the awkward type conversions. Fix it, Apple, kthx.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MLMultiArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataType&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;float32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; yShift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enumerated&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubleI &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; yShift&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I instantiate and run the model. &lt;code&gt;_1&lt;/code&gt; and &lt;code&gt;_27&lt;/code&gt; are the very sad names that the input and output layers were assigned somewhere along the process. You can click on the &lt;code&gt;mlmodel&lt;/code&gt; file in the sidebar to find out what your names are.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MLMultiArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataType&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;float32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; yShift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enumerated&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubleI &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; yShift&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SplitModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; prediction &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_27&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have some predictions! All I need to do is convert the probabilities into a list of indices where the probability is greater than 50%.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MLMultiArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataType&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;float32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; yShift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enumerated&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubleI &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; yShift&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SplitModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; prediction &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_27&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; prediction &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; prob &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;react-native&quot;&gt;React Native&lt;/h4&gt;
&lt;p&gt;If this were a completely native app, I would be done. But my app is written in React Native, and I wanted to be able to call this neural network from my &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; code. A few more steps then.&lt;/p&gt;
&lt;p&gt;First, I wrapped my function inside a class, and made sure it was callable from Objective-C.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;@&lt;span class=&quot;token function&quot;&gt;objc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  @&lt;span class=&quot;token function&quot;&gt;objc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MLMultiArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataType&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;float32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; yShift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enumerated&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubleI &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; yShift&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SplitModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; prediction &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_27&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; prediction &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; prob &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, instead of returning the output, I made it take a React Native callback.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;language-swift&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;CoreML&lt;/span&gt;

@&lt;span class=&quot;token function&quot;&gt;objc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;NSObject&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  @&lt;span class=&quot;token function&quot;&gt;objc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;callback&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;RCTResponseSenderBlock&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; #&lt;span class=&quot;token function&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;iOS &lt;span class=&quot;token number&quot;&gt;11.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; data &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;MLMultiArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;shape&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dataType&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;float32&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; $&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; xs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; minY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; maxY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; yShift &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; point&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;enumerated&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; doubleI &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;point&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;maxX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; minX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; yShift&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; doubleI&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNumber&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;floatLiteral&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SplitModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; prediction &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;_27&lt;/span&gt;
  
      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prob&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; prediction &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; prob &lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; points&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NSNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NSNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I wrote the little Objective-C wrapper required:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-objectivec&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;import&lt;/span&gt; &amp;lt;React/RCTBridgeModule.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RCT_EXTERN_MODULE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Split&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; NSObject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;RCT_EXTERN_METHOD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSNumber &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;points callback&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RCTResponseSenderBlock &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;callback&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh, one more thing. React Native doesn’t know how to convert three-dimensional arrays, so I had to teach it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;language-objectivec&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;import&lt;/span&gt; &amp;lt;React/RCTBridgeModule.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RCT_EXTERN_MODULE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Split&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; NSObject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;RCT_EXTERN_METHOD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;split&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSNumber &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;points callback&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RCTResponseSenderBlock &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;callback&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;#&lt;span class=&quot;token directive keyword&quot;&gt;import&lt;/span&gt; &amp;lt;React/RCTConvert.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;@interface&lt;/span&gt; RCTConvert &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RCTConvertNSNumberArrayArray&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;@implementation&lt;/span&gt; RCTConvert &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RCTConvertNSNumberArrayArray&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NSNumber &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;NSNumberArrayArray&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;json
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;RCTConvertArrayValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;@selector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;NSNumberArray&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With all this out of the way, calling into Core&lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; from the JavaScript &lt;span class=&quot;caps&quot;&gt;UI&lt;/span&gt; code is easy:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-js&quot;&gt;
&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;NativeModules&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Split&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; NativeModules&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

Split&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;points&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; splits&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And with that, the app is ready for App Store review!&lt;/p&gt;
&lt;h3 id=&quot;final-words&quot;&gt;Final Words&lt;/h3&gt;
&lt;h4 id=&quot;closing-the-loop&quot;&gt;Closing the Loop&lt;/h4&gt;
&lt;p&gt;I’m quite satisfied with how the neural network is performing in production. It’s not perfect, but the cool thing is that it can keep improving without me having to write any more code. All it needs is more data. One day I hope to build a way for users to submit their own examples to the training set, and thus fully close the feedback loop of continuous improvement.&lt;/p&gt;
&lt;h4 id=&quot;your-turn&quot;&gt;Your Turn&lt;/h4&gt;
&lt;p&gt;I hope you enjoyed this end-to-end walkthrough of how I took a neural network all the way from idea to App Store. I covered a lot, so I hope you found value in at least parts of it.&lt;/p&gt;
&lt;p&gt;I hope this inspires you to start sprinkling neural nets into your apps as well, even if you’re working on something less ambitious than digital assistants or self-driving cars. I can’t wait to see what creative uses &lt;em&gt;you&lt;/em&gt; will make of neural networks!&lt;/p&gt;
&lt;h4 id=&quot;calls-to-action&quot;&gt;Calls to Action!&lt;/h4&gt;
&lt;p&gt;Pick one. Or two. Or all. I don’t care. You do you:&lt;/p&gt;
&lt;p&gt;You can also &lt;a title=&quot;Email&quot; href=&quot;https://attardi.org/email&quot;&gt;hire me&lt;/a&gt; as a consultant. I specialize in React, React Native, and &lt;span class=&quot;caps&quot;&gt;ML&lt;/span&gt; work.&lt;/p&gt;
&lt;p&gt;Thanks to Casey Muller, Ana Muller, Beau Hartshorne, Giuseppe Attardi, and Maria Simi for reading drafts of this.&lt;/p&gt;
</description>
<pubDate>Tue, 13 Feb 2018 04:43:04 +0000</pubDate>
<dc:creator>ot</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://attardi.org/pytorch-and-coreml</dc:identifier>
</item>
<item>
<title>A surprisingly potent technique can boost short and long-term recall</title>
<link>http://www.bbc.com/future/story/20180208-an-effortless-way-to-strengthen-your-memory</link>
<guid isPermaLink="true" >http://www.bbc.com/future/story/20180208-an-effortless-way-to-strengthen-your-memory</guid>
<description>&lt;p&gt;When trying to memorise new material, it’s easy to assume that the more work you put in, the better you will perform. Yet taking the occasional down time – to do literally nothing – may be exactly what you need. Just dim the lights, sit back, and enjoy 10-15 minutes of quiet contemplation, and you’ll find that your memory of the facts you have just learnt is far better than if you had attempted to use that moment more productively.&lt;/p&gt;&lt;p&gt;Although it’s already well known that we should pace our studies, new research suggests that we should aim for “minimal interference” during these breaks – deliberately avoiding any activity that could tamper with the delicate task of memory formation. So no running errands, checking your emails, or surfing the web on your smartphone. You really need to give your brain the chance for a complete recharge with no distractions.&lt;/p&gt;&lt;p&gt;An excuse to do nothing may seem like a perfect mnemonic technique for the lazy student, but this discovery may also offer some relief for people with amnesia and some forms of dementia, suggesting new ways to release a latent, previously unrecognised, capacity to learn and remember.&lt;/p&gt;&lt;p&gt;The remarkable memory-boosting benefits of undisturbed rest were first documented in 1900 by the German psychologist Georg Elias Muller and his student Alfons Pilzecker. In one of &lt;a href=&quot;http://learnmem.cshlp.org/content/6/2/77.full&quot;&gt;their many experiments on memory consolidation&lt;/a&gt;, Muller and Pilzecker first asked their participants to learn a list of meaningless syllables. Following a short study period, half the group were immediately given a second list to learn – while the rest were given a six-minute break before continuing.&lt;/p&gt;&lt;p&gt;When tested one-and-a-half-hours later, the two groups showed strikingly different patterns of recall. The participants given the break remembered nearly 50% of their list, compared to an average of 28% for the group who had been given no time to recharge their mental batteries. The finding suggested that our memory for new information is especially fragile just after it has first been encoded, making it more susceptible to interference from new information.&lt;/p&gt;&lt;p&gt;Although a handful of other psychologists occasionally returned to the finding, it was only in the early 2000s that the broader implications of it started to become known, with a pioneering study by Sergio Della Sala at the University of Edinburgh and Nelson Cowan at the University of Missouri.&lt;/p&gt;&lt;p&gt;The team was interested in discovering whether reduced interference might improve the memories of people who had suffered a neurological injury, such as a stroke. Using a similar set-up to Muller and Pilzecker’s original study, they presented their participants with lists of 15 words and tested them 10 minutes later. In some trials, the participants remained busy with some standard cognitive tests; in others, they were asked to lie in a darkened room and avoid falling asleep.&lt;/p&gt;&lt;blockquote readability=&quot;5&quot;&gt;&lt;p&gt; It seems to benefit young and old people alike  &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The impact of the small intervention was more profound than anyone might have believed. Although the two most severely amnesic patients showed no benefit, the others tripled the number of words they could remember – from 14% to 49%, placing them almost within the range of healthy people with no neurological damage.&lt;/p&gt;&lt;p&gt;The next results were even more impressive. The participants were asked to listen to some stories and answer questions an hour later. Without the chance to rest, they could recall just 7% of the facts in the story; with the rest, this jumped to 79% – an astronomical 11-fold increase in the information they retained. The researchers also found a similar, though less pronounced, benefit for healthy participants in each case, boosting recall between 10 and 30%.&lt;/p&gt;&lt;p&gt;Della Sala and Cowan’s former student, &lt;a href=&quot;https://psych.hw.ac.uk/people/a-e/dr-michaela-dewar.html&quot;&gt;Michaela Dewar&lt;/a&gt; at Heriot-Watt University, has now led several follow-up studies, replicating the finding in &lt;a href=&quot;https://researchportal.hw.ac.uk/en/publications/delaying-interference-enhances-memory-consolidation-in-amnesic-pa&quot;&gt;many different contexts&lt;/a&gt;. In healthy participants, they have found that these short periods of rest can also improve our spatial memories, for instance – helping participants to &lt;a href=&quot;https://researchportal.hw.ac.uk/en/publications/wakeful-rest-promotes-the-integration-of-spatial-memories-into-ac&quot;&gt;recall the location of different landmarks in a virtual reality environment&lt;/a&gt;. Crucially, this advantage lingers a week after the &lt;a href=&quot;https://researchportal.hw.ac.uk/en/publications/brief-wakeful-resting-boosts-new-memories-over-the-long-term&quot;&gt;original learning task&lt;/a&gt;, and it seems to benefit young and old people alike. And besides the stroke survivors, they have also found similar benefits for people in the earlier, &lt;a href=&quot;https://researchportal.hw.ac.uk/en/publications/insights-into-spared-memory-capacity-in-amnestic-mci-and-alzheime&quot;&gt;milder stages of Alzheimer’s disease&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;In each case, the researchers simply asked the participants to sit in a dim, quiet room, without their mobile phones or similar distractions. “We don’t give them any specific instructions with regards to what they should or shouldn’t do while resting,” Dewar says. “But questionnaires completed at the end of our experiments suggest that most people simply let their minds wander.”&lt;/p&gt;&lt;p&gt;Even then, we should be careful not to exert ourselves too hard as we daydream. In &lt;a href=&quot;https://researchportal.hw.ac.uk/en/publications/autobiographical-thinking-interferes-with-episodic-memory-consoli&quot;&gt;one study&lt;/a&gt;, for instance, participants were asked to imagine a past or future event during their break, which appeared to reduce their later recall of the newly learnt material. So it may be safest to avoid any concerted mental effort during our down time.&lt;/p&gt;&lt;!-- callout-box start --&gt;
&lt;div class=&quot;callout-box&quot;&gt;
    &lt;div class=&quot;content&quot; readability=&quot;6.3785046728972&quot;&gt;
        &lt;div class=&quot;callout-box-head&quot;&gt;
                &lt;p class=&quot;callout-box-title&quot;&gt;Towards total recall&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;callout-box-body&quot; readability=&quot;6.0576923076923&quot;&gt;
            &lt;p&gt;If you are interested in further, low-effort ways to boost your recall, you may benefit from the following strategies:&lt;/p&gt;

&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;!-- callout-box end --&gt;&lt;p&gt;The exact mechanism is still unknown, though some clues come from a growing understanding of memory formation. It is now well accepted that once memories are initially encoded, they pass through a period of consolidation that cements them in long-term storage. This was once thought to happen primarily during sleep, with heightened communication between the hippocampus – where memories are first formed – and the cortex, a process that may build and strengthen the new neural connections that are necessary for later recall.&lt;/p&gt;&lt;p&gt;This heightened nocturnal activity may be the reason that we often &lt;a href=&quot;http://www.bbc.com/future/story/20150106-how-to-nap-like-a-pro&quot;&gt;learn things better just before bed&lt;/a&gt;. &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/20152133&quot;&gt;But in line with Dewar’s work, a 2010 study&lt;/a&gt; by &lt;a href=&quot;http://www.psych.nyu.edu/davachi/&quot;&gt;Lila Davachi&lt;/a&gt; at New York University, found that it was not limited to sleep, and similar neural activity occurs during periods of wakeful rest, too. In the study, participants were first asked to memorise pairs of pictures – matching a face to an object or scene – and then allowed to lie back and let their minds wander for a short period. Sure enough, she found increased communication between the hippocampus and areas of the visual cortex during their rest. Crucially, people who showed a greater increase in connectivity between these areas were the ones who remembered more of the task, she says.&lt;/p&gt;&lt;p&gt;Perhaps the brain takes any potential down time to cement what it has recently learnt – and reducing extra stimulation at this time may ease that process. It would seem that neurological damage may render the brain especially vulnerable to that interference after learning a new memory, which is why the period of rest proved to be particularly potent for stroke survivors and people with Alzheimer’s disease.&lt;/p&gt;&lt;p&gt;Other psychologists are excited about the research. “The effect is quite consistent across studies now in a range of experiments and memory tasks,” says &lt;a href=&quot;https://www.york.ac.uk/psychology/staff/academicstaff/ah1643/&quot;&gt;Aidan Horner&lt;/a&gt; at the University of York. “It’s fascinating.” Horner agrees that it could potentially offer new ways to help individuals with impairments to function.&lt;/p&gt;&lt;p&gt;Practically speaking, he points out that it may be difficult to schedule enough periods of rest to increase their overall daily recall. But he thinks it could still be valuable to help a patient learn important new information – such as learning the name and face of a new carer. “Perhaps a short period of wakeful rest after that would increase the chances that they would remember that person, and therefore feel more comfortable with them later on.” Dewar tells me that she is aware of one patient who seems to have benefitted from using a short rest to learn the name of their grandchild, though she emphasises that it is only anecdotal evidence.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.ntu.ac.uk/staff-profiles/social-sciences/thom-baguley&quot;&gt;Thomas Baguley&lt;/a&gt; at Nottingham Trent University in the UK is also cautiously optimistic. He points out that some Alzheimer’s patients are already advised to engage in mindfulness techniques to alleviate stress and improve overall well-being. “Some [of these] interventions may also promote wakeful rest and it is worth exploring whether they work in part because of reducing interference,” he says, though it may be difficult to implement in people with severe dementia, he says.  &lt;/p&gt;&lt;p&gt;Beyond the clinical benefits for these patients, Baguley and Horner both agree that scheduling regular periods of rest, without distraction, could help us all hold onto new material a little more firmly. After all, for many students, the 10-30% improvements recorded in these studies could mark the difference between a grade or two. “I can imagine you could embed these 10-15 minute breaks within a revision period,” says Horner, “and that might be a useful way of making small improvements to your ability to remember later on.”&lt;/p&gt;&lt;p&gt;In the age of information overload, it’s worth remembering that our smartphones aren’t the only thing that needs a regular recharge. Our minds clearly do too.&lt;/p&gt;&lt;p&gt;--&lt;/p&gt;&lt;p&gt;&lt;em&gt;David Robson is a freelance writer based in London. He is &lt;/em&gt;&lt;a href=&quot;https://twitter.com/d_a_robson&quot;&gt;&lt;em&gt;@d_a_robson&lt;/em&gt;&lt;/a&gt;&lt;em&gt; on Twitter&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Join 800,000+ Future fans by liking us on &lt;/em&gt;&lt;a href=&quot;https://www.facebook.com/BBCFuture&quot;&gt;&lt;em&gt;&lt;strong&gt;Facebook&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, or follow us on &lt;/em&gt;&lt;a href=&quot;https://twitter.com/bbc_future&quot;&gt;&lt;em&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;If you liked this story, &lt;/em&gt;&lt;a href=&quot;http://pages.emails.bbc.com/subscribe/?ocid=fut.bbc.email.we.email-signup&quot;&gt;&lt;em&gt;&lt;strong&gt;sign up for the weekly bbc.com features newsletter&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, called “If You Only Read 6 Things This Week”. A handpicked selection of stories from BBC Future, Earth, Culture, Capital, and Travel, delivered to your inbox every Friday.&lt;/em&gt;&lt;/p&gt;
                        </description>
<pubDate>Tue, 13 Feb 2018 03:05:21 +0000</pubDate>
<dc:creator>happy-go-lucky</dc:creator>
<og:title>An effortless way to improve your memory </og:title>
<og:type>article</og:type>
<og:url>http://www.bbc.com/future/story/20180208-an-effortless-way-to-strengthen-your-memory</og:url>
<og:description>A surprisingly potent technique can boost your short and long-term recall – and it appears to help everyone from students to Alzheimer’s patients.
</og:description>
<og:image>http://ichef.bbci.co.uk/wwfeatures/live/624_351/images/live/p0/5x/hl/p05xhl47.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.com/future/story/20180208-an-effortless-way-to-strengthen-your-memory</dc:identifier>
</item>
<item>
<title>Go accepts patches from GitHub pull requests now</title>
<link>https://github.com/golang/go/issues/18517#issuecomment-365099814</link>
<guid isPermaLink="true" >https://github.com/golang/go/issues/18517#issuecomment-365099814</guid>
<description>&lt;p&gt;I propose we start accepting Github PRs (Pull Requests).&lt;/p&gt;
&lt;p&gt;Currently we have a bot auto-close them with &lt;a href=&quot;https://github.com/golang/build/blob/133a9337464036c635c09b208b03bc73b6bab973/cmd/pushback/pushback.go#L253-L272&quot;&gt;a message&lt;/a&gt; telling them we don't use PRs and instead use Gerrit.&lt;/p&gt;
&lt;p&gt;When we moved to Github, &lt;a href=&quot;https://github.com/robpike&quot; class=&quot;user-mention&quot;&gt;@robpike&lt;/a&gt; &lt;a href=&quot;https://groups.google.com/d/msg/golang-dev/sckirqOWepg/YmyT7dWJiocJ&quot; rel=&quot;nofollow&quot;&gt;said&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Most members of the Go community use Git and host their work on GitHub, and we should join them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While that's true, we're still not using Github like Github users use Github.&lt;/p&gt;
&lt;p&gt;I believe that our current pushback bot dissuades many potential contributors.&lt;/p&gt;
&lt;p&gt;I propose we start accepting pull requests by automatically converting them into Gerrit CLs (&quot;change lists&quot;, same as a PR but different terminology). Reviews would still happen on Gerrit and the bot would update the PR of activity on Gerrit. Gerrit is still where we'd run trybots and push the &quot;Merge&quot; button. We would never merge on Github. Gerrit would remain the upstream source-of truth.&lt;/p&gt;
&lt;p&gt;I prototyped this syncing in &lt;a href=&quot;https://github.com/LetsUseGerrit/gerritbot/&quot;&gt;https://github.com/LetsUseGerrit/gerritbot/&lt;/a&gt; and used it a bit while working on gRPC-go (&lt;a href=&quot;https://go-review.googlesource.com/q/project:grpc-review&quot; rel=&quot;nofollow&quot;&gt;examples&lt;/a&gt;), but in the opposite direction: my Gerrit CLs were abandoned after gRPC-go accepted them on Github.&lt;/p&gt;
&lt;p&gt;In any case, the point is that this can be automated with a bit of work and rejecting Github PRs or not is a policy decision more than anything. I propose we change our policy.&lt;/p&gt;
&lt;p&gt;Some will say that the quality of PRs will decrease, as many the PRs that arrive and are auto-closed by the pushback bot are pretty bad. But so are many of the Gerrit CLs. I believe the Gerrit CLs are only better on average because that means it's more likely people have read the contributing instructions, or have contributed in the past. But if you only look at first-time contributors on Github PRs vs Gerrit CLs, the quality doesn't look too different. People improve over time as they learn the project and its policies.&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 23:52:35 +0000</pubDate>
<dc:creator>vhost-</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/2621?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>codereview: accept Github PRs · Issue #18517 · golang/go</og:title>
<og:url>https://github.com/golang/go/issues/18517</og:url>
<og:description>I propose we start accepting Github PRs (Pull Requests). Currently we have a bot auto-close them with a message telling them we don't use PRs and instead use Gerrit. When we moved to Github, @robpi...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/golang/go/issues/18517</dc:identifier>
</item>
<item>
<title>How Apple Plans to Root Out Bugs, Revamp iPhone Software</title>
<link>https://www.bloomberg.com/news/articles/2018-02-12/how-apple-plans-to-root-out-bugs-revamp-iphone-software</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-02-12/how-apple-plans-to-root-out-bugs-revamp-iphone-software</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Apple's annual software upgrade this fall will offer users plenty of new features: enabling a single set of apps to work across iPhones, iPads and Macs, a Digital Health tool to show parents how much time their children have been staring at their screen and improvements to Animojis, those cartoon characters controlled by the iPhone X's facial recognition sensor.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;But just as important this year will be what Apple doesn't introduce: redesigned home screens for the iPhone, iPad and CarPlay, and a revamped Photos app that can suggest which images to view.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;


&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-323756666&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i9MwPbx9yymI/v4/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i9MwPbx9yymI/v4/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Craig Federighi&lt;/p&gt;
&lt;p&gt;Photographer: David Paul Morris/Bloomberg&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;These features were delayed after Apple Inc. concluded it needed its own major upgrade in the way the company develops and introduces new products. Instead of keeping engineers on a relentless annual schedule and cramming features into a single update,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Apple will start focusing on the next two years of updates for its iPhone and iPad operating system, according to people familiar with the change. The company will continue to update its software annually, but internally engineers will have more discretion to push back features that aren't as polished to the following year. &lt;/p&gt;



&lt;p&gt;Software chief Craig Federighi laid out the new strategy to his army of engineers last month, according to a person familiar with the discussion. His team will have more time to work on new features and focus on under-the-hood refinements without being tied to a list of new features annually simply so the company can tout a massive year-over-year leap, people familiar with the situation say. The renewed focus on quality is designed to make sure the company can fulfill promises made each summer at the annual developers conference and that new features work reliably and as advertised.&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;“This change is Apple beginning to realize that schedules are not being hit, stuff is being released with bugs – which previously would not have happened,”&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; when Apple was a smaller company with fewer engineers, customers and devices to manage, says one person familiar with the company. Apple declined to comment. &lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;The shift is an admission of what many customers have already come to notice: Some Apple software has become prone to bugs and underdeveloped features. I&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;n recent months, users have complained about text messages appearing out of order, the iPhone X registering incoming phone calls late and frequent app crashes. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Apple has also recently released features later than it expected, as the rush to meet the annual deadline overtaxed engineers and created last-minute delays. &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;For example, last year’s iOS release didn’t initially include previously touted features that would let consumers send money via iMessage or synchronize full text message histories among Apple devices.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The decision to formalize the process and give engineers more time to perfect software is a major cultural shift. For years, the company has funneled its energies into quick-turnaround, splashy upgrades that are designed to wow the faithful and make rivals seem slow-footed.&lt;/p&gt;

&lt;p&gt;The strategy has paid off handsomely because the feature-packed upgrades keep customers tied to Apple’s ecosystem and prompt them to use more of the company’s lucrative services. More than 90 percent of Apple customers use either of the last two major iOS updates, compared with 30 percent of Android users who have downloaded the two latest versions of Google’s mobile OS, according to data from both companies. &lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-323756355&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iXUh15zTvmrQ/v4/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iXUh15zTvmrQ/v4/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Phil Schiller, Apple’s senior vice president of worldwide marketing, speaks about the iPhone X during an event in Cupertino, Calif. on Sept. 12, 2017.&lt;/p&gt;
&lt;p&gt;Photographer: David Paul Morris/Bloomberg&lt;/p&gt;
&lt;p&gt;But the feature-packed upgrades place huge demands on Apple’s beleaguered engineers. At Google, teams update apps on their own schedule and aren’t tied to the annual Android release. At Apple, all new features are tied to a big release in the fall, when Apple rolls out its splashiest new software, and a more modest update in the spring.&lt;strong&gt; &lt;/strong&gt;Individual apps aren't updated on their own, and everything is driven by the release schedule.&lt;/p&gt;
&lt;p&gt;Under the previous system, a person familiar with Apple says, “inevitably, some things will be late because you underestimated how long it would take. Some things have to be cut, some things have to be rushed. It's the result of having thousands of people working on the same schedule.”&lt;/p&gt;
&lt;p&gt;The first test of the new development strategy will come in the fall, when Apple debuts the next iPhone and iPad software upgrade. Internally code-named “Peace,” it will likely be called iOS 12.&lt;/p&gt;
&lt;p&gt;The change that will cause the biggest stir: making it possible for a single third-party app to work on iPhones, iPads and Mac computers. The upgrade will be folded into the upcoming macOS 10.14 (known internally as “Liberty”) and could involve bringing to the Mac some of  Apple’s own iPhone apps, including Home, which controls smart appliances. &lt;/p&gt;
&lt;p&gt;Apple’s popular Animojis will get new characters and a more easily navigated menu. The animated emojis will also come to the iPad; the company is working on a new model that will have the required Face ID camera. Apple plans to integrate Animojis into FaceTime, letting people put virtual faces over themselves in video calls. (Technology to bring multi-person conferencing to FaceTime video calls is being explored but might not be ready for this year.)&lt;/p&gt;
&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-323756496&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/idq2vXXlvYpM/v4/60x-1.jpg&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/idq2vXXlvYpM/v4/-1x-1.jpg&quot; class=&quot;lazy-img__image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A customer tries out the Animoji feature on an iPhone X.&lt;/p&gt;
&lt;p&gt;Photographer: Daniel Acker/Bloomberg&lt;/p&gt;
&lt;p&gt;Also in the works for this year: a redesigned version of Apple’s stock-tracking app and updated version of Do Not Disturb that will give users more options to automatically reject phone calls or silence notifications. Apple is also working to more deeply integrate Siri into the iPhone’s search view, redesign the interface used to import photos into an iPad on the go and make it possible for several people at once to play augmented reality games. &lt;/p&gt;
&lt;p&gt;Consumers will have to wait until 2019 for significant iPad-focused software upgrades. Among them: A feature that will make it possible to run several windows in one app and click between them just like tabs in a web browser (the Mac got this feature a couple of years ago) and a related enhancement that lets two screens from the same app run side-by-side. Other updates that have been pushed back include new features for the Apple Pencil stylus and a toggle in the email app that will mute notifications from specific threads.&lt;/p&gt;
&lt;p&gt;In the past, “Apple’s smaller scale helped it build better-quality software than the rest of the market,” says Steven Troughton-Smith, a veteran app developer. “But with its newfound size it has seemingly been unable to find the right balance.”&lt;/p&gt;
&lt;aside class=&quot;inline-newsletter&quot; data-state=&quot;ready&quot;/&gt;&lt;p&gt;Finding a new balance between speed and quality will be tricky. On the one hand, spreading feature updates over a longer period could hurt Apple’s competitiveness in the fiercely contested smartphone market. On the other hand, sticking to what Troughton-Smith calls a “ruthlessly ambitious” upgrade cycle risks rushing out features before they’re ready and undermining Apple’s vaunted reputation for quality. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For more on the iPhone, check out the &lt;em&gt;Decrypted&lt;/em&gt; podcast:&lt;/strong&gt;&lt;/p&gt;


</description>
<pubDate>Mon, 12 Feb 2018 22:53:45 +0000</pubDate>
<dc:creator>robin_reala</dc:creator>
<og:description>The company is shaking up its development program to focus more on key features and push back others to the following year.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iGnvWJAXc0eE/v0/1200x801.jpg</og:image>
<og:title>How Apple Plans to Root Out Bugs, Revamp iPhone Software</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2018-02-12/how-apple-plans-to-root-out-bugs-revamp-iphone-software</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2018-02-12/how-apple-plans-to-root-out-bugs-revamp-iphone-software</dc:identifier>
</item>
<item>
<title>ZFS 128 bit storage: Are you high? (2004)</title>
<link>https://blogs.oracle.com/bonwick/128-bit-storage:-are-you-high</link>
<guid isPermaLink="true" >https://blogs.oracle.com/bonwick/128-bit-storage:-are-you-high</guid>
<description>&lt;p&gt;One gentle reader offered this feedback on our recent &lt;a href=&quot;http://www.sun.com/2004-0914&quot;&gt;ZFS article&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;64 bits would have been plenty ... but then you can't talk out of your ass about boiling oceans then, can you?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Well, it's a fair question. Why did we make ZFS a 128-bit storage system? What on earth made us think it's necessary? And how do we know it's sufficient?&lt;/p&gt;
&lt;p&gt;Let's start with the easy one: how do we know it's necessary?&lt;/p&gt;
&lt;p&gt;Some customers already have datasets on the order of a petabyte, or 2&lt;sup&gt;50&lt;/sup&gt; bytes. Thus the 64-bit capacity limit of 2&lt;sup&gt;64&lt;/sup&gt; bytes is only 14 doublings away. Moore's Law&lt;br/&gt;for storage predicts that capacity will continue to double every&lt;br/&gt;9-12 months, which means we'll start to hit the 64-bit limit in&lt;br/&gt;about a decade. Storage systems tend to live for several decades,&lt;br/&gt;so it would be foolish to create a new one without anticipating the&lt;br/&gt;needs that will surely arise within its projected lifetime.&lt;/p&gt;
&lt;p&gt;If 64 bits isn't enough, the next logical step is 128 bits.&lt;br/&gt;That's enough to survive Moore's Law until I'm dead, and after that,&lt;br/&gt;it's not my problem. But it does raise the question: what are the&lt;br/&gt;theoretical limits to storage capacity?&lt;/p&gt;
&lt;p&gt;Although we'd all like Moore's Law to continue forever, quantum&lt;br/&gt;mechanics imposes some fundamental limits on the computation rate&lt;br/&gt;and information capacity of any physical device. In particular,&lt;br/&gt;it has been shown that 1 kilogram of matter confined to 1 liter&lt;br/&gt;of space can perform at most 10&lt;sup&gt;51&lt;/sup&gt; operations per second&lt;br/&gt;on at most 10&lt;sup&gt;31&lt;/sup&gt; bits of information [see Seth Lloyd,&lt;br/&gt;&quot;Ultimate physical limits to computation.&quot; Nature 406, 1047-1054&lt;br/&gt;(2000)]. A fully-populated 128-bit storage pool would contain&lt;br/&gt;2&lt;sup&gt;128&lt;/sup&gt; blocks = 2&lt;sup&gt;137&lt;/sup&gt; bytes = 2&lt;sup&gt;140&lt;/sup&gt;&lt;br/&gt;bits; therefore the minimum mass required to hold the bits would be&lt;br/&gt;(2&lt;sup&gt;140&lt;/sup&gt; bits) / (10&lt;sup&gt;31&lt;/sup&gt; bits/kg) = 136 billion&lt;br/&gt;kg.&lt;/p&gt;
&lt;p&gt;That's a lot of gear.&lt;/p&gt;
&lt;p&gt;To operate at the 10&lt;sup&gt;31&lt;/sup&gt; bits/kg limit, however, the&lt;br/&gt;entire mass of the computer must be in the form of pure energy.&lt;br/&gt;By E=mc&lt;sup&gt;2&lt;/sup&gt;, the rest energy of 136 billion kg is&lt;br/&gt;1.2x10&lt;sup&gt;28&lt;/sup&gt; J. The mass of the oceans is about 1.4x10&lt;sup&gt;21&lt;/sup&gt; kg. It takes about 4,000 J to raise the&lt;br/&gt;temperature of 1 kg of water by 1 degree Celcius, and thus about&lt;br/&gt;400,000 J to heat 1 kg of water from freezing to boiling.&lt;br/&gt;The latent heat of vaporization adds another 2 million J/kg.&lt;br/&gt;Thus the energy required to boil the oceans is about&lt;br/&gt;2.4x10&lt;sup&gt;6&lt;/sup&gt; J/kg \* 1.4x10&lt;sup&gt;21&lt;/sup&gt; kg =&lt;br/&gt;3.4x10&lt;sup&gt;27&lt;/sup&gt; J. Thus, fully populating a 128-bit&lt;br/&gt;storage pool would, literally, require more energy than boiling&lt;br/&gt;the oceans.&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 22:39:35 +0000</pubDate>
<dc:creator>mixologic</dc:creator>
<og:type>article</og:type>
<og:title>128-bit storage: are you high?</og:title>
<og:url>https://blogs.oracle.com/bonwick/128-bit-storage%3A-are-you-high</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blogs.oracle.com/bonwick/128-bit-storage:-are-you-high</dc:identifier>
</item>
<item>
<title>Why the world needs OpenStreetMap (2014)</title>
<link>https://blog.emacsen.net/blog/2014/01/04/why-the-world-needs-openstreetmap/</link>
<guid isPermaLink="true" >https://blog.emacsen.net/blog/2014/01/04/why-the-world-needs-openstreetmap/</guid>
<description>&lt;p&gt;Every time I tell someone about OpenStreetMap, they inevitably ask &quot;Why not use Google Maps?&quot;. From a practical standpoint, it's a reasonable question, but ultimately this is not just a matter of practicality, but of what kind of society we want to live in. I discussed this topic in a 2008 talk on OpenStreetMap I gave at the first MappingDC meeting. Here are many of same concepts, but expanded.&lt;/p&gt;
&lt;p&gt;In the 1800s, people were struggling with time, not how much of it they had, but what time it was. Clocks existed, but every town had its own time, &quot;Local time&quot;, which was synchronized by town clocks, or more often than not, church bells. Railway time, then eventually Greenwich Mean Time eventually supplanted all local time, and most people today don't think about time as anything but universal. This was accomplished in the US by adoption first of the railroads, and then by universities and large businesses.&lt;/p&gt;
&lt;p&gt;The modern day time dilemma is geography, and everyone is looking to be the definitive source. Google spends &lt;a href=&quot;http://www.asymco.com/2012/12/18/how-much-to-maps-cost-and-what-are-they-worth/&quot;&gt;$1 billion annually&lt;/a&gt; maintaining their maps, and that does not include the 1.5 billion Google spent &lt;a href=&quot;http://techcrunch.com/2013/06/11/its-official-google-buys-waze-giving-a-social-data-boost-to-its-location-and-mapping-business/&quot;&gt;buying Waze&lt;/a&gt;. Google is far from the only company trying to own everywhere, as Nokia purchased Navtek and TomTom and Tele Atlas try to merge. All of these companies want to become the definitive source of what's on the ground.&lt;/p&gt;
&lt;p&gt;That's because what's on the ground has become big business. With GPSes in every car, and a smartphone in every pocket, the market for telling you where you are and where to go has become fierce.&lt;/p&gt;
&lt;p&gt;With all these companies, why do we need a project like OpenStreetMap? The answer is simply that as a society, no one company should have a monopoly on place, just as no one company had a monopoly on time in the 1800s. Place is a shared resource, and when you give all that power to a single entity, you are giving them the power not only to tell you about your location, but to shape it. In summary, there are three concerns- who decides what gets shown on the map, who decides where you are and where you should go, and personal privacy.&lt;/p&gt;
&lt;p&gt;Who decides what gets displayed on a Google Map? The answer is, of course, that Google does. I heard this concern in a meeting with a local government in 2009- they were concerned about using Google Maps on their website because Google makes choices about which businesses to display. They were right to be concerned about this issue since a government needs to remain impartial and by outsourcing their maps, they hand the control over to a third party.&lt;/p&gt;
&lt;p&gt;It seems inevitable that Google will monetize geographic searches, with either premium results, or priority ordering, if they haven't done so already (ie is it a coincidence than when I search for &quot;breakfast&quot; near my home, the first result is &quot;SUBWAY® Restaurants&quot;).&lt;/p&gt;
&lt;p&gt;Of course Google is not the only map provider, they're just one example. The point is that when you use any map provider, you are handing them the controls- letting them determine what features get emphasized, or what features may not be displayed at all.&lt;/p&gt;
&lt;p&gt;The second concern is about location. Who defines where a neighborhood is, or whether or not you should go. This issue was brought up by the &lt;a href=&quot;https://www.aclu.org/blog/racial-justice-criminal-law-reform-technology-and-liberty/your-turn-turn-navigation-application&quot;&gt;ACLU&lt;/a&gt;, where a map provider was providing routing (driving/biking/walking instructions) and used what they determined to be safe or dangerous neighborhoods as part of their algorithm. This begs the question of who determines what makes a neighborhood safe or not, or whether safe is merely a codeword for something more sinister.&lt;/p&gt;
&lt;p&gt;Right now, Flickr collects neighborhood information based on photographs which they expose &lt;a href=&quot;http://code.flickr.net/2008/10/30/the-shape-of-alpha/&quot;&gt;through an API&lt;/a&gt;. They use this information to suggest tags for your photograph, but it would be possible to use neighborhood boundaries in a more subtle way in order to effect anything from traffic patterns to real estate prices, because when a map provider becomes large enough, they become the source of &quot;truth&quot;.&lt;/p&gt;
&lt;p&gt;Lastly, these map providers have an incentive to collect information about you in ways that you may not agree with. Both Google and Apple collect your location information when you use their services. They can use this information to improve their map accuracy, but Google has already announced that is going to use this information to &lt;a href=&quot;http://digiday.com/platforms/google-tracking/&quot;&gt;track the correlation between searches and where you go&lt;/a&gt;. With &lt;a href=&quot;http://news.cnet.com/8301-1035_3-57510994-94/google-500-million-android-devices-activated/&quot;&gt;500 million Android phones&lt;/a&gt;, this is an enormous amount of information collected on the individual level about people's habits whether they're taking a casual stroll, commuting to work, going to their doctor, or maybe attending a protest. Certainly we can't ignore the societal implication of so much data in the hands of a single entity, no matter how &lt;a href=&quot;http://en.wikipedia.org/wiki/Don%27t_be_evil&quot;&gt;benevolent they claim to be&lt;/a&gt;. Companies like Foursquare use &lt;a href=&quot;http://engineering.foursquare.com/2014/01/03/the-mathematics-of-gamification/&quot;&gt;gamification&lt;/a&gt; to overlay what is essentially a large scale data collection process, and even Google has gotten into the game of gamification with &lt;a href=&quot;https://en.wikipedia.org/wiki/Ingress_%28game%29&quot;&gt;Ingress&lt;/a&gt;, a game which overlays an artificial world onto this one and encourages users to collect routing data and photo mapping as part of effort to either fight off, or encourage, an alien invasion.&lt;/p&gt;
&lt;p&gt;Now that we have identified the problems, we can examine how OpenStreetMap solves each of them.&lt;/p&gt;
&lt;p&gt;In terms of map content, OpenStreetMap is both neutral and transparent. OpenStreetMap is a wiki-like map that anyone in the world can edit. If a store is missing from the map, it can be added in, by a store owner or even a customer. In terms of display (rendering), each person or company who creates a map is free to render it how they like, but the main map on &lt;a href=&quot;http://www.openstreetmap.org&quot;&gt;OpenStreetMap.org&lt;/a&gt; uses FLOSS (Free/Libre Open Source Software) rendering software and a liberally licensed stylesheet which anyone can build on. In other words, someone who cares can always create their own maps based on the same data.&lt;/p&gt;
&lt;p&gt;Similarly, while the most popular routers for OpenStreetMap are FLOSS, even if a company chooses another software stack, a user is always free to use their own routing software, and it would be easy to compare routing results based on the same data to find anomalies.&lt;/p&gt;
&lt;p&gt;And lastly, with OpenStreetMap data, a user is free to download some, or all of the map offline. This means that it's possible to use OpenStreetMap data to navigate without giving your location away to anyone at all.&lt;/p&gt;
&lt;p&gt;OpenStreetMap respects communities and respects people. If you're not already contributing to OSM, consider helping out. If you're already a contributor- Thank You.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; Wow, what a &lt;a href=&quot;http://blog.emacsen.net/blog/2014/01/05/the-world-cares-about-openstreetmap/&quot;&gt;response!&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 22:32:14 +0000</pubDate>
<dc:creator>pwg</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.emacsen.net/blog/2014/01/04/why-the-world-needs-openstreetmap/</dc:identifier>
</item>
<item>
<title>Unilever threatens to pull its ads from Facebook and Google over &amp;#039;toxic content&amp;#039;</title>
<link>http://www.latimes.com/business/technology/la-fi-tn-unilever-ads-google-facebook-20180212-story.html</link>
<guid isPermaLink="true" >http://www.latimes.com/business/technology/la-fi-tn-unilever-ads-google-facebook-20180212-story.html</guid>
<description>&lt;p&gt;&quot;Fake news, racism, sexism, terrorists spreading messages of hate, toxic content directed at children — parts of the internet we have ended up with is a million miles from where we thought it would take us,&quot; Weed said in a speech at the Interactive Advertising Bureau's Leadership Meeting in Palm Desert. &quot;It is in the digital media industry's interest to listen and act on this.&quot;&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 21:58:50 +0000</pubDate>
<dc:creator>CodeSheikh</dc:creator>
<og:url>http://www.latimes.com/business/technology/la-fi-tn-unilever-ads-google-facebook-20180212-story.html</og:url>
<og:title>Giant advertiser Unilever threatens to pull its ads from Facebook and Google over 'toxic content'</og:title>
<og:image>http://www.latimes.com/resizer/hGLerXivX6W9HsE2UpIhs6dHSHY=/1200x0/www.trbimg.com/img-5a8224f9/turbine/la-fi-tn-unilever-ads-google-facebook-20180212</og:image>
<og:description>Unilever, one of the world's largest advertisers, is threatening to pull its ads from social sites such as Facebook and YouTube if the tech companies don't do more to minimize divisive content on their platforms. Unilever brands include Dove, Lipton, Axe and Ben &amp; Jerry's.</og:description>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.latimes.com/business/technology/la-fi-tn-unilever-ads-google-facebook-20180212-story.html</dc:identifier>
</item>
<item>
<title>Picture of a Single Atom Wins Science Photo Contest</title>
<link>https://petapixel.com/2018/02/12/picture-single-atom-wins-science-photo-contest/</link>
<guid isPermaLink="true" >https://petapixel.com/2018/02/12/picture-single-atom-wins-science-photo-contest/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://petapixel.com/assets/uploads/2018/02/singleatomhead-800x800.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;800&quot; class=&quot;aligncenter size-large wp-image-303326&quot; srcset=&quot;https://petapixel.com/assets/uploads/2018/02/singleatomhead-800x800.jpg 800w, https://petapixel.com/assets/uploads/2018/02/singleatomhead-100x100.jpg 100w, https://petapixel.com/assets/uploads/2018/02/singleatomhead-320x320.jpg 320w, https://petapixel.com/assets/uploads/2018/02/singleatomhead.jpg 1600w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A remarkable photo of a single atom trapped by electric fields has just been awarded the top prize in a well-known science photography competition. The photo is titled “Single Atom in an Ion Trap” and was shot by David Nadlinger of the University of Oxford.&lt;/p&gt;&lt;p&gt;The Engineering and Physical Sciences Research Council (EPSRC) in the UK &lt;a href=&quot;https://www.epsrc.ac.uk/newsevents/news/single-trapped-atom-captures-science-photography-competitions-top-prize/&quot; data-wpel-link=&quot;external&quot; target=&quot;_blank&quot; rel=&quot;follow external noopener noreferrer&quot;&gt;today announced&lt;/a&gt; the winning photos of its national science photography competition. Nadlinger’s grand prize photo shows an atom as a speck of light between two metal electrodes placed about 2mm (0.078in) apart.&lt;/p&gt;
&lt;img src=&quot;https://petapixel.com/assets/uploads/2018/02/cropatom-800x603.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;603&quot; class=&quot;size-large wp-image-303327&quot; srcset=&quot;https://petapixel.com/assets/uploads/2018/02/cropatom-800x603.jpg 800w, https://petapixel.com/assets/uploads/2018/02/cropatom-320x241.jpg 320w, https://petapixel.com/assets/uploads/2018/02/cropatom.jpg 1184w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;A crop of the winning photo that shows the single atom being suspended at the center of the frame.
&lt;p&gt;The caption reads:&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;In the center of the picture, a small bright dot is visible – a single positively-charged strontium atom. It is held nearly motionless by electric fields emanating from the metal electrodes surrounding it. […] When illuminated by a laser of the right blue-violet color, the atom absorbs and re-emits light particles sufficiently quickly for an ordinary camera to capture it in a long exposure photograph.&lt;/p&gt;
&lt;p&gt;This picture was taken through a window of the ultra-high vacuum chamber that houses the trap. Laser-cooled atomic ions provide a pristine platform for exploring and harnessing the unique properties of quantum physics. They are used to construct extremely accurate clocks or, as in this research, as building blocks for future quantum computers, which could tackle problems that stymie even today’s largest supercomputers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“The idea of being able to see a single atom with the naked eye had struck me as a wonderfully direct and visceral bridge between the miniscule quantum world and our macroscopic reality,” Nadlinger tells EPSRC. “A back-of-the-envelope calculation showed the numbers to be on my side, and when I set off to the lab with camera and tripods one quiet Sunday afternoon, I was rewarded with this particular picture of a small, pale blue dot.”&lt;/p&gt;
&lt;p&gt;The photo was captured on August 7th, 2017, using a Canon 5D Mark II DSLR, a Canon EF 50mm f/1.8 lens, extension tubes, and two flash units with color gels.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Image credits:&lt;/strong&gt; Photograph and crop by David Nadlinger, courtesy EPSRC&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 21:00:51 +0000</pubDate>
<dc:creator>gokhan</dc:creator>
<og:type>article</og:type>
<og:title>Picture of a Single Atom Wins Science Photo Contest</og:title>
<og:description>A remarkable photo of a single atom trapped by electric fields has just been awarded the top prize in a well-known science photography competition. The pho</og:description>
<og:url>https://petapixel.com/2018/02/12/picture-single-atom-wins-science-photo-contest/</og:url>
<og:image>https://petapixel.com/assets/uploads/2018/02/singleatomfeat.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://petapixel.com/2018/02/12/picture-single-atom-wins-science-photo-contest/</dc:identifier>
</item>
<item>
<title>German court rules Facebook use of personal data illegal</title>
<link>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</guid>
<description>&lt;p class=&quot;MegaArticleBody_first-p_2htdt&quot;&gt;BERLIN (Reuters) - A German consumer rights group said on Monday that a court had found Facebook’s use of personal data to be illegal because the U.S. social media platform did not adequately secure the informed consent of its users.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The verdict, from a Berlin regional court, comes as Big Tech faces increasing scrutiny in Germany over its handling of sensitive personal data that enables it to micro-target online advertising.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The Federation of German Consumer Organisations (vzvb) said that Facebook’s default settings and some of its terms of service were in breach of consumer law, and that the court had found parts of the consent to data usage to be invalid.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;“Facebook hides default settings that are not privacy-friendly in its privacy center and does not provide sufficient information about it when users register,” said Heiko Duenkel, litigation policy officer at the vzvb.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;“This does not meet the requirement for informed consent.” The vzvb posted a copy of the ruling on its website. A court spokesperson confirmed that a judgment had been handed down but declined further comment.&lt;/p&gt;
&lt;h3&gt;FACEBOOK TO APPEAL&lt;/h3&gt;
&lt;p class=&quot;&quot;&gt;Facebook said it would appeal, even though several aspects of the court judgment had been in its favor. In a statement, it said it had already made significant changes to its terms of service and data protection guidelines since the case was first brought in 2015.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;“We are working hard to ensure that our guidelines are clear and easy to understand, and that the services offered by Facebook are in full accordance with the law,” Facebook said.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Further, Facebook would in the meantime update its data protection guidelines and its terms of service so that they comply with new European Union-wide rules that are due to enter force in June.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Facebook, which counts more than 2 billion users worldwide, already faces scrutiny from Germany’s competition authorities over its handling of its users’ personal data.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The Federal Cartel Office, in an interim update on an investigation into Facebook, said in December that it objected to the way the company gains access to third-party data when an account is opened.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;This includes tapping information from its own WhatsApp and Instagram products - as well as how it tracks which sites its users access.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;One concern highlighted by the consumer rights group was that, in Facebook’s app for smartphones, a service was pre-activated that revealed the user’s location to the person they were chatting to.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Also, in the privacy settings, ticks were already placed in boxes that allowed search engines to link to the user’s timeline, meaning that anyone would be able quickly and easily to find a user’s profile.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;“The judges ruled that all five of the default settings on Facebook that vzvb complained about are invalid,” the group said in a statement, adding that several other of Facebook’s terms of use were found to be illegal.&lt;/p&gt;
&lt;div class=&quot;Attribution_container_28wm1&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution_o4ojT&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content_27_rw&quot;&gt;Writing by Douglas Busvine; Editing by Susan Fenton&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer_1gqgJ&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle_7sKLj&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 12 Feb 2018 20:11:55 +0000</pubDate>
<dc:creator>HoppedUpMenace</dc:creator>
<og:title>German court rules Facebook use of personal data illegal</og:title>
<og:url>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI</og:url>
<og:type>article</og:type>
<og:description>A German consumer rights group said on Monday that a court had found Facebook's use of personal data to be illegal because the U.S. social media platform did not adequately secure the informed consent of its users.</og:description>
<og:image>https://s2.reutersmedia.net/resources/r/?m=02&amp;d=20180212&amp;t=2&amp;i=1230704407&amp;w=1200&amp;r=LYNXMPEE1B11E</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</dc:identifier>
</item>
</channel>
</rss>