<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Facebook stock drops more than 20% after revenue forecast misses</title>
<link>https://www.marketwatch.com/story/facebook-stock-crushed-after-revenue-user-growth-miss-2018-07-25</link>
<guid isPermaLink="true" >https://www.marketwatch.com/story/facebook-stock-crushed-after-revenue-user-growth-miss-2018-07-25</guid>
<description>&lt;p&gt;Facebook Inc. is evidently not bulletproof.&lt;/p&gt;
&lt;p&gt;The social-media behemoth’s stock lost roughly one-fifth of its value in the extended session Wednesday after its earnings report missed expectations on revenue and showed slowing user growth. Weak guidance also rattled investors.&lt;/p&gt;
&lt;p&gt;Facebook &lt;span class=&quot;quote up bgQuote&quot; data-channel=&quot;/quotes/zigman/9962609/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNASStockFB&quot; href=&quot;https://www.marketwatch.com/investing/stock/fb&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;FB, &lt;span class=&quot;bgPercentChange&quot;&gt;+1.32%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  stock dropped about 7% immediately after the earnings report was released, then plummeted to a loss of more than 20% as a conference call with analysts progressed. Close to 34 million shares changed hands in the extended session, well above the average volume of 17 million shares for a regular trading session over the past month.&lt;/p&gt;
&lt;p&gt;Should the losses hold into Thursday’s regular session, Facebook would lose more than $100 billion in market capitalization and lose the stock’s gains for the year thus far. As the after-hours session wrapped up, Facebook was trading at $173.50, down 20%.&lt;/p&gt;
&lt;p&gt;Facebook stock had &lt;a href=&quot;https://www.marketwatch.com/story/facebook-stock-hits-record-high-ahead-of-earnings-2018-07-25&quot; class=&quot;icon none&quot;&gt;recovered from a decline earlier this year in the wake of the Cambridge Analytica scandal&lt;/a&gt;, one of several controversies and warning signs that &lt;a href=&quot;https://www.marketwatch.com/story/facebook-earnings-amid-controversy-finances-appear-bulletproof-2018-07-23&quot; class=&quot;icon none&quot;&gt;the company had managed to weather with little damage to its stock&lt;/a&gt;. But declining revenue and user growth, topped by a warning from executives that it will continue, &lt;a href=&quot;https://www.marketwatch.com/story/zuckerberg-deletefacebook-has-not-had-effect-but-it-will-take-years-to-fix-facebook-2018-04-04&quot; class=&quot;icon none&quot;&gt;seemed to end that run&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“The guidance, it’s nightmare guidance,” GBH Insights head of technology research Daniel Ives said. “If you look at their forecast for the second half of the year in terms of user growth, and the expense profile, it refuels the fundamental worries about Facebook post-Cambridge Analytica.”&lt;/p&gt;
&lt;div class=&quot;article-image-wrap shareable&quot; data-share-text=&quot;Facebook stock drops more than 20% after warning that revenue growth will take a hit&quot; data-share-modprefix=&quot;mw_image_&quot;&gt;&lt;img class=&quot;article-image NS&quot; src=&quot;https://ei.marketwatch.com/Multimedia/2018/07/25/Photos/NS/MW-GN150_facebo_20180725184902_NS.jpg?uuid=ecfefa74-905c-11e8-917b-ac162d7bc1f7&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.marketwatch.com/story/zuckerberg-deletefacebook-has-not-had-effect-but-it-will-take-years-to-fix-facebook-2018-04-04&quot; class=&quot;icon none&quot;&gt;Don’t miss: #DeleteFacebook has not had effect, but it will take years to fix Facebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Menlo Park, Calif.-based company reported $5.12 billion in net income for the quarter, which amounts to $1.74 a share, up from $3.89 billion or $1.32 a share in the year-ago period. The bottom-line beat was above analysts’ average estimates of $1.71 a share.&lt;/p&gt;
&lt;p&gt;Profits were not what rattled investors, though. Facebook recorded sales of $13.04 billion, a 41.9% increase from a year ago, but that was lower than analyst estimates and previous growth rates. User growth was flat in the U.S. and Canada, and declined in Europe from the &lt;a href=&quot;https://www.marketwatch.com/story/zuckerberg-deletefacebook-has-not-had-effect-but-it-will-take-years-to-fix-facebook-2018-04-04&quot; class=&quot;icon none&quot;&gt;previous quarter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But the stock didn’t fall off a cliff until Chief Financial Officer David Wehner disclosed that the social-media giant expects the revenue-growth slowdown to continue.&lt;/p&gt;
&lt;p&gt;“Our total revenue-growth rates will continue to decelerate in the second half of 2018, and we expect our revenue-growth rates to decline by high-single-digit percentages from prior quarters sequentially in both Q3 and Q4,” he said on the conference call. Wehner also said Facebook still expects expenses to grow 50% to 60% from last year.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.marketwatch.com/story/zuckerberg-effectively-defends-right-of-holocaust-deniers-to-be-heard-on-facebook-2018-07-18&quot; class=&quot;icon none&quot;&gt;See also: Zuckerberg effectively defends right of Holocaust deniers to be heard on Facebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the past, founder and Chief Executive Mark Zuckerberg has said the company &lt;a href=&quot;https://www.marketwatch.com/story/zuckerberg-deletefacebook-has-not-had-effect-but-it-will-take-years-to-fix-facebook-2018-04-04&quot; class=&quot;icon none&quot;&gt;planned to hire 20,000 people to handle safety&lt;/a&gt; and security on its platforms in &lt;a href=&quot;https://www.marketwatch.com/story/facebook-earnings-beat-estimates-amid-data-privacy-concerns-2018-04-25&quot; class=&quot;icon none&quot;&gt;response to controversies such as use of Facebook to push fake news&lt;/a&gt; ahead of the 2016 U.S. election. The company disclosed that its head count has increased 47% to 30,275 since the year-earlier period, part of that outsize spending.&lt;/p&gt;
&lt;p&gt;“As I’ve said on past calls, we’re investing so much in security that it will significantly impact our profitability,” Zuckerberg said. “We’re starting to see that this quarter.”&lt;/p&gt;
&lt;p&gt;Even though Ives says that the quarter was far from disastrous — it was decent with a few rough patches — he expects investors to continue punishing the stock in the near-term.&lt;/p&gt;
&lt;p&gt;“The quarter itself had geographic soft spots and disappointed the bulls,” Ives said. “There are a lot of natural headwinds [Facebook is] seeing, this is going to be one quarter that puts the stock in the penalty box for a while until they can prove that advertising tailwinds and user growth are back on the right track.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Read also:&lt;/strong&gt; &lt;a href=&quot;https://www.marketwatch.com/story/facebook-to-profit-from-gdpr-says-analyst-2018-06-01&quot; class=&quot;icon none&quot;&gt;Facebook likely to profit from new European rules on data privacy, analyst says&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Facebook’s numbers in Europe declined in large part due to the &lt;a href=&quot;https://www.marketwatch.com/story/5-things-to-know-about-europes-new-data-rules-which-could-cost-big-bad-tech-billions-2018-03-21&quot; class=&quot;icon none&quot;&gt;European Union’s General Data Protection Regulation&lt;/a&gt;, which went into effect during the quarter. Some analysts had speculated that GDPR might actually benefit giants such as Facebook and Alphabet because &lt;a href=&quot;https://www.marketwatch.com/story/facebook-to-profit-from-gdpr-says-analyst-2018-06-01&quot; class=&quot;icon none&quot;&gt;they would be able to implement the new requirements unlike smaller companies&lt;/a&gt;, but Zuckerberg and other executives said GDPR was the reason for Europe’s slowing user count. It dropped by 3 million daily users and 1 million monthly users since the first quarter.&lt;/p&gt;
&lt;p&gt;“We did see a decline in monthly actives in Europe, down by about 1 million people as a result, and at the same time, it was encouraging to see the vast majority of people affirm that though want us to use context, including from websites this they visit, to make our ads more relevant and improve their overall product experience,” Zuckerberg said on the earnings call with analysts.&lt;/p&gt;
&lt;p&gt;Chief Operating Officer Sheryl Sandberg said on the call that the GDPR has not affected the company’s top line.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.marketwatch.com/story/5-things-to-know-about-europes-new-data-rules-which-could-cost-big-bad-tech-billions-2018-03-21&quot; class=&quot;icon none&quot;&gt;See: 5 things to know about the GDPR rules taking effect Friday — which could cost big, bad tech billions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The one saving grace for Facebook could be continued support from advertisers. Less subject to the quarterly demands of investors, advertisers aren’t yet seen as planning to ease back on Facebook budgets.&lt;/p&gt;

&lt;p&gt;“There’s still unprecedented scale, the best ad tech in the industry,” said PMX Agency Facebook lead Jesse Math. “In the short term, Facebook is still viable. Really this quarter and this year it’s focused on a long-term strategy, everything they do is focused on making Facebook a place where users want to be. All the changes it’s been making to the platform, the algorithms, the tools advertisers use are for the long term.”&lt;/p&gt;
&lt;p&gt;As Facebook stock plummeted after hours, it also brought social-media rivals Twitter Inc. &lt;span class=&quot;quote up bgQuote&quot; data-channel=&quot;/quotes/zigman/23556538/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNYSStockTWTR&quot; href=&quot;https://www.marketwatch.com/investing/stock/twtr&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;TWTR, &lt;span class=&quot;bgPercentChange&quot;&gt;+4.86%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  and Snapchat parent company Snap Inc. &lt;span class=&quot;quote up bgQuote&quot; data-channel=&quot;/quotes/zigman/86364478/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNYSStockSNAP&quot; href=&quot;https://www.marketwatch.com/investing/stock/snap&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;SNAP, &lt;span class=&quot;bgPercentChange&quot;&gt;+1.90%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  to the party, &lt;a href=&quot;https://www.marketwatch.com/story/twitter-and-snap-fall-along-with-facebook-2018-07-25&quot; class=&quot;icon none&quot;&gt;sending both stocks down by single-digit&lt;/a&gt; percentages. Facebook stock has gained 23% this year, as the S&amp;amp;P 500 index  &lt;span class=&quot;quote up bgQuote&quot; data-channel=&quot;/quotes/zigman/3870025/realtime&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;IndexSPX&quot; href=&quot;https://www.marketwatch.com/investing/index/spx&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;SPX, &lt;span class=&quot;bgPercentChange&quot;&gt;+0.91%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  rose 5.5%.&lt;/p&gt;




</description>
<pubDate>Wed, 25 Jul 2018 22:18:44 +0000</pubDate>
<dc:creator>noncoml</dc:creator>
<og:description>The social media behemoth’s stock lost near one-fifth of its value in after-hours trading Wednesday after an earnings report that missed expectations on revenue and showed slowing user growth, and weak guidance that rattled investors.</og:description>
<og:type>article</og:type>
<og:url>https://www.marketwatch.com/story/facebook-stock-crushed-after-revenue-user-growth-miss-2018-07-25</og:url>
<og:title>Facebook stock drops more than 20% after warning that revenue growth will take a hit</og:title>
<og:image>http://s.marketwatch.com/public/resources/MWimages/MW-GN074_facebo_ZG_20180724162821.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.marketwatch.com/story/facebook-stock-crushed-after-revenue-user-growth-miss-2018-07-25</dc:identifier>
</item>
<item>
<title>Elixir v1.7 released</title>
<link>https://elixir-lang.org/blog/2018/07/25/elixir-v1-7-0-released/</link>
<guid isPermaLink="true" >https://elixir-lang.org/blog/2018/07/25/elixir-v1-7-0-released/</guid>
<description>&lt;p&gt;A new semester has started, which means it is time for a new Elixir release! This release brings quality of life improvements to the documentation, to error handling, to logger reporting, and to ExUnit, Elixir’s testing library.&lt;/p&gt;
&lt;p&gt;We are also glad to welcome Michał Muskała to the Elixir Core team. Prior to joining the team, he was &lt;a href=&quot;https://github.com/elixir-ecto/ecto&quot;&gt;a member of the Ecto team&lt;/a&gt;, he has made &lt;a href=&quot;https://github.com/elixir-lang/elixir/pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+author%3Amichalmuskala&quot;&gt;plenty of contributions to Elixir&lt;/a&gt;, often to improve performance, and &lt;a href=&quot;https://github.com/erlang/otp/pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+author%3Amichalmuskala&quot;&gt;is a frequent to contribute to Erlang/OTP too&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Elixir v1.7 implements &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48&lt;/a&gt;. EEP 48 aims to bring documentation interoperability across all languages running on the Erlang VM.&lt;/p&gt;
&lt;p&gt;Furthermore, EEP 48 introduces the ability to annotate documentation with metadata, which we have made possible to leverage from Elixir:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;@moduledoc&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;A brand new module&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;@moduledoc&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;authors:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Jane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;since:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.4.0&quot;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Metadata can be given to &lt;code class=&quot;highlighter-rouge&quot;&gt;@moduledoc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@typedoc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@doc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We have updated &lt;a href=&quot;https://github.com/elixir-lang/ex_doc&quot;&gt;the ExDoc tool&lt;/a&gt; to start leveraging metadata in order to provide better documentation for developers. Some of the improvements include:&lt;/p&gt;
&lt;p&gt;Elixir’s interactive shell, IEx, has also been updated to print metadata:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://elixir-lang.org/images/contents/iex-metadata.png&quot; alt=&quot;IEx metadata&quot; /&gt;&lt;/p&gt;
&lt;p&gt;While Elixir allows any metadata to be given, those tools currently exhibit only &lt;code class=&quot;highlighter-rouge&quot;&gt;:deprecated&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;:since&lt;/code&gt;. Other keys may be shown in the future.&lt;/p&gt;
&lt;p&gt;Those improvements are not exclusive to the standard library, they are available to every Elixir library and application. We hope one day they will be available to all applications running on the Erlang VM too.&lt;/p&gt;
&lt;p&gt;To access the new documentation format, developers should use &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#fetch_docs/1&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt;. We have always been proud of treating documentation as a first-class citizen and the ability to add structured information to the documentation is a further step in this direction.&lt;/p&gt;
&lt;h2 id=&quot;the-__stacktrace__-construct&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;__STACKTRACE__&lt;/code&gt; construct&lt;/h2&gt;
&lt;p&gt;Erlang/OTP 21.0 introduces a new way to retrieve the stacktrace that is lexically scoped and no longer relies on side-effects like &lt;code class=&quot;highlighter-rouge&quot;&gt;System.stacktrace/0&lt;/code&gt; does. Before one would write:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stacktrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reraise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stacktrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In Elixir v1.7, this can be written as:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__STACKTRACE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reraise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__STACKTRACE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This change may also yield performance improvements in the future, since the lexical scope allows us to track precisely when a stacktrace is used and we no longer need to keep references to stacktrace entries after the &lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;/code&gt; construct finishes.&lt;/p&gt;
&lt;p&gt;Other parts of the exception system have also been improved. For example, more information is provided in certain occurrences of &lt;code class=&quot;highlighter-rouge&quot;&gt;ArgumentError&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ArithmeticError&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;KeyError&lt;/code&gt; messages.&lt;/p&gt;
&lt;h2 id=&quot;erlangotp-logger-integration&quot;&gt;Erlang/OTP logger integration&lt;/h2&gt;
&lt;p&gt;Erlang/OTP 21 includes a new &lt;code class=&quot;highlighter-rouge&quot;&gt;:logger&lt;/code&gt; module. Elixir v1.7 fully integrates with the new &lt;code class=&quot;highlighter-rouge&quot;&gt;:logger&lt;/code&gt; and leverages its metadata system. The &lt;code class=&quot;highlighter-rouge&quot;&gt;Logger.Translator&lt;/code&gt; mechanism has also been improved to export metadata, allowing custom Logger backends to leverage information such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:crash_reason&lt;/code&gt; - a two-element tuple with the throw/error/exit reason as the first argument and the stacktrace as the second&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:initial_call&lt;/code&gt; - the initial call that started the process&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:registered_name&lt;/code&gt; - the process’ registered name as an atom&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We recommend Elixir libraries that previously hooked into Erlang’s &lt;code class=&quot;highlighter-rouge&quot;&gt;:error_logger&lt;/code&gt; to hook into &lt;code class=&quot;highlighter-rouge&quot;&gt;Logger&lt;/code&gt; instead, in order to support all current and future Erlang/OTP versions.&lt;/p&gt;
&lt;h2 id=&quot;logger-compile-time-purging&quot;&gt;Logger compile-time purging&lt;/h2&gt;
&lt;p&gt;Previously, Logger macros such as &lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;info&lt;/code&gt;, and so on would always evaluate their arguments, even when nothing would be logged. From Elixir v1.7 the arguments are only evaluated when the message is logged.&lt;/p&gt;
&lt;p&gt;The Logger configuration system also accepts a new option called &lt;code class=&quot;highlighter-rouge&quot;&gt;:compile_time_purge_matching&lt;/code&gt; that allows you to remove log calls with specific compile-time metadata. For example, to remove all logger calls from application &lt;code class=&quot;highlighter-rouge&quot;&gt;:foo&lt;/code&gt; with level lower than &lt;code class=&quot;highlighter-rouge&quot;&gt;:info&lt;/code&gt;, as well as remove all logger calls from &lt;code class=&quot;highlighter-rouge&quot;&gt;Bar.foo/3&lt;/code&gt;, you can use the following configuration:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;compile_time_purge_matching:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;application:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;level_lower_than:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;module:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;function:&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;foo/3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;exunit-improvements&quot;&gt;ExUnit improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://hexdocs.pm/ex_unit/&quot;&gt;ExUnit&lt;/a&gt; is Elixir’s unit testing library. ExUnit has always leveraged Elixir macros to provide excellent error reports when a failure happens. For example, the following code:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fox jumps over the lazy dog&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;brown fox jumps over the dog&quot;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;will fail with the following report:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://elixir-lang.org/images/contents/exunit-diff.png&quot; alt=&quot;ExUnit Diff&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;assert&lt;/code&gt; macro is able to look at the code, extract the current file, the line, extract the operands and show a diff between the data structures alongside the stacktrace when the assertion fails.&lt;/p&gt;
&lt;p&gt;However, sometimes we need to write assertions such as &lt;code class=&quot;highlighter-rouge&quot;&gt;assert some_function(expr1, var2)&lt;/code&gt;. When such assertion fails, we usually have to re-run the tests, now debugging or printing the values of &lt;code class=&quot;highlighter-rouge&quot;&gt;expr1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;var2&lt;/code&gt;. In Elixir v1.7, when a “bare” assertion fails, we will print the value of each argument individually. For a simple example such as &lt;code class=&quot;highlighter-rouge&quot;&gt;assert some_vars(1 + 2, 3 + 4)&lt;/code&gt;, we get this report:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://elixir-lang.org/images/contents/exunit-bare-assertion-diff.png&quot; alt=&quot;ExUnit Bare Asssertion Diff&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We have also &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.DocTest.html#content&quot;&gt;added coloring and diffing to doctests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While ExUnit is our test framework, Mix is our build tool. Developers typically run their tests by calling &lt;code class=&quot;highlighter-rouge&quot;&gt;mix test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the &lt;code class=&quot;highlighter-rouge&quot;&gt;mix test&lt;/code&gt; side of things, there is a new &lt;code class=&quot;highlighter-rouge&quot;&gt;--failed&lt;/code&gt; flag that runs all tests that failed the last time they ran. Finally, coverage reports generated with &lt;code class=&quot;highlighter-rouge&quot;&gt;mix test --cover&lt;/code&gt; include a summary out of the box:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Generating cover results ...

Percentage | Module
-----------|--------------------------
   100.00% | Plug.Exception.Any
   100.00% | Plug.Adapters.Cowboy2.Stream
   100.00% | Collectable.Plug.Conn
   100.00% | Plug.Crypto.KeyGenerator
   100.00% | Plug.Parsers
   100.00% | Plug.Head
   100.00% | Plug.Router.Utils
   100.00% | Plug.RequestId
       ... | ...
-----------|--------------------------
    77.19% | Total
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;summing-up&quot;&gt;Summing up&lt;/h2&gt;
&lt;p&gt;We are really proud of this release, as it focuses mostly on quality of life improvements, instead of flashy new features. As Elixir continues to mature, expect more releases like this one. The full list of changes is available in our &lt;a href=&quot;https://github.com/elixir-lang/elixir/releases/tag/v1.7.0&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also seen important developments in other areas not directly related to the Elixir codebase:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;We have added &lt;a href=&quot;https://elixir-lang.org/development.html&quot;&gt;a “Development” section&lt;/a&gt; to the website, that outlines the Elixir team structure and goals&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://doc.honeypot.io/elixir-documentary-2018/&quot;&gt;Elixir now has its own mini-documentary&lt;/a&gt;, by &lt;a href=&quot;https://www.honeypot.io/&quot;&gt;Honeypot&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have already highlighted some of the improvements in the ExDoc tool. Another improvement worth mentioning is the syntax highlighting is now done in Elixir itself, via the &lt;a href=&quot;https://github.com/tmbb/makeup&quot;&gt;Makeup&lt;/a&gt; library. This gives us more control over the grammar, the style, and improves load times. If you would like to add support for other languages, &lt;a href=&quot;https://github.com/tmbb/makeup&quot;&gt;reach out&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Finally, don’t forget &lt;a href=&quot;https://elixirconf.com/&quot;&gt;ElixirConf US&lt;/a&gt; is coming soon, in Bellevue, WA, September 4-7. Last year my keynote focused on the last 5 years with Elixir. This year we are ready to look into the 5 years ahead.&lt;/p&gt;
&lt;p&gt;Check &lt;a href=&quot;https://elixir-lang.org/install.html&quot;&gt;the Install section&lt;/a&gt; to get Elixir installed and read our &lt;a href=&quot;http://elixir-lang.org/getting-started/introduction.html&quot;&gt;Getting Started guide&lt;/a&gt; to learn more.&lt;/p&gt;
</description>
<pubDate>Wed, 25 Jul 2018 20:46:31 +0000</pubDate>
<dc:creator>josevalim</dc:creator>
<og:title>Elixir v1.7 released</og:title>
<og:description>Elixir v1.7 includes many quality of life improvements, focusing on documentation, Logger and ExUnit, as well as a new Elixir Core team member!</og:description>
<og:url>https://elixir-lang.org/blog/2018/07/25/elixir-v1-7-0-released/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://elixir-lang.org/blog/2018/07/25/elixir-v1-7-0-released/</dc:identifier>
</item>
<item>
<title>Google Unveils Titan Security Key, a Yubico-Like Phishing Resistant 2FA Device</title>
<link>https://www.cyberscoop.com/google-titan-security-key-2fa-anti-phishing/</link>
<guid isPermaLink="true" >https://www.cyberscoop.com/google-titan-security-key-2fa-anti-phishing/</guid>
<description>&lt;p&gt;Google’s workforce hasn’t suffered a single confirmed account takeover in over a year. The impressive security stat is due to small USB security keys issued to all 85,000 of the company’s employees. Companies that produce these small pieces of hardware, like Yubico, have seen tremendous growth over the last two years thanks to rapidly accelerating adoption — but they will now have fresh competition.&lt;/p&gt;
&lt;p&gt;Google will soon start widely selling its own Titan Security Key, which includes firmware developed by the omnipresent tech giant itself. The product is available now to Google Cloud customers and will eventually be available to general customers, the company announced Wednesday at its Google Cloud Next conference in San Francisco.&lt;/p&gt;
&lt;p&gt;Like similar keys from other companies, it will provide a second authentication factor for software use, network access, account management and other services. When the hardware is linked to an account, a password isn’t enough — the user must plug in the key and activate it before getting access.&lt;/p&gt;
&lt;p&gt;“We’ve long advocated the use of security keys as the strongest, most phishing-resistant authentication factor for high-value users, especially cloud admins, to protect against the potentially damaging consequences of credential theft,” Jennifer Lin, a Google Cloud product director, said. “Titan Security Key gives you even more peace of mind that your accounts are protected, with assurance from Google of the integrity of the physical key.”&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-28469&quot; src=&quot;https://s3-us-west-2.amazonaws.com/cyberscoop-media/wp-content/uploads/2018/07/24142600/Screen-Shot-2018-07-24-at-11.25.13-AM.png&quot; alt=&quot;&quot; width=&quot;573&quot; height=&quot;278&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Google’s cloud customers typically give security keys to high-value users like administrators and root users where a compromise would be exceptionally damaging.&lt;/p&gt;
&lt;p&gt;“It’s built with a secure element including firmware we built ourselves,” Google’s Rob Sadowski said. “It provides a ton of security with very little interaction and effort on the part of the user.”&lt;/p&gt;
&lt;p&gt;Google Cloud is the fastest growing cloud business in an increasingly competitive industry.&lt;/p&gt;
&lt;p&gt;“On the backend, all you have to do on the admin console is literally check a box that says ‘use Titan Security Keys for this app,'” Sadowski said. “It’s that simple. If there’s a man-in-the-middle attack or something of that kind, it won’t have the authenticated response and will reject the connection. Very simple, very powerful.”&lt;/p&gt;
&lt;p&gt;At a time when cybersecurity experts consider multifactor authentication a necessary step — despite &lt;a href=&quot;https://www.cyberscoop.com/two-factor-authentication-duo-security-yubikey/&quot;&gt;most Americans remaining in the dark&lt;/a&gt; — security keys are typically considered the strongest defense against account takeovers.&lt;/p&gt;
&lt;p&gt;In the last two years, Yubico has seen rapidly accelerating growth, to the point where “19 of the 20 biggest internet companies on the planet,” including Google, now use YubiKeys, according to Stina Ehrensvärd, founder and CEO of the Swedish-American company.&lt;/p&gt;
&lt;p&gt;For the past two years, Google has given its employees Yubikeys despite the fact that it runs and maintains its own Google Authenticator app.&lt;/p&gt;
&lt;p&gt;“Yubikeys cost Google less than their own authenticator app,” Ehrensvärd said.&lt;/p&gt;
&lt;p&gt;Google declined to specify who its partners are in manufacturing Titan keys but it is not manufactured by or connected with Yubico, the company confirmed.&lt;/p&gt;
&lt;p&gt;Google’s Jess Leroy called the Titan Key the “next generation” following Google’s previous YubiKey offerings.&lt;/p&gt;
&lt;p&gt;Phishing represents a huge threat. About 71 percent of all targeted attacks start with phishing attempts, according — it’s how hackers broke into the Democratic National Committee in 2016 and it’s &lt;a href=&quot;http://www.csoonline.com/article/3036837/security/phishing-remains-top-attack-vector-for-criminals-both-novice-and-professional.html&quot;&gt;the top attack vector&lt;/a&gt; against &lt;a href=&quot;https://nakedsecurity.sophos.com/2016/10/25/how-hackers-broke-into-john-podesta-dnc-gmail-accounts/&quot;&gt;all&lt;/a&gt; &lt;a href=&quot;http://www.cnbc.com/2016/11/21/as-tax-season-nears-be-prepared-for-irs-scams.html&quot;&gt;manner&lt;/a&gt; of targets.&lt;/p&gt;
&lt;p&gt;Other common forms of two-factor authentication include text-message codes and mobile apps like Google Authenticators but they can all be phished, intercepted and &lt;a href=&quot;https://www.cyberscoop.com/two-factor-authentication-nist-duo-security/&quot;&gt;hacked&lt;/a&gt; more easily than security keys, which typically are plug-and-play, without any special software drivers.&lt;/p&gt;
&lt;p&gt;All of the above options, however, are exponentially more secure than having no multifactor authentication at all. Users of any online service should demand and use multifactor authentication all over the web.&lt;/p&gt;

</description>
<pubDate>Wed, 25 Jul 2018 16:31:41 +0000</pubDate>
<dc:creator>chobo</dc:creator>
<og:type>article</og:type>
<og:title>Security keys have been good to Google, so now it's promoting one of its own - Cyberscoop</og:title>
<og:description>Google’s workforce hasn’t suffered a single confirmed account takeover in over a year. The impressive security stat is due to small USB security keys issued to all 85,000 of the company’s employees. Companies that produce these small pieces of hardware, like Yubico, have seen tremendous growth over the last two years thanks to rapidly accelerating adoption — but they will now have fresh competition. Google will soon start widely selling its own Titan Security Key, which includes firmware developed by the omnipresent tech giant itself. The product is available now to Google Cloud customers and will eventually be available to general customers, the company announced Wednesday at its Google Cloud Next conference in San Francisco. Like similar keys from other companies, it will provide a second authentication factor for software use, network access, account management and other services. When the hardware is linked to an account, a password isn’t enough — the user must plug in …</og:description>
<og:url>https://www.cyberscoop.com/google-titan-security-key-2fa-anti-phishing/</og:url>
<og:image>https://s3-us-west-2.amazonaws.com/cyberscoop-media/wp-content/uploads/2018/07/24145901/gcp_datacenter_ColorfulPipes_Bike.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cyberscoop.com/google-titan-security-key-2fa-anti-phishing/</dc:identifier>
</item>
<item>
<title>GlaxoSmithKline makes $300M investment in 23andMe, forms 50-50 R&amp;D pact</title>
<link>https://www.fiercebiotech.com/biotech/glaxosmithkline-makes-300m-investment-23andme-forms-50-50-r-d-pact</link>
<guid isPermaLink="true" >https://www.fiercebiotech.com/biotech/glaxosmithkline-makes-300m-investment-23andme-forms-50-50-r-d-pact</guid>
<description>&lt;p&gt;GlaxoSmithKline has &lt;a href=&quot;https://www.gsk.com/en-gb/media/press-releases/gsk-and-23andme-sign-agreement-to-leverage-genetic-insights-for-the-development-of-novel-medicines/&quot;&gt;made&lt;/a&gt; a $300 million equity investment in 23andMe as part of a deal that pulls it close to the consumer genetics pioneer. The partners are contributing preclinical programs to a 50-50 collaboration that will use 23andMe’s genotypic and phenotypic data to accelerate progress. &lt;/p&gt;
&lt;p&gt;The agreement features multiple components. To get the relationship started, 23andMe and GSK are bringing existing programs into the collaboration. 23andMe is proposing to include its early-stage programs, while GSK is contributing its LRRK2 inhibitor. GSK thinks 23andMe’s database of people who know their LRRK2 variant status will help the Parkinson’s program enroll patients on the way to clinical proof of concept.&lt;/p&gt;

&lt;p&gt;GSK and 23andMe will also work on earlier-stage programs. The partners plan to use 23andMe’s data to jointly discover drug targets. A joint GSK-23andMe team will then prioritize the targets based on the strength of the hypothesis, chances of drugging them and clinical opportunity. GSK and 23andMe expect to jointly progress “a number” of targets every year. Each company can advance targets independently, too. The partners will split the costs and profits related to these activities.&lt;/p&gt;
&lt;section role=&quot;article&quot; about=&quot;/node/507101&quot; class=&quot;node node--type-embed-promo node--view-mode-body-embed-promo clearfix&quot; readability=&quot;4.355198019802&quot;&gt;&lt;header&gt;&lt;h2&gt;&lt;span&gt;Your Daily Newsletter — Free&lt;/span&gt;&lt;/h2&gt;
&lt;/header&gt;&lt;div class=&quot;promo_content clearfix&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;
&lt;h3&gt;Enjoying this story? Subscribe to FierceBiotech!&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;Biopharma is a fast-growing world where big ideas come along every day. Our subscribers rely on FierceBiotech as their must-read source for the latest news, analysis and data in the world of biotech and pharma R&amp;amp;D. To read on the go, sign up today to get biotech news and updates delivered right to your inbox!&lt;/p&gt;
&lt;/div&gt;
&lt;footer&gt;
&lt;/footer&gt;&lt;/section&gt;&lt;p&gt;These activities are set to take place over the next four years. The agreement also features an option to extend the collaboration into a fifth year. If that happens, GSK will become 23andMe’s exclusive drug target discovery collaborator.&lt;/p&gt;
&lt;p&gt;GSK has also secured itself a source of data to support its internal programs. 23andMe has greenlit GSK to analyze the database to validate its portfolio and support enrollment in its clinical trials.&lt;/p&gt;
&lt;p&gt;The expectation is that the genetic and phenotypic information 23andMe has accrued on the users of its testing service will facilitate more targeted R&amp;amp;D activities, from target selection through to the identification of clinical trial participants. &lt;/p&gt;
&lt;p&gt;“We know that drug targets with genetic validation have a significantly higher chance of ultimately demonstrating benefit for patients and becoming medicines,” GSK CSO Hal Barron said in a statement. “Partnering with 23andMe ... will help to shift our research and development organization to be ‘driven by genetics’, and increase the impact GSK can have on patients.”&lt;/p&gt;
&lt;p&gt;GSK indicated its interest in becoming such a genetics-driven organization when it teamed up with the UK Biobank and Regeneron to sequence 500,000 volunteers in 2017. But the Big Pharma rethought its role in the collaboration at the turn of the year, leaving Regeneron to forge ahead with the sequencing with the financial support of AbbVie, Alnylam, AstraZeneca, Biogen and Pfizer.&lt;/p&gt;

&lt;p&gt;By switching its attention to 23andMe, GSK has furthered the turnaround of the genetic testing firm. 23andMe looked to be on the ropes when the FDA hit it with a warning letter in 2013. But the startup pivoted, stepping up its interest in drug discovery while working to resolve the standoff with the FDA. Deals with Genentech, Pfizer and a $250 million financing followed. &lt;/p&gt;
</description>
<pubDate>Wed, 25 Jul 2018 15:16:41 +0000</pubDate>
<dc:creator>adenadel</dc:creator>
<og:image>https://qtxasset.com/fiercebiotech/1532519273/23andMe.png/23andMe.png?3HTcpFXXkNroJhvfFC98AmqUoqMvpGip</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.fiercebiotech.com/biotech/glaxosmithkline-makes-300m-investment-23andme-forms-50-50-r-d-pact</dc:identifier>
</item>
<item>
<title>The secret call to Andy Grove that may have helped Apple buy NeXT</title>
<link>https://www.cake.co/conversations/g4CP6zJ/the-secret-call-to-andy-grove-that-may-have-helped-steve-jobs-change-the-world</link>
<guid isPermaLink="true" >https://www.cake.co/conversations/g4CP6zJ/the-secret-call-to-andy-grove-that-may-have-helped-steve-jobs-change-the-world</guid>
<description>&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; The thing I loved most about working in developer relations at NeXT was how Steve could call anyone.&lt;/p&gt;
&lt;p&gt;He would burst in my office and say, “I’m gonna call Bill about TrueType,” and gesture for me to follow. A minute later he’d have Bill Gates on the speaker phone with me in fly-on-the-wall mode.&lt;/p&gt;&lt;p&gt;“BUT BILL! You ripped off Adobe and made John &lt;em&gt;cry&lt;/em&gt;.” (John Warnock was the CEO of Adobe.)&lt;/p&gt;&lt;p&gt;“Steve, we didn’t want to get into the font business. It’s a nightmare. But Adobe wouldn’t open their fonts until they had competition.”&lt;/p&gt;&lt;p&gt;One time Steve said, “I invited Jonathan Seybold here for a day. Make sure he gets access to everyone who can explain details, like 4 bits of transparency in our new color printers. Bring him to me at 4 o’clock.” Seybold Expos were &lt;em&gt;the&lt;/em&gt; force in electronic publishing then.&lt;/p&gt;&lt;p&gt;Steve let me be a fly on the wall for his two hours with Jonathan that day. It was fascinating to see Steve in intense listening mode, asking short questions and sitting patiently for Jonathan’s careful answers. “Jonathan, how are we different from Apple?”&lt;/p&gt;&lt;p&gt;“Oh, that’s an important question. That deserves a thoughtful answer.” I’ve played Jonathan’s answer in my head 1,000 times since then.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://celebritynetworthwiki.org/richest-business/andrew-grove-net-worth/&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Pic of Andy Grove&lt;/a&gt; from Net Worth Times:&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 2:&lt;/strong&gt; Jonathan said we were just like Apple, but very different from Microsoft. Microsoft had turned software creation into a factory process. Three people would visit him with a 1.0 product who seemed to be product managers. They took notes furiously as he tried the product, which was never any good. As he pointed out the things he didn’t like they would enthusiastically say, “thank you Jonathan!” And they’d dig for more details.&lt;/p&gt;&lt;p&gt;They’d come back in a year with a much-improved 2.0 that was still not ready for prime time and the process would repeat. Finally they’d return with a 3.0 and it was good enough to get respect and market share.&lt;/p&gt;&lt;p&gt;Apple, on the other hand, would send its creator. He or she wanted to build something insanely great on the first try that would change the world. Their mission was to get Jonathan to love it. It was hard for him to give feedback because the creator would get ever more defensive and deflated if Jonathan tried. After awhile it was too uncomfortable and he stopped trying.&lt;/p&gt;
&lt;p&gt;I've always wondered how Steve took that answer, because it described himself so well.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/BpSksnMyK1w4_1532447172246.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/BpSksnMyK1w4_1532447172246.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/BpSksnMyK1w4_1532447172246.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/BpSksnMyK1w4_1532447172246.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/BpSksnMyK1w4_1532447172246.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 3:&lt;/strong&gt; One visitor was George Fisher, the superstar CEO of high-flying Motorola. Their processors powered Apple and NeXT computers. He dropped a bomb that caught me completely by surprise: the Motorola 68000 line of processors we used was near its end of life because it had become too hard to cool.&lt;/p&gt;&lt;p&gt;The answer was to adopt their upcoming processor, the Motorola 88110. To me it felt like the kind of crushing blow that could kill our fragile company. We would have to design new hardware. Who knew how much work it would take to get our operating system to support it? I would have to tell our developers that their lives were going to get more complicated and expensive. What if Motorola didn’t get enough support for it and we had to change processors again?&lt;/p&gt;&lt;p&gt;Back in the day, there was a widespread belief that Intel’s processors were also at an evolutionary dead-end and Microsoft would face our fate as well. I made a list of options: Sun’s Sparc chip? At least they had shown that you could move from the Motorola 68000 to a so-called Reduced Instruction Set chip and succeed. But they were our enemy.&lt;/p&gt;&lt;p&gt;MIPS, the respected chip company Silicon Graphics bought? That made us dependent on a competitor. But supporters of Motorola’s 88110 didn’t look like a who’s-who of the industry, except Apple, and I heard they were wavering.  &lt;/p&gt;&lt;p&gt;I can’t explain why I couldn’t just chill and trust Steve, George Fisher and our engineers. Who was I to to get so worked up over it? Steve called me at 11 one night to settle me down but I couldn’t let it go. I wanted to know what Intel was doing and everyone just shrugged. Steve had a philosophy of betting on technologies in the spring of their lives, not the autumn.&lt;/p&gt;&lt;p&gt;The next day Steve held a meeting with our engineers and me where he punctuated the air dramatically with his finger and said, “This company will live or die by its choice to support the 88110.” I don’t know what came over me. I said “die.”&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/GkgpztwJqjPc_1532447353049.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/GkgpztwJqjPc_1532447353049.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/GkgpztwJqjPc_1532447353049.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/GkgpztwJqjPc_1532447353049.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/GkgpztwJqjPc_1532447353049.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 4:&lt;/strong&gt; That was the last word spoken in the meeting and I could tell Steve was mad. I was mad too. An engineer walked me to my office while saying it had been nice knowing me.&lt;/p&gt;&lt;p&gt;I closed my office door, picked up the phone, and asked for Andy Grove. I wanted to know why they weren’t in the conversation. I guessed it was because we used the Intel i860 chip on one of our graphics boards and it didn’t impress us. But what were Michael Dell, Bill Gates and Andy going to do about the Intel 80486 facing the same fate as Motorola’s 68040? I had to know.&lt;/p&gt;&lt;p&gt;I got Andy’s assistant on the phone. His assistants were executives-in-training who spent 2 years mentoring under Andy. I explained that if Steve heard about this call I would be fired. I justified the call by saying sometimes history has shown you have to do the right thing and keep it secret from Steve until later, as the Mac team famously did when they hid a Sony engineer in the Apple building so Steve wouldn’t find out.&lt;/p&gt;&lt;p&gt;I said I had no idea what Steve’s relationship with Andy was. For all I knew, Steve thought Intel chips were shit (the word Steve would have used). But I knew Steve liked people at the top of their fields who admired and mentored him. Could I meet with Andy and explain our situation so Andy could call Steve?&lt;/p&gt;&lt;p&gt;He said he would ask Andy. He called back and scheduled a two-hour meeting at Intel, saying Andy would be there. I suddenly felt I had to have an engineer there and sought William Parkhurst, who I admired as one of the most influential engineers we ever hired. I fessed up to my boss, Mike Slade, about what we were doing. Max Henry, Donna Simonides, William and I piled in my Honda Accord and headed for Intel.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/c31m3drQZscH_1532447533032.jpeg&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/c31m3drQZscH_1532447533032.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/c31m3drQZscH_1532447533032.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/c31m3drQZscH_1532447533032.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/c31m3drQZscH_1532447533032.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 5:&lt;/strong&gt; Our engineers told us Intel chips were inferior to Motorola’s and they only became a standard because Intel had managed to convince IBM’s PC division to use them. I had read two of Andy’s books and was concerned that he was a salesman prone to exaggeration.&lt;/p&gt;&lt;p&gt;And that was exactly my impression when I met him. Motorola couldn’t push the 68040 past 40 megahertz and to their credit, 40 megahertz was insane! Oh my God. The only thing more insane was Intel’s 80486 running at 66 megahertz! Can you imagine? I was a physicist, I should know.&lt;/p&gt;&lt;p&gt;And that’s when Andy lost some credibility with me. I can’t remember exactly what he said about future speeds, but I seem to remember 400 megahertz or maybe even more. Oh, please. You’re claiming 10x more than Motorola? Everyone knows Motorola is the more technically capable company. You won’t be able to bullshit Steve the way you did IBM.&lt;/p&gt;&lt;p&gt;And yet. He seemed so confident. Probably just a good actor?&lt;/p&gt;&lt;p&gt;I thought the plan should be for Andy to call Steve and admire him for all he’s done (not hard to do). Bring technical people up to meet Steve’s, offer a few really great engineers to do a test port of NeXTstep on Intel, and provide some funding. Maybe Steve would bite?&lt;/p&gt;&lt;p&gt;Andy’s assistant said he’d keep me up to date on what happened next. I left wondering what Bill Gates and Michael Dell thought of Andy. &lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/McX7VsrrTmz0_1532447639934.jpeg&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/McX7VsrrTmz0_1532447639934.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/McX7VsrrTmz0_1532447639934.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/McX7VsrrTmz0_1532447639934.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/McX7VsrrTmz0_1532447639934.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 6:&lt;/strong&gt; When the first call came it was to say Andy and a large contingent from Intel were meeting Steve in the big downstairs conference room. Andy’s assistant didn’t know who was involved on our side besides Steve. I never heard.&lt;/p&gt;&lt;p&gt;Sometime later Steve wandered in my office and asked if I thought porting NeXTstep to Intel was a good idea. Awkward. Did he know? I asked if Intel was going to help. Steve said they offered two great engineers to work alongside ours. They thought it could be done in 6 months. We’d have to keep it super secret from the outside world. Could I act as relationship manager?&lt;/p&gt;&lt;p&gt;This wasn’t as strange as it sounded because I was managing the IBM relationship. Steve had licensed NeXTstep for them to use on their workstations years ago and they had a team living at NeXT working on it. We didn’t have much faith in that relationship.  &lt;/p&gt;&lt;p&gt;“Hmmm, that sounds like a good idea, Steve. The 66 megahertz 80486 chip?”&lt;/p&gt;&lt;p&gt;“Yeah. Intel’s graphics primitives are shit so it probably won’t be any faster than the 33 megahertz 68040 we’re using now.”&lt;/p&gt;&lt;p&gt;Six months later I carried a beige Intel-based computer from a windowless room to my office, wrapped in a black cover. It was exactly twice the speed of our sexy black machines. &lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/CGkZYx1SjTd5_1532447784613.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/CGkZYx1SjTd5_1532447784613.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/CGkZYx1SjTd5_1532447784613.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/CGkZYx1SjTd5_1532447784613.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/CGkZYx1SjTd5_1532447784613.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 7:&lt;/strong&gt; Steve and William had made plans to package NeXTstep as software for retail sales at Comp USA and other stores. I didn’t see that coming. I was angling for building sleek black machines with Intel inside, but we were sticking to the plan of making a dual-88110 workstation. &lt;/p&gt;&lt;p&gt;The belief was the future of computing was Reduced Instruction Set architectures, not a PC-based chip. All the workstation companies like Sun, HP, Silicon Graphics and IBM had gone that way. I don’t think the workstation world believed that Andy could keep increasing the speed of his processors like he claimed he could. &lt;/p&gt;&lt;p&gt;I understood. Andy came across as a bit of a slickster to me whereas George Fischer was the real deal, the man The New York Times referred to as a gold-plated executive in a 12-carat company.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/HXT6XG2jfzxh_1532447923486.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/HXT6XG2jfzxh_1532447923486.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/HXT6XG2jfzxh_1532447923486.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/HXT6XG2jfzxh_1532447923486.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/HXT6XG2jfzxh_1532447923486.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 8:&lt;/strong&gt; I got a call a few months later from General Magic. Their vision was so compelling I accepted their offer to work there.&lt;/p&gt;&lt;p&gt;Selling NeXTstep as software wasn’t going well and NeXT discontinued making hardware before they could ship the 88110-based workstation. Far as I knew, only Data General was making a machine with 88110s. Apple had abandoned it and teamed up with IBM &amp;amp; Motorola to produce the PowerPC processor.&lt;/p&gt;
&lt;p&gt;NeXT became less relevant, but word was Steve and Andy were getting along. Andy conducted offsites with Steve and his team to teach his management methods that would become so famous.&lt;/p&gt;&lt;p&gt;George Fisher made a fateful decision to become CEO of Kodak. The reputations of Motorola, Kodak, or George would never be the same again.&lt;/p&gt;&lt;p&gt;And then news broke that would change the world: Apple bought NeXT and Steve became CEO.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/90cyNkTdx3nn_1532448016323.jpeg&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/90cyNkTdx3nn_1532448016323.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/90cyNkTdx3nn_1532448016323.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/90cyNkTdx3nn_1532448016323.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/90cyNkTdx3nn_1532448016323.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 9:&lt;/strong&gt; The man who made the decision to buy NeXT was Gil Amelio, CEO of Apple at the time and former CEO of National Semiconductor. He wrote a book about how he saved Apple. He agreed to speak at a bookstore in San Jose that I owned. &lt;/p&gt;&lt;p&gt;He only took one question at the end. He called on John Markoff, the famous New York Times tech journalist. “Gil,” John asked, “why did you end up buying NeXT instead of Be?” &lt;/p&gt;&lt;p&gt;Be OS, like NeXTstep, was very respected and the man who ran Be was Jean-Louis Gassée, former high-profile Apple exec. Steve told Walter Isaacson that Gassée was &quot;one of the few people who I'd say is truly horrible. He knifed me in the back.&quot;  &lt;/p&gt;&lt;p&gt;Here’s how I’ve remembered Gil’s answer over the years: “Great question, we had big internal debates about that. A lot of people at Apple were afraid of Steve and Jean-Louis had many supporters. Be OS was very respected. In the end it came down to NeXT already supporting Intel and that was important to us.”&lt;/p&gt;&lt;p&gt;I remember thinking, &lt;em&gt;oh my God. Steve, you owe me&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/xqKXBM1gCNRG_1532450088239.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/xqKXBM1gCNRG_1532450088239.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/xqKXBM1gCNRG_1532450088239.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/xqKXBM1gCNRG_1532450088239.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/xqKXBM1gCNRG_1532450088239.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 10:&lt;/strong&gt; Turns out I wasn’t the only one to make secret calls and Andy wasn’t the only one to return them. John Landwehr was a product manager at NeXT who got the idea to call Ellen Hancock, Apple’s CTO.&lt;/p&gt;&lt;p&gt;From &lt;a href=&quot;https://www.nytimes.com/1996/12/23/business/why-apple-sees-next-as-a-match-made-in-heaven.html&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;an article by John Markoff&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After reading newspaper accounts saying that Apple was in private discussions about acquiring a new operating system, Mr. Landwehr, without a word to Steven P. Jobs, his company's chairman, persuaded his colleague Garrett Rice to pick up the phone and call Ms. Hancock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It turned out Andy was underselling when he said his processors might go to 400 megahertz, 10x what Motorola ever achieved with the 68040. The clock speeds of current Intel processors are more than 4200 megahertz.&lt;/p&gt;&lt;p&gt;More than 10 years after the computing world believed Intel’s processors were in the autumn of their lives, Apple based their computers on them.&lt;/p&gt;&lt;p&gt;Gil Amelio:&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/lMFFKFvZFKhr_1532448208356.jpeg&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/lMFFKFvZFKhr_1532448208356.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/lMFFKFvZFKhr_1532448208356.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/lMFFKFvZFKhr_1532448208356.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/lMFFKFvZFKhr_1532448208356.jpeg?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;&lt;strong&gt;Part 11 (last part):&lt;/strong&gt; The Harvard Business Review published an article, &lt;a href=&quot;https://hbr.org/2002/09/the-curse-of-the-superstar-ceo&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;The Curse of the Superstar CEO&lt;/a&gt;, which tried to explain the fall of George Fisher and Kodak.&lt;/p&gt;&lt;p&gt;I always wonder. Was it really about the CEOs? Or were there technical superstars we don’t know about who figured out how to make processors faster without overheating? That’s something I loved about Steve Jobs: he would ask who on planet earth is the best person to pull off something impossible and he would do anything to hire them.&lt;/p&gt;&lt;p&gt;I know one of those. Steve spent all day in early Apple recruiting Bill Atkinson, a Phd student in neuroscience. Steve told me he didn’t know if they could have pulled off the Mac without him. I have seen Bill solve hard technical problems I don’t think anyone else could solve.&lt;/p&gt;&lt;p&gt;I wonder if Andy had one of those and George didn’t.&lt;/p&gt;&lt;p&gt;Steve Jobs and Bill Atkinson:&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/fXf6zwNRkQ4n_1532448498235.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/fXf6zwNRkQ4n_1532448498235.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/fXf6zwNRkQ4n_1532448498235.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/fXf6zwNRkQ4n_1532448498235.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/fXf6zwNRkQ4n_1532448498235.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;Chris, all kidding aside.....I hope you have plans to write a book. It would be VERY interesting and it seems your &quot;fly-on-the-wall&quot; perspectives are historically important.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;I've often wondered what the computing world would look like today if Apple had bought Be.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/BeOS&quot; rel=&quot;nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;BeOS&lt;/a&gt; was a fantastic operating system, more advanced in many ways than other OSes of the era. I actually very briefly used it as my primary OS in the late 90s. But Be wasn't able to succeed as an independent company, and with the release of Mac OS X (which was heavily based on concepts and code from NeXT), Apple suddenly had a much better OS, and BeOS was relegated to the history books.&lt;/p&gt;
&lt;p&gt;But somewhere out there is a parallel universe where BeOS, rather than OpenStep, became the basis for Apple's new OS. Would it have been able to compete with Windows? Without macOS's BSD underpinnings, would it have been as popular with developers as Mac OS X was? I wonder.&lt;/p&gt;
&lt;div class=&quot;cakedoc-attachments&quot;&gt;&lt;a class=&quot;cakedoc-lightbox-link&quot; href=&quot;https://cake.imgix.net/m/R987rtpTCkPw_1532457294986.png&quot; itemprop=&quot;sharedContent&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;cakedoc-image&quot; src=&quot;https://cake.imgix.net/m/R987rtpTCkPw_1532457294986.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&quot; srcset=&quot;https://cake.imgix.net/m/R987rtpTCkPw_1532457294986.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680 1x,https://cake.imgix.net/m/R987rtpTCkPw_1532457294986.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=2 2x,https://cake.imgix.net/m/R987rtpTCkPw_1532457294986.png?fit=max&amp;amp;fm=pjpg&amp;amp;h=640&amp;amp;q=65&amp;amp;w=680&amp;amp;dpr=3 3x&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;Great read, and made me miss my days working on my old NeXT work stations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;This was an incredible read. You've lived quite the life. I'll have to check out more about Bill Atkinson. I wonder what sort of neuroscience he worked on?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;Great series of posts, Chris! At Microsoft, we used to say that “the #1 feature is shipping”. It wasn’t always good for customers, but it sure did let msft exploit their user base to quickly learn and develop a decent product.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;Amazing story!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;it always amazes me what it takes for things to happen good and bad.&lt;/p&gt;
&lt;p&gt;If this didn’t happen this wouldn’t have happened. Almost at times like there is some sort of design going on in the universe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;div class=&quot;cakedoc&quot;&gt;
&lt;p&gt;Fascinating. Tangentially, Intel saved the X86 architecture (boosting it 10x, 100x, etc.) after DIGITAL had asked them to &quot;analyze&quot; its breakthrough MicroPrism (aka DEC Alpha) chip for &quot;second sourcing&quot; at Intel's state-of-the-art FABs. The dishonesty of lifting that IP to &quot;rescue&quot; the X86 led to a legal settlement wherein Intel consented to purchase DEC's Hudson plant, that included not just the Alpha's chips, but also the StrongARM chips. (Old money on both boards and that's the way they handle scandals.) Chris' testimonial makes me believe that more people besides Andy Grove at Intel knew that the X86 was being &quot;rescued&quot; in this way...&lt;/p&gt;&lt;p&gt;I totally agree with Steve about Gassée, convinced there was an Amiga 1000 in the basement of One Infinite Loop fueling all of that period's innovations (GfxBase-&amp;gt;QuickDrawGX, ARexx-&amp;gt;AppleScript, Speech-&amp;gt;PlainTalk, etc..) sustaining an unbelievable amount of politics much to Bill Gates' delight.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 25 Jul 2018 15:04:32 +0000</pubDate>
<dc:creator>GoRudy</dc:creator>
<og:type>website</og:type>
<og:url>https://www.cake.co/conversations/g4CP6zJ/the-secret-call-to-andy-grove-that-may-have-helped-apple-buy-next</og:url>
<og:title>The secret call to Andy Grove that may have helped Apple buy NeXT</og:title>
<og:description>Part 1: The thing I loved most about working in developer relations at NeXT was how Steve could call anyone. He would burst in my office and say, “I’m gonna call Bill about TrueType,” and gesture …</og:description>
<og:image>https://cake.imgix.net/m/3RQg3CBYrWC7_1532446901688.jpeg?auto=format&amp;fit=max&amp;h=1000&amp;w=1000</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cake.co/conversations/g4CP6zJ/the-secret-call-to-andy-grove-that-may-have-helped-apple-buy-next</dc:identifier>
</item>
<item>
<title>Liquid water &amp;#039;lake&amp;#039; revealed on Mars</title>
<link>http://www.bbc.co.uk/news/science-environment-44952710</link>
<guid isPermaLink="true" >http://www.bbc.co.uk/news/science-environment-44952710</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;The planet Mars&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/1868/production/_102684260_marsbg.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Science Photo Library&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Researchers have found evidence of an existing body of liquid water on Mars.&lt;/p&gt;&lt;p&gt;What they believe to be a lake sits under the planet's south polar ice cap, and is about 20km (12 miles) across.&lt;/p&gt;&lt;p&gt;Previous research found possible signs of &lt;a href=&quot;https://www.bbc.co.uk/news/science-environment-34379284&quot; class=&quot;story-body__link&quot;&gt;intermittent liquid water flowing&lt;/a&gt; on the martian surface, but this is the first sign of a persistent body of water on the planet in the present day.&lt;/p&gt;&lt;p&gt;Lake beds like those explored by Nasa's Curiosity rover show water was present on the surface of Mars in the past.&lt;/p&gt;&lt;p&gt;However, the planet's climate has since cooled due to its thin atmosphere, leaving most of its water locked up in ice.&lt;/p&gt;&lt;p&gt;The result is exciting because scientists have long searched for signs of present-day liquid water on Mars, but these have come up empty or yielded ambiguous findings. It will also interest those studying the possibilities for life beyond Earth - though it does not yet raise the stakes in the search for biology.&lt;/p&gt;&lt;p&gt;The discovery was made using Marsis, a radar instrument on board the European Space Agency's (Esa) Mars Express orbiter.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;NASA/JPL/Malin Space Science Systems&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The proposed lake sits beneath ice near the south pole of Mars
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&quot;It's probably not a very large lake,&quot; said Prof Roberto Orosei from the Italian National Institute for Astrophysics, who led the study.&lt;/p&gt;&lt;p&gt;Marsis wasn't able to determine how thick the layer of water might be, but the research team estimate that it is a minimum of one metre. &lt;/p&gt;&lt;p&gt;&quot;This really qualifies this as a body of water. A lake, not some kind of meltwater filling some space between rock and ice, as happens in certain glaciers on Earth,&quot; Prof Orosei added.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;ESA/INAF&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Artists' impression: Mars Express probing the planet's surface. Marsis radar results above.
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How was it found?&lt;/h2&gt;&lt;p&gt;Radar instruments like Marsis examine the surface and immediate subsurface of the planet by sending out a signal and examining what is bounced back.&lt;/p&gt;&lt;p&gt;The continuous white line at the top of the radar results above marks the beginning of the South Polar Layered Deposit; a filo pastry-like accumulation of water ice and dust.&lt;/p&gt;&lt;p&gt;Beneath this, researchers spotted something unusual 1.5km under the ice.&lt;/p&gt;&lt;p&gt;&quot;In light blue you can see where the reflections from the bottom are stronger than surface reflection. This is something that is to us the tell tale sign of the presence of water,&quot; says Prof Orosei.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;USGS Astrogeology Science Center, Arizona State Un&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Artists' impression: Marsis data shows an area of high reflectivity (dark blue) which is thought to be water
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What does this mean for life?&lt;/h2&gt;&lt;p&gt;Nothing definitive. Yet.&lt;/p&gt;&lt;p&gt;Dr Manish Patel from the Open University explained: &quot;We have long since known that the surface of Mars is inhospitable to life as we know it, so the search for life on Mars is now in the subsurface.       &lt;/p&gt;&lt;p&gt;&quot;This is where we get sufficient protection from harmful radiation, and the pressure and temperature rise to more favourable levels. Most importantly, this allows liquid water, essential for life.&quot;&lt;/p&gt;&lt;p&gt;This principle of following the water is key to astrobiology - the study of potential life beyond Earth.&lt;/p&gt;&lt;p&gt;So while the findings suggest water is present, they don't confirm anything further.&lt;/p&gt;&lt;p&gt;&quot;We are not closer to actually detecting life,&quot; Dr Patel told BBC News, &quot;but what this finding does is give us the location of where to look on Mars. It is like a treasure map - except in this case, there will be lots of 'X's marking the spots.&quot;&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Science Photo Library&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Astrobiologists study extreme environments like salt lakes on Earth to understand how life might survive on Mars
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The water's temperature and chemistry could also pose a problem for any potential martian organisms. &lt;/p&gt;&lt;p&gt;In order to remain liquid in such cold conditions (the research team estimate between -10 and -30 Celsius where it meets the ice above), the water likely has a great many salts dissolved in it.&lt;/p&gt;&lt;p&gt;&quot;It's plausible that the water may be an extremely cold, concentrated brine, which would be pretty challenging for life,&quot; explained Dr Claire Cousins, an astrobiologist from the University of St Andrews, UK.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What next?&lt;/h2&gt;&lt;p&gt;While its existence provides a tantalising prospect for those interested in the possibility of past or present life on Mars, the lake's characteristics must first be verified by further research.&lt;/p&gt;&lt;p&gt;&quot;What needs to be done now,&quot; explained Dr Matt Balme from the Open University, &quot;is for the measurements to be repeated elsewhere to look for similar signals, and, if possible, for all other explanation to be examined and - hopefully - ruled out. &lt;/p&gt;&lt;p&gt;&quot;Maybe this could even be the trigger for an ambitious new Mars mission to drill into this buried water-pocket - like has been done for sub-glacial lakes in Antarctica on Earth,&quot; he added.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Science Photo Library&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    The area has been compared to Lake Vostok, which lies 4km beneath the Antarctic ice
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Scientists have &lt;a href=&quot;https://www.bbc.co.uk/news/science-environment-21709225&quot; class=&quot;story-body__link&quot;&gt;previously claimed to find bacterial life&lt;/a&gt; in the buried depths of Antarctica's Lake Vostok, but drilling on Mars would make for an ambitious project indeed.&lt;/p&gt;&lt;p&gt;&quot;Getting there and acquiring the final evidence that this is indeed a lake will not be an easy task,&quot; said Prof Orosei. &lt;/p&gt;&lt;p&gt;&quot;It will require flying a robot there which is capable of drilling through 1.5km of ice. This will certainly require some technological developments that at the moment are not available.&quot;&lt;/p&gt;&lt;p&gt;The findings were reported in &lt;a href=&quot;http://science.sciencemag.org/cgi/doi/10.1126/science.aar7268&quot; class=&quot;story-body__link-external&quot;&gt;Science&lt;/a&gt;. &lt;/p&gt;&lt;p&gt;&lt;i&gt;Follow Mary &lt;/i&gt;&lt;a href=&quot;https://twitter.com/maryhalton&quot; class=&quot;story-body__link-external&quot;&gt;on Twitter&lt;/a&gt;&lt;i&gt;.&lt;/i&gt;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Read more about Mars exploration&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;TAS&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/science-environment-43832868&quot; class=&quot;story-body__link&quot;&gt;Science correspondent Jonathan Amos sees Europe's Red Planet rover taking shape&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
<pubDate>Wed, 25 Jul 2018 14:10:42 +0000</pubDate>
<dc:creator>yawz</dc:creator>
<og:title>Liquid water 'lake' revealed on Mars</og:title>
<og:type>article</og:type>
<og:description>Researchers believe they have found the first existing body of liquid water on the Red Planet.</og:description>
<og:url>https://www.bbc.com/news/science-environment-44952710</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/1868/production/_102684260_marsbg.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.co.uk/news/science-environment-44952710</dc:identifier>
</item>
<item>
<title>Modern C++ for C Programmers: part 5</title>
<link>https://ds9a.nl/articles/posts/cpp-5/</link>
<guid isPermaLink="true" >https://ds9a.nl/articles/posts/cpp-5/</guid>
<description>&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you like this stuff, come work with me over at PowerDNS - &lt;a href=&quot;https://www.powerdns.com/careers.html#securityDeveloper&quot;&gt;aspiring C++ programmers welcome&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Welcome back! In &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-4/&quot;&gt;part 4&lt;/a&gt; we went over the nitty-gritty of lambdas and how to store them, we explored the relation between the various C++ algorithms and containers, plus we took a stroll through some non-standard containers with exceptional capabilities.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: part 1 is &lt;a href=&quot;https://ds9a.nl/articles/posts/c++-1/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this probably final part 5, we’ll be going over some of the most powerful stuff in modern C++: “perfect” reference counting and the concept of &lt;code&gt;std::move&lt;/code&gt;. Note that this installment introduces some pretty unfamiliar concepts, so it may be heavier reading than earlier parts.&lt;/p&gt;

&lt;p&gt;Memory is frequently the most important factor determining a program’s speed and reliability. CPUs these days tend to be tremendously faster than their attached RAM, so preventing needless copies and fragmented memory access may deliver whole orders of magnitude improvements in speed.&lt;/p&gt;
&lt;p&gt;The authors of C++ were well aware of this and have delivered functionality that makes it possible to pass around or construct objects “in place”, thus saving a lot of memory bandwidth.&lt;/p&gt;
&lt;p&gt;Most of these techniques require some thinking, but we’re going to start with one that is nearly invisible, and explains why some C code becomes faster simply by being recompiled as C++.&lt;/p&gt;

&lt;p&gt;Ponder the following code:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;struct Object
{
        // many fields
};

Object getObject(size_t i)
{
        Object obj;
        // retrieve object #i
        return obj;
}

int main()
{
        Object o = getObject(271828);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Seasoned C programmers will have been exhorted to never do this, starting from gloried pages of K&amp;amp;R. “Passing structs over the stack leads to needless copying”. Instead, we’d be passing a pointer to an &lt;code&gt;Object&lt;/code&gt;, meticulously reset it to its default state and then fill it out.&lt;/p&gt;
&lt;p&gt;In C, the compiler is not allowed to optimize the code as written above, and the &lt;code&gt;struct Object&lt;/code&gt; gets copied on the return from &lt;code&gt;getObject&lt;/code&gt;. In C++ however, not only is the compiler allowed to optimize, all of them actually do it. In effect, &lt;code&gt;Object o&lt;/code&gt; gets constructed on the caller’s stack and filled out there, with no copying going on.&lt;/p&gt;
&lt;p&gt;This enables code like this to be efficient:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Vector&amp;lt;Object&amp;gt; getAll(); // &quot;Vector&quot; from part 3
..
auto all = getAll(); // returns millions of Objects
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Later we will see how C++ offers explicit opportunities to transfer ownership without copying.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-2&quot;&gt;part 2&lt;/a&gt; we touched on smart pointers. We also noted that memory leaks are the bane of every project, and probably the most vexing thing about writing in pure C. Every C (and C++) programmer I know has lost at least one solid week on chasing an obscure memory leak.&lt;/p&gt;
&lt;p&gt;These problems are so large that most modern programming languages decided to incur a significant amount of overhead to implement garbage collection (GC). GC is amazing when it works, and especially lately, the overhead is now at least manageable. But as of 2018, all environments still struggle with hick-ups caused by GC runs, which always tend to happen exactly when you don’t want them to. And to be fair, this is a very difficult problem to solve, especially when many threads are involved.&lt;/p&gt;
&lt;p&gt;C++ has therefore not implemented garbage collection. Instead, there is a judicious &lt;a href=&quot;https://en.cppreference.com/w/cpp/memory&quot;&gt;selection of smart pointers&lt;/a&gt; that perform their own cleanup. In &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-2&quot;&gt;part 2&lt;/a&gt; we described &lt;code&gt;std::shared_ptr&lt;/code&gt; as “the most do what I mean” smart pointer available, and this is true.&lt;/p&gt;
&lt;p&gt;Such magic does not come for free however. If we look ‘inside’ a &lt;code&gt;std::shared_ptr&lt;/code&gt;, it turns out it carries a lot of administration. First there is of course the actual pointer to the object contained. Then there is the reference count, which needs to be updated and checked &lt;strong&gt;atomically&lt;/strong&gt; at all times. Next up, there may also be a custom deleter. For good reasons, this metadata is itself allocated dynamically (on the heap). So while the &lt;code&gt;sizeof&lt;/code&gt; of a &lt;code&gt;std::shared_ptr&lt;/code&gt; may only be 16 bytes (on a 64 bit system), effectively it uses much more memory. In &lt;a href=&quot;https://github.com/ahupowerdns/hello-cpp/blob/master/move.cc&quot;&gt;one specific test&lt;/a&gt;, a &lt;code&gt;std::shared_ptr&amp;lt;uint32_t&amp;gt;&lt;/code&gt; ended up using 47 bytes of memory on average.&lt;/p&gt;
&lt;p&gt;The question of course is: can we do better?&lt;/p&gt;

&lt;p&gt;The overhead of generic reference counted pointer was well known when C++ took its initial standardized form. Back then, a quirky smart pointer called &lt;a href=&quot;https://en.cppreference.com/w/cpp/memory/auto_ptr&quot;&gt;&lt;code&gt;std::auto_ptr&lt;/code&gt;&lt;/a&gt; was defined, but it turned out that within the C++ of 1998 it was not possible to create something useful. Making “the perfect smart pointer” required features that only became available in C++ 2011.&lt;/p&gt;
&lt;p&gt;First, let us try some simple things (&lt;a href=&quot;https://github.com/ahupowerdns/hello-cpp/blob/master/move.cc&quot;&gt;source on GitHub&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  std::unique_ptr&amp;lt;uint32_t&amp;gt; testUnique;
  uint32_t* testRaw;
  std::shared_ptr&amp;lt;uint32_t&amp;gt; testShared;

  cout &amp;lt;&amp;lt; &quot;sizeof(testUnique):\t&quot; &amp;lt;&amp;lt; sizeof(testUnique) &amp;lt;&amp;lt; endl;
  cout &amp;lt;&amp;lt; &quot;sizeof(testRaw):\t&quot; &amp;lt;&amp;lt; sizeof(testRaw) &amp;lt;&amp;lt; endl;
  cout &amp;lt;&amp;lt; &quot;sizeof(testShared):\t&quot; &amp;lt;&amp;lt; sizeof(testShared) &amp;lt;&amp;lt; endl;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rather amazingly this outputs:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sizeof(testUnique): 8
sizeof(testRaw):    8
sizeof(testShared): 16
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You saw that right. A &lt;code&gt;std::unique_ptr&lt;/code&gt; has no overhead over a ‘raw’ pointer. And in fact, with some judicious casting, you can find out it in contains nothing other than the pointer you put in there. That’s zero overhead.&lt;/p&gt;
&lt;p&gt;Here’s how to use it:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void function()
{
  auto uptr = std::make_unique&amp;lt;uint32_t&amp;gt;(42);

  cout &amp;lt;&amp;lt; *uptr &amp;lt;&amp;lt; endl;
} // uptr contents get freed here
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The first line is a shorter (and better) way to achieve:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;std::unique_ptr&amp;lt;uint32_t&amp;gt; uptr = std::unique_ptr&amp;lt;uint32_t&amp;gt;(new uint32_t(42));
&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;In general, always prefer the &lt;code&gt;std::make_*&lt;/code&gt; form for smart pointers. For &lt;code&gt;std::shared_ptr&lt;/code&gt; it turns two allocations into one, which is a huge win both in CPU cycles and memory consumed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It should be noted that &lt;code&gt;std::unique_ptr&lt;/code&gt; may be a smart pointer, but it is not a generic reference counted pointer. Or, to put it more precisely, there is always exactly one place that owns a &lt;code&gt;std::unique_ptr&lt;/code&gt;. This is the magic of why there is no overhead: there is no reference count to store, it is always ‘1’.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::unique_ptr&lt;/code&gt; cleans up only when it goes out of scope, or when it is reset or replaced.&lt;/p&gt;
&lt;p&gt;To access the contents of a smart pointer, either &lt;code&gt;deference&lt;/code&gt; it (with &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt;), or use the &lt;code&gt;get()&lt;/code&gt; method if you need the actual pointer inside. Smart pointers can also be unset, and in that case evaluate as ‘false’:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  std::unique_ptr&amp;lt;int&amp;gt; iptr;

  auto p = [](const auto&amp;amp; a) {
    cout &amp;lt;&amp;lt; &quot;pointer is &quot; &amp;lt;&amp;lt; (a ? &quot;&quot; : &quot;not &quot;) &amp;lt;&amp;lt; &quot;set\n&quot;;
  };

  p(iptr);
  cout &amp;lt;&amp;lt; (void*) iptr.get() &amp;lt;&amp;lt; endl;  

  iptr = std::make_unique&amp;lt;int&amp;gt;(12);
  p(iptr);

  iptr.reset();
  p(iptr);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This prints:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;pointer is not set
0
pointer is set
pointer is not set
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we attempt to copy a &lt;code&gt;std::unique_ptr&lt;/code&gt;, the compiler stops us. It does allow us however to ‘move’ it:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  std::unique_ptr&amp;lt;uint32_t&amp;gt; uptr2;

  uptr2 = uptr; // error about 'deleted constructor'

  uptr2 = std::move(uptr); // works
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The reason a simple copy is not allowed is that this would lead to a non-unique pointer: both uptr and uptr would refer to the same &lt;code&gt;uint32_t&lt;/code&gt; instance.&lt;/p&gt;
&lt;p&gt;So what is this &lt;code&gt;std::move&lt;/code&gt; thing, and why does that work?&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-2&quot;&gt;part 2&lt;/a&gt; we defined a &lt;code&gt;SmartFP&lt;/code&gt; class as an example of Resource Acquisition Is Initialization (RAII). It’s intended to be used like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int main()
try
{
        string line;
        SmartFP sfp(&quot;/etc/passwd&quot;, r&quot;);
        stringfgets(line, sfp.d_fp); // simple wrapper
        // do stuff
}
catch(std::exception&amp;amp; e) 
{
        cerr &amp;lt;&amp;lt; &quot;Fatal error: &quot; &amp;lt;&amp;lt; e.what() &amp;lt;&amp;lt; endl;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;SmartFP&lt;/code&gt; underneath is nothing but a wrapper for &lt;code&gt;fopen&lt;/code&gt; and &lt;code&gt;fclose&lt;/code&gt;. It also turns &lt;code&gt;fopen&lt;/code&gt; errors into an explanatory exception. The nice thing about RAII that it guarantees the filedescriptor won’t ever leak, even in the face of error conditions.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-2&quot;&gt;part 2&lt;/a&gt; we also noted that as defined, &lt;code&gt;SmartFP&lt;/code&gt; had a problem. It performs an &lt;code&gt;fclose&lt;/code&gt; when it goes out of scope, but what if someone copied our &lt;code&gt;SmartFP&lt;/code&gt; instance? We would then close the same &lt;code&gt;FILE&lt;/code&gt; pointer twice, which is very bad. Enter the &lt;strong&gt;move constructor&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;struct SmartFP
{
  SmartFP(const char* fname, const char* mode)
  {
    d_fp = fopen(fname, mode);
    if(!d_fp)
      throw std::runtime_error(&quot;Can't open file: &quot; + stringerror());
  }

  SmartFP(SmartFP&amp;amp;&amp;amp; src) // move constructor. Note &quot;&amp;amp;&amp;amp;&quot;
  {
    d_fp = src.d_fp;
    src.d_fp = 0;
  }

  ~SmartFP()
  {
    if(d_fp)
      fclose(d_fp);
  }
  FILE* d_fp{0};
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;move constructor&lt;/code&gt; is the important bit. Its presence tells C++ that this class can not be copied, only moved. The semantics of a &lt;code&gt;move&lt;/code&gt; are a true transfer of ownership.&lt;/p&gt;
&lt;p&gt;The following may help:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SmartFP sfp(&quot;/etc/passwd&quot;, &quot;ro&quot;);
cout &amp;lt;&amp;lt; (void*) sfp.d_fp &amp;lt;&amp;lt; endl;  // prints a pointer

SmartFP sfp2 = sfp;                // error
SmartFP sfp2 = std::move(sfp);     // transfer!

cout &amp;lt;&amp;lt; (void*) sfp.d_fp &amp;lt;&amp;lt; endl;  // prints 0
cout &amp;lt;&amp;lt; (void*) sfp2.d_fp &amp;lt;&amp;lt; endl; // prints same pointer
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When this code runs, the &lt;code&gt;FILE&lt;/code&gt; pointer we created on the first line gets &lt;code&gt;fclose&lt;/code&gt;d exactly once. This is because during the move, the ‘donor’ &lt;code&gt;FILE*&lt;/code&gt; was set to zero, and in the destructor we make sure not to &lt;code&gt;fclose&lt;/code&gt; a 0.&lt;/p&gt;
&lt;p&gt;This &lt;code&gt;move&lt;/code&gt; is performed automatically on return:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SmartFP getTmpFP()
{
        // get tmp name
        return SmartFP(tmp, &quot;w&quot;);
}

...

SmartFP fp = getTmpFP();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Additionally, the C++ standard containers are all &lt;code&gt;move&lt;/code&gt; aware, with a special syntax to construct elements ‘in place’:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  vector&amp;lt;SmartFP&amp;gt; vec;
  vec.emplace_back(&quot;move.cc&quot;, &quot;r&quot;);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All the parameters to &lt;code&gt;emplace_back&lt;/code&gt; get forwarded to the &lt;code&gt;SmartFP&lt;/code&gt; constructor, which constructs the instance straight into the &lt;code&gt;std::vector&lt;/code&gt; - all without a single copy. When filling large containers, this can make a huge difference.&lt;/p&gt;
&lt;p&gt;Note that if we want to, a class can have both move constructors and regular constructors. A good example of this are all the C++ standard containers, including &lt;code&gt;std::string&lt;/code&gt;. This gives you a choice between making a real copy or transferring ownership.&lt;/p&gt;

&lt;p&gt;A main reason we store things as pointers is to benefit from polymorphism. The downside of pointers is of course memory management, so it would be great if smart pointers were to interoperate with base and derived classes. The wonderful news is that they do.&lt;/p&gt;
&lt;p&gt;Based on our &lt;code&gt;Event&lt;/code&gt; class from &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-3&quot;&gt;part 3&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  std::deque&amp;lt;std::unique_ptr&amp;lt;Event&amp;gt;&amp;gt; eventQueue;

  eventQueue.push_back(std::make_unique&amp;lt;PortScanEvent&amp;gt;(&quot;1.2.3.4&quot;));
  eventQueue.push_back(std::make_unique&amp;lt;ICMPEvent&amp;gt;());

  for(const auto&amp;amp; e : eventQueue) {
    cout &amp;lt;&amp;lt; e-&amp;gt;getDescription() &amp;lt;&amp;lt; endl;
  }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This all works as expected, and the contents of &lt;code&gt;eventQueue&lt;/code&gt; get cleaned up when the container goes out of scope.&lt;/p&gt;
&lt;blockquote readability=&quot;8.9519650655022&quot;&gt;
&lt;p&gt;When using polymorphic classes, make sure there either is no ~destructor, or that it is declared as virtual. Otherwise &lt;code&gt;std::unique_ptr&lt;/code&gt; will call the base class destructor. See &lt;a href=&quot;https://ds9a.nl/articles/posts/cpp-3&quot;&gt;part 3&lt;/a&gt; for more details, plus this &lt;a href=&quot;https://stackoverflow.com/questions/461203/when-to-use-virtual-destructors&quot;&gt;stackoverflow post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As noted earlier, C makes it possible to ‘live on the edge’, or as some of the Node.JS people said, to &lt;a href=&quot;https://twitter.com/shit_hn_says/status/234856345579446272&quot;&gt;‘be close to the metal’&lt;/a&gt;. The good thing is that C++ offers you that same ability, should you need it, and more.&lt;/p&gt;
&lt;p&gt;When we do the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;auto ptr = new SmartFP(&quot;/etc/passwd&quot;, &quot;ro&quot;);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This does two things:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Allocate memory to store a &lt;code&gt;SmartFP&lt;/code&gt; instance&lt;/li&gt;
&lt;li&gt;Call the &lt;code&gt;SmartFP&lt;/code&gt; constructor using that memory&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Generally this is what we need. However, sometimes our memory arrives from elsewhere but we’d still like to construct objects on there. Enter &lt;code&gt;placement new&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an actual usecase from the PowerDNS &lt;code&gt;dumresp&lt;/code&gt; utility:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  std::atomic&amp;lt;uint64_t&amp;gt;* g_counter;

  auto ptr = mmap(NULL, sizeof(std::atomic&amp;lt;uint64_t&amp;gt;), PROT_READ | PROT_WRITE,
                  MAP_SHARED | MAP_ANONYMOUS, -1, 0);

  g_counter = new(ptr) std::atomic&amp;lt;uint64_t&amp;gt;();
  
  for(int i = 1; i &amp;lt; atoi(argv[3]); ++i) {
    if(!fork())
      break;
  }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This uses &lt;code&gt;mmap&lt;/code&gt; to allocate memory that will be shared with any child processes, and then uses fancy &lt;code&gt;placement new&lt;/code&gt; syntax to construct a &lt;code&gt;std::atomic&amp;lt;uint64_t&amp;gt;&lt;/code&gt; instance in that shared memory.&lt;/p&gt;
&lt;p&gt;The code then forks the number of processed described in &lt;code&gt;argv[3]&lt;/code&gt;. Within all these processes, a simple &lt;code&gt;++(*g_counter)&lt;/code&gt; works, and all update the same counter.&lt;/p&gt;
&lt;p&gt;Based on techniques like these, it is possible to create highly efficient and easy to use interprocess communications libraries, like for example &lt;a href=&quot;https://www.boost.org/doc/libs/1_67_0/doc/html/interprocess/quick_guide.html&quot;&gt;Boost Interprocess&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many modern C++ projects will only have a handful of explicit calls to &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt; (or &lt;code&gt;malloc/free&lt;/code&gt;). It is easy to audit those few calls. Restrict manual memory allocation to the cases where you really have to.&lt;/p&gt;
&lt;p&gt;For the rest, use &lt;code&gt;std::unique_ptr&lt;/code&gt; if you can get away with it, and &lt;code&gt;std::shared_ptr&lt;/code&gt; when you can’t. Note that you can convert a &lt;code&gt;std::unique_ptr&lt;/code&gt; into a &lt;code&gt;std::shared_ptr&lt;/code&gt; efficiently, so you can change your mind:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;auto unique = std::make_unique&amp;lt;std::string&amp;gt;(&quot;test&quot;);
std::shared_ptr&amp;lt;std::string&amp;gt; shared = std::move(unique);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In addition, a &lt;code&gt;std::unique_ptr&lt;/code&gt; can also &lt;code&gt;release()&lt;/code&gt; the pointer it owns, which means it will not get &lt;code&gt;delete&lt;/code&gt;d automatically.&lt;/p&gt;
&lt;p&gt;The easy ability to cheaply convert a &lt;code&gt;std::unique_ptr&lt;/code&gt; into a &lt;code&gt;std::shared_ptr&lt;/code&gt; or a raw pointer means that functions can return a &lt;code&gt;std::unique_ptr&lt;/code&gt; and keep everyone happy.&lt;/p&gt;
&lt;p&gt;On the &lt;code&gt;move constructor&lt;/code&gt;, it pays to understand this somewhat unfamiliar construct. Classes that represent resources (like sockets, file descriptors, database connections) are naturals for having a &lt;code&gt;move constructor&lt;/code&gt;, since this makes their semantics closely match how these resources work: should be opened and closed exactly once, and exactly when we want them to.&lt;/p&gt;

&lt;p&gt;Memory allocation is hard and various smart pointers provided by C++ make it easier. &lt;code&gt;std::shared_ptr&lt;/code&gt; is luxurious but comes with baggage, &lt;code&gt;std::unique_ptr&lt;/code&gt; is frequently good enough and carries no overhead at all.&lt;/p&gt;
&lt;p&gt;C++ tries hard to prevent needless copying of objects and adding a &lt;code&gt;move constructor&lt;/code&gt; makes this explicit. By using &lt;code&gt;std::move&lt;/code&gt; it is possible to store &lt;code&gt;std::unique_ptr&lt;/code&gt; instances in containers, which is both safe and fast.&lt;/p&gt;
&lt;p&gt;If you have any other favorite things you’d like to see discussed or questions, please do hit me up on &lt;a href=&quot;https://twitter.com/PowerDNS_Bert&quot;&gt;@PowerDNS_Bert&lt;/a&gt; or bert.hubert@powerdns.com.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you like this stuff, come work with me over at PowerDNS - &lt;a href=&quot;https://www.powerdns.com/careers.html#securityDeveloper&quot;&gt;aspiring C++ programmers welcome&lt;/a&gt;!&lt;/p&gt;
</description>
<pubDate>Wed, 25 Jul 2018 12:47:14 +0000</pubDate>
<dc:creator>ahubert</dc:creator>
<og:title>Modern C++ for C Programmers: Part 5 • ds9a.nl articles</og:title>
<og:description>NOTE: If you like this stuff, come work with me over at PowerDNS - aspiring C++ programmers welcome! Welcome back! In part 4 we went over the nitty-gritty of lambdas and how to store them, we explored the relation between the various C++ algorithms and containers, plus we took a stroll through some non-standard containers with exceptional capabilities. Note: part 1 is here. In this probably final part 5, we’ll be going over some of the most powerful stuff in modern C++: “perfect” reference counting and the concept of std::move.</og:description>
<og:url>http://ds9a.nl/articles/posts/cpp-5/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ds9a.nl/articles/posts/cpp-5/</dc:identifier>
</item>
<item>
<title>Zotero: An open-source tool to help collect, organize, cite, and share research</title>
<link>https://www.zotero.org/</link>
<guid isPermaLink="true" >https://www.zotero.org/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://www.zotero.org/&quot;&gt;https://www.zotero.org/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17606929&quot;&gt;https://news.ycombinator.com/item?id=17606929&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 609&lt;/p&gt;&lt;p&gt;# Comments: 152&lt;/p&gt;</description>
<pubDate>Wed, 25 Jul 2018 04:35:38 +0000</pubDate>
<dc:creator>autocorr</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.zotero.org/</dc:identifier>
</item>
<item>
<title>Why Google Stores Billions of Lines of Code in a Single Repository (2016)</title>
<link>https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext</link>
<guid isPermaLink="true" >https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext&quot;&gt;https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=17605371&quot;&gt;https://news.ycombinator.com/item?id=17605371&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 459&lt;/p&gt;&lt;p&gt;# Comments: 270&lt;/p&gt;</description>
<pubDate>Tue, 24 Jul 2018 22:11:50 +0000</pubDate>
<dc:creator>bwag</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.zotero.org/</dc:identifier>
</item>
<item>
<title>To Remember, the Brain Must Actively Forget</title>
<link>https://www.quantamagazine.org/to-remember-the-brain-must-actively-forget-20180724/</link>
<guid isPermaLink="true" >https://www.quantamagazine.org/to-remember-the-brain-must-actively-forget-20180724/</guid>
<description>&lt;p&gt;Going along with all that variety is now a growing appreciation that forgetting — the functional loss of memories — may also come in diverse forms. Past theories about forgetting mostly emphasized relatively passive processes in which the loss of memories was a consequence of the physical traces of those memories (what some researchers refer to as “engrams”) naturally breaking down or becoming harder to access; those engrams may typically be interconnections between brain cells that prompt them to fire in a certain way. This forgetting process could involve the spontaneous decay of connections between neurons that encode a memory, the random death of those neurons, the failure of systems that would normally help to consolidate and stabilize new memories, or the loss of context cues or other factors that might make it hard to retrieve a memory.&lt;/p&gt;
&lt;p&gt;Now, however, researchers are paying much more attention to mechanisms that actively erase or hide those memory engrams.&lt;/p&gt;
&lt;h2&gt;Intrinsic Forgetting&lt;/h2&gt;
&lt;p&gt;One form of active forgetting that scientists formally &lt;a href=&quot;https://www.cell.com/neuron/fulltext/S0896-6273(17)30498-1&quot;&gt;identified in 2017&lt;/a&gt; is called intrinsic forgetting. It involves a certain subset of cells in the brain — which &lt;a href=&quot;http://www.scripps.edu/davis/&quot;&gt;Ronald Davis&lt;/a&gt; and &lt;a href=&quot;https://life.tsinghua.edu.cn/publish/smkx/11529/2018/20180519052257296107340/20180519052257296107340_.html&quot;&gt;Yi Zhong&lt;/a&gt;, who wrote the paper that introduced the idea, casually call “forgetting cells” — that degrade the engrams in memory cells.&lt;/p&gt;
&lt;p&gt;This idea emerged after Davis, a neuroscientist at the Scripps Research Institute in Jupiter, Florida, and his colleagues reported giving fruit flies mild electric shocks while exposing them to an odor. The flies quickly &lt;a href=&quot;https://doi.org/10.1016/j.neuron.2016.05.010&quot;&gt;learned to avoid the smell&lt;/a&gt;, associating it with the shock.&lt;/p&gt;

&lt;p&gt;Davis and his colleagues looked at a certain set of neurons in the brains of the fruit flies that continuously release the neurotransmitter dopamine onto others called mushroom body neurons. They found that dopamine plays a dual role in both forming and forgetting memories. After Davis and his colleagues trained the flies, they blocked dopamine release onto the mushroom body cells and found that the flies’ memory scores were twice as high when they were tested three hours later.&lt;/p&gt;
&lt;p&gt;The explanation that Davis and his team proposed is that after a new memory forms, the dopamine-based forgetting mechanism begins to erase it. Davis thinks this erasure happens because the cells reverse the structural changes that created the memory engram. The cells’ natural inclination is to go back to how they were before they learned the memory — that is, unless the thought is somehow recognized as being important. Then the engram is preserved through some sort of consolidation process, which maintains a balance between what is learned and forgotten.&lt;/p&gt;
&lt;p&gt;“Maybe the brain is designed to forget information,” Davis said. Somewhere in the brain, he noted, there may be some sort of judge that tells it to override the forgetting process when it comes across something worth remembering in the long run.&lt;/p&gt;
&lt;p&gt;Zhong, a neuroscientist at Tsinghua University in Beijing, and his team have also successfully manipulated forgetting in mice. &lt;a href=&quot;http://dx.doi.org/10.1016/j.cub.2016.06.056&quot;&gt;In 2016 they found&lt;/a&gt; that the inhibition of a specific protein called Rac1 in the hippocampal neurons prolonged the retention of memories from less than 72 hours to at least 120 hours in many cases. Increasing the activity of Rac1 reduced the life of memories to less than 24 hours. Earlier work by Zhong’s group had shown that Rac1 was similarly involved in &lt;a href=&quot;http://dx.doi.org/doi:10.1016/j.cell.2009.12.044&quot;&gt;several forms of forgetting&lt;/a&gt; in fruit flies.&lt;/p&gt;
&lt;p&gt;As Davis and Zhong argued in &lt;a href=&quot;http://dx.doi.org/10.1016/j.neuron.2017.05.039&quot;&gt;their jointly written 2017 review&lt;/a&gt;, all those findings suggested that cellular processes mediated by dopamine and Rac1 constantly erode newly formed memories. “From this perspective,” they wrote, “forgetting as mediated by intrinsic forgetting mechanisms may be the default state of the brain; intrinsic forgetting may operate chronically at a low level to slowly remove each newly acquired memory, although its strength may be regulated by internal or external factors.”&lt;/p&gt;
&lt;h2&gt;New Neurons and Old Memories&lt;/h2&gt;
&lt;p&gt;Another cellular process that seems to cause its own form of forgetting is neurogenesis, the birth of new neurons in the brain.&lt;/p&gt;
&lt;p&gt;The connection of neurogenesis to memory and forgetting is complicated. Previous studies have shown that neurogenesis can be important to the formation of new memories: In tests on lab animals, drugs that inhibit neurogenesis in the hippocampus can interfere with new memory formation, and drugs that enhance neurogenesis seem to help with learning new tasks if they are given before the learning process.&lt;/p&gt;

&lt;p&gt;But the effects aren’t all positive for memory, as &lt;a href=&quot;http://www.neuroscience.utoronto.ca/faculty/list/frankland.htm&quot;&gt;Paul Frankland&lt;/a&gt;, a neuroscientist at the University of Toronto and the &lt;a href=&quot;http://www.franklandlab.com/&quot;&gt;Hospital for Sick Children&lt;/a&gt;, and his colleagues &lt;a href=&quot;http://science.sciencemag.org/content/344/6184/598.long&quot;&gt;discovered&lt;/a&gt; while working with mice.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dx.doi.org/10.1016/j.tins.2013.05.002&quot;&gt;In their experiment&lt;/a&gt;, they first allowed the mice to create a memory by training at a task. Hours later, with drugs, they raised the level of neurogenesis in the animals to test whether the integration of new neurons in the hippocampus would affect the stability of that already stored memory. When Frankland’s team tested the mice about a month later, their recall of the training was much worse than that of mice that had not had the later neurogenesis boost.&lt;/p&gt;
&lt;p&gt;Frankland suspects that neurogenesis can complicate the challenge of retrieving prior memories from the hippocampus. If the added neural wiring overlaps with the circuitry holding older memories, it may damage the older engrams or make it harder to isolate the old memories from newer ones. He likened the problem to electronics repair: “If you go in and start rewiring something,” Frankland said, “any information stored in that circuit might be degraded.”&lt;/p&gt;

&lt;p&gt;One piece of evidence that supports his theory came from follow-up work &lt;a href=&quot;http://doi.org/10.1523/JNEUROSCI.3126-17.2018&quot;&gt;published earlier this year&lt;/a&gt; which showed that the harmful effect of hippocampal neurogenesis is worse for relatively recent memories. Much older memories do not seem to be hurt by it. Frankland’s explanation is that older memories are less sensitive to this effect because the brain gradually transfers important memories from the hippocampus to the cortex for long-term storage. Neurogenesis in the hippocampus today is therefore more disruptive for memories from a week ago than for those from months or years ago.&lt;/p&gt;
&lt;p&gt;Indeed, Frankland noted that the forgetting produced by remodeling of the hippocampal circuits through neurogenesis happens more slowly than the intrinsic forgetting based on dopamine and Rac1 that Davis and Yi observed: It takes several weeks for newly formed neurons to create new connections — and to contribute to the forgetting processes at work.&lt;/p&gt;
&lt;h2&gt;What Happens to Forgotten Memories?&lt;/h2&gt;
&lt;p&gt;When memories are forgotten by whatever mechanism, what happens to them? Are all traces of them eliminated? Or do they persist in some form unavailable to us?&lt;/p&gt;
&lt;p&gt;A set of answers that seems to apply to at least some types of memory came from &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/29246980&quot;&gt;work published last year&lt;/a&gt; by &lt;a href=&quot;http://www2.dom.edu/departments/neuroscience/faculty/robert-calin-jageman&quot;&gt;Robert Calin-Jageman&lt;/a&gt; and &lt;a href=&quot;http://www2.dom.edu/departments/biologicalsciences/faculty/irina-calin-jageman&quot;&gt;Irina Calin-Jageman&lt;/a&gt;, husband-and-wife researchers who run a &lt;a href=&quot;https://calin-jageman.homeip.net/lab/&quot;&gt;behavioral neuroscience laboratory at Dominican University&lt;/a&gt; in River Forest, Illinois. The pair, who have been studying how sea slugs form memories for a decade, recently switched their attention to the neurobiology of how the animals forget.&lt;/p&gt;

&lt;p&gt;In the first stage of their experiments, the Calin-Jagemans “sensitized” sea slugs to electric shocks on one side of their body, but not on the other. In effect, they taught the sea slugs to show a bigger reflexive response on the trained side of their body. They then let the sea slugs forget this learned response over a one-week rest period, so that their responses to shocks were symmetrical again.&lt;/p&gt;
&lt;p&gt;Then the researchers jogged the sea slugs’ memory with another round of moderate shocks. The day after this reminder, they saw that the side of the animals that had previously been sensitized was again reacting more than the untrained side. This difference showed that some fragment of the memory persisted in the animal’s brain. “The animal has changed its behavior because the nervous system has encoded that previous painful experience,” according to Robert Calin-Jageman.&lt;/p&gt;

&lt;p&gt;“This suggests that there was some fragment of the previous sensitization memory still existing on the trained side,” he said, which hinted “that there must have been something latent in the brain” that preserved the association. Even after a week — a significant part of a sea slug’s one-year lifespan — the brain is still not back to the way it was before it acquired the memory. “Our results support the idea that it’s not just passive decay of memories,” said Irina Calin-Jageman. “Everything isn’t just gradually, completely gone.”&lt;/p&gt;
&lt;p&gt;To find out more about what survived the forgetting process, the Calin-Jagemans and their colleagues looked at gene expression on both sides of the animals’ brains, paying particular attention to about 1,200 genes that previous research had linked to memory storage in sea slugs. Eleven of those genes, they discovered, were still active on one side of the animals’ brains but not on the other, even after the animals had apparently forgotten about the shock.&lt;/p&gt;
&lt;p&gt;Why those 11 genes were active and what function they were serving are still unknowns. It’s not even certain that their activity directly relates to the forgotten memory; researchers would have to manipulate these genes to find out. But the possibility that excites the Calin-Jagemans is that those genes were connected to the memory — either in maintaining some remnant of the engram or in erasing it.&lt;/p&gt;
</description>
<pubDate>Tue, 24 Jul 2018 20:34:52 +0000</pubDate>
<dc:creator>digital55</dc:creator>
<og:title>To Remember, the Brain Must Actively Forget | Quanta Magazine</og:title>
<og:type>article</og:type>
<og:url>https://www.quantamagazine.org/to-remember-the-brain-must-actively-forget-20180724/</og:url>
<og:image>https://d2r55xnwy6nx47.cloudfront.net/uploads/2018/07/Forgetting_FB_1200.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.quantamagazine.org/to-remember-the-brain-must-actively-forget-20180724/</dc:identifier>
</item>
</channel>
</rss>