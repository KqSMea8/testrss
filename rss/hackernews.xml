<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>12 Factor CLI Apps</title>
<link>https://medium.com/@jdxcode/12-factor-cli-apps-dd3c227a0e46</link>
<guid isPermaLink="true" >https://medium.com/@jdxcode/12-factor-cli-apps-dd3c227a0e46</guid>
<description>&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*8SyyBBoiuj1Rc95X6ZBF5w.png&quot; data-width=&quot;1362&quot; data-height=&quot;1126&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*8SyyBBoiuj1Rc95X6ZBF5w.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*8SyyBBoiuj1Rc95X6ZBF5w.png&quot;/&gt;&lt;/div&gt;

&lt;p name=&quot;9415&quot; id=&quot;9415&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;CLIs are a fantastic way to build products. Unlike web applications, they take a small fraction of the time to build and are much more powerful. With the web, you can do whatever the developer programmed. With CLIs, you can easily mash-up multiple tools together yourself to perform advanced tasks. They require more technical expertise to use, but still work well for admin tasks, power-user tasks, or developer products.&lt;/p&gt;
&lt;p name=&quot;5121&quot; id=&quot;5121&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At Heroku, we’ve come up with a methodology called the &lt;a href=&quot;https://12factor.net/&quot; data-href=&quot;https://12factor.net/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;12 factor app&lt;/a&gt;. It’s a set of principles designed to make great web applications that are easy to maintain. In that spirit, here are 12 CLI factors to keep in mind when building your next CLI application. Following these principles will offer CLI UX that users will love.&lt;/p&gt;
&lt;p name=&quot;a6b5&quot; id=&quot;a6b5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We’ve also built a CLI framework called &lt;a href=&quot;https://oclif.io/&quot; data-href=&quot;https://oclif.io/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;oclif&lt;/a&gt; that is designed to follow these principles to build great CLIs in Node.&lt;/p&gt;
&lt;h3 name=&quot;f5db&quot; id=&quot;f5db&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;1. Great help is essential&lt;/h3&gt;
&lt;p name=&quot;41f5&quot; id=&quot;41f5&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Having good help documentation for a CLI is extremely important. It’s far more important than when building a web application as you can’t guide the user with a UI.&lt;/p&gt;
&lt;p name=&quot;00ad&quot; id=&quot;00ad&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A CLI should provide in-CLI help &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;and&lt;/strong&gt; help on the web (READMEs are a great place). That provides the immediate-ness of not needing to leave the terminal while also giving Google the opportunity to help your users (make sure Google is indexing the docs too btw).&lt;/p&gt;
&lt;p name=&quot;ddf4&quot; id=&quot;ddf4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Unless you already know your users will want man pages, I wouldn’t bother also outputting them as they just aren’t used often enough anymore. Novice developers are unaware of them and they don’t work on Windows. Offline support isn’t necessary if you already have in-CLI help. Still, man page support is coming to oclif because in a framework I think it makes sense. It can be solved once for all oclif CLIs to reap the benefits.&lt;/p&gt;
&lt;p name=&quot;6e4a&quot; id=&quot;6e4a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In the CLI, make sure &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;all&lt;/strong&gt; of the following displays the help. You can’t control what the user inputs so all of these &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;must&lt;/strong&gt; show help.&lt;/p&gt;
&lt;pre name=&quot;8a88&quot; id=&quot;8a88&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
# list all commands&lt;br/&gt;$ mycli&lt;br/&gt;$ mycli --help&lt;br/&gt;$ mycli help&lt;br/&gt;$ mycli -h
&lt;/pre&gt;
&lt;pre name=&quot;f3bd&quot; id=&quot;f3bd&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
# get help for subcommand&lt;br/&gt;$ mycli subcommand --help&lt;br/&gt;$ mycli subcommand -h
&lt;/pre&gt;
&lt;p name=&quot;483b&quot; id=&quot;483b&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;&lt;code class=&quot;markup--code markup--p-code&quot;&gt;-h,--help&lt;/code&gt; should be a reserved flag used for help only. In the case of &lt;code class=&quot;markup--code markup--p-code&quot;&gt;$ mycli subcommand help&lt;/code&gt;. You can’t guarantee that &lt;code class=&quot;markup--code markup--p-code&quot;&gt;help&lt;/code&gt; isn’t an argument that should be passed to the subcommand. In that case, it’s better to only show the help if it would otherwise error out with an invalid argument error. &lt;em class=&quot;markup--em markup--p-em&quot;&gt;There is actually a Heroku app named “help” which has caused this problem for me before.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;6643&quot; id=&quot;6643&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;a href=&quot;https://github.com/oclif/plugin-autocomplete&quot; data-href=&quot;https://github.com/oclif/plugin-autocomplete&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Shell completion&lt;/a&gt; is another great way to offer help to the users.&lt;/p&gt;
&lt;p name=&quot;853e&quot; id=&quot;853e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In terms of the help itself, show a description of the command, description of the arguments, description of all the flags, and most importantly: provide examples of common usage of the CLI. Even if the usage is obvious to you, it’s by far the most common referenced bit of documentation users will find.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*UdKDss6k-v36qrbcF4oBNw.png&quot; data-width=&quot;1702&quot; data-height=&quot;1690&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*UdKDss6k-v36qrbcF4oBNw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*UdKDss6k-v36qrbcF4oBNw.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;3958&quot; id=&quot;3958&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Of course, by building a CLI with oclif you get all this for free. Online docs, in-CLI docs, and autocomplete. We’re even working on a linter to help you enforce descriptions everywhere.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Wbwo-r2HRHTzGSlykqn0SQ.png&quot; data-width=&quot;1874&quot; data-height=&quot;764&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Wbwo-r2HRHTzGSlykqn0SQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Wbwo-r2HRHTzGSlykqn0SQ.png&quot;/&gt;&lt;/div&gt;
Example oclif readme auto-documentation
&lt;h3 name=&quot;8493&quot; id=&quot;8493&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;2. Prefer flags to args&lt;/h3&gt;
&lt;p name=&quot;6d84&quot; id=&quot;6d84&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;A CLI can accept 2 types of shell inputs: flags and args. Flags require a bit more typing, but make the CLI much clearer. For example, in the Heroku CLI we used to have a command called &lt;code class=&quot;markup--code markup--p-code&quot;&gt;heroku fork.&lt;/code&gt; It took in a source app to copy from and a destination app to copy to. Initially, this used a flag and an argument like this:&lt;/p&gt;
&lt;pre name=&quot;fed9&quot; id=&quot;fed9&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;$ heroku fork FROMAPP --app TOAPP&lt;/code&gt;
&lt;/pre&gt;
&lt;p name=&quot;ce3c&quot; id=&quot;ce3c&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Using a flag and an arg, it was really confusing which was the source and which was the destination app. We changed this to use flags for both:&lt;/p&gt;
&lt;pre name=&quot;5707&quot; id=&quot;5707&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;$ heroku fork --from FROMAPP --to TOAPP&lt;/code&gt;
&lt;/pre&gt;
&lt;p name=&quot;9e51&quot; id=&quot;9e51&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;This way it’s clear which is the source and which is the destination.&lt;/p&gt;
&lt;p name=&quot;c49e&quot; id=&quot;c49e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Note that we actually removed this command from the Heroku CLI but it’s still a great example of how args can be confusing.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;bbc9&quot; id=&quot;bbc9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Sometimes args are just fine though when the argument is obvious such as &lt;code class=&quot;markup--code markup--p-code&quot;&gt;$ rm file_to_remove&lt;/code&gt;. A good rule of thumb is 1 type of argument is fine, 2 types are very suspect, and 3 are never good.&lt;/p&gt;
&lt;p name=&quot;5c27&quot; id=&quot;5c27&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;variable&lt;/strong&gt; length arguments, it’s fine to have multiple arguments. (For example, &lt;code class=&quot;markup--code markup--p-code&quot;&gt;$ rm file1 file2 file3&lt;/code&gt;). It’s just when they’re different types that it becomes confusing to the user.&lt;/p&gt;
&lt;p name=&quot;3f39&quot; id=&quot;3f39&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Flags are also &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;much&lt;/strong&gt; easier to write autocomplete logic for as you know exactly what the value should be.&lt;/p&gt;
&lt;p name=&quot;2e79&quot; id=&quot;2e79&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For CLIs that pass flags off to some other process (such as &lt;code class=&quot;markup--code markup--p-code&quot;&gt;heroku run&lt;/code&gt;), the flag parser should accept a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--&lt;/code&gt; argument to denote that it should stop parsing and simply pass everything down as an argument. This allows you to run a command like &lt;code class=&quot;markup--code markup--p-code&quot;&gt;heroku run -a myapp -- myscript.sh -a arg1&lt;/code&gt; (This shows how &lt;code class=&quot;markup--code markup--p-code&quot;&gt;-a&lt;/code&gt; can be a flag for &lt;code class=&quot;markup--code markup--p-code&quot;&gt;heroku run&lt;/code&gt; but also a different &lt;code class=&quot;markup--code markup--p-code&quot;&gt;-a&lt;/code&gt; is passed to the dyno).&lt;/p&gt;
&lt;h3 name=&quot;042f&quot; id=&quot;042f&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;3. What version am I on?&lt;/h3&gt;
&lt;p name=&quot;f843&quot; id=&quot;f843&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Ensure you can get the CLI version through any of the following:&lt;/p&gt;
&lt;pre name=&quot;ebdd&quot; id=&quot;ebdd&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
$ mycli version&lt;br/&gt;$ mycli --version&lt;br/&gt;$ mycli -V
&lt;/pre&gt;
&lt;p name=&quot;03e0&quot; id=&quot;03e0&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Unless it’s a single-command CLI that also has a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;-v,--verbose&lt;/code&gt; flag, &lt;code class=&quot;markup--code markup--p-code&quot;&gt;$ mycli -v&lt;/code&gt; should also just display the CLI version. It’s frustrating to run 3 different commands to get the version for a CLI until you find the right one.&lt;/p&gt;
&lt;p name=&quot;6da8&quot; id=&quot;6da8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The version command is a main place you’ll ask users for debugging information so it’s a good place to add any helpful extra information aside from just the version number that might help you diagnose issues.&lt;/p&gt;
&lt;p name=&quot;e2ee&quot; id=&quot;e2ee&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I also suggest sending the version string as the User-Agent so you can debug server-side issues. (Assuming your CLI uses an API of some sort)&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*4kwxuIP4XyM6TGQAd_td9g.png&quot; data-width=&quot;1140&quot; data-height=&quot;166&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*4kwxuIP4XyM6TGQAd_td9g.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*4kwxuIP4XyM6TGQAd_td9g.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;0bf5&quot; id=&quot;0bf5&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;4. Mind the streams&lt;/h3&gt;
&lt;p name=&quot;79a9&quot; id=&quot;79a9&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Stdout and stderr provide a way for you to output messages to the user while also allowing them to redirect content to a file. For example:&lt;/p&gt;
&lt;pre name=&quot;fdeb&quot; id=&quot;fdeb&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;$ myapp &amp;gt; foo.txt&lt;br/&gt;Warning: something went wrong&lt;/code&gt;
&lt;/pre&gt;
&lt;p name=&quot;5b41&quot; id=&quot;5b41&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Because this warning is on stderr, it doesn’t end up in the file. Putting the warning on stdout would not only hide the warning here, but it would be especially problematic for structured data like JSON or binary. Use stderr for errors and warnings which by default will always end up on the screen even if stdout is redirected.&lt;/p&gt;
&lt;p name=&quot;80c5&quot; id=&quot;80c5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Not everything on stderr is an error though. For example, you can use curl to download a file but the progress output is on stderr. This allows you to redirect the stdout while still seeing the progress.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Q6FL70WgULj4-tLOvx7otg.gif&quot; data-width=&quot;819&quot; data-height=&quot;294&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Q6FL70WgULj4-tLOvx7otg.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Q6FL70WgULj4-tLOvx7otg.gif&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;c1d8&quot; id=&quot;c1d8&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;In short: stdout is for output, stderr is for messaging.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;2851&quot; id=&quot;2851&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;If you run a subcommand in your CLI, make sure you pipe the stderr of that subcommand up to the user always. This way any issues are surfaced ultimately to the user’s screen.&lt;/em&gt;&lt;/p&gt;
&lt;h3 name=&quot;ceeb&quot; id=&quot;ceeb&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;5. Handle things going wrong&lt;/h3&gt;
&lt;p name=&quot;cb41&quot; id=&quot;cb41&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Things go wrong in CLIs much more often than in web apps. Without a UI to guide the user, the only thing we can do is display an error to the user. This is expected behavior and part of using any CLI.&lt;/p&gt;
&lt;p name=&quot;bfa3&quot; id=&quot;bfa3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;First and foremost, make your errors informative. A great error message should contain the following:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;a961&quot; id=&quot;a961&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Error code&lt;/li&gt;
&lt;li name=&quot;a7b2&quot; id=&quot;a7b2&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Error title&lt;/li&gt;
&lt;li name=&quot;5623&quot; id=&quot;5623&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Error description&lt;/li&gt;
&lt;li name=&quot;4e41&quot; id=&quot;4e41&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;How to fix the error&lt;/li&gt;
&lt;li name=&quot;1395&quot; id=&quot;1395&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;URL for more information&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;467b&quot; id=&quot;467b&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;For example, if our CLI errored out with a file permission issue, we could show the following:&lt;/p&gt;
&lt;pre name=&quot;9b0b&quot; id=&quot;9b0b&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
$ myapp dump -o myfile.out&lt;br/&gt;Error: EPERM - Invalid permissions on myfile.out&lt;br/&gt;Cannot write to myfile.out, file does not have write permissions.&lt;br/&gt;Fix with: chmod +w myfile.out&lt;br/&gt;https://github.com/jdxcode/myapp
&lt;/pre&gt;
&lt;p name=&quot;d89a&quot; id=&quot;d89a&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Just think if every CLI was this helpful how incredible it would be to be a programmer.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;e33a&quot; id=&quot;e33a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Sometimes though you will have unhandled errors you didn’t expect the user to run into. For that, have a way to view full traceback information as well as full debug output with environment variables.&lt;/p&gt;
&lt;p name=&quot;1b27&quot; id=&quot;1b27&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In oclif we use the &lt;a href=&quot;https://www.npmjs.com/package/debug&quot; data-href=&quot;https://www.npmjs.com/package/debug&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;debug&lt;/a&gt; module which allows us to output debug statements grouped by component if the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;DEBUG&lt;/code&gt; environment variable is set. We have a lot of verbose logging if debug is fully enabled which is incredibly valuable to us when debugging issues.&lt;/p&gt;
&lt;p name=&quot;077a&quot; id=&quot;077a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Error logs can also be useful for post-mortem debugging but ensure they have timestamps, truncate them occasionally so they don’t eat up space on disk, and make sure they don’t contain ansi color codes.&lt;/p&gt;
&lt;h3 name=&quot;cca8&quot; id=&quot;cca8&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;6. Be fancy!&lt;/h3&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*ruLBiz3x3Fg7XN2pVUC31g.gif&quot; data-width=&quot;563&quot; data-height=&quot;271&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*ruLBiz3x3Fg7XN2pVUC31g.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*ruLBiz3x3Fg7XN2pVUC31g.gif&quot;/&gt;&lt;/div&gt;
spinner example
&lt;p name=&quot;6971&quot; id=&quot;6971&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Modern CLIs shouldn’t be afraid to show off. Use colors/dimming to highlight important information. Use spinners and progress bars to show long-running tasks to tell the user you’re still working. Leverage OS notifications when a very long-running task is done.&lt;/p&gt;
&lt;p name=&quot;2f6e&quot; id=&quot;2f6e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Still, you need to be able to fall back and know &lt;em class=&quot;markup--em markup--p-em&quot;&gt;when&lt;/em&gt; to fall back to more basic behavior. If the user’s stdout isn’t connected to a tty (usually this means their piping to a file), then don’t display colors on stdout. (likewise with stderr)&lt;/p&gt;
&lt;p name=&quot;0431&quot; id=&quot;0431&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Spinners and progress bars are also not a good idea when it’s not a tty. These work by outputting ansi codes to overwrite which only works on a screen. You never want to output those codes to a file.&lt;/p&gt;
&lt;p name=&quot;a808&quot; id=&quot;a808&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The user may have reasons for just not wanting this fancy output. Respect this if &lt;code class=&quot;markup--code markup--p-code&quot;&gt;TERM=dumb&lt;/code&gt;, &lt;a href=&quot;https://no-color.org/&quot; data-href=&quot;https://no-color.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;NO_COLOR&lt;/a&gt; is set, or if they specify &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--no-color&lt;/code&gt;. I would also suggest adding in an app-specific &lt;code class=&quot;markup--code markup--p-code&quot;&gt;MYAPP_NOCOLOR=1&lt;/code&gt; environment variable as well in case they want to disable color on just your CLI.&lt;/p&gt;
&lt;h3 name=&quot;2d6e&quot; id=&quot;2d6e&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;7. Prompt if you can&lt;/h3&gt;
&lt;p name=&quot;dc62&quot; id=&quot;dc62&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;For accepting input, if stdin is not a tty then prompt rather than forcing the user to specify a flag. Never &lt;em class=&quot;markup--em markup--p-em&quot;&gt;require&lt;/em&gt; a prompt though. The user needs to be able to automate your CLI in a script so allow them to override prompts always.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*X-PnBs4mM7BI2vTAjDXS6A.gif&quot; data-width=&quot;1254&quot; data-height=&quot;806&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*X-PnBs4mM7BI2vTAjDXS6A.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*X-PnBs4mM7BI2vTAjDXS6A.gif&quot;/&gt;&lt;/div&gt;
Prompt example
&lt;p name=&quot;71d5&quot; id=&quot;71d5&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Another great place to add prompts is confirmation dialogs for dangerous actions. For example when destroying a Heroku app, you’ll need to type the app name again to confirm:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*w_OYC5FXnBub9QPJQGJuQg.gif&quot; data-width=&quot;806&quot; data-height=&quot;382&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*w_OYC5FXnBub9QPJQGJuQg.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*w_OYC5FXnBub9QPJQGJuQg.gif&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;8145&quot; id=&quot;8145&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Checkboxes and radio buttons are a great way to improve CLI UX when you want to present options to the user visually:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*ODEhiWAn3qoZ2SSIw4yINw.gif&quot; data-width=&quot;554&quot; data-height=&quot;374&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*ODEhiWAn3qoZ2SSIw4yINw.gif&quot;/&gt;&lt;/div&gt;
transferring multiple apps to a new user with the Heroku CLI
&lt;h3 name=&quot;7ee5&quot; id=&quot;7ee5&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;8. Use tables&lt;/h3&gt;
&lt;p name=&quot;bf97&quot; id=&quot;bf97&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Note that&lt;/em&gt; &lt;code class=&quot;markup--code markup--p-code&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;cli.table()&lt;/em&gt;&lt;/code&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;from&lt;/em&gt; &lt;a href=&quot;https://github.com/oclif/cli-ux/tree/supertable&quot; data-href=&quot;https://github.com/oclif/cli-ux/tree/supertable&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;cli-ux@5&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;allows you to easily create tables following these principles.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;5bd4&quot; id=&quot;5bd4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Tables are a very common way to output data in a CLI. It’s important that each row of your output is a single ‘entry’ of data. Never output table borders. It’s noisy and a huge pain for parsing. This is an example of what &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;not&lt;/strong&gt; to do:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*AybS19Drx08ihW4KsrNhpw.png&quot; data-width=&quot;1352&quot; data-height=&quot;578&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*AybS19Drx08ihW4KsrNhpw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*AybS19Drx08ihW4KsrNhpw.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;f67a&quot; id=&quot;f67a&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;By keeping each row to a single entry, you can do things like pipe to wc to get the count of lines, or grep to filter each line:&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*0mJtpvzUtursztCIrZoKrA.png&quot; data-width=&quot;1654&quot; data-height=&quot;946&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*0mJtpvzUtursztCIrZoKrA.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*0mJtpvzUtursztCIrZoKrA.png&quot;/&gt;&lt;/div&gt;
listing files, piping to wc to count number of files, then doing the same of files with “.js” in the name. Note that wc has 3 counts: lines, words, and characters. You may also notice ls follows factor #6 where it behaves differently when piped vs when it is outputting to the screen (tty).
&lt;p name=&quot;8fa8&quot; id=&quot;8fa8&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Be mindful of the screen width. Only show a few columns by default but allow the user to pass &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--columns&lt;/code&gt; with a comma-separated list of column names to add less common types.&lt;/p&gt;
&lt;p name=&quot;5bc6&quot; id=&quot;5bc6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Truncate rows that are going to spill over the current screen width unless &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--no-truncate&lt;/code&gt; is set.&lt;/p&gt;
&lt;p name=&quot;f39f&quot; id=&quot;f39f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Show column headers by default but allow them to be hidden with &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--no-headers&lt;/code&gt;.&lt;/p&gt;
&lt;p name=&quot;69d8&quot; id=&quot;69d8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Allow users to pass &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--filter&lt;/code&gt; to filter specific columns. (grep can usually do this, but a flag can filter on specific cell values)&lt;/p&gt;
&lt;p name=&quot;2e5d&quot; id=&quot;2e5d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Allow sorting by column with &lt;code class=&quot;markup--code markup--p-code&quot;&gt;--sort&lt;/code&gt;. Allow inverse and multi-column sort as well.&lt;/p&gt;
&lt;p name=&quot;8ed2&quot; id=&quot;8ed2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Allow output in csv or json. Displaying raw output as json is a great way to output structured data. It can be manipulated with &lt;a href=&quot;https://stedolan.github.io/jq/&quot; data-href=&quot;https://stedolan.github.io/jq/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;jq&lt;/a&gt;. While jq is incredibly useful, cut and awk are simpler tools that work better with csv data.&lt;/p&gt;
&lt;h3 name=&quot;4cc3&quot; id=&quot;4cc3&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;9. Be speedy&lt;/h3&gt;
&lt;p name=&quot;c34f&quot; id=&quot;c34f&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;CLIs need to start quickly. Use &lt;code class=&quot;markup--code markup--p-code&quot;&gt;$ time mycli&lt;/code&gt; to benchmark your CLI. Here is a rough guide:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;4c83&quot; id=&quot;4c83&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&amp;lt;100ms: very fast (sadly, not feasible for scripting languages)&lt;/li&gt;
&lt;li name=&quot;7bfc&quot; id=&quot;7bfc&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;100ms–500ms: fast enough, aim here&lt;/li&gt;
&lt;li name=&quot;7639&quot; id=&quot;7639&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;500ms-2s: usable, but not going to impress anyone&lt;/li&gt;
&lt;li name=&quot;0558&quot; id=&quot;0558&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;2s+: languid, users will prefer to avoid your CLI at this point&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;2a06&quot; id=&quot;2a06&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Obviously if your CLI is performing a major task like downloading a large file or something heavily CPU-bound it won’t perform as quickly. In that case, make sure to show a progress bar or at least a spinner. Even just a spinner will give the impression the CLI is much faster than it is.&lt;/p&gt;
&lt;p name=&quot;634a&quot; id=&quot;634a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;oclif is designed to have minimal overhead. Right now on my box it sits around 150ms which is about as good as node can get. It doesn’t need to require all the js files in your CLI, just the command that is about to run. So even if you have hundreds of commands, the overhead will still be 150ms.&lt;/em&gt;&lt;/p&gt;
&lt;h3 name=&quot;464d&quot; id=&quot;464d&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;10. Encourage contributions&lt;/h3&gt;
&lt;p name=&quot;9a94&quot; id=&quot;9a94&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Keep your code open source. This allows users to poke around and diagnose problems themselves. It’s healthy to the community to offer a sample in case it’s useful to others. It makes organizations look great as well.&lt;/p&gt;
&lt;p name=&quot;43e2&quot; id=&quot;43e2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;a href=&quot;https://choosealicense.com/&quot; data-href=&quot;https://choosealicense.com/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Make sure you pick a license of course&lt;/a&gt;. GitHub and GitLab are great places to put your CLI and the README gives you a perfect place to provide an overview of the CLI.&lt;/p&gt;
&lt;p name=&quot;4f0f&quot; id=&quot;4f0f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Write up how to run the CLI locally and run the test suites. Offer a &lt;a href=&quot;https://help.github.com/articles/setting-guidelines-for-repository-contributors/&quot; data-href=&quot;https://help.github.com/articles/setting-guidelines-for-repository-contributors/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;contribution guideline doc&lt;/a&gt; to tell contributors what you expect in terms of commit syntax, code quality, tests, or whatever else is important for them to know.&lt;/p&gt;
&lt;p name=&quot;2b83&quot; id=&quot;2b83&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;a href=&quot;https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/&quot; data-href=&quot;https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Add a code of conduct&lt;/a&gt;. Even if you don’t feel that it’s necessary. It’s important to some people and they’ll feel much better by seeing one. To others they probably won’t even notice it. It’ll be helpful in the event someone is being rude and you have a document to point to.&lt;/p&gt;
&lt;p name=&quot;58d3&quot; id=&quot;58d3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In oclif, the &lt;a href=&quot;https://oclif.io/docs/plugins.html&quot; data-href=&quot;https://oclif.io/docs/plugins.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;plugins system&lt;/a&gt; offers a great way for people to extend your CLI. These plugins can later be included as a core plugin to provide functionality to all users.&lt;/p&gt;
&lt;h3 name=&quot;1374&quot; id=&quot;1374&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;11. Be clear about subcommands&lt;/h3&gt;
&lt;p name=&quot;aae5&quot; id=&quot;aae5&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;There are 2 types of CLIs: single and multi-command. Single-command CLIs are basic UNIX-style CLIs like &lt;code class=&quot;markup--code markup--p-code&quot;&gt;cp&lt;/code&gt; or &lt;code class=&quot;markup--code markup--p-code&quot;&gt;grep&lt;/code&gt;. Multi-commands are more like &lt;code class=&quot;markup--code markup--p-code&quot;&gt;git&lt;/code&gt; or &lt;code class=&quot;markup--code markup--p-code&quot;&gt;npm&lt;/code&gt; which accept a subcommand as the first argument.&lt;/p&gt;
&lt;p name=&quot;2619&quot; id=&quot;2619&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If a CLI is simple and only performs one basic task, it’s good fit for a single-command CLI. Most CLIs, however, will probably benefit from using subcommands.&lt;/p&gt;
&lt;p name=&quot;6b1d&quot; id=&quot;6b1d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Either way, if the user doesn’t pass anything arguments to the CLI, it’s always better to list the subcommands (for multi) or display the help (for single) rather than do some default behavior. Usually the user will do this before doing anything else.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;86ee&quot; id=&quot;86ee&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When you start using subcommands, it doesn’t take long before sub-subcommands become useful (we call these “topics” in oclif). Git chooses to separate subcommands from topics with spaces:&lt;/p&gt;
&lt;pre name=&quot;60c2&quot; id=&quot;60c2&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;$ git submodule add git@github.com:oclif/command&lt;/code&gt;
&lt;/pre&gt;
&lt;p name=&quot;6d67&quot; id=&quot;6d67&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Where in the Heroku CLI we use colons:&lt;/p&gt;
&lt;pre name=&quot;c7af&quot; id=&quot;c7af&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code u-paddingRight0 u-marginRight0&quot;&gt;$ heroku domains:add &lt;a href=&quot;http://www.myapp.com&quot; data-href=&quot;http://www.myapp.com&quot; class=&quot;markup--anchor markup--pre-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;www.myapp.com&lt;/a&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p name=&quot;1731&quot; id=&quot;1731&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Colons are preferable to help delineate the command between the arguments passed &lt;em class=&quot;markup--em markup--p-em&quot;&gt;to&lt;/em&gt; the command. The user quickly learns that argument 1 is the command and how to get help for it.&lt;/p&gt;
&lt;p name=&quot;1baa&quot; id=&quot;1baa&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Getting into the weeds a little bit, there is another technical reason why we prefer colons. For topic-level commands like&lt;/em&gt; &lt;code class=&quot;markup--code markup--p-code&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;$ heroku domains&lt;/em&gt;&lt;/code&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;we list all the domains of an app. If we used spaces to separate commands from subcommands&lt;/em&gt; &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;and&lt;/em&gt;&lt;/strong&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;wanted this topic-level command to accept an argument, the parser could have no way to determine if the argument was a subcommand or argument to the topic command. Therefore, using spaces to separate makes it so you cannot have topic-commands also accept an argument.&lt;/em&gt;&lt;/p&gt;
&lt;h3 name=&quot;c6d9&quot; id=&quot;c6d9&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;12. Follow XDG-spec&lt;/h3&gt;
&lt;p name=&quot;f525&quot; id=&quot;f525&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;a href=&quot;https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot; data-href=&quot;https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;XDG-spec&lt;/a&gt; is a great standard that should be used to find out where to put files. Unless environment variables like &lt;code class=&quot;markup--code markup--p-code&quot;&gt;XDG_CONFIG_HOME&lt;/code&gt; say otherwise, use &lt;code class=&quot;markup--code markup--p-code&quot;&gt;~/.config/myapp&lt;/code&gt; for config files, and &lt;code class=&quot;markup--code markup--p-code&quot;&gt;~/.local/share/myapp&lt;/code&gt; for data files.&lt;/p&gt;
&lt;p name=&quot;78e9&quot; id=&quot;78e9&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;For cache files though, use &lt;code class=&quot;markup--code markup--p-code&quot;&gt;~/.cache/myapp&lt;/code&gt; on Unix but on MacOS it’s better to default to &lt;code class=&quot;markup--code markup--p-code&quot;&gt;~/Library/Caches/myapp&lt;/code&gt;. On Windows you can use &lt;code class=&quot;markup--code markup--p-code&quot;&gt;%LOCALAPPDATA%\myapp&lt;/code&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 09 Oct 2018 01:28:12 +0000</pubDate>
<dc:creator>dickeytk</dc:creator>
<og:title>12 Factor CLI Apps – Jeff Dickey – Medium</og:title>
<og:url>https://medium.com/@jdxcode/12-factor-cli-apps-dd3c227a0e46</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*8SyyBBoiuj1Rc95X6ZBF5w.png</og:image>
<og:description>CLIs are a fantastic way to build products. Unlike web applications, they take a small fraction of the time to build and are much more…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@jdxcode/12-factor-cli-apps-dd3c227a0e46</dc:identifier>
</item>
<item>
<title>Google Drops Out of Pentagon&amp;#039;s $10B Cloud Competition</title>
<link>https://www.bloomberg.com/news/articles/2018-10-08/google-drops-out-of-pentagon-s-10-billion-cloud-competition</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-10-08/google-drops-out-of-pentagon-s-10-billion-cloud-competition</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-10-08/google-drops-out-of-pentagon-s-10-billion-cloud-competition&quot;&gt;https://www.bloomberg.com/news/articles/2018-10-08/google-drops-out-of-pentagon-s-10-billion-cloud-competition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18171562&quot;&gt;https://news.ycombinator.com/item?id=18171562&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 229&lt;/p&gt;
&lt;p&gt;# Comments: 85&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 21:40:13 +0000</pubDate>
<dc:creator>logronoide</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=950c6020-cbdc-11e8-bad5-e3ab3fd1999a&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOC0xMC0wOC9nb29nbGUtZHJvcHMtb3V0LW9mLXBlbnRhZ29uLXMtMTAtYmlsbGlvbi1jbG91ZC1jb21wZXRpdGlvbg==</dc:identifier>
</item>
<item>
<title>H-1B: As immigration furor roils Silicon Valley, Canada smooths way for techies</title>
<link>https://www.mercurynews.com/2018/10/08/h-1b-as-immigration-furor-roils-silicon-valley-canada-smoothes-way-for-techies/</link>
<guid isPermaLink="true" >https://www.mercurynews.com/2018/10/08/h-1b-as-immigration-furor-roils-silicon-valley-canada-smoothes-way-for-techies/</guid>
<description>&lt;p&gt;Two weeks: That’s how quickly a foreign technology worker in Silicon Valley can get an employment permit from Canada. In the U.S., that process takes months.&lt;/p&gt;
&lt;p&gt;As the administration of President Donald Trump has &lt;a href=&quot;https://www.mercurynews.com/2018/02/23/trump-administration-announces-more-h-1b-restrictions/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;increased scrutiny of H-1B visas&lt;/a&gt; for skilled foreign workers and plans to &lt;a href=&quot;https://www.mercurynews.com/2018/09/24/h-1b-spouses-work-ban-rule-coming-within-three-months-feds-say/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ban their spouses&lt;/a&gt; from holding jobs in the U.S., Canada has been moving aggressively to suck top foreign talent out of Silicon Valley and other technology-rich regions of the U.S.&lt;/p&gt;
&lt;p&gt;The Canadian government won’t say if it’s leveraging the tumultuous and uncertain immigration climate in the U.S. But experts say Canada’s year-old “Global Skills Strategy” program, which offers work permits similar to America’s H-1B visa, is ideally structured to attract highly skilled foreign tech workers to Toronto, Montreal or Vancouver. Though immigrants make up just 20 percent of Canada’s population, they hold about half of the science, technology, engineering and math degrees at the bachelor’s level and above,  government figures show.&lt;/p&gt;

&lt;p&gt;Before the program launched, Canada’s employment permit process for skilled workers took months.&lt;/p&gt;
&lt;p&gt;“It captures all of the Silicon Valley people, and it captures them quickly,” said Asha Kaushal, a professor at the University of British Columbia law school who studies immigration law.&lt;/p&gt;
&lt;p&gt;Trump’s plan to overhaul the H-1B — a visa intended for the kind of skilled workers Silicon Valley companies rely on but attacked by critics as a tool to replace American workers with cheaper foreign labor — has ratcheted up anxiety levels and created uncertainty for many skilled foreign tech workers in the U.S.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[&lt;a href=&quot;https://www.mercurynews.com/2018/09/14/h-1b-spouses-bay-area-tech-workers-fear-theyll-have-to-leave/&quot;&gt;Work ban for H1-B spouses: ‘It is coming, it is inevitable.”&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Former Bay Area software developer and Indian citizen Shobhit Khandelwal has already moved to Toronto. He came to work for note-taking app firm Evernote in Redwood City in February 2017, with a master’s in operations research from Columbia University, experience at Citibank and e-commerce company Jet.com, and an H-1B visa. Eighteen months later, he left.&lt;/p&gt;
&lt;p&gt;“I wanted to work on my own startup and I didn’t want to wait another 20 years or 30 years to get a green card,” said Khandelwal, 28, who acknowledged that the uncertain climate for immigrants in the U.S.&lt;strong&gt; &lt;/strong&gt;also played a role in his decision. “I thought about, if I do a startup (in the U.S.), if I can’t get the right kind of talent, how can I build a company?”&lt;/p&gt;

&lt;p&gt;Rather than simply get a work permit, Khandelwal opted to obtain permanent residence in Canada — the equivalent of a U.S. green card. It took about six months. In the U.S., Indian H-1B workers like him wait years, if not decades, for a green card. Later this month, Khandelwal plans to launch his startup’s artificial-intelligence-based parking-technology product.&lt;/p&gt;
&lt;p&gt;“I don’t have to worry about my visa, I don’t have to worry about am I going to be able to come back in if I leave the country,” he said.&lt;/p&gt;
&lt;p&gt;Uncertainty about U.S. visas and long waits for green cards were causing a brain drain in Silicon Valley long before Trump’s election. Canada has been working for years to grow its technology hubs, putting up recruiting billboards along Bay Area freeways as far back as 2013.&lt;/p&gt;
&lt;p&gt;But experts say the current climate has made Canada more appealing for some foreign workers&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Matthew Kolken, a New York immigration lawyer whose firm helps clients immigrate to both Canada and the U.S., said he’s had about a dozen foreign-citizen clients decide to move to Canada even though they were already in the midst of official proceedings to come to the U.S.&lt;/p&gt;
&lt;p&gt;“They gave up on their American dream,” Kolken said. “You want to be able to plan your career and your future. Why would you put your entire career potentially on hold if you have a viable opportunity in a country that has open arms to you?”&lt;/p&gt;
&lt;img class=&quot;lazyautosizes lazyload&quot; src=&quot;https://i1.wp.com/www.mercurynews.com/wp-content/uploads/2018/10/SJM-L-CANADA-00002.jpg?fit=620%2C9999px&amp;amp;ssl=1&quot; width=&quot;908&quot;/&gt;Former LinkedIn software engineer Vikram Rangnekar, who moved from Silicon Valley to Canada (Courtesy of Vikram Rangnekar) 
&lt;p&gt;Two years ago, software engineer Vikram Rangnekar, an Indian citizen, emigrated from the Bay Area to Canada with his wife and two small children. He left behind a region, and a job, he loved.&lt;/p&gt;
&lt;p&gt;“We would go to Santa Cruz all the time,” recalled Rangnekar, 36, who lived in Saratoga. “I used to love to drive Highway 17. It was like a racetrack. We were one of the few families who would drive up to San Francisco every weekend.” Working at LinkedIn, he said, was “the best thing ever.”&lt;/p&gt;
&lt;p&gt;But even though he had spent six years on an H-1B visa, a green card seemed no closer. And the H-1B locks employees to the company that obtained the visa. Rangnekar wanted both a sense of permanence in his life and flexibility in his career. The family moved to Toronto, where he now works for a tech startup and in his spare time runs the Mov North web forum for people interested in relocating to Canada.&lt;/p&gt;
&lt;p&gt;Hugo O’Doherty, co-founder of Moving2Canada.com, believes his country’s government and employers see the U.S. immigration climate as a boon.&lt;/p&gt;

&lt;p&gt;“There’s been like an all-out effort for capitalizing on the opportunity,” said O’Doherty. “You’re going to see even more people moving from the Bay Area to Canada in coming months and years.”&lt;/p&gt;
&lt;p&gt;O’Doherty, who saw U.S.-based traffic to his site more than double so far this year, said most Moving2Canada.com users are tech workers. On forums connected to the site, “You get people who are quite clear that Donald Trump is the reason they’re leaving the U.S. but you also get people who might’ve made the move anyway,” O’Doherty said.&lt;/p&gt;
&lt;p&gt;Google software engineer Karthik Ravindran, in Silicon Valley on an H-1B, applied for permanent residence in Canada late last year with his wife after the Trump administration first proposed banning foreign spouses from working. He received residence in four months.&lt;/p&gt;
&lt;p&gt;“It seems like a lot fairer system than in the U.S., unfortunately,” said Ravindran.&lt;/p&gt;
&lt;img class=&quot;lazyautosizes lazyload&quot; src=&quot;https://i1.wp.com/www.mercurynews.com/wp-content/uploads/2018/06/AFP_14Y2JU.jpg?fit=620%2C9999px&amp;amp;ssl=1&quot; alt=&quot;&quot; width=&quot;3000&quot; height=&quot;376&quot;/&gt;U.S. President Donald Trump (R) welcomes Canadian Prime Minister Justin Trudeau at the White House in Washington, DC. on October 11, 2017 (Saul Loeb/AFP/Getty Images) 
&lt;p&gt;When Canadian Prime Minister &lt;a href=&quot;https://www.mercurynews.com/2018/02/08/canadian-pm-justin-trudeau-talks-business-with-bay-area-tech-leaders/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Justin Trudeau visited the Bay Area earlier this year&lt;/a&gt; he declined to say whether Trump’s immigration policies were helping Canada attract skilled workers. Instead, Trudeau pointed to U.S. firms’ investments in Canada, including Salesforce’s $2 billion investment in its business there and a plan by AppDirect, another San Francisco tech company, to add 300 jobs in Canada over the next five years. Google and Facebook have established outposts in Canada, along with Amazon and Microsoft.&lt;/p&gt;
&lt;p&gt;A spokeswoman for the Canadian government also declined to address the impact of the current U.S. administration’s policies, saying only that Canada selects permanent residents for their “positive impact” on the country’s economy.&lt;/p&gt;
&lt;p&gt;“Immigration will continue to play a crucial role in keeping our country at the forefront of the global economy,” according to the government’s statement. “Thanks to immigration, Canada is in a strong position to face future labor-force challenges arising from our aging population.”&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;&lt;a href=&quot;https://www.mercurynews.com/2018/08/13/h-1b-use-skyrocketed-among-bay-area-tech-giants/&quot;&gt;The government cracked down on H1-B visas. It didn’t stop tech giants from hiring.&lt;/a&gt;&lt;/strong&gt;]&lt;/p&gt;
&lt;p&gt;Despite disruptions arising from Trump’s approach to immigration, the tech industry in Silicon Valley — where outrageous housing costs and horrific commutes are the norm — has more to worry about than Canada, said Harj Taggar, CEO of San Francisco-based Triplebyte, a jobs platform for software engineers.&lt;/p&gt;
&lt;aside class=&quot;related left&quot;&gt;
&lt;/aside&gt;
“The biggest threat to Silicon Valley is not so much from another country. I think it’s other locations in the U.S.,” Taggar said. “I am seeing more people leaving Silicon Valley for Seattle or Portland or, crazy as it sounds, to L.A.”
&lt;p&gt;But Michael Tippett, a prominent Vancouver technology entrepreneur who travels regularly to Silicon Valley to help foreign tech workers move to Canada and launch startups, believes the U.S. immigration climate under Trump will produce broad, long-term effects.&lt;/p&gt;
&lt;p&gt;“The brand of America as the land of the free and the place of opportunity has really taken a hit,” Tippett said. “It’s no longer the default go-to place for people who have world-class talent.”&lt;/p&gt;


</description>
<pubDate>Mon, 08 Oct 2018 17:53:34 +0000</pubDate>
<dc:creator>muzz</dc:creator>
<og:type>article</og:type>
<og:title>H-1B: As immigration furor roils Silicon Valley, Canada smooths way for techies</og:title>
<og:url>https://www.mercurynews.com/2018/10/08/h-1b-as-immigration-furor-roils-silicon-valley-canada-smoothes-way-for-techies/</og:url>
<og:description>“They gave up on their American dream,” says immigration lawyer.</og:description>
<og:image>https://www.mercurynews.com/wp-content/uploads/2018/10/SJM-L-CANADA-0000.jpg?w=1024&amp;h=768</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.mercurynews.com/2018/10/08/h-1b-as-immigration-furor-roils-silicon-valley-canada-smoothes-way-for-techies/</dc:identifier>
</item>
<item>
<title>How newlines affect Linux kernel performance</title>
<link>https://nadav.amit.zone/blog/linux-inline</link>
<guid isPermaLink="true" >https://nadav.amit.zone/blog/linux-inline</guid>
<description>&lt;p id=&quot;h.p_ID_32&quot; class=&quot;zfr3Q&quot;&gt;The Linux kernel strives to be fast and efficient. As it is written mostly in C, it can mostly control how the generated machine code looks. Nevertheless, as the kernel code is compiled into machine code, the compiler optimizes the generated code to improve its performance. The kernel code, however, employs uncommon coding techniques, which can fail code optimizations. In this blog-post, I would share my experience in analyzing the reasons for poor code inlining of the kernel code. Although the performance improvement are not significant in most cases, understanding these issues are valuable in preventing them from becoming larger. New-lines, as promised, will be one of the reasons, though not the only one.&lt;/p&gt;
&lt;h2 id=&quot;h.p_ID_34&quot; class=&quot;zfr3Q JYVBee&quot;&gt;New lines in inline assembly&lt;/h2&gt;
&lt;p id=&quot;h.p_ID_36&quot; class=&quot;zfr3Q&quot;&gt;One fine day, I encountered a strange phenomenon: minor changes I performed in the Linux source code, caused small but noticeable performance degradation. As I expected these changes to actually improve performance, I decided to disassemble the functions which I changed. To my surprise, I realized that my change caused functions that were previously inlined, not to be inlined anymore. The decision not to inline these functions seem dubious as they were short.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_38&quot; class=&quot;zfr3Q&quot;&gt;I decided to further investigate this issue and to check whether it affects other parts of the kernel. Arguably, it is rather hard to say whether a function should be inlined, so some sort of indication of bad inlining decisions is needed. C functions that are declared with the &lt;em&gt;inline&lt;/em&gt; keyword are not bound to be inlined by the compiler, so having a non-inlined function that is marked with the &lt;em&gt;inline&lt;/em&gt; keyword is not an indication by itself for bad inlining decision.&lt;/p&gt;
&lt;p id=&quot;h.p_x28o_VQrErN4&quot; class=&quot;zfr3Q&quot;&gt;Arguably, there are two simple heuristics to find functions which were suspiciously not inlined for the wrong reason. One heuristic is to look for short (binary-wise) functions by looking at the static symbols. A second heuristic is to look for functions which appear in multiple translation units (objects), as this might indicate they were declared as &lt;em&gt;inline&lt;/em&gt; but were eventually not inlined, and that they are in common use. In both cases, there may be valid reasons for the compiler not to inline functions even if they are short, for example if they are used as a value for a function pointer. However, they can give an indication if something is &quot;very wrong&quot; in how inlining is performed, or more correctly, ignored.&lt;/p&gt;
&lt;p id=&quot;h.p_wUrHNyzRFPuj&quot; class=&quot;zfr3Q&quot;&gt;In practice, I used both heuristics, but in this post I will only use the second one to check whether inlining decisions seem dubious. To do so I rebuild the kernel, using the &lt;em&gt;localyesconfig&lt;/em&gt; make target to incorporate the modules into the core. I ensure the &quot;kernel hacking&quot; features in the config are off, as those tend to blow the size of the code and rightfully cause functions not to be inlined. I then looked for static function which had the most instances in the built kernel:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;20&quot;&gt;
&lt;pre id=&quot;h.p_1SaKnWyYF9W6&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;$ nm --print-size ./vmlinux | grep ' t ' | cut -d' ' -f2- | sort | uniq -c | grep -v '^      1' | sort -n -r | head -n 5&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_SfN2tB7nIPwa&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;br/&gt;&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_44&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;&lt;u&gt;Instances   Size               Function Name&lt;/u&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_46&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;     36     0000000000000019 t &lt;strong&gt;copy_overflow&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_48&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      8     000000000000012f t jhash&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_50&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      8     000000000000000d t &lt;strong&gt;arch_local_save_flags&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_52&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      7     0000000000000017 t dst_output&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_54&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      6     000000000000004e t &lt;strong&gt;put_page&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_kDY5yVryGDvH&quot; class=&quot;zfr3Q&quot;&gt;As seen, the results are suspicious. As mentioned before, in some cases there are good reasons for functions not to be inlined. &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Finclude%2Flinux%2Fjhash.h%23L70&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNFsRj8EJ5b5iBJ8XO186So6QnjVlg&quot; target=&quot;_blank&quot;&gt;jhash&lt;/a&gt;() is a big function (303 bytes) so it is reasonable for it is not to be inlined. &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Finclude%2Fnet%2Fdst.h%23L442&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNG965YViUX8AwyV182lN98hrg4uPg&quot; target=&quot;_blank&quot;&gt;dst_output&lt;/a&gt;() address is used as a function pointer, which causes it not to be inlined. Yet the other functions seem to be great candidates for inlining, and it is not clear why they are not inlined. Let's look at the source code of &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Finclude%2Flinux%2Fthread_info.h%23L121&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNHRUur2p0fNEKuDPgxmEuIP4HFKqA&quot; target=&quot;_blank&quot;&gt;copy_overflow&lt;/a&gt;(), which has many instances in the binary:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;13&quot;&gt;
&lt;pre id=&quot;h.p_ID_58&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;static inline void copy_overflow(int size, unsigned long count)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_60&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;{&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_62&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      WARN(1, &quot;Buffer overflow detected (%d &amp;lt; %lu)!\n&quot;, size, count);&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_64&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_66&quot; class=&quot;zfr3Q&quot;&gt;Will the disassembly tell us anything?&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;27&quot;&gt;
&lt;pre id=&quot;h.p_ID_68&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315e0 &amp;lt;+0&amp;gt;: push   %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_70&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315e1 &amp;lt;+1&amp;gt;: mov    %rsi,%rdx&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_72&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315e4 &amp;lt;+4&amp;gt;: mov    %edi,%esi&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_74&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315e6 &amp;lt;+6&amp;gt;: &lt;strong&gt;mov    $0xffffffff820bc4b8,%rdi&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_76&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315ed &amp;lt;+13&amp;gt;: mov    %rsp,%rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_78&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315f0 &amp;lt;+16&amp;gt;: &lt;strong&gt;callq  0xffffffff81089b70 &amp;lt;__warn_printk&amp;gt;&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_80&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315f5 &amp;lt;+21&amp;gt;: &lt;strong&gt;ud2&lt;/strong&gt;    &lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_82&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315f7 &amp;lt;+23&amp;gt;: pop    %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_84&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff819315f8 &amp;lt;+24&amp;gt;: retq   &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_86&quot; class=&quot;zfr3Q&quot;&gt;Apparently not. Notice that out of the 9 assembly instructions that are shown above, 6 deal with the function entry and exit - for example, updating the frame pointer, and only the 3 bolded ones are really needed.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_88&quot; class=&quot;zfr3Q&quot;&gt;To understand the problem, we must dig deeper and look at the warning mechanism in Linux. In x86, this mechanism shares the same infrastructure with the bug reporting mechanism. When a bug or a warning are triggered, the kernel prints the filename and the line number in the source-code that triggered the bug, which can then used to analyze the root-cause of the bug. A naive implementation, however, would cause the code-cache to be polluted with the this information as well as the function call to the function that prints the error message, consequently causing performance degradation.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_90&quot; class=&quot;zfr3Q&quot;&gt;Linux therefore uses a different scheme by setting an exception triggering instruction (&lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Fc9x.me%2Fx86%2Fhtml%2Ffile_module_x86_id_318.html&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNHEO_T2mpnmEdfHJwHviZH3EZjMNw&quot; target=&quot;_blank&quot;&gt;ud2&lt;/a&gt; on x86) and saving the warning information in a bug table that is set in a different section in the executable. Once a warning is triggered using the WARN() macro, an exception is triggered and the exception handler looks for the warning information - the source-code filename and line - in the table.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_92&quot; class=&quot;zfr3Q&quot;&gt;Inline assembly is used to save this information in &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Farch%2Fx86%2Finclude%2Fasm%2Fbug.h%23L33&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNH50xpNYxcbZMeUdfTRU52uVEdmTA&quot; target=&quot;_blank&quot;&gt;_BUG_FLAGS()&lt;/a&gt;. Here is its code after some simplifications to ease readability:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;22&quot;&gt;
&lt;pre id=&quot;h.p_ID_94&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;asm volatile(&quot;1: ud2\n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_96&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot;&lt;strong&gt;.pushsection&lt;/strong&gt; __bug_table,\&quot;aw\&quot;\n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_98&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot;2: .long 1b - 2b\n&quot; /* bug_entry::bug_addr */&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_100&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot;   .long %c0 - 2b\n&quot; /* bug_entry::file */&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_102&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot;   .word %c1\n&quot;      /* bug_entry::line */&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_104&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot; .word %c2\n&quot;   /* bug_entry::flags */&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_106&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot; .org 2b+%c3\n&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_108&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;             &quot;&lt;strong&gt;.popsection&lt;/strong&gt;&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_110&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                 : : &quot;i&quot; (__FILE__), &quot;i&quot; (__LINE__),&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_112&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                     &quot;i&quot; (flags),&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_114&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                     &quot;i&quot; (sizeof(struct bug_entry)));&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_116&quot; class=&quot;zfr3Q&quot;&gt;Ignoring the assembly shenanigans that this code uses, we can see that in practice it generates a single ud2 instruction. However, the compiler considers this code to be &quot;big&quot; and consequently oftentimes does not inline functions that use WARN() or similar functions.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_118&quot; class=&quot;zfr3Q&quot;&gt;The reason turns to be the newline characters (marked as '\n' above). The kernel compiler, GCC, is unaware to the code size that will be generated by the inline assembly. It therefore tries to &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Fgcc.gnu.org%2Fonlinedocs%2Fgcc-4.0.1%2Fgcc%2FExtended-Asm.html&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNF1VvhuegWvg6lHoJpxOpOK4XDsag&quot; target=&quot;_blank&quot;&gt;estimate&lt;/a&gt; its size based on newline characters and statement separators (';' on x86). In GCC, we can see the code that performs this estimation in the estimate_num_insns() function:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;14&quot;&gt;
&lt;pre id=&quot;h.p_yhjwdtGnLElM&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;int estimate_num_insns (gimple *stmt, eni_weights *weights)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_S9mfSny0OH9v&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;{&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_AslcSRgKOH94&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;...&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_rznHu49QOH96&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;    case GIMPLE_ASM:&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_D7hQe1N7OH99&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      {&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_02eZwuEBOH-B&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        int count = asm_str_count (gimple_asm_string (as_a &amp;lt;gasm *&amp;gt; (stmt)));&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_xHHqQm6cOH-D&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        /* 1000 means infinity. This avoids overflows later&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_xe0JfVVZOH-G&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;           with very long asm statements.  */&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_YGgrtHj8OH-J&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        if (count &amp;gt; 1000)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_9641GS2WOH-K&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;          count = 1000;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_3BJNEPxKOH-L&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        return count;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_rYDXu7IhOH-N&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      }&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_q3zOC_-0OH-Q&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      ..&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_vOtDSGQMOH-S&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_120&quot; class=&quot;zfr3Q&quot;&gt;Note that this pattern, of saving data using inline assembly, is not limited to bugs and warnings. The kernel uses it for many additional purposes: exception tables, that gracefully handle an exception that is triggered inside the kernel; alternative instructions table, that tailors the kernel on boot-time to the specific CPU architecture extensions that are supported; annotations that are used for stack metadata validation by objtool and so on.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_122&quot; class=&quot;zfr3Q&quot;&gt;Before we get to solving this problem, a question needs to be raised: is the current behavior flawed at all? Eventually, the size of the kernel will increase if functions that use WARN(), for example, will be inlined. This increase in size can cause the kernel image to be bigger, and since the Linux kernel cannot be paged out, will also increase memory consumption. However, the main reason that the compiler strives to avoid inflation of the code size is to avoid pressure on the instruction cache, whose impact may offset inlining benefits. Moreover, the heuristics of other compiler optimizations (e.g., loop optimizations) depend on the size of the code.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_124&quot; class=&quot;zfr3Q&quot;&gt;Solving the problem is not trivial. Ideally, GCC would have used an integrated assembler, similarly to &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Fwww.embecosm.com%2Fappnotes%2Fean10%2Fean10-howto-llvmas-1.0.html%23idp109760&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNFA3af2YCX85JfNTPENGJaPWnJyKQ&quot; target=&quot;_blank&quot;&gt;LLVM&lt;/a&gt;, which would give better estimation of the generated code size of inline assembly. Experimentally, LLVM seems to make the right inlining decisions and is not affected by new-lines or data that is set in other sections of the executable. Interestingly, it appears to do so even when the integrated assembler is not used for assembly. GCC, however, uses the GNU assembler after the code is compiled, which prevents it from getting a correct estimation of the code size.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_126&quot; class=&quot;zfr3Q&quot;&gt;Alternatively, the problem could have been solved by overriding GCC's code size estimation through a directive or a built-in function. However, looking at GCC code does not reveal a direct or indirect way to achieve this goal.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_128&quot; class=&quot;zfr3Q&quot;&gt;One may think that using the &lt;em&gt;always_inline&lt;/em&gt; function attribute to force the compiler to inline functions would solve the problem. It appears that some have encountered the problem of poor inlining decisions in the past, without understanding the root-cause and used this &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Fpatchwork.kernel.org%2Fpatch%2F10450037%2F&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNFk1XM4NcBO04YHMCqFEYdojT6zzA&quot; target=&quot;_blank&quot;&gt;solution&lt;/a&gt;. However, this solution has several drawbacks. First, it is hard to make and maintain these annotations. Second, this solution does not address other code optimizations the rely on code-size estimation. Third, the kernel uses various configurations and supports multiple CPU architectures, which may require a certain function to be inlined in some setups and not inlined in other. Finally, and most importantly, using &lt;em&gt;always_inline&lt;/em&gt; can just push the problem upwards to calling functions, as we will later see.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_130&quot; class=&quot;zfr3Q&quot;&gt;Therefore, a more systematic solution is needed. The &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Flkml.org%2Flkml%2F2018%2F10%2F4%2F25&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNHmatTE6Tz8WWZScCVnHEP_XkmTLw&quot; target=&quot;_blank&quot;&gt;solution&lt;/a&gt; comes in the form of assembly macros that are set to hold the long assembly code, and use a single line inside the inline assembly that calls the macro. This solution does not only improve the generated machine code, but makes the assembly code more readable, as it prevents various quirks that are required in inline assembly, for example new-line characters. Moreover, in certain cases this change allows to consolidate the currently separate implementations that are used in C and assembly, which eases code maintenance.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_132&quot; class=&quot;zfr3Q&quot;&gt;Addressing the issue shows a performance improvement of tens of cycles for certain system calls, which are indeed not too notable. After addressing these issues, we see copy_overflow() and other functions disappear from the commonly non-inlined inline functions list.&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;17&quot;&gt;
&lt;pre id=&quot;h.p_ID_134&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt; &lt;u&gt;Instances  Size               Function Name&lt;/u&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_136&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      9     000000000000012f t jhash&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_138&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      8     0000000000000011 t &lt;strong&gt;kzalloc&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_140&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      7     0000000000000017 t dst_output&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_142&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      5     000000000000002f t &lt;strong&gt;acpi_os_allocate_zeroed&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_144&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;      5     0000000000000029 t &lt;strong&gt;acpi_os_allocate&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_146&quot; class=&quot;zfr3Q&quot;&gt;However, we got some new ones. Lets try to understand where do they come from.&lt;/p&gt;
&lt;h2 id=&quot;h.p_ID_148&quot; class=&quot;zfr3Q JYVBee&quot;&gt;Constant computations and inlining&lt;/h2&gt;
&lt;p id=&quot;h.p_ID_150&quot; class=&quot;zfr3Q&quot;&gt;As shown, &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Finclude%2Flinux%2Fslab.h%23L699&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNETa0AsXtd5OrwwhSgLbleofGJm5A&quot; target=&quot;_blank&quot;&gt;kzalloc&lt;/a&gt;() is not always inlined, although its code is very simple.&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;11&quot;&gt;
&lt;pre id=&quot;h.p_ID_152&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;static inline void *kzalloc(size_t size, gfp_t flags)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_154&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;{&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_156&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   return kmalloc(size, flags | __GFP_ZERO);&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_158&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_160&quot; class=&quot;zfr3Q&quot;&gt;The assembly, again does not provide any answers as to why it is not inlined:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;19&quot;&gt;
&lt;pre id=&quot;h.p_ID_162&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929e0 &amp;lt;+0&amp;gt;: push   %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_164&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929e1 &amp;lt;+1&amp;gt;: &lt;strong&gt;mov    $0x14080c0,%esi&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_166&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929e6 &amp;lt;+6&amp;gt;: mov    %rsp,%rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_168&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929e9 &amp;lt;+9&amp;gt;: &lt;strong&gt;callq  0xffffffff8125d590 &amp;lt;__kmalloc&amp;gt;&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_170&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929ee &amp;lt;+14&amp;gt;: pop    %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_172&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;0xffffffff817929ef &amp;lt;+15&amp;gt;: retq   &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_174&quot; class=&quot;zfr3Q&quot;&gt;The answer to our question lies in kmalloc(), which is called by kzalloc() and is considered to have many instructions by GCC heuristics. kmalloc() is inlined since it is marked with the &lt;em&gt;always_inline&lt;/em&gt; attribute, but its estimated instruction count is then attributed to the calling function, kzalloc() in this case. This result exemplifies why the use of the &lt;em&gt;always_inline&lt;/em&gt; attribute is not a sufficient solution for code inlining problem.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_176&quot; class=&quot;zfr3Q&quot;&gt;Still, it is not clear why GCC estimates that kmalloc() would be compiled into many instructions. As shown, it is compiled into a single call to __kmalloc(). To answer this question, we need to follow kmalloc() code, which eventually uses the ilog2() macro to compute the log2 of an integer, in order to compute the page allocation order.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_178&quot; class=&quot;zfr3Q&quot;&gt;Here is a and shortened version of ilog2():&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;19&quot;&gt;
&lt;pre id=&quot;h.p_ID_180&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;#define ilog2(n)                                \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_182&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;(                                               \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_184&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        __builtin_constant_p(n) ? (             \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_186&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        /* &lt;strong&gt;Optimized version for constants&lt;/strong&gt; */   \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_188&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;lt; 2 ? 0 :                   \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_190&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt; 63) ? 63 :       \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_192&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt; 62) ? 62 :       \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_194&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                ...&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_196&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt;  3) ?  3 :       \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_198&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt;  2) ?  2 :       \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_200&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                1 ) :                           \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_202&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        /* &lt;strong&gt;Another version for non-constants&lt;/strong&gt; */ \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_204&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        (sizeof(n) &amp;lt;= 4) ?                      \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_206&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        __ilog2_u32(n) :                        \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_208&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        __ilog2_u64(n)                          \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_210&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_212&quot; class=&quot;zfr3Q&quot;&gt;As shown, the macro first uses the built-in function &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Fgcc.gnu.org%2Fonlinedocs%2Fgcc%2FOther-Builtins.html&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNEdcBRyKwJnx2-X7DZLZYXeDj4bPg&quot; target=&quot;_blank&quot;&gt;__builtin_constant_p&lt;/a&gt;() to determine whether &lt;em&gt;n&lt;/em&gt; is known to be a constant during compilation time. If &lt;em&gt;n&lt;/em&gt; is known to be constant, a long series of conditions is evaluated to compute the result during compilation time, which allows further optimizations. Otherwise, if &lt;em&gt;n&lt;/em&gt; is not known to be constant, a short code is emitted to compute during runtime the result. Yet, regardless of whether &lt;em&gt;n&lt;/em&gt; is constant or not, all of the conditions in the ilog2() macro are evaluated during compilation time and do not translate into any machine code instructions.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_214&quot; class=&quot;zfr3Q&quot;&gt;However, although the generated code is efficient, it causes GCC, again, to estimate the number of instructions that ilog2() takes incorrectly. Apparently, the number of instructions is estimated before inlining decisions take place, and in this stage the compiler usually still does not know whether &lt;em&gt;n&lt;/em&gt; is constant. Later, after inlining decisions are performed, GCC cannot update the instruction count estimation accordingly.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_216&quot; class=&quot;zfr3Q&quot;&gt;This inlining problem is not as common as the previous one, yet it is not rare. Bit operations (e.g., test_bit()) and bitmaps commonly use __builtin_constant_p() in the described manner. As a result, functions that use these facilities, for example cpumask_weight(), are not inlined.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_218&quot; class=&quot;zfr3Q&quot;&gt;A possible solution for this problem is to use the built-in __builtin_choose_expr() to test __builtin_constant_p() instead of using C if-conditions and conditional operators (?:) :&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;16&quot;&gt;
&lt;pre id=&quot;h.p_ID_220&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;#define ilog2(n) \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_222&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;(                                                \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_224&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        &lt;strong&gt;__builtin_choose_expr&lt;/strong&gt;(__builtin_constant_p(n), \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_226&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                ((n) &amp;lt; 2 ? 0 : \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_228&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt; 63) ? 63 : \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_230&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt; 62) ? 62 : \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_232&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                ...&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_234&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt;  3) ?  3 :        \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_236&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                (n) &amp;amp; (1ULL &amp;lt;&amp;lt;  2) ?  2 :        \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_238&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;                1 )),                            \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_240&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        (sizeof(n) &amp;lt;= 4) ?                      \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_242&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        __ilog2_u32(n) :                        \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_244&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        __ilog2_u64(n)                          \&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_246&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_248&quot; class=&quot;zfr3Q&quot;&gt;This built-in is evaluated earlier in the compilation process, before inlining decisions are being made. Yet, there is a catch: as this built-in is evaluated earlier, GCC is only able to determine that an argument is constant for constant expressions, which can cause less efficient code to be generated. For instance, if a constant was given as a function argument, GCC will not be able to determine it is constant. In the following case, for example, the non-constant version will be used:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;7&quot;&gt;
&lt;pre id=&quot;h.p_ID_250&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;int bar(int n)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_252&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;{&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_WrMa_IKXIr7a&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        return ilog2(n)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_256&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_258&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;int foo(int n)&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_260&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;{&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_262&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;        return bar(n);&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_264&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_266&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;v = foo(bar(5)); /* will use the non-constant version */&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_268&quot; class=&quot;zfr3Q&quot;&gt;It is therefore questionable whether using __builtin_choose_expr() is an appropriate solution. Perhaps it is better to just mark functions such as kzalloc() with the &lt;em&gt;always_inline&lt;/em&gt; attribute. Compiling using LLVM reveals, again, that LLVM inlining decisions are not negatively affected by the use of __builtin_constant_p().&lt;/p&gt;
&lt;h2 id=&quot;h.p_ID_272&quot; class=&quot;zfr3Q JYVBee&quot;&gt;Function attributes&lt;/h2&gt;
&lt;p id=&quot;h.p_ID_274&quot; class=&quot;zfr3Q&quot;&gt;Finally, there are certain function attributes that affect inlining decision. Using function attributes to set an optimization levels for specific functions can prevent the compiler from inlining the functions or functions that are called by them. The Linux kernel rarely uses such attributes, but one of its uses is in the KVM function &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Farch%2Fx86%2Fkvm%2Fvmx.c%23L9669&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNG53fi_oNYrosfwzLW6dXPqRO1DGQ&quot; target=&quot;_blank&quot;&gt;vmx_vcpu_run&lt;/a&gt;() which is a very hot function that launches or resumes the virtual machine. The use of the optimization attribute in this function is actually just to prevent cloning of the function. Its side-effect is, however, that all the functions it uses are not inlined, including, for example the function &lt;a class=&quot;dhtgD&quot; href=&quot;https://www.google.com/url?q=https%3A%2F%2Felixir.bootlin.com%2Flinux%2Fv4.17%2Fsource%2Farch%2Fx86%2Fkvm%2Fvmx.c%23L706&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNGaRNfPy3YknWJurXy2GII4gz3pxw&quot; target=&quot;_blank&quot;&gt;to_vmx()&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;s1gOZb&quot; readability=&quot;17&quot;&gt;
&lt;pre id=&quot;h.p_ID_276&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   0x0000000000000150 &amp;lt;+0&amp;gt;: push   %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_278&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   0x0000000000000151 &amp;lt;+1&amp;gt;: &lt;strong&gt;mov    %rdi,%rax&lt;/strong&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_280&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   0x0000000000000154 &amp;lt;+4&amp;gt;: mov    %rsp,%rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_282&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   0x0000000000000157 &amp;lt;+7&amp;gt;: pop    %rbp&lt;/code&gt;
&lt;/pre&gt;
&lt;pre id=&quot;h.p_ID_284&quot; class=&quot;zfr3Q FVr0A&quot;&gt;
&lt;code&gt;   0x0000000000000158 &amp;lt;+8&amp;gt;: retq   &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p id=&quot;h.p_ID_286&quot; class=&quot;zfr3Q&quot;&gt;This function just returns as an output the same argument it got as an input. Not inlining functions that are called by vmx_vcpu_run() induces significant overhead, which can be as high as 10% for a VM-exit.&lt;/p&gt;
&lt;p id=&quot;h.p_ID_288&quot; class=&quot;zfr3Q&quot;&gt;Finally, the &lt;em&gt;cold&lt;/em&gt; function attribute causes inlining to be done less aggressively. This attribute informs the compiler that a function is unlikely to be executed, and the compiler, among other things, optimizes these functions for size rather than speed, which can result in very non-aggressive inlining decisions. All the __init and __exit functions, which are used during the kernel and modules (de)initializations are marked as &lt;em&gt;cold&lt;/em&gt;. It is questionable whether this is the desired behavior.&lt;/p&gt;
&lt;h2 id=&quot;h.p_ID_290&quot; class=&quot;zfr3Q JYVBee&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p id=&quot;h.p_ID_404&quot; class=&quot;zfr3Q&quot;&gt;Despite the fact that C appears to give us great control over the generated code, it is not always the case. Compiler extensions may be needed to give programmers greater control. Tools that analyze whether the generated binary is efficient, considering the source code, may be needed. In the meanwhile, there is no alternative to manual inspection of the generated binary code.&lt;/p&gt;
&lt;p id=&quot;h.p_PESZt5sOS4gE&quot; class=&quot;zfr3Q&quot;&gt;Thanks to Linus Torvalds, Hans Peter Anvin, Masahiro Yamada, Josh Poimboeuf, Peter Zijistra, Kees Cook, Ingo Molnar and others for their assistance in the analysis and in solving this problem.&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 17:47:24 +0000</pubDate>
<dc:creator>tbodt</dc:creator>
<og:type>website</og:type>
<og:title>Nadav Amit - How new-lines affect Linux performance</og:title>
<og:url>https://sites.google.com/site/nadavamit/blog/linux-inline</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nadav.amit.zone/blog/linux-inline</dc:identifier>
</item>
<item>
<title>Disappearing videos and disappointed grandmothers</title>
<link>https://rachelbythebay.com/w/2018/10/05/recipes/</link>
<guid isPermaLink="true" >https://rachelbythebay.com/w/2018/10/05/recipes/</guid>
<description>&lt;p&gt;I've been doing some traveling lately, and have been hearing interesting stories from people I don't normally get a chance to talk to. Some of them are from other parts of the country or the world, and are from companies I've never heard of.&lt;/p&gt;
&lt;p&gt;Here's another story about broken things with some of the details changed &lt;em&gt;just&lt;/em&gt; a little. If it sounds familiar, it's probably because your company also did it at some point.&lt;/p&gt;
&lt;p&gt;As the story goes, there's this web outfit which was designed around posting stories and videos about cooking stuff. People would get on there and would do all kinds of things to share with their families and friends. Grandmothers would capture their recipes for the kids to have. Kids would capture them trying the recipes. Grandmothers would come back and watch the kids again and again.&lt;/p&gt;
&lt;p&gt;They had a vibrant community. Lots of people would post lots of things to it. This thing had been going on for a while.&lt;/p&gt;
&lt;p&gt;As the company grew, someone decided it would be a &quot;great idea&quot; if they copied Snapchat, Instagram, and everyone else and added &quot;moments&quot; to their app. (This was a couple of years ago, back when it seemed like damn near everyone was putting those ridiculous circle-with-a-profile-pic-in-it &quot;moment&quot; things on their apps.)&lt;/p&gt;
&lt;p&gt;They figured they needed to &quot;seed&quot; this new system of theirs somehow, since after all, not all of their users are 14 and therefore aren't necessarily going to want to use it. They'll have to force their hand somehow. But how?&lt;/p&gt;
&lt;p&gt;Their &quot;brilliant idea&quot; was to make it so that every post would &lt;em&gt;also&lt;/em&gt; create a &quot;shadow moment&quot;. That is, while the moments thing still hadn't launched yet, they'd have stuff feeding into it to get it all figured out. Then, when it launched, they'd just start displaying them to people, and they'd capture all of the audience... right?&lt;/p&gt;
&lt;p&gt;So it launched. It hung around for a bit, and, eh, it didn't do too well. It turns out that just copying the behaviors of 14 year olds won't make you popular with &lt;em&gt;actual&lt;/em&gt; 14 year olds.&lt;/p&gt;
&lt;p&gt;Obviously they tried and tried to make it work, but it didn't work. There aren't enough nails in the world to keep this jello on the wall, so they finally decided to shut it down, and deleted all of the moments in the database. They wanted it gone like a bad memory.&lt;/p&gt;
&lt;p&gt;That's when things got interesting, but nobody realized why.&lt;/p&gt;
&lt;p&gt;Meanwhile, back on the main site, people's cooking videos have been disappearing. One here, one there, then a bunch here, and a bunch more over there.&lt;/p&gt;
&lt;p&gt;Tons of people are complaining. Nobody is taking them seriously.&lt;/p&gt;
&lt;p&gt;Even inside the company, the internal tech support is essentially gaslighting the employees who report this problem, by saying things like &quot;it never existed&quot;, even when the employee swears up and down that the post DID exist and that grandma used to watch it every single week. Their whole family had seen it and now it's gone, and they're being told it never existed?&lt;/p&gt;
&lt;p&gt;Finally, someone who really gave a damn got their hands dirty and dug in and started unraveling what had happened, and that's when they found their smoking gun.&lt;/p&gt;
&lt;p&gt;It turned out that back when the &quot;moments&quot; people had set up their &quot;fork&quot; of the data, they didn't want to pay for storing all of those recipe and cooking videos twice. Why? Well, because &quot;videos are big and space is expensive and we are cheap&quot;. Something like that.&lt;/p&gt;
&lt;p&gt;So, instead of actually holding onto the video again, they just added a pointer to the same video content that the posts were using. Easy, right?&lt;/p&gt;
&lt;p&gt;Trouble is, when the product bombed, they just deleted all of these &quot;moments&quot;, and &lt;em&gt;that&lt;/em&gt; cleared out all of the associated media... including the videos which were rightfully part of the actual posts. Yep. That happened.&lt;/p&gt;
&lt;p&gt;Amazingly, nobody figured this out for months, or long after any chance of recovering the original data had passed. All of that stuff is gone forever and it's never coming back.&lt;/p&gt;
&lt;p&gt;Somehow, nobody's heard about this, and life goes on.&lt;/p&gt;
&lt;p&gt;Absolutely amazing.&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 17:40:09 +0000</pubDate>
<dc:creator>pjungwir</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://rachelbythebay.com/w/2018/10/05/recipes/</dc:identifier>
</item>
<item>
<title>Shutting Down Google+ for Consumers</title>
<link>https://blog.google/technology/safety-security/project-strobe/</link>
<guid isPermaLink="true" >https://blog.google/technology/safety-security/project-strobe/</guid>
<description>&lt;p&gt;Many third-party apps, services and websites build on top of our various services to improve everyone’s phones, working life, and online experience. We strongly support this active ecosystem. But increasingly, its success depends on users knowing that their data is secure, and on developers having clear rules of the road.&lt;/p&gt;
&lt;p&gt;Over the years we’ve continually &lt;a href=&quot;https://developers.googleblog.com/2017/05/updating-developer-identity-guidelines.html&quot;&gt;strengthened&lt;/a&gt; &lt;a href=&quot;https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html&quot;&gt;our&lt;/a&gt; &lt;a href=&quot;https://myaccount.google.com/security-checkup&quot;&gt;controls and policies&lt;/a&gt; in response to regular internal reviews, user feedback and evolving expectations about data privacy and security.&lt;/p&gt;
&lt;p&gt;At the beginning of this year, we started an effort called Project Strobe—a root-and-branch review of third-party developer access to Google account and Android device data and of our philosophy around apps’ data access. This project looked at the operation of our privacy controls, platforms where users were not engaging with our APIs because of concerns around data privacy, areas where developers may have been granted overly broad access, and other areas in which our policies should be tightened.  &lt;/p&gt;
&lt;p&gt;We’re announcing the first four findings and actions from this review today.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finding 1: There are significant challenges in creating and maintaining a successful Google+ product that meets consumers’ expectations.&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action 1: We are shutting down Google+ for consumers.&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Over the years we’ve received feedback that people want to better understand how to control the data they choose to share with apps on Google+. So as part of Project Strobe, one of our first priorities was to closely review all the APIs associated with Google+.  &lt;/p&gt;
&lt;p&gt;This review crystallized what we’ve known for a while: that while our engineering teams have put a lot of effort and dedication into building Google+ over the years, it has not achieved broad consumer or developer adoption, and has seen limited user interaction with apps. The consumer version of Google+ currently has low usage and engagement: 90 percent of Google+ user sessions are less than five seconds.&lt;/p&gt;
&lt;p&gt;Our review showed that our Google+ APIs, and the associated controls for consumers, are challenging to develop and maintain. Underlining this, as part of our Project Strobe audit, we discovered a bug in one of the Google+ People APIs:&lt;/p&gt;
&lt;ul readability=&quot;16.732784431138&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Users can grant access to their Profile data, and the public Profile information of their friends, to Google+ apps, via the API.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The bug meant that apps also had access to Profile fields that were shared with the user, but not marked as public.  &lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9.4017094017094&quot;&gt;
&lt;p&gt;This data is limited to static, optional Google+ Profile fields including name, email address, occupation, gender and age. (See the full list &lt;a href=&quot;https://developers.google.com/+/web/api/rest/latest/people&quot;&gt;on our developer site&lt;/a&gt;.) It &lt;strong&gt;does not&lt;/strong&gt; include &lt;strong&gt;any other data&lt;/strong&gt; you may have posted or connected to Google+ or any other service, like Google+ posts, messages, Google account data, phone numbers or G Suite content.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;We discovered and immediately patched this bug in March 2018. We believe it occurred after launch as a result of the API’s interaction with a subsequent Google+ code change.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;We made Google+ with privacy in mind and therefore keep this API’s log data for only two weeks. That means we cannot confirm which users were impacted by this bug. However, we ran a detailed analysis over the two weeks prior to patching the bug, and from that analysis, the Profiles of up to 500,000 Google+ accounts were potentially affected. Our analysis showed that up to 438 applications may have used this API.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;We found &lt;strong&gt;no evidence&lt;/strong&gt; that any developer was aware of this bug, or abusing the API, and we found &lt;strong&gt;no evidence&lt;/strong&gt; that any Profile data was misused.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Every year, we send millions of notifications to users about privacy and security bugs and issues. Whenever user data may have been affected, we go beyond our legal requirements and apply several criteria focused on our users in determining whether to provide notice.&lt;/p&gt;
&lt;p&gt;Our Privacy &amp;amp; Data Protection Office reviewed this issue, looking at the type of data involved, whether we could accurately identify the users to inform, whether there was any evidence of misuse, and whether there were any actions a developer or user could take in response. None of these thresholds were met in this instance.&lt;/p&gt;
&lt;p&gt;The review did highlight the significant challenges in creating and maintaining a successful Google+ that meets consumers’ expectations. Given these challenges and the very low usage of the consumer version of Google+, we decided to sunset the consumer version of Google+.&lt;/p&gt;
&lt;p&gt;To give people a full opportunity to transition, we will implement this wind-down over a 10-month period, slated for completion by the end of next August. Over the coming months, we will provide consumers with additional information, including ways they can download and migrate their data.&lt;/p&gt;
&lt;p&gt;At the same time, we have many enterprise customers who are finding great value in using Google+ within their companies. Our review showed that Google+ is better suited as an enterprise product where co-workers can engage in internal discussions on a secure corporate social network. Enterprise customers can set common access rules, and use central controls, for their entire organization. We’ve decided to focus on our enterprise efforts and will be launching new features purpose-built for businesses. We will share more information in the coming days.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finding 2: People want fine-grained controls over the data they share with apps.&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action 2: We are launching more granular Google Account permissions that will show in individual dialog boxes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When an app prompts you for access to your Google account data, we always require that you see what data it has asked for, and you must grant it explicit permission.&lt;/p&gt;
&lt;p&gt;Going forward, consumers will get more fine-grained control over what account data they choose to share with each app. Instead of seeing all requested permissions in a single screen, apps will have to show you each requested permission, one at a time, within its own dialog box.  For example, if a developer requests access to both calendar entries and Drive documents, you will be able to choose to share one but not the other. Developers can read more on the &lt;a href=&quot;https://developers.googleblog.com/2018/10/more-granular-google-account.html&quot;&gt;Google Developer Blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is what the process looks like today when an app requests access to any data in your consumer Google account (you've always been able to choose whether to grant that permission request):&lt;/p&gt;
</description>
<pubDate>Mon, 08 Oct 2018 17:14:39 +0000</pubDate>
<dc:creator>Nemant</dc:creator>
<og:type>article</og:type>
<og:title>Project Strobe: Protecting your data, improving our third-party APIs, and sunsetting consumer Google+</og:title>
<og:description>Findings and actions from Project Strobe—a root-and-branch review of third-party developer access to Google account and Android device data and of our philosophy around apps’ data access.</og:description>
<og:image>https://www.blog.google/static/blogv2/images/google-200x200.7714256da16f.png</og:image>
<og:url>https://www.blog.google/technology/safety-security/project-strobe/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.google/technology/safety-security/project-strobe/</dc:identifier>
</item>
<item>
<title>Google Exposed User Data, Feared Repercussions of Disclosing to Public</title>
<link>https://www.wsj.com/articles/google-exposed-user-data-feared-repercussions-of-disclosing-to-public-1539017194</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/google-exposed-user-data-feared-repercussions-of-disclosing-to-public-1539017194</guid>
<description>&lt;div class=&quot;is-lead-inset&quot;&gt;
      &lt;div data-layout=&quot;header&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetMediaIllustration&amp;#10;          header&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetMediaIllustration&amp;#10;          article__inset--lead&amp;#10;  &quot;&gt;
      
      
          
    &lt;div class=&quot;media-object-image enlarge-image renoImageFormat- img-header article__inset__image&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;
    
      
      &lt;div data-mobile-ratio=&quot;66.66666666666666%&quot; data-layout-ratio=&quot;66.66666666666666%&quot; data-subtype=&quot;photo&quot; class=&quot;image-container  responsive-media article__inset__image__image&quot;&gt;
    
        &lt;img srcset=&quot;https://images.wsj.net/im-29785?width=140&amp;amp;aspect_ratio=1.5 140w,&amp;#10;https://images.wsj.net/im-29785?width=540&amp;amp;aspect_ratio=1.5 540w,&amp;#10;https://images.wsj.net/im-29785?width=620&amp;amp;aspect_ratio=1.5 620w,&amp;#10;https://images.wsj.net/im-29785?width=700&amp;amp;aspect_ratio=1.5 700w,&amp;#10;https://images.wsj.net/im-29785?width=860&amp;amp;aspect_ratio=1.5 860w,&amp;#10;https://images.wsj.net/im-29785?width=1260&amp;amp;aspect_ratio=1.5 1260w&quot; sizes=&quot;(max-width: 140px) 100px,&amp;#10;(max-width: 540px) 500px,&amp;#10;(max-width: 620px) 580px,&amp;#10;(max-width: 700px) 660px,&amp;#10;(max-width: 860px) 820px,&amp;#10;1260px&quot; src=&quot;https://images.wsj.net/im-29785?width=620&amp;amp;aspect_ratio=1.5&quot; data-enlarge=&quot;https://images.wsj.net/im-29785?width=1260&amp;amp;aspect_ratio=1.5&quot; alt=&quot;Google Chief Executive Sundar Pichai was briefed on a plan not to notify users of a software glitch that gave outside developers potential access to private data.&quot; title=&quot;Google Chief Executive Sundar Pichai was briefed on a plan not to notify users of...&quot;/&gt;&lt;/div&gt;
    
      &lt;div class=&quot;wsj-article-caption article__inset__image__caption&quot; itemprop=&quot;caption&quot;&gt;
          &lt;span class=&quot;wsj-article-caption-content&quot;&gt;Google Chief Executive Sundar Pichai was briefed on a plan not to notify users of a software glitch that gave outside developers potential access to private data.&lt;/span&gt;
          &lt;span class=&quot;wsj-article-credit&quot; itemprop=&quot;creator&quot;&gt;
            &lt;span class=&quot;wsj-article-credit-tag&quot;&gt;
              Photo: 
            &lt;/span&gt;
        David Paul Morris/Bloomberg News
          &lt;/span&gt;
  &lt;/div&gt;
    &lt;/div&gt;

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      &lt;/div&gt; 
    &lt;/div&gt;

  &lt;div class=&quot;clearfix byline-wrap&quot;&gt;


    

        
    &lt;div class=&quot;byline article__byline&quot;&gt;
    
    
        &lt;span&gt;By&lt;/span&gt;
    
              &lt;div class=&quot;author mobile-scrim hasMenu&quot; data-scrim=&quot;{&amp;quot;type&amp;quot;:&amp;quot;author&amp;quot;,&amp;quot;header&amp;quot;:&amp;quot;Douglas MacMillan&amp;quot;,&amp;quot;subhead&amp;quot;:&amp;quot;The Wall Street Journal&amp;quot;,&amp;quot;list&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;bio&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://www.wsj.com/news/author/7902&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;Biography&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;twitter&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://twitter.com/dmac1&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;@dmac1&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;email&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;mailto:douglas.macmillan@wsj.com&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;douglas.macmillan@wsj.com&amp;quot;}]}&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot; itemtype=&quot;http://schema.org/Person&quot;&gt;
                  &lt;span class=&quot;name&quot; itemprop=&quot;name&quot;&gt;Douglas MacMillan&lt;/span&gt; and 
                  &lt;/div&gt;

              &lt;div class=&quot;author mobile-scrim hasMenu&quot; data-scrim=&quot;{&amp;quot;type&amp;quot;:&amp;quot;author&amp;quot;,&amp;quot;header&amp;quot;:&amp;quot;Robert McMillan&amp;quot;,&amp;quot;subhead&amp;quot;:&amp;quot;The Wall Street Journal&amp;quot;,&amp;quot;list&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;bio&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://www.wsj.com/news/author/8244&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;Biography&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;twitter&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://twitter.com/bobmcmillan&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;@bobmcmillan&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;facebook&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;http://facebook.com/therealrobertmcmillan&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;therealrobertmcmillan&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;email&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;mailto:robert.mcmillan@wsj.com&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;robert.mcmillan@wsj.com&amp;quot;}]}&quot; itemscope=&quot;&quot; itemprop=&quot;author&quot; itemtype=&quot;http://schema.org/Person&quot;&gt;
                  &lt;span class=&quot;name&quot; itemprop=&quot;name&quot;&gt;Robert McMillan&lt;/span&gt;
                  &lt;/div&gt;

    &lt;/div&gt;
    
    &lt;time class=&quot;timestamp article__timestamp flexbox__flex--1&quot;&gt;
      Updated Oct. 8, 2018 2:45 p.m. ET
    &lt;/time&gt;&lt;/div&gt;

  

  &lt;div class=&quot;article-content &quot;&gt;

      &lt;p&gt;Google exposed the private data of hundreds of thousands of users of the Google+ social network and then opted not to disclose the issue this past spring, in part because of fears that doing so would draw regulatory scrutiny and cause reputational damage, according to people briefed on the incident and documents reviewed by The Wall Street Journal.&lt;/p&gt;




      &lt;p&gt;As part of its response to the incident, the






            &lt;a href=&quot;http://quotes.wsj.com/GOOGL&quot;&gt;Alphabet&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.&lt;/span&gt;

      &lt;a href=&quot;http://quotes.wsj.com/GOOGL?mod=chiclets&quot; class=&quot;media-object-chiclet up &quot; data-channel=&quot;/quotes/zigman/59539269/composite&quot; data-symbol=&quot;GOOGL&quot; data-changepercent=&quot;0.24&quot;&gt;
        GOOGL &lt;span&gt;0.24%&lt;/span&gt;
      &lt;/a&gt;

      unit on Monday announced a sweeping set of data privacy measures that include permanently shutting down all consumer functionality of Google+. The move effectively puts the final nail in the coffin of a product that was launched in 2011 to challenge






            &lt;a href=&quot;http://quotes.wsj.com/FB&quot;&gt;Facebook&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.&lt;/span&gt;

      &lt;a href=&quot;http://quotes.wsj.com/FB?mod=chiclets&quot; class=&quot;media-object-chiclet up &quot; data-channel=&quot;/quotes/zigman/9962609/composite&quot; data-symbol=&quot;FB&quot; data-changepercent=&quot;1.48&quot;&gt;
        FB &lt;span&gt;1.48%&lt;/span&gt;
      &lt;/a&gt;

      and is widely seen as one of Google’s biggest failures.&lt;/p&gt;




      




      &lt;div class=&quot;paywall&quot;&gt; &lt;p&gt;A software glitch in the social site gave outside developers potential access to private Google+ profile data between 2015 and March 2018, when internal investigators discovered and fixed the issue, according to the documents and people briefed on the incident. A memo reviewed by the Journal prepared by Google’s legal and policy staff and shared with senior executives warned that disclosing the incident would likely trigger “immediate regulatory interest” and invite comparisons to &lt;a href=&quot;https://www.wsj.com/articles/mark-zuckerberg-to-testify-before-house-committee-on-april-11-1522844990?mod=article_inline&quot; class=&quot;icon none&quot;&gt;Facebook’s leak of user information&lt;/a&gt; to data firm Cambridge Analytica.&lt;/p&gt;




      &lt;p&gt;Chief Executive Sundar Pichai was briefed on the plan not to notify users after an internal committee had reached that decision, the people said.&lt;/p&gt;




      &lt;p&gt;The closure of Google+ is part of a broader review of privacy practices by Google that has determined the company needs tighter controls on several major products, the people said. In its announcement Monday, the company said it is curtailing the &lt;a href=&quot;https://www.wsj.com/articles/lawmakers-press-google-on-gmail-privacy-1531263670?mod=article_inline&quot; class=&quot;icon none&quot;&gt;access it gives outside developers&lt;/a&gt; to user data on Android smartphones and Gmail.&lt;/p&gt;






      &lt;div data-layout=&quot;inline&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetDynamic&amp;#10;          inline&amp;#10;    scope-web|mobileapps&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetDynamic&amp;#10;            article__inset--inline&amp;#10;  &quot;&gt;
      
      
      
      
      
      
      
      
      
      
      
      
        &lt;div class=&quot;dynamic-inset-container article__inset__dynamic&quot;&gt;
              &lt;style type=&quot;text/css&quot; media=&quot;screen,print&quot;&gt;&lt;![CDATA[  /* 4u Graphics Standalone */  @media all and (max-width: 585px) {    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u-wrap,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u-margin,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u-bleed,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u-header,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-4u-inline {      display: block !important;      max-width: 300px;    }    body.template-standalone:not(.nc-exp) .djai2html-tagline {      float: left;    }    body.template-standalone:not(.nc-exp) .djai2html-foot,    body.template-standalone:not(.nc-exp) .djai2html-headline,    body.template-standalone:not(.nc-exp) .djai2html-leadin {      max-width: 300px;      margin-left: auto;      margin-right: auto;    }  }  /* 8u Graphics Standalone */  @media all and (min-width: 666px) and (max-width: 745px) {    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u-wrap,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u-margin,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u-bleed,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u-header,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-8u-inline {      max-width: 620px;      display: block !important;    }  }  /* 12u Graphics Standalone */  @media all and (min-width: 586px) and (max-width: 665px){    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u-wrap,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u-margin,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u-bleed,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u-header,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-12u-inline {      max-width: 540px;      display: block !important;    }  }  /* 16u Graphics Standalone */  @media all and (min-width: 746px) {    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u-wrap,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u-margin,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u-bleed,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u-header,    body.template-standalone:not(.nc-exp) .wsj-ai2html-1539033236407show-16u-inline {      max-width: 700px;      display: block !important;    }  }  body.at4units .wsj-ai2html-1539033236407show-4u,  body.at4units .wrap .wsj-ai2html-1539033236407show-4u-wrap,  body.at4units .margin .wsj-ai2html-1539033236407show-4u-margin,  body.at4units .bleed .wsj-ai2html-1539033236407show-4u-bleed,  body.at4units .header .wsj-ai2html-1539033236407show-4u-header,  body.at4units .inline .wsj-ai2html-1539033236407show-4u-inline {    max-width: 300px;  }  .wrap .wsj-ai2html-1539033236407show-8u-wrap,  .wrap .wsj-ai2html-1539033236407show-12u-wrap,  .wrap .wsj-ai2html-1539033236407show-16u-wrap,  .margin .wsj-ai2html-1539033236407show-8u-margin,  .margin .wsj-ai2html-1539033236407show-12u-margin,  .margin .wsj-ai2html-1539033236407show-16u-margin {    max-width: 300px;  }  body.at4units .wsj-ai2html-1539033236407show-4u,  body.at8units .wsj-ai2html-1539033236407show-8u,  body.at12units .wsj-ai2html-1539033236407show-12u,  body.at16units .wsj-ai2html-1539033236407show-16u,  body.at4units .bleed .wsj-ai2html-1539033236407show-4u-bleed,  body.at8units .bleed .wsj-ai2html-1539033236407show-8u-bleed,  body.at12units .bleed .wsj-ai2html-1539033236407show-12u-bleed,  body.at16units .bleed .wsj-ai2html-1539033236407show-16u-bleed,  body.at4units .header .wsj-ai2html-1539033236407show-4u-header,  body.at8units .header .wsj-ai2html-1539033236407show-8u-header,  body.at12units .header .wsj-ai2html-1539033236407show-12u-header,  body.at16units .header .wsj-ai2html-1539033236407show-16u-header,  body.at4units .inline .wsj-ai2html-1539033236407show-4u-inline,  body.at8units .inline .wsj-ai2html-1539033236407show-8u-inline,  body.at12units .inline .wsj-ai2html-1539033236407show-12u-inline,  body.at16units .inline .wsj-ai2html-1539033236407show-16u-inline,  body.at4units .offset .wsj-ai2html-1539033236407show-4u-offset,  body.at8units .offset .wsj-ai2html-1539033236407show-8u-offset,  body.at12units .offset .wsj-ai2html-1539033236407show-12u-offset,  body.at16units .offset .wsj-ai2html-1539033236407show-16u-offset,  body.at4units .wrap .wsj-ai2html-1539033236407show-4u,  body.at4units .wrap .wsj-ai2html-1539033236407show-4u-wrap,  body.at8units .wrap .wsj-ai2html-1539033236407show-8u-wrap,  body.at12units .wrap .wsj-ai2html-1539033236407show-12u-wrap,  body.at16units .wrap .wsj-ai2html-1539033236407show-16u-wrap,  body.at4units .margin .wsj-ai2html-1539033236407show-4u,  body.at4units .margin .wsj-ai2html-1539033236407show-4u-margin,  body.at8units .margin .wsj-ai2html-1539033236407show-8u-margin,  body.at12units .margin .wsj-ai2html-1539033236407show-12u-margin,  body.at16units .margin .wsj-ai2html-1539033236407show-16u-margin {    display: block !important;  }  .at12units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .inline .wsj-ai2html-1539033236407show-12u,  .at12units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .offset .wsj-ai2html-1539033236407show-12u {    display: none !important;  }  .at12units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .inline .wsj-ai2html-1539033236407show-16u,  .at12units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .offset .wsj-ai2html-1539033236407show-16u {    display: block !important;  }  .at8units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .inline .ai2html_export,  .at8units #wsj-article-wrap[data-articleCentered=&quot;true&quot;] .offset .ai2html_export {    margin: 0 auto;    max-width: 620px;  }]]&gt;&lt;/style&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;//asset.wsj.net/wsjnewsgraphics/ai2html/ai2html.min.css&quot;/&gt;&lt;div class=&quot;ai2html_export&quot; data-version=&quot;0.9.17&quot; data-date=&quot;10/08/2018&quot; data-uuid=&quot;9ce6101f-8349-42c1-80bd-34eae5985ce1&quot;&gt;    &lt;h3 class=&quot;djai2html-headline wsj-ai2html-1539033236407show-8u wsj-ai2html-1539033236407show-12u wsj-ai2html-1539033236407show-16u wsj-ai2html-1539033236407show-4u&quot;&gt;Social Bug&lt;/h3&gt;      &lt;h4 class=&quot;djai2html-leadin wsj-ai2html-1539033236407show-8u wsj-ai2html-1539033236407show-12u wsj-ai2html-1539033236407show-16u wsj-ai2html-1539033236407show-4u&quot;&gt;How a software glitch allowed app developers to potentially access Google+ user data&lt;/h4&gt;    &lt;div class=&quot;ai2html-boards&quot;&gt;      &lt;div id=&quot;wsj-ai2html-1539033236407&quot; class=&quot;wsj-ai2html-1539033236407artBoard wsj-ai2html-1539033236407show-16u ai2html-artboard&quot;&gt;      &lt;style type=&quot;text/css&quot; media=&quot;screen,print&quot;&gt;&lt;![CDATA[        #wsj-ai2html-1539033236407 {          position: relative;          overflow: hidden;                      width: px;                    display: none;        }        .wsj-ai2html-1539033236407aiAbs {          position: absolute;        }        .wsj-ai2html-1539033236407aiImg {          display: block;          width: 100% !important;        }        #wsj-ai2html-1539033236407 p {          font-family: Arial,Helvetica,sans-serif;          font-size: 13px;          line-height: 18px;          margin: 0;        }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-0 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-1 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-2 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 35px;                        font-weight: 500;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-3 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 5px;            line-height: 18px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-4 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 18px;            line-height: 59px;                        font-weight: 700;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-5 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 34px;                        font-weight: 700;                                                                                                                                                color: #000000;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-6 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 12px;            line-height: 41px;                        font-weight: 500;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-7 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 14px;            line-height: 46px;                        font-weight: 700;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-4-8 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 7px;            line-height: 22px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }              ]]&gt;&lt;/style&gt;&lt;div id=&quot;wsj-ai2html-1539033236407-graphic&quot;&gt;                                        &lt;img id=&quot;wsj-ai2html-1539033236407ai4-0&quot; class=&quot;wsj-ai2html-1539033236407aiImg bg-image&quot; src=&quot;https://si.wsj.net/public/resources/images/B3-BZ575_backgr_16U_20181008171419.jpg&quot;/&gt;                                &lt;div id=&quot;wsj-ai2html-1539033236407ai4-3&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-4-1&quot;&gt;User A signs up to Google+ and fills out profile fields: name, employer, job title, gender, birth date and relationship status. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai4-4&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-4-1&quot;&gt;User A goes into privacy settings to make profile data viewable only to certain friends on Google+, including User B. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai4-12&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-4-1&quot;&gt;User B signs up for an app that asks the user to log in using Google+ credentials. The user gives the app permission to access profile information. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai4-13&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-4-1&quot;&gt;The app developer collects data on User B. Because of the software glitch, the developer can also collect User A’s private profile data. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai4-20&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-4-1&quot;&gt;Google discovered and fixed the glitch in March 2018. It found no evidence of misuse of data.&lt;/p&gt;                  &lt;/div&gt;                  &lt;/div&gt;  &lt;/div&gt;      &lt;div id=&quot;wsj-ai2html-1539033236407&quot; class=&quot;wsj-ai2html-1539033236407artBoard wsj-ai2html-1539033236407show-12u ai2html-artboard&quot;&gt;      &lt;style type=&quot;text/css&quot; media=&quot;screen,print&quot;&gt;&lt;![CDATA[        #wsj-ai2html-1539033236407 {          position: relative;          overflow: hidden;                      width: px;                    display: none;        }        .wsj-ai2html-1539033236407aiAbs {          position: absolute;        }        .wsj-ai2html-1539033236407aiImg {          display: block;          width: 100% !important;        }        #wsj-ai2html-1539033236407 p {          font-family: Arial,Helvetica,sans-serif;          font-size: 13px;          line-height: 18px;          margin: 0;        }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-0 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-1 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-2 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 9px;            line-height: 31px;                        font-weight: 500;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-3 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 5px;            line-height: 16px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-4 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 16px;            line-height: 52px;                        font-weight: 700;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-5 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 9px;            line-height: 30px;                        font-weight: 700;                                                                                                                                                color: #000000;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-6 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 11px;            line-height: 36px;                        font-weight: 500;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-7 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 12px;            line-height: 41px;                        font-weight: 700;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-3-8 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 6px;            line-height: 20px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }              ]]&gt;&lt;/style&gt;&lt;div id=&quot;wsj-ai2html-1539033236407-graphic&quot;&gt;                                        &lt;img id=&quot;wsj-ai2html-1539033236407ai3-0&quot; class=&quot;wsj-ai2html-1539033236407aiImg bg-image&quot; src=&quot;https://si.wsj.net/public/resources/images/B3-BZ575_backgr_12U_20181008171419.jpg&quot;/&gt;                                &lt;div id=&quot;wsj-ai2html-1539033236407ai3-3&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-3-1&quot;&gt;User A goes into privacy settings to make profile data viewable only to certain friends on Google+, including User B. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai3-4&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-3-1&quot;&gt;User A signs up to Google+ and fills out profile fields: name, employer, job title, gender, birth date and relationship status. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai3-12&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-3-1&quot;&gt;User B signs up for an app that asks the user to log in using Google+ credentials. The user gives the app permission to access profile information. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai3-13&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-3-1&quot;&gt;The app developer collects data on User B. Because of the software glitch, the developer can also collect User A’s private profile data. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai3-20&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-3-1&quot;&gt;Google discovered and fixed the glitch in March 2018. It found no evidence of misuse of data.&lt;/p&gt;                  &lt;/div&gt;                  &lt;/div&gt;  &lt;/div&gt;      &lt;div id=&quot;wsj-ai2html-1539033236407&quot; class=&quot;wsj-ai2html-1539033236407artBoard wsj-ai2html-1539033236407show-8u ai2html-artboard&quot;&gt;      &lt;style type=&quot;text/css&quot; media=&quot;screen,print&quot;&gt;&lt;![CDATA[        #wsj-ai2html-1539033236407 {          position: relative;          overflow: hidden;                      width: px;                    display: none;        }        .wsj-ai2html-1539033236407aiAbs {          position: absolute;        }        .wsj-ai2html-1539033236407aiImg {          display: block;          width: 100% !important;        }        #wsj-ai2html-1539033236407 p {          font-family: Arial,Helvetica,sans-serif;          font-size: 13px;          line-height: 18px;          margin: 0;        }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-0 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-1 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-2 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 35px;                        font-weight: 500;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-3 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 5px;            line-height: 18px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-4 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 18px;            line-height: 59px;                        font-weight: 700;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-5 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 34px;                        font-weight: 700;                                                                                                                                                color: #000000;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-6 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 12px;            line-height: 41px;                        font-weight: 500;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-7 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 14px;            line-height: 46px;                        font-weight: 700;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-2-8 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 7px;            line-height: 22px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }              ]]&gt;&lt;/style&gt;&lt;div id=&quot;wsj-ai2html-1539033236407-graphic&quot;&gt;                                        &lt;img id=&quot;wsj-ai2html-1539033236407ai2-0&quot; class=&quot;wsj-ai2html-1539033236407aiImg bg-image&quot; src=&quot;https://si.wsj.net/public/resources/images/B3-BZ575_backgr_8U_20181008171419.jpg&quot;/&gt;                                &lt;div id=&quot;wsj-ai2html-1539033236407ai2-3&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-2-1&quot;&gt;User A goes into privacy settings to make profile data viewable only to certain friends on Google+, including User B. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai2-4&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-2-1&quot;&gt;User A signs up to Google+ and fills out profile fields: name, employer, job title, gender, birth date and relationship status. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai2-12&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-2-1&quot;&gt;User B signs up for an app that asks the user to log in using Google+ credentials. The user gives the app permission to access profile information. &lt;/p&gt;                  &lt;/div&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai2-13&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-2-1&quot;&gt;The app developer collects data on User B. Because of the software glitch, the developer can also collect User A’s private profile data. &lt;/p&gt;                  &lt;/div&gt;                                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai2-20&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-2-1&quot;&gt;Google discovered and fixed the glitch in March 2018. It found no evidence of misuse of data.&lt;/p&gt;                  &lt;/div&gt;                  &lt;/div&gt;  &lt;/div&gt;      &lt;div id=&quot;wsj-ai2html-1539033236407&quot; class=&quot;wsj-ai2html-1539033236407artBoard wsj-ai2html-1539033236407show-4u ai2html-artboard&quot;&gt;      &lt;style type=&quot;text/css&quot; media=&quot;screen,print&quot;&gt;&lt;![CDATA[        #wsj-ai2html-1539033236407 {          position: relative;          overflow: hidden;                      width: px;                    display: none;        }        .wsj-ai2html-1539033236407aiAbs {          position: absolute;        }        .wsj-ai2html-1539033236407aiImg {          display: block;          width: 100% !important;        }        #wsj-ai2html-1539033236407 p {          font-family: Arial,Helvetica,sans-serif;          font-size: 13px;          line-height: 18px;          margin: 0;        }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-0 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-1 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 15px;            line-height: 20px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-2 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 35px;                        font-weight: 500;                                                                                                                                                color: #e20613;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-3 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 5px;            line-height: 18px;                        font-weight: 300;                                                                                                                                                color: #323232;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-4 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 18px;            line-height: 59px;                        font-weight: 700;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-5 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 10px;            line-height: 34px;                        font-weight: 700;                                                                                                                                                color: #000000;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-6 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 12px;            line-height: 41px;                        font-weight: 500;                                                                                                                                                color: #0069b4;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-7 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 7px;            line-height: 22px;                        font-weight: 700;                                                                                                                                                color: #ffffff;            margin-top: 1px;          }                  #wsj-ai2html-1539033236407 .wsj-ai2html-1539033236407-aiPstyle-1-8 {            font-family: Retina,Helvetica,Arial,sans-serif;            font-size: 14px;            line-height: 46px;                        font-weight: 700;                                                                                                                                                color: #e20613;            margin-top: 1px;          }              ]]&gt;&lt;/style&gt;&lt;div id=&quot;wsj-ai2html-1539033236407-graphic&quot;&gt;                                        &lt;img id=&quot;wsj-ai2html-1539033236407ai1-0&quot; class=&quot;wsj-ai2html-1539033236407aiImg bg-image&quot; src=&quot;https://si.wsj.net/public/resources/images/B3-BZ575_backgr_4U_20181008171419.jpg&quot;/&gt;                &lt;div id=&quot;wsj-ai2html-1539033236407ai1-2&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-1-1&quot;&gt;User A signs up to Google+ and fills out profile fields: name, employer, job title, gender, birth date and relationship status. &lt;/p&gt;                  &lt;/div&gt;                                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai1-8&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-1-1&quot;&gt;User A goes into privacy settings to make profile data viewable only to certain friends on Google+, including User B. &lt;/p&gt;                  &lt;/div&gt;                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai1-11&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-1-1&quot;&gt;User B signs up for an app that asks the user to log in using Google+ credentials. The user gives the app permission to access profile information. &lt;/p&gt;                  &lt;/div&gt;                                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai1-16&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-1-1&quot;&gt;The app developer collects data on User B. Because of the software glitch, the developer can also collect User A’s private profile data. &lt;/p&gt;                  &lt;/div&gt;                                                                &lt;div id=&quot;wsj-ai2html-1539033236407ai1-20&quot; class=&quot;wsj-ai2html-1539033236407GFX wsj-ai2html-1539033236407aiAbs &quot;&gt;                    &lt;p class=&quot;wsj-ai2html-1539033236407-aiPstyle-1-1&quot;&gt;Google discovered and fixed the glitch in March 2018. It found no evidence of misuse of data.&lt;/p&gt;                  &lt;/div&gt;                  &lt;/div&gt;  &lt;/div&gt;    &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;

      
      
      
      
      
      
      
      
      
      
      
      
      
      &lt;/div&gt; 




      &lt;p&gt;The episode involving Google+, which hasn’t been previously reported, shows the company’s concerted efforts to avoid public scrutiny of how it handles user information, particularly at a time when regulators and consumer privacy groups are leading a charge to hold tech giants accountable for the vast power they wield over the &lt;a href=&quot;https://www.wsj.com/articles/who-has-more-of-your-personal-data-than-facebook-try-google-1524398401?mod=article_inline&quot; class=&quot;icon none&quot;&gt;personal data&lt;/a&gt; of billions of people.&lt;/p&gt;




      &lt;p&gt;The snafu threatens to give Google a black eye on privacy after public assurances that it was less susceptible to data gaffes like those that have befallen Facebook. It may also complicate Google’s attempts to stave off unfavorable regulation in Washington. Mr. Pichai recently agreed to &lt;a href=&quot;https://www.wsj.com/articles/google-ceo-sundar-pichai-to-meet-with-top-gop-lawmakers-1537829900?mod=article_inline&quot; class=&quot;icon none&quot;&gt;testify before Congress&lt;/a&gt; in the coming weeks.&lt;/p&gt;






      &lt;div data-layout=&quot;wrap&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetMediaVideo&amp;#10;          wrap&amp;#10;    scope-web|mobileapps&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetMediaVideo&amp;#10;            article__inset--wrap&amp;#10;  &quot;&gt;
      
      
      
          &lt;div class=&quot;media-object-video article__inset__video media-object-video--standard&quot;&gt;
      
  
    &lt;div class=&quot;wsj-article-caption article__inset__video__caption&quot;&gt;
            ​Google handles 90% of the world's internet searches, and it increasingly is promoting a single answer for many questions. Even subjective or unanswerable queries sometimes get seemingly definitive answers. Here's how the algorithms are -- and aren't -- working. Video/Photo Illustration: Heather Seidel/The Wall Street Journal
    &lt;/div&gt;
&lt;/div&gt;

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      &lt;/div&gt; 




      &lt;p&gt;“Whenever user data may have been affected, we go beyond our legal requirements and apply several criteria focused on our users in determining whether to provide notice,” a Google spokesman said in a statement.&lt;/p&gt;




      &lt;p&gt;In weighing whether to disclose the incident, the company considered “whether we could accurately identify the users to inform, whether there was any evidence of misuse, and whether there were any actions a developer or user could take in response,” he said. “None of these thresholds were met here.”&lt;/p&gt;




      &lt;p&gt;The internal memo from legal and policy staff says the company has no evidence that any outside developers misused the data but acknowledges it has no way of knowing for sure. The profile data that was exposed included full names, email addresses, birth dates, gender, profile photos, places lived, occupation and relationship status; it didn’t include phone numbers, email messages, timeline posts, direct messages or any other type of communication data, one of the people said.&lt;/p&gt;






       




      &lt;p&gt;Google makes user data available to outside developers through more than 130 different public channels known as application programming interfaces, or APIs. These tools usually require a user’s permission to access any information, but they can be misused by unscrupulous actors posing as app developers to gain access to sensitive personal data.&lt;/p&gt;




      &lt;p&gt;A privacy task force formed inside Google, code named Project Strobe, has in recent months conducted a companywide audit of the company’s APIs, according to the people briefed on the process. The group is made up of more than 100 engineers, product managers and lawyers, the people said.&lt;/p&gt;




      &lt;p&gt;In a &lt;a href=&quot;https://www.blog.google/technology/safety-security/project-strobe/?mod=article_inline&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;blog post on Monday,&lt;/a&gt; Google said it plans to clamp down on the data it provides outside developers through APIs. The company will stop letting most outside developers gain access to SMS messaging data, call log data and some forms of contact data on Android phones, and Gmail will only permit a small number of developers to continue building add-ons for the email service, the company said.&lt;/p&gt;




      &lt;p&gt;Google faced pressure to rein in developer access to Gmail earlier this year, after a Wall Street Journal examination found that developers commonly use free email apps to hook users into giving up access to their inboxes without clearly stating what data they collect. In some cases, employees at these app companies have &lt;a href=&quot;https://www.wsj.com/articles/techs-dirty-secret-the-app-developers-sifting-through-your-gmail-1530544442?mod=article_inline&quot; class=&quot;icon none&quot;&gt;read people’s actual emails&lt;/a&gt; to improve their software algorithms.&lt;/p&gt;




      






      &lt;div data-layout=&quot;wrap&amp;#10;              &quot; data-layout-mobile=&quot;inline&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetNewsletterSignup&amp;#10;          wrap&amp;#10;    scope-web|mobileapps&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetNewsletterSignup&amp;#10;            article__inset--wrap&amp;#10;  &quot;&gt;
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
          &lt;div class=&quot;strap-container&quot;&gt;
      &lt;h4 class=&quot;strap&quot; itemprop=&quot;description&quot;&gt;Newsletter Sign-up&lt;/h4&gt;
    &lt;/div&gt;
    

      
      
      &lt;/div&gt; 




      &lt;p&gt;The coming changes are evidence of a larger rethinking of data privacy at Google, which has in the past placed relatively few restrictions on how external apps access users’ data, provided those users give permission. Restricting access to APIs will hurt some developers who have been helping Google build a universe of useful apps.&lt;/p&gt;




      &lt;p&gt;The Google+ data problem, discovered as part of the Strobe audit, was the result of a flaw in an API Google created to help app developers access an array of profile and contact information about the people who sign up to use their apps, as well as the people they are connected to on Google+. When a user grants a developer permission, any of the data they entered into a Google+ profile can be collected by the developer.&lt;/p&gt;




      &lt;p&gt;In March of this year, Google discovered that Google+ also permitted developers to retrieve the data of some users who never intended to share it publicly, according to the memo and two people briefed on the matter. Because of a bug in the API, developers could collect the profile data of their users’ friends even if that data was explicitly marked nonpublic in Google’s privacy settings, the people said.&lt;/p&gt;




      &lt;p&gt;During a two-week period in late March, Google ran tests to determine the impact of the bug, one of the people said. It found 496,951 users who had shared private profile data with a friend could have had that data accessed by an outside developer, the person said. Some of the individuals whose data was exposed to potential misuse included paying users of G Suite, a set of productivity tools including Google Docs and Drive, the person said. G Suite customers include businesses, schools and governments.&lt;/p&gt;




      &lt;p&gt;Because the company kept a limited set of activity logs, it was unable to determine which users were affected and what types of data may potentially have been improperly collected, the two people briefed on the matter said. The bug existed since 2015, and it is unclear whether a larger number of users may have been affected over that time.&lt;/p&gt;






      &lt;div data-layout=&quot;offset&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetRichText&amp;#10;          offset&amp;#10;    scope-web|mobileapps&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetRichText&amp;#10;            article__inset--offset&amp;#10;  &quot;&gt;
      
      
      
      
      
      
      
      
      
          &lt;div class=&quot;media-object-rich-text&quot;&gt;
    	

&lt;h4&gt;Google Watch&lt;/h4&gt; &lt;p&gt;A history of Google’s privacy controversies&lt;/p&gt; &lt;p&gt; &lt;strong&gt;2004: Gmail&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;Gmail scanned messages and sold ads related to their content, a practice that &lt;a href=&quot;https://www.privacyrights.org/blog/thirty-one-privacy-and-civil-liberties-organizations-urge-google-suspend-gmail?mod=article_inline&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;privacy groups said&lt;/a&gt; was a violation of user trust. Google responded that other email providers were already using computers to scan email to protect against spam and hackers, and that showing ads helped offset the cost of its free service. &lt;a href=&quot;https://blogs.wsj.com/digits/2014/04/30/google-stops-scanning-student-gmail-accounts-for-ads/?mod=article_inline&quot; class=&quot;icon none&quot;&gt;In 2014, Google stopped scanning&lt;/a&gt; inboxes of student, business and government users and last year said it was halting all Gmail scanning for ads.&lt;/p&gt; &lt;p&gt; &lt;strong&gt;2010: Buzz&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;Debut of &lt;a href=&quot;https://blogs.wsj.com/digits/2010/02/13/google-scrambles-to-tweak-buzz-privacy-settings/?mod=article_inline&quot; class=&quot;icon none&quot;&gt;Google Buzz was fumbled&lt;/a&gt; when the social site publicly displayed the contact lists of its users, leading to a probe by the Federal Trade Commission. Google &lt;a href=&quot;https://www.wsj.com/articles/SB10001424052748703806304576232600483636490?mod=article_inline&quot; class=&quot;icon none&quot;&gt;settled with the FTC in 2011&lt;/a&gt; and agreed to undergo 20 years of privacy audits by the agency. At the time of the settlement, Google said in a blog post that the Buzz launch “fell short of our usual standards for transparency and user control.” &lt;/p&gt; &lt;p&gt; &lt;strong&gt;2010: Street View&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;Google said its Street View camera &lt;a href=&quot;https://blogs.wsj.com/drivers-seat/2010/10/23/googles-street-view-cars-grabbed-private-data/?mod=article_inline&quot; class=&quot;icon none&quot;&gt;cars collected private data&lt;/a&gt; through wireless networks while driving by people’s homes. Google stopped collecting Street View images in some countries as a result. &lt;/p&gt; &lt;p&gt; &lt;strong&gt;2013: Glass&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;Google Glass, a wearable computer headset with the ability to record video, was seen by some &lt;a href=&quot;https://www.wsj.com/articles/SB10001424127887324767004578487661143483672?mod=article_inline&quot; class=&quot;icon none&quot;&gt;as a privacy intrusion&lt;/a&gt; when people began wearing them into private spaces like bathrooms. Google stopped selling the device to consumers and &lt;a href=&quot;https://www.wsj.com/articles/google-quietly-distributes-new-version-of-glass-aimed-at-workplaces-1438283319?mod=article_inline&quot; class=&quot;icon none&quot;&gt;retooled it for professionals&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;strong&gt;2013: Prism&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;Leaks revealed Google was &lt;a href=&quot;https://www.wsj.com/articles/SB10001424127887324299104578533802289432458?mod=article_inline&quot; class=&quot;icon none&quot;&gt;part of a program called Prism&lt;/a&gt;, which allowed the U.S. National Security Agency to collect data on internet users. Google denied it ever gave the government direct access to its servers. &lt;/p&gt; &lt;p&gt; &lt;strong&gt;2018: YouTube&lt;/strong&gt; &lt;/p&gt; &lt;p&gt; &lt;a href=&quot;https://www.democraticmedia.org/sites/default/files/field/public-files/2018/youtube_complaint_combined_final_4-5-18_1515.pdf?mod=article_inline&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;Privacy groups complained&lt;/a&gt; YouTube violated a federal law protecting children’s privacy by collecting data from users under 13. The company said users under 13 aren’t permitted to use YouTube. Google and the FTC have said they will evaluate the complaint.&lt;/p&gt; &lt;p&gt; &lt;strong&gt;2018: Android&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;The Associated Press found that &lt;a href=&quot;https://www.apnews.com/828aefab64d4411bac257a07c1af0ecb/AP-Exclusive:-Google-tracks-your-movements,-like-it-or-not?mod=article_inline&quot; target=&quot;_blank&quot; class=&quot;icon none&quot;&gt;Google collects location data&lt;/a&gt; of Android users even after their “location history” is turned off, a policy called misleading by privacy groups and lawmakers. Google told the AP that its descriptions of its location tools are clear.&lt;/p&gt; &lt;p&gt; &lt;strong&gt;2018: Google+&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;A software bug gave outside developers access to the private user profile data of a half-million Google+ users, and executives decided not to inform the public, partly out of fear of regulatory scrutiny. Google officials said the incident didn’t rise to the threshold of alerting users, and found no evidence any of the data were accessed..&lt;/p&gt;
    &lt;/div&gt;

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      &lt;/div&gt; 




      &lt;p&gt;Google believes up to 438 applications had access to the unauthorized Google+ data, the people said. Strobe investigators, after testing some of the apps and checking to see if any of the developers had previous complaints against them, determined none of the developers looked suspicious, the people said. The company’s ability to determine what was done with the data was limited because the company doesn’t have “audit rights” over its developers, the memo said. The company didn’t call or visit with any of the developers, the people said.&lt;/p&gt;




      &lt;p&gt;The question of whether to notify users went before Google’s Privacy and Data Protection Office, a council of top product executives who oversee key decisions relating to privacy, the people said.&lt;/p&gt;




      &lt;p&gt;Internal lawyers advised that Google wasn’t legally required to disclose the incident to the public, the people said. Because the company didn’t know what developers may have what data, the group also didn’t believe notifying users would give any actionable benefit to the end users, the people said.&lt;/p&gt;




      &lt;p&gt;The memo from legal and policy staff wasn’t a factor in the decision, said a person familiar with the process, but reflected internal disagreements over how to handle the matter.&lt;/p&gt;




      &lt;p&gt;The document shows Google officials felt that disclosure could have serious ramifications. Revealing the incident would likely result “in us coming into the spotlight alongside or even instead of Facebook despite having stayed under the radar throughout the Cambridge Analytica scandal,” the memo said. It “almost guarantees Sundar will testify before Congress.”&lt;/p&gt;




      &lt;p&gt;A range of factors go into determining whether a company must notify users of a potential data breach. There is no federal breach notification law in the U.S., so companies must navigate a patchwork of state laws with differing standards, said Al Saikali, a lawyer with Shook, Hardy &amp;amp; Bacon LLP. He isn’t affiliated with any of the parties.&lt;/p&gt;




      &lt;p&gt;While many companies wouldn’t notify users if a name and birth date were accessed, some firms would, Mr. Saikali said. Some firms notify users even when it is unclear that the data in question was accessed, he said. “Fifty percent of the cases I work on are judgment calls,” he said. “Only about half the time do you get conclusive evidence that says that this bad guy did access information.”&lt;/p&gt;




      &lt;p&gt;Europe’s General Data Protection Regulation, which went into effect in May of this year, requires companies to notify regulators of breaches within 72 hours, under threat of a maximum fine of 2% of world-wide revenue. The information potentially leaked via Google’s API would constitute personal information under GDPR, but because the problem was discovered in March, it wouldn’t have been covered under the European regulation, Mr. Saikali said. &lt;/p&gt;




      &lt;p&gt;Google could also face class-action lawsuits over its decision not to disclose the incident, Mr. Saikali said. “The story here that the plaintiffs will tell is that Google knew something here and hid it. That by itself is enough to make the lawyers salivate,” he said.&lt;/p&gt;




      &lt;p&gt;In its contracts with paid users of G Suite apps, Google tells customers it will notify them about any incidents involving their data “promptly and without undue delay” and will “promptly take reasonable steps to minimize harm.” That requirement may not apply to Google+ profile data, however, even if it belonged to a G Suite customer.&lt;/p&gt;




      &lt;p class=&quot;articleTagLine&quot;&gt;—Newley Purnell contributed to this article.&lt;/p&gt;




      &lt;p&gt; &lt;strong&gt;Write to &lt;/strong&gt;Douglas MacMillan at &lt;a href=&quot;mailto:douglas.macmillan@wsj.com&quot; target=&quot;_blank&quot; class=&quot;icon &quot;&gt;douglas.macmillan@wsj.com&lt;/a&gt; and Robert McMillan at &lt;a href=&quot;mailto:Robert.Mcmillan@wsj.com&quot; target=&quot;_blank&quot; class=&quot;icon &quot;&gt;Robert.Mcmillan@wsj.com&lt;/a&gt;&lt;/p&gt;




      &lt;/div&gt;



  &lt;/div&gt;


    &lt;p class=&quot;printheadline&quot;&gt;
      Appeared in the October 9, 2018, print edition as 'Google Hid Data Breach for Months.'
    &lt;/p&gt;




</description>
<pubDate>Mon, 08 Oct 2018 16:49:47 +0000</pubDate>
<dc:creator>tysone</dc:creator>
<og:title>Google Exposed User Data, Feared Repercussions of Disclosing to Public</og:title>
<og:description>Google exposed the private data of hundreds of thousands of users of the Google+ social network, though it didn’t find evidence of misuse. The company opted not to disclose the issue this past spring, in part because of fears doing so would draw regulatory scrutiny.</og:description>
<og:url>https://www.wsj.com/articles/google-exposed-user-data-feared-repercussions-of-disclosing-to-public-1539017194</og:url>
<og:image>https://images.wsj.net/im-29785/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/google-exposed-user-data-feared-repercussions-of-disclosing-to-public-1539017194</dc:identifier>
</item>
<item>
<title>Today Is My Wife’s First Birthday Since She Died</title>
<link>https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec</link>
<guid isPermaLink="true" >https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec</guid>
<description>&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*n62yO14ZXx7B4nAkrWgsIw.jpeg&quot; data-width=&quot;1609&quot; data-height=&quot;1261&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*n62yO14ZXx7B4nAkrWgsIw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*n62yO14ZXx7B4nAkrWgsIw.jpeg&quot;/&gt;&lt;/div&gt;
Alex a few months after we started dated on the left. A pretty recent photo (in Thailand) on the right.
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;b639&quot; id=&quot;b639&quot; class=&quot;graf graf--li graf-after--figure&quot;&gt;&lt;a href=&quot;https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec#bed9&quot; data-href=&quot;#bed9&quot; class=&quot;markup--anchor markup--li-anchor&quot;&gt;Quickly Catching you Up: Alex’s Death &amp;amp; memorials&lt;/a&gt;&lt;/li&gt;
&lt;li name=&quot;0b02&quot; id=&quot;0b02&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;&lt;a href=&quot;https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec#0263&quot; data-href=&quot;#0263&quot; class=&quot;markup--anchor markup--li-anchor&quot;&gt;3 pieces of advice about Death and Love&lt;/a&gt;&lt;/li&gt;
&lt;li name=&quot;13ad&quot; id=&quot;13ad&quot; class=&quot;graf graf--li graf--startsWithDoubleQuote graf-after--li&quot;&gt;&lt;a href=&quot;https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec#8834&quot; data-href=&quot;#8834&quot; class=&quot;markup--anchor markup--li-anchor&quot;&gt;“How is Tony doing?”&lt;/a&gt;&lt;/li&gt;
&lt;li name=&quot;2c09&quot; id=&quot;2c09&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;&lt;a href=&quot;https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec#b9e1&quot; data-href=&quot;#b9e1&quot; class=&quot;markup--anchor markup--li-anchor&quot;&gt;Get to know Alex (better)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 name=&quot;bed9&quot; id=&quot;bed9&quot; class=&quot;graf graf--h3 graf-after--li&quot;&gt;Alex’s Death and Memorials&lt;/h3&gt;
&lt;p name=&quot;2982&quot; id=&quot;2982&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;To catch you up: Alex died on July 17th. She was fishing in Alaska at the mouth of the Kenai River — one of her favorite places in the world. She went to this fishery each of the 20 years we were together, even after we moved away from Alaska. She was with one of her best friends. The fish were just starting to run after crappy fishing the day before and I’ll bet Alex was grinning ear to ear.&lt;/p&gt;
&lt;p name=&quot;41ef&quot; id=&quot;41ef&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The medical examiner said that her heart just stopped — so I think we can safely hope that she died painlessly. There were EMTs fishing a few feet away and they did CPR for more than 90 minutes, but she was never responsive after she collapsed.&lt;/p&gt;
&lt;p name=&quot;366d&quot; id=&quot;366d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Turns out the EMTs were heroes for keeping her blood flowing until they could get her body hooked up to life support. The hospital kept her body alive for a few days to allow some of her organs to heal — as an organ donor, she helped dozens of people in death — giving people years of life, sight, mobility, and more.&lt;/p&gt;
&lt;p name=&quot;fb28&quot; id=&quot;fb28&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We had a small memorial with her family in Alaska up in Hatcher Pass (near the trailhead of our favorite hike in the world).&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*fZ3nuoJGgQq_8X2qEIz9Cw.jpeg&quot; data-width=&quot;3036&quot; data-height=&quot;4048&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*fZ3nuoJGgQq_8X2qEIz9Cw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*fZ3nuoJGgQq_8X2qEIz9Cw.jpeg&quot;/&gt;&lt;/div&gt;
Reed Lakes — a hike a few miles where we had our Alaska Memorial for Alex.
&lt;p name=&quot;d452&quot; id=&quot;d452&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We had an amazing memorial here in Seattle where hundreds came together. A whole mess of us of jumped in a lake together, which I think Alex would’ve gotten a kick out of.&lt;/p&gt;

&lt;h3 name=&quot;0263&quot; id=&quot;0263&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;3 pieces of Advice about Death and Love&lt;/h3&gt;
&lt;p name=&quot;a47c&quot; id=&quot;a47c&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;People say that events like this give you perspective, and they are sure as hell right about that. The stuff that you &lt;em class=&quot;markup--em markup--p-em&quot;&gt;thought&lt;/em&gt; was important melts away and what’s left is what really matters. I don’t know how transferable this perspective is, but I’m going to do my best. Below is the advice I wish someone had given to me years ago. I’m unsure if I would’ve listened. I’m not sure if you will either, but here goes.&lt;/p&gt;
&lt;p name=&quot;34d9&quot; id=&quot;34d9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;#1: Imagine the sudden death of people you love most&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;9c97&quot; id=&quot;9c97&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I can tell you a bit about how it feels to lose your partner after 20 years of being together. There are the obvious emotions — sadness, anger, and a bit of gratitude for the time we did have. The overwhelming thing for me is regret and a wish for a chance to redo our last years together. Don’t get me wrong — our last years were pretty damn good. I think we did marriage better than 95% of couples do at this stage. But it doesn’t matter how good your relationship is — I promise you’ll be buried in regrets like these when the time comes.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*MKmlqKnhV39IhDuQ68Oz8Q.png&quot; data-width=&quot;1184&quot; data-height=&quot;1160&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*MKmlqKnhV39IhDuQ68Oz8Q.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*MKmlqKnhV39IhDuQ68Oz8Q.png&quot;/&gt;&lt;/div&gt;
The last picture of Alex and I together (on Whidbey Island)
&lt;p name=&quot;0181&quot; id=&quot;0181&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;This feels like a particular awful thing to ask someone to do, but I believe if everyone &lt;em class=&quot;markup--em markup--p-em&quot;&gt;truly&lt;/em&gt; were able to imagine the sudden death of the folks they love, it would change how they live.&lt;/p&gt;
&lt;p name=&quot;a2f6&quot; id=&quot;a2f6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With all of the demands of life, we can’t give (much) more time to the people we love without taking it away from other love-worthy people/things… But we can easily change is how we treat people with the time that we have. We can say “I love you” more, and more earnestly. We can tell people when we’re proud of them. That we admire them. That they are important to us. We can say the things we’re leaving unsaid because they are hard or because they make us feel weak. We can put our phones away and listen better. And when the warmth leaks out of our relationships, we can pro-actively try to get it back.&lt;/p&gt;
&lt;p name=&quot;1aad&quot; id=&quot;1aad&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So please: imagine your closest relationships, and imagine losing them in an instant. Figure out what would be left unsaid and say it. Think about how you’d wish you treated them, and… just treat them that way. Don’t take people for granted. Don’t let a month go by without thinking about this.&lt;/p&gt;
&lt;p name=&quot;148f&quot; id=&quot;148f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;#2: Read the love letters (or equivalent)&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;bd68&quot; id=&quot;bd68&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I have oceans of “Widower Homework” to do — one such task is wading through the storage rooms. Alex and I were pretty good at living light, but she saved a big tote of pre-digital photos. In this tote I found a collection of letters and cards she had saved that we sent each other over the years (which had sadly trickled to a stop 10ish years into our relationship). I’ve read them dozens of times in the last few weeks.&lt;/p&gt;
&lt;p name=&quot;4623&quot; id=&quot;4623&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Relationships evolve, and I suppose we can can never get the head-over-heels feelings of the first months back… I certainly wouldn’t trade the feelings of comfort, trust, and companionship in our 20th year for the anxious puppy love of the first month.&lt;/p&gt;
&lt;p name=&quot;a4e6&quot; id=&quot;a4e6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But it’s worth trying to hold onto some of that stuff, I think. I’ve run across very few relationships that still seem sweet/loving after 10 years, many that feel downright perfunctory, and plenty that feel snippy. If this is the natural (d)evolution of marriage, how can we fight that? Maybe one answer lies with one of the weapons we’ve found in the fight against depression.&lt;/p&gt;
&lt;p name=&quot;f651&quot; id=&quot;f651&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Humans have done a miserable job of figuring out how to treat depression. Broadly, science &lt;a href=&quot;https://www.thelancet.com/journals/lancet/article/PIIS0140-6736%2816%2930385-3/abstract&quot; data-href=&quot;https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(16)30385-3/abstract&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;says anti-depressants don’t work&lt;/a&gt;. Most &lt;a href=&quot;https://well.blogs.nytimes.com/2013/03/25/looking-for-evidence-that-therapy-works/&quot; data-href=&quot;https://well.blogs.nytimes.com/2013/03/25/looking-for-evidence-that-therapy-works/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;therapy doesn’t work and most therapists don’t follow evidence-based methodologies&lt;/a&gt;. One thing that actually seems to work is &lt;a href=&quot;https://www.health.harvard.edu/newsletter_article/in-praise-of-gratitude&quot; data-href=&quot;https://www.health.harvard.edu/newsletter_article/in-praise-of-gratitude&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;gratitude journaling&lt;/a&gt; — just thinking about and writing down stuff that you’re grateful for on a daily basis.&lt;/p&gt;
&lt;p name=&quot;19c7&quot; id=&quot;19c7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;People who are depressed can always find the negative side of any situation. The paths of your brain get deep ruts that are hard to break out of. Repeatedly thinking/writing thoughts that might not be entirely natural for you carve new ruts that make it easier to think positive thoughts… I believe it’s actually rewiring your brain.&lt;/p&gt;
&lt;p name=&quot;4264&quot; id=&quot;4264&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So perhaps having little monthly celebrations where you read old letters with each other, look at old photos together, talk about your gratitude towards each other, etc — can help keep your brain wired for love.&lt;/p&gt;
&lt;p name=&quot;71a3&quot; id=&quot;71a3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Alex and I didn’t do this, and I think we did better than many couples. But as much as I loved her, as much as I admired her, and as good as we were as partners — I often was a little sad about the state of our relationship. It wasn’t what I hoped our marriage would be and I think we’d both given up on changing that. What a fucking idiot I was.&lt;/p&gt;
&lt;p name=&quot;e7e3&quot; id=&quot;e7e3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There’s a lot of struggle at times like these between guilt and regret. When I say stuff like this, people naturally say, “stop beating yourself up — you guys were great!”. Guilt is something you feel when you knew better but you did the wrong/selfish thing. I don’t feel (much) guilt about this — I just didn’t have this perspective. Instead, I mostly feel regret. It turns out that regret hurts plenty too… I’m hoping that I can spare some folks that.&lt;/p&gt;
&lt;p name=&quot;ee1d&quot; id=&quot;ee1d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Advice #3: What to do with a friend, acquaintance, or stranger who is grieving?&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;2f3e&quot; id=&quot;2f3e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A year before Alex died, my friend (and co-founder at RescueTime) Joe died after a multi-year struggle with cancer. I look back at how I treated him in these years with a lot of regret (and a little guilt).&lt;/p&gt;
&lt;p name=&quot;54e9&quot; id=&quot;54e9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For most of this time, I would often say “In Joe’s shoes, I wouldn’t want people to see me like that.” and “My job is to respect Joe’s wishes and his space”. So I’d (less frequently than I should) send Joe emails or texts with something like this:&lt;/p&gt;
&lt;blockquote name=&quot;acb1&quot; id=&quot;acb1&quot; class=&quot;graf graf--blockquote graf-after--p&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;Hey Man- How are things going? I would love to see you and would drop everything anytime you feel up for it. We could go see a movie, rent a movie, play a board game, or just hang out and stare at the wall. Whatever you want…. Just say the word! -T&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;20ce&quot; id=&quot;20ce&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;Just say the word. He never did say the word much. He did host a birthday BBQ every year where his friends would gather and he always seemed to enjoy the heck out of it.&lt;/p&gt;
&lt;p name=&quot;b0a6&quot; id=&quot;b0a6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When I saw people I knew less well grieving about some sort of horrible life event, I often wouldn’t do so much as send a note. “I don’t know them well enough” , I’d say to myself, “It’d feel fake/forced for me to reach out now.”&lt;/p&gt;
&lt;p name=&quot;21eb&quot; id=&quot;21eb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When stuff like this happens, communication from friends and strangers is like oxygen. Even the little “thinking of you, sorry for your loss” notes from near strangers help.&lt;/p&gt;
&lt;p name=&quot;cf02&quot; id=&quot;cf02&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’m grateful for my friends/family who didn’t ask — they showed up. They’d email or call, and if they didn’t hear back, they’d email or call some more. My people (and many near-strangers) have been better at supporting me than I’ve been in the past at supporting others. But I won’t make that mistake again.&lt;/p&gt;
&lt;p name=&quot;76ac&quot; id=&quot;76ac&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Once more — regret, not guilt. I didn’t know any better but I sure as hell do now.&lt;/p&gt;
&lt;p name=&quot;11a2&quot; id=&quot;11a2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So what can you do to help the grieving? Here are some of the things that have helped me:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;7aac&quot; id=&quot;7aac&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Just send a note saying you’re thinking of them — even if you don’t know them well. They need these notes as munch a month in as the do in the first days, so don’t be shy about sending more than one.&lt;/li&gt;
&lt;li name=&quot;85bb&quot; id=&quot;85bb&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;If the person who died impacted you in some way, however small, tell the survivors about it. When life rubs your nose in the impermanence of all of this, the idea that the person you’ve lost is impacting another human helps.&lt;/li&gt;
&lt;li name=&quot;2895&quot; id=&quot;2895&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;If you’re close enough to the survivors (or if they don’t seem like they have a lot of support), spend time with them. Don’t put the ball in their court. It’s a very rational feeling for grieving folks to say, “No one REALLY wants to be around someone in my state of mind — so I’ll spare them that.” You have to be pushy, which feels a bit unnatural when you’re trying to be respectful.&lt;/li&gt;
&lt;li name=&quot;8f94&quot; id=&quot;8f94&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;After a week or two, keep friends busy with “normal” stuff. Yes, grieving people need to talk about their loss. But it’s also great to take hikes, play games, watch movies, and otherwise learn how to have fun again.&lt;/li&gt;
&lt;li name=&quot;277c&quot; id=&quot;277c&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;If you’ve gone through something like this and navigated to a happy life, tell them about the journey and the destination. Don’t stretch too far for this (“I lost a dog when I was 12” isn’t terribly comforting). One woman I went to college with (but didn’t know very well) reached out and told me her fiancee was murdered when she was 25. She said she still cries about it from time to time. But she also told me that she’d married, had kids, and found happiness. Hearing that helps.&lt;/li&gt;
&lt;li name=&quot;bbd5&quot; id=&quot;bbd5&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Donate to causes on behalf of the person who died and tell the grieving folks about (I wrote about Alex’s causes &lt;a href=&quot;https://medium.com/@webwright/my-wife-died-suddenly-a-week-ago-in-lieu-of-flowers-29ab403686d0&quot; data-href=&quot;https://medium.com/@webwright/my-wife-died-suddenly-a-week-ago-in-lieu-of-flowers-29ab403686d0&quot; class=&quot;markup--anchor markup--li-anchor&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;). There’s a (very rational) fear that the world will forget and that her impact will dissipate. I guess it will someday, but fighting against that helps. People have sent me hundreds of notes about donations to Alex’s causes that I’ve been keeping on the counter.&lt;/li&gt;
&lt;li name=&quot;e168&quot; id=&quot;e168&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;If you worked with someone who died and were close to them, reach out to their spouse (a lot) — even if you didn’t know them well (or at all!). Some of the most important support in the last few months has come from Alex’s coworkers. Before this, I didn’t know many of them very well. But, aside from me, these are people who spent more time with Alex than anyone over the last four years. And because they were in a non-profit, I think those bonds were especially close — they were brothers and sisters-in-arms fighting to make the world a little better. So it stands to reason that they are grieving as much as I am.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 name=&quot;8834&quot; id=&quot;8834&quot; class=&quot;graf graf--h3 graf-after--li&quot;&gt;How is Tony doing?&lt;/h3&gt;
&lt;p name=&quot;360f&quot; id=&quot;360f&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--h3&quot;&gt;“How’s it going?” I can watch people cringe when they say this automatically at the beginning of conversations.&lt;/p&gt;
&lt;p name=&quot;55a3&quot; id=&quot;55a3&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;“Oh fuck, that was probably the worst question I could ask him,” I imagine them saying to themselves.&lt;/p&gt;
&lt;p name=&quot;dca1&quot; id=&quot;dca1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;First, it’s a fine question to ask — it allows me to gush if I need to or say something light if I don’t.&lt;/p&gt;
&lt;p name=&quot;defe&quot; id=&quot;defe&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But here’s the answer, since it’s definitely a FAQ: &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;It’s going as well as could be expected.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;ac35&quot; id=&quot;ac35&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This is an empty-sounding phrase, but it’s not an empty sentiment.&lt;/p&gt;
&lt;p name=&quot;d786&quot; id=&quot;d786&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I am ridiculously well-supported. When people reach out to me to spend time, I joke that my comfort calendar is full and that perhaps I could squeeze them in for 30 minutes of comfort next Tuesday. I apologize to folks who I’ve accidentally ghosted — my inbox and calendar are a tornado.&lt;/p&gt;
&lt;p name=&quot;a1fe&quot; id=&quot;a1fe&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’m staying healthy. I’m exercising every day, eating well, and drinking less than I used to. My instincts are telling me to blow off exercise, be alone, do shots of whiskey, and eat donuts, but I’m not doing any of that… Alex wouldn’t want me to and she’s in charge right now.&lt;/p&gt;
&lt;p name=&quot;14e9&quot; id=&quot;14e9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I have a lot to be grateful for. A lot of people in these situations have hate/anger mixed into the grief (hate for a reckless driver, an ineffective health care system, etc). Alex died instantly/painlessly. Or they feel tons of guilt for being a crappy spouse/friend. Alex and I had an pretty amazing life and I was on sabbatical for the last 9 months… so was more present than I otherwise would’ve been. We had a better marriage than most that I’ve come across. I still feel a ton of regret — even if I was pretty solid as a husband, it would have been &lt;em class=&quot;markup--em markup--p-em&quot;&gt;so easy to be a kinder, more loving, more generous partner.&lt;/em&gt; But mostly I manage to keep the regret in check.&lt;/p&gt;
&lt;p name=&quot;e480&quot; id=&quot;e480&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Lots of people in these situations have kids. I can’t imagine trying to go through this while simultaneously trying to help kids through it. I have a dog, and he seems oblivious to her absence.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*WcJZfG5XF_6Jt8rtcO06rA.jpeg&quot; data-width=&quot;2848&quot; data-height=&quot;4288&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*WcJZfG5XF_6Jt8rtcO06rA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*WcJZfG5XF_6Jt8rtcO06rA.jpeg&quot;/&gt;&lt;/div&gt;
Here, have a Pim picture, complete with side-tongue. (photo credit to Addy Wright)
&lt;p name=&quot;ff9e&quot; id=&quot;ff9e&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Tons of people who go through this have financial woes — because they were hammered by medical bills because of a prolonged illness, they lack savings, or because they just lost half (or all) of their family’s income. I have plenty of money — not enough where I can retire in style… But I was already in sabbatical-mode, and don’t have to worry about going back to work for a years if I didn’t feel like it (despite this, I’m actually eager to figure out what’s next professionally!).&lt;/p&gt;
&lt;p name=&quot;fec2&quot; id=&quot;fec2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So I kinda have this in easy mode. It turns out easy mode is still unimaginably hard. I cry every day at some point, and for every time I cry, I feel like I’m on the verge of crying half a dozen times. From what other people who’ve lost loved ones have told me, this is just how it is. It does slow down a bit but it never goes away — you just learn to live with it.&lt;/p&gt;
&lt;p name=&quot;e0df&quot; id=&quot;e0df&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’m able to have fun, be with friends, tell jokes, think about work. I can talk about Alex without falling apart. Sometimes I feel like I’m just going through the motions of living, but most of the time I’m just living.&lt;/p&gt;
&lt;p name=&quot;d7a4&quot; id=&quot;d7a4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It’s hard to know what a grieving person is supposed to &lt;em class=&quot;markup--em markup--p-em&quot;&gt;do.&lt;/em&gt; I know that Alex would want me to go have an awesome life as soon as possible, but she’d also want me to do whatever I needed to do to grieve.&lt;/p&gt;
&lt;p name=&quot;3559&quot; id=&quot;3559&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So what &lt;em class=&quot;markup--em markup--p-em&quot;&gt;should&lt;/em&gt; I do? Am I crying enough? Not enough? Should I talk about her more or less? Think about her more or less? I often listen to emotional songs and go through the same photos and letters over and over again. Is that processing or masochism?&lt;/p&gt;

This is my current favorite masochism music.
&lt;p name=&quot;5878&quot; id=&quot;5878&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;I think my grieving playbook for the next year or so is:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;7499&quot; id=&quot;7499&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Do what comes naturally and don’t feel guilty about it.&lt;/li&gt;
&lt;li name=&quot;21c1&quot; id=&quot;21c1&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Avoid the temptation to wallow/suffer needlessly — seeking out pain doesn’t honor her — living a better life and being a better person as a result of this does.&lt;/li&gt;
&lt;li name=&quot;aa00&quot; id=&quot;aa00&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Ask “what would Alex want” and “what would Alex do” at every fork in the road.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 name=&quot;b9e1&quot; id=&quot;b9e1&quot; class=&quot;graf graf--h3 graf-after--li&quot;&gt;Get to Know Alex&lt;/h3&gt;
&lt;p name=&quot;9def&quot; id=&quot;9def&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Have you seen those memorial decals people put on the back of car windows? “Theresa Smith — 1976–2018 RIP”. I’ve always found those strange, but I understand them now. It’s the same urge that drives us to plant tombstones or little memorials by the road where people have died. As I write these words, the torrent of emails and Facebook messages have slowed to a trickle and I find myself saying, “No. You can’t forget her yet.” We’re so good at not seeing the impermanence of all of this. When someone you love dies, you &lt;em class=&quot;markup--em markup--p-em&quot;&gt;see the impermanence.&lt;/em&gt; You can’t stop seeing it. You feel compelled to fight against it.&lt;/p&gt;
&lt;p name=&quot;7a7d&quot; id=&quot;7a7d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You can’t, of course. On our year traveling the world, Alex and I would often look at gravestones near old decrepit churches. At some point in history, these gravestones were new and people would perhaps lay flowers on them. Years later, maybe a relative or two would come by on an anniversary or birthday. Decades later, maybe some stranger from the same village would recognize the name and smile slightly. But soon, the marker is anonymous. When we saw many of them, the march of nature had worn them into illegibility. Tombstones are a shout in the dark, but eventually the echoes subside.&lt;/p&gt;
&lt;p name=&quot;f83b&quot; id=&quot;f83b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;So this post is my digital tombstone for Alex. I like to think it’s better because it’ll help me remember her. And maybe help you know her a little better so you can remember her as well.&lt;/p&gt;
&lt;p name=&quot;60d5&quot; id=&quot;60d5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For those who never met her — Alex lived life in a way that was just downright dazzling. She was fearless — she could fish, lead a team at work, keep bees, raise chickens, cook a gourmet meal, grow veggies, replace a toilet, knit a hat, eat termites right out of a hive, make jewelry, behead a turkey, do carpentry, raise millions of dollars for a non-profit, travel anywhere in the world, throw on a ball gown for a formal event, tile a floor, make bread, storm up a mountain without breaking a sweat, wrangle a snowmachine, run a marathon, fly an airplane, troubleshoot an outboard motor, eat a tarantula, cross country ski, and fillet 100 salmon in record time.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*FgyTGmku3rzB59YAkDbKvw.jpeg&quot; data-width=&quot;960&quot; data-height=&quot;960&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*FgyTGmku3rzB59YAkDbKvw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*FgyTGmku3rzB59YAkDbKvw.jpeg&quot;/&gt;&lt;/div&gt;
A few months before she died, Alex posted this. The caption was “&lt;a href=&quot;https://www.facebook.com/tony.wright?__tn__=%2CdK%2AF-R&amp;amp;eid=ARAHy3f0wPZs-tgc1Po3OwoIxe6Etpq2azkTxk-j0MmpC28KMrqNC3p6vI8pUpCmWzwoJyB433xl9Igp&quot; data-href=&quot;https://www.facebook.com/tony.wright?__tn__=%2CdK%2AF-R&amp;amp;eid=ARAHy3f0wPZs-tgc1Po3OwoIxe6Etpq2azkTxk-j0MmpC28KMrqNC3p6vI8pUpCmWzwoJyB433xl9Igp&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Tony&lt;/a&gt; had plans tonight so I did this.&lt;a href=&quot;https://www.facebook.com/hashtag/fridaynightplumbing&quot; data-href=&quot;https://www.facebook.com/hashtag/fridaynightplumbing&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;#fridaynightplumbing&lt;/a&gt;”
&lt;p name=&quot;2a34&quot; id=&quot;2a34&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;When Alex and I started dating, I was in awe of her. I’d recently moved up to Alaska and was in love with the place. As a guy who had grown up in landscraped suburbia, Alaska was magical. The mountains, the wilderness, the animals, the winters, the lifestyle, the people. It was all wondrous to me and Alex was Alaska personified. She’d grown up flying around in her parents float plane and spending much of her summers at their remote cabin. She’d fished and hiked and hunted all around the state. During the Iditarod, she’d snowmachine out to the early checkpoints and hand out candy bars to the mushers as they raced by. She was a competitive cross country skier. She knew how it all worked.&lt;/p&gt;
&lt;p name=&quot;04ec&quot; id=&quot;04ec&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I, on the other hand, was an Fresh-off-the-boat Alaskan Idiot. I carried a 5 pound .44 magnum on heavily trafficked day-hikes with me for bear protection. I was in terrible physical shape. I had no idea how to coax a fish out of a river or where to find them. I had no idea what to do with a fish once you had one. I didn’t know how to camp. I didn’t know where the hikes were.&lt;/p&gt;
&lt;p name=&quot;bb5a&quot; id=&quot;bb5a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Alex was this fearless expert in all of the things I wanted to learn.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*rIMLb6CDUnsAbkQD9DCuIA.jpeg&quot; data-width=&quot;800&quot; data-height=&quot;600&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*rIMLb6CDUnsAbkQD9DCuIA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*rIMLb6CDUnsAbkQD9DCuIA.jpeg&quot;/&gt;&lt;/div&gt;
Alex took me all around Alaska and taught me to love the outdoors.
&lt;p name=&quot;0184&quot; id=&quot;0184&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Despite Alex and I being pretty over-rationale people, we were only dating for a few months before we started talking openly about wanting to spend the rest of our lives together. This was good, given that she moved away for a PhD program in Chicago 3 months into our relationship. We tried the long distance relationship thing for a bit (not a cheap thing for a guy making $11/hr working a graveyard shift), but eventually I bit the bullet and moved to Chicago to be with her for a year before we returned to Alaska.&lt;/p&gt;
&lt;p name=&quot;b885&quot; id=&quot;b885&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Many people knew Alex as strong and composed but she could be incredibly sweet. Her soft moments were rare but precious to me. She wrote beautiful love letters in the first decade of our relationship. We fell out of that habit, but I wish we didn’t.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*0JScpFmcDVq2A5jVvI_oWg.png&quot; data-width=&quot;4048&quot; data-height=&quot;2468&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*0JScpFmcDVq2A5jVvI_oWg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*0JScpFmcDVq2A5jVvI_oWg.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;6e9f&quot; id=&quot;6e9f&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;I remember when we finally realized that my friend Joe was probably going to die of cancer. We were both kind of stunned. Alex really didn’t know him well, but knew he was a good man and that I respected him a lot. The next night we were walking to a dinner in downtown Seattle and Alex burst into tears about it walking across first avenue.&lt;/p&gt;
&lt;p name=&quot;8ce7&quot; id=&quot;8ce7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She was ridiculously proud. When in Alaska, my friends and I got into rock climbing. I didn’t know it at the time, but she had always had a dream of rock climbing in Grand Teton National Park. I kept trying to get her to come climb with me when I learned this, but she hated the notion of being 6 months behind me in skill/strength and never did. I think her pride (and mine) made our relationship harder than it had to be. Life is too damn short — be vulnerable to the people you love.&lt;/p&gt;
&lt;p name=&quot;4648&quot; id=&quot;4648&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I never heard her sing (I think this is because she was too proud).&lt;/p&gt;
&lt;p name=&quot;f67b&quot; id=&quot;f67b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She was thrifty with clothes and jewelry. She thought diamonds and fashion were wastes of energy.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*80XUw_q1dAv6d_hRpLn8Zg.jpeg&quot; data-width=&quot;1936&quot; data-height=&quot;2592&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*80XUw_q1dAv6d_hRpLn8Zg.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*80XUw_q1dAv6d_hRpLn8Zg.jpeg&quot;/&gt;&lt;/div&gt;
Despite the fact that she didn’t care much for fashion or jewelry, she cleaned up pretty well.
&lt;p name=&quot;ce67&quot; id=&quot;ce67&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;She kept trophies for “most inspirational runner” from High School.&lt;/p&gt;
&lt;p name=&quot;a6a5&quot; id=&quot;a6a5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Despite making it look easy, she was a little vain. She had oceans of products for her hair, skin, teeth, eyelashes, etc.&lt;/p&gt;
&lt;p name=&quot;1be6&quot; id=&quot;1be6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She was afraid of slugs and driving up steep hills, but almost nothing else.&lt;/p&gt;
&lt;p name=&quot;412a&quot; id=&quot;412a&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She loved taking power naps and taking 2-hour baths.&lt;/p&gt;
&lt;p name=&quot;2f73&quot; id=&quot;2f73&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Love is supposed to be this thing where you care as much (or more?) about someone’s happiness than your own, but that seldom seems to be the case when I look at most relationships. For Alex, I suspect it might have been. When I wanted or needed a thing, she wanted me to have it and worked to make it happen. When I was depressed and lost in our final year in Alaska, she moved with me to Seattle despite her love of her home state. She could’ve been resentful of that sacrifice, but she never was.&lt;/p&gt;
&lt;p name=&quot;680e&quot; id=&quot;680e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In the year before her death, I’d been taking some time off of working. I recently asked her “Hey, when I start hunting for a new opportunity in earnest, what’s your appetite for moving to a new neighborhood or even a new city?” Her response was, “I love our home and our city and don’t want to leave. But if you find something you love, we’ll make it work wherever it is in the world.” Saying something like that requires a lot of trust — certainly I could abuse that sentiment and have Alex in a constant state of adapting to my needs/goals.&lt;/p&gt;
&lt;p name=&quot;e349&quot; id=&quot;e349&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Her trust and faith in me was complete and unshakable.&lt;/p&gt;
&lt;p name=&quot;a835&quot; id=&quot;a835&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Not once did she ever express jealousy.&lt;/p&gt;
&lt;p name=&quot;a110&quot; id=&quot;a110&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In our 20 years together, I’ve had a few times where I had no idea what to do with my life — sometimes for many months. She was always confident that I’d figure it out.&lt;/p&gt;
&lt;p name=&quot;8b06&quot; id=&quot;8b06&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When I spent time with away from her, she never said, “But I wanted to spend time together tonight” — she was happy that I was doing something rewarding, even if I wasn’t with her.&lt;/p&gt;
&lt;p name=&quot;ec89&quot; id=&quot;ec89&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When we disagreed, she’d almost always approach my viewpoints with reason and charity.&lt;/p&gt;
&lt;p name=&quot;16c6&quot; id=&quot;16c6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In the tech industry there is an awakening to how we are treating people — especially women and minorities. I remember reading a particularly awful article about a woman being systematically harassed at work and realizing that Alex had never — not once — mentioned experiencing anything resembling harassment to me. Not at work, not on the street, nothing. So I asked her, “Have you ever been harassed?”. She thought about it for a second and said, “Not that I’ve noticed.” Trying to harass Alex would be like a tiny wave trying to adjust the course of a cruise ship. If you had to courage to try it, you’d just kind of bounce off.&lt;/p&gt;
&lt;p name=&quot;1d35&quot; id=&quot;1d35&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When we returned from traveling for a year, a common question was “what was your favorite place?” Alex’s answer was not what you’d expect. We’d seen mountains in Nepal, Cathedrals in Spain, magical waterfalls in Croatia, the headwaters of the Ganges, the sunrise over the Sahara, and a zillion other breathtaking things. But her favorite time was in a beautiful-but-unassuming seaside town in Morocco where we were taken in by a retired group of friends we didn’t know. They had a vacation home there and knew and loved the town — they showed us around, took us to the beach to haggle with fishermen for dinner, drank wine with us, and swapped stories.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*CpGG8XE7jeaRey9WDRLuxQ.png&quot; data-width=&quot;1584&quot; data-height=&quot;1052&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*CpGG8XE7jeaRey9WDRLuxQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*CpGG8XE7jeaRey9WDRLuxQ.png&quot;/&gt;&lt;/div&gt;
In the mornings, Alex would walk down to the beach with our hostess Anna and watch her haggle with the fishermen for that night’s feast.
&lt;p name=&quot;dd3c&quot; id=&quot;dd3c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We were headed to Spain after and one couple took us with them across the strait of Gibraltar and put us up in their house. I spoke to them recently and learned that Alex is the third person in our group that has died since 2013. I’m not religious, but if there’s a heaven, they’ll get together up there and eat oysters together — and sea urchins right out of the shell.&lt;/p&gt;
&lt;p name=&quot;db8b&quot; id=&quot;db8b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Alex dedicated her life to raising money for non-profits, and finished her life as Chief Development Officer of Washington STEM. She worked in for schools, for women’s health and reproductive rights, for land conservation, and more.&lt;/p&gt;
&lt;p name=&quot;a9e3&quot; id=&quot;a9e3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;She was so positive about work. So many people come home from work with a laundry list of of things they hate about their job. Alex wasn’t like this at all. Alex spoke with unwashed admiration for the people she worked with. It’s not that she didn’t see flaws or have frustrations — but everyone was seen through the default lens of “these people are good at what they do and these people are good human beings.”&lt;/p&gt;
&lt;p name=&quot;ebec&quot; id=&quot;ebec&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Years ago I was very surprised when the first in a long line of coworkers and bosses told me how exceptional Alex was to work with. I was especially surprised to hear this from people who worked FOR Alex. People generally hate their bosses — that’s just understood (fun fact- 75% of people say their direct supervisor is the worst thing about their job).&lt;/p&gt;
&lt;p name=&quot;3dee&quot; id=&quot;3dee&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;And Alex had some pretty sharp edges — I’d seen plenty of people have trouble warming up to her. I prided myself on being a bit of an “Alex Whisperer” — a person who could get through these edges to the hard-to-reach person inside. So I was a little annoyed — these people were near-strangers to me and they get a delightful Alex without all of the work?!&lt;/p&gt;
&lt;p name=&quot;523e&quot; id=&quot;523e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It was always obvious to me that Alex would be fiercely competent at her job, but it never occurred to me that she would be beloved. It didn’t take her death for people to tell me that she was.&lt;/p&gt;
&lt;p name=&quot;aa47&quot; id=&quot;aa47&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Alex had no time for introspection. People who know me know that I’m fairly constantly pondering the nature of ethics, work, friendship, love, etc. Whenever I tried to talk to Alex about these things, she’d humor me but rarely had much interest in the discussion. To her, the right thing didn’t need to be deliberate/thoughtful — it was obvious and natural.&lt;/p&gt;
&lt;p name=&quot;195f&quot; id=&quot;195f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’m maintaining videos and photos of Alex &lt;a href=&quot;http://tonywright.com/alexphotos/&quot; data-href=&quot;http://tonywright.com/alexphotos/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;here&lt;/strong&gt;&lt;/a&gt;. I’ve sent away the pre-digital photos of her to get scanned and expect to add those in a week or two.&lt;/p&gt;
&lt;p name=&quot;28f3&quot; id=&quot;28f3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It’s hard to know how to finish a post like this. I’d give anything to have her back. Hell, I’d give anything to have 10 minutes to tell her the stuff I didn’t say enough.&lt;/p&gt;
&lt;p name=&quot;e016&quot; id=&quot;e016&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I can’t get any more life &lt;em class=&quot;markup--em markup--p-em&quot;&gt;with&lt;/em&gt; Alex, but I can try to lead a better life &lt;em class=&quot;markup--em markup--p-em&quot;&gt;because&lt;/em&gt; of her and I can try to make her proud, so that’s what I’m going to try to do.&lt;/p&gt;
&lt;p name=&quot;a80f&quot; id=&quot;a80f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Happy Birthday, love.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*LF5cpZev1-ituqVWm-PjsA.png&quot; data-width=&quot;1196&quot; data-height=&quot;1196&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*LF5cpZev1-ituqVWm-PjsA.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*LF5cpZev1-ituqVWm-PjsA.png&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 08 Oct 2018 16:15:11 +0000</pubDate>
<dc:creator>troydavis</dc:creator>
<og:title>Today is My wife’s First Birthday Since She Died. – Tony Wright – Medium</og:title>
<og:url>https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*n62yO14ZXx7B4nAkrWgsIw.jpeg</og:image>
<og:description>Some advice about love &amp; death followed by a meandering eulogy.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@webwright/today-is-my-wifes-first-birthday-since-she-died-7369944c43ec</dc:identifier>
</item>
<item>
<title>Intel Announces 9th Gen Core CPUs</title>
<link>https://www.anandtech.com/show/13401/intel-9th-gen-cpus-9900k-9700k-9600k</link>
<guid isPermaLink="true" >https://www.anandtech.com/show/13401/intel-9th-gen-cpus-9900k-9700k-9600k</guid>
<description>&lt;p&gt;Among many of Intel’s announcements today, a key one for a lot of users will be the launch of Intel’s 9&lt;sup&gt;th&lt;/sup&gt; Generation Core desktop processors, offering up to 8-cores on Intel's mainstream consumer platform. These processors are drop-in compatible with current Coffee Lake and Z370 platforms, but are accompanied by a new Z390 chipset and associated motherboards as well. The highlights from this launch is the 8-core Core i9 parts, which include a 5.0 GHz turbo Core i9-9900K, rated at a 95W TDP.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;One, Two, Three, Four, Five, Six, Seven, Eight. Eight Cores.&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;I won’t beat about the bush – the 9&lt;sup&gt;th&lt;/sup&gt; Gen processors Intel is announcing today are as follows:&lt;/p&gt;
&lt;table border=&quot;0&quot; width=&quot;95%&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;tgrey&quot;&gt;&lt;td colspan=&quot;10&quot;&gt;Intel 9th Gen Core&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot;&gt;&lt;em&gt;AnandTech&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Cores&lt;/td&gt;
&lt;td&gt;TDP&lt;/td&gt;
&lt;td&gt;Freq&lt;/td&gt;
&lt;td&gt;L3&lt;/td&gt;
&lt;td&gt;L3 Per&lt;br/&gt;Core&lt;/td&gt;
&lt;td&gt;DRAM&lt;br/&gt;DDR4&lt;/td&gt;
&lt;td&gt;iGPU&lt;/td&gt;
&lt;td&gt;iGPU&lt;br/&gt;Turbo&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i9-9900K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$488&lt;/td&gt;
&lt;td&gt;8 / 16&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;3.6 / 5.0&lt;/td&gt;
&lt;td&gt;16 MB&lt;/td&gt;
&lt;td&gt;2.0 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;GT2&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i7-9700K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$374&lt;/td&gt;
&lt;td&gt;8 / 8&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;3.6 / 4.9&lt;/td&gt;
&lt;td&gt;12 MB&lt;/td&gt;
&lt;td&gt;1.5 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;GT2&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i5-9600K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$262&lt;/td&gt;
&lt;td&gt;6 / 6&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;3.7 / 4.6&lt;/td&gt;
&lt;td&gt;9 MB&lt;/td&gt;
&lt;td&gt;1.5 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;GT2&lt;/td&gt;
&lt;td&gt;1150&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot; colspan=&quot;10&quot;&gt;8th Gen&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i7-8086K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$425&lt;/td&gt;
&lt;td&gt;6 / 12&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;4.0 / 5.0&lt;/td&gt;
&lt;td&gt;12 MB&lt;/td&gt;
&lt;td&gt;2 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;24 EUs&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i7-8700K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$359&lt;/td&gt;
&lt;td&gt;6 / 12&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;3.7 / 4.7&lt;/td&gt;
&lt;td&gt;12 MB&lt;/td&gt;
&lt;td&gt;2 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;24 EUs&lt;/td&gt;
&lt;td&gt;1200&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i5-8600K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$258&lt;/td&gt;
&lt;td&gt;6 / 6&lt;/td&gt;
&lt;td&gt;95 W&lt;/td&gt;
&lt;td&gt;3.6 / 4.3&lt;/td&gt;
&lt;td&gt;9 MB&lt;/td&gt;
&lt;td&gt;1.5 MB&lt;/td&gt;
&lt;td&gt;2666&lt;/td&gt;
&lt;td&gt;24 EUs&lt;/td&gt;
&lt;td&gt;1150&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Core i3-8350K&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$179&lt;/td&gt;
&lt;td&gt;4 / 4&lt;/td&gt;
&lt;td&gt;91 W&lt;/td&gt;
&lt;td&gt;4.0&lt;/td&gt;
&lt;td&gt;8 MB&lt;/td&gt;
&lt;td&gt;2 MB&lt;/td&gt;
&lt;td&gt;2400&lt;/td&gt;
&lt;td&gt;24 EUs&lt;/td&gt;
&lt;td&gt;1150&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Pentium G5600&lt;/td&gt;
&lt;td class=&quot;tlgrey&quot;&gt;$93&lt;/td&gt;
&lt;td&gt;2 / 4&lt;/td&gt;
&lt;td&gt;54 W&lt;/td&gt;
&lt;td&gt;3.9&lt;/td&gt;
&lt;td&gt;4 MB&lt;/td&gt;
&lt;td&gt;2 MB&lt;/td&gt;
&lt;td&gt;2400&lt;/td&gt;
&lt;td&gt;24 EUs&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Leading from the top of the stack is the Core i9-9900K, Intel’s new flagship mainstream processor. This part is eight full cores with hyperthreading, with a base frequency of 3.6 GHz at 95W TDP, and a turbo up to 5.0 GHz on two cores. Memory support is up to dual channel DDR4-2666. The Core i9-9900K builds upon the Core i7-8086K from the 8&lt;sup&gt;th&lt;/sup&gt; Generation product line by adding two more cores, and increasing that 5.0 GHz turbo from one core to two cores. The all-core turbo is 4.7 GHz, so it will be interesting to see what the power consumption is when the processor is fully loaded. The Core i9 family will have the full 2MB of L3 cache per core. &lt;/p&gt;
&lt;p&gt;Also featuring 8-cores is the Core i7-9700K, but without the hyperthreading. This part will have a base frequency of 3.6 GHz as well for a given 95W TDP, but can turbo up to 4.9 GHz only on a single core. The i7-9700K is meant to be the direct upgrade over the Core i7-8700K, and although both chips have the same underlying Coffee Lake microarchitecture, the 9700K has two more cores and slightly better turbo performance, but less L3 cache per core at only 1.5MB per.&lt;/p&gt;
&lt;p&gt;The other important overclocking focused processor is the Core i5-9600K, with six cores without hyperthreading. Users will also see a lot of similarity in this part to the Core i5 of the previous generation, but with added frequency.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/Packaging2.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/Packaging2_575px.png&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.tomshardware.com/news/intel-core-i9-9900k-price-amazon,37871.html&quot;&gt;&lt;em&gt;From Tom's Hardware&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the time of writing, we are still awaiting pricing, although the Core i9-9900K was accidentally listed on Amazon for $582.50 last week. What we also saw from this accidental listing was the packaging: Intel would appear to be experimenting with a dodecahedron (12-sided figure) in an attempt to compete against AMD's elaborate packaging for its high-end CPUs. This is the first time in recent memory that Intel has expanded its packaging beyond that simple box, so it will be interesting to see how much it goes beyond the Core i9.&lt;/p&gt;
&lt;p&gt;Edit: Pricing has been updated.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Per Core Turbo Ratios&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Also in our list of information, we have the per-core Turbo ratios for each of the three overclocking-capable CPUs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/9thGenTurbos.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/9thGenTurbos_575px.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Users who read our &lt;a href=&quot;https://www.anandtech.com/show/12945/the-intel-core-i7-8086k-review&quot;&gt;Core i7-8086K review&lt;/a&gt;, which was Intel’s first 5.0 GHz processor, may remember that it offered a single core of 5.0 GHz turbo, and the knock on effect of that was we never really saw the magic 5.0 GHz number. Because of background processes and whatnot, we very often see the 2-4 core turbo values in most processors. This time around, at least with the Core i9, Intel has put the first two cores at the peak turbo frequency.&lt;/p&gt;
&lt;h3&gt;TIM: Soldered Down Processors&lt;/h3&gt;
&lt;p&gt;Intel has officially confirmed that new 9th generation processors will feature a layer of solder making up the TIM between the die and the IHS. The new processors with solder include the Core i9-9900K, the Core i7-9700K and Core i5-9600K.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/2018-10-08%2010.38.03.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/2018-10-08%2010.38.03_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In recent times Intel has opted to use a cheaper thermal interface comprised of a paste which in comparison to solder has a lower thermal conduction rating and thus led to a number of solutions cropping up which allowed users to delid the IHS from the chip and replace the cheaper material. The fact the new Intel 9th generation processors will indeed now feature a solder-based TIM means that the processors on the new 14++ process should in effect run cooler in comparison clock for clock and allow Intel and users to potentially overclock a little further.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Coffee Lake Refresh: Learning from the GPU Companies&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Intel’s 9&lt;sup&gt;th&lt;/sup&gt; Generation Core family is built around the Coffee Lake platform, and as the processors have not had any microarchitectural changes, they are refreshes of the 8&lt;sup&gt;th&lt;/sup&gt; generation parts but with the product stack laid out a little differently. For those keeping track, Coffee Lake was already a rehash of Kaby Lake, which was an update to Skylake. So we are on Skylake Refresh Refresh Refresh.&lt;/p&gt;
&lt;table align=&quot;center&quot; border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; width=&quot;575&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr class=&quot;tgrey&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot; colspan=&quot;6&quot;&gt;Intel's Core Architecture Cadence&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td&gt;Core Generation&lt;/td&gt;
&lt;td width=&quot;195&quot;&gt;Microarchitecture&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;122&quot;&gt;Process Node&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot; width=&quot;121&quot;&gt;Release Year&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;2nd&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Sandy Bridge&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;32nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2011&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;3rd&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Ivy Bridge&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;22nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2012&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;4th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Haswell&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;22nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2013&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;5th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Broadwell&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2014&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;6th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Skylake&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2015&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;7th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Kaby Lake&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm+&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2016&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;tlgrey&quot; valign=&quot; middle&quot;&gt;8th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Kaby Lake-R&lt;br/&gt;Coffee Lake-S&lt;br/&gt;Kaby Lake-G&lt;br/&gt;Coffee Lake-U/H&lt;br/&gt;Whiskey Lake-U&lt;br/&gt;Amber Lake-Y&lt;br/&gt;Cannon Lake-U&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm+&lt;br/&gt;14nm++&lt;br/&gt;14nm+&lt;br/&gt;14nm++&lt;br/&gt;14nm++&lt;br/&gt;14nm+&lt;br/&gt;10nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2017&lt;br/&gt;2017-2018&lt;br/&gt;2018&lt;br/&gt;2018&lt;br/&gt;2018&lt;br/&gt;2018&lt;br/&gt;2017*&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;9th&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Coffee Lake Refresh&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm**&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2018&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot; rowspan=&quot;2&quot;&gt;Unknown&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Ice Lake (Consumer)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;10nm?&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2019?&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;Cascade Lake (Server)&lt;br/&gt;Cooper Lake (Server)&lt;br/&gt;Ice Lake (Server)&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;14nm**&lt;br/&gt;14nm**&lt;br/&gt;10nm&lt;/td&gt;
&lt;td align=&quot;center&quot; valign=&quot;middle&quot;&gt;2018&lt;br/&gt;2019&lt;br/&gt;2020&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot; colspan=&quot;4&quot; rowspan=&quot;1&quot;&gt;* Single CPU For Revenue&lt;br/&gt;** Intel '14nm Class'&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Intel has promised that its 10nm manufacturing process will ramp through 2019, and has already announced that it will introduce Ice Lake for servers on 10nm in 2020, after another run of 14nm with Cooper Lake in 2019. On the consumer side, the status is still in limbo – with any luck, the next generation of consumer parts will be a proper update to the microarchitecture, regardless of the process node.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Hardware and Software Security Fixes&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;What makes this a little different are the eight-core products. In order to make these, Intel had to create new die masks for the manufacturing line, as their previous masks only went up to six cores (and before that, four cores). This would, theoretically, give Intel a chance to implement some of the hardware mitigations for Spectre/Meltdown. As of the time of writing, we have not been given any indication that this is the case, perhaps due to the core design being essentially a variant of Skylake in a new processor. We will have to wait until a new microarchitecture comes to the forefront to see any changes.&lt;/p&gt;
&lt;p&gt;What Intel has been doing however is optimizing its manufacturing process. Many have reported that Intel’s 14nm family of technologies is the most profitable manufacturing node in the history of the company. It should be noted that Intel has now eschewed names such as ‘14+’ and ‘14++’ on official marketing, choosing instead to call it ‘14nm family’ and to highlight optimizations in particular products. The results of these optimizations, whatever they might be, are usually bumps in frequency and performance at iso-power or less power, usually at the expense of a little die area. That would mean fewer dies per wafer, naturally increasing the cost of the product.&lt;/p&gt;
&lt;p&gt;The processors announced so far are 8-core and a 6-core parts, with leaks suggesting Intel will also produce 4-core and 2-core processors at a later date. There is no word if some of these parts share die representations (e.g. if a 6-core is a natural 6-core, or a cut 8-core, or if both will happen). Making new die masks is expensive, however it can be beneficial depending on the quantity of processors for each segment. However, Intel will want to do something with those 8-core dies that might not make it – a tactic used in its enterprise parts.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;More Coffee, Less Caffeine: HyperThreading and L3 Cache&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;All this aside, it would appear that Intel is also forgoing HyperThreading on most of its processors. The only Core processors to get HyperThreading will be the Core i9 parts, and perhaps the Pentiums as well. This is partly to help make the product stack more linear, and so cheaper chips are not treading on the toes of the more expensive ones (e.g. a quad-core with HyperThreading might outperform a 6-core without). The other angle, I suspect, is one of the side-channel attacks that can occur when HyperThreading is in action. By disabling HyperThreading on the volume production chips, this security issue is no longer present. It also ensures that every thread on that chip is not competing for per-core resources.&lt;/p&gt;
&lt;p&gt;One of the more interesting dissections of the new 9&lt;sup&gt;th&lt;/sup&gt; Generation product is in the L3 cache per core for the different models. In previous generations, the Core i7 parts had 2 MB of L3 cache per core, while the Core i5 had 1.5 MB of L3 cache per core, and the Core i3 was split between some with 2MB and others with 1.5MB. This time around, Intel is only putting the full cache on the highest Core i9 parts, and reducing the Core i7 to 1.5MB of L3 per core. This will have a slight knock-on effect on performance, which when we get the processors will be an interesting metric to test.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;I’ve had an 8-Core for Years!&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Depending on where you draw the line for ‘consumer’ processors, technically we have had 8-core Intel CPUs on the high-end desktop space for a number of years. The Core i7-5960X was released in August 2014, and features eight Haswell cores on the HEDT platform, with quad-channel DDR4-2133 memory and 44 PCIe lanes at 140W. Back then, on Intel’s 22nm process, the die size was around 355.52 mm2.&lt;/p&gt;
&lt;p&gt;Back when Intel launched the first Coffee Lake processors, the 6+2 die design of the i7-8700K was around ~151 mm2, an increase of ~26mm2 over the 4+2 design of the i7-7700K (~125mm2). That also took place during a jump from Intel’s official 14+ to 14++ manufacturing nodes, which due to a relaxed fin pitch made everything a bit bigger anyway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/lith_feature_size.png&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/lith_feature_size.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But if we take 26mm2 on the high end of adding a pair of cores to the die size, then we can predict that the 8+2 design of the Core i9-9900K should come in around ~177 mm2, or a 17% larger die size. At 177mm2, this would be half the size of the Core i7-5960X, although with only half the memory controllers and PCIe lanes too. Even with that, it’s a sizeable decrease.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/9900K%20Mockup.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/9900K%20Mockup_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;em&gt;This is a mockup of what a 9900K might look like&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is where I point out that in order for Intel to keep profit margins the same on its highest parts, that 17% increase in die area might directly translate to a 17% increase in price. At the time of writing this, Intel has not announced pricing, but at a tray price of $359 for the last generation 8700K 6+2 chip, a 17% increase puts it in the region of $420. Anything more than that, and Intel is either increasing its margins or dealing with how many chips actually bin to the required frequency. But as shown in the Amazon link above, $582 is a bigger increase.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Integrated Graphics&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;One topic that Intel has not focused on much in several generations (since Broadwell, really) is that of integrated graphics. All the chips announced for the 9&lt;sup&gt;th&lt;/sup&gt; generation family will still have the same GT2 configuration as the 8&lt;sup&gt;th&lt;/sup&gt; generation, including the new Core i9 parts. Officially these come under the 8+2 designation. Intel still believes that having a form of integrated graphics on these high-end, overclockable processors, is still a value addition to the platform. The only downside is the performance, and it won’t be winning any awards soon.&lt;/p&gt;
&lt;p&gt;The graphics will still be labelled as UHD Graphics 630, and use the same drivers as the 8&lt;sup&gt;th&lt;/sup&gt; gen family.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Motherboards and the Z390 Chipset&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;One of the worst kept secrets this year has been Intel’s Z390 chipset. If you believe everything the motherboard manufacturers tell me, most of them have been ready for this release for several months, hence why we’re going to see about 55+ new models of motherboard hit the market over the next few weeks.&lt;/p&gt;
&lt;p&gt;The Z390 chipset is an update to Z370, and both types of motherboards will support 8000-series and 9000-series processors (Z370 will need a BIOS update). The updates are similar to the updates seen with B360: native USB 3.1 10 Gbps ports, and integrated Wi-Fi on the chipset.&lt;/p&gt;
&lt;table border=&quot;0&quot; width=&quot;80%&quot;&gt;&lt;tbody readability=&quot;6.5&quot;&gt;&lt;tr class=&quot;tgrey&quot; readability=&quot;3&quot;&gt;&lt;td colspan=&quot;4&quot;&gt;Intel Z390, Z370 and Z270 Chipset Comparison&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;tlblue&quot;&gt;&lt;td&gt;Feature&lt;/td&gt;
&lt;td&gt;Z390&lt;/td&gt;
&lt;td&gt;Z370&lt;/td&gt;
&lt;td&gt;Z270&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Max PCH PCIe 3.0 Lanes&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Max USB 3.1 (Gen2/Gen1)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;6/10&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0/10&lt;/td&gt;
&lt;td&gt;0/10&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Total USB&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Max SATA Ports&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;PCIe Config&lt;/td&gt;
&lt;td&gt;x16&lt;br/&gt;x8/x8&lt;br/&gt;x8/x4/x4&lt;/td&gt;
&lt;td&gt;x16&lt;br/&gt;x8/x8&lt;br/&gt;x8/x4/x4&lt;/td&gt;
&lt;td&gt;x16&lt;br/&gt;x8/x8&lt;br/&gt;x8/x4/x4&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Memory Channels&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot;&gt;Intel Optane Memory Support&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot;&gt;Intel Rapid Storage Technology (RST)&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot;&gt;Max Rapid Storage Technology Ports&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot;&gt;Integrated 802.11ac WiFi MAC&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Intel Smart Sound&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;tlgrey&quot;&gt;Integrated SDXC (SDA 3.0) Support&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Y&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;DMI&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;td&gt;3.0&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Overclocking Support&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Intel vPro&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Max HSIO Lanes&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;Intel Smart Sound&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tlgrey&quot;&gt;ME Firmware&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The integrated Wi-Fi uses CNVi, which allows the motherboard manufacturer to use one of Intel’s three companion RF modules as a PHY, rather than using a potentially more expensive MAC+PHY combo from a different vendor (such as Broadcom). I have been told that the cost of implementing a CRF adds about $15 to the retail price of the board, so we are likely to see some vendors experiment with mid-price models with-and-without Wi-Fi using this method.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images.anandtech.com/doci/13401/Z390-Phantom-Gaming-ITX_ac_45.jpg&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.anandtech.com/doci/13401/Z390-Phantom-Gaming-ITX_ac_45_575px.jpg&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;em&gt;One of the more impressive motherboards with TB3 - the ASRock Z390 Phantom Gaming-ITX/ac&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the USB 3.1 Gen 2 ports, Type-A ports are supported natively and motherboard manufacturers will have to use re-driver chips to support Type-C reversibility. These come at extra cost, as one might expect. It will be interesting to see how manufacturers mix and match the Gen 2, Gen 1, and USB 2.0 ports on the rear panels, now they have a choice. I suspect it will come down to signal integrity on the traces on the motherboard.&lt;/p&gt;
&lt;p&gt;For the Z390 chipset and motherboards, we will have our usual every-board-overview posted today, covering every model the manufacturers would tell us about. Interestingly there is going to be a mini-ITX with Thunderbolt 3, and one board with a PLX chip! There are also some motherboards with Realtek’s 2.5G Ethernet controller, which consumes on 1.6 W – now if only we also had consumer grade switches.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Timeline: Full Launch on 19&lt;sup&gt;th&lt;/sup&gt; October, with Reviews&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;From here, Intel will have CPUs on shelves on October 19&lt;sup&gt;th&lt;/sup&gt; in most (if not all) major markets. The review embargo for the three K processors is also for the same date, at 9am Eastern Time. I’ll be running my new scripts on as many processors as possible. Let me know what comparisons you want to see in the comments below.&lt;/p&gt;

</description>
<pubDate>Mon, 08 Oct 2018 16:04:28 +0000</pubDate>
<dc:creator>Tomte</dc:creator>
<og:title>Intel Announces 9th Gen Core CPUs: Core i9-9900K (8-Core), i7-9700K, &amp; i5-9600K</og:title>
<og:type>article</og:type>
<og:url>https://www.anandtech.com/show/13401/intel-9th-gen-cpus-9900k-9700k-9600k</og:url>
<og:image>https://images.anandtech.com/doci/13401/i9-box_678x452.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.anandtech.com/show/13401/intel-9th-gen-cpus-9900k-9700k-9600k</dc:identifier>
</item>
<item>
<title>Calls between JavaScript and WebAssembly are finally fast</title>
<link>https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%f0%9f%8e%89/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%f0%9f%8e%89/</guid>
<description>&lt;p&gt;At Mozilla, we want WebAssembly to be as fast as it can be.&lt;/p&gt;&lt;p&gt;This started with its design, which gives it &lt;a href=&quot;https://hacks.mozilla.org/2017/02/what-makes-webassembly-fast&quot;&gt;great throughput&lt;/a&gt;. Then we improved load times with a &lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot;&gt;streaming baseline compiler&lt;/a&gt;. With this, we compile code faster than it comes over the network.&lt;/p&gt;
&lt;p&gt;So what’s next?&lt;/p&gt;
&lt;p&gt;One of our big priorities is making it easy to combine JS and WebAssembly. But function calls between the two languages haven’t always been fast. In fact, they’ve had a reputation for being slow, as I talked about in my &lt;a href=&quot;https://hacks.mozilla.org/2017/02/where-is-webassembly-now-and-whats-next/&quot;&gt;first series on WebAssembly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That’s changing, &lt;a href=&quot;https://bnjbvr.github.io/perf-wasm-calls/&quot;&gt;as you can see&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This means that in the latest version of Firefox Beta, calls between JS and WebAssembly are faster than non-inlined JS to JS function calls. Hooray! 🎉&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-500x503.png&quot; alt=&quot;Performance chart showing time for 100 million calls. wasm-to-js before: about 750ms. wasm-to-js after: about 450ms. JS-to-wasm before: about 5500ms. JS-to-wasm after: about 450ms. monomorphic JS-to-wasm before: about 5250ms. monomorphic JS-to-wasm before: about 250ms. wasm-to-builtin before: about 6000ms. wasm-to-builtin before: about 650ms.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32719&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So these calls are fast in Firefox now. But, as always, I don’t just want to tell you that these calls are fast. I want to explain how we made them fast. So let’s look at how we improved each of the different kinds of calls in Firefox (and by how much).&lt;/p&gt;
&lt;p&gt;But first, let’s look at how engines do these calls in the first place. (And if you already know how the engine handles function calls, you can skip to &lt;a href=&quot;https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-🎉/#optimizations&quot;&gt;the optimizations&lt;/a&gt;.)&lt;/p&gt;
&lt;h3&gt;How do function calls work?&lt;/h3&gt;
&lt;p&gt;Functions are a big part of JavaScript code. A function can do lots of things, such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;assign variables which are scoped to the function (called local variables)&lt;/li&gt;
&lt;li&gt;use functions that are built-in to the browser, like &lt;code&gt;Math.random&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;call other functions you’ve defined in your code&lt;/li&gt;
&lt;li&gt;return a value&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-01-1.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-01-1-500x248.png&quot; alt=&quot;A function with 4 lines of code: assigning a local variable with let w = 8; calling a built-in function with Math.random(); calling a user-defined function named randGrid(); and returning a value.&quot; width=&quot;500&quot; height=&quot;248&quot; class=&quot;alignnone size-large wp-image-32745&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-01-1-500x248.png 500w, https://hacks.mozilla.org/files/2018/10/02-01-1-250x124.png 250w, https://hacks.mozilla.org/files/2018/10/02-01-1-768x380.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But how does this actually work? How does writing this function make the machine do what you actually want? &lt;/p&gt;
&lt;p&gt;As I explained in my &lt;a href=&quot;https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/&quot;&gt;first WebAssembly article series&lt;/a&gt;, the languages that programmers use — like JavaScript — are very different than the language the computer understands. To run the code, the JavaScript we download in the .js file needs to be translated to the machine language that the machine understands. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/02-01-alien03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/02-01-alien03-500x286.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;286&quot; class=&quot;alignnone size-large wp-image-30493&quot; srcset=&quot;https://hacks.mozilla.org/files/2017/02/02-01-alien03-500x286.png 500w, https://hacks.mozilla.org/files/2017/02/02-01-alien03-220x125.png 220w, https://hacks.mozilla.org/files/2017/02/02-01-alien03-250x143.png 250w, https://hacks.mozilla.org/files/2017/02/02-01-alien03-768x440.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each browser has a built-in translator. This translator is sometimes called the JavaScript engine or JS runtime. However, these engines now handle WebAssembly too, so that terminology can be confusing. In this article, I’ll just call it the engine.&lt;/p&gt;
&lt;p&gt;Each browser has its own engine:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Chrome has V8&lt;/li&gt;
&lt;li&gt;Safari has JavaScriptCore (JSC)&lt;/li&gt;
&lt;li&gt;Edge has Chakra&lt;/li&gt;
&lt;li&gt;and in Firefox, we have SpiderMonkey&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Even though each engine is different, many of the general ideas apply to all of them. &lt;/p&gt;
&lt;p&gt;When the browser comes across some JavaScript code, it will fire up the engine to run that code. The engine needs to work its way through the code, going to all of the functions that need to be called until it gets to the end.&lt;/p&gt;
&lt;p&gt;I think of this like a character going on a quest in a videogame.&lt;/p&gt;
&lt;p&gt;Let’s say we want to play Conway’s Game of Life. The engine’s quest is to render the Game of Life board for us. But it turns out that it’s not so simple…&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-02-500x218.png&quot; alt=&quot;Engine asking Sir Conway function to explain life. Sir Conway sends the engine to the Universum Neu function to get a Universe.&quot; width=&quot;500&quot; height=&quot;218&quot; class=&quot;alignnone size-large wp-image-32721&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-02-500x218.png 500w, https://hacks.mozilla.org/files/2018/10/02-02-250x109.png 250w, https://hacks.mozilla.org/files/2018/10/02-02-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So the engine goes over to the next function. But the next function will send the engine on more quests by calling more functions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-03-500x218.png&quot; alt=&quot;Engine going to Universum Neu to ask for a universe. Universum Neu sends the engine to Randgrid.&quot; width=&quot;500&quot; height=&quot;218&quot; class=&quot;alignnone size-large wp-image-32722&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-03-500x218.png 500w, https://hacks.mozilla.org/files/2018/10/02-03-250x109.png 250w, https://hacks.mozilla.org/files/2018/10/02-03-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The engine keeps having to go on these nested quests until it gets to a function that just gives it a result. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-04-500x218.png&quot; alt=&quot;Rnadgrid giving the engine a grid.&quot; width=&quot;500&quot; height=&quot;218&quot; class=&quot;alignnone size-large wp-image-32723&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-04-500x218.png 500w, https://hacks.mozilla.org/files/2018/10/02-04-250x109.png 250w, https://hacks.mozilla.org/files/2018/10/02-04-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then it can come back to each of the functions that it spoke to, in reverse order.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-05.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-05-500x218.png&quot; alt=&quot;The engine returning through all of the functions.&quot; width=&quot;500&quot; height=&quot;218&quot; class=&quot;alignnone size-large wp-image-32724&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-05-500x218.png 500w, https://hacks.mozilla.org/files/2018/10/02-05-250x109.png 250w, https://hacks.mozilla.org/files/2018/10/02-05-768x334.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If the engine is going to do this correctly — if it’s going to give the right parameters to the right function and be able to make its way all the way back to the starting function — it needs to keep track of some information. &lt;/p&gt;
&lt;p&gt;It does this using something called a stack frame (or a call frame). It’s basically like a sheet of paper that has the arguments to go into the function, says where the return value should go, and also keeps track of any of the local variables that the function creates. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-06.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-06-500x311.png&quot; alt=&quot;A stack frame, which is basically a form with lines for arguments, locals, a return value, and more.&quot; width=&quot;500&quot; height=&quot;311&quot; class=&quot;alignnone size-large wp-image-32746&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-06-500x311.png 500w, https://hacks.mozilla.org/files/2018/10/02-06-250x156.png 250w, https://hacks.mozilla.org/files/2018/10/02-06-768x478.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The way it keeps track of all of these slips of paper is by putting them in a stack. The slip of paper for the function that it is currently working with is on top. When it finishes that quest, it throws out the slip of paper. Because it’s a stack, there’s a slip of paper underneath (which has now been revealed by throwing away the old one). That’s where we need to return to. &lt;/p&gt;
&lt;p&gt;This stack of frames is called the call stack.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-07.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/02-07-500x230.png&quot; alt=&quot;a stack of stack frames, which is basically a pile of papers&quot; width=&quot;500&quot; height=&quot;230&quot; class=&quot;alignnone size-large wp-image-32747&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/02-07-500x230.png 500w, https://hacks.mozilla.org/files/2018/10/02-07-250x115.png 250w, https://hacks.mozilla.org/files/2018/10/02-07-768x354.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The engine builds up this call stack as it goes. As functions are called, frames are added to the stack. As functions return, frames are popped off of the stack. This keeps happening until we get all the way back down and have popped everything out of the stack.&lt;/p&gt;
&lt;p&gt;So that’s the basics of how function calls work. Now, let’s look at what made function calls between JavaScript and WebAssembly slow, and talk about how we’ve made this faster in Firefox.&lt;/p&gt;
&lt;h3 id=&quot;optimizations&quot;&gt;How we made WebAssembly function calls fast&lt;/h3&gt;
&lt;p&gt;With recent work in Firefox Nightly, we’ve optimized calls in both directions — both JavaScript to WebAssembly and WebAssembly to JavaScript. We’ve also made calls from WebAssembly to built-ins faster.&lt;/p&gt;
&lt;p&gt;All of the optimizations that we’ve done are about making the engine’s work easier. The improvements fall into two groups:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reducing bookkeeping —which means getting rid of unnecessary work to organize stack frames&lt;/li&gt;
&lt;li&gt;Cutting out intermediaries — which means taking the most direct path between functions&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Let’s look at where each of these came into play.&lt;/p&gt;
&lt;h3&gt;Optimizing WebAssembly » JavaScript calls&lt;/h3&gt;
&lt;p&gt;When the engine is going through your code, it has to deal with functions that are speaking two different kinds of language—even if your code is all written in JavaScript. &lt;/p&gt;
&lt;p&gt;Some of them—the ones that are running in the interpreter—have been turned into something called byte code. This is closer to machine code than JavaScript source code, but it isn’t quite machine code (and the interpreter does the work). This is pretty fast to run, but not as fast as it can possibly be.&lt;/p&gt;
&lt;p&gt;Other functions — those which are being called a lot — are turned into machine code directly by the &lt;a href=&quot;https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/&quot;&gt;just-in-time compiler&lt;/a&gt; (JIT). When this happens, the code doesn’t run through the interpreter anymore.&lt;/p&gt;
&lt;p&gt;So we have functions speaking two languages; byte code and machine code.&lt;/p&gt;
&lt;p&gt;I think of these different functions which speak these different languages as being on different continents in our videogame. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-01-500x503.png&quot; alt=&quot;A game map with two continents—One with a country called The Interpreter Kingdom, and the other with a country called JITland&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32727&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-01-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/03-01-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/03-01-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The engine needs to be able to go back and forth between these continents. But when it does this jump between the different continents, it needs to have some information, like the place it left from on the other continent (which it will need to go back to). The engine also wants to separate the frames that it needs. &lt;/p&gt;
&lt;p&gt;To organize its work, the engine gets a folder and puts the information it needs for its trip in one pocket — for example, where it entered the continent from. &lt;/p&gt;
&lt;p&gt; It will use the other pocket to store the stack frames. That pocket will expand as the engine accrues more and more stack frames on this continent.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-02-500x340.png&quot; alt=&quot;A folder with a map on the left side, and the stack of frames on the right.&quot; width=&quot;500&quot; height=&quot;340&quot; class=&quot;alignnone size-large wp-image-32728&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-02-500x340.png 500w, https://hacks.mozilla.org/files/2018/10/03-02-250x170.png 250w, https://hacks.mozilla.org/files/2018/10/03-02-768x522.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sidenote: if you’re looking through the code in SpiderMonkey, these “folders” are called activations.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Each time it switches to a different continent, the engine will start a new folder. The only problem is that to start a folder, it has to go through C++. And going through C++ adds significant cost.&lt;/p&gt;
&lt;p&gt;This is the trampolining that I talked about in my first series on WebAssembly. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/06-02-trampoline01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/06-02-trampoline01-500x399.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;399&quot; class=&quot;alignnone size-large wp-image-30534&quot; srcset=&quot;https://hacks.mozilla.org/files/2017/02/06-02-trampoline01-500x399.png 500w, https://hacks.mozilla.org/files/2017/02/06-02-trampoline01-250x200.png 250w, https://hacks.mozilla.org/files/2017/02/06-02-trampoline01-768x613.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Every time you have to use one of these trampolines, you lose time. &lt;/p&gt;
&lt;p&gt;In our continent metaphor, it would be like having to do a mandatory layover on Trampoline Point for every single trip between two continents.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-04-500x503.png&quot; alt=&quot;Same map as before, with a new Trampoline country on the same continent as The Interpreter Kingdom. An arrow goes from The Interpreter Kingdom, to Trampoline, to JITland.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32730&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-04-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/03-04-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/03-04-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So how did this make things slower when working with WebAssembly? &lt;/p&gt;
&lt;p&gt;When we first added WebAssembly support, we had a different type of folder for it. So even though JIT-ed JavaScript code and WebAssembly code were both compiled and speaking machine language, we treated them as if they were speaking different languages. We were treating them as if they were on separate continents.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-05.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-05-500x503.png&quot; alt=&quot;Same map with Wasmania island next to JITland. There is an arrow going from JITland to Trampoline to Wasmania. On Trampoline, the engine asks a shopkeeper for folders.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32731&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-05-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/03-05-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/03-05-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was unnecessarily costly in two ways:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it creates an unnecessary folder, with the setup and teardown costs that come from that&lt;/li&gt;
&lt;li&gt;it requires that trampolining through C++ (to create the folder and do other setup)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We fixed this by generalizing the code to use the same folder for both JIT-ed JavaScript and WebAssembly. It’s kind of like we pushed the two continents together, making it so you don’t need to leave the continent at all.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-06.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-06-500x503.png&quot; alt=&quot;SpiderMonkey engineer Benjamin Bouvier pushing Wasmania and JITland together&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32732&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-06-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/03-06-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/03-06-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this, calls from WebAssembly to JS were almost as fast as JS to JS calls.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/03-03-500x503.png&quot; alt=&quot;Same perf graph as above with wasm-to-JS circled.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32729&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/03-03-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/03-03-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/03-03-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We still had a little work to do to speed up calls going the other way, though.&lt;/p&gt;
&lt;h3&gt;Optimizing JavaScript » WebAssembly calls&lt;/h3&gt;
&lt;p&gt;Even in the case of JIT-ed JavaScript code, where JavaScript and WebAssembly are speaking the same language, they still use different customs. &lt;/p&gt;
&lt;p&gt;For example, to handle dynamic types, JavaScript uses something called boxing.&lt;/p&gt;
&lt;p&gt;Because JavaScript doesn’t have explicit types, types need to be figured out at runtime. The engine keeps track of the types of values by attaching a tag to the value. &lt;/p&gt;
&lt;p&gt;It’s as if the JS engine put a box around this value. The box contains that tag indicating what type this value is. For example, the zero at the end would mean integer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-01-500x103.png&quot; alt=&quot;Two binary numbers with a box around them, with a 0 label on the box.&quot; width=&quot;500&quot; height=&quot;103&quot; class=&quot;alignnone size-large wp-image-32748&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/boxing-01-500x103.png 500w, https://hacks.mozilla.org/files/2018/10/boxing-01-250x52.png 250w, https://hacks.mozilla.org/files/2018/10/boxing-01-768x158.png 768w, https://hacks.mozilla.org/files/2018/10/boxing-01.png 800w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In order to compute the sum of these two integers, the system needs to remove that box. It removes the box for a and then removes the box for b.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-02-500x150.png&quot; alt=&quot;Two lines, the first with boxed numbers from the last image. The second with unboxed numbers.&quot; width=&quot;500&quot; height=&quot;150&quot; class=&quot;alignnone size-large wp-image-32749&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/boxing-02-500x150.png 500w, https://hacks.mozilla.org/files/2018/10/boxing-02-250x75.png 250w, https://hacks.mozilla.org/files/2018/10/boxing-02-768x230.png 768w, https://hacks.mozilla.org/files/2018/10/boxing-02.png 800w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then it adds the unboxed values together.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-03-500x191.png&quot; alt=&quot;Three lines, with the third line being the two numbers added together&quot; width=&quot;500&quot; height=&quot;191&quot; class=&quot;alignnone size-large wp-image-32750&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/boxing-03-500x191.png 500w, https://hacks.mozilla.org/files/2018/10/boxing-03-250x95.png 250w, https://hacks.mozilla.org/files/2018/10/boxing-03-768x293.png 768w, https://hacks.mozilla.org/files/2018/10/boxing-03.png 800w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then it needs to add that box back around the results so that the system knows the result’s type.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/boxing-04-500x258.png&quot; alt=&quot;Four lines, with the fourth line being the numbers added together with a box around it.&quot; width=&quot;500&quot; height=&quot;258&quot; class=&quot;alignnone size-large wp-image-32751&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/boxing-04-500x258.png 500w, https://hacks.mozilla.org/files/2018/10/boxing-04-250x129.png 250w, https://hacks.mozilla.org/files/2018/10/boxing-04-768x396.png 768w, https://hacks.mozilla.org/files/2018/10/boxing-04.png 800w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This turns what you expect to be 1 operation into 4 operations… so in cases where you don’t need to box (like statically typed languages) you don’t want to add this overhead.&lt;/p&gt;
&lt;p&gt;Sidenote: JavaScript JITs can avoid these extra boxing/unboxing operations in many cases, but in the general case, like function calls, JS needs to fall back to boxing.&lt;/p&gt;
&lt;p&gt;This is why WebAssembly expects parameters to be unboxed, and why it doesn’t box its return values. WebAssembly is statically typed, so it doesn’t need to add this overhead. WebAssembly also expects values to be passed in at a certain place — in registers rather than the stack that JavaScript usually uses. &lt;/p&gt;
&lt;p&gt;If the engine takes a parameter that it got from JavaScript, wrapped inside of a box, and gives it to a WebAssembly function, the WebAssembly function wouldn’t know how to use it. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-01-500x503.png&quot; alt=&quot;Engine giving a wasm function boxed values, and the wasm function being confused.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32733&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/04-01-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/04-01-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/04-01-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, before it gives the parameters to the WebAssembly function, the engine needs to unbox the values and put them in registers.&lt;/p&gt;
&lt;p&gt;To do this, it would go through C++ again. So even though we didn’t need to trampoline through C++ to set up the activation, we still needed to do it to prepare the values (when going from JS to WebAssembly).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-02-500x503.png&quot; alt=&quot;The engine going to Trampoline to get the numbers unboxed before going to Wasmania&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32734&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/04-02-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/04-02-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/04-02-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Going to this intermediary is a huge cost, especially for something that’s not that complicated. So it would be better if we could cut the middleman out altogether.&lt;/p&gt;
&lt;p&gt;That’s what we did. We took the code that C++ was running — the entry stub — and made it directly callable from JIT code. When the engine goes from JavaScript to WebAssembly, the entry stub un-boxes the values and places them in the right place. With this, we got rid of the C++ trampolining.&lt;/p&gt;
&lt;p&gt;I think of this as a cheat sheet. The engine uses it so that it doesn’t have to go to the C++. Instead, it can unbox the values when it’s right there, going between the calling JavaScript function and the WebAssembly callee.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-03-500x503.png&quot; alt=&quot;The engine looking at a cheat sheet for how to unbox values on its way from JITland to Wasmania.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32735&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/04-03-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/04-03-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/04-03-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So that makes calls from JavaScript to WebAssembly fast. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/04-04-500x503.png&quot; alt=&quot;Perf chart with JS to wasm circled.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32736&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/04-04-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/04-04-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/04-04-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But in some cases, we can make it even faster. In fact, we can make these calls even faster than JavaScript » JavaScript calls in many cases.&lt;/p&gt;
&lt;h3&gt;Even faster JavaScript » WebAssembly: Monomorphic calls&lt;/h3&gt;
&lt;p&gt;When a JavaScript function calls another function, it doesn’t know what the other function expects. So it defaults to putting things in boxes.&lt;/p&gt;
&lt;p&gt;But what about when the JS function knows that it is calling a particular function with the same types of arguments every single time? Then that calling function can know in advance how to package up the arguments in the way that the callee wants them. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-01-500x503.png&quot; alt=&quot;JS function not boxing values&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32737&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/05-01-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/05-01-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/05-01-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an instance of the general JS JIT optimization known as “type specialization”. When a function is specialized, it knows exactly what the function it is calling expects. This means it can prepare the arguments exactly how that other function wants them… which means that the engine doesn’t need that cheat sheet and spend extra work on unboxing.&lt;/p&gt;
&lt;p&gt;This kind of call — where you call the same function every time — is called a monomorphic call. In JavaScript, for a call to be monomorphic, you need to call the function with the exact same types of arguments each time. But because WebAssembly functions have explicit types, calling code doesn’t need to worry about whether the types are exactly the same — they will be coerced on the way in.&lt;/p&gt;
&lt;p&gt;If you can write your code so that JavaScript is always passing the same types to the same WebAssembly exported function, then your calls are going to be very fast. In fact, these calls are faster than many JavaScript to JavaScript calls.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-04-500x503.png&quot; alt=&quot;Perf chart with monomorphic JS to wasm circled&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32740&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/05-04-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/05-04-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/05-04-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Future work&lt;/h4&gt;
&lt;p&gt;There’s only one case where an optimized call from JavaScript » WebAssembly is not faster than JavaScript » JavaScript. That is when JavaScript has in-lined a function.&lt;/p&gt;
&lt;p&gt;The basic idea behind in-lining is that when you have a function that calls the same function over and over again, you can take an even bigger shortcut. Instead of having the engine go off to talk to that other function, the compiler can just copy that function into the calling function. This means that the engine doesn’t have to go anywhere — it can just stay in place and keep computing. &lt;/p&gt;
&lt;p&gt;I think of this as the callee function teaching its skills to the calling function.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/05-03-500x503.png&quot; alt=&quot;Wasm function teaching the JS function how to do what it does.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32739&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/05-03-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/05-03-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/05-03-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an optimization that JavaScript engines make when a function is being run a lot — when it’s “hot” — and when the function it’s calling is relatively small. &lt;/p&gt;
&lt;p&gt;We can definitely add support for in-lining WebAssembly into JavaScript at some point in the future, and this is a reason why it’s nice to have both of these languages working in the same engine. This means that they can use the same JIT backend and the same compiler intermediate representation, so it’s possible for them to interoperate in a way that wouldn’t be possible if they were split across different engines. &lt;/p&gt;
&lt;h3&gt;Optimizing WebAssembly » Built-in function calls&lt;/h3&gt;
&lt;p&gt;There was one more kind of call that was slower than it needed to be: when WebAssembly functions were calling built-ins. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Built-ins&lt;/a&gt; are functions that the browser gives you, like &lt;code&gt;Math.random&lt;/code&gt;. It’s easy to forget that these are just functions that are called like any other function.&lt;/p&gt;
&lt;p&gt;Sometimes the built-ins are implemented in JavaScript itself, in which case they are called self-hosted. This can make them faster because it means that you don’t have to go through C++: everything is just running in JavaScript. But some functions are just faster when they’re implemented in C++.&lt;/p&gt;
&lt;p&gt;Different engines have made different decisions about which built-ins should be written in self-hosted JavaScript and which should be written in C++. And engines often use a mix of both for a single built-in.&lt;/p&gt;
&lt;p&gt;In the case where a built-in is written in JavaScript, it will benefit from all of the optimizations that we have talked about above. But when that function is written in C++, we are back to having to trampoline.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-01.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-01-500x503.png&quot; alt=&quot;Engine going from wasmania to trampoline to built-in&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32741&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/06-01-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/06-01-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/06-01-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These functions are called a lot, so you do want calls to them to be optimized. To make it faster, we’ve added a fast path specific to built-ins. When you pass a built-in into WebAssembly, the engine sees that what you’ve passed it is one of the built-ins, at which point it knows how to take the fast-path. This means you don’t have to go through that trampoline that you would otherwise.&lt;/p&gt;
&lt;p&gt;It’s kind of like we built a bridge over to the built-in continent. You can use that bridge if you’re going from WebAssembly to the built-in. (&lt;em&gt;Sidenote: The JIT already did have optimizations for this case, even though it’s not shown in the drawing.&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-02-500x503.png&quot; alt=&quot;A bridge added between wasmania and built-in&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32742&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/06-02-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/06-02-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/06-02-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this, calls to these built-ins are much faster than they used to be.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-03.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-03-500x503.png&quot; alt=&quot;Perf chart with wasm to built-in circled.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32743&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/06-03-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/06-03-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/06-03-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Future work&lt;/h4&gt;
&lt;p&gt;Currently the only built-ins that we support this for are mostly limited to the math built-ins. That’s because WebAssembly currently only has support for integers and floats as value types. &lt;/p&gt;
&lt;p&gt;That works well for the math functions because they work with numbers, but it doesn’t work out so well for other things like the DOM built-ins. So currently when you want to call one of those functions, you have to go through JavaScript. That’s what &lt;a href=&quot;https://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/#wasm-bindgen&quot;&gt;wasm-bindgen&lt;/a&gt; does for you.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-04.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/06-04-500x503.png&quot; alt=&quot;Engine going from wasmania to the JS Data Marshall Islands to built-in&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32744&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/06-04-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/06-04-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/06-04-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But WebAssembly is getting &lt;a href=&quot;https://github.com/WebAssembly/reference-types&quot;&gt;more flexible types very soon&lt;/a&gt;. Experimental support for the current proposal is already landed in Firefox Nightly behind the pref &lt;code&gt;javascript.options.wasm_gc&lt;/code&gt;. Once these types are in place, you will be able to call these other built-ins directly from WebAssembly without having to go through JS.&lt;/p&gt;
&lt;p&gt;The infrastructure we’ve put in place to optimize the Math built-ins can be extended to work for these other built-ins, too. This will ensure many built-ins are as fast as they can be.&lt;/p&gt;
&lt;p&gt;But there are still a couple of built-ins where you will need to go through JavaScript. For example, if those built-ins are called as if they were using &lt;code&gt;new&lt;/code&gt; or if they’re using a getter or setter. These remaining built-ins will be addressed with the &lt;a href=&quot;https://github.com/WebAssembly/host-bindings&quot;&gt;host-bindings proposal&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;So that’s how we’ve made calls between JavaScript and WebAssembly fast in Firefox, and you can expect other browsers to do the same soon.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02.png&quot;&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/10/01-02-500x503.png&quot; alt=&quot;Performance chart showing time for 100 million calls. wasm-to-js before: about 750ms. wasm-to-js after: about 450ms. JS-to-wasm before: about 5500ms. JS-to-wasm after: about 450ms. monomorphic JS-to-wasm before: about 5250ms. monomorphic JS-to-wasm before: about 250ms. wasm-to-builtin before: about 6000ms. wasm-to-builtin before: about 650ms.&quot; width=&quot;500&quot; height=&quot;503&quot; class=&quot;alignnone size-large wp-image-32719&quot; srcset=&quot;https://hacks.mozilla.org/files/2018/10/01-02-500x503.png 500w, https://hacks.mozilla.org/files/2018/10/01-02-250x251.png 250w, https://hacks.mozilla.org/files/2018/10/01-02-768x772.png 768w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Thank you&lt;/h3&gt;
&lt;p&gt;Thank you to Benjamin Bouvier, Luke Wagner, and Till Schneidereit for their input and feedback.&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;6.5970873786408&quot;&gt;
&lt;p&gt;Lin is an engineer on the Mozilla Developer Relations team. She tinkers with JavaScript, WebAssembly, Rust, and Servo, and also draws code cartoons.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/lclarkmozilla-com/&quot;&gt;More articles by Lin Clark…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Mon, 08 Oct 2018 15:37:42 +0000</pubDate>
<dc:creator>lainon</dc:creator>
<og:url>https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%f0%9f%8e%89</og:url>
<og:title>Calls between JavaScript and WebAssembly are finally fast 🎉 – Mozilla Hacks - the Web developer blog</og:title>
<og:description>At Mozilla, we want WebAssembly to be as fast as it can be. This started with its design, which gives it great throughput. Then we improved load times with a ...</og:description>
<og:image>https://hacks.mozilla.org/files/2018/10/call_opts_featured_image.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%f0%9f%8e%89/</dc:identifier>
</item>
</channel>
</rss>