<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Facebook Secretly Saved Videos Users Deleted</title>
<link>http://nymag.com/selectall/2018/03/facebook-secretly-saved-videos-users-deleted.html</link>
<guid isPermaLink="true" >http://nymag.com/selectall/2018/03/facebook-secretly-saved-videos-users-deleted.html</guid>
<description>&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf50ts006ysby6qeqp5b4i@published&quot; data-word-count=&quot;61&quot;&gt;Have you downloaded your &lt;a href=&quot;http://nymag.com/selectall/2018/03/how-to-download-all-your-facebook-data.html&quot;&gt;Facebook data archive&lt;/a&gt; yet? Facebook makes it easy to obtain a ZIP file of all the data it has on you: your status updates, your friend list, your messages … and, as I and several people I spoke with were surprised to discover, every video you ever filmed on the platform — including videos you never published.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf6nfr00193d55eubkgkpm@published&quot; data-word-count=&quot;100&quot;&gt;Cambridge Analytica’s effect on the election is still disputed, but if there’s one thing everyone can agree is true in the wake of the scandal over its data-harvesting, it’s that we’ve paid far too little attention to the scale and scope of the data that Facebook has collected on us over our years of platform use. It’s true that, in most cases, we’ve “consented” to this kind of data-gathering by clicking “okay” on a dense terms-of-service contract, and neglecting to opt out. But given how often the details are ignored, it’s disconcerting to discover exactly what data has been gathered.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbienkt000w2c5pk92fmqym@published&quot; data-word-count=&quot;99&quot;&gt;Last week, Facebook users around the world discovered that Facebook’s Android app had, in some cases, Hoovered up extensive call data without their awareness. “When this feature is enabled, uploading your contacts also allows us to use information like when a call or text was made or received. This feature does not collect the content of your calls or text messages,” Facebook &lt;a href=&quot;https://newsroom.fb.com/news/2018/03/fact-check-your-call-and-sms-history/&quot;&gt;said&lt;/a&gt;, noting that users had to initially opt in to have their communication tracked. But it seems unlikely that many of the people who “opted in” were aware that they’d done so, or what exactly it meant.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf6nfy001c3d55jydudzmd@published&quot; data-word-count=&quot;59&quot;&gt;And call logs aren’t the only data Facebook’s been holding to user surprise. Earlier this week, like many people around the world, my sister Bailey downloaded her Facebook data archives. Along with the contact lists and relationship statuses was something unexpected: several different videos of her attempting to play a scale on a wooden flute in her childhood bedroom.&lt;/p&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf6nfx001b3d552bt3ylyz@published&quot; data-word-count=&quot;96&quot;&gt;Each video, she discovered, was a different “take” — recorded on Facebook, but then, she assumed, discarded before she posted the final version to a friend’s wall. (In the archive, you can infer which video was posted on a wall versus the ones that weren’t based on the comments. Videos that were never published are commentless.) In one of the clips, you can hear Kircher say, exasperatedly, that it is her 13th take. At the end of the clip, which isn’t to her liking, she groans and reaches forward, apparently to delete the video and try again.&lt;/p&gt;
&lt;div data-uri=&quot;nymag.com/selectall/_components/youtube/instances/cjfbf72la001p3d5510zdfof2@published&quot; class=&quot;youtube&quot; data-element-id=&quot;youtube-player-iwPSUDma&quot; data-video-id=&quot;mLFlUw7Qwjw&quot; data-autoplay-next-video=&quot;true&quot; data-autoplay-video=&quot;false&quot; data-playlist=&quot;PLtmzdzCeRsyHh67c-VlEj8Nqpj5nL8pf6&quot; data-track-video-type=&quot;Editorial&quot; data-track-video-location=&quot;article&quot; data-track-video-title=&quot;Bailey Playing The Flute&quot; data-track-video-duration=&quot;12&quot; data-track-channel-name=&quot;New York Magazine&quot; data-editable=&quot;inline&quot;&gt;

&lt;p class=&quot;youtube-caption&quot;&gt;Bailey Kircher never posted this video on Facebook, but still found a copy of it in her Facebook archive.&lt;/p&gt;
&lt;/div&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf8b7c001w3d55kyh0o61v@published&quot; data-word-count=&quot;106&quot;&gt;How did this happen? In the pre–Facebook Live era, leaving videos on your friends’ walls was something of a crude FaceTime. You’d post a video, they’d respond with a video, and so forth. Importantly, Facebook had a feature that let users film videos via webcam on Facebook itself — that is, without ever leaving the Facebook site to use a video recorder. Once you were done filming, Facebook would show you a preview of your clip. If you decided to do another take, you could click to discard that video and try it again. Except, the video wasn’t actually deleted. Instead, Facebook apparently saved your unused clip.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf8xpy00213d550gn1vgn1@published&quot; data-word-count=&quot;106&quot;&gt;Another co-worker, Brittany Stephanis, found over 100 videos in her archive and says that she only ever publicly posted about a third of them. The earliest date back to Christmas Day in 2008 when Stephanis, then 13, started recording videos to wish her friends a happy holiday. Stephanis says that her archive contains videos she clearly never planned to shared with anyone. “There are videos of me just checking my teeth,” she explained. My sister also had videos — rehearsing for school musicals and cheerleading — where she was using Facebook’s desktop camera to review herself and then erase, or so she thought, the video forever.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbigtk3000z2c5phthenwag@published&quot; data-word-count=&quot;49&quot;&gt;I thought this was a funny quirk of my sister’s. And then I looked at my own data archive. There, at the bottom of the list of videos I’d put on the platform, I found clips that appear to have never been posted to Facebook but were saved anyway.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbg4azs000u3d55zibgneb0@published&quot; data-word-count=&quot;127&quot;&gt;From what I can tell, most people haven’t noticed this yet. (Or, possibly, they have and are unperturbed.) One reason might be that the videos are saved in the FLV format, short for Flash Video. Most default video players can’t read them, but you can watch them in VLC. You can’t preview a .flv file in a file browser, which could make it a little trickier to figure out what videos Facebook has of yours. To find yours, download your data archive — instructions &lt;a href=&quot;http://nymag.com/selectall/2018/03/how-to-download-all-your-facebook-data.html&quot;&gt;here&lt;/a&gt; — and open the file. Select the index, which will open your archive in your web browser. From there, click the video section to see what’s what. (You might need to download the free app VLC player, which can play Flash videos.)&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbf8xpz00223d55lggvjof5@published&quot; data-word-count=&quot;167&quot;&gt;Facebook saving data you didn’t share isn’t an entirely new concern. Back in 2013, then–Facebook intern and Ph.D. student at Carnegie Mellon Sauvik Das and Adam Kramer, a Facebook data scientist, put together &lt;a href=&quot;http://www.slate.com/articles/technology/future_tense/2013/12/facebook_self_censorship_what_happens_to_the_posts_you_don_t_publish.html&quot;&gt;a study&lt;/a&gt; on what they deemed “self-censorship” on the platform. Self-censorship, according to their work, was anything a user typed in the status box but ultimately didn’t post. Data that Facebook can track. Facebook’s current &lt;a href=&quot;https://www.facebook.com/about/privacy/&quot;&gt;data policy&lt;/a&gt; says that the company can “collect the content and other information you provide when you use our Services, including when you sign up for an account, create or share, and message or communicate with others.” “Create” is the operative word in there. By that logic, Facebook technically &lt;em&gt;could&lt;/em&gt; save any video a user filmed but did not publish because you &lt;em&gt;created&lt;/em&gt; it on the platform. Still, that requires the kind of close read of the fine print that most humans, at least not before &lt;a href=&quot;http://nymag.com/selectall/2018/03/why-should-i-even-care-about-the-facebook-stuff.html&quot;&gt;Facebook’s ongoing Cambridge Analytica privacy fiasco&lt;/a&gt;, likely aren’t taking the time to do.&lt;/p&gt;


&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbfbq9500293d555q0ic6xd@published&quot; data-word-count=&quot;122&quot;&gt;An industry expert recently told me about another “open secret” — that when Instagram first introduced video, the company would begin uploading a user’s video while they wrote a caption. That way, when the user pressed “post,” the video would already be good to go, and the user wouldn’t have to wait while the video uploaded in real time. Instagram co-founder Mike Krieger explained this in a presentation on the “&lt;a href=&quot;https://speakerdeck.com/mikeyk/secrets-to-lightning-fast-mobile-design&quot;&gt;Secrets to Lightning Fast Mobile Design&lt;/a&gt;” in 2011. It doesn’t seem unreasonable that a similar system might have been used at Facebook to create a faster, cleaner user experience. Except, unlike Instagram which says it threw out the data if a user cancelled the post, it appears Facebook was keeping the videos.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbfbsxq002d3d55mvhg9ux5@published&quot; data-word-count=&quot;109&quot;&gt;I reached out to Facebook for comment today, and the company asked me to connect them with Kircher so she could consent to the company investigating why these outtakes were in her data archives. The representative told me the company thinks they’ve “gotten to the bottom of it,” but that Facebook was still figuring out what it could share. Later, a Facebook representative provided a statement saying that the company is still looking into the matter: “We’ve heard that when accessing their information from our Download Your Information tool, some people are seeing their old videos that do not appear on their profile or Activity Log. We are investigating.”&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbfby01002h3d55lwfb51u2@published&quot; data-word-count=&quot;73&quot;&gt;The videos that Stephanis and Kircher found in their archives are pretty harmless, at least in terms of content. But it’s easy to imagine a user filming something that wasn’t quite so juvenile and being horrified to discover that Facebook has a copy. Apropos of, well, everything, now seems like a good time to mention that Mark Zuckerberg keeps a piece of tape over his webcam. Seems like he might be onto something.&lt;/p&gt;
&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbni9ct000u3d55pnrmbxxj@published&quot; data-word-count=&quot;16&quot;&gt;&lt;strong&gt;Update, March 28, 6:16 p.m.:&lt;/strong&gt; &lt;em&gt;This piece has been edited to include a statement from Facebook.&lt;/em&gt;&lt;/p&gt;

&lt;p class=&quot;clay-paragraph&quot; data-editable=&quot;text&quot; data-uri=&quot;nymag.com/selectall/_components/clay-paragraph/instances/cjfbfby01002i3d55neqqtajb@published&quot; data-word-count=&quot;22&quot;&gt;If you’ve also found questionable things in your Facebook data archive, I’d love to hear about it. Please email me at &lt;a href=&quot;mailto:madison.kircher@nymag.com&quot;&gt;madison.kircher@nymag.com&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 31 Mar 2018 20:16:10 +0000</pubDate>
<dc:creator>walterbell</dc:creator>
<og:title>Ever Record a Video on Facebook? Facebook Still Has It.</og:title>
<og:url>http://nymag.com/selectall/2018/03/facebook-secretly-saved-videos-users-deleted.html</og:url>
<og:description>Facebook quietly saved videos users filmed on the platform but never actually posted.</og:description>
<og:image>https://pixel.nymag.com/imgs/daily/selectall/2018/03/28/28-facebook-video-grid.w1200.h630.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://nymag.com/selectall/2018/03/facebook-secretly-saved-videos-users-deleted.html</dc:identifier>
</item>
<item>
<title>You can&amp;#039;t Rust that</title>
<link>http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that/</link>
<guid isPermaLink="true" >http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that/</guid>
<description>&lt;p class=&quot;date&quot;&gt;written on Saturday, March 31, 2018&lt;/p&gt;
&lt;p&gt;The last year has been fun because I could build a lot for really nice stuff for &lt;a class=&quot;reference external&quot; href=&quot;https://sentry.io/&quot;&gt;Sentry&lt;/a&gt; in Rust and for the first time the development experience was without bigger roadblocks. While we have been using Rust before it now feels different because the ecosystem is so much more stable and we ran less against language or tooling issues.&lt;/p&gt;
&lt;p&gt;However talking to people new to Rust (and even brainstorming APIs with coworkers) it's hard to get rid of the feeling that Rust can be a mind bending adventure and that the best way to have a stress free experience is knowing upfront what you cannot (or should not attempt to) do. Knowing that certain things just cannot be done helps putting your mind back back on the right track.&lt;/p&gt;
&lt;p&gt;So here are things not to do in Rust and what to do instead which I think should be better known.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;things-move&quot; readability=&quot;64.930576254347&quot;&gt;
&lt;h2&gt;Things Move&lt;/h2&gt;
&lt;p&gt;The biggest difference between Rust and C++ for me is the address-of operator (&lt;cite&gt;&amp;amp;&lt;/cite&gt;). In C++ (like C) that thing just returns the address of whatever its applied to and while the language might put some restrictions on you when doing so is a good idea, there is generally nothing stopping you from taking an address of a value and then using it.&lt;/p&gt;
&lt;p&gt;In Rust this is just usually not useful. First of all the moment you take a reference in Rust the borrow checker looms over your code and prevents you from doing anything stupid. More importantly however is that even if it's safe to take a reference it's not nearly as useful as you might think. The reason for this is that objects in Rust generally move around.&lt;/p&gt;
&lt;p&gt;Just take how objects are typically constructed in Rust:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the &lt;cite&gt;new&lt;/cite&gt; method (not taking &lt;cite&gt;self&lt;/cite&gt;) is a static method on the implementation. It also returns &lt;cite&gt;Point&lt;/cite&gt; here by value. This is &lt;em&gt;generally&lt;/em&gt; how values are constructed. Because of this taking a reference in the function does not do anything useful as the value is potentially moved to a new location on calling. This is very different to how this whole thing works in C++:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A constructor in C++ is already operating on an allocated piece of memory. Before the constructor even runs something already provided the memory where &lt;cite&gt;this&lt;/cite&gt; points to (typically either somewhere on the stack or through the &lt;cite&gt;new&lt;/cite&gt; operator on the heap). This means that C++ code can generally assume that an instance does not move around. It's not uncommon that C++ code does really stupid things with the &lt;cite&gt;this&lt;/cite&gt; pointer as a result (like storing it in another object).&lt;/p&gt;
&lt;p&gt;This difference might sound very minor but it's one of the most fundamental ones that has huge consequences for Rust programmers. In particular it is one of the reasons you cannot have self referential structs. While there is talk about expressing types that cannot be moved in Rust there is no reasonable workaround for this at the moment (The future direction &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/rust-lang/rfcs/pull/2349&quot;&gt;is the pinning system from RFC 2349&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So what do we do currently instead? This depends a bit on the situation but generally the answer is to replace pointers with some form of Handle. So instead of just storing an absolute pointer in a struct one would instead store the offset to some reference value. Later if the pointer is needed it's calculated on demand.&lt;/p&gt;
&lt;p&gt;For instance we use a pattern like this to work with memory mapped data:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;28&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transmute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;borrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#[repr(C)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phantom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;marker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PhantomData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#[repr(C)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Into&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transmute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_raw_parts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case &lt;cite&gt;Data&amp;lt;'a&amp;gt;&lt;/cite&gt; only holds a copy-on-write reference to the backing byte storage (an owned &lt;cite&gt;Vec&amp;lt;u8&amp;gt;&lt;/cite&gt; or a borrowed &lt;cite&gt;&amp;amp;[u8]&lt;/cite&gt; slice). The byte slice starts with the bytes from &lt;cite&gt;Header&lt;/cite&gt; and they are resolved on demand when &lt;cite&gt;header()&lt;/cite&gt; is called. Likewise a single slice is resolved similarly by the call to &lt;cite&gt;load_slice()&lt;/cite&gt; which takes a stored slice and then looks it up by offsetting on demand.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To recap: instead of storing a pointer to an object itself, store some information so that you can calculate the pointer later. This is also commonly called using “handles”.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;refcounts-are-not-dirty&quot; readability=&quot;59.5&quot;&gt;
&lt;h2&gt;Refcounts are not Dirty&lt;/h2&gt;
&lt;p&gt;Another quite interesting case that is surprisingly easy to run into also has to do with the borrow checker. The borrow checker doesn't let you do stupid things with data you do not own and sometimes that can feel like running into a wall because you think you know better. In many of those cases the answer is just one &lt;cite&gt;Rc&amp;lt;T&amp;gt;&lt;/cite&gt; away however.&lt;/p&gt;
&lt;p&gt;To make this less mysterious let's look at the following piece of C++ code:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;thread_local&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This seems pretty innocent but it has a problem: nothing stops you from borrowing a field from &lt;cite&gt;current_config&lt;/cite&gt; and then passing it somewhere else. This is why in Rust the direct equivalent of that looks significantly more complicated:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;cp&quot;&gt;#[derive(Default)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thread_local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// here we can *immutably* work with config&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should make it immediately obvious that this API is not fun. First of all the config is immutable. Secondly we can only access the config object within the closure passed to the &lt;cite&gt;with&lt;/cite&gt; function. Any attempt of trying to borrow from this config object and have it outlive the closure will fail (probably with something like “cannot infer an appropriate lifetime”). There is no way around it!&lt;/p&gt;
&lt;p&gt;This API is clearly objectively bad. Imagine we want to look up more of those thread local variables. So let's look at both of those issues separately. As hinted above ref counting is generally a really nice solution to deal with the underlying issue here: it's unclear who the owner is.&lt;/p&gt;
&lt;p&gt;Let's imagine for a second this config object just happens to be bound to the current thread but is not really owned by the current thread. What happens if the config is passed to another thread but the current thread shuts down? This is a typical example where one can think of logically the config having multiple owners. Since we might want to pass from one thread to another we want an atomically reference counted wrapper for our config: an &lt;cite&gt;Arc&amp;lt;Config&amp;gt;&lt;/cite&gt;. This lets us increase the refcount in the with block and return it. The refactored version looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#[derive(Default)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thread_local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// here we can *immutably* work with config&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The change here is that now the thread local holds a reference counted config. As such we can introduce a function that returns an &lt;cite&gt;Arc&amp;lt;Config&amp;gt;&lt;/cite&gt;. In the closure from the TLS we increment the refcount with the &lt;cite&gt;clone()&lt;/cite&gt; method on the &lt;cite&gt;Arc&amp;lt;Config&amp;gt;&lt;/cite&gt; and return it. Now any caller to &lt;cite&gt;Config::current&lt;/cite&gt; gets that refcounted config and can hold on to it for as long as necessary. For as long as there is code holding the Arc, the config within it is kept alive. Even if the originating thread died.&lt;/p&gt;
&lt;p&gt;So how do we make it mutable like in the C++ version? We need something that provides us with interior mutability. There are two options for this. One is to wrap the &lt;cite&gt;Config&lt;/cite&gt; in something like an &lt;cite&gt;RwLock&lt;/cite&gt;. The second one is to have the &lt;cite&gt;Config&lt;/cite&gt; use locking internally. For instance one &lt;em&gt;might&lt;/em&gt; want to do this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#[derive(Default)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigInner&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thread_local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not need this type to work with threads you can also replace &lt;cite&gt;Arc&lt;/cite&gt; with &lt;cite&gt;Rc&lt;/cite&gt; and &lt;cite&gt;RwLock&lt;/cite&gt; with &lt;cite&gt;RefCell&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To recap: when you need to borrow data that outlives the lifetime of something you need refcounting. Don't be afraid of using `Arc` but be aware that this locks you to immutable data. Combine with interior mutability (like `RwLock`) to make the object mutable.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;kill-all-setters&quot; readability=&quot;35.5&quot;&gt;
&lt;h2&gt;Kill all Setters&lt;/h2&gt;
&lt;p&gt;But the above pattern of effectively having &lt;cite&gt;Arc&amp;lt;RwLock&amp;lt;Config&amp;gt;&amp;gt;&lt;/cite&gt; can be a bit problematic and swapping it for &lt;cite&gt;RwLock&amp;lt;Arc&amp;lt;Config&amp;gt;&amp;gt;&lt;/cite&gt; can be significantly better.&lt;/p&gt;
&lt;p&gt;Rust done well is a liberating experience because if programmed well it's shockingly easy to parallelize your code after the fact. Rust encourages immutable data and that makes everything so much easier. However in the previous example we just introduced interior mutability. Imagine we have multiple threads running, all referencing the same config but one flips a flag. What happens to concurrently running code that now is not expecting the flag to randomly flip? Because of that interior mutability should be used carefully. Ideally an object once created does not change its state in such a way. In general I think such a type of setter should be an anti pattern.&lt;/p&gt;
&lt;p&gt;So instead of doing this what about we take a step back to where we were earlier where configs were not mutable? What if we never mutate the config after we created it but we add an API to promote another config to current. This means anyone who is currently holding on to a config can safely know that the values won't change.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sync&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#[derive(Default)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;thread_local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CURRENT_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RwLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug_mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now configs are still initialized automatically by default but a new config can be set by constructing a &lt;cite&gt;Config&lt;/cite&gt; object and calling &lt;cite&gt;make_current&lt;/cite&gt;. That will move the config into an &lt;cite&gt;Arc&lt;/cite&gt; and then bind it to the current thread. Callers to &lt;cite&gt;current()&lt;/cite&gt; will get that &lt;cite&gt;Arc&lt;/cite&gt; back and can then again do whatever they want.&lt;/p&gt;
&lt;p&gt;Likewise you can again switch &lt;cite&gt;Arc&lt;/cite&gt; for &lt;cite&gt;Rc&lt;/cite&gt; and &lt;cite&gt;RwLock&lt;/cite&gt; for &lt;cite&gt;RefCell&lt;/cite&gt; if you do not need this to work with threads.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To recap: instead of using interior mutability where an object changes its internal state, consider using a pattern where you promote new state to be current and current consumers of the old state will continue to hold on to it by putting an `Arc` into an `RwLock`.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;in-conclusion&quot; readability=&quot;9&quot;&gt;
&lt;h2&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;Honestly I wish I would have learned the above three things earlier than I did. Mostly because even if you know the patterns you might not necessarily know when to use them. So I guess the following mantra is now what I want to print out and hang somewhere:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;Handles, not self referential pointers&lt;/li&gt;
&lt;li&gt;Reference count your way out of lifetime / borrow checker hell&lt;/li&gt;
&lt;li&gt;Consider promoting new state instead of interior mutability&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p class=&quot;tags&quot;&gt;This entry was tagged &lt;a href=&quot;http://lucumr.pocoo.org/tags/rust/&quot;&gt;rust&lt;/a&gt; &lt;/p&gt;
</description>
<pubDate>Sat, 31 Mar 2018 16:00:58 +0000</pubDate>
<dc:creator>stablemap</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that/</dc:identifier>
</item>
<item>
<title>OVH CEO: Unlike Amazon, Google, “we will never be in competition with you”</title>
<link>http://www.datacenterdynamics.com/content-tracks/colo-cloud/ovh-ceo-unlike-amazon-google-we-will-never-be-in-competition-with-you/99939.fullarticle</link>
<guid isPermaLink="true" >http://www.datacenterdynamics.com/content-tracks/colo-cloud/ovh-ceo-unlike-amazon-google-we-will-never-be-in-competition-with-you/99939.fullarticle</guid>
<description>&lt;p&gt;The CEO of French hosting and cloud computing company OVH has promised his company will stick to the cloud, and not compete with its own customers.&lt;/p&gt;
&lt;p&gt;In a dig at hyperscalers like Amazon, Alibaba and Google, whose businesses are myriad, Octave Klaba highlighted the fact that turning to those companies can mean subsidizing entities that aim to take your business.&lt;/p&gt;
&lt;h2 id=&quot;Im_not_going_to_do_anything_you_can_do_Better&quot;&gt;I’m not going to do anything you can do. Better?&lt;/h2&gt;
&lt;div class=&quot;inline_image inline_image_right image_size_med fullsize&quot; data-attachment=&quot;24193&quot; data-sequence=&quot;1&quot;&gt;&lt;button class=&quot;show-fullscreen&quot; data-url=&quot;/Attachments.aspx?attype=I&amp;amp;atcode=24193&amp;amp;storycode=99939&quot;&gt;Show Fullscreen&lt;/button&gt;
&lt;p class=&quot;picture&quot;&gt;&lt;img alt=&quot;OVH, Beauharnois, Quebec&quot; src=&quot;http://www.datacenterdynamics.com/pictures/280xany/1/9/3/24193_OVH-Beauharnois-Quebec.jpg&quot; class=&quot;responsiveImage&quot; data-size-1=&quot;280xany&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;inline_title&quot;&gt;OVH, Beauharnois, Quebec&lt;/p&gt;
&lt;p class=&quot;inline_source&quot;&gt;&lt;cite&gt;Source: OVH&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“You might have a very good business, but if you choose a cloud provider that says ’okay it’s a good business you are doing and I can do this same business on my own,’ maybe it’s not the best choice for you,” Klaba said in a keynote at Data Centre World in London.&lt;/p&gt;
&lt;p&gt;“If your cloud provider can be, in the future, your competitor, what are the choices you have to make today? OVH’s business is cloud. We will never do anything else except cloud, and we will never be in competition with you, with the business that you are doing.&lt;/p&gt;
&lt;p&gt;“That’s not always the case with [service] providers in the world, and you see every day, every month, the new announcement of the cloud providers, the big giants of the Internet, that they are just going and going after your business.”&lt;/p&gt;
&lt;p&gt;Concerns about funding a competitor are thought to be the reason for US retailer Target recently &lt;a href=&quot;http://www.datacenterdynamics.com/content-tracks/colo-cloud/report-target-to-leave-aws-after-amazon-buys-whole-foods/98881.fullarticle&quot;&gt;shifting away from Amazon Web Services&lt;/a&gt;, after Amazon acquired grocery chain Whole Foods, and why Walmart made considerable efforts to diversify its cloud portfolio.&lt;/p&gt;
&lt;p&gt;Klaba also noted that “OVH is the only European company that provides cloud services on the global scale,” adding, “we just invested $1.5bn in infrastructure - 300,000 servers deployed, 27 data centers across 12 locations on three continents, 13Tbps of network capacity, 32 PoPs.&lt;/p&gt;
&lt;p&gt;“It’s a lot of responsibility in the choice of the cloud provider, we believe we can be an alternative cloud on the market,” he said.&lt;/p&gt;
</description>
<pubDate>Sat, 31 Mar 2018 15:09:16 +0000</pubDate>
<dc:creator>krn</dc:creator>
<og:title>OVH CEO: Unlike Amazon, Google, &quot;we will never be in competition with you&quot;</og:title>
<og:type>Article</og:type>
<og:url>http://www.datacenterdynamics.com/content-tracks/colo-cloud/ovh-ceo-unlike-amazon-google-we-will-never-be-in-competition-with-you/99939.fullarticle</og:url>
<og:description>European data center company is not planning to diversify into online shopping</og:description>
<og:image>http://www.datacenterdynamics.com/pictures/2000x2000fit/1/9/3/24193_OVH-Beauharnois-Quebec.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.datacenterdynamics.com/content-tracks/colo-cloud/ovh-ceo-unlike-amazon-google-we-will-never-be-in-competition-with-you/99939.fullarticle</dc:identifier>
</item>
<item>
<title>I almost lost my hearing from the lid on the tank of a toilet</title>
<link>https://threadreaderapp.com/thread/979583605637877760.html</link>
<guid isPermaLink="true" >https://threadreaderapp.com/thread/979583605637877760.html</guid>
<description>&lt;div readability=&quot;44&quot;&gt;Our (((enemies))) are trying to wipe THE WHITE RACE off the face of the planet via&lt;p&gt;WARS, DOMESTIC TERRORISM, MISCEGENATION, DISPOSSESSION/DISPLACEMENT, FINANCIAL STRANGULATION, ABORTION.&lt;/p&gt;&lt;p&gt;ARE THEY ALSO ATTACKING OUR FERTILITY VIA FOOD, WATER, VACCINATIONS?&lt;/p&gt;&lt;/div&gt;&lt;div readability=&quot;35.609561752988&quot;&gt;&quot;In his studies on the role of the &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/Aryan&quot;&gt;#Aryan&lt;/a&gt; (read &quot;&lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/Nordic&quot;&gt;#Nordic&lt;/a&gt;&quot; for Grant) in &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/history&quot;&gt;#history&lt;/a&gt;, the questionable place of the &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/Alpine&quot;&gt;#Alpine&lt;/a&gt; race, and the negative impact of the &lt;a class=&quot;entity-hashtag&quot; href=&quot;https://threadreaderapp.com/hashtag/Jews&quot;&gt;#Jews&lt;/a&gt;, Vacher de Lapouge is the most important and probably most direct influence on Grant...&quot;&lt;/div&gt;</description>
<pubDate>Sat, 31 Mar 2018 12:56:46 +0000</pubDate>
<dc:creator>shawndumas</dc:creator>
<og:title>Thread by @DrPhiltill: &quot;1. Wanna hear a weird but true story? (I have a few minutes to type, so here goes). I almost lost my hearing from the lid on the tank of a t […]&quot;</og:title>
<og:image>https://threadreaderapp.com/images/screenshots/thread/979583605637877760.jpg</og:image>
<og:url>https://threadreaderapp.com/thread/979583605637877760.html</og:url>
<og:description>Thread by @DrPhiltill: &quot;1. Wanna hear a weird but true story? (I have a few minutes to type, so here goes). I almost lost my hearing from the lid on the tank of a toilet. Noise-Induced Hearing Loss. You wouldn't think a toilet lid could be so l […]&quot;</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threadreaderapp.com/thread/979583605637877760.html</dc:identifier>
</item>
<item>
<title>It&amp;#039;s time to head back to RSS?</title>
<link>https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/</link>
<guid isPermaLink="true" >https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/</guid>
<description>&lt;p&gt;&lt;span class=&quot;lede&quot;&gt;The modern web&lt;/span&gt; contains no shortage of horrors, from ubiquitous ad trackers to all-consuming platforms to YouTube comments, generally. Unfortunately, there's no panacea for what ails this internet we've built. But anyone weary of black-box algorithms controlling what you see online at least has a respite, one that's been there all along but has often gone ignored. Tired of Twitter? Facebook fatigued? It's time to head back to RSS.&lt;/p&gt;
&lt;p&gt;For many of you, that means finding a replacement for &lt;a href=&quot;http://digg.com/reader&quot; target=&quot;_blank&quot;&gt;Digg Reader&lt;/a&gt;, which went the way of the ghost this month. Or maybe you haven't used RSS since five years ago, when Google Reader, the beloved firehose of news headlines &lt;a href=&quot;https://www.wired.com/2013/06/why-google-reader-got-the-ax/&quot;&gt;got the axe&lt;/a&gt;. For others, it means figuring out what the heck an RSS feed is in the first place—we'll get to that in just a minute. And some of you have already moved on to the next article in your Feedly queue.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;No matter what your current disposition, though, in this age of algorithmic overreach there's something deeply satisfying about finding stories beyond what your loudest Twitter follows shared, or that Facebook's News Feed optimized into your life. And lots of tools that can get you there.&lt;/p&gt;
&lt;h3 class=&quot;paywall&quot;&gt;Cue RSS&lt;/h3&gt;
&lt;p class=&quot;paywall&quot;&gt;RSS stands for Really Simple Syndication (or Rich Site Summary) and it was first stitched into the tapestry of the open web around the turn of the millennium. Its aim is straightforward: to make it easy to track updates to the content of a given website in a standardized format.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;In practice, and for your purposes, that means it can give you a comprehensive, regularly updated look at all of the content your favorite sites publish throughout the day. Think of it as the ultimate aggregator; every morsel from every source you care about, fed directly to you. Or, more commonly, fed to you through an intermediary known as an RSS feed reader, software that helps you wrangle all of those disparate headlines into something remotely manageable.&lt;/p&gt;

&lt;div class=&quot;inset-left-component paywall inset-left-component--pullquote&quot; readability=&quot;6&quot;&gt;
&lt;blockquote name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;'We're trying to keep things as they were.'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;Ben Wolf, The Old Reader&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paywall&quot;&gt;The difference between getting news from an RSS reader and getting it from Facebook or Twitter or Nuzzel or Apple News is a bit like the difference between a Vegas buffet and an a la carte menu. In either case, you decide what you actually want to consume. But the buffet gives you a whole world of options you otherwise might never have seen.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;&quot;There are multiple approaches to connecting to news. Social felt pretty interesting at first, but when you mix social and algorithmic, you can easily get into these noise bubbles, or areas where you don't necessarily feel 100 percent in control of the algorithm,&quot; says Edwin Khodabakchian, cofounder and CEO of popular RSS reader &lt;a href=&quot;https://feedly.com/&quot; target=&quot;_blank&quot;&gt;Feedly&lt;/a&gt;. &quot;A tool like Feedly gives you a more transparent and controllable way to connect to the information you need.&quot;&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;With 14 million users, Feedly is the largest RSS reader on the market. And it's easy to see why; it's as feature-full as one could hope for, and has been around since 2008. (It also &lt;a href=&quot;https://blog.feedly.com/priorities-keeping-the-site-up-and-adding-new-features/&quot; target=&quot;_blank&quot;&gt;inherited a sizeable chunk&lt;/a&gt; of Google Reader's jilted audience.) It's far from your only option, though.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;All RSS readers function within the same basic outline. You tell them what RSS feeds you'd like to follow—&lt;em&gt;The New York Times&lt;/em&gt;, say, or WIRED—and they collect every new headline those sites churn out, offering anything from a snippet of information to the full story, depending on how much the publisher allows. Each puts a slightly different spin on the process from there.&lt;/p&gt;


&lt;p class=&quot;paywall&quot;&gt;Feedly, for instance, has for the last two years gravitated toward being a tool for research rather than passive entertainment. That's partly in response to platforms eating the open web. &quot;If you go after entertainment, you're not competing against other reader news tools. You're really competing with Instagram and other things people do to kill time,&quot; says Khodabakchian. &quot;On the other hand, if you think of this as an intelligence tool, or research assistant, we see a huge and increasing demand for that.&quot;&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Still, Feedly has plenty to offer casual users. It has a clean user interface, and the free version of its service lets you follow 100 sources, categorized into up to three feeds—think News, Sports, Humor, or wherever your interests lie. It also shows how popular each story is, both on Feedly and across various social networks, to give you a sense of what people are reading without letting that information dictate what you see. Paid accounts—of which Feedly has about 100,000—get you more feeds and integrations, faster updates, and better tools for teams.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;For more of a throwback feel, you might try &lt;a href=&quot;https://theoldreader.com/&quot; target=&quot;_blank&quot;&gt;The Old Reader&lt;/a&gt;, which strips down the RSS reader experience while still emphasizing a social component.&lt;/p&gt;

&lt;p class=&quot;paywall&quot;&gt;&quot;In terms of evolution, we're coming from a different perspective,&quot; says Ben Wolf, whose Levee Labs acquired The Old Reader in 2013. &quot;We're trying to keep things as they were.&quot;&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;For the million or so Old Reader users, that means not many bells and whistles. Even the mechanism to add new feeds feels just a touch more onerous than you'll find elsewhere. But once you do get properly organized, it's a fast and light experience, and if you can convince some friends to join, its social features will help you cut through the clutter. Most of all, there's not much to get in the way of the headlines, which is what you came for in the first place.&lt;/p&gt;

&lt;p class=&quot;paywall&quot;&gt;Power users, meanwhile, might try &lt;a href=&quot;https://www.inoreader.com/&quot; target=&quot;_blank&quot;&gt;Inoreader&lt;/a&gt;, which offers for free many of the features—unlimited feeds and tags, and some key integrations—Feedly reserves for paid accounts. &quot;I would say that at the moment Feedly is ahead of us in terms of mass appeal design look and UX, which is something we will try to tackle with our upcoming redesign,&quot; says Victor Stankov, Inoreader's business development manager. &quot;Hardcore nerds love us way more than Feedly.&quot;&lt;/p&gt;

&lt;p class=&quot;paywall&quot;&gt;And those are just three options of many. The point being: In 2018, it's easy to find an RSS reader out there that suits your needs. Which, in hindsight, is no small miracle.&lt;/p&gt;
&lt;h3 class=&quot;paywall&quot;&gt;Throwback&lt;/h3&gt;
&lt;p class=&quot;paywall&quot;&gt;Five years ago, when Wolf took over The Old Reader, he offered a prescient &lt;a href=&quot;http://blog.theoldreader.com/post/67563942900/rss-and-the-open-web&quot; target=&quot;_blank&quot;&gt;insight&lt;/a&gt;: &quot;How long will it be before your Facebook stream is so full of promoted content, bizarre algorithmic decisions, and tracking cookie based shopping cart reminders that you won't be getting any valuable information,&quot; Wolf wrote. &quot;For as little as $60, a business can promote a page to Facebook users. It won't be long before your news feed is worthless.&quot;&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Which, well, here we are. Not only that, but two-thirds of Americans get at least some of their news from social media, according to a recent Pew Research Center &lt;a href=&quot;http://www.journalism.org/2017/09/07/news-use-across-social-media-platforms-2017/&quot; target=&quot;_blank&quot;&gt;study&lt;/a&gt;, leaving traditional sources behind.&lt;/p&gt;

&lt;div class=&quot;inset-left-component paywall inset-left-component--pullquote&quot; readability=&quot;10&quot;&gt;
&lt;blockquote name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;'RSS readers have not only survived in the era of social media, but are driving more and more attention back to themselves.'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;Victor Stankov, Inoreader&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paywall&quot;&gt;The platformization of the web has claimed many victims, RSS readers included. Google Reader's 2013 demise was a major blow; the company offed it in favor of &quot;products to address each user's interest with the right information at the right time via the most appropriate means,&quot; as it Google executive Richard Gingras &lt;a href=&quot;https://www.wired.com/2013/06/why-google-reader-got-the-ax/&quot;&gt;put it at the time&lt;/a&gt;. In other words, letting Google Now decide what you want. And the popular Digg Reader, which was born in response to that shuttering, closed its doors this week after a nearly four-year run.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Despite those setbacks, though, RSS has persisted. &quot;I can't really explain it, I would have thought given all the abuse it's taken over the years that it would be stumbling a lot worse,&quot; says programmer Dave Winer, who helped create RSS.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;It owes that resilience in part thanks to social media burnout. Stankov says search traffic to Inoreader has nearly doubled since 2015, all organically. &quot;RSS readers have not only survived in the era of social media, but are driving more and more attention back to themselves, as people are realizing the pitfalls&quot; of relying too much on Facebook and others, Stankov says.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;RSS readers obviously have their own shortcomings as well. The firehose approach can easily overwhelm, especially when multiple outlets all publish the same news at the same time. There are various solutions to this; Stankov points to filtering tools that help you skip the things you don't care about, while Wolf says The Old Reader has experimented with tools to help highlight just one story when there are dozens of near-identicals.&lt;/p&gt;


&lt;p class=&quot;paywall&quot;&gt;Different publishers also offer RSS feeds of varyingly helpful degrees. &lt;em&gt;The New York Times&lt;/em&gt; and &lt;em&gt;The Ringer&lt;/em&gt;, for instance, offer granular choices to help focus on the topics you care about, while others offer either only one big jumble or oddly sparse updates. Sites that publish infrequently can easily get lost in the mix. And multimedia elements sometimes don't cross the transom; &lt;em&gt;FiveThirtyEight&lt;/em&gt; recently ran a fun, interactive &lt;a href=&quot;https://fivethirtyeight.com/features/how-to-win-a-trade-war/&quot; target=&quot;_blank&quot;&gt;trade war game&lt;/a&gt; that RSS couldn't parse.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;The readers all have settings to help cope with these issues to varying degrees, where possible; it's just a matter of how many hours you want to spend shaping your RSS bonsai.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;&quot;Social media has mass appeal because it is simple to understand and use, with little to no challenges involved for the user,&quot; says Stankov. &quot;RSS is whole different game, where the main goal is for the end user to research and find valuable information sources, as well as periodically clean up the news feed from irrelevant noise.&quot; (Those who want a truly passive experience outside of Facebook and Twitter might look instead to aggregators like Apple News or Flipboard, or even Texture, which for $10 a month gives you full issues of dozens of magazine titles to flip through.)&lt;/p&gt;

&lt;p class=&quot;paywall&quot;&gt;Even with minimal tweaking, though, returning to RSS this week offered up a few fun surprises I never would have seen otherwise: the Yankees &lt;a href=&quot;http://www.espn.com/mlb/story/_/id/22936745/mlb-warns-new-york-yankees-beer-foam-art-current-players-league-rules&quot; target=&quot;_blank&quot;&gt;getting in trouble&lt;/a&gt; for player beer-foam art; an American &lt;a href=&quot;https://fivethirtyeight.com/features/an-american-will-play-for-the-world-chess-championship/&quot; target=&quot;_blank&quot;&gt;contending&lt;/a&gt; for the world chess championship; the &lt;a href=&quot;http://www.vulture.com/2018/03/ben-affleck-on-back-tattoo-im-doing-just-fine.html&quot; target=&quot;_blank&quot;&gt;latest&lt;/a&gt; on Ben Affleck's hilariously oversized back tattoo. These aren't the stories everyone is reading. But they're the ones I want to read.&lt;/p&gt;
&lt;h3 class=&quot;paywall&quot;&gt;RSS Evolution&lt;/h3&gt;
&lt;p class=&quot;paywall&quot;&gt;While RSS readers offer a sanctuary from the algorithmic approach, they're also not opposed to using algorithms of their own, as they continue to evolve and regain relevance. That's not quite the conflict it might seem.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;&quot;Machines can have a big role in helping understand the information, so algorithms can be very useful, but for that they have to be transparent and the user has to feel in control,&quot; says Khodabakchian. &quot;What's missing today with the black-box algorithms is where they look over your shoulder, and don't trust you to be able to tell what's right.&quot;&lt;/p&gt;


&lt;p class=&quot;paywall&quot;&gt;With its focus on professional users, Feedly hopes AI can better connect users with niche experts. Wolf, too, touts AI as a way to better flag standout stories. &quot;I think algorithms are great,&quot; Wolf says. &quot;I think the problem is when the algorithms are run by advertising companies.&quot;&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;And despite Digg Reader's demise, new RSS tools continue to come online. Even Winer has re-entered the fray, this week introducing &lt;a href=&quot;http://feedbase.io/&quot; target=&quot;_blank&quot;&gt;feedbase&lt;/a&gt;, a database of feeds that makes it easy to see what others subscribe to, ideally prompting discovery and an even more open approach. &quot;I thought it might be a good time to try to add an important feature to RSS that was always part of the vision, dynamic subscription lists,&quot; Winer says.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Still, the lasting appeal of RSS remains the parts that haven't changed: the unfiltered view of the open web, and the chance to make your own decisions about what you find there.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;&quot;The most amazing thing to me about RSS is that no one really went away from it,&quot; says Wolf. &quot;It still exists. Somehow through all of this. It's crazy, in a way, that when you go away from RSS and then come back to it, it's all still there.&quot;&lt;/p&gt;
</description>
<pubDate>Sat, 31 Mar 2018 04:15:18 +0000</pubDate>
<dc:creator>kawera</dc:creator>
<og:type>article</og:type>
<og:title>It's Time For an RSS Revival</og:title>
<og:description>After years of letting algorithms make up our minds for us, the time is right to go back to basics.</og:description>
<og:image>https://media.wired.com/photos/5abd6d2e2b6a90582b5d8b33/191:100/pass/rss-01.jpg</og:image>
<og:url>https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wired.com/story/rss-readers-feedly-inoreader-old-reader/</dc:identifier>
</item>
<item>
<title>An Update on Last Week’s Accident</title>
<link>https://www.tesla.com/blog/update-last-week%E2%80%99s-accident</link>
<guid isPermaLink="true" >https://www.tesla.com/blog/update-last-week%E2%80%99s-accident</guid>
<description>&lt;p&gt;Since posting our &lt;a href=&quot;https://www.tesla.com/blog/what-we-know-about-last-weeks-accident&quot;&gt;first update&lt;/a&gt;, we have been working as quickly as possible to establish the facts of last week’s accident. Our hearts are with the family and friends who have been affected by this tragedy.&lt;/p&gt;
&lt;p&gt;The safety of our customers is our top priority, which is why we are working closely with investigators to understand what happened, and what we can do to prevent this from happening in the future. After the logs from the computer inside the vehicle were recovered, we have more information about what may have happened.&lt;/p&gt;
&lt;p&gt;In the moments before the collision, which occurred at 9:27 a.m. on Friday, March 23rd, Autopilot was engaged with the adaptive cruise control follow-distance set to minimum. The driver had received several visual and one audible hands-on warning earlier in the drive and the driver’s hands were not detected on the wheel for six seconds prior to the collision. The driver had about five seconds and 150 meters of unobstructed view of the concrete divider with the crushed crash attenuator, but the vehicle logs show that no action was taken.&lt;/p&gt;
&lt;p&gt;The reason this crash was so severe is because the crash attenuator, a highway safety barrier which is designed to reduce the impact into a concrete lane divider, had been crushed in a prior accident without being replaced. We have never seen this level of damage to a Model X in any other crash.&lt;/p&gt;
&lt;p&gt;Over a year ago, our first iteration of Autopilot was found by the U.S. government to reduce crash rates by as much as 40%. Internal data confirms that recent updates to Autopilot have improved system reliability.&lt;/p&gt;
&lt;p&gt;In the US, there is one automotive fatality every 86 million miles across all vehicles from all manufacturers. For Tesla, there is one fatality, including known pedestrian fatalities, every 320 million miles in vehicles equipped with Autopilot hardware. If you are driving a Tesla equipped with Autopilot hardware, you are 3.7 times less likely to be involved in a fatal accident.&lt;/p&gt;
&lt;p&gt;Tesla Autopilot does not prevent all accidents – such a standard would be impossible – but it makes them much less likely to occur. It unequivocally makes the world safer for the vehicle occupants, pedestrians and cyclists.&lt;/p&gt;
&lt;p&gt;No one knows about the accidents that didn’t happen, only the ones that did. The consequences of the public not using Autopilot, because of an inaccurate belief that it is less safe, would be extremely severe. There are about 1.25 million automotive deaths worldwide. If the current safety level of a Tesla vehicle were to be applied, it would mean about 900,000 lives saved per year. We expect the safety level of autonomous cars to be 10 times safer than non-autonomous cars.&lt;/p&gt;
&lt;p&gt;In the past, when we have brought up statistical safety points, we have been criticized for doing so, implying that we lack empathy for the tragedy that just occurred. Nothing could be further from the truth. We care deeply for and feel indebted to those who chose to put their trust in us. However, we must also care about people now and in the future whose lives may be saved if they know that Autopilot improves safety. None of this changes how devastating an event like this is or how much we feel for our customer's family and friends. We are incredibly sorry for their loss.&lt;/p&gt;
</description>
<pubDate>Sat, 31 Mar 2018 01:49:06 +0000</pubDate>
<dc:creator>runesoerensen</dc:creator>
<og:title>An Update on Last Week’s Accident</og:title>
<og:description>Since posting our first update, we have been working as quickly as possible to establish the facts of last week’s accident. Our hearts are with the family and friends who have been affected by this tragedy.</og:description>
<og:image>https://www.tesla.com/sites/default/files/blog_images/tesla_announcement_social.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tesla.com/blog/update-last-week%E2%80%99s-accident</dc:identifier>
</item>
<item>
<title>The joy of max()</title>
<link>https://lwn.net/Articles/750306/</link>
<guid isPermaLink="true" >https://lwn.net/Articles/750306/</guid>
<description>&lt;div readability=&quot;33&quot;&gt;

&lt;p&gt;[Posted March 28, 2018 by corbet]&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;71.105442176871&quot;&gt;LWN recently &lt;a href=&quot;https://lwn.net/Articles/749064/&quot;&gt;looked at the kernel's &lt;tt&gt;max()&lt;/tt&gt; macro&lt;/a&gt; and the effort put into ensuring that it would evaluate to a &quot;constant expression&quot; as seen by the compiler. After a number of iterations, it would appear that the problem has been solved. For your reading pleasure, here is the new form of &lt;tt&gt;max()&lt;/tt&gt;, extracted from the patch &lt;a href=&quot;https://lwn.net/Articles/750307/&quot;&gt;posted&lt;/a&gt; by Kees Cook:
&lt;pre&gt;
    #define __typecheck(x, y) \
                (!!(sizeof((typeof(x)*)1 == (typeof(y)*)1)))

    #define __is_constant(x) \
        (sizeof(int) == sizeof(*(1 ? ((void*)((long)(x) * 0l)) : (int*)1)))

    #define __no_side_effects(x, y) \
                (__is_constant(x) &amp;amp;&amp;amp; __is_constant(y))

    #define __safe_cmp(x, y) \
                (__typecheck(x, y) &amp;amp;&amp;amp; __no_side_effects(x, y))

    #define __cmp(x, y, op)     ((x) op (y) ? (x) : (y))

    #define __cmp_once(x, y, op) ({     \
                typeof(x) __x = (x);    \
                typeof(y) __y = (y);    \
                __cmp(__x, __y, op); })

    #define __careful_cmp(x, y, op)                     \
                __builtin_choose_expr(__safe_cmp(x, y), \
                                      __cmp(x, y, op), __cmp_once(x, y, op))
 
    #define max(x, y)   __careful_cmp(x, y, &amp;gt;)
&lt;/pre&gt;
&lt;p&gt;The above definitions should, of course, be immediately obvious to any LWN reader. For those who want an extra hint or two, though, the patch posting includes a few explanatory comments.&lt;/p&gt;
&lt;hr width=&quot;60%&quot; align=&quot;left&quot; /&gt;
(&lt;a href=&quot;https://lwn.net/login?target=/Articles/750306/&quot;&gt;Log in&lt;/a&gt; to post comments)&lt;/div&gt;</description>
<pubDate>Fri, 30 Mar 2018 21:12:24 +0000</pubDate>
<dc:creator>thefox</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lwn.net/Articles/750306/</dc:identifier>
</item>
<item>
<title>Tesla crash victim had complained about auto-pilot in same location</title>
<link>http://abc7news.com/automotive/i-team-exclusive-victim-who-died-in-tesla-crash-had-complained-about-auto-pilot/3275600/</link>
<guid isPermaLink="true" >http://abc7news.com/automotive/i-team-exclusive-victim-who-died-in-tesla-crash-had-complained-about-auto-pilot/3275600/</guid>
<description>&lt;div readability=&quot;142.68315301391&quot;&gt;
&lt;p&gt;MOUNTAIN VIEW, Calif. (KGO) --&lt;/p&gt;
&quot;Walter was just a straight up, caring guy,&quot; Shawn Price told the ABC7 News I-Team. Friends and family are mourning the death of Apple engineer Walter Huang after he crashed in his Tesla in Mountain View Friday.&lt;p&gt;&lt;strong&gt;EXCLUSIVE: &lt;a href=&quot;http://abc7news.com/automotive/exclusive-Autopilot-part-of-tesla-crash-investigation-i-team-rides-in-model-x-to-site/3284757/&quot;&gt;Autopilot part of Tesla crash investigation, I-Team rides in Model X to site&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;The ABC7 I-Team has word of a major development in the investigation. His family says Huang complained about the Tesla's auto-pilot &quot;before&quot; the accident. Dan Noyes has an exclusive report.&lt;p&gt;Walter Huang's family tells Dan Noyes he took his Tesla to the dealer, complaining that -- on multiple occasions -- the auto-pilot veered toward that same barrier -- the one his Model X hit on Friday when he died.&lt;/p&gt;&lt;p&gt;ABC7 News Photographer Dean Smith captured exclusive video today of investigators from the CHP's Multidisciplinary Accident Investigation Team and National Transportation Safety Board at a San Mateo tow yard, inspecting the wreckage of the Tesla Model X involved in that fatal crash on southbound 101 Friday. We spotted them taking a control module out of the vehicle, tucking it into an evidence bag.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;EXCLUSIVE: &lt;a href=&quot;http://abc7news.com/automotive/exclusive-i-team-investigates-why-caltrans-didnt-fix-safety-barrier-before-tesla-driver-died-there/3280399/&quot;&gt;I-Team investigates why CalTrans didn't fix safety barrier before Tesla driver died there&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The NTSB told Dan Noyes from their Washington headquarters, they recovered both the restraint control module and infotainment module on Wednesday.&lt;/p&gt;&lt;p&gt;NTSB Spokesman Christopher O'Neil said, &quot;We're going to work with CHP and Tesla to download the information from those modules and then see what data is available to us that might give insights into what was going on during the accident sequence.&quot;&lt;/p&gt;
&lt;br/&gt;We're learning much more about the victim -- 38-year-old Walter Huang had a wife and two kids, lived in Foster City, worked for 13 years as a programmer at Electronic Arts. This past November, he got a job as an Apple engineer and bought his new Tesla, posting a picture on his Facebook page.&lt;p&gt;He showed the SUV to his friends and former co-workers; we spoke with two outside Electronic Arts on Wednesday.&lt;/p&gt;&lt;p&gt;&quot;He was proud,&quot; said Shawn Price. &quot;He was showing the gull wings, I remember going, a little bit of jealousy, like well.&quot;&lt;/p&gt;
&lt;strong&gt;RELATED: &lt;a href=&quot;http://abc7news.com/automotive/fire-chief-tesla-crash-shows-electric-car-fires-could-strain-department-resources/3266061/&quot;&gt;Fire chief says Tesla crash shows electric car fires could strain department resources&lt;/a&gt;&lt;/strong&gt;&lt;p&gt;Dan Noyes also spoke and texted with Walter Huang's brother, Will, today. He confirmed Walter was on the way to work at Apple when he died.&lt;/p&gt;&lt;p&gt;He also makes a startling claim -- that before the crash, Walter complained &quot;7-10 times the car would swivel toward that same exact barrier during auto-pilot. Walter took it into dealership addressing the issue, but they couldn't duplicate it there.&quot;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Noyes:&lt;/strong&gt; &quot;The family is telling me they provided an invoice to investigators, that the victim took the car in because it kept veering at the same barrier. How important is that information?&quot;&lt;br/&gt;&lt;strong&gt;O'Neil&quot;&lt;/strong&gt; &quot;That information has been received by the CHP, they've been acting on it for some time now.&quot;&lt;/p&gt;&lt;p&gt;Tesla would not comment on the information we've learned, and directed us to last night's blog post, &quot;Our data shows that Tesla owners have driven this same stretch of highway with Autopilot engaged roughly 85,000 times since Autopilot was first rolled out in 2015. ... There are over 200 successful Autopilot trips per day on this exact stretch of road.&quot;&lt;/p&gt;&lt;p&gt;Tesla also posted these photos that raise another important question: they show what's called a &quot;crash attenuator&quot; or safety barrier in the proper condition ... and the way it was the day before Walter Huang's crash ... collapsed after a different accident.&lt;/p&gt;&lt;p&gt;Will Huang texted us, &quot;That ultimately should've saved my brother's life. We've seen videos of similar crash with cushion and the driver walked out of it unharmed.&quot;&lt;/p&gt;
&lt;br/&gt;Walter Huang's friends are remembering his contributions to the gaming world. &quot;He did some good stuff on some great games that I know some viewers out there will know him for,&quot; Shawn Price told the I-Team.&lt;br/&gt;And they're missing his friendship during trips to the gym.&lt;p&gt;&quot;We would get together just work it out and he would be there keeping you safe,&quot; said Price. &quot;I mean that's what spotters do keep you safe and I know very much that he did the same thing for his family.&quot;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;RELATED: &lt;a href=&quot;http://abc7news.com/automotive/tesla-claims-missing-safety-barrier-played-role-in-deadly-crash/3272688/&quot;&gt;Tesla claims missing safety barrier played role in deadly crash&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&quot;He slept with his kids when they had nightmares,&quot; Travis Hoffstetter told us. &quot;He painted his daughters nails, he let his daughter paint his nails, just did like everything awesome that you should do as a dad he did.&quot;&lt;/p&gt;&lt;p&gt;We called, but no word from CalTrans about that collapsed safety barrier that Walter Huang hit. His friends are raising money for Walter's wife and kids, to handle the expenses of the funeral and life after his death. If you're interested, &lt;a href=&quot;https://www.gofundme.com/ripwalterhuang&quot;&gt;click here&lt;/a&gt; for the link.&lt;/p&gt;
&lt;br/&gt;Caltrans offered a statement:&lt;p&gt;&lt;em&gt;&quot;We are reviewing the facts and circumstances of this incident and are cooperating with the National Transportation Safety Board's ongoing investigation. Safety is our top priority and Caltrans will carefully evaluate the investigation's findings and take appropriate actions.&quot;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Tesla did not comment.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://abc7news.com/iteam/&quot;&gt;Click here&lt;/a&gt; for the latest stories by Dan Noyes and the I-Team and &lt;a href=&quot;http://abc7news.com/tag/tesla/&quot;&gt;click here&lt;/a&gt; for more stories and videos related to Tesla.&lt;/strong&gt;
&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;(Copyright ©2018 KGO-TV. All Rights Reserved.)&lt;/p&gt;</description>
<pubDate>Fri, 30 Mar 2018 20:56:51 +0000</pubDate>
<dc:creator>ucaetano</dc:creator>
<og:type>article</og:type>
<og:url>http://abc7news.com/3275600/</og:url>
<og:title>I-TEAM EXCLUSIVE: Victim who died in Tesla crash had complained about Autopilot</og:title>
<og:description>Friends and family are mourning the death of Apple engineer Walter Huang after he crashed in his Tesla in Mountain View Friday.</og:description>
<og:image>http://cdn.abclocal.go.com/content/kgo/images/cms/3275676_1280x720.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://abc7news.com/automotive/i-team-exclusive-victim-who-died-in-tesla-crash-had-complained-about-auto-pilot/3275600/</dc:identifier>
</item>
<item>
<title>How Cambridge Analytica’s Facebook targeting model really worked</title>
<link>http://www.niemanlab.org/2018/03/this-is-how-cambridge-analyticas-facebook-targeting-model-really-worked-according-to-the-person-who-built-it/</link>
<guid isPermaLink="true" >http://www.niemanlab.org/2018/03/this-is-how-cambridge-analyticas-facebook-targeting-model-really-worked-according-to-the-person-who-built-it/</guid>
<description>&lt;p&gt;The researcher whose work is at the center of the &lt;a href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot;&gt;Facebook–Cambridge Analytica data analysis and political advertising uproar&lt;/a&gt; has revealed that his method worked much like the one &lt;a href=&quot;https://medium.com/netflix-techblog/netflix-recommendations-beyond-the-5-stars-part-1-55838468f429&quot;&gt;Netflix uses to recommend movies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In an email to me, Cambridge University scholar Aleksandr Kogan explained how his statistical model processed Facebook data for Cambridge Analytica. The accuracy he claims suggests it works about as well as &lt;a href=&quot;https://www.cambridge.org/core/books/hacking-the-electorate/C0D269F47449B042767A51EC512DD82E&quot;&gt;established voter-targeting methods&lt;/a&gt; based on demographics like race, age, and gender.&lt;/p&gt;
&lt;p&gt;If confirmed, Kogan’s account would mean the digital modeling Cambridge Analytica used was &lt;a href=&quot;https://www.youtube.com/watch?v=APqU_EJ5d3U&quot;&gt;hardly the virtual crystal ball&lt;/a&gt; &lt;a href=&quot;https://techcrunch.com/2018/03/23/facebook-knows-literally-everything-about-you/&quot;&gt;a few have claimed&lt;/a&gt;. Yet the numbers Kogan provides &lt;a href=&quot;https://civichall.org/civicist/will-the-real-psychometric-targeters-please-stand-up/&quot;&gt;also show&lt;/a&gt; what is — and isn’t — &lt;a href=&quot;https://www.washingtonpost.com/news/monkey-cage/wp/2018/03/23/four-and-a-half-reasons-not-to-worry-that-cambridge-analytica-skewed-the-2016-election/&quot;&gt;actually possible&lt;/a&gt; by &lt;a href=&quot;https://www.wired.com/story/the-noisy-fallacies-of-psychographic-targeting/&quot;&gt;combining personal data&lt;/a&gt; &lt;a href=&quot;https://www.nbcnews.com/politics/politics-news/cambridge-analytica-s-effectiveness-called-question-despite-alleged-facebook-data-n858256&quot;&gt;with machine learning&lt;/a&gt; for political ends.&lt;/p&gt;
&lt;p&gt;Regarding one key public concern, though, Kogan’s numbers suggest that information on users’ personalities or “&lt;a href=&quot;https://www.vox.com/science-and-health/2018/3/23/17152564/cambridge-analytica-psychographic-microtargeting-what&quot;&gt;psychographics&lt;/a&gt;” was just a modest part of how the model targeted citizens. It was not a personality model, strictly speaking, but rather one that boiled down demographics, social influences, personality, and everything else into a big correlated lump. This soak-up-all-the-correlation-and-call-it-personality approach seems to have created a valuable campaign tool, even if the product being sold wasn’t quite as it was billed.&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;The promise of personality targeting&lt;/h3&gt;
&lt;p&gt;In the wake of the revelations that Trump campaign consultants Cambridge Analytica used &lt;a href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot;&gt;data from 50 million Facebook users&lt;/a&gt; to target digital political advertising during the 2016 U.S. presidential election, Facebook has &lt;a href=&quot;https://www.nasdaq.com/symbol/fb/stock-report&quot;&gt;lost billions in stock market value&lt;/a&gt;, governments on &lt;a href=&quot;https://www.theverge.com/2018/3/19/17141138/facebook-cambridge-analytica-uk-authorities-warrant-data-breach&quot;&gt;both sides of the Atlantic&lt;/a&gt; have &lt;a href=&quot;https://www.pbs.org/newshour/politics/federal-trade-commission-to-investigate-facebook-as-companys-stock-value-sinks&quot;&gt;opened investigations&lt;/a&gt;, and a nascent &lt;a href=&quot;https://theconversation.com/facebook-is-killing-democracy-with-its-personality-profiling-data-93611&quot;&gt;social movement&lt;/a&gt; is calling on users to &lt;a href=&quot;https://twitter.com/search?q=%23deletefacebook&quot;&gt;#DeleteFacebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But a key question has remained unanswered: Was Cambridge Analytica really able to effectively target campaign messages to citizens based on their personality characteristics — or even their “&lt;a href=&quot;https://www.theguardian.com/news/2018/mar/17/cambridge-analytica-facebook-influence-us-election&quot;&gt;inner demons&lt;/a&gt;,” as a company whistleblower alleged?&lt;/p&gt;
&lt;p&gt;If anyone would know what Cambridge Analytica did with its massive trove of Facebook data, it would be Aleksandr Kogan and Joseph Chancellor. It was &lt;a href=&quot;https://www.reuters.com/article/us-facebook-cambridge-analytica/trump-consultants-harvested-data-from-50-million-facebook-users-reports-idUSKCN1GT02Y&quot;&gt;their startup Global Science Research&lt;/a&gt; that collected profile information from &lt;a href=&quot;https://www.wired.com/story/cambridge-analytica-50m-facebook-users-data/&quot;&gt;270,000 Facebook users and tens of millions of their friends&lt;/a&gt; using a personality test app called “thisisyourdigitallife.”&lt;/p&gt;
&lt;p&gt;Part of &lt;a href=&quot;https://scholar.google.com/citations?user=igL-0AsAAAAJ&amp;amp;hl=en&quot;&gt;my own research&lt;/a&gt; focuses on understanding &lt;a href=&quot;https://doi.org/10.1177/0002716215570279&quot;&gt;machine learning&lt;/a&gt; methods, and &lt;a href=&quot;https://www.amazon.com/Internet-Trap-Monopolies-Undermines-Democracy/dp/0691159262/&quot;&gt;my forthcoming book&lt;/a&gt; discusses how digital firms use recommendation models to build audiences. I had a hunch about how Kogan and Chancellor’s model worked.&lt;/p&gt;
&lt;p&gt;So I emailed Kogan to ask. Kogan is still a &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-03-20/meet-the-psychologist-at-the-center-of-facebook-s-data-scandal&quot;&gt;researcher at Cambridge University&lt;/a&gt;; his collaborator &lt;a href=&quot;https://www.theguardian.com/news/2018/mar/18/facebook-cambridge-analytica-joseph-chancellor-gsr&quot;&gt;Chancellor now works at Facebook&lt;/a&gt;. In a remarkable display of academic courtesy, Kogan answered.&lt;/p&gt;
&lt;p&gt;His response requires some unpacking, and some background.&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;From the Netflix Prize to “psychometrics”&lt;/h3&gt;
&lt;p&gt;Back in 2006, when it was still a DVD-by-mail company, Netflix offered a &lt;a href=&quot;https://www.netflixprize.com/&quot;&gt;reward of $1 million&lt;/a&gt; to anyone who developed a better way to make predictions about users’ movie rankings than the company already had. A surprise top competitor was an &lt;a href=&quot;https://www.kdnuggets.com/news/2007/n08/3i.html&quot;&gt;independent software developer using the pseudonym Simon Funk&lt;/a&gt;, whose basic approach was ultimately incorporated into all the top teams’ entries. Funk adapted a technique called “&lt;a href=&quot;http://www.aclweb.org/anthology/E06-1013&quot;&gt;singular value decomposition&lt;/a&gt;,” condensing users’ ratings of movies into a &lt;a href=&quot;https://www.youtube.com/watch?v=P5mlg91as1c&quot;&gt;series of factors or components&lt;/a&gt; — essentially a set of inferred categories, ranked by importance. As Funk &lt;a href=&quot;http://sifter.org/simon/journal/20061027.2.html&quot;&gt;explained in a blog post&lt;/a&gt;,&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;So, for instance, a category might represent action movies, with movies with a lot of action at the top, and slow movies at the bottom, and correspondingly users who like action movies at the top, and those who prefer slow movies at the bottom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Factors are artificial categories, which are not always like the kind of categories humans would come up with. The &lt;a href=&quot;http://sifter.org/simon/journal/20061027.2.html&quot;&gt;most important factor in Funk’s early Netflix model&lt;/a&gt; was defined by users who loved films like “Pearl Harbor” and “The Wedding Planner” while also hating movies like “Lost in Translation” or “Eternal Sunshine of the Spotless Mind.” His model showed how machine learning can find correlations among groups of people, and groups of movies, that humans themselves would never spot.&lt;/p&gt;
&lt;p&gt;Funk’s general approach used the 50 or 100 most important factors for both users and movies to make a decent guess at how every user would rate every movie. This method, often called &lt;a href=&quot;https://en.wikipedia.org/wiki/Dimensionality_reduction&quot;&gt;dimensionality reduction&lt;/a&gt; or matrix factorization, was not new. Political science researchers had shown that &lt;a href=&quot;https://en.wikipedia.org/wiki/NOMINATE_(scaling_method)&quot;&gt;similar techniques using roll-call vote data&lt;/a&gt; could predict the votes of members of Congress with 90 percent accuracy. In psychology, the “&lt;a href=&quot;https://doi.org/10.1037/0003-066X.48.1.26&quot;&gt;Big Five&lt;/a&gt;” model had also been used to predict behavior by clustering together personality questions that tended to be answered similarly.&lt;/p&gt;
&lt;p&gt;Still, Funk’s model was a big advance: It allowed the technique to work well with huge data sets, even those with lots of missing data — like the Netflix dataset, where a typical user rated only few dozen films out of the thousands in the company’s library. More than a decade after the Netflix Prize contest ended, &lt;a href=&quot;https://doi.org/10.1145/1401890.1401944&quot;&gt;SVD-based methods&lt;/a&gt;, or &lt;a href=&quot;https://doi.org/10.1109/ICDM.2008.22&quot;&gt;related models for implicit data&lt;/a&gt;, are still the tool of choice for many websites to predict what users will read, watch, or buy.&lt;/p&gt;
&lt;p&gt;These models can predict other things, too.&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;Facebook knows if you are a Republican&lt;/h3&gt;
&lt;p&gt;In 2013, Cambridge University researchers Michal Kosinski, David Stillwell, and Thore Graepel published an article on the &lt;a href=&quot;https://doi.org/10.1073/pnas.1218772110&quot;&gt;predictive power of Facebook data&lt;/a&gt;, using information gathered through an online personality test. Their initial analysis was nearly identical to that used on the Netflix Prize, using SVD to categorize both users and things they “liked” into the top 100 factors.&lt;/p&gt;
&lt;p&gt;The paper showed that a factor model made with users’ Facebook “likes” alone was &lt;a href=&quot;https://doi.org/10.1073/pnas.1218772110&quot;&gt;95 percent accurate&lt;/a&gt; at distinguishing between black and white respondents, 93 percent accurate at distinguishing men from women, and 88 percent accurate at distinguishing people who identified as gay men from men who identified as straight. It could even correctly distinguish Republicans from Democrats 85 percent of the time. It was also useful, though not as accurate, for &lt;a href=&quot;https://doi.org/10.1073/pnas.1218772110&quot;&gt;predicting users’ scores&lt;/a&gt; on the “Big Five” personality test.&lt;/p&gt;
&lt;p&gt;There was &lt;a href=&quot;https://psmag.com/economics/big-data-big-brother-and-the-like-button-53894&quot;&gt;public outcry&lt;/a&gt; &lt;a href=&quot;https://www.theatlantic.com/technology/archive/2013/03/armed-with-facebook-likes-alone-researchers-can-tell-your-race-gender-and-sexual-orientation/273963/&quot;&gt;in response&lt;/a&gt;; within weeks Facebook had &lt;a href=&quot;https://motherboard.vice.com/en_us/article/mg9vvn/how-our-likes-helped-trump-win&quot;&gt;made users’ likes private&lt;/a&gt; by default.&lt;/p&gt;
&lt;p&gt;Kogan and Chancellor, also Cambridge University researchers at the time, were starting to use Facebook data for election targeting as part of a collaboration with Cambridge Analytica’s parent firm SCL. Kogan invited Kosinski and Stillwell to join his project, but it &lt;a href=&quot;https://www.theguardian.com/education/2018/mar/24/cambridge-analytica-academics-work-upset-university-colleagues&quot;&gt;didn’t work out&lt;/a&gt;. Kosinski reportedly suspected Kogan and Chancellor might have &lt;a href=&quot;https://motherboard.vice.com/en_us/article/mg9vvn/how-our-likes-helped-trump-win&quot;&gt;reverse-engineered the Facebook “likes” model&lt;/a&gt; for Cambridge Analytica. Kogan denied this, saying his project “&lt;a href=&quot;https://www.theguardian.com/education/2018/mar/24/cambridge-analytica-academics-work-upset-university-colleagues&quot;&gt;built all our models&lt;/a&gt; using our own data, collected using our own software.”&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;What did Kogan and Chancellor actually do?&lt;/h3&gt;
&lt;p&gt;As I followed the developments in the story, it became clear Kogan and Chancellor had indeed collected plenty of their own data through the thisisyourdigitallife app. They certainly could have built a predictive SVD model like that featured in Kosinski and Stillwell’s published research.&lt;/p&gt;
&lt;p&gt;So I emailed Kogan to ask if that was what he had done. Somewhat to my surprise, he wrote back.&lt;/p&gt;
&lt;p&gt;“We didn’t exactly use SVD,” he wrote, noting that SVD can struggle when some users have many more “likes” than others. Instead, Kogan explained, “The technique was something we actually developed ourselves … It’s not something that is in the public domain.” Without going into details, Kogan described their method as “a multi-step &lt;a href=&quot;https://www.quora.com/What-is-a-co-occurrence-matrix&quot;&gt;co-occurrence&lt;/a&gt; approach.”&lt;/p&gt;
&lt;p&gt;However, his message went on to confirm that his approach was indeed similar to SVD or other matrix factorization methods, like in the Netflix Prize competition, and the Kosinki-Stillwell-Graepel Facebook model. Dimensionality reduction of Facebook data was the core of his model.&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;How accurate was it?&lt;/h3&gt;
&lt;p&gt;Kogan suggested the exact model used doesn’t matter much, though — what matters is the accuracy of its predictions. According to Kogan, the “correlation between predicted and actual scores…was around [30 percent] for all the personality dimensions.” By comparison, a person’s previous Big Five scores are about &lt;a href=&quot;https://doi.org/10.1016/j.jrp.2014.06.003&quot;&gt;70 to 80 percent accurate&lt;/a&gt; in predicting their scores when they retake the test.&lt;/p&gt;
&lt;p&gt;Kogan’s accuracy claims cannot be independently verified, of course. And anyone in the midst of such a high-profile scandal might have incentive to understate his or her contribution. In his &lt;a href=&quot;https://www.youtube.com/watch?v=APqU_EJ5d3U&quot;&gt;appearance on CNN&lt;/a&gt;, Kogan explained to a increasingly incredulous Anderson Cooper that, in fact, the models had actually not worked very well.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;600&quot; height=&quot;337&quot; src=&quot;https://www.youtube.com/embed/APqU_EJ5d3U&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;In fact, the accuracy Kogan claims seems a bit low, but plausible. Kosinski, Stillwell and Graepel reported comparable or slightly better results, as have several &lt;a href=&quot;https://doi.org/10.1016/j.paid.2017.12.018&quot;&gt;other academic studies&lt;/a&gt; using digital footprints to predict personality (though some of those studies had more data than just Facebook “likes”). It is surprising that Kogan and Chancellor would go to the trouble of designing their own proprietary model if off-the-shelf solutions would seem to be just as accurate.&lt;/p&gt;
&lt;p&gt;Importantly, though, the model’s accuracy on personality scores allows comparisons of Kogan’s results with other research. Published models with equivalent accuracy in predicting personality are all much more accurate at guessing demographics and political variables.&lt;/p&gt;
&lt;p&gt;For instance, the similar Kosinski-Stillwell-Graepel SVD model was 85 percent accurate in guessing party affiliation, even without using any profile information other than likes. Kogan’s model had similar or better accuracy. Adding even a small amount of information about friends or users’ demographics would likely boost this accuracy above 90 percent. Guesses about gender, race, sexual orientation, and other characteristics would probably be more than 90 percent accurate too.&lt;/p&gt;
&lt;p&gt;Critically, these guesses would be especially good for the most active Facebook users — the people the model was primarily used to target. Users with less activity to analyze are likely not on Facebook much anyway.&lt;/p&gt;
&lt;h3 class=&quot;subhead&quot;&gt;When psychographics is mostly demographics&lt;/h3&gt;
&lt;p&gt;Knowing how the model is built helps explain Cambridge Analytica’s apparently contradictory statements about &lt;a href=&quot;https://motherboard.vice.com/en_us/article/mg9vvn/how-our-likes-helped-trump-win&quot;&gt;the role&lt;/a&gt; — or &lt;a href=&quot;https://www.c-span.org/video/?420077-1/google-hosts-post-election-review&amp;amp;start=6905&quot;&gt;lack thereof&lt;/a&gt; — that personality profiling and psychographics played in its modeling. They’re all technically consistent with what Kogan describes.&lt;/p&gt;
&lt;p&gt;A model like Kogan’s would give estimates for every variable available on any group of users. That means it would automatically &lt;a href=&quot;https://www.bloomberg.com/news/features/2015-11-12/is-the-republican-party-s-killer-data-app-for-real-&quot;&gt;estimate the Big Five personality scores&lt;/a&gt; for every voter. But these personality scores are the output of the model, not the input. All the model knows is that certain Facebook likes, and certain users, tend to be grouped together.&lt;/p&gt;
&lt;p&gt;With this model, Cambridge Analytica could say that it was identifying people with low openness to experience and high neuroticism. But the same model, with the exact same predictions for every user, could just as accurately claim to be identifying less educated older Republican men.&lt;/p&gt;
&lt;p&gt;Kogan’s information also helps clarify the confusion about whether Cambridge Analytica &lt;a href=&quot;https://www.youtube.com/watch?v=MepM_YXZdYg&quot;&gt;actually deleted its trove&lt;/a&gt; of Facebook data, when models built from the data &lt;a href=&quot;https://www.channel4.com/news/revealed-cambridge-analytica-data-on-thousands-of-facebook-users-still-not-deleted&quot;&gt;seem to still be circulating&lt;/a&gt;, and even &lt;a href=&quot;https://gizmodo.com/aggregateiq-created-cambridge-analyticas-election-softw-1824026565&quot;&gt;being developed further&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The whole point of a dimension reduction model is to mathematically represent the data in simpler form. It’s as if Cambridge Analytica took a very high-resolution photograph, resized it to be smaller, and then deleted the original. The photo still exists — and as long as Cambridge Analytica’s models exist, the data effectively does too.&lt;/p&gt;

&lt;div class=&quot;photocredit&quot; readability=&quot;8.0909090909091&quot;&gt;Photo of Cambridge Analytica CEO Alexander Nix by &lt;a href=&quot;https://www.flickr.com/photos/websummit/38287070931/&quot;&gt;Web Summit&lt;/a&gt; used under a Creative Commons license.&lt;/div&gt;
</description>
<pubDate>Fri, 30 Mar 2018 20:07:31 +0000</pubDate>
<dc:creator>Dowwie</dc:creator>
<og:title>This is how Cambridge Analytica’s Facebook targeting model really worked — according to the person who built it</og:title>
<og:type>article</og:type>
<og:image>http://www.niemanlab.org/images/cambridge-analytica-screenshot-700x372.jpg</og:image>
<og:url>http://www.niemanlab.org/2018/03/this-is-how-cambridge-analyticas-facebook-targeting-model-really-worked-according-to-the-person-who-built-it/</og:url>
<og:description>The method was similar to the one Netflix uses to recommend movies — no crystal ball, but good enough to make an effective political tool.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.niemanlab.org/2018/03/this-is-how-cambridge-analyticas-facebook-targeting-model-really-worked-according-to-the-person-who-built-it/</dc:identifier>
</item>
<item>
<title>Introducing TensorFlow.js: Machine Learning in JavaScript</title>
<link>https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db</link>
<guid isPermaLink="true" >https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db</guid>
<description>&lt;p name=&quot;3aea&quot; id=&quot;3aea&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Posted by&lt;/em&gt; &lt;a href=&quot;http://twitter.com/random_forests&quot; data-href=&quot;http://twitter.com/random_forests&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Josh Gordon&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;and&lt;/em&gt; &lt;a href=&quot;http://twitter.com/srobTweets&quot; data-href=&quot;http://twitter.com/srobTweets&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Sara Robinson&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;, Developer Advocates&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;05d0&quot; id=&quot;05d0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We’re excited to introduce &lt;a href=&quot;https://js.tensorflow.org&quot; data-href=&quot;https://js.tensorflow.org&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;TensorFlow.js&lt;/a&gt;, an open-source library you can use to define, train, and run machine learning models entirely in the browser, using Javascript and a high-level layers API. If you’re a Javascript developer who’s new to ML, TensorFlow.js is a great way to begin learning. Or, if you’re a ML developer who’s new to Javascript, read on to learn more about new opportunities for in-browser ML. In this post, we’ll give you a quick overview of TensorFlow.js, and getting started resources you can use to try it out.&lt;/p&gt;
&lt;h3 name=&quot;ae8e&quot; id=&quot;ae8e&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;In-Browser ML&lt;/h3&gt;
&lt;p name=&quot;515d&quot; id=&quot;515d&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Running machine learning programs entirely client-side in the browser unlocks new opportunities, like interactive ML! If you’re watching the &lt;a href=&quot;https://www.youtube.com/tensorflow&quot; data-href=&quot;https://www.youtube.com/tensorflow&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;livestream&lt;/a&gt; for the &lt;a href=&quot;https://www.tensorflow.org/dev-summit/&quot; data-href=&quot;https://www.tensorflow.org/dev-summit/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;TensorFlow Developer Summit&lt;/a&gt;, during the TensorFlow.js talk you’ll find a demo where &lt;a href=&quot;http://twitter.com/dsmilkov&quot; data-href=&quot;http://twitter.com/dsmilkov&quot; class=&quot;markup--anchor markup--p-anchor&quot; title=&quot;Twitter profile for @dsmilkov&quot; rel=&quot;nofollow noopener nofollow noopener&quot; target=&quot;_blank&quot;&gt;@dsmilkov&lt;/a&gt; and &lt;a href=&quot;http://twitter.com/nsthorat&quot; data-href=&quot;http://twitter.com/nsthorat&quot; class=&quot;markup--anchor markup--p-anchor&quot; title=&quot;Twitter profile for @nsthorat&quot; rel=&quot;nofollow noopener nofollow noopener&quot; target=&quot;_blank&quot;&gt;@nsthorat&lt;/a&gt; train a model to control a PAC-MAN game using computer vision and a webcam, entirely in the browser. You can try it out yourself, too, with the link below — and find the source in the &lt;a href=&quot;https://github.com/tensorflow/tfjs-examples&quot; data-href=&quot;https://github.com/tensorflow/tfjs-examples&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;examples&lt;/a&gt; folder.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*hfplSJ9gMJCjluG-.&quot; data-width=&quot;1600&quot; data-height=&quot;1354&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*hfplSJ9gMJCjluG-.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*hfplSJ9gMJCjluG-.&quot;/&gt;&lt;/div&gt;
&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;Turn your webcam into a controller for PAC-MAN&lt;/em&gt; &lt;a href=&quot;https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html&quot; data-href=&quot;https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;using a Neural Network&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;.&lt;/em&gt;
&lt;p name=&quot;0cc8&quot; id=&quot;0cc8&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;If you’d like to try another game, give the &lt;a href=&quot;https://emojiscavengerhunt.withgoogle.com/&quot; data-href=&quot;https://emojiscavengerhunt.withgoogle.com/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Emoji Scavenger Hunt&lt;/a&gt; a whirl — this time, from a browser on your mobile phone.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*33Y-pYAmL5D1WFYK.&quot; data-width=&quot;1600&quot; data-height=&quot;897&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*33Y-pYAmL5D1WFYK.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*33Y-pYAmL5D1WFYK.&quot;/&gt;&lt;/div&gt;
&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;The&lt;/em&gt; &lt;a href=&quot;https://emojiscavengerhunt.withgoogle.com/&quot; data-href=&quot;https://emojiscavengerhunt.withgoogle.com/&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;Emoji Scavenger Hunt&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--figure-em&quot;&gt;is another fun example of an application built using TensorFlow.js. Try it using your phone, and find the source &lt;/em&gt;&lt;a href=&quot;https://github.com/google/emoji-scavenger-hunt&quot; data-href=&quot;https://github.com/google/emoji-scavenger-hunt&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;here&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;markup--em markup--figure-em&quot;&gt;.&lt;/em&gt;
&lt;p name=&quot;67f2&quot; id=&quot;67f2&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;ML running in the browser means that from a user’s perspective, there’s no need to install any libraries or drivers. Just open a webpage, and your program is ready to run. In addition, it’s ready to run with GPU acceleration. TensorFlow.js automatically supports WebGL, and will accelerate your code behind the scenes when a GPU is available. Users may also open your webpage from a mobile device, in which case your model can take advantage of sensor data, say from a gyroscope or accelerometer. Finally, all data stays on the client, making TensorFlow.js useful for low-latency inference, as well as for privacy preserving applications.&lt;/p&gt;
&lt;h3 name=&quot;08d7&quot; id=&quot;08d7&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;What can you do with TensorFlow.js?&lt;/h3&gt;
&lt;p name=&quot;3f42&quot; id=&quot;3f42&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;If you’re developing with TensorFlow.js, here are three workflows you can consider.&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;a980&quot; id=&quot;a980&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;You can import an existing, pre-trained model for inference.&lt;/strong&gt; If you have an existing TensorFlow or &lt;a href=&quot;http://keras.io&quot; data-href=&quot;http://keras.io&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Keras&lt;/a&gt; model you’ve previously trained offline, you can convert into TensorFlow.js format, and load it into the browser for inference.&lt;/li&gt;
&lt;li name=&quot;4381&quot; id=&quot;4381&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;You can re-train an imported model.&lt;/strong&gt; As in the Pac-Man demo above, you can use transfer learning to augment an existing model trained offline using a small amount of data collected in the browser using a technique called Image Retraining. This is one way to train an accurate model quickly, using only a small amount of data.&lt;/li&gt;
&lt;li name=&quot;5d5e&quot; id=&quot;5d5e&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;&lt;strong class=&quot;markup--strong markup--li-strong&quot;&gt;Author models directly in browser.&lt;/strong&gt; You can also use TensorFlow.js to define, train, and run models entirely in the browser using Javascript and a high-level layers API. If you’re familiar with &lt;a href=&quot;http://keras.io&quot; data-href=&quot;http://keras.io&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Keras&lt;/a&gt;, the high-level layers API should feel familiar.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 name=&quot;caa6&quot; id=&quot;caa6&quot; class=&quot;graf graf--h3 graf-after--li&quot;&gt;Let’s see some code&lt;/h3&gt;
&lt;p name=&quot;0e47&quot; id=&quot;0e47&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;If you like, you can head directly to the &lt;a href=&quot;https://github.com/tensorflow/tfjs-examples&quot; data-href=&quot;https://github.com/tensorflow/tfjs-examples&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;samples&lt;/a&gt; or &lt;a href=&quot;http://js.tensorflow.org&quot; data-href=&quot;http://js.tensorflow.org&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;tutorials&lt;/a&gt; to get started. These show how-to export a model defined in Python for inference in the browser, as well as how to define and train models entirely in Javascript. As a quick preview, here’s a snippet of code that defines a neural network to classify flowers, much like on the getting started &lt;a href=&quot;https://www.tensorflow.org/get_started/&quot; data-href=&quot;https://www.tensorflow.org/get_started/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;guide&lt;/a&gt; on TensorFlow.org. Here, we’ll define a model using a stack of layers.&lt;/p&gt;

&lt;p name=&quot;ecd7&quot; id=&quot;ecd7&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The layers API we’re using here supports all of the Keras layers found in the examples &lt;a href=&quot;https://github.com/keras-team/keras/tree/master/examples&quot; data-href=&quot;https://github.com/keras-team/keras/tree/master/examples&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;directory&lt;/a&gt; (including Dense, CNN, LSTM, and so on). We can then train our model using the same Keras-compatible API with a method call:&lt;/p&gt;

&lt;p name=&quot;c2f1&quot; id=&quot;c2f1&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The model is now ready to use to make predictions:&lt;/p&gt;

&lt;p name=&quot;1686&quot; id=&quot;1686&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;TensorFlow.js also includes a low-level API (previously &lt;a href=&quot;https://deeplearnjs.org/&quot; data-href=&quot;https://deeplearnjs.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;deeplearn.js&lt;/a&gt;) and support for &lt;a href=&quot;https://github.com/tensorflow/tensorflow/tree/r1.7/tensorflow/contrib/eager&quot; data-href=&quot;https://github.com/tensorflow/tensorflow/tree/r1.7/tensorflow/contrib/eager&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Eager execution&lt;/a&gt;. You can learn more about these by watching the talk at the TensorFlow Developer Summit.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*oY2OG7MFBN4eK1AN.&quot; data-width=&quot;1600&quot; data-height=&quot;897&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*oY2OG7MFBN4eK1AN.&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*oY2OG7MFBN4eK1AN.&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;78d1&quot; id=&quot;78d1&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;An overview of TensorFlow.js APIs. TensorFlow.js is powered by WebGL and provides a high-level layers API for defining models, and a low-level API for linear algebra and automatic differentiation. TensorFlow.js supports importing TensorFlow SavedModels and Keras models.&lt;/em&gt;&lt;/p&gt;
&lt;h3 name=&quot;7883&quot; id=&quot;7883&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;How does TensorFlow.js relate to deeplearn.js?&lt;/h3&gt;
&lt;p name=&quot;16b8&quot; id=&quot;16b8&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Good question! TensorFlow.js, an ecosystem of JavaScript tools for machine learning, is the successor to deeplearn.js which is now called TensorFlow.js Core. TensorFlow.js also includes a Layers API, which is a higher level library for building machine learning models that uses Core, as well as tools for automatically porting TensorFlow SavedModels and Keras hdf5 models. For answers to more questions like this, check out the &lt;a href=&quot;https://js.tensorflow.org/faq/&quot; data-href=&quot;https://js.tensorflow.org/faq/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h3 name=&quot;f042&quot; id=&quot;f042&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Where’s the best place to learn more?&lt;/h3&gt;
&lt;p name=&quot;a5ec&quot; id=&quot;a5ec&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;To learn more about TensorFlow.js, visit the project &lt;a href=&quot;https://js.tensorflow.org/&quot; data-href=&quot;https://js.tensorflow.org/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;homepage&lt;/a&gt;, check out the &lt;a href=&quot;https://js.tensorflow.org/tutorials/&quot; data-href=&quot;https://js.tensorflow.org/tutorials/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;tutorials&lt;/a&gt;, and try the &lt;a href=&quot;https://github.com/tensorflow/tfjs-examples&quot; data-href=&quot;https://github.com/tensorflow/tfjs-examples&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;examples&lt;/a&gt;. You can also watch the talk from the 2018 TensorFlow Developer Summit, and follow TensorFlow on &lt;a href=&quot;http://twitter.com/tensorflow&quot; data-href=&quot;http://twitter.com/tensorflow&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

Live from Mountain View, CA! Join the TensorFlow team as they host the second annual TensorFlow Dev Summit. All the sessions will be recorded and uploaded to the channel today.
&lt;p name=&quot;da7d&quot; id=&quot;da7d&quot; class=&quot;graf graf--p graf-after--figure graf--trailing&quot;&gt;Thanks for reading, and we’re excited to see what you’ll create with TensorFlow.js! If you like, you can follow &lt;a href=&quot;http://twitter.com/dsmilkov&quot; data-href=&quot;http://twitter.com/dsmilkov&quot; class=&quot;markup--anchor markup--p-anchor&quot; title=&quot;Twitter profile for @dsmilkov&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;@dsmilkov&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/nsthorat&quot; data-href=&quot;http://twitter.com/nsthorat&quot; class=&quot;markup--anchor markup--p-anchor&quot; title=&quot;Twitter profile for @nsthorat&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;@nsthorat&lt;/a&gt;, and &lt;a href=&quot;http://twitter.com/sqcai&quot; data-href=&quot;http://twitter.com/sqcai&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;@sqcai&lt;/a&gt; from the TensorFlow.js team on Twitter for updates.&lt;/p&gt;
</description>
<pubDate>Fri, 30 Mar 2018 17:53:36 +0000</pubDate>
<dc:creator>runesoerensen</dc:creator>
<og:title>Introducing TensorFlow.js: Machine Learning in Javascript</og:title>
<og:url>https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/0*hfplSJ9gMJCjluG-.</og:image>
<og:description>Posted by Josh Gordon and Sara Robinson, Developer Advocates</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db</dc:identifier>
</item>
</channel>
</rss>