<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Linus Shares His Views on Recent Kernel Regression</title>
<link>http://lkml.iu.edu/hypermail/linux/kernel/1710.3/02474.html</link>
<guid isPermaLink="true" >http://lkml.iu.edu/hypermail/linux/kernel/1710.3/02474.html</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;title&gt;Linux-Kernel Archive: Re: regression in 4.14-rc2 caused by apparmor: add base infastructure for socket mediation&lt;/title&gt;&lt;meta name=&quot;Author&quot; content=&quot;Linus Torvalds &amp;lt;torvalds@xxxxxxxxxxxxxxxxxxxx&amp;gt;&quot; /&gt;&lt;meta name=&quot;Subject&quot; content=&quot;Re: regression in 4.14-rc2 caused by apparmor: add base infastructure for socket mediation&quot; /&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot; id=&quot;readabilityBody&quot; readability=&quot;54.04578313253&quot;&gt;

&lt;p&gt;&lt;strong&gt;From:&lt;/strong&gt; Linus Torvalds&lt;br /&gt;&lt;strong&gt;Date:&lt;/strong&gt; Thu Oct 26 2017 - 13:36:21 EST&lt;/p&gt;
&lt;hr noshade=&quot;noshade&quot; /&gt;&lt;p&gt;On Tue, Oct 24, 2017 at 1:57 PM, John Johansen&lt;br /&gt;&amp;lt;john.johansen@xxxxxxxxxxxxx&amp;gt; wrote:&lt;br /&gt;&amp;gt;&lt;br /&gt;&amp;gt; &lt;em&gt;actually a lot of work and testing has been done. A regression was&lt;/em&gt;&lt;br /&gt;&amp;gt; &lt;em&gt;found, the fix is in testing and it should land soon, but its not the&lt;/em&gt;&lt;br /&gt;&amp;gt; &lt;em&gt;regression you are having issues with.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Stop gthis f*cking idiocy already!&lt;/p&gt;&lt;p&gt;As far as the kernel is concerned, a regressions is THE KERNEL NOT&lt;br /&gt;GIVING THE SAME END RESULT WITH THE SAME USER SPACE.&lt;/p&gt;&lt;p&gt;The regression was in the kernel. You trying to shift the regressions&lt;br /&gt;somewhere else is bogus SHIT.&lt;/p&gt;&lt;p&gt;And seriously, it's the kind of garbage that makes me think your&lt;br /&gt;opinion and your code cannot be relied on.&lt;/p&gt;&lt;p&gt;If you are not willing to admit that your commit 651e28c5537a&lt;br /&gt;(&quot;apparmor: add base infastructure for socket mediation&quot;) caused a&lt;br /&gt;regression, then honestly, I don't want to get commits from you.&lt;/p&gt;&lt;p&gt;It's that simple.&lt;/p&gt;&lt;p&gt;I'm *very* unhappy with the security layer as is, the last thing I&lt;br /&gt;want to see is some security layer developer that then goes on to try&lt;br /&gt;to re-define was regression means.&lt;/p&gt;&lt;p&gt;If you break existing user space setups THAT IS A REGRESSION.&lt;/p&gt;&lt;p&gt;It's not ok to say &quot;but we'll fix the user space setup&quot;.&lt;/p&gt;&lt;p&gt;Really. NOT OK.&lt;/p&gt;&lt;p&gt;I think I will have to revert that garbage, for the simple reason that&lt;br /&gt;I refuse to have code in the kernel from maintainers that cannot even&lt;br /&gt;understand the first rule of kernel development.&lt;/p&gt;&lt;p&gt;The first rule is:&lt;/p&gt;&lt;p&gt;- we don't cause regressions&lt;/p&gt;&lt;p&gt;and the corollary is that when regressions *do* occur, we admit to&lt;br /&gt;them and fix them, instead of blaming user space.&lt;/p&gt;&lt;p&gt;The fact that you have apparently been denying the regression now for&lt;br /&gt;three weeks means that I will revert, and I will stop pulling apparmor&lt;br /&gt;requests until the people involved understand how kernel development&lt;br /&gt;is done.&lt;/p&gt;&lt;p&gt;Linus&lt;/p&gt;
&lt;hr noshade=&quot;noshade&quot; /&gt;&lt;/body&gt;</description>
<pubDate>Thu, 02 Nov 2017 11:34:06 +0000</pubDate>
<dc:creator>signa11</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://lkml.iu.edu/hypermail/linux/kernel/1710.3/02474.html</dc:identifier>
</item>
<item>
<title>Bitcoin Surges Past $7,000 to Extend Record Rally</title>
<link>https://www.bloomberg.com/news/articles/2017-11-02/bitcoin-surges-past-7-000-to-extend-record-rally-this-year</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2017-11-02/bitcoin-surges-past-7-000-to-extend-record-rally-this-year</guid>
<description>&lt;p&gt;Bitcoin surged past $7,000 for the first time, breaching another milestone less than one month after it tore through the $5,000 mark.&lt;/p&gt;

&lt;p&gt;The digital currency &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-10-31/bitcoin-growing-up-as-futures-open-floodgates-to-wall-street&quot; title=&quot;Bitcoin Growing Up as Futures Open Floodgates to Wall Street&quot; target=&quot;_blank&quot;&gt;got new impetus&lt;/a&gt; this week after CME Group Inc., the world’s largest exchange owner, said it plans to introduce bitcoin futures by the end of the year, citing pent-up demand from clients. Skeptics including Themis Trading say the rally is evidence that the software-created asset is a bubble that should not be given regulatory cover.&lt;/p&gt;

&lt;div class=&quot;image&quot;&gt;
&lt;div id=&quot;lazy-img-319936399&quot; class=&quot;lazy-img&quot;&gt;&lt;img src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/it0saxBRCq4M/v2/60x-1.png&quot; data-native-src=&quot;https://assets.bwbx.io/images/users/iqjWHBFdfxIU/it0saxBRCq4M/v2/-1x-1.png&quot; class=&quot;lazy-img__image&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Spot pricing for bitcoin climbed as much as 12 percent to a record $7,392 before pulling back slightly to $7,025 at 8:53 a.m. in New York. The cryptocurrency is up almost sevenfold this year and is now worth more than &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-10-30/bitcoin-passes-more-milestones-as-market-cap-tops-100-billion&quot; title=&quot;Bitcoin Passes More Milestones as Market Cap Tops $100 Billion&quot; target=&quot;_blank&quot;&gt;$100 billion&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;“It is simply remarkable how resilient bitcoin has been in the face of significant negativity,” said Lukman Otunuga, a research analyst at ForexTime, in a Nov. 1 note to clients. “The price action suggests that bulls have a very firm grip.”&lt;/p&gt;

&lt;p&gt;In a &lt;a itemscope=&quot;itemscope&quot; itemprop=&quot;StoryLink&quot; href=&quot;https://www.bloomberg.com/news/articles/2017-11-01/bitcoin-futures-euphoria-conjures-up-images-of-cdos-for-themis&quot; title=&quot;Bitcoin Futures Euphoria Conjures Up Images of CDOs for Themis&quot; target=&quot;_blank&quot;&gt;blog post&lt;/a&gt; this week, Themis warned CME is “caving in” to pressure from clients and placing a seal of approval around a “very risky, unregulated instrument that has a history of fraud and manipulation.” The products planned by CME “remind us of the collateralized debt obligations which were peddled during the financial crisis,” the post said.&lt;/p&gt;
&lt;p&gt;Asked whether he’s concerned about a potential bubble, CME Chief Executive Officer Terry Duffy said on Bloomberg TV on Nov. 1 that the firm’s job is to “manage risk, not decide what the price of a product is.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;— With assistance by Camila Russo&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 02 Nov 2017 10:56:47 +0000</pubDate>
<dc:creator>rayuela</dc:creator>
<og:description>Bitcoin surged past $7,000 for the first time, breaching another milestone less than one month after it tore through the $5,000 mark.</og:description>
<og:image>https://assets.bwbx.io/images/users/iqjWHBFdfxIU/iDzWWQm9Jqs4/v0/1200x736.jpg</og:image>
<og:title>Bitcoin Surges Past $7,000 to Extend Record Rally</og:title>
<og:type>article</og:type>
<og:url>https://www.bloomberg.com/news/articles/2017-11-02/bitcoin-surges-past-7-000-to-extend-record-rally-this-year</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/news/articles/2017-11-02/bitcoin-surges-past-7-000-to-extend-record-rally-this-year</dc:identifier>
</item>
<item>
<title>Linux containers in 500 lines of code</title>
<link>https://blog.lizzie.io/linux-containers-in-500-loc.html</link>
<guid isPermaLink="true" >https://blog.lizzie.io/linux-containers-in-500-loc.html</guid>
<description>&lt;div class=&quot;org-src-container&quot; readability=&quot;8&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
int capabilities()
{
        fprintf(stderr, &quot;=&amp;gt; dropping capabilities...&quot;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_AUDIT_CONTROL&lt;/code&gt;, &lt;code&gt;_READ&lt;/code&gt;, and &lt;code&gt;_WRITE&lt;/code&gt; allow access to the audit system of the kernel (i.e. functions like &lt;code&gt;audit_set_enabled&lt;/code&gt;, usually used with &lt;code&gt;auditctl&lt;/code&gt;). The kernel prevents messages that normally require &lt;code&gt;CAP_AUDIT_CONTROL&lt;/code&gt; outside of the first pid namespace, but it does allow messages that would require &lt;code&gt;CAP_AUDIT_READ&lt;/code&gt; and &lt;code&gt;CAP_AUDIT_WRITE&lt;/code&gt; from any namespace.&lt;sup/&gt; So let's drop them all. We especially want to drop &lt;code&gt;CAP_AUDIT_READ&lt;/code&gt;, since it isn't namespaced&lt;sup/&gt; and may contain important information, but &lt;code&gt;CAP_AUDIT_WRITE&lt;/code&gt; may also allow the contained process to falsify logs or DOS the audit system.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot; readability=&quot;10&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
      int drop_caps[] = {
              CAP_AUDIT_CONTROL,
              CAP_AUDIT_READ,
              CAP_AUDIT_WRITE,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_BLOCK_SUSPEND&lt;/code&gt; lets programs prevent the system from suspending, either with &lt;code&gt;EPOLLWAKEUP&lt;/code&gt; or /proc/sys/wake_lock.&lt;sup/&gt; Supend isn't namespaced, so we'd like to prevent this.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_BLOCK_SUSPEND,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_DAC_READ_SEARCH&lt;/code&gt; lets programs call &lt;code&gt;open_by_handle_at&lt;/code&gt; with an arbitrary &lt;code&gt;struct file_handle *&lt;/code&gt;. &lt;code&gt;struct file_handle&lt;/code&gt; is in theory an opaque type, but in practice it corresponds to inode numbers. So it's easy to brute-force them, and read arbitrary files. This was used by Sebastian Krahmer to write a program to read arbitrary system files from within Docker in 2014.&lt;sup/&gt;&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_DAC_READ_SEARCH,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_FSETID&lt;/code&gt;, without user namespacing, allows the process to modify a setuid executable without removing the setuid bit. This is pretty dangerous! It means that if we include a setuid binary in a container, it's easy for us to accidentally leave a dangerous setuid root binary on our disk, which any user can use to escalate privileges.&lt;sup/&gt;&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_FSETID,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_IPC_LOCK&lt;/code&gt; can be used to lock more of a process' own memory than would normally be allowed&lt;sup/&gt;, which could be a way to deny service.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_IPC_LOCK,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_MAC_ADMIN&lt;/code&gt; and &lt;code&gt;CAP_MAC_OVERRIDE&lt;/code&gt; are used by the mandatory acess control systems Apparmor, SELinux, and SMACK to restrict access to their settings. These aren't namespaced, so they could be used by the contained programs to circumvent system-wide access control.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot; readability=&quot;9&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_MAC_ADMIN,
              CAP_MAC_OVERRIDE,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_MKNOD&lt;/code&gt;, without user namespacing, allows programs to create device files corresponding to real-world devices. This includes creating new device files for existing hardware. If this capability were not dropped, a contained process could re-create the hard disk device, remount it, and read or write to it.&lt;sup/&gt;&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_MKNOD,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I was worried that &lt;code&gt;CAP_SETFCAP&lt;/code&gt; could be used to add a capability to an executable and &lt;code&gt;execve&lt;/code&gt; it, but it's not actually possible for a process to set capabilities it doesn't have&lt;sup/&gt;. But! An executable altered this way could be executed by any unsandboxed user, so I think it unacceptably undermines the security of the system.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SETFCAP,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYSLOG&lt;/code&gt; lets users perform destructive actions against the syslog. Importantly, it doesn't prevent contained processes from reading the syslog, which could be risky. It also exposes kernel addresses, which could be used to circumvent kernel address layout randomization&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYSLOG,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt; allows many behaviors! We don't want most of them (&lt;code&gt;mount&lt;/code&gt;, &lt;code&gt;vm86&lt;/code&gt;, etc). Some would be nice to have (&lt;code&gt;sethostname&lt;/code&gt;, &lt;code&gt;mount&lt;/code&gt; for bind mounts…) but the extra complexity doesn't seem worth it.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_ADMIN,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_BOOT&lt;/code&gt; allows programs to restart the system (the &lt;code&gt;reboot&lt;/code&gt; syscall) and load new kernels (the &lt;code&gt;kexec_load&lt;/code&gt; and &lt;code&gt;kexec_file&lt;/code&gt; syscalls)&lt;sup/&gt;. We absolutely don't want this. &lt;code&gt;reboot&lt;/code&gt; is user-namespaced, and the &lt;code&gt;kexec*&lt;/code&gt; functions only work in the root user namespace, but neither of those help us.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_BOOT,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_MODULE&lt;/code&gt; is used by the syscalls &lt;code&gt;delete_module&lt;/code&gt;, &lt;code&gt;init_module&lt;/code&gt;, &lt;code&gt;finit_module&lt;/code&gt; &lt;sup/&gt;, by the code for &lt;code&gt;kmod&lt;/code&gt; &lt;sup/&gt;, and by the code for loading device modules with ioctl&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_MODULE,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_NICE&lt;/code&gt; allows processes to set higher priority on given pids than the default&lt;sup/&gt;. The default kernel scheduler doesn't know anything about pid namespaces, so it's possible for a contained process to deny service to the rest of the system&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_NICE,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_RAWIO&lt;/code&gt; allows full access to the host systems memory with &lt;code&gt;/proc/kcore&lt;/code&gt;, &lt;code&gt;/dev/mem&lt;/code&gt;, and &lt;code&gt;/dev/kmem&lt;/code&gt; &lt;sup/&gt;, but a contained process would need &lt;code&gt;mknod&lt;/code&gt; to access these within the namespace.&lt;sup/&gt;. But it also allows things like &lt;code&gt;iopl&lt;/code&gt; and &lt;code&gt;ioperm&lt;/code&gt;, which give raw access to the IO ports&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_RAWIO,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_RESOURCE&lt;/code&gt; specifically allows circumventing kernel-wide limits, so we probably should drop it&lt;sup/&gt;. But I don't think this can do more than DOS the kernel, in general&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_RESOURCE,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_SYS_TIME&lt;/code&gt;: setting the time isn't namespaced, so we should prevent contained processes from altering the system-wide time&lt;sup/&gt;.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_SYS_TIME,
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;CAP_WAKE_ALARM&lt;/code&gt;, like &lt;code&gt;CAP_BLOCK_SUSPEND&lt;/code&gt;, lets the contained process interfere with suspend&lt;sup/&gt;, and we'd like to prevent that.&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
       CAP_WAKE_ALARM
      };
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;org-src-container&quot; readability=&quot;23&quot;&gt;&lt;label class=&quot;org-src-name&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;capabilities&amp;gt;&amp;gt;&lt;/code&gt; +=&lt;/label&gt;
&lt;pre class=&quot;src src-C&quot;&gt;
 size_t num_caps = sizeof(drop_caps) / sizeof(*drop_caps);
        fprintf(stderr, &quot;bounding...&quot;);
        for (size_t i = 0; i &amp;lt; num_caps; i++) {
                if (prctl(PR_CAPBSET_DROP, drop_caps[i], 0, 0, 0)) {
                        fprintf(stderr, &quot;prctl failed: %m\n&quot;);
                        return 1;
                }
        }
        fprintf(stderr, &quot;inheritable...&quot;);
        cap_t caps = NULL;
        if (!(caps = cap_get_proc())
            || cap_set_flag(caps, CAP_INHERITABLE, num_caps, drop_caps, CAP_CLEAR)
            || cap_set_proc(caps)) {
                fprintf(stderr, &quot;failed: %m\n&quot;);
                if (caps) cap_free(caps);
                return 1;
        }
        cap_free(caps);
        fprintf(stderr, &quot;done.\n&quot;);
        return 0;
}
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 02 Nov 2017 07:12:10 +0000</pubDate>
<dc:creator>billconan</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.lizzie.io/linux-containers-in-500-loc.html</dc:identifier>
</item>
<item>
<title>What every systems programmer should know about lockless concurrency [pdf]</title>
<link>https://assets.bitbashing.io/papers/lockless.pdf</link>
<guid isPermaLink="true" >https://assets.bitbashing.io/papers/lockless.pdf</guid>
<description>&lt;a href=&quot;https://assets.bitbashing.io/papers/lockless.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Thu, 02 Nov 2017 04:35:54 +0000</pubDate>
<dc:creator>sidcool</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://assets.bitbashing.io/papers/lockless.pdf</dc:identifier>
</item>
<item>
<title>Simple Virtual Machine in C</title>
<link>https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c</link>
<guid isPermaLink="true" >https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://assets-cdn.github.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; href=&quot;https://assets-cdn.github.com/assets/frameworks-d7137690e30123bade38abb082ac79f36cc7a105ff92e602405f53b725465cab.css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; href=&quot;https://assets-cdn.github.com/assets/github-d2385d1d8b66f7f4897ceb99bea7f2144f84764f87058d1d87f4cc5111945130.css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; href=&quot;https://assets-cdn.github.com/assets/site-cd79f063f6da2fef8de0055aa11c913cc1873486fc05ade3227e0cbcc7a168c6.css&quot; media=&quot;all&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;como-lang-ng/simple.c at master · rmccullagh/como-lang-ng · GitHub&lt;/title&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta content=&quot;https://avatars0.githubusercontent.com/u/1653012?s=400&amp;amp;v=4&quot; property=&quot;og:image&quot;/&gt;&lt;meta content=&quot;GitHub&quot; property=&quot;og:site_name&quot;/&gt;&lt;meta content=&quot;object&quot; property=&quot;og:type&quot;/&gt;&lt;meta content=&quot;rmccullagh/como-lang-ng&quot; property=&quot;og:title&quot;/&gt;&lt;meta content=&quot;https://github.com/rmccullagh/como-lang-ng&quot; property=&quot;og:url&quot;/&gt;&lt;meta content=&quot;como-lang-ng - A programming language prototype implemented in C with an AST, Compiler, and Virtual Machine \@TODO Garbage Collection&quot; property=&quot;og:description&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://assets-cdn.github.com/&quot;/&gt;&lt;meta name=&quot;pjax-timeout&quot; content=&quot;1000&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;BD7D:5958:1217BE:20FC4F:59FB414F&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_source&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta content=&quot;collector.githubapp.com&quot; name=&quot;octolytics-host&quot;/&gt;&lt;meta content=&quot;github&quot; name=&quot;octolytics-app-id&quot;/&gt;&lt;meta content=&quot;https://collector.githubapp.com/github-external/browser_event&quot; name=&quot;octolytics-event-url&quot;/&gt;&lt;meta content=&quot;BD7D:5958:1217BE:20FC4F:59FB414F&quot; name=&quot;octolytics-dimension-request_id&quot;/&gt;&lt;meta content=&quot;iad&quot; name=&quot;octolytics-dimension-region_edge&quot;/&gt;&lt;meta content=&quot;iad&quot; name=&quot;octolytics-dimension-region_render&quot;/&gt;&lt;meta content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/blob/show&quot; data-pjax-transient=&quot;true&quot; name=&quot;analytics-location&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;js-proxy-site-detection-payload&quot; content=&quot;NjI2YjQxNjc1MDkyZGUxMTc5N2VkYzZlZDI4MmNkNGY5YjlkNDQ2NWNiY2FiMWYyZDExNDgxYjIzMzI5ZTFiZXx7InJlbW90ZV9hZGRyZXNzIjoiNzIuMjAxLjU3LjI2IiwicmVxdWVzdF9pZCI6IkJEN0Q6NTk1ODoxMjE3QkU6MjBGQzRGOjU5RkI0MTRGIiwidGltZXN0YW1wIjoxNTA5NjM4NDgwLCJob3N0IjoiZ2l0aHViLmNvbSJ9&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;caa1c81ad93eaede5d78c8f01117b35c88bfabf5&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;152f280b9cf9b72332e9a9975a26c4f9&quot;/&gt;&lt;link href=&quot;https://github.com/rmccullagh/como-lang-ng/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to como-lang-ng:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;como-lang-ng - A programming language prototype implemented in C with an AST, Compiler, and Virtual Machine \@TODO Garbage Collection&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/rmccullagh/como-lang-ng git https://github.com/rmccullagh/como-lang-ng.git&quot;/&gt;&lt;meta content=&quot;1653012&quot; name=&quot;octolytics-dimension-user_id&quot;/&gt;&lt;meta content=&quot;rmccullagh&quot; name=&quot;octolytics-dimension-user_login&quot;/&gt;&lt;meta content=&quot;67886632&quot; name=&quot;octolytics-dimension-repository_id&quot;/&gt;&lt;meta content=&quot;rmccullagh/como-lang-ng&quot; name=&quot;octolytics-dimension-repository_nwo&quot;/&gt;&lt;meta content=&quot;true&quot; name=&quot;octolytics-dimension-repository_public&quot;/&gt;&lt;meta content=&quot;false&quot; name=&quot;octolytics-dimension-repository_is_fork&quot;/&gt;&lt;meta content=&quot;67886632&quot; name=&quot;octolytics-dimension-repository_network_root_id&quot;/&gt;&lt;meta content=&quot;rmccullagh/como-lang-ng&quot; name=&quot;octolytics-dimension-repository_network_root_nwo&quot;/&gt;&lt;meta content=&quot;false&quot; name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://assets-cdn.github.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://assets-cdn.github.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;meta name=&quot;u2f-support&quot; content=&quot;true&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;3&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-blob&quot; id=&quot;readabilityBody&quot; readability=&quot;50.527570789866&quot;&gt;



&lt;div role=&quot;main&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot;&gt;
&lt;div id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;

&lt;div class=&quot;container new-discussion-timeline experiment-repo-nav&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;&lt;a href=&quot;https://github.com/rmccullagh/como-lang-ng/blob/72f519df64db52119bbc07b97438e6f4156dfaf8/vm/simple.c&quot; class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot;&gt;Permalink&lt;/a&gt; 


&lt;div class=&quot;file&quot;&gt;

&lt;div itemprop=&quot;text&quot; class=&quot;blob-wrapper data type-c&quot;&gt;
&lt;table class=&quot;highlight tab-size js-file-line-container&quot; data-tab-size=&quot;8&quot; readability=&quot;44&quot;&gt;&lt;tr&gt;&lt;td id=&quot;L1&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;1&quot;/&gt;
&lt;td id=&quot;LC1&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;signal.h&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L2&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;2&quot;/&gt;
&lt;td id=&quot;LC2&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;stdio.h&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L3&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;3&quot;/&gt;
&lt;td id=&quot;LC3&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;inttypes.h&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L4&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;4&quot;/&gt;
&lt;td id=&quot;LC4&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;string.h&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L5&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;5&quot;/&gt;
&lt;td id=&quot;LC5&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;limits.h&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L6&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;6&quot;/&gt;
&lt;td id=&quot;LC6&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L7&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;7&quot;/&gt;
&lt;td id=&quot;LC7&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;como_opcode.h&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L8&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;8&quot;/&gt;
&lt;td id=&quot;LC8&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L9&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;9&quot;/&gt;
&lt;td id=&quot;LC9&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Opcode 1 byte opcode, 2 byte argument, 1 byte flag &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L10&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;10&quot;/&gt;
&lt;td id=&quot;LC10&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L11&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;11&quot;/&gt;
&lt;td id=&quot;LC11&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;OP&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;i&lt;/span&gt;) ((i) &amp;gt;&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt; &amp;amp; &lt;span class=&quot;pl-c1&quot;&gt;0xff&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L12&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;12&quot;/&gt;
&lt;td id=&quot;LC12&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;OP1&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;i&lt;/span&gt;) ((i) &amp;gt;&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt; &amp;amp; &lt;span class=&quot;pl-c1&quot;&gt;0xffff&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L13&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;13&quot;/&gt;
&lt;td id=&quot;LC13&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FLAG&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;i&lt;/span&gt;) ((i) &amp;amp; &lt;span class=&quot;pl-c1&quot;&gt;0xff&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L14&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;14&quot;/&gt;
&lt;td id=&quot;LC14&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L15&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;15&quot;/&gt;
&lt;td id=&quot;LC15&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;struct&lt;/span&gt; Frame {&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L16&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;16&quot;/&gt;
&lt;td id=&quot;LC16&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; f_co[USHRT_MAX + &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;]; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Constants &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L17&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;17&quot;/&gt;
&lt;td id=&quot;LC17&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; f_co_pos; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; constants pointer &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L18&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;18&quot;/&gt;
&lt;td id=&quot;LC18&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L19&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;19&quot;/&gt;
&lt;td id=&quot;LC19&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; code[&lt;span class=&quot;pl-c1&quot;&gt;255&lt;/span&gt;]; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Bytecode &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L20&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;20&quot;/&gt;
&lt;td id=&quot;LC20&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; pc; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Program counter &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L21&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;21&quot;/&gt;
&lt;td id=&quot;LC21&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L22&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;22&quot;/&gt;
&lt;td id=&quot;LC22&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L23&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;23&quot;/&gt;
&lt;td id=&quot;LC23&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L24&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;24&quot;/&gt;
&lt;td id=&quot;LC24&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; stack[&lt;span class=&quot;pl-c1&quot;&gt;255&lt;/span&gt;]; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Value stack &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L25&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;25&quot;/&gt;
&lt;td id=&quot;LC25&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; sp; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Stack pointer &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L26&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;26&quot;/&gt;
&lt;td id=&quot;LC26&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;} Frame;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L27&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;27&quot;/&gt;
&lt;td id=&quot;LC27&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L28&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;28&quot;/&gt;
&lt;td id=&quot;LC28&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;init_frame&lt;/span&gt;(Frame *frame)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L29&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;29&quot;/&gt;
&lt;td id=&quot;LC29&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L30&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;30&quot;/&gt;
&lt;td id=&quot;LC30&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;memset&lt;/span&gt;(frame-&amp;gt;f_co, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;sizeof&lt;/span&gt;(frame-&amp;gt;f_co));&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L31&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;31&quot;/&gt;
&lt;td id=&quot;LC31&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame-&amp;gt;f_co_pos = &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L32&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;32&quot;/&gt;
&lt;td id=&quot;LC32&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;memset&lt;/span&gt;(frame-&amp;gt;code, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;sizeof&lt;/span&gt;(frame-&amp;gt;code));&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L33&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;33&quot;/&gt;
&lt;td id=&quot;LC33&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame-&amp;gt;pc = &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L34&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;34&quot;/&gt;
&lt;td id=&quot;LC34&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;memset&lt;/span&gt;(frame-&amp;gt;stack, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;sizeof&lt;/span&gt;(frame-&amp;gt;stack));&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L35&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;35&quot;/&gt;
&lt;td id=&quot;LC35&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame-&amp;gt;sp = &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L36&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;36&quot;/&gt;
&lt;td id=&quot;LC36&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L37&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;37&quot;/&gt;
&lt;td id=&quot;LC37&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L38&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;38&quot;/&gt;
&lt;td id=&quot;LC38&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Como_EvalFrameEx&lt;/span&gt;(Frame *frame)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L39&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;39&quot;/&gt;
&lt;td id=&quot;LC39&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L40&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;40&quot;/&gt;
&lt;td id=&quot;LC40&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NEXT_OPCODE&lt;/span&gt;() ((frame-&amp;gt;code[frame-&amp;gt;pc++]) &amp;gt;&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt; &amp;amp; &lt;span class=&quot;pl-c1&quot;&gt;0xff&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L41&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;41&quot;/&gt;
&lt;td id=&quot;LC41&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;ARG&lt;/span&gt;() ((frame-&amp;gt;code[frame-&amp;gt;pc - &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;]) &amp;gt;&amp;gt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt; &amp;amp; &lt;span class=&quot;pl-c1&quot;&gt;0xffff&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L42&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;42&quot;/&gt;
&lt;td id=&quot;LC42&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;TARGET&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; x:&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L43&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;43&quot;/&gt;
&lt;td id=&quot;LC43&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;VM_DISPATCH&lt;/span&gt;() &lt;span class=&quot;pl-k&quot;&gt;break&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L44&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;44&quot;/&gt;
&lt;td id=&quot;LC44&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;PUSH&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;) frame-&amp;gt;stack[frame-&amp;gt;sp++] = x&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L45&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;45&quot;/&gt;
&lt;td id=&quot;LC45&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;POP&lt;/span&gt;() frame-&amp;gt;stack[--frame-&amp;gt;sp]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L46&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;46&quot;/&gt;
&lt;td id=&quot;LC46&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;CONSTANT&lt;/span&gt;(&lt;span class=&quot;pl-v&quot;&gt;x&lt;/span&gt;) frame-&amp;gt;f_co[x]&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L47&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;47&quot;/&gt;
&lt;td id=&quot;LC47&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;EMPTY&lt;/span&gt;() frame-&amp;gt;sp == &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L48&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;48&quot;/&gt;
&lt;td id=&quot;LC48&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L49&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;49&quot;/&gt;
&lt;td id=&quot;LC49&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; retval = &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L50&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;50&quot;/&gt;
&lt;td id=&quot;LC50&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; arg = -&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L51&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;51&quot;/&gt;
&lt;td id=&quot;LC51&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; a, b, op;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L52&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;52&quot;/&gt;
&lt;td id=&quot;LC52&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L53&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;53&quot;/&gt;
&lt;td id=&quot;LC53&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt;(;;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L54&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;54&quot;/&gt;
&lt;td id=&quot;LC54&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L55&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;55&quot;/&gt;
&lt;td id=&quot;LC55&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;op = &lt;span class=&quot;pl-c1&quot;&gt;NEXT_OPCODE&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L56&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;56&quot;/&gt;
&lt;td id=&quot;LC56&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L57&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;57&quot;/&gt;
&lt;td id=&quot;LC57&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;fprintf&lt;/span&gt;(stderr, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pc=&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, frame-&amp;gt;pc);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L58&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;58&quot;/&gt;
&lt;td id=&quot;LC58&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L59&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;59&quot;/&gt;
&lt;td id=&quot;LC59&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;switch&lt;/span&gt;(op)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L60&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;60&quot;/&gt;
&lt;td id=&quot;LC60&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L61&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;61&quot;/&gt;
&lt;td id=&quot;LC61&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;TARGET&lt;/span&gt;(LOAD_CONST)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L62&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;62&quot;/&gt;
&lt;td id=&quot;LC62&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L63&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;63&quot;/&gt;
&lt;td id=&quot;LC63&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;arg = &lt;span class=&quot;pl-c1&quot;&gt;ARG&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L64&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;64&quot;/&gt;
&lt;td id=&quot;LC64&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L65&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;65&quot;/&gt;
&lt;td id=&quot;LC65&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;PUSH&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;CONSTANT&lt;/span&gt;(arg));&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L66&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;66&quot;/&gt;
&lt;td id=&quot;LC66&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L67&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;67&quot;/&gt;
&lt;td id=&quot;LC67&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;VM_DISPATCH&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L68&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;68&quot;/&gt;
&lt;td id=&quot;LC68&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L69&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;69&quot;/&gt;
&lt;td id=&quot;LC69&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L70&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;70&quot;/&gt;
&lt;td id=&quot;LC70&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;TARGET&lt;/span&gt;(IADD)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L71&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;71&quot;/&gt;
&lt;td id=&quot;LC71&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L72&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;72&quot;/&gt;
&lt;td id=&quot;LC72&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;a = &lt;span class=&quot;pl-c1&quot;&gt;POP&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L73&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;73&quot;/&gt;
&lt;td id=&quot;LC73&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;b = &lt;span class=&quot;pl-c1&quot;&gt;POP&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L74&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;74&quot;/&gt;
&lt;td id=&quot;LC74&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L75&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;75&quot;/&gt;
&lt;td id=&quot;LC75&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;PUSH&lt;/span&gt;(a + b);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L76&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;76&quot;/&gt;
&lt;td id=&quot;LC76&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L77&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;77&quot;/&gt;
&lt;td id=&quot;LC77&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;VM_DISPATCH&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L78&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;78&quot;/&gt;
&lt;td id=&quot;LC78&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L79&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;79&quot;/&gt;
&lt;td id=&quot;LC79&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L80&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;80&quot;/&gt;
&lt;td id=&quot;LC80&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;TARGET&lt;/span&gt;(IRETURN)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L81&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;81&quot;/&gt;
&lt;td id=&quot;LC81&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L82&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;82&quot;/&gt;
&lt;td id=&quot;LC82&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L83&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;83&quot;/&gt;
&lt;td id=&quot;LC83&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;pl-c1&quot;&gt;EMPTY&lt;/span&gt;()) {&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L84&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;84&quot;/&gt;
&lt;td id=&quot;LC84&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;retval = &lt;span class=&quot;pl-c1&quot;&gt;POP&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L85&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;85&quot;/&gt;
&lt;td id=&quot;LC85&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L86&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;86&quot;/&gt;
&lt;td id=&quot;LC86&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L87&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;87&quot;/&gt;
&lt;td id=&quot;LC87&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;VM_DISPATCH&lt;/span&gt;();&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L88&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;88&quot;/&gt;
&lt;td id=&quot;LC88&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L89&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;89&quot;/&gt;
&lt;td id=&quot;LC89&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L90&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;90&quot;/&gt;
&lt;td id=&quot;LC90&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;TARGET&lt;/span&gt;(HALT)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L91&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;91&quot;/&gt;
&lt;td id=&quot;LC91&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L92&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;92&quot;/&gt;
&lt;td id=&quot;LC92&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L93&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;93&quot;/&gt;
&lt;td id=&quot;LC93&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L94&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;94&quot;/&gt;
&lt;td id=&quot;LC94&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L95&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;95&quot;/&gt;
&lt;td id=&quot;LC95&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L96&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;96&quot;/&gt;
&lt;td id=&quot;LC96&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L97&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;97&quot;/&gt;
&lt;td id=&quot;LC97&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;:&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L98&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;98&quot;/&gt;
&lt;td id=&quot;LC98&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; retval;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L99&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;99&quot;/&gt;
&lt;td id=&quot;LC99&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L100&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;100&quot;/&gt;
&lt;td id=&quot;LC100&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L101&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;101&quot;/&gt;
&lt;td id=&quot;LC101&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L102&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;102&quot;/&gt;
&lt;td id=&quot;LC102&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;{&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L103&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;103&quot;/&gt;
&lt;td id=&quot;LC103&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L104&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;104&quot;/&gt;
&lt;td id=&quot;LC104&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;struct&lt;/span&gt; Frame frame;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L105&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;105&quot;/&gt;
&lt;td id=&quot;LC105&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L106&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;106&quot;/&gt;
&lt;td id=&quot;LC106&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;init_frame&lt;/span&gt;(&amp;amp;frame);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L107&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;107&quot;/&gt;
&lt;td id=&quot;LC107&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L108&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;108&quot;/&gt;
&lt;td id=&quot;LC108&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co_pos&lt;/span&gt;++] = &lt;span class=&quot;pl-c1&quot;&gt;150&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L109&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;109&quot;/&gt;
&lt;td id=&quot;LC109&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;code&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt;++] = (LOAD_CONST &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;) | ((frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co_pos&lt;/span&gt; -&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt;) | (UCHAR_MAX - &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;);&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L110&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;110&quot;/&gt;
&lt;td id=&quot;LC110&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co_pos&lt;/span&gt;++] = &lt;span class=&quot;pl-c1&quot;&gt;50&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L111&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;111&quot;/&gt;
&lt;td id=&quot;LC111&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;code&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt;++] = (LOAD_CONST &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;) | ((frame.&lt;span class=&quot;pl-smi&quot;&gt;f_co_pos&lt;/span&gt; -&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt;) | (UCHAR_MAX - &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L112&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;112&quot;/&gt;
&lt;td id=&quot;LC112&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L113&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;113&quot;/&gt;
&lt;td id=&quot;LC113&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;code&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt;++] = (IADD &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;) | ((&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt;) | (&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;);&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L114&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;114&quot;/&gt;
&lt;td id=&quot;LC114&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;code&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt;++] = (IRETURN &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;) | ((&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt;) | (&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;);&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L115&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;115&quot;/&gt;
&lt;td id=&quot;LC115&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;code&lt;/span&gt;[frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt;++] = (HALT &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;) | ((&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;pl-c1&quot;&gt;8&lt;/span&gt;) | (&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L116&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;116&quot;/&gt;
&lt;td id=&quot;LC116&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td id=&quot;L117&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;117&quot;/&gt;
&lt;td id=&quot;LC117&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; reset the program counter, execute &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L118&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;118&quot;/&gt;
&lt;td id=&quot;LC118&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;frame.&lt;span class=&quot;pl-smi&quot;&gt;pc&lt;/span&gt; = &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L119&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;119&quot;/&gt;
&lt;td id=&quot;LC119&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; retval = &lt;span class=&quot;pl-c1&quot;&gt;Como_EvalFrameEx&lt;/span&gt;(&amp;amp;frame);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L120&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;120&quot;/&gt;
&lt;td id=&quot;LC120&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td id=&quot;L121&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;121&quot;/&gt;
&lt;td id=&quot;LC121&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c1&quot;&gt;fprintf&lt;/span&gt;(stdout, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, retval);&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L122&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;122&quot;/&gt;
&lt;td id=&quot;LC122&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L123&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;123&quot;/&gt;
&lt;td id=&quot;LC123&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L124&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;124&quot;/&gt;
&lt;td id=&quot;LC124&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L125&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;125&quot;/&gt;
&lt;td id=&quot;LC125&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;uint32_t instruction;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L126&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;126&quot;/&gt;
&lt;td id=&quot;LC126&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L127&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;127&quot;/&gt;
&lt;td id=&quot;LC127&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/* LOAD_NAME ARG FLAG */&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td id=&quot;L128&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;128&quot;/&gt;
&lt;td id=&quot;LC128&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;instruction = (LOAD_NAME &amp;lt;&amp;lt; 24) | (USHRT_MAX &amp;lt;&amp;lt; 8) | (UCHAR_MAX - 1);&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L129&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;129&quot;/&gt;
&lt;td id=&quot;LC129&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L130&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;130&quot;/&gt;
&lt;td id=&quot;LC130&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;fprintf(stdout,&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td id=&quot;L131&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;131&quot;/&gt;
&lt;td id=&quot;LC131&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&quot;op=%d, arg=%u, flag=%u\n&quot;,&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L132&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;132&quot;/&gt;
&lt;td id=&quot;LC132&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;OP(instruction),&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L133&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;133&quot;/&gt;
&lt;td id=&quot;LC133&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;OP1(instruction),&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L134&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;134&quot;/&gt;
&lt;td id=&quot;LC134&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;FLAG(instruction)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L135&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;135&quot;/&gt;
&lt;td id=&quot;LC135&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;);&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L136&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;136&quot;/&gt;
&lt;td id=&quot;LC136&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L137&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;137&quot;/&gt;
&lt;td id=&quot;LC137&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;#&lt;span class=&quot;pl-k&quot;&gt;endif&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L138&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;138&quot;/&gt;
&lt;td id=&quot;LC138&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L139&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;139&quot;/&gt;
&lt;td id=&quot;LC139&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;L140&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;140&quot;/&gt;
&lt;td id=&quot;LC140&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;button type=&quot;button&quot; data-facebox=&quot;#jump-to-line&quot; data-facebox-class=&quot;linejump&quot; data-hotkey=&quot;l&quot; class=&quot;d-none&quot;&gt;Jump to Line&lt;/button&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can't perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none&quot;&gt;&lt;span class=&quot;signed-in-tab-flash&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;signed-out-tab-flash&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;

&lt;/body&gt;</description>
<pubDate>Thu, 02 Nov 2017 02:40:32 +0000</pubDate>
<dc:creator>ryanmccullagh</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/1653012?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>rmccullagh/como-lang-ng</og:title>
<og:url>https://github.com/rmccullagh/como-lang-ng</og:url>
<og:description>como-lang-ng - A programming language prototype implemented in C with an AST, Compiler, and Virtual Machine \@TODO Garbage Collection</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/rmccullagh/como-lang-ng/blob/master/vm/simple.c</dc:identifier>
</item>
<item>
<title>What If OpenDocument Used SQLite?</title>
<link>https://sqlite.org/affcase1.html</link>
<guid isPermaLink="true" >https://sqlite.org/affcase1.html</guid>
<description>&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link href=&quot;sqlite.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;title&gt;What If OpenDocument Used SQLite?&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;312.99201137647&quot;&gt;
&lt;div class=&quot;nosearch&quot; readability=&quot;3.2307692307692&quot;&gt;&lt;a href=&quot;https://sqlite.org/index.html&quot;&gt;&lt;img class=&quot;logo&quot; src=&quot;https://sqlite.org/images/sqlite370_banner.gif&quot; alt=&quot;SQLite&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;

&lt;p&gt;Small. Fast. Reliable.&lt;br /&gt;Choose any three.&lt;/p&gt;



&lt;/div&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Suppose the &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenDocument&quot;&gt;OpenDocument&lt;/a&gt; file format, and specifically the &quot;ODP&quot; OpenDocument Presentation format, were built around SQLite. Benefits would include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Smaller documents&lt;/li&gt;
&lt;li&gt;Faster File/Save times&lt;/li&gt;
&lt;li&gt;Faster startup times&lt;/li&gt;
&lt;li&gt;Less memory used&lt;/li&gt;
&lt;li&gt;Document versioning&lt;/li&gt;
&lt;li&gt;A better user experience&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that this is only a thought experiment. We are not suggesting that OpenDocument be changed. Nor is this article a criticism of the current OpenDocument design. The point of this essay is to suggest ways to improve future file format designs.&lt;/p&gt;
&lt;h2&gt;About OpenDocument And OpenDocument Presentation&lt;/h2&gt;
&lt;p&gt;The OpenDocument file format is used for office applications: word processors, spreadsheets, and presentations. It was originally designed for the OpenOffice suite but has since been incorporated into other desktop application suites. The OpenOffice application has been forked and renamed a few times. This author's primary use for OpenDocument is building slide presentations with either &lt;a href=&quot;https://www.neooffice.org/neojava/en/index.php&quot;&gt;NeoOffice&lt;/a&gt; on Mac, or &lt;a href=&quot;http://www.libreoffice.org/&quot;&gt;LibreOffice&lt;/a&gt; on Linux and Windows.&lt;/p&gt;
&lt;p&gt;An OpenDocument Presentation or &quot;ODP&quot; file is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Zip_%28file_format%29&quot;&gt;ZIP archive&lt;/a&gt; containing XML files describing presentation slides and separate image files for the various images that are included as part of the presentation. (OpenDocument word processor and spreedsheet files are similarly structured but are not considered by this article.) The reader can easily see the content of an ODP file by using the &quot;zip -l&quot; command. For example, the following is the &quot;zip -l&quot; output from a 49-slide presentation about SQLite from the 2014 &lt;a href=&quot;http://southeastlinuxfest.org/&quot;&gt;SouthEast LinuxFest&lt;/a&gt; conference:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;pre&gt;
Archive:  self2014.odp
  Length      Date    Time    Name
---------  ---------- -----   ----
       47  2014-06-21 12:34   mimetype
        0  2014-06-21 12:34   Configurations2/statusbar/
        0  2014-06-21 12:34   Configurations2/accelerator/current.xml
        0  2014-06-21 12:34   Configurations2/floater/
        0  2014-06-21 12:34   Configurations2/popupmenu/
        0  2014-06-21 12:34   Configurations2/progressbar/
        0  2014-06-21 12:34   Configurations2/menubar/
        0  2014-06-21 12:34   Configurations2/toolbar/
        0  2014-06-21 12:34   Configurations2/images/Bitmaps/
    54702  2014-06-21 12:34   Pictures/10000000000001F40000018C595A5A3D.png
    46269  2014-06-21 12:34   Pictures/100000000000012C000000A8ED96BFD9.png
&lt;em&gt;... 58 other pictures omitted...&lt;/em&gt;
    13013  2014-06-21 12:34   Pictures/10000000000000EE0000004765E03BA8.png
  1005059  2014-06-21 12:34   Pictures/10000000000004760000034223EACEFD.png
   211831  2014-06-21 12:34   content.xml
    46169  2014-06-21 12:34   styles.xml
     1001  2014-06-21 12:34   meta.xml
     9291  2014-06-21 12:34   Thumbnails/thumbnail.png
    38705  2014-06-21 12:34   Thumbnails/thumbnail.pdf
     9664  2014-06-21 12:34   settings.xml
     9704  2014-06-21 12:34   META-INF/manifest.xml
---------                     -------
 10961006                     78 files
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The ODP ZIP archive contains four different XML files: content.xml, styles.xml, meta.xml, and settings.xml. Those four files define the slide layout, text content, and styling. This particular presentation contains 62 images, ranging from full-screen pictures to tiny icons, each stored as a separate file in the Pictures folder. The &quot;mimetype&quot; file contains a single line of text that says:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;pre&gt;
application/vnd.oasis.opendocument.presentation
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The purpose of the other files and folders is presently unknown to the author but is probably not difficult to figure out.&lt;/p&gt;
&lt;h2&gt;Limitations Of The OpenDocument Presentation Format&lt;/h2&gt;
&lt;p&gt;The use of a ZIP archive to encapsulate XML files plus resources is an elegant approach to an application file format. It is clearly superior to a custom binary file format. But using an SQLite database as the container, instead of ZIP, would be more elegant still.&lt;/p&gt;
&lt;p&gt;A ZIP archive is basically a key/value database, optimized for the case of write-once/read-many and for a relatively small number of distinct keys (a few hundred to a few thousand) each with a large BLOB as its value. A ZIP archive can be viewed as a &quot;pile-of-files&quot; database. This works, but it has some shortcomings relative to an SQLite database, as follows:&lt;/p&gt;
&lt;ol readability=&quot;29.5&quot;&gt;&lt;li readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;strong&gt;Incremental update is hard.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is difficult to update individual entries in a ZIP archive. It is especially difficult to update individual entries in a ZIP archive in a way that does not destroy the entire document if the computer loses power and/or crashes in the middle of the update. It is not impossible to do this, but it is sufficiently difficult that nobody actually does it. Instead, whenever the user selects &quot;File/Save&quot;, the entire ZIP archive is rewritten. Hence, &quot;File/Save&quot; takes longer than it ought, especially on older hardware. Newer machines are faster, but it is still bothersome that changing a single character in a 50 megabyte presentation causes one to burn through 50 megabytes of the finite write life on the SSD.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Startup is slow.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In keeping with the pile-of-files theme, OpenDocument stores all slide content in a single big XML file named &quot;content.xml&quot;. LibreOffice reads and parses this entire file just to display the first slide. LibreOffice also seems to read all images into memory as well, which makes sense seeing as when the user does &quot;File/Save&quot; it is going to have to write them all back out again, even though none of them changed. The net effect is that start-up is slow. Double-clicking an OpenDocument file brings up a progress bar rather than the first slide. This results in a bad user experience. The situation grows ever more annoying as the document size increases.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;strong&gt;More memory is required.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because ZIP archives are optimized for storing big chunks of content, they encourage a style of programming where the entire document is read into memory at startup, all editing occurs in memory, then the entire document is written to disk during &quot;File/Save&quot;. OpenOffice and its descendants embrace that pattern.&lt;/p&gt;
&lt;p&gt;One might argue that it is ok, in this era of multi-gigabyte desktops, to read the entire document into memory. But it is not ok. For one, the amount of memory used far exceeds the (compressed) file size on disk. So a 50MB presentation might take 200MB or more RAM. That still is not a problem if one only edits a single document at a time. But when working on a talk, this author will typically have 10 or 15 different presentations up all at the same time (to facilitate copy/paste of slides from past presentation) and so gigabytes of memory are required. Add in an open web browser or two and a few other desktop apps, and suddenly the disk is whirling and the machine is swapping. And even having just a single document is a problem when working on an inexpensive Chromebook retrofitted with Ubuntu. Using less memory is always better.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Crash recovery is difficult.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The descendants of OpenOffice tend to segfault more often than commercial competitors. Perhaps for this reason, the OpenOffice forks make periodic backups of their in-memory documents so that users do not lose all pending edits when the inevitable application crash does occur. This causes frustrating pauses in the application for the few seconds while each backup is being made. After restarting from a crash, the user is presented with a dialog box that walks them through the recovery process. Managing the crash recovery this way involves lots of extra application logic and is generally an annoyance to the user.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;strong&gt;Content is inaccessible.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One cannot easily view, change, or extract the content of an OpenDocument presentation using generic tools. The only reasonable way to view or edit an OpenDocument document is to open it up using an application that is specifically designed to read or write OpenDocument (read: LibreOffice or one of its cousins). The situation could be worse. One can extract and view individual images (say) from a presentation using just the &quot;zip&quot; archiver tool. But it is not reasonable try to extract the text from a slide. Remember that all content is stored in a single &quot;context.xml&quot; file. That file is XML, so it is a text file. But it is not a text file that can be managed with an ordinary text editor. For the example presentation above, the content.xml file consist of exactly two lines. The first line of the file is just:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The second line of the file contains 211792 characters of impenetrable XML. Yes, 211792 characters all on one line. This file is a good stress-test for a text editor. Thankfully, the file is not some obscure binary format, but in terms of accessibility, it might as well be written in Klingon.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;First Improvement: Replace ZIP with SQLite&lt;/h2&gt;
&lt;p&gt;Let us suppose that instead of using a ZIP archive to store its files, OpenDocument used a very simple SQLite database with the following single-table schema:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;pre&gt;
CREATE TABLE OpenDocTree(
  filename TEXT PRIMARY KEY,  -- Name of file
  filesize BIGINT,            -- Size of file after decompression
  content BLOB                -- Compressed file content
);
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;For this first experiment, nothing else about the file format is changed. The OpenDocument is still a pile-of-files, only now each file is a row in an SQLite database rather than an entry in a ZIP archive. This simple change does not use the power of a relational database. Even so, this simple change shows some improvements. &lt;/p&gt;
&lt;p&gt;Surprisingly, using SQLite in place of ZIP makes the presentation file smaller. Really. One would think that a relational database file would be larger than a ZIP archive, but at least in the case of NeoOffice that is not so. The following is an actual screen-scrape showing the sizes of the same NeoOffice presentation, both in its original ZIP archive format as generated by NeoOffice (self2014.odp), and as repacked as an SQLite database using the &lt;a href=&quot;http://www.sqlite.org/sqlar/doc/trunk/README.md&quot;&gt;SQLAR&lt;/a&gt; utility:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;pre&gt;
-rw-r--r--  1 drh  staff  10514994 Jun  8 14:32 self2014.odp
-rw-r--r--  1 drh  staff  10464256 Jun  8 14:37 self2014.sqlar
-rw-r--r--  1 drh  staff  10416644 Jun  8 14:40 zip.odp
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The SQLite database file (&quot;self2014.sqlar&quot;) is about a half percent smaller than the equivalent ODP file! How can this be? Apparently the ZIP archive generator logic in NeoOffice is not as efficient as it could be, because when the same pile-of-files is recompressed using the command-line &quot;zip&quot; utility, one gets a file (&quot;zip.odp&quot;) that is smaller still, by another half percent, as seen in the third line above. So, a well-written ZIP archive can be slightly smaller than the equivalent SQLite database, as one would expect. But the difference is slight. The key take-away is that an SQLite database is size-competitive with a ZIP archive.&lt;/p&gt;
&lt;p&gt;The other advantage to using SQLite in place of ZIP is that the document can now be updated incrementally, without risk of corrupting the document if a power loss or other crash occurs in the middle of the update. (Remember that writes to &lt;a href=&quot;https://sqlite.org/atomiccommit.html&quot;&gt;SQLite databases are atomic&lt;/a&gt;.) True, all the content is still kept in a single big XML file (&quot;content.xml&quot;) which must be completely rewritten if so much as a single character changes. But with SQLite, only that one file needs to change. The other 77 files in the repository can remain unaltered. They do not all have to be rewritten, which in turn makes &quot;File/Save&quot; run much faster and saves wear on SSDs.&lt;/p&gt;
&lt;h2&gt;Second Improvement: Split content into smaller pieces&lt;/h2&gt;
&lt;p&gt;A pile-of-files encourages content to be stored in a few large chunks. In the case of ODP, there are just four XML files that define the layout off all slides in a presentation. An SQLite database allows storing information in a few large chunks, but SQLite is also adept and efficient at storing information in numerous smaller pieces.&lt;/p&gt;
&lt;p&gt;So then, instead of storing all content for all slides in a single oversized XML file (&quot;content.xml&quot;), suppose there was a separate table for storing the content of each slide separately. The table schema might look something like this:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;pre&gt;
CREATE TABLE slide(
  pageNumber INTEGER,   -- The slide page number
  slideContent TEXT     -- Slide content as XML or JSON
);
CREATE INDEX slide_pgnum ON slide(pageNumber); -- Optional
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The content of each slide could still be stored as compressed XML. But now each page is stored separately. So when opening a new document, the application could simply run:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;pre&gt;
SELECT slideContent FROM slide WHERE pageNumber=1;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;This query will quickly and efficiently return the content of the first slide, which could then be speedily parsed and displayed to the user. Only one page needs to be read and parsed in order render the first screen, which means that the first screen appears much faster and there is no longer a need for an annoying progress bar.&lt;/p&gt;
&lt;p&gt;If the application wanted to keep all content in memory, it could continue reading and parsing the other pages using a background thread after drawing the first page. Or, since reading from SQLite is so efficient, the application might instead choose to reduce its memory footprint and only keep a single slide in memory at a time. Or maybe it keeps the current slide and the next slide in memory, to facility rapid transitions to the next slide.&lt;/p&gt;
&lt;p&gt;Notice that dividing up the content into smaller pieces using an SQLite table gives flexibility to the implementation. The application can choose to read all content into memory at startup. Or it can read just a few pages into memory and keep the rest on disk. Or it can read just single page into memory at a time. And different versions of the application can make different choices without having to make any changes to the file format. Such options are not available when all content is in a single big XML file in a ZIP archive.&lt;/p&gt;
&lt;p&gt;Splitting content into smaller pieces also helps File/Save operations to go faster. Instead of having to write back the content of all pages when doing a File/Save, the application only has to write back those pages that have actually changed.&lt;/p&gt;
&lt;p&gt;One minor downside of splitting content into smaller pieces is that compression does not work as well on shorter texts and so the size of the document might increase. But as the bulk of the document space is used to store images, a small reduction in the compression efficiency of the text content will hardly be noticeable, and is a small price to pay for an improved user experience.&lt;/p&gt;
&lt;h2&gt;Third Improvement: Versioning&lt;/h2&gt;
&lt;p&gt;Once one is comfortable with the concept of storing each slide separately, it is a small step to support versioning of the presentation. Consider the following schema:&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;pre&gt;
CREATE TABLE slide(
  slideId INTEGER PRIMARY KEY,
  derivedFrom INTEGER REFERENCES slide,
  content TEXT     -- XML or JSON or whatever
);
CREATE TABLE version(
  versionId INTEGER PRIMARY KEY,
  priorVersion INTEGER REFERENCES version,
  checkinTime DATETIME,   -- When this version was saved
  comment TEXT,           -- Description of this version
  manifest TEXT           -- List of integer slideIds
);
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;In this schema, instead of each slide having a page number that determines its order within the presentation, each slide has a unique integer identifier that is unrelated to where it occurs in sequence. The order of slides in the presentation is determined by a list of slideIds, stored as a text string in the MANIFEST column of the VERSION table. Since multiple entries are allowed in the VERSION table, that means that multiple presentations can be stored in the same document.&lt;/p&gt;
&lt;p&gt;On startup, the application first decides which version it wants to display. Since the versionId will naturally increase in time and one would normally want to see the latest version, an appropriate query might be:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;pre&gt;
SELECT manifest, versionId FROM version ORDER BY versionId DESC LIMIT 1;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Or perhaps the application would rather use the most recent checkinTime:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;pre&gt;
SELECT manifest, versionId, max(checkinTime) FROM version;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Using a single query such as the above, the application obtains a list of the slideIds for all slides in the presentation. The application then queries for the content of the first slide, and parses and displays that content, as before.&lt;/p&gt;
&lt;p&gt;(Aside: Yes, that second query above that uses &quot;max(checkinTime)&quot; really does work and really does return a well-defined answer in SQLite. Such a query either returns an undefined answer or generates an error in many other SQL database engines, but in SQLite it does what you would expect: it returns the manifest and versionId of the entry that has the maximum checkinTime.)&lt;/p&gt;
&lt;p&gt;When the user does a &quot;File/Save&quot;, instead of overwriting the modified slides, the application can now make new entries in the SLIDE table for just those slides that have been added or altered. Then it creates a new entry in the VERSION table containing the revised manifest.&lt;/p&gt;
&lt;p&gt;The VERSION table shown above has columns to record a check-in comment (presumably supplied by the user) and the time and date at which the File/Save action occurred. It also records the parent version to record the history of changes. Perhaps the manifest could be stored as a delta from the parent version, though typically the manifest will be small enough that storing a delta might be more trouble than it is worth. The SLIDE table also contains a derivedFrom column which could be used for delta encoding if it is determined that saving the slide content as a delta from its previous version is a worthwhile optimization.&lt;/p&gt;
&lt;p&gt;So with this simple change, the ODP file now stores not just the most recent edit to the presentation, but a history of all historic edits. The user would normally want to see just the most recent edition of the presentation, but if desired, the user can now go backwards in time to see historical versions of the same presentation.&lt;/p&gt;
&lt;p&gt;Or, multiple presentations could be stored within the same document.&lt;/p&gt;
&lt;p&gt;With such a schema, the application would no longer need to make periodic backups of the unsaved changes to a separate file to avoid lost work in the event of a crash. Instead, a special &quot;pending&quot; version could be allocated and unsaved changes could be written into the pending version. Because only changes would need to be written, not the entire document, saving the pending changes would only involve writing a few kilobytes of content, not multiple megabytes, and would take milliseconds instead of seconds, and so it could be done frequently and silently in the background. Then when a crash occurs and the user reboots, all (or almost all) of their work is retained. If the user decides to discard unsaved changes, they simply go back to the previous version.&lt;/p&gt;
&lt;p&gt;There are details to fill in here. Perhaps a screen can be provided that displays a history changes (perhaps with a graph) allowing the user to select which version they want to view or edit. Perhaps some facility can be provided to merge forks that might occur in the version history. And perhaps the application should provide a means to purge old and unwanted versions. The key point is that using an SQLite database to store the content, rather than a ZIP archive, makes all of these features much, much easier to implement, which increases the possibility that they will eventually get implemented.&lt;/p&gt;
&lt;h2&gt;And So Forth...&lt;/h2&gt;
&lt;p&gt;In the previous sections, we have seen how moving from a key/value store implemented as a ZIP archive to a simple SQLite database with just three tables can add significant capabilities to an application file format. We could continue to enhance the schema with new tables, with indexes added for performance, with triggers and views for programming convenience, and constraints to enforce consistency of content even in the face of programming errors. Further enhancement ideas include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Store an &lt;a href=&quot;https://sqlite.org/undoredo.html&quot;&gt;automated undo/redo stack&lt;/a&gt; in a database table so that Undo could go back into prior edit sessions.&lt;/li&gt;
&lt;li&gt;Add &lt;a href=&quot;https://sqlite.org/fts3.html#fts4&quot;&gt;full text search&lt;/a&gt; capabilities to the slide deck, or across multiple slide decks.&lt;/li&gt;
&lt;li&gt;Decompose the &quot;settings.xml&quot; file into an SQL table that is more easily viewed and edited by separate applications.&lt;/li&gt;
&lt;li&gt;Break out the &quot;Presentor Notes&quot; from each slide into a separate table, for easier access from third-party applications and/or scripts.&lt;/li&gt;
&lt;li&gt;Enhance the presentation concept beyond the simple linear sequence of slides to allow for side-tracks and excursions to be taken depending on how the audience is responding.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;An SQLite database has a lot of capability, which this essay has only begun to touch upon. But hopefully this quick glimpse has convinced some readers that using an SQL database as an application file format is worth a second look.&lt;/p&gt;
&lt;p&gt;Some readers might resist using SQLite as an application file format due to prior exposure to enterprise SQL databases and the caveats and limitations of those other systems. For example, many enterprise database engines advise against storing large strings or BLOBs in the database and instead suggest that large strings and BLOBs be stored as separate files and the filename stored in the database. But SQLite is not like that. Any column of an SQLite database can hold a string or BLOB up to about a gigabyte in size. And for strings and BLOBs of 100 kilobytes or less, &lt;a href=&quot;https://sqlite.org/intern-v-extern-blob.html&quot;&gt;I/O performance is better&lt;/a&gt; than using separate files.&lt;/p&gt;
&lt;p&gt;Some readers might be reluctant to consider SQLite as an application file format because they have been inculcated with the idea that all SQL database schemas must be factored into third normal form and store only small primitive data types such as strings and integers. Certainly relational theory is important and designers should strive to understand it. But, as demonstrated above, it is often quite acceptable to store complex information as XML or JSON in text fields of a database. Do what works, not what your database professor said you ought to do.&lt;/p&gt;
&lt;h2&gt;Review Of The Benefits Of Using SQLite&lt;/h2&gt;
&lt;p&gt;In summary, the claim of this essay is that using SQLite as a container for an application file format like OpenDocument and storing lots of smaller objects in that container works out much better than using a ZIP archive holding a few larger objects. To wit:&lt;/p&gt;
&lt;ol readability=&quot;10.795568263045&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;An SQLite database file is approximately the same size, and in some cases smaller, than a ZIP archive holding the same information.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.7487922705314&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://sqlite.org/atomiccommit.html&quot;&gt;atomic update capabilities&lt;/a&gt; of SQLite allow small incremental changes to be safely written into the document. This reduces total disk I/O and improves File/Save performance, enhancing the user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Startup time is reduced by allowing the application to read in only the content shown for the initial screen. This largely eliminates the need to show a progress bar when opening a new document. The document just pops up immediately, further enhancing the user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;The memory footprint of the application can be dramatically reduced by only loading content that is relevant to the current display and keeping the bulk of the content on disk. The fast query capability of SQLite make this a viable alternative to keeping all content in memory at all times. And when applications use less memory, it makes the entire computer more responsive, further enhancing the user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The schema of an SQL database is able to represent information more directly and succinctly than a key/value database such as a ZIP archive. This makes the document content more accessible to third-party applications and scripts and facilitates advanced features such as built-in document versioning, and incremental saving of work in progress for recovery after a crash.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;These are just a few of the benefits of using SQLite as an application file format — the benefits that seem most likely to improve the user experience for applications like OpenOffice. Other applications might benefit from SQLite in different ways. See the &lt;a href=&quot;https://sqlite.org/appfileformat.html&quot;&gt;Application File Format&lt;/a&gt; document for additional ideas.&lt;/p&gt;
&lt;p&gt;Finally, let us reiterate that this essay is a thought experiment. The OpenDocument format is well-established and already well-designed. Nobody really believes that OpenDocument should be changed to use SQLite as its container instead of ZIP. Nor is this article a criticism of OpenDocument for not choosing SQLite as its container since OpenDocument predates SQLite. Rather, the point of this article is to use OpenDocument as a concrete example of how SQLite can be used to build better application file formats for future projects.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Thu, 02 Nov 2017 02:20:36 +0000</pubDate>
<dc:creator>ejstronge</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://sqlite.org/affcase1.html</dc:identifier>
</item>
<item>
<title>Data Classes for Java</title>
<link>http://cr.openjdk.java.net/~briangoetz/amber/datum.html</link>
<guid isPermaLink="true" >http://cr.openjdk.java.net/~briangoetz/amber/datum.html</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;meta http-equiv=&quot;Content-Style-Type&quot; content=&quot;text/css&quot; /&gt;&lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;749.90464904284&quot;&gt;

&lt;h4 id=&quot;brian-goetz-october-2017&quot;&gt;Brian Goetz, October 2017&lt;/h4&gt;
&lt;p&gt;This document explores possible directions for &lt;em&gt;data classes&lt;/em&gt; in the Java Language. This is an exploratory document only and does not constitute a plan for any specific feature in any specific version of the Java Language.&lt;/p&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;It is a common (and often deserved) complaint that &quot;Java is too verbose&quot; or has too much &quot;ceremony.&quot; A significant contributor to this is that while classes can flexibly model a variety of programming paradigms, this invariably comes with modeling overheads -- and in the case of classes that are nothing more than &quot;plain data carriers&quot;, the modeling overhead can be substantial. To write such a class responsibly, one has to write a lot of low-value, repetitive code: constructors, accessors, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt;, &lt;code&gt;toString()&lt;/code&gt;, and possibly others, such as &lt;code&gt;compareTo()&lt;/code&gt;. And because this is burdensome, developers may be tempted to cut corners such as omitting these important methods, leading to surprising behavior or poor debuggability, or press an alternate but not entirely appropriate class into service because it has the &quot;right shape&quot; and they don't want to define yet another class.&lt;/p&gt;
&lt;p&gt;There's no doubt that writing the usual boilerplate code for these members is annoying (especially as it seems so unnecessary.) Even though IDEs will generate much of this for you, it's still irritating -- a class with only a few lines of real semantic content takes dozens of lines of code -- but more importantly, the IDEs don't help the &lt;em&gt;reader&lt;/em&gt; to distill the design intent of &quot;I'm a plain vanilla data holder with fields &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;&quot; from the code. And, more importantly still, repetitive code is error-prone; boilerplate code gives bugs a place to hide.&lt;/p&gt;
&lt;h4 id=&quot;data-classes&quot;&gt;Data classes&lt;/h4&gt;
&lt;p&gt;Other OO languages have explored syntactic forms for more compact class declaration: &lt;code&gt;case&lt;/code&gt; classes in &lt;a href=&quot;https://docs.scala-lang.org/tour/case-classes.html&quot;&gt;Scala&lt;/a&gt;, &lt;code&gt;data&lt;/code&gt; classes in &lt;a href=&quot;https://kotlinlang.org/docs/reference/data-classes.html&quot;&gt;Kotlin&lt;/a&gt;, and soon, &lt;code&gt;record&lt;/code&gt; classes in &lt;a href=&quot;https://github.com/dotnet/roslyn/blob/features/records/docs/features/records.md&quot;&gt;C#&lt;/a&gt;. These have in common that the some or all of the state of a class can be described directly directly in the class header (though they vary in their semantics, such as constraints on the mutability or accessibility of fields, extensibility of the class, and other restrictions.) Committing in the class declaration to the relationship between state and interface enables suitable defaults to be generated for various state-related members. All of these mechanisms (let's call them &quot;data classes&quot;) seek to bring us closer to the goal of being able to define a plain XY &lt;code&gt;Point&lt;/code&gt; class as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;__data class Point(int x, int y) { }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The clarity and compactness here is surely attractive -- this says that a &lt;code&gt;Point&lt;/code&gt; is a carrier for two integer components &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, and from that, the reader immediately knows that there are sensible &lt;em&gt;and correct&lt;/em&gt; implementations for the core &lt;code&gt;Object&lt;/code&gt; methods, and doesn't have to wade through a page of boilerplate to be able to confidently reason about their semantics. Most developers are going to say &quot;Well, of course I want &lt;em&gt;that&lt;/em&gt;.&quot;&lt;/p&gt;
&lt;h4 id=&quot;meet-the-elephant&quot;&gt;Meet the elephant&lt;/h4&gt;
&lt;p&gt;Unfortunately, such universal consensus is only syntax-deep; almost immediately after we finish celebrating the concision, come the arguments about the natural semantics of such a construct, and what restrictions we are willing to accept. Are they extensible? Are the fields mutable? Can I control the behavior of the generated methods, or the accessibility of the fields? Can I have additional fields and constructors?&lt;/p&gt;
&lt;p&gt;Just like the story of the blind men and the elephant, different developers are likely to bring very different assumptions about the &quot;obvious&quot; semantics of a data class. To bring these implicit assumptions into the open, let's name the various positions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Algebraic Annie&lt;/em&gt; will say &quot;a data class is just an algebraic product type.&quot; Like Scala's case classes, they come paired with pattern matching, and are best served immutable. (And for dessert, Annie would order sealed interfaces.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Boilerplate Billy&lt;/em&gt; will say &quot;a data class is just an ordinary class with better syntax&quot;, and will likely bristle at constraints on mutability, extension, or encapsulation. (Billy's brother, JavaBean Jerry, will say &quot;these must be for JavaBeans -- so of course I get getters and setters too.&quot; And his sister, POJO Patty, remarks that she is drowning in enterprise POJOs, and reminds us that she'd like these to be proxyable by frameworks like Hibernate.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tuple Tommy&lt;/em&gt; will say &quot;a data class is just a nominal tuple&quot; -- and may not even be even expecting them to have methods other than the core &lt;code&gt;Object&lt;/code&gt; methods -- they're just the simplest of aggregates. (He might even expect the names to be erased, so that two data classes of the same &quot;shape&quot; can be freely converted.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Values Victor&lt;/em&gt; will say &quot;a data class is really just a more transparent value type.&quot;&lt;/p&gt;
&lt;p&gt;All of these personae are united in favor of &quot;data classes&quot; -- but have different ideas of what data classes are, and there may not be any one solution that makes them all happy.&lt;/p&gt;
&lt;h4 id=&quot;understanding-the-problem&quot;&gt;Understanding the problem&lt;/h4&gt;
&lt;p&gt;It is superficially tempting to treat this feature as being primarily about boilerplate reduction; after all, we're painfully aware of the state-related boilerplate we deal with every day. However, boilerplate is just a symptom of a deeper problem. Our main tool for data abstraction is classes, which are indeed a versatile tool. And the primary hammer of classes is &lt;em&gt;encapsulation&lt;/em&gt;. Encapsulating our state (so it can't be manipulated directly) and our representation (so we can change representation freely while maintaining the same API contract) gives us a lot of flexibility, and it enables us to write code that can operate safely and robustly across a variety of &lt;em&gt;boundaries&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Maintenance boundaries -- when our clients are working in a different sourcebase or organization;&lt;/li&gt;
&lt;li&gt;Security and trust boundaries -- where we do not want to expose our state to clients because we do not fully trust them to not deliberately modify or use it in malicious ways;&lt;/li&gt;
&lt;li&gt;Integrity boundaries -- where we do not want to expose our state to clients because, while we may trust their intent and are willing to share our data with them, we do not trust them to ensure that key invariants are maintained (or do not want to burden them with these concerns);&lt;/li&gt;
&lt;li&gt;Versioning boundaries -- where we want to ensure that clients compiled against one version of a library continue to work when run against a subsequent version.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These benefits are significant -- indeed, essential -- for classes like &lt;code&gt;SocketInputStream&lt;/code&gt;, but often less so for classes like &lt;code&gt;Point&lt;/code&gt;. Many classes are not concerned with defending any of these boundaries -- maybe it is private to a package or module and co-compiled with all its clients, trusts its clients, and has no complex invariants that we need to protect. Sadly, the cost of flexibility -- the need to spell everything out explicitly (how to map constructor arguments to state, how to derive the equality contract from state, etc) -- is borne by all classes, but the benefit is not shared so equally, pushing the cost-benefit balance out of line for classes that are less concerned with defending their boundaries. This is what Java developers mean by &quot;too much ceremony&quot; -- not that the ceremony has no value, but that they're forced to invoke it even when it does not offer sufficient value, and imposes additional costs (both machine and human.)&lt;/p&gt;
&lt;p&gt;If we could say that a class was a &lt;em&gt;plain data carrier&lt;/em&gt; for a given state vector, then we could provide sensible and correct defaults for state-related members like constructors, accessors, and &lt;code&gt;Object&lt;/code&gt; methods. Since there's currently no way to say what we really mean, our only alternative is to get out our imperative hammer and start bashing. But &quot;plain&quot; domain classes are so common that it would be nice to capture this design decision directly in the code -- where readers and compilers alike could take advantage of it -- rather than simulating it imperatively (and thereby obfuscating our design intent). So while boilerplate may be the symptom, the disease is that our code cannot directly capture our design intent, and if we cure the disease, the boilerplate goes away. For these reasons, we believe it is better to treat this feature as being about &lt;em&gt;modeling pure data aggregates&lt;/em&gt;, rather than about concision or boilerplate.&lt;/p&gt;
&lt;h2 id=&quot;digression----enums&quot;&gt;Digression -- enums&lt;/h2&gt;
&lt;p&gt;If the problem is that we're modeling something simple with something overly general, simplification is going to come from constraint; by letting go of some degrees of freedom, we hope to be freed of the obligation to specify everything explicitly.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;enum&lt;/code&gt; facility, added in Java 5, is an excellent example of such a tradeoff. The type-safe enum pattern was well understood, and easy to express (albeit verbosely), prior to Java 5 (see &lt;a href=&quot;https://www.amazon.com/gp/product/0321356683?ie=UTF8&amp;amp;tag=briangoetz-20&amp;amp;camp=1789&amp;amp;linkCode=xm2&amp;amp;creativeASIN=0321356683&quot;&gt;Effective Java, 1st Edition&lt;/a&gt;, item 21.) The initial motivation to add enums to the language might have been irritation at the boilerplate required for this idiom, but the real benefit is semantic.&lt;/p&gt;
&lt;p&gt;The key simplification of enums was to constrain the lifecycle of enum instances -- enum constants are singletons, and the requisite instance control is managed by the runtime. By baking singleton-awareness into the language model, the compiler can safely and correctly generate the boilerplate needed for the type-safe enum pattern. And because enums started with a semantic goal, rather than a syntactic one, it was possible for enums to interact positively with other features, such as the ability to &lt;code&gt;switch&lt;/code&gt; on enums.&lt;/p&gt;
&lt;p&gt;Perhaps surprisingly, enums delivered their syntactic and semantic benefits without requiring us to give up most other degrees of freedom that classes enjoy; Java's enums are not mere enumerations of integers, as they are in many other languages, but instead are full-fledged classes, with unconstrained state and behavior, and even subtyping (though this is constrained to interface inheritance only.)&lt;/p&gt;
&lt;h4 id=&quot;why-not-just-do-tuples&quot;&gt;Why not &quot;just&quot; do tuples?&lt;/h4&gt;
&lt;p&gt;Some readers may feel at this point that if we &quot;just&quot; had tuples, we wouldn't need data classes. And while tuples might offer a lighter-weight means to express some aggregates, the result is often inferior aggregates. A central aspect of the Java philosophy is that &lt;em&gt;names matter&lt;/em&gt;; a &lt;code&gt;Person&lt;/code&gt; with properties &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; is clearer and safer than a tuple of &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt;. The major pain of using named classes for aggregates is the syntactic overhead of declaring them; if we reduce this overhead, the temptation to reach for more weakly typed mechanisms is greatly reduced.&lt;/p&gt;
&lt;h2 id=&quot;towards-requirements-for-data-classes&quot;&gt;Towards requirements for data classes&lt;/h2&gt;
&lt;p&gt;It's easy to claim a class is &quot;just a plain data carrier&quot;, but what do we mean by that? What degrees of freedom that classes enjoy do &quot;plain&quot; data aggregates not need, that we can eliminate and thereby simplify the model?&lt;/p&gt;
&lt;p&gt;At one extreme, nobody thinks that &lt;code&gt;SocketInputStream&lt;/code&gt; is &quot;just&quot; its data; it fully encapsulates some complex and unspecified state (including a native resource) and exposes an interface contract that likely looks nothing like its internal representation.&lt;/p&gt;
&lt;p&gt;At the other extreme, a class like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;final class Point {
    public final int x;
    public final int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    // state-based implementations of equals, hashCode, toString
    // nothing else&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;is clearly &quot;just&quot; the data &lt;code&gt;(x, y)&lt;/code&gt;. Its representation is &lt;code&gt;(x, y)&lt;/code&gt;, its construction protocol accepts an &lt;code&gt;(x, y)&lt;/code&gt; pair and stores it directly, and it provide unmediated access to its data. The combination of transparency and state-based equality means that a client can extract the data carried by a &lt;code&gt;Point&lt;/code&gt; and instantiate another &lt;code&gt;Point&lt;/code&gt; which is known to be valid and substitutible for the original.&lt;/p&gt;
&lt;p&gt;Let's formalize this notion of &quot;plain data carrier&quot; a bit, so we can use this to evaluate design decisions for a data class feature. We say a class &lt;code&gt;C&lt;/code&gt; is a &lt;em&gt;transparent carrier&lt;/em&gt; for a state vector &lt;code&gt;S&lt;/code&gt; if:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There is a function &lt;em&gt;ctor : S -&amp;gt; C&lt;/em&gt; which maps an instance of the state vector to an instance of &lt;em&gt;C&lt;/em&gt;. (This function may be partial; &lt;em&gt;ctor&lt;/em&gt; may reject some state vectors as invalid, such as rational numbers whose denominator is zero.)&lt;/li&gt;
&lt;li&gt;There is a total function &lt;em&gt;dtor : C -&amp;gt; S&lt;/em&gt; which maps an instance of &lt;em&gt;C&lt;/em&gt; to a state vector &lt;em&gt;S&lt;/em&gt; in the domain of &lt;em&gt;ctor&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;For any instance &lt;em&gt;c&lt;/em&gt; of &lt;em&gt;C&lt;/em&gt;, &lt;em&gt;ctor(dtor(c)) equals c&lt;/em&gt;, according to the &lt;code&gt;equals()&lt;/code&gt; contract for &lt;em&gt;C&lt;/em&gt;, and further, that the composition &lt;em&gt;ctor(dtor(x))&lt;/em&gt; is an &lt;em&gt;identity&lt;/em&gt; on the codomain of &lt;em&gt;ctor&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;For two state vectors &lt;em&gt;s1&lt;/em&gt; and &lt;em&gt;s2&lt;/em&gt; in the domain of &lt;em&gt;ctor&lt;/em&gt;, if each of their components is equal to the corresponding component of the other (according to the component's &lt;code&gt;equals()&lt;/code&gt; contract), then &lt;em&gt;ctor(s1) equals ctor(s2)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;For any mutative operations of &lt;em&gt;C&lt;/em&gt;, performing the same operation on equal instances of &lt;em&gt;C&lt;/em&gt; results in equal instances of &lt;em&gt;C&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This means that &lt;code&gt;C&lt;/code&gt; has a constructor (or factory) which accepts the state vector &lt;code&gt;S&lt;/code&gt;, and accessors (or a deconstruction pattern) which produces the components of &lt;code&gt;S&lt;/code&gt;, and that for any valid instance, extracting the state vector and then reconstructing an instance from that state vector produces an instance that is equivalent to the original. Similarly, constructing instances from equivalent state vectors produces equivalent instances, and applying the same mutative operation to equivalent instances preserves their equivalence. Such carriers are &lt;em&gt;transparent&lt;/em&gt; -- their state can be freely from the outside (because clients can call the &lt;em&gt;dtor&lt;/em&gt; function).&lt;/p&gt;
&lt;p&gt;Together, these requirements say that there is a very simple relationship between the classes representation, its construction, and its destructuring. In other words, the API &lt;em&gt;is&lt;/em&gt; the representation -- and both client and compiler can safely assume this. A class that is a plain data carrier is &lt;em&gt;the data, the whole data, and nothing but the data&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Note that so far, we haven't said anything about syntax or boilerplate; we've only talked about constraining the semantics of the class to be a simple carrier for a specified state vector. But these constraints allow us to safely and mechanically generate the boilerplate for constructors, pattern extractors, accessors, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt;, and &lt;code&gt;toString()&lt;/code&gt; -- and more.&lt;/p&gt;
&lt;h4 id=&quot;data-classes-and-pattern-matching&quot;&gt;Data classes and pattern matching&lt;/h4&gt;
&lt;p&gt;By saying that a data class is a transparent carrier for a publicly-specified state vector, rather than just a boilerplate-reduced class, we gain the ability to freely convert a data class instance back and forth between its aggregate form and its state vector. This has a natural connection with &lt;em&gt;pattern matching&lt;/em&gt;; by committing that a class is merely a carrier for a state vector, there is an obvious deconstruction pattern -- whose signature is the dual of the constructor's -- which can be mechanically generated.&lt;/p&gt;
&lt;p&gt;For example, suppose we have data classes as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;interface Shape { }
__data class Point(int x, int y) { }
__data class Rect(Point p1, Point p2) implements Shape { }
__data class Circle(Point center, int radius) implements Shape { }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A client can deconstruct a shape as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;switch (shape) {
     case Rect(Point(var x1, var y1), Point(var x2, var y2)): ...
     case Circle(Point(var x, var y), int r): ...
     ....
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;with the mechanically generated pattern extractors. This synergy between data classes and pattern matching makes each feature more expressive. However, a not-entirely-obvious consequence of this is that there is no such thing as truly &lt;code&gt;private&lt;/code&gt; fields in a data class; even if the fields were to be declared private, their values would still be implicitly readable via the destructuring pattern. This would be surprising if our design center for data class was that they are merely a boilerplate reduction tool -- but is consistent with data classes being transparent carriers for their data.&lt;/p&gt;
&lt;h4 id=&quot;data-classes-and-externalization&quot;&gt;Data classes and externalization&lt;/h4&gt;
&lt;p&gt;Data classes are also a natural fit for safe, mechanical externalization (serialization, marshaling to and from JSON or XML, mapping to database rows, etc). If a class is a transparent carrier for a state vector, and the components of that state vector can be externalized in the desired encoding, then the carrier can be safely and mechanically marshaled and unmarshaled with guaranteed fidelity, and without the security and integrity risks of bypassing the constructor (as built-in serialization does). In fact, a transparent carrier need not do anything special to support externalization; the externalization framework can deconstruct the object using its principal deconstructor, and reconstruct it using its principal constructor, which are already public.&lt;/p&gt;
&lt;h2 id=&quot;refining-the-design-space&quot;&gt;Refining the design space&lt;/h2&gt;
&lt;p&gt;The requirements for being a &quot;plain data carrier&quot; represent a sensible trade-off; by agreeing to transparently expose our representation and state, we gain safe and predictable implementations of constructors, &lt;code&gt;Object&lt;/code&gt; methods, destructuring patterns, and externalization. Let's take this as our starting point, and explore some other natural questions that come up in the context of designing such a feature.&lt;/p&gt;
&lt;h4 id=&quot;overriding-default-members&quot;&gt;Overriding default members&lt;/h4&gt;
&lt;p&gt;The default implementations of constructors and &lt;code&gt;Object&lt;/code&gt; methods is likely to be what is desired in a lot of cases, but there may be cases where we want to refine these further, such as a constructor that enforces additional invariants, or an &lt;code&gt;equals()&lt;/code&gt; method that compares array components by content rather than delegating to &lt;code&gt;Object.equals()&lt;/code&gt;. (Allowing refined implementations expands the range of useful data classes, but also exposes us to the risk that the the explicit implementations won't conform to the requirements of a plain data carrier.)&lt;/p&gt;
&lt;h4 id=&quot;constructors&quot;&gt;Constructors&lt;/h4&gt;
&lt;p&gt;In our definition, we said that construction could be a partial function, to allow constructors to enforce domain invariants (such as a &quot;range&quot; type ensuring that the lower bound doesn't exceed the upper bound). Data classes without representational invariants should not require an explicit constructor, but ideally it should be possible to specify an explicit constructor that enforces invariants -- without having to write out all the constructor boilerplate out by hand.&lt;/p&gt;
&lt;p&gt;Data classes clearly need a constructor whose signature matches that of the state vector (call this the &lt;em&gt;principal constructor&lt;/em&gt;); otherwise, the class would not be merely a carrier for its state vector, as we couldn't freely deconstruct and reconstruct it. Can a data class have additional constructors too? This seems reasonable -- if they are merely convenience implementations that delegate to the principal constructor.&lt;/p&gt;
&lt;h4 id=&quot;ancillary-fields&quot;&gt;Ancillary fields&lt;/h4&gt;
&lt;p&gt;Related to the previous item is the question of whether the state vector describes &lt;em&gt;all&lt;/em&gt; the state of the class, or merely some distinguished subset of it. While at first it might seem reasonable to allow additional fields, these also constitute a slippery slope away from the design center of &quot;plain data carrier.&quot; If there were ancillary fields that affect the behavior of &lt;code&gt;equals()&lt;/code&gt; or &lt;code&gt;hashCode()&lt;/code&gt;, then this will almost certainly violate the requirement that deconstructing a carrier and reconstructing it yields an equivalent instance.&lt;/p&gt;
&lt;p&gt;Similarly, if they affected the behavior of mutative methods, this would undermine the requirement that performing identical actions on equal carriers results in equal carriers. So while there are legitimate uses for ancillary variables (primarily caching state derived from the state vector), ancillary fields come with the risk of violating the spirit of &quot;the state, the whole state, and nothing but the state.&quot;&lt;/p&gt;
&lt;h4 id=&quot;extension&quot;&gt;Extension&lt;/h4&gt;
&lt;p&gt;Can a data class extend an ordinary class? Can a data class extend another data class? Can a non-data class extend a data class? Again, let's evaluate these through our definition of plain data carrier.&lt;/p&gt;
&lt;p&gt;Extension between data classes and non-data classes, or between concrete data classes, seems immediately problematic. If a data class extends an ordinary class, we would have no control over the &lt;code&gt;equals()&lt;/code&gt; contract of the superclass, and therefore no reason to believe that the desired invariants hold.&lt;/p&gt;
&lt;p&gt;Similarly, if another class (data or not) were to extend a data class, we'd almost certainly violate the desired invariants. Consider:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;__data class C(STATE_VECTOR) { }
class D extends C { ... }

D d = ...
switch (d) { 
    case C(var STATE_VECTOR): assert d.equals(new C(STATE_VECTOR));
    ...
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Deconstructing a &lt;code&gt;C&lt;/code&gt; into its state and then reconstructing it into a carrier should yield an equivalent instance -- but in this case, it will not. D is not a plain carrier for C's state vector, as it has at least some additional typestate, and perhaps some additional state and behavior as well, which may cause the equality check to fail.&lt;/p&gt;
&lt;h4 id=&quot;mutability&quot;&gt;Mutability&lt;/h4&gt;
&lt;p&gt;One of the thorniest problems is whether we allow mutability, and how we handle the consequences if we do. The simplest solution -- and surely a tempting one -- is to insist that state components of data classes be &lt;code&gt;final&lt;/code&gt;. While this is an attractive opening position, this may ultimately be too limiting; while immutable data is surely better-behaved than mutable data, mutable data certainly qualifies as &quot;data&quot;, and there are many legitimate uses for mutable &quot;plain data&quot; aggregates. (And, even if we required that data class fields always be &lt;code&gt;final&lt;/code&gt;, this only gives us shallow immutability -- we still have to deal with the possibility that the contents are more deeply mutable.)&lt;/p&gt;
&lt;p&gt;It is worth noting that similar languages that went down the data-class path -- including Scala, Kotlin, and C# -- all settled on not forcing data classes to be immutable, though its almost certain that their designers initially considered doing so. (Even if we allow mutability, we still have the option of nudging users towards finality, say by making the default for data class fields &lt;code&gt;final&lt;/code&gt;, and providing a way to opt out of finality for individual fields.)&lt;/p&gt;
&lt;h4 id=&quot;field-encapsulation&quot;&gt;Field encapsulation&lt;/h4&gt;
&lt;p&gt;Related to the problem of mutability is whether fields can be individually encapsulated. There are several reasons why one might want to encapsulate fields, even if we've given up on decoupling the representation from the API:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;To protect integrity boundaries (rejecting writes that would violate representational invariants);&lt;/li&gt;
&lt;li&gt;To detect when writes have happened, so that listeners can be notified or cached state can be adjusted;&lt;/li&gt;
&lt;li&gt;To make defensive copies on reads, such as for array components.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All are related, directly or indirectly, to mutability. If data class fields are &lt;code&gt;final&lt;/code&gt;, once the constructor establishes the invariants, they cannot be undermined, and if there are no writes, there's no need to take any action on writes. Similarly, only if data class state is deeply mutable (such as for array components) would we need to consider defensive copies. Absent any concern about deep mutability, if data class fields are &lt;code&gt;final&lt;/code&gt;, there's no reason for them to not also be &lt;code&gt;public&lt;/code&gt; (since we've already given up on the ability to compatibly change the representation across maintenance boundaries.) And, even if fields are mutable, if they do not participate in any invariants (no integrity boundaries) and are confined to a package or module (no maintenance or trust boundaries), then it might well be reasonable for mutable fields to be public as well.&lt;/p&gt;
&lt;p&gt;The primary remaining motivation for encapsulating fields, then, is to limit writes to those fields when sharing instances across trust or integrity boundaries. Any support for state encapsulation should focus on these aspects alone.&lt;/p&gt;
&lt;h4 id=&quot;accessors&quot;&gt;Accessors&lt;/h4&gt;
&lt;p&gt;No discussion involving boilerplate (or any question of Java language evolution, for that matter) can be complete without the subject of field accessors (and properties) coming up. On the one hand, accessors constitute a significant portion of boilerplate in existing code; on the other hand, the JavaBean-style getter/setter conventions are already badly overused. (Immutable classes could forgo accessors in favor of public final fields, as long as they're not worried about maintenance boundaries. Even mutable classes without state invariants could get away with public mutable fields instead of accessors -- again as long as they're not worried about maintenance boundaries. These two cases already cover a large proportion of the candidates for data classes.)&lt;/p&gt;
&lt;p&gt;If it turns out to make sense to support mutable fields, it probably also make sense to support write-encapsulation of those fields to defend integrity boundaries. But we should be mindful of the purpose of these accessors; it is not to abstract the representation from the API, but merely to enable rejection of bad values, and provide syntactic uniformity of access.&lt;/p&gt;
&lt;p&gt;Without rehashing the properties debate, one fundamental objection to automating JavaBean-style field accessors is that it would take what is at best a questionable (and certainly overused) API naming convention and burn it into the language. Unlike the core methods like &lt;code&gt;Object.equals()&lt;/code&gt;, field accessors do not have any special treatment in the language, and so names of the form &lt;code&gt;getSize()&lt;/code&gt; should not either. (Also, while tedious, writing (and reading) accessor declarations are not nearly as error-prone as &lt;code&gt;equals()&lt;/code&gt;.)&lt;/p&gt;
&lt;h4 id=&quot;arrays-and-defensive-copies&quot;&gt;Arrays and defensive copies&lt;/h4&gt;
&lt;p&gt;Array-valued fields are particularly problematic, as there is no way to make them deeply immutable. But they're really just a special case of mutable objects which do not provide unmodifiable views. APIs that encapsulate arrays frequently make defensive copies when they're on the other side of a trust boundary from their users. Should data classes support this? Unfortunately, this also falls afoul of our requirements for data classes.&lt;/p&gt;
&lt;p&gt;Because the &lt;code&gt;equals()&lt;/code&gt; method of arrays is inherited from &lt;code&gt;Object&lt;/code&gt;, which compares instances by identity, making defensive copies of array components in read accessors would violate the invariant that destructuring an instance of a data class and reconstructing it yields an equivalent instance -- the defensive copy and the original array will not be equal to each other. (Arrays are simply a bad fit for data classes, as they are mutable, but unlike &lt;code&gt;List&lt;/code&gt; their &lt;code&gt;equals()&lt;/code&gt; method is based on identity.) We'd rather not distort data classes to accomodate arrays, especially as there are ample alternatives available.&lt;/p&gt;
&lt;h4 id=&quot;thread-safety&quot;&gt;Thread-safety&lt;/h4&gt;
&lt;p&gt;Allowing mutable state in data classes raises the question of whether, and how, they can be made thread-safe. (Note that thread-safety is not a requirement for mutable classes; many useful classes, such as &lt;code&gt;ArrayList&lt;/code&gt;, are not thread-safe.) Thread-safe classes encapsulate a protocol for coordinating access to their shared mutable state. But, data classes disavow most forms of encapsulation. (Immutable objects are implicitly thread-safe, because there is no shared mutable state to which access need be coordinated.)&lt;/p&gt;
&lt;p&gt;Like most non-thread-safe classes, instances of mutable data classes can still be used safely in concurrent environments through &lt;em&gt;confinement&lt;/em&gt;, where the data class instance is encapsulated within a thread-safe class. While it might be possible to nibble around the edges to support a few use cases, ultimately data classes are not going to be the right tool for creating thread-safe mutable classes, and rather than reinventing all the flexibility of classes in a new syntax, we should probably just guide people to writing ordinary classes in these cases.&lt;/p&gt;
&lt;h4 id=&quot;data-classes-and-value-types&quot;&gt;Data classes and value types&lt;/h4&gt;
&lt;p&gt;With &lt;em&gt;value types&lt;/em&gt; coming down the road through &lt;a href=&quot;http://openjdk.java.net/projects/valhalla/&quot;&gt;Project Valhalla&lt;/a&gt;, it is reasonable to ask about the overlap between immutable data classes and value types, as well as whether the intersection of data-ness and value-ness is a useful space to inhabit.&lt;/p&gt;
&lt;p&gt;Value types are primarily about enabling &lt;em&gt;flat&lt;/em&gt; and &lt;em&gt;dense&lt;/em&gt; layout of object in memory. The central sacrifice of value types is &lt;em&gt;object identity&lt;/em&gt;; in exchange for giving up object identity (which means giving up mutability and layout polymorphism), we can elide object headers and can inline values directly into the layout of other values, objects, and arrays, and freely hoist values out of the heap and onto the stack or into registers. The lack of layout polymorphism means we have to give up something else: self-reference. A value type &lt;code&gt;V&lt;/code&gt; cannot refer, directly or indirectly, to another unboxed &lt;code&gt;V&lt;/code&gt;. But value classes need not give up any encapsulation, and in fact encapsulation is essential for some applications of value types (such as references to native resources.)&lt;/p&gt;
&lt;p&gt;On the other hand, data classes instances have identity, which supports mutability (maybe) but also supports self-reference. Unlike value types, data class instances are entirely suited to representing self-referential graphs.&lt;/p&gt;
&lt;p&gt;Each of these simplified class forms -- values and data classes -- involves accepting certain restrictions in exchange for certain benefits. If we're willing to accept both sets of restrictions, we get both sets of benefits; the notion of a &quot;value data class&quot; is perfectly sensible for things like extended numerics or tuples.&lt;/p&gt;
&lt;h4 id=&quot;compatibility-and-migration&quot;&gt;Compatibility and migration&lt;/h4&gt;
&lt;p&gt;It is important that existing classes that meet the requirements for data classes (or are willing to do so) should be able to be compatibly migrated to data classes, so that the many existing classes that are candidate for being data classes can benefit from the semantic transparency and syntactic concision of data classes. Similarly, it is important to be able to do the reverse, so that data classes can be compatibly refactored into regular classes if they evolve to outgrow the constraints of data classes.&lt;/p&gt;
&lt;p&gt;If an existing class which meets the requirements wants to migrate to be a data class, it should be able to do so by simply exposing its state through the class header and removing redundant field, constructor, and &lt;code&gt;Object&lt;/code&gt; method declarations. Similarly, if a data class wants to migrate to be a full-blown class, it should be able to do so by providing explicit declarations of its fields, constructors, and &lt;code&gt;Object&lt;/code&gt; methods (and, when explicit pattern extractors are supported, pattern extractors). Both of these migrations should be source- and binary-compatible; it is the responsibility of the developer to ensure that they are behaviorally compatible.&lt;/p&gt;
&lt;p&gt;Once a data class is published, however, changing the state description will have compatibility consequences for clients that are outside the maintenance boundary. The binary- and source- compatibility impact of such changes can be partially mitigated by declaring new constructors and pattern match extractors that follow the old state description (so that existing clients can construct and deconstruct them), but depending on existing usage, it may be hard to mitigate the behavioral compatibility issues, as the resulting class may well fall afoul of the various invariants of plain data carriers from the perspective of legacy clients, such as the deconstructing and reconstructing a data class using an old state vector. For data classes operating within a maintenance boundary, it may be practical to compatibly refactor both a data class and its clients when changing the state description.&lt;/p&gt;
&lt;h2 id=&quot;a-concrete-proposal&quot;&gt;A concrete proposal&lt;/h2&gt;
&lt;p&gt;Now that we have a good idea of what it is to &quot;just&quot; be a data carrier, what is it that we give up? Primarily, we are disavowing several key uses of encapsulation: the ability to decouple a classes interface from its representation, and to hide state from curious readers. (The main form of encapsulation we retain is the ability to control modifications to the state.) Further, we are committing to a state-based interpretation of the core &lt;code&gt;Object&lt;/code&gt; methods, and that any methods on the data class be a pure function of its arguments and the class state.&lt;/p&gt;
&lt;p&gt;What &lt;em&gt;don't&lt;/em&gt; we have to give up to get this? Quite a lot. Data classes can be generic, can implement interfaces, can have static fields, and can have constructors and methods, all without compromising this committments. To start, let's say that&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;__data class Point(int x, int y) { }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;desugars to&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;final class Point extends java.lang.DataClass {
    final int x;
    final int y;
    
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    // destructuring pattern for Point(int x, int y)
    // state-based equals, hashCode, and toString
    // public read accessors for x and y
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Any interfaces implemented by the data class are lifted onto the desugared class in the obvious way, as are any type variables, static fields, static methods, and instance methods. If the data class provides an explicit implementation of any of the implicit members (constructor, pattern extractor, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt;, &lt;code&gt;toString()&lt;/code&gt;), it is used in place of the implicit member (but the explicit member must obey the stronger contract of these members for data classes, which will be specified in the &lt;code&gt;DataClass&lt;/code&gt; superclass.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Constructors.&lt;/strong&gt; If the data class imposes no invariants, no constructor declaration is needed, and the class acquires a constructor whose signature is that of the data class (the principal constructor). Additional constructors may be explicitly declared -- but they must delegate to the principal constructor. The principal constructor may also be explicitly declared, but it too must delegate to the default principal constructor, as in:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;__data class Range(int lo, int hi) {

    // Explicit principal constructor
    public Range(int lo, int hi) {
        // validation logic
        if (lo &amp;gt; hi)
            throw new IllegalArgumentException(...);
            
        // delegate to default constructor
        default(lo, hi);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;default()&lt;/code&gt; call invokes the default constructor that would otherwise have been auto-generated for this data class (including the default &lt;code&gt;super&lt;/code&gt; constructor); this avoids the need to write out the tedious and error-inviting sequence of &lt;code&gt;this.x = x&lt;/code&gt; assignments. Similarly, the explicit constructor may mutate its arguments to sanitize / normalize / copy them, and pass the copies to the default constructor. (The rules about statements preceding calls to &lt;code&gt;super&lt;/code&gt; or &lt;code&gt;this&lt;/code&gt; constructors can be relaxed, and the &lt;code&gt;this&lt;/code&gt; reference treated as &lt;em&gt;definitely unassigned&lt;/em&gt; for statements preceding the &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;this&lt;/code&gt; call.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fields.&lt;/strong&gt; Given a data class&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;__data class Foo(int x, int y) { ... }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;we will lift the state components &lt;code&gt;(int x, int y)&lt;/code&gt; onto fields of &lt;code&gt;Foo&lt;/code&gt; -- along with any annotations specified on the state components. The Javadoc for data classes will allow class parameters to be documented with the &lt;code&gt;@param&lt;/code&gt; tag, as method parameters are now.&lt;/p&gt;
&lt;p&gt;The most restrictive approach would be that fields are always final; we could also consider making them final by default, but allowing mutability to be supported by opting in via a mutability modifier (&lt;code&gt;non-final&lt;/code&gt;, &lt;code&gt;unfinal&lt;/code&gt;, &lt;code&gt;mutable&lt;/code&gt; -- bikeshed to be painted later.) Similarly, the most restrictive approach would be for them to always have &lt;code&gt;package&lt;/code&gt; accessibility (or &lt;code&gt;protected&lt;/code&gt; for fields of abstract data class); a less restrictive approach would be to treat these as defaults, but allow them to optionally be declared &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With respect to additional fields beyond those in the state description, the most restrictive approach would be to prohibit them. While there are some legitimate use cases for encapsulated private fields that do not violate the requirements (mostly having to do with caching derived properties of the state vector), the risk that this state flows into equality or other semantics is high, bringing us away from the design center of &quot;plain carrier for the state vector.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extension.&lt;/strong&gt; We've already noted that arbitrary extension is problematic, but it should be practical to maintain inheritance from abstract data classes to other data classes. A sensible balance regarding extension is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Non-abstract data classes are final;&lt;/li&gt;
&lt;li&gt;Data classes can be abstract (in which case they acquire no &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt;, or &lt;code&gt;toString()&lt;/code&gt; methods, and all constructors must be &lt;code&gt;protected&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;Data classes can extend abstract data classes;&lt;/li&gt;
&lt;li&gt;No restrictions on what interfaces a data class could implement.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This allows us to declare families of algebraic data types, such as the following partial hierarchy describing an arithmetic expression:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;interface Node { }

abstract __data class BinaryOpNode(Node left, 
                                   Node right) 
    implements Node { }

__data class PlusNode(Node left, Node right) 
      extends BinaryOperatorNode(left, right) { }

__data class MulNode(Node left, Node right) 
      extends BinaryOperatorNode(left, right) { }
      
__data class IntNode(int constant) implements Node { }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When a data class extends an abstract data class, the state description of the superclass must be a prefix of the state description of the subclass:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;abstract __data class Base(int x) { }
__data class Sub(int x, int y) extends Base(x) { }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The arguments to the &lt;code&gt;extends Base()&lt;/code&gt; clause is a list of &lt;em&gt;names&lt;/em&gt; of state components of &lt;code&gt;Sub&lt;/code&gt;, not arbitrary expressions, must be a prefix of the state description of &lt;code&gt;Sub&lt;/code&gt;, and must match the state description of &lt;code&gt;Base&lt;/code&gt;; this suppresses the local declaration of inherited fields, and also plays into the generation of the default principal constructor (which arguments are passed up to which superclass constructor, vs. which are used to initialize local fields.) These rules are sufficient for implementing algebraic data type hierarchies like the &lt;code&gt;Node&lt;/code&gt; example above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Accessors.&lt;/strong&gt; Data classes are transparent; they readily give up their state through the destructuring pattern. To make this explicit, and to support the &lt;em&gt;uniform access principle&lt;/em&gt; for state, data classes implicitly acquire public read accessors for all state components, whose name is the same as the state component. (We will separately explore a more general mechanism for accessors which can be used by arbitrary classes; when such a mechanism is available, data classes will be able to customize the name to suit the conventions they prefer by explicitly using this mechanism.) If write accessors are desired, they can be provided explicitly -- data classes will not bring these automatically.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reflection.&lt;/strong&gt; While our implementation is essentially a desugaring into a mostly ordinary class with fields and methods, we don't actually want to erase the data-ness completely; compilers need to be able to identify which classes are data classes, and what their state descriptions are, so they can enforce any restrictions on how they interact with other classes -- so this information must be present in the class file. This can be reflected on &lt;code&gt;Class&lt;/code&gt; with methods such as &lt;code&gt;isDataClass()&lt;/code&gt; and a method to return the ordered list of fields that are the classes state vector.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The key question in designing a facility for &quot;plain data aggregates&quot; in Java is identifying which degrees of freedom we are willing to give up. If we try to model all the degrees of freedom of classes, we just move the complexity around; to gain some benefit, we must accept some constraints. We think that the sensible constraints to accept are disavowing the use of encapsulation for decoupling representation from API, and for mediating read access to state.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 01 Nov 2017 22:58:22 +0000</pubDate>
<dc:creator>mfiguiere</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://cr.openjdk.java.net/~briangoetz/amber/datum.html</dc:identifier>
</item>
<item>
<title>A Minimalist Guide to SQLite</title>
<link>http://tech.marksblogg.com/sqlite3-tutorial-and-guide.html</link>
<guid isPermaLink="true" >http://tech.marksblogg.com/sqlite3-tutorial-and-guide.html</guid>
<description>&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://sqlite.org/&quot;&gt;SQLite&lt;/a&gt; is a self-contained, serverless SQL database. Dr. Richard Hipp, the creator of SQLite, first released the software on the 17th of August, 2000. Since then it has gone on to be the &lt;a class=&quot;reference external&quot; href=&quot;https://sqlite.org/mostdeployed.html&quot;&gt;second most deployed&lt;/a&gt; piece of software in the world. It's used in systems as important as the &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/copiousfreetime/status/675834543304081409?lang=en&quot;&gt;Airbus A350&lt;/a&gt; so it comes as no surprise the tests for SQLite 3 are aviation-grade. The software itself is very small, the amd64 Debian client and library package is &lt;a class=&quot;reference external&quot; href=&quot;https://packages.debian.org/stretch/sqlite3&quot;&gt;765 KB&lt;/a&gt; when compressed for distribution and 2.3 MB when fully installed. The software is licensed under a very promiscuous license: &lt;a class=&quot;reference external&quot; href=&quot;https://sqlite.org/copyright.html&quot;&gt;Public Domain&lt;/a&gt;.&lt;/p&gt;&lt;div id=&quot;installing-the-sqlite-3-client&quot; readability=&quot;11&quot;&gt;
&lt;h2&gt;Installing the SQLite 3 Client&lt;/h2&gt;
&lt;p&gt;Though there is no server software needed for SQLite 3, there is a client that allows you to have command line access to the underlying database library. The following installs the entirety of the SQLite 3 offering. I ran the following on a fresh install of Ubuntu 16.04.2 LTS.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ sudo apt install sqlite3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;customising-the-client&quot; readability=&quot;14&quot;&gt;
&lt;h2&gt;Customising the Client&lt;/h2&gt;
&lt;p&gt;You can change the default behaviour of the SQLite 3 CLI by editing the &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/.sqliterc&lt;/span&gt;&lt;/tt&gt; files in your home directory. This is handy for saving settings you find yourself using most often. Here's an example where I turn on headers, set the display mode to column, shorten the prompt, attach a timer to every command and print a special character for NULL values.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
$ vi ~/.sqliterc
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
.headers on
.mode column
.nullvalue ¤
.prompt &quot;&amp;gt; &quot;
.timer on
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;importing-csv-data&quot; readability=&quot;93.605432098765&quot;&gt;
&lt;h2&gt;Importing CSV Data&lt;/h2&gt;
&lt;p&gt;You can import CSV data into SQLite 3 via two commands. The first changes the client into CSV mode and the second will imports data from a CSV file. The default separator expected is a pipe so if you're using another character you can change that setting via the &lt;tt class=&quot;docutils literal&quot;&gt;.separator&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;If the destination table doesn't already exist the first row of the CSV files will be used for naming each of the columns. If the table does exist then all of the rows of data will be appended onto the existing table.&lt;/p&gt;
&lt;p&gt;As an example I've put together a CSV file with both ASCII and Japanese characters listing the &lt;a class=&quot;reference external&quot; href=&quot;https://ja.wikipedia.org/wiki/%E3%82%A4%E3%82%AE%E3%83%AA%E3%82%B9%E3%81%AE%E7%A9%BA%E6%B8%AF%E3%81%AE%E4%B8%80%E8%A6%A7#.E3.82.A6.E3.82.A7.E3.83.BC.E3.83.AB.E3.82.BA.E3.81.AE.E7.A9.BA.E6.B8.AF&quot;&gt;Airports in Wales&lt;/a&gt; in the UK.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
$ vi airports.csv
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
都市,IATA,ICAO,空港
Aberporth,,EGFA,Aberporth 空港
Anglesey,,EGOQ,RAF Mona
Anglesey,,EGOV,RAF Valley
カナーボン,,EGCK,カナーボン空港
カーディフ,CWL,EGFF,カーディフ国際空港
カーディフ,,EGFC,Tremorfa ヘリポート
チェスター,CEG,EGNR,Hawarden 空港
Haverfordwest,HAW,EGFE,Haverfordwest 小型飛行場
Llanbedr,,EGOD,Llanbedr 空港
Pembrey,,EGFP,Pembrey 空港
St Athan,DGX,EGDX,RAF Saint Athan
スウォンジ,SWS,EGFH,スウォンジ空港
ウェルシュプール,,EGCW,ウェルシュプール空港
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll launch the SQLite 3 client with a name of a new database called &lt;tt class=&quot;docutils literal&quot;&gt;airports.db&lt;/tt&gt;. This database file doesn't yet exist so SQLite 3 will automatically create it for me.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
$ sqlite3 airports.db
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll switch the client to CSV mode, state that a comma is the separator and then import the &lt;tt class=&quot;docutils literal&quot;&gt;airports.csv&lt;/tt&gt; file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;separator&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;,&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airports&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can then run the schema command on the new &lt;tt class=&quot;docutils literal&quot;&gt;airports&lt;/tt&gt; table and see two of the column names are in Japanese and two are written using ASCII characters.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;schema&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airports&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;都市&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;IATA&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;ICAO&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;空港&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can execute queries mixing the Japanese and ASCII characters together without issue.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;select ICAO, 空港 from airports;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sqlite3 airports.db
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
EGFA|Aberporth 空港
EGOQ|RAF Mona
EGOV|RAF Valley
EGCK|カナーボン空港
EGFF|カーディフ国際空港
EGFC|Tremorfa ヘリポート
EGNR|Hawarden 空港
EGFE|Haverfordwest 小型飛行場
EGOD|Llanbedr 空港
EGFP|Pembrey 空港
EGDX|RAF Saint Athan
EGFH|スウォンジ空港
EGCW|ウェルシュプール空港
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can also dump the database to SQL using a single command.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.dump airports&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sqlite3 airports.db
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;PRAGMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreign_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRANSACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;都市&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;IATA&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;ICAO&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;&quot;空港&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Aberporth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Aberporth 空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Anglesey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGOQ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RAF Mona'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Anglesey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGOV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RAF Valley'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'カナーボン'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGCK'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'カナーボン空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'カーディフ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CWL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'カーディフ国際空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'カーディフ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tremorfa ヘリポート'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'チェスター'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGNR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hawarden 空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Haverfordwest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HAW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Haverfordwest 小型飛行場'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Llanbedr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGOD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Llanbedr 空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Pembrey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Pembrey 空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'St Athan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DGX'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGDX'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RAF Saint Athan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'スウォンジ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SWS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGFH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'スウォンジ空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;airports&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ウェルシュプール'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'EGCW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ウェルシュプール空港'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind the &lt;tt class=&quot;docutils literal&quot;&gt;.db&lt;/tt&gt; files created could be larger than the data in any of its original forms. While writing this blog I produced a million-row, 12-column CSV comprised mostly of integers, floats and one text field. The GZIP-compressed CSV file was 41 MB, the decompressed CSV was 142 MB and when imported into SQLite 3 the &lt;tt class=&quot;docutils literal&quot;&gt;.db&lt;/tt&gt; file was 165 MB. I was able to GZIP-compress the &lt;tt class=&quot;docutils literal&quot;&gt;.db&lt;/tt&gt; file down to 48 MB but the SQLite 3 client cannot open databases that are GZIP-compressed.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;creating-a-database-in-memory&quot; readability=&quot;20.5&quot;&gt;
&lt;h2&gt;Creating a Database in Memory&lt;/h2&gt;
&lt;p&gt;Data locality can be greatly improved by storing a SQLite 3 database in memory instead of on disk; you have the speed benefits of an in-memory database with the ease of communicating with it using SQL. Below is an example where I calculate 10 Fibonacci values and store them in a SQLite 3 database residing in memory using Python 3.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ sudo apt install python3
$ python3
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlite3&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlite3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':memory:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'''CREATE TABLE IF NOT EXISTS fib (&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                            calculated_value INTEGER)'''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executemany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'INSERT INTO fib VALUES (?)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                       &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT * FROM fib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above table creation and insert commands are executed within the context of the connection which has the benefit of wrapping the commands in a power-safe, atomic database transaction.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;user-defined-functions&quot; readability=&quot;22&quot;&gt;
&lt;h2&gt;User Defined Functions&lt;/h2&gt;
&lt;p&gt;You can create user-defined functions in Python that can be executed on data sitting inside a SQLite 3 database. Below I'll create a small SQLite 3 database:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
$ sqlite3 urls.db
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://packages.debian.org/stretch/sqlite3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://docs.python.org/3/library/sqlite3.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://sqlite.org/about.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I'll create a function in Python that extracts the hostname from a URL and execute it on all the records in the &lt;tt class=&quot;docutils literal&quot;&gt;urls&lt;/tt&gt; table in the database.&lt;/p&gt;

&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlite3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.parse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlsplit&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlsplit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;netloc&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlite3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'urls.db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hostname'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT hostname(url) FROM urls'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following is the output of the &lt;tt class=&quot;docutils literal&quot;&gt;fetchall&lt;/tt&gt; call.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;u'packages.debian.org'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;u'docs.python.org'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;u'sqlite.org'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;working-with-multiple-databases&quot; readability=&quot;16.5&quot;&gt;
&lt;h2&gt;Working with multiple databases&lt;/h2&gt;
&lt;p&gt;The SQLite 3 client is capable of working with multiple databases in a single session. Below I'll launch the client and then attach two databases to the session.&lt;/p&gt;

&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;ATTACH&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'airports.db'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;airport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ATTACH&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'urls.db'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I'll run the &lt;tt class=&quot;docutils literal&quot;&gt;.databases&lt;/tt&gt; command to output the names and locations of the databases attached to the session.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;databases&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
seq  name             file
---  ---------------  -----------------------
0    main
2    airport          /home/mark/airports.db
3    urls             /home/mark/urls.db
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can prefix the table names in my queries with the name I've assigned the database.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;&lt;div id=&quot;visualising-data-with-jupyter-notebooks&quot; readability=&quot;194.27307069617&quot;&gt;
&lt;h2&gt;Visualising Data with Jupyter Notebooks&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://jupyter.org/&quot;&gt;Jupyter Notebooks&lt;/a&gt; are a popular way to view data visualisations. Below I'll walk through the setup and a few minimalist examples of various visualisations run on an example dataset.&lt;/p&gt;
&lt;p&gt;First, I'll install a number of system dependencies.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
$ sudo apt update
$ sudo apt install &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      libgeos-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      python3-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      python3-pip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      python3-tk &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      python3-venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I'll create a Python virtual environment so I can isolate my Python dependencies from other projects on my machine. This environment will be called &lt;tt class=&quot;docutils literal&quot;&gt;.taxis&lt;/tt&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ pyvenv .taxis
$ &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; .taxis/bin/activate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll upgrade the Python package manager &quot;pip&quot; from version 8.1.1, which comes from the installation command above, to version 9.0.1 in this virtual environment.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ pip install --upgrade pip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll then install a number of popular data-related libraries written for Python.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
$ pip install &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      https://github.com/matplotlib/basemap/archive/v1.1.0.tar.gz &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'bokeh&amp;lt;0.12.4'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      gmaps &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'holoviews[extras]'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      jupyter &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      pandas &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      Pillow
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jupyter Notebooks will expose the working folder on my Linux machine via HTTP so I'll create an isolated working folder away from my other files.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ mkdir -p ~/jupyter-working
$ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/jupyter-working
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll then enable the gmaps extention and allow for Jupyter to use widgets.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
$ jupyter nbextension &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt; --py --sys-prefix gmaps
$ jupyter nbextension &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt; --py widgetsnbextension
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I'll launch the Notebook server. Once launched, a URL will be given that contains a token parameter. Paste that entire URL into your web browser in order to bring up the Notebooks interface.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ jupyter notebook &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      --ip&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      --NotebookApp.iopub_data_rate_limit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100000000
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
...
Copy/paste this URL into your browser when you connect for the first time,
to login with a token:
    http://0.0.0.0:8888/?token=123...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before opening the URL I'll create a SQLite 3 database from a CSV file. This dataset is made up of one million randomly-picked records from the 1.1 billion taxi ride dataset I produced in my &lt;a class=&quot;reference external&quot; href=&quot;http://tech.marksblogg.com/billion-nyc-taxi-rides-redshift.html&quot;&gt;Billion Taxi Rides in Redshift&lt;/a&gt; blog post. I used the following to export the one million record sampling from Hive.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre&gt;
$ hive -e &lt;span class=&quot;s1&quot;&gt;'SET hive.cli.print.header=true;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           SELECT trip_id,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  cab_type,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  passenger_count,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  trip_distance,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  fare_amount,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  tip_amount,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  pickup_datetime,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  dropoff_datetime,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  pickup_longitude,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  pickup_latitude,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  dropoff_longitude,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                  dropoff_latitude&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           FROM trips&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           WHERE RAND() &amp;lt;= 0.001&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           DISTRIBUTE BY RAND()&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           SORT BY RAND()&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;           LIMIT 1000000'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed &lt;span class=&quot;s1&quot;&gt;'s/[\t]/,/g'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; gzip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &amp;gt; trips.csv.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a class=&quot;reference external&quot; href=&quot;http://tech.marksblogg.com/billion-nyc-taxi-rides-spark-raspberry-pi.html&quot;&gt;Spark 2.2 &amp;amp; 3 Raspberry Pi 3 Model Bs&lt;/a&gt; blog post has the most concise instructions for importing the dataset into Hive. If you're using those instructions on anything other than Raspbian please note the packages names, such as the one for JDK, will probably differ. Note that exporting from CSV-stored data rather than ORC appears to complete 2-3x faster.&lt;/p&gt;
&lt;p&gt;Here are the first three lines of that CSV file. Note that the first line contains the column names.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ gunzip -c trips.csv.gz &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; head -n3
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
trip_id,cab_type,passenger_count,trip_distance,fare_amount,tip_amount,pickup_datetime,dropoff_datetime,pickup_longitude,pickup_latitude,dropoff_longitude,dropoff_latitude
745713518,yellow,1,5.600,20.50,1.00,2013-04-30 13:43:58,2013-04-30 14:04:49,-73.94273100000000,40.79017800000000,-74.00244499999999,40.76083900000000
788379509,yellow,1,1.200,6.00,0.00,2013-07-07 12:24:33,2013-07-07 12:28:52,-73.95807200000000,40.76124600000000,-73.94632400000000,40.77708900000000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll decompress the GZIP'ed file and launch SQLite 3. I've added &lt;tt class=&quot;docutils literal&quot;&gt;trips.db&lt;/tt&gt; as a parameter so it'll be created by SQLite 3.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
$ gunzip trips.csv.gz
$ sqlite3 trips.db
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll then switch into CSV mode, make sure the separator is a comma and import the CSV file into the &lt;tt class=&quot;docutils literal&quot;&gt;trips&lt;/tt&gt; table.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;separator&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;&quot;,&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trips&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the data imported I'll open the Notebook URL and create Python 3 Notebook in Jupyter's Web UI. I'll then paste the following requirements into the first cell and then hit shift and enter at the same time to &quot;execute&quot; the cell.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlite3&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;holoviews&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hv&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bokeh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlite3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'trips.db'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above will import the Python library for SQLite 3, Pandas, a data manipulation library, Holoviews, a visualisation library and initialise the Bokeh extention for Holoviews. Finally, a connection to the SQLite 3 database with the taxi trips dataset will be established.&lt;/p&gt;
&lt;p&gt;In the following example I'll paste in a code sniplet that will produce a heat map showing a breakdown by weekday and hour of the number of taxi journeys in my taxi rides dataset.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Points&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hover'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HeatMap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hover'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Histogram&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hover'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared_axes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT strftime('%w', pickup_datetime) as weekday,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;       strftime('%H', pickup_datetime) as hour,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;       COUNT(*) as cnt&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;FROM trips&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;GROUP BY 1, 2;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HeatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will produce a line chart showing the number of taxi trips by date in the dataset.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT date(pickup_datetime) as date,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                COUNT(*) as cnt&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         FROM trips&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         GROUP BY 1&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         ORDER BY 1;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'datetime64[ns]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a stacked bar chart comparing yellow and green cab trip counts against one another by month of the year enter the following into a new cell.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;25&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bars&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xrotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;legend_cols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show_legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show_frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hover'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bokeh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'matplotlib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT strftime('%m', pickup_datetime) as month,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                cab_type,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                COUNT(*) as cnt&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         FROM trips&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         GROUP BY 1, 2;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cab_type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cab_type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cnt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cab_type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cnt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following will produce a pie chart showing the proportion of trips based on the hour of the day.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT round(strftime('%H', pickup_datetime)) as hour,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                count(*) as cnt&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         FROM trips&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         group by 1;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To produce a scatter plot matrix using four numeric fields paste in the following. Note, this could take a few minutes to render. You should see an array output early on followed by the plot much later on.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT round(strftime('%H', pickup_datetime)) as hour,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                round(trip_distance),&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                round(fare_amount),&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                round(tip_amount)&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         FROM trips;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plotting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I came across two ways of rendering geographic points on maps. The first is with Matplotlib and Basemap which will work offline and without any need for API keys. The following will plot the pick up points for the taxi journeys in the dataset.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mpl_toolkits.basemap&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;SELECT ROUND(pickup_longitude, 3) as long,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                ROUND(pickup_latitude, 3) as lat,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;                COUNT(*) as cnt&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         FROM trips&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;         GROUP BY long, lat&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'long'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coerce'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coerce'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;projection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'merc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;llcrnrlat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;urcrnrlat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;llcrnrlon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;urcrnrlon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;72&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;resolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;area_thresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;lat_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;40.78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;lon_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;73.96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcoastlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linewidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawstates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bluemarble&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'long'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markersize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above will look somewhat primitive and won't be interactive.&lt;/p&gt;
&lt;p&gt;The following will plot a heatmap on top of a Google Maps Widget. The upsides include the boilerplate code is significantly less than the above, the map itself looks great and comes with the various navigational controls. The downside is that you'll need to create an &lt;a class=&quot;reference external&quot; href=&quot;http://jupyter-gmaps.readthedocs.io/en/latest/authentication.html&quot;&gt;API key&lt;/a&gt; with Google in order to use this module and you'll need to be connected to the internet when you use it.&lt;/p&gt;
&lt;p&gt;The other issue is that if there are any latitude/longitude pairs that aren't valid you'll get an error message back rather than the erroneous pairs being ignored. It's rare that a dataset is in perfect condition so you may need to spend some time filtering out bad values.&lt;/p&gt;
&lt;p&gt;Note that in this simplistic example I haven't weighed the points based on the aggregated counts for each point. You will see hotspots over Manhattan and NYC's airports but this won't be a completely accurate picture of where all the hotspots are.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gmaps&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gmaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'long'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'long'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;
             &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gmaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;heatmap_layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Python Data Visualisation landscape is very broad, diverse and fragmented at the moment. It's a area of Python I expect to consolidate and mature a lot in the next few years. Jake VanderPlas gave an &lt;a class=&quot;reference external&quot; href=&quot;https://www.youtube.com/watch?v=FytuB8nFHPQ&quot;&gt;excellent talk&lt;/a&gt; on the subject at PyCon 2017 in Portland, its well worth 30 minutes of your time.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Wed, 01 Nov 2017 21:34:55 +0000</pubDate>
<dc:creator>craigkerstiens</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://tech.marksblogg.com/sqlite3-tutorial-and-guide.html</dc:identifier>
</item>
<item>
<title>Tesla posts big loss, cuts production of Models X and S to catch up on Model 3</title>
<link>https://finance.yahoo.com/news/come-tesla-earnings-tsla-195239276.html</link>
<guid isPermaLink="true" >https://finance.yahoo.com/news/come-tesla-earnings-tsla-195239276.html</guid>
<description>&lt;div class=&quot;Maw(100%) D(ib)&quot; data-reactid=&quot;13&quot;&gt;&lt;img alt=&quot;Tesla Model X factory&quot; class=&quot; Maw(100%)&quot; itemprop=&quot;url&quot; src=&quot;https://s.yimg.com/ny/api/res/1.2/ly5dccubX4h5UPZhkVwv0g--/YXBwaWQ9aGlnaGxhbmRlcjtzbT0xO3c9ODAw/http://media.zenfs.com/en-US/homerun/businessinsider.com/5a7464c7cf4365ac8af4d140930c12fa&quot; data-reactid=&quot;14&quot;/&gt;&lt;noscript data-reactid=&quot;15&quot;&gt;
&lt;p&gt;&lt;img alt=&quot;Tesla Model X factory&quot; class=&quot;Maw(100%)&quot; src=&quot;https://s.yimg.com/ny/api/res/1.2/ly5dccubX4h5UPZhkVwv0g--/YXBwaWQ9aGlnaGxhbmRlcjtzbT0xO3c9ODAw/http://media.zenfs.com/en-US/homerun/businessinsider.com/5a7464c7cf4365ac8af4d140930c12fa&quot; itemprop=&quot;url&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;&lt;div itemprop=&quot;caption description&quot; class=&quot;Ov(h) Pos(r) Ff(ss) Mah(80px)&quot; data-reactid=&quot;16&quot;&gt;
&lt;div class=&quot;figure-caption&quot; data-reactid=&quot;18&quot;&gt;Tesla Model X factory&lt;/div&gt;
&lt;button class=&quot;C($c-fuji-blue-1-b) Cur(p) W(100%) T(63px) Bgc(#fff) Ta(start) Fz(13px) P(0) Bd(0) O(0) Lh(1.5) Pos(a)&quot; data-reactid=&quot;19&quot;&gt;&lt;span data-reactid=&quot;20&quot;&gt;More&lt;/span&gt;&lt;/button&gt;&lt;/div&gt;
&lt;div class=&quot;canvas-body Wow(bw) Cl(start) Mb(20px) Fz(15px) Lh(1.6) C($c-fuji-grey-l) Ff($ff-secondary) D(i)&quot; data-reactid=&quot;21&quot;&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;&amp;lt;span class=&amp;quot;source&amp;quot;&amp;gt;YouTube/iPhone-Fan&amp;lt;/span&amp;gt;&quot; data-reactid=&quot;22&quot;&gt;&lt;span class=&quot;source&quot;&gt;YouTube/iPhone-Fan&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot;canvas-list List(d)&quot; data-type=&quot;list&quot; data-reactid=&quot;24&quot;&gt;&lt;li data-reactid=&quot;25&quot;&gt;&lt;strong&gt;Tesla on Wednesday reported a wider-than-expected quarterly loss, the largest in its history.&lt;/strong&gt;&lt;/li&gt;
&lt;li data-reactid=&quot;26&quot;&gt;&lt;strong&gt;In its third-quarter earnings report, the company said it would cut production of its Model S and Model X vehicles to redeploy resources toward the Model 3. In October, CEO Elon Musk described the newest vehicle as being &quot;deep in production hell.&quot;&lt;/strong&gt;&lt;/li&gt;
&lt;li data-reactid=&quot;27&quot;&gt;&lt;strong&gt;Tesla's negative free cash flow swelled to $1.4 billion, more than analysts had expected.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;&amp;lt;a href=&amp;quot;http://markets.businessinsider.com/stock/tsla-Quote?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;br&amp;gt;Tesla&amp;lt;/a&amp;gt; on Wednesday reported the largest quarterly loss in its history and said it was cutting production on two of its vehicle models.&quot; data-reactid=&quot;28&quot;&gt;&lt;a href=&quot;http://markets.businessinsider.com/stock/tsla-Quote?utm_source=yahoo&amp;amp;utm_medium=referral&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;br/&gt;Tesla&lt;/a&gt; on Wednesday reported the largest quarterly loss in its history and said it was cutting production on two of its vehicle models.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;Here are the key third-quarter numbers (expectations via Bloomberg):&quot; data-reactid=&quot;29&quot;&gt;Here are the key third-quarter numbers (expectations via Bloomberg):&lt;/p&gt;
&lt;ul class=&quot;canvas-list List(d)&quot; data-type=&quot;list&quot; data-reactid=&quot;30&quot;&gt;&lt;li data-reactid=&quot;31&quot;&gt;Adjusted loss per share: &lt;strong&gt;-$2.92&lt;/strong&gt; (-$2.23 expected).&lt;/li&gt;
&lt;li data-reactid=&quot;32&quot;&gt;Revenue: &lt;strong&gt;$2.98 billion&lt;/strong&gt; ($2.39 billion expected).&lt;/li&gt;
&lt;li data-reactid=&quot;33&quot;&gt;Free cash flow: -&lt;strong&gt;$1.4 billion&lt;/strong&gt; (-$1.2 billion expected).&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;The company said it planned to produce &amp;quot;about 10% fewer&amp;quot; units of its Model S and Model X models in the fourth quarter and reallocate resources to the Model 3, its newest. Tesla expects to hit a Model 3 production rate of 5,000 vehicles a week by late in the first quarter of 2018.&quot; data-reactid=&quot;34&quot;&gt;The company said it planned to produce &quot;about 10% fewer&quot; units of its Model S and Model X models in the fourth quarter and reallocate resources to the Model 3, its newest. Tesla expects to hit a Model 3 production rate of 5,000 vehicles a week by late in the first quarter of 2018.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;&amp;quot;While we continue to make significant progress each week in fixing Model 3 bottlenecks, the nature of manufacturing challenges during a ramp such as this makes it difficult to predict exactly how long it will take for all bottlenecks to be cleared or when new ones will appear,&amp;quot; Tesla said in its &amp;lt;a href=&amp;quot;http://files.shareholder.com/downloads/ABEA-4CW8X0/5492569274x0x962149/00F6EB90-2695-44E6-8C03-7EC4E06DF840/TSLA_Update_Letter_2017-3Q.pdf&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;statement&amp;lt;/a&amp;gt;.&quot; data-reactid=&quot;35&quot;&gt;&quot;While we continue to make significant progress each week in fixing Model 3 bottlenecks, the nature of manufacturing challenges during a ramp such as this makes it difficult to predict exactly how long it will take for all bottlenecks to be cleared or when new ones will appear,&quot; Tesla said in its &lt;a href=&quot;http://files.shareholder.com/downloads/ABEA-4CW8X0/5492569274x0x962149/00F6EB90-2695-44E6-8C03-7EC4E06DF840/TSLA_Update_Letter_2017-3Q.pdf&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;statement&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;Tesla said in October that it produced only 260 vehicles, well below its target of 1,500. CEO Elon Musk said the Model 3 was &amp;quot;deep in production hell.&amp;quot;&quot; data-reactid=&quot;36&quot;&gt;Tesla said in October that it produced only 260 vehicles, well below its target of 1,500. CEO Elon Musk said the Model 3 was &quot;deep in production hell.&quot;&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;Tesla's negative free cash flow expanded to -$1.4 billion, more than analysts' forecast of -$1.2 billion.&quot; data-reactid=&quot;37&quot;&gt;Tesla's negative free cash flow expanded to -$1.4 billion, more than analysts' forecast of -$1.2 billion.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;The company said it was working with organizations in Puerto Rico to provide solar panels following the devastation left by Hurricane Maria in late September. Installations of its energy-storage units rose 138% year over year in the third quarter, driven by the Powerwall, its at-home battery.&quot; data-reactid=&quot;38&quot;&gt;The company said it was working with organizations in Puerto Rico to provide solar panels following the devastation left by Hurricane Maria in late September. Installations of its energy-storage units rose 138% year over year in the third quarter, driven by the Powerwall, its at-home battery.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;Tesla shares fell as much as 5% in extended trading after the earnings release. Tesla has surged 51% this year through Wednesday's close, and its market cap at various points has surpassed those of rivals including &amp;lt;a href=&amp;quot;http://markets.businessinsider.com/stock/f-quote?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot;&amp;gt;Ford&amp;lt;/a&amp;gt;, &amp;lt;a href=&amp;quot;http://markets.businessinsider.com/stock/Fiat_Chrysler-Quote?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot;&amp;gt;Fiat Chrysler&amp;lt;/a&amp;gt;, and &amp;lt;a href=&amp;quot;http://markets.businessinsider.com/stock/GM-Quote?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot;&amp;gt;General Motors&amp;lt;/a&amp;gt;.&quot; data-reactid=&quot;39&quot;&gt;Tesla shares fell as much as 5% in extended trading after the earnings release. Tesla has surged 51% this year through Wednesday's close, and its market cap at various points has surpassed those of rivals including &lt;a href=&quot;http://markets.businessinsider.com/stock/f-quote?utm_source=yahoo&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;Ford&lt;/a&gt;, &lt;a href=&quot;http://markets.businessinsider.com/stock/Fiat_Chrysler-Quote?utm_source=yahoo&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;Fiat Chrysler&lt;/a&gt;, and &lt;a href=&quot;http://markets.businessinsider.com/stock/GM-Quote?utm_source=yahoo&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;General Motors&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;NOW WATCH: &amp;lt;a href=&amp;quot;http://www.businessinsider.com/richard-turnill-blackrock-cio-says-bitcoin-is-bubble-2017-10?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;$6 TRILLION INVESTMENT CHIEF: Bitcoin is a bubble&amp;lt;/a&amp;gt;&quot; data-reactid=&quot;40&quot;&gt;NOW WATCH: &lt;a href=&quot;http://www.businessinsider.com/richard-turnill-blackrock-cio-says-bitcoin-is-bubble-2017-10?utm_source=yahoo&amp;amp;utm_medium=referral&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;$6 TRILLION INVESTMENT CHIEF: Bitcoin is a bubble&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;&amp;lt;b&amp;gt;See Also:&amp;lt;/b&amp;gt;&quot; data-reactid=&quot;41&quot;&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;canvas-atom canvas-text Mb(1.0em) Mb(0)--sm Mt(0.8em)--sm&quot; type=&quot;text&quot; content=&quot;&amp;lt;strong&amp;gt;SEE ALSO:&amp;amp;nbsp;&amp;lt;a href=&amp;quot;http://www.businessinsider.com/tesla-q3-earnings-2017-investor-highlights-2017-10/?utm_source=yahoo&amp;amp;amp;utm_medium=referral&amp;quot; rel=&amp;quot;nofollow noopener&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Here are the most important things to look for in Tesla's third-quarter earnings&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;&quot; data-reactid=&quot;46&quot;&gt;&lt;strong&gt;SEE ALSO: &lt;a href=&quot;http://www.businessinsider.com/tesla-q3-earnings-2017-investor-highlights-2017-10/?utm_source=yahoo&amp;amp;utm_medium=referral&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Here are the most important things to look for in Tesla's third-quarter earnings&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Wed, 01 Nov 2017 21:07:32 +0000</pubDate>
<dc:creator>kgwgk</dc:creator>
<og:type>article</og:type>
<og:description>Tesla on Wednesday reported a wider-than-expected quarterly loss, the largest in its history. Tesla's negative free cash flow swelled to $1.4 billion, more than analysts had expected. Tesla on Wednesday reported the largest quarterly loss in its history and said it was cutting production on two</og:description>
<og:image>https://s.yimg.com/uu/api/res/1.2/OoyRV5YTkqxKR0NABzw9dw--~B/aD01OTk7dz04MDA7c209MTthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-images/GLB/2017-11-01/4a643080-bf48-11e7-be22-53007dac16de_6b4bce2cf42924ef0dd9d50fea28549f.jpg</og:image>
<og:title>Tesla posts big loss, cuts Model X and Model S production to catch up on Model 3 (TSLA)</og:title>
<og:url>https://finance.yahoo.com/news/come-tesla-earnings-tsla-195239276.html</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://finance.yahoo.com/news/come-tesla-earnings-tsla-195239276.html</dc:identifier>
</item>
<item>
<title>HAProxy 1.8</title>
<link>https://www.haproxy.com/blog/whats-new-haproxy-1-8/</link>
<guid isPermaLink="true" >https://www.haproxy.com/blog/whats-new-haproxy-1-8/</guid>
<description>&lt;p&gt;The monumental stable release of HAProxy 1.8 is coming! The &lt;a href=&quot;https://www.mail-archive.com/haproxy@formilux.org/msg27653.html&quot;&gt;HAProxy 1.8 release candidate 1 (RC1)&lt;/a&gt; has been published by the R&amp;amp;D team here at HAProxy Technologies, and in this blog post we are going to take you through some of the release highlights, new features, and configuration examples to get you up to speed.&lt;/p&gt;
&lt;p&gt;For HAProxy 1.8, our development team was primarily focused on two areas:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Performance and Application Acceleration&lt;/strong&gt; — HAProxy has always been known for its reliability and performance, but in HAProxy 1.8 we’ve managed to make further improvements and include some features to speed up your applications (like HTTP/2 support).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud and Microservices&lt;/strong&gt; — more settings can now be changed during runtime, and we have supported a couple of different ways to do so (Runtime API, DNS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;HTTP/2 Protocol Support&lt;/h2&gt;
&lt;p&gt;The HTTP/2 protocol has been seeing fast adoption, and HAProxy 1.8 now supports HTTP/2 on the client side (in the frontend sections) and can act as a gateway between HTTP/2 clients and your HTTP/1.1 and HTTP/1.0 applications.&lt;/p&gt;
&lt;p&gt;To enable support for HTTP/2, the bind line in the frontend section must be configured as an SSL endpoint and &lt;em&gt;alpn&lt;/em&gt; must announce &lt;em&gt;h2&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot;&gt;
frontend f_myapp
 bind :443 ssl crt /path/to/cert.crt alpn http/1.1,h2
 mode http
&lt;/pre&gt;
&lt;p&gt;This is all you need to enable HTTP/2 support on a particular frontend, but a complete and more detailed blog post related to the HTTP/2 support is also coming out soon, so stay tuned!&lt;/p&gt;
&lt;h2&gt;Multithreading&lt;/h2&gt;
&lt;p&gt;Since version 1.4, HAProxy has supported the multi process mode. This allowed users to get more performance out of a single physical machine at the cost of a few acceptable drawbacks related to each process having its own memory area, such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;stick-tables were per-process and data couldn’t be shared between multiple processes&lt;/li&gt;
&lt;li&gt;health checks were performed per process&lt;/li&gt;
&lt;li&gt;maxconn values (global, frontend, server) were counted per process&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sometimes these limitations got in our users’ way, and as a workaround we used to configure a bunch of “client side processes” pointing to a single “server side process” on the same machine. It was a bit hackish, but it worked very well with the Runtime API and the proxy protocol.&lt;/p&gt;
&lt;p&gt;In HAProxy 1.8 we’ve added support for an additional mode — using threads instead of processes, which has an advantage in that it solves all of the limitations listed above.&lt;/p&gt;
&lt;p&gt;The implementation and challenges involved here were very interesting (e.g. concurrent access to data in memory), and a complete blog post on this subject will be published in the near future.&lt;/p&gt;
&lt;h2&gt;Hitless Reloads&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-36222 alignright&quot; src=&quot;https://www.haproxy.com/wp-content/uploads/2017/09/Hitless-Reloads.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;300&quot;/&gt;This was definitely one of the more interesting problems that the HAProxy Technologies R&amp;amp;D team had a chance to identify and fix! Initially, we wanted to make absolutely sure that configuration reloads or version upgrades of the HAProxy processes did not break any client connections in the process.&lt;/p&gt;
&lt;p&gt;We believed that this required some improvements in HAProxy, which were yet to be determined. But after a thorough investigation, it turned out that the issue was unrelated to HAProxy itself. The issue was present in the kernel and it was affecting HAProxy as well as all other software that was regularly pushed to the limits as HAProxy was.&lt;/p&gt;
&lt;p&gt;We published a blog post detailing the complete problem, titled “&lt;a href=&quot;https://www.haproxy.com/blog/truly-seamless-reloads-with-haproxy-no-more-hacks/&quot;&gt;Truly Seamless Reloads with HAProxy – No More Hacks!&lt;/a&gt;”. It contains a description of what improvements were done in HAProxy to solve the issue and what effective workarounds can be applied for other software.&lt;/p&gt;
&lt;h2&gt;HTTP Small Object Caching&lt;/h2&gt;
&lt;p&gt;HTTP response caching is a very handy feature when it comes to web application acceleration. The main use for it is offloading some percentage of static content delivery from the application servers themselves, and letting them more easily perform their primary duty — delivering the application.&lt;/p&gt;
&lt;p&gt;HAProxy is staying true to its principle of not accessing the disks during runtime and so all objects are cached in memory. The maximum object size is as big as the value of the &lt;em&gt;global&lt;/em&gt; parameter “tune.bufsize”, which defaults to 16KB.&lt;/p&gt;
&lt;p&gt;This is a general-purpose caching mechanism that makes HAProxy usable as a small object accelerator in front of web applications or other layers like Varnish. The cool thing here is that you can control how large the objects to cache and accelerate delivery should be.&lt;/p&gt;

&lt;p&gt;Cloud and microservices environments have redefined the way modern load balancers should work and the way they should expose functionality during runtime. &lt;img class=&quot;size-full wp-image-36226 alignright&quot; src=&quot;https://www.haproxy.com/wp-content/uploads/2017/09/Traffic-Routing.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Historically, HAProxy’s configuration was pretty static and changing the list of backend servers was only possible by reloading the configuration. Over time, this approach became unsuitable for environments where backend servers are scaled up and down very often or where VMs and containers often change their IP addresses.&lt;/p&gt;
&lt;p&gt;With HAProxy 1.7, it was possible to change the servers’ IP addresses and ports during runtime by using the Runtime API, and DNS resolution during runtime was also possible.&lt;/p&gt;
&lt;p&gt;But HAProxy 1.8 contains a whole new set of features that can be combined together to allow robust backend servers scaling, IP address changes, and much more. Here are just a couple of pointers:&lt;/p&gt;
&lt;h2&gt;Server-template Configuration Directive&lt;/h2&gt;
&lt;p&gt;The &lt;em&gt;server-template&lt;/em&gt; configuration directive allows users to instantiate a number of placeholder backend servers in a single configuration line, instead of having to add tens or hundreds of configuration lines explicitly.&lt;/p&gt;
&lt;p&gt;For example, if a service needs to scale up to 200 nodes, it can be configured as follows:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;server-template www 200 10.0.0.1:8080 check&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This would create 200 placeholder backend servers named www1 to www200 with the same IP address and port. A third party “controller” can then use the Runtime API to keep the list up to date with correct backend server data and settings, and this information would often come from an orchestration system.&lt;/p&gt;
&lt;h2&gt;DNS for Service Discovery&lt;/h2&gt;
&lt;p&gt;HAProxy can keep the list of backend servers up to date by using the DNS SRV or A records.&lt;/p&gt;
&lt;p&gt;As long as the orchestration system supports DNS SRV records (and Kubernetes and Consul do), the server-template directive could be configured as follows:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;server-template www 200 _http._tcp.red.default.svc.cluster.local:8080 check resolvers kube&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If the orchestration system does not support DNS SRV records (such as Docker swarm mode), then A records can now be used as well. HAProxy’s DNS support has been improved so that it does not duplicate IP addresses when different DNS record types are encountered, and it automatically adjusts the number of backend servers to the number of records provided in the DNS responses.&lt;/p&gt;
&lt;p&gt;We have described this functionality in detail in a recent blog post titled “&lt;a href=&quot;https://www.haproxy.com/blog/dns-service-discovery-haproxy/&quot;&gt;DNS for Service Discovery in HAProxy&lt;/a&gt;”.&lt;/p&gt;
&lt;h2&gt;Dynamic Cookies&lt;/h2&gt;
&lt;p&gt;One of the challenges our users faced with scaling the backend servers was the cookie-based session persistence. Even though applications developed for dynamic environments were supposed to be as stateless as possible, some of them still required persistence or had additional benefits when it was enabled or present. Furthermore, two HAProxy processes load balancing the same application had to be able to apply the same persistence and consistency in the order the servers were provided.&lt;/p&gt;
&lt;p&gt;A new keyword for the directive &lt;em&gt;cookie&lt;/em&gt; now exists for this purpose: &lt;em&gt;dynamic&lt;/em&gt;. The cookie value is a hash of the backend server’s IP and port, since this is the only unique criterion available in many environments. And in order to prevent reversing the cookie value, we must also use the &lt;em&gt;dynamic-cookie-key&lt;/em&gt; option to add a key:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;
dynamic-cookie-key MYKEY
cookie SRVID insert dynamic
server-template www 20 _http._tcp.red.default.svc.cluster.local:8080 check resolvers kube
&lt;/pre&gt;
&lt;p&gt;Using the above configuration, a response sent back to the client would look like the following:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;Set-Cookie: SRVID=8eefd5695557c25f; path=/&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Improved Runtime API&lt;/h2&gt;
&lt;p&gt;The Runtime API allows administrators and automation systems to interact with HAProxy during runtime. HAProxy version 1.8 comes with further improvements and new directives:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;disable dynamic-cookie backend &amp;lt;backend&amp;gt;: disable dynamic cookie for backend&lt;/li&gt;
&lt;li&gt;enable dynamic-cookie backend &amp;lt;backend&amp;gt;: enable dynamic cookie for backend&lt;/li&gt;
&lt;li&gt;set dynamic-cookie-key backend &amp;lt;backend&amp;gt; &amp;lt;value&amp;gt;: set cookie key hash&lt;/li&gt;
&lt;li&gt;set server &amp;lt;backend&amp;gt;/&amp;lt;server&amp;gt; agent-addr &amp;lt;addr&amp;gt;: change server agent address&lt;/li&gt;
&lt;li&gt;set server &amp;lt;backend&amp;gt;/&amp;lt;server&amp;gt; agent-send &amp;lt;value&amp;gt;: change server agent string&lt;/li&gt;
&lt;li&gt;set server &amp;lt;backend&amp;gt;/&amp;lt;server&amp;gt; fqdn &amp;lt;FQDN&amp;gt;: change server’s FQDN&lt;/li&gt;
&lt;li&gt;show acl [&amp;lt;acl&amp;gt;]: show list of ACLs in HAProxy or dump ACL contents&lt;/li&gt;
&lt;li&gt;show cli sockets: show list of Runtime API clients&lt;/li&gt;
&lt;li&gt;show fd: (for debugging only) show list of open file descriptors&lt;/li&gt;
&lt;li&gt;show info json: famous “&lt;em&gt;show info”&lt;/em&gt; in JSON output format&lt;/li&gt;
&lt;li&gt;show stat [{&amp;lt;iid&amp;gt;|&amp;lt;proxy&amp;gt;} &amp;lt;type&amp;gt; &amp;lt;sid&amp;gt;] json: famous “&lt;em&gt;show stat”&lt;/em&gt; in JSON output format format and displayed per frontend or backend&lt;/li&gt;
&lt;li&gt;show schema json: dump JSON schema used for “&lt;em&gt;show stat”&lt;/em&gt; and “&lt;em&gt;show info”&lt;/em&gt; commands&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We explained in detail how the Runtime API can be used to make changes during runtime in the blog post titled “&lt;a href=&quot;https://www.haproxy.com/blog/dynamic-scaling-for-microservices-with-runtime-api/&quot;&gt;Dynamic Scaling for Microservices with the HAProxy Runtime API&lt;/a&gt;”.&lt;/p&gt;

&lt;h2&gt;Master/Worker Mode&lt;/h2&gt;
&lt;p&gt;Historically, HAProxy always started as many processes as were requested by configuration – one by default, and more if the setting &lt;em&gt;nbproc&lt;/em&gt; was set to higher than 1. All processes were then used to manage the traffic and the PID of each process was written at startup to &lt;em&gt;pidfile&lt;/em&gt;. But this wasn’t really convenient in cases where 3rd party software was monitoring and controlling the HAProxy processes (e.g. needing to reload them) as it had to be aware of HAProxy’s individual processes and control each one separately. One of the examples in this category was certainly systemd.&lt;/p&gt;
&lt;p&gt;To address these problems in a general way, a new master/worker mode was implemented in HAProxy 1.8. HAProxy now launches one master process and a number of additional worker processes (one or more, as specified in the configuration). The new master process monitors all the worker processes and controls them from a single instance as you would expect. This relieves systemd or any other software from having to manage individual HAProxy worker processes.&lt;/p&gt;
&lt;p&gt;To enable the master/worker mode in HAProxy 1.8, please use one of the following approaches:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Use the new directive in the &lt;em&gt;global&lt;/em&gt; configuration section named “&lt;em&gt;master-worker”&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Start the haproxy process with the command line argument -W &amp;lt;# of processes&amp;gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Configuration example:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;
global
 master-worker
&lt;/pre&gt;
&lt;p&gt;In the master/worker mode, in the output of ‘ps axf’ it will be possible to distinguish the master process from its worker processes. Here is an example for &lt;em&gt;nbproc&lt;/em&gt; = 2:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;
$ ps axf -o pid,command
15012      \_ haproxy -f ./master.cfg -d
15013          \_ haproxy -f ./master.cfg -d
15014          \_ haproxy -f ./master.cfg -d
&lt;/pre&gt;
&lt;p&gt;In the example above, sending a signal USR2 to the master process (&lt;em&gt;kill -SIGUSR2 15012&lt;/em&gt;) would trigger a reload of all worker processes automatically.&lt;/p&gt;
&lt;p&gt;This mode is now the preferred mode for systemd-based installations and for configurations with &lt;em&gt;nbproc&lt;/em&gt; greater than 1.&lt;/p&gt;
&lt;h2&gt;TLS 1.3 0-RTT&lt;/h2&gt;
&lt;p&gt;There was a lot of general demand for 0-RTT support (often called just TLS 1.3), but it is important to know that by default 0-RTT makes TLS vulnerable to replay attacks and that a higher protocol must prevent that.&lt;/p&gt;
&lt;p&gt;The IETF HTTP working group has been working on a &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpbis-replay-00&quot;&gt;draft&lt;/a&gt; to define how to safely map HTTP on top of 0-RTT to provide both performance and security. HAProxy 1.8 is the first server-side component to implement this draft, and we will soon be running interoperability tests with a well known browser which has just implemented it on the client side.&lt;/p&gt;
&lt;p&gt;In HAProxy, this feature can be enabled by compiling with openssl-1.1.1 and adding “allow-0rtt” directive on the bind line.&lt;/p&gt;
&lt;h2&gt;SSL/TLS Mode Async&lt;/h2&gt;
&lt;p&gt;The latest OpenSSLlibrary (version 1.1.0) supports asynchronous I/O operations. This means that the key computation phase (the heaviest part of the TLS protocol) can be run in a non-blocking way in HAProxy.&lt;/p&gt;
&lt;p&gt;To make this work, you must compile HAProxy with the latest openssl library version (1.1.0f at the time of writing this article), enable the TLS engine that supports asynchronous TLS operations, and add the following configuration to your &lt;em&gt;global&lt;/em&gt; section:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;
global
  ssl-engine rdrand  # intel engine available in openssl
  ssl-mode-async
&lt;/pre&gt;
&lt;p&gt;Your HAProxy will then become more responsive at processing traffic while SSL keys are being computed.&lt;/p&gt;
&lt;h2&gt;New Sample Fetches&lt;/h2&gt;
&lt;p&gt;HAProxy is able to extract data from traffic passing through it. We call these functions “sample fetches”. More information about sample fetches can be found under “&lt;a href=&quot;https://www.haproxy.com/documentation/hapee/1-7r1/traffic-management/fetch-data-samples/&quot;&gt;Fetching Data Samples&lt;/a&gt;” in the HAPEE documentation.&lt;/p&gt;
&lt;p&gt;HAProxy 1.8 comes with a group of new sample fetches:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;distcc_body: parses distcc message and returns body associated to it&lt;/li&gt;
&lt;li&gt;distcc_param: parses distcc message and returns parameter associated to it&lt;/li&gt;
&lt;li&gt;hostname: returns system hostname&lt;/li&gt;
&lt;li&gt;srv_queue: returns number of connections currently pending in server’s queue&lt;/li&gt;
&lt;li&gt;ssl_fc_cipherlist_bin: returns binary form of client hello cipher list&lt;/li&gt;
&lt;li&gt;ssl_fc_cipherlist_hex: same as above, but encoded as hexadecimal&lt;/li&gt;
&lt;li&gt;ssl_fc_cipherlist_str: returns decoded text form of client hello cipher list&lt;/li&gt;
&lt;li&gt;ssl_fc_cipherlist_xxh: returns xxh64 of client hello cipher list&lt;/li&gt;
&lt;li&gt;req.hdrs: returns current request headers&lt;/li&gt;
&lt;li&gt;req.hdrs_bin: returns current request headers in preparsed binary form&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;New Converters&lt;/h2&gt;
&lt;p&gt;HAProxy 1.8 comes with a group of new converters:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;b64dec: decodes base64 encoded string into binary&lt;/li&gt;
&lt;li&gt;nbsrv: returns number of available servers in a backend&lt;/li&gt;
&lt;li&gt;sha1: computes SHA1 digest of binary input&lt;/li&gt;
&lt;li&gt;xxh32: hashes binary input into unsigned 32 bit&lt;/li&gt;
&lt;li&gt;xxh64: hashes binary input into unsigned 64 bit&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Lua API Improvements&lt;/h2&gt;
&lt;p&gt;The following improvements now exist in the Lua API:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core Class:
&lt;ul&gt;&lt;li&gt;core.backends: array of backends&lt;/li&gt;
&lt;li&gt;core.frontends: array of frontends&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Proxy Class:
&lt;ul&gt;&lt;li&gt;proxy.name: string containing proxy name&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;HTTP Applet Class:
&lt;ul&gt;&lt;li&gt;set_var(applet, var, value): set HAProxy variable&lt;/li&gt;
&lt;li&gt;unset_var(applet, var): unset HAProxy variable&lt;/li&gt;
&lt;li&gt;get_var(applet, var): return content of HAProxy variable&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;TCP Applet Class:
&lt;ul&gt;&lt;li&gt;set_var(applet, var, value): set HAProxy variable&lt;/li&gt;
&lt;li&gt;unset_var(applet, var): unset HAProxy variable&lt;/li&gt;
&lt;li&gt;get_var(applet, var): return content of HAProxy variable&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The example Lua code below creates a converter which converts a backend UUID into the corresponding proxy name:&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;
core.register_converters(&quot;get_backend_name&quot;, function(id)
       for bename,be in pairs(core.backends) do
               if id == be.uuid then
                       return bename
               end
       end
       return &quot;notfound&quot;
end)
&lt;/pre&gt;
&lt;p&gt;To use it, simply set an HTTP rule like this one:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;http-response set-header X-backend %[be_id,lua.get_backend_name]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With the above Lua code and configuration, HAProxy will set header “X-backend” in all responses sent to the clients. The value of the header will contain the backend name. The same approach could be used for frontends as well, just by replacing “backend” with “frontend” in appropriate places.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We hope you have enjoyed this quick tour of the notable features coming up in HAProxy 1.8. The HAProxy Technologies R&amp;amp;D team has been working tirelessly to deliver them, and we thank the HAProxy community members who have also made contributions to this release. We hope to get many community members testing out &lt;a href=&quot;https://www.mail-archive.com/haproxy@formilux.org/msg27653.html&quot;&gt;HAProxy 1.8 release candidate 1 (RC1)&lt;/a&gt; to make sure it’s the best release of HAProxy yet.&lt;img class=&quot;wp-image-36338 alignright&quot; src=&quot;https://www.haproxy.com/wp-content/uploads/2017/09/Rebust-Code.svg&quot; alt=&quot;&quot; width=&quot;275&quot; height=&quot;275&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you would like to make use of some of the new features before waiting for the stable release of HAProxy 1.8 (late November 2017), please see our &lt;a href=&quot;https://www.haproxy.com/downloads/hapee-trial/&quot;&gt;HAProxy Enterprise Edition – Trial Version&lt;/a&gt; or contact &lt;a href=&quot;https://www.haproxy.com/contact-us/&quot;&gt;HAProxy Technologies&lt;/a&gt; for expert advice. HAProxy Enterprise Edition is our commercially supported version of HAProxy based on the HAProxy Community Edition stable branch where we backport many features from the dev branch and package it to make the most stable, reliable, advanced and secure version of HAProxy. It also comes with high performance modules, specialized tools and scripts, and optimized third party software to make it a true enterprise ADC. The best part is that you get enterprise support directly from the authoritative experts here at HAProxy Technologies.&lt;/p&gt;
&lt;p&gt;In parallel with preparations for the stable release of HAProxy 1.8, we will also be publishing further blog posts describing the new features in detail written directly by members of our HAProxy Technologies R&amp;amp;D team.&lt;/p&gt;
&lt;p&gt;Stay tuned!&lt;/p&gt;
</description>
<pubDate>Wed, 01 Nov 2017 21:04:14 +0000</pubDate>
<dc:creator>phil21</dc:creator>
<og:type>article</og:type>
<og:title>What's New in HAProxy 1.8 - HAProxy Technologies</og:title>
<og:description>The monumental stable release of HAProxy 1.8 is coming! The HAProxy 1.8 release candidate 1 (RC1) has been published by the R&amp;D team here at HAProxy Technologies, and in this blog post we are going to take you through some of the release highlights, new features, and configuration examples to get you up to speed. …</og:description>
<og:url>//www.haproxy.com/blog/whats-new-haproxy-1-8/</og:url>
<og:image>//cdn.haproxy.com/wp-content/uploads/2017/09/Hitless-Reloads.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.haproxy.com/blog/whats-new-haproxy-1-8/</dc:identifier>
</item>
</channel>
</rss>