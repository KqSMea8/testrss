<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>German court rules Facebook use of personal data illegal</title>
<link>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</guid>
<description>&lt;p&gt;BERLIN (Reuters) - A German consumer rights group said on Monday that a court had found Facebook’s use of personal data to be illegal because the U.S. social media platform did not adequately secure the informed consent of its users.&lt;/p&gt;
&lt;p&gt;The verdict, from a Berlin regional court, comes as Big Tech faces increasing scrutiny in Germany over its handling of sensitive personal data that enables it to micro-target online advertising.&lt;/p&gt;
&lt;p&gt;The Federation of German Consumer Organisations (vzvb) said that Facebook’s default settings and some of its terms of service were in breach of consumer law, and that the court had found parts of the consent to data usage to be invalid.&lt;/p&gt;
&lt;p&gt;“Facebook hides default settings that are not privacy-friendly in its privacy center and does not provide sufficient information about it when users register,” said Heiko Duenkel, litigation policy officer at the vzvb.&lt;/p&gt;
&lt;p&gt;“This does not meet the requirement for informed consent.” The vzvb posted a copy of the ruling on its website. A court spokesperson confirmed that a judgment had been handed down but declined further comment.&lt;/p&gt;
&lt;h3&gt;FACEBOOK TO APPEAL&lt;/h3&gt;
&lt;p&gt;Facebook said it would appeal, even though several aspects of the court judgment had been in its favor. In a statement, it said it had already made significant changes to its terms of service and data protection guidelines since the case was first brought in 2015.&lt;/p&gt;
&lt;p&gt;“We are working hard to ensure that our guidelines are clear and easy to understand, and that the services offered by Facebook are in full accordance with the law,” Facebook said.&lt;/p&gt;
&lt;p&gt;Further, Facebook would in the meantime update its data protection guidelines and its terms of service so that they comply with new European Union-wide rules that are due to enter force in June.&lt;/p&gt;
&lt;p&gt;Facebook, which counts more than 2 billion users worldwide, already faces scrutiny from Germany’s competition authorities over its handling of its users’ personal data.&lt;/p&gt;
&lt;p&gt;The Federal Cartel Office, in an interim update on an investigation into Facebook, said in December that it objected to the way the company gains access to third-party data when an account is opened.&lt;/p&gt;
&lt;p&gt;This includes tapping information from its own WhatsApp and Instagram products - as well as how it tracks which sites its users access.&lt;/p&gt;
&lt;p&gt;One concern highlighted by the consumer rights group was that, in Facebook’s app for smartphones, a service was pre-activated that revealed the user’s location to the person they were chatting to.&lt;/p&gt;
&lt;p&gt;Also, in the privacy settings, ticks were already placed in boxes that allowed search engines to link to the user’s timeline, meaning that anyone would be able quickly and easily to find a user’s profile.&lt;/p&gt;
&lt;p&gt;“The judges ruled that all five of the default settings on Facebook that vzvb complained about are invalid,” the group said in a statement, adding that several other of Facebook’s terms of use were found to be illegal.&lt;/p&gt;
&lt;div class=&quot;Attribution_attribution_o4ojT&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content_27_rw&quot;&gt;Writing by Douglas Busvine; Editing by Susan Fenton&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer_1gqgJ&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle_7sKLj&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 12 Feb 2018 20:11:55 +0000</pubDate>
<dc:creator>HoppedUpMenace</dc:creator>
<og:title>German court rules Facebook use of personal data illegal</og:title>
<og:url>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI</og:url>
<og:type>article</og:type>
<og:description>A German consumer rights group said on Monday that a court had found Facebook's use of personal data to be illegal because the U.S. social media platform did not adequately secure the informed consent of its users.</og:description>
<og:image>https://s2.reutersmedia.net/resources/r/?m=02&amp;d=20180212&amp;t=2&amp;i=1230704407&amp;w=1200&amp;r=LYNXMPEE1B11E</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-germany-facebook/german-court-rules-facebook-use-of-personal-data-illegal-idUSKBN1FW1FI?il=0</dc:identifier>
</item>
<item>
<title>Facebook lost around 2.8M U.S. users under 25 last year</title>
<link>https://www.recode.net/2018/2/12/16998750/facebooks-teen-users-decline-instagram-snap-emarketer</link>
<guid isPermaLink="true" >https://www.recode.net/2018/2/12/16998750/facebooks-teen-users-decline-instagram-snap-emarketer</guid>
<description>&lt;p id=&quot;HTwdlH&quot;&gt;Facebook is losing young users even &lt;a href=&quot;https://www.recode.net/2017/8/21/16181348/teenagers-millennials-users-facebook-instagram-snapchat-emarketer&quot;&gt;quicker than expected&lt;/a&gt;, according to new estimates by eMarketer.&lt;/p&gt;
&lt;p id=&quot;XB8TWi&quot;&gt;The digital measurement firm predicted last year that Facebook would see a 3.4 percent drop in 12- to 17-year-old users in the U.S. in 2017, the first time it had predicted a drop in usage for any age group on Facebook.&lt;/p&gt;
&lt;p id=&quot;ueIzlc&quot;&gt;The reality: The number of U.S. Facebook users in the 12- to 17-year-old demographic declined by 9.9 percent in 2017, eMarketer found, or about 1.4 million total users. That’s almost three times the decline expected. There were roughly 12.1 million U.S. Facebook users in the 12- to 17-year-old demographic by the end of the year.&lt;/p&gt;
&lt;p id=&quot;r7mNbg&quot;&gt;There are likely multiple reasons for the decline. Facebook has been losing its “cool” factor for years, and young people have more options than ever for staying in touch with friends and family. Facebook also serves as a digital record keeper — but many young people don’t seem to care about saving their life online, at least not publicly. That explains why Snapchat and Instagram, which offer features for sharing photos and videos that disappear, are growing in popularity among this demographic.&lt;/p&gt;
&lt;p id=&quot;5OZbsd&quot;&gt;Overall, eMarketer found Facebook lost about 2.8 million U.S. users under 25 last year.&lt;/p&gt;
&lt;p id=&quot;O5SHmc&quot;&gt;And Facebook’s 2018 doesn’t look much better.&lt;/p&gt;
&lt;p id=&quot;EBW4dJ&quot;&gt;The research firm released Facebook usage estimates for 2018 on Monday, and expects that Facebook will lose about 2.1 million users in the U.S. under the age of 25 this year.&lt;/p&gt;
&lt;p id=&quot;49hTZY&quot;&gt;EMarketer predicts that Facebook will see a decline in usage among all three age groups for people under 25:&lt;/p&gt;
&lt;ul&gt;&lt;li id=&quot;nkyWTr&quot;&gt;A 9.3 percent drop for Facebook users under 11 years old. (Reminder: Facebook’s terms of service require that users must be 13 years old in order to create an account, though it’s easy to get around that.)&lt;/li&gt;
&lt;li id=&quot;rgIFIU&quot;&gt;A 5.6 percent decline in users between 12 and 17 years old.&lt;/li&gt;
&lt;li id=&quot;aTcfZb&quot;&gt;A 5.8 percent decline in users between 18 and 24 years old. This is the first time eMarketer has ever predicted a year-over-year decline in usage for this age group, though it has happened before. In 2016, Facebook’s user base for 18- to 24-year-olds fell by 1.5 percent.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;ks8FrI&quot;&gt;Take the numbers with a grain of salt — eMarketer is an outside research firm so it doesn’t have the full picture that, say, Facebook has.&lt;/p&gt;
&lt;p id=&quot;DHB3QS&quot;&gt;But the fact that eMarketer is predicting declines across the board is a bad sign for Facebook regardless. Young people offer a good barometer for what is popular, but more importantly for Facebook, losing out on the next generation of internet users in the U.S. is troubling for the company’s long-term dominance.&lt;/p&gt;

&lt;p id=&quot;HVFZeh&quot;&gt;The good news for Facebook is that, despite the expected decline in younger users, eMarketer believes Facebook’s overall U.S. audience will continue to grow for the next few years. More importantly, perhaps, eMarketer expects Facebook-owned Instagram to grow significantly. The research firm believes Instagram’s U.S. user base will grow by 13 percent this year, to almost 105 million people.&lt;/p&gt;
&lt;p id=&quot;WwMF1b&quot;&gt;That’s even better than Snapchat’s expected growth — eMarketer believes it will grow its U.S. audience by 9 percent in 2018. That would give Snapchat about 86.5 million users by the end of the year.&lt;/p&gt;

&lt;hr class=&quot;p-entry-hr&quot; id=&quot;CkYHGR&quot;/&gt;&lt;aside id=&quot;1yP08n&quot; readability=&quot;1.4192307692308&quot;&gt;
&lt;/aside&gt;</description>
<pubDate>Mon, 12 Feb 2018 17:57:09 +0000</pubDate>
<dc:creator>rblion</dc:creator>
<og:description>That’s according to research firm eMarketer.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/8xKQJQQ_akEGH-LH9TkbE06t7Ic=/0x0:5472x2865/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/8829581/GettyImages_642714816.jpg</og:image>
<og:title>Facebook lost around 2.8 million U.S. users under 25 last year. 2018 won’t be much better.</og:title>
<og:type>article</og:type>
<og:url>https://www.recode.net/2018/2/12/16998750/facebooks-teen-users-decline-instagram-snap-emarketer</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.recode.net/2018/2/12/16998750/facebooks-teen-users-decline-instagram-snap-emarketer</dc:identifier>
</item>
<item>
<title>The Long, Slow Decline of BitTorrent</title>
<link>https://www.plagiarismtoday.com/2017/06/01/the-long-slow-decline-of-bittorrent/</link>
<guid isPermaLink="true" >https://www.plagiarismtoday.com/2017/06/01/the-long-slow-decline-of-bittorrent/</guid>
<description>&lt;p&gt;&lt;img class=&quot;alignleft size-medium wp-image-26020&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/bittorrent-06-535x535-250x250.png&quot; alt=&quot;BitTorrent Logo&quot; width=&quot;250&quot; height=&quot;250&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/bittorrent-06-535x535-250x250.png 250w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/bittorrent-06-535x535-150x150.png 150w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/bittorrent-06-535x535-420x420.png 420w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/bittorrent-06-535x535.png 535w&quot; sizes=&quot;(max-width: 250px) 100vw, 250px&quot;/&gt;In 2006 BitTorrent, or specifically peer-to-peer (P2P) file sharing. was king.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://torrentfreak.com/bittorrent-the-one-third-of-all-internet-traffic-myth/&quot;&gt;In a study from January of that year&lt;/a&gt;, P2P traffic accounted for over 70% of all internet traffic. Though, at that time, BitTorrent shared the file sharing crown with other networks, it quickly moved to become the number one file sharing protocol, &lt;a href=&quot;http://www.cs.ucsb.edu/~almeroth/classes/W10.290F/papers/ipoque-internet-study-08-09.pdf&quot;&gt;a title it would hold decisively by 2008&lt;/a&gt;, in part &lt;a href=&quot;https://arstechnica.com/uncategorized/2008/04/bittorrent-use-soars-as-mpaa-fights-on-against-p2p-sites/&quot;&gt;due to an incredible period of growth in late 2007/early 2008&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, even by then cracks were showing in the P2P armor. By late 2007, &lt;a href=&quot;http://www.businesswire.com/portal/site/google/index.jsp?ndmViewId=news_view&amp;amp;newsId=20070618005912&amp;amp;newsLang=en&quot;&gt;web traffic had overtaken p2p traffic&lt;/a&gt;. This was largely because of &lt;a href=&quot;http://www.telegraph.co.uk/technology/3355565/YouTubes-meteoric-rise-clips-with-everything.html&quot;&gt;the meteoric rise of YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By 2011, &lt;a href=&quot;https://www.wired.com/2011/05/netflix-traffic/&quot;&gt;P2P had fallen to under 19% in North America&lt;/a&gt; and was beaten by Netflix during peak times. &lt;a href=&quot;https://www.digitaltrends.com/computing/bittorrent-file-sharing-p2p-download-upload-downloading-uploading/&quot;&gt;By 2013 that traffic was down to just 7.39 percent&lt;/a&gt; and represented a drop not just in percentage, but actual traffic. In 2015, &lt;a href=&quot;http://bgr.com/2016/01/21/netflix-downloads-bittorrent-piracy/&quot;&gt;it was estimated to be 3 percent&lt;/a&gt;, a percentage that put it on par with Hulu, the fourth most popular video streaming site.&lt;/p&gt;
&lt;p&gt;While this shift has been most acutely felt in North America. Studies have found it to also be on the decline elsewhere, &lt;a href=&quot;https://torrentfreak.com/bittorrent-traffic-share-drops-to-new-low-150918/&quot;&gt;including Europe and Asia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This decreased prominence reached a peak in May of this year when pirates threatened to leak episode of Netflix’s &lt;em&gt;Orange is the New Black&lt;/em&gt; before their slated release. Their demand for ransom was balked at the they posted the files on BitTorrent sites with almost no impact.&lt;/p&gt;
&lt;p&gt;This raises a simple question: What’s eating away at BitTorrent? &lt;a href=&quot;https://www.bloomberg.com/view/articles/2017-05-02/why-netflix-is-winning-the-online-piracy-wars&quot;&gt;Why is BitTorrent the only kind of internet traffic not growing nor expected to grow&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;To understand we have to look at all of the variables at play and understand how BitTorrent is under assault from all sides and why piracy may never be the same.&lt;span id=&quot;more-25961&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;Cause 1: Better Legitimate Alternatives&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;alignright size-medium wp-image-10363&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2011/07/netflix-logo-normal-300x108.jpg&quot; alt=&quot;Image of Netflix Logo&quot; width=&quot;300&quot; height=&quot;108&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2011/07/netflix-logo-normal-300x108.jpg 300w, https://www.plagiarismtoday.com/wp-content/uploads/2011/07/netflix-logo-normal.jpg 346w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;When the decline of BitTorrent and P2P file sharing is raised the credit is usually given largely to legitimate alternatives such as Netflix, Hulu and Amazon Prime.&lt;/p&gt;
&lt;p&gt;This is supported by the numbers as well. Netflix, YouTube, Amazon Video, iTunes and Hulu combine to make up well over 60% of all peak internet traffic in North America. That’s 20 times the estimated size of BitTorrent.&lt;/p&gt;
&lt;p&gt;Most convincing of all, the rise of Netflix as a traffic largely mirrors BitTorrent’s fall. This makes it clear that, as users were firing up Netflix, they were doing so at the expense of P2P file sharing.&lt;/p&gt;
&lt;p&gt;Simply put, when a month of unlimited streaming comes costs less than a lunch, people snap it up. Even more so when the library of content is sound and the ease/reliability of streaming is very high.&lt;/p&gt;
&lt;p&gt;There’s no doubt that Netflix and its competitors have played a significant role in the downfall of BitTorrent.&lt;/p&gt;
&lt;h4&gt;Cause 2: Streaming Piracy&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;alignleft size-medium wp-image-26021&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-300x169.png&quot; alt=&quot;Kodi Logo&quot; width=&quot;300&quot; height=&quot;169&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-300x169.png 300w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-700x394.png 700w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-696x392.png 696w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-1068x601.png 1068w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-747x420.png 747w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/banner-sbs-11-560x315.png 560w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;However, legitimate streaming services wasn’t the only destination that former BitTorrent users went to. Many leapt onto pirate streaming services, &lt;a href=&quot;http://www.businessinsider.com/illegal-streaming-is-dominating-online-piracy-2016-8&quot;&gt;which made up 74% of all visits to pirated film sites last year&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Much like their legitimate counterparts, pirate streaming sites offer greater convenience and security than BitTorrent.&lt;/p&gt;
&lt;p&gt;In this case, that security is two-fold.&lt;/p&gt;
&lt;p&gt;First, it includes security from viruses and other malware that’s common on &lt;a href=&quot;http://lifehacker.com/5261046/beware-of-viruses-in-office-2010-bittorrent-builds&quot;&gt;BitTorrent downloads&lt;/a&gt; and &lt;a href=&quot;http://gizmodo.com/mac-bittorrent-client-transmission-gets-infected-with-m-1785957214&quot;&gt;BitTorrent software&lt;/a&gt;. Second, it protects against &lt;a href=&quot;https://www.wired.com/2011/05/biggest-bittorrent-case/&quot;&gt;legal threats filed against BitTorrent users&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though the risk of using BitTorrent is small, especially if done intelligently, streaming sites are seen as far safer because they don’t (or at least shouldn’t) download anything to the computer or require the user to re-share the content, greatly expanding their potential legal liability.&lt;/p&gt;
&lt;p&gt;Streaming pirate sites are more convenient than BitTorrent, especially when a permanent download isn’t useful, and tools such as Kodi boxes make it even easier. &lt;a href=&quot;https://kodi.tv/article/selling-pirate-boxes-now-illegal-eu-dev-journal&quot;&gt;So much so that they are actively being targeted for bans&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Cause 3: Enforcement&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;alignright size-medium wp-image-26022&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640-300x225.jpg&quot; alt=&quot;Money Image&quot; width=&quot;300&quot; height=&quot;225&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640-300x225.jpg 300w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640-80x60.jpg 80w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640-265x198.jpg 265w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640-560x420.jpg 560w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/dollar-941246_640.jpg 640w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;The role of copyright enforcement in the decline of P2P file sharing is a hotly-debated one. Some headline-grabbing steps such as &lt;a href=&quot;https://techcrunch.com/2014/11/04/police-finally-arrest-the-third-and-final-founder-of-the-pirate-bay/&quot;&gt;the arrest of the founders of The Pirate Bay&lt;/a&gt; did little to blunt piracy or even shutter the site.&lt;/p&gt;
&lt;p&gt;However, in recent years anti-piracy efforts have instead focused on a more subdued approach, &lt;a href=&quot;https://www.theguardian.com/technology/2014/apr/02/infringing-websites-list-anti-piracy&quot;&gt;one that’s commonly referred to as “follow the money”&lt;/a&gt;. This approach works to discourage advertising and other partners, such as hosts and domain registrars, from working with pirate sites.&lt;/p&gt;
&lt;p&gt;While arrests still do happen, &lt;a href=&quot;http://www.wired.co.uk/article/kat-alleged-founder-arrested&quot;&gt;such as the 2016 arrests of the alleged founders of Kickass Torrents&lt;/a&gt;, other sites shut down spontaneously, &lt;a href=&quot;https://torrentfreak.com/extratorrent-shuts-down-for-good-170517/&quot;&gt;such as the recent closure of Extratorrents&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While it’s hard to know for certain, the call for donations to save the ExtraTorrent’s release group makes it clear that money was at least part of the reason. That, in turn, is likely due to a combination dwindling ad revenue and increasing expenses associated with running a pirate site in 2017.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://torrentfreak.com/meganomics-the-future-of-follow-the-money-copyright-enforcement-120124/&quot;&gt;A survey of pirate sites by Torrentfreak&lt;/a&gt; found that, even with large sites, many were either barely breaking even or were even losing money, making them vulnerable this approach.&lt;/p&gt;
&lt;p&gt;Though some BitTorrent sites make it work, it’s getting more and more difficult to do so.&lt;/p&gt;
&lt;h4&gt;Cause 4: Demographics&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;alignleft size-medium wp-image-26023&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/danbo-2006935_640-300x170.jpg&quot; alt=&quot;Parents Image&quot; width=&quot;300&quot; height=&quot;170&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2017/06/danbo-2006935_640-300x170.jpg 300w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/danbo-2006935_640-560x318.jpg 560w, https://www.plagiarismtoday.com/wp-content/uploads/2017/06/danbo-2006935_640.jpg 640w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;The peak for P2P piracy was, by most accounts, between 2003 and 2006. At the same time, piracy demographics skew heavily to a younger audience &lt;a href=&quot;https://arstechnica.com/tech-policy/2011/11/its-official-america-a-land-of-young-casual-pirates/&quot;&gt;with 18-29 year olds being significantly more likely to pirate than the adult population at large&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, more than a decade later, the people who were heavy into P2P piracy are no longer in the traditional demographic for piracy. Though people of all ages pirate, the older one gets the less likely they are to pirate and the less they are likely to take.&lt;/p&gt;
&lt;p&gt;As for the new generation, they didn’t grow up with Napster (&lt;a href=&quot;https://en.wikipedia.org/wiki/Napster&quot;&gt;which is celebrating its 18th birthday today&lt;/a&gt;) or with BitTorrent. They grew up with iTunes, YouTube and Netflix. They’re much more likely to have access to paid services, use legitimate portals.&lt;/p&gt;
&lt;p&gt;In short, young people have greater access to legitimate services than they did 10 years ago and, when they do pirate, they’re going to turn more to streaming pirate sites rather than BitTorrent.&lt;/p&gt;
&lt;p&gt;After all, the convenience of Netflix and Spotify set the bar for what they wan’t out of their content, whether they get it legitimately or not.&lt;/p&gt;
&lt;p&gt;Meanwhile, generation BitTorrent grew up and &lt;a href=&quot;http://www.csmonitor.com/2003/1216/p11s01-legn.html&quot;&gt;left the dorm room&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Cause 5: VPN Usage&lt;/h4&gt;
&lt;p&gt;&lt;img class=&quot;alignright size-medium wp-image-20719&quot; src=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-300x212.png&quot; alt=&quot;VPN Diagram&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-300x212.png 300w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-550x388.png 550w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-100x70.png 100w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-595x420.png 595w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-610x431.png 610w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg-560x396.png 560w, https://www.plagiarismtoday.com/wp-content/uploads/2015/01/640px-Virtual_Private_Network_overview.svg.png 640w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;Finally, there’s one other possibility for why BitTorrent and P2P traffic seems to be falling out of favor: It’s harder to track.&lt;/p&gt;
&lt;p&gt;Though there are no hard numbers, it’s been widely reported that VPN usage has been increasing. &lt;a href=&quot;https://www.kitguru.net/gaming/security-software/jon-martindale/uk-vpn-usage-explodes-as-digital-economy-bill-progresses/&quot;&gt;Whether it’s due to anti-piracy efforts&lt;/a&gt;&lt;span id=&quot;rwyrxzwzrsuffyub&quot;&gt;&lt;a rel=&quot;file&quot; href=&quot;https://www.plagiarismtoday.com/2017/06/01/the-long-slow-decline-of-bittorrent/wzwaqvstdfuycqtvbfczbazcxbwretxrxzzfx.html&quot;&gt;tzrdzsxscv&lt;/a&gt;&lt;/span&gt;, &lt;a href=&quot;https://venturebeat.com/2016/11/17/trump-win-drives-more-people-to-online-privacy-tools-including-vpn-and-encrypted-messaging/&quot;&gt;political changes&lt;/a&gt; or &lt;a href=&quot;https://nordvpn.com/blog/vpn-popularity-increasing-due-to-privacy-fears/&quot;&gt;privacy concerns&lt;/a&gt;, by all accounts VPN usage is growing &lt;a href=&quot;https://www.plagiarismtoday.com/2017/04/05/how-the-privacy-debate-could-reshape-the-internet/&quot;&gt;and it could change the internet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The real problem here is that there’s no way to know just how much of VPN traffic is growing or how much of it is BitTorrent. Though different traffic studies look at the internet from different vantage points, some simply would not be able to see VPN-obscured BitTorrent traffic.&lt;/p&gt;
&lt;p&gt;Still, it’s unlikely that VPN usage accounts for the drop in interest in BitTorrent, but it may mean the gains aren’t quite as drastic as some studies indicate.&lt;/p&gt;
&lt;h4&gt;Bottom Line&lt;/h4&gt;
&lt;p&gt;For BitTorrent and P2P file sharing in general, the heyday has passed. If you’re a BitTorrent site operator, the halcyon days of the early 2000s are not coming back.&lt;/p&gt;
&lt;p&gt;To be clear, there will always be P2P piracy on the internet. Most predictions call for P2P traffic &lt;a href=&quot;https://www.bloomberg.com/view/articles/2017-05-02/why-netflix-is-winning-the-online-piracy-wars&quot;&gt;to remain flat over the next few years&lt;/a&gt;. But that flatness is against the backdrop of an anticipated explosion in other types of content.&lt;/p&gt;
&lt;p&gt;As a percentage of traffic, P2P will, almost certainly, continue to dwindle until it’s less and less significant. Some pockets of the world will hold out longer than others, but the global trend is clear.&lt;/p&gt;
&lt;p&gt;This doesn’t mean that piracy is over and done (even P2P piracy) or that there aren’t problems with the legitimate services we have today. Creators can’t quite celebrate yet.&lt;/p&gt;
&lt;p&gt;However, something that seemed impossible 10 years ago has come to fruition, BitTorrent is no longer the dominant force on the internet. It’s not even the largest service for video nor is it even in the top 3 providers.&lt;/p&gt;
&lt;p&gt;The internet is now dominated by legitimate choices for video streaming.&lt;/p&gt;


</description>
<pubDate>Mon, 12 Feb 2018 16:03:21 +0000</pubDate>
<dc:creator>uptown</dc:creator>
<og:image>https://www.plagiarismtoday.com/wp-content/uploads/2017/05/decline-589-sized.jpg</og:image>
<og:type>article</og:type>
<og:title>The Long, Slow Decline of BitTorrent - Plagiarism Today</og:title>
<og:description>BitTorrent used to dominate not just piracy, but the internet. Now, it's barely noticed in traffic studies. What happened to the platform?</og:description>
<og:url>https://www.plagiarismtoday.com/2017/06/01/the-long-slow-decline-of-bittorrent/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.plagiarismtoday.com/2017/06/01/the-long-slow-decline-of-bittorrent/</dc:identifier>
</item>
<item>
<title>Lessons from Optics, the Other Deep Learning</title>
<link>http://www.argmin.net/2018/01/25/optics/</link>
<guid isPermaLink="true" >http://www.argmin.net/2018/01/25/optics/</guid>
<description>&lt;p&gt;Would you say deep learning is mature enough to be taught in high schools?&lt;/p&gt;&lt;p&gt;Here’s why I ask. Some time ago, I received an email from a product manager at a very large company. I love sharing personal emails publicly, so I’ll post it here:&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/email.png&quot; alt=&quot;BUT HER EMAILS&quot; width=&quot;300px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I sat on this email for days. I couldn’t come up with a constructive answer.&lt;/p&gt;
&lt;p&gt;If anything, I wanted to reply that maybe her engineers &lt;em&gt;should&lt;/em&gt; be scared.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/vgg.png&quot; alt=&quot;Pipelines. The source of all prosperity and misery&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Imagine you’re an engineer, you’re given this net, and you’re asked to make it work better on a dataset. You might presume each of these layers is there for a reason. But as a field, we don’t yet have a common language to express these reasons. The way we teach deep learning is very different from the way we teach other technical disciplines.&lt;/p&gt;
&lt;p&gt;A few years ago, I got into optics. In optics, you also build stacks of components that process inputs. Here’s a camera lens.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/lens.png&quot; alt=&quot;My eyes hurt&quot; width=&quot;460px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To design something like this, you start with basic stackup, usually named after the famous person who invented it, you simulate it to determine how it falls short of your requirements, then insert additional components to correct the shortcomings.&lt;/p&gt;
&lt;p&gt;You then run the system through a numerical optimizer to tune its parameters, like the shape of the surfaces, their locations, and their inclinations, to maximize some design objective. Then you simulate, again, modify, optimize, and repeat.&lt;/p&gt;
&lt;p&gt;Just like with a deep net.&lt;/p&gt;
&lt;p&gt;Each of the 36 elements in the stackup is deliberately inserted to correct an aberration of some kind. This requires a very clear mental model for what each component does to the light that passes through it. That mental model is usually in terms of an action, like refraction, reflection, diffraction, dispersion, or wavefront correction.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/refraction.gif&quot; alt=&quot;refraction&quot; width=&quot;90px&quot; height=&quot;90px&quot;/&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/reflection.jpg&quot; alt=&quot;reflection&quot; width=&quot;90px&quot; height=&quot;90px&quot;/&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/diffraction.jpg&quot; alt=&quot;diffraction&quot; width=&quot;90px&quot; height=&quot;90px&quot;/&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/dispersion.jpg&quot; alt=&quot;dispersion&quot; width=&quot;110px&quot; height=&quot;90px&quot;/&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/wavefront-correction.png&quot; alt=&quot;wavefront correction&quot; width=&quot;110px&quot; height=&quot;90px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;People don’t fear this design process. Each year, the US graduates hundreds of optical engineers who go on to design lenses that work. And they’re not scared of their job.&lt;/p&gt;
&lt;p&gt;That’s not because optics is easy. It’s because the mental models in optics are organized well.&lt;/p&gt;
&lt;p&gt;Modern optics is taught in layers of abstraction.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/abstractions.png&quot; alt=&quot;Absractions all the way down&quot; width=&quot;250px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;At the simplest layer, at the top, is ray optics. Ray optics is a simplification of wave optics, where the rays represent the normal vectors of the wavefronts in wave optics. Wave optics is an approximate solution to Maxwell’s equations. And Maxwell’s equations can be derived from quantum physics, which I don’t actually understand.&lt;/p&gt;
&lt;p&gt;Each layer is derived from the layer below it, by making simplifying assumptions. As such, each layer can explain a more sophisticated set of phenomena than the layer above it.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/optics-scorecard.png&quot; alt=&quot;Alchemy up top, science at the bottom&quot; width=&quot;650px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I spend most of my time designing systems at the top four levels of abstraction.&lt;/p&gt;
&lt;p&gt;This is how we teach optics today. But these theories weren’t always organized in a stack like this. Until a hundred years ago, some of these theories co-existed in a conflicting state. Practitioners relied on folkloric theories of light.&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/galileo.jpg&quot; alt=&quot;And yet it magnifies&quot; width=&quot;250px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;That didn’t stop Galileo from building a pretty good telescope nearly a hundred years before Newton formalized ray optics. Galileo had a good enough mental model of light to build a telescope that could magnify 10x. But his understanding wasn’t good enough to correct chromatic aberrations, or to get a wide field of view.&lt;/p&gt;
&lt;p&gt;Before these theories of light were unified in stack of abstractions, each theory had to start with a fundamental concept of light from the ground up. This involves making up a fresh set of unrealistic assumptions. Newton’s ray optics modeled light as a spray of particles that could be attracted to, or repelled from, solid matter. Huygens modeled light as a longitudinal pressure wave through a mystical medium called “ether”. He modeled light like sound. Maxwell also assumed light propagates through ether. You can still see the remnant of this in the names of the coefficients in Maxwell’s equations.&lt;/p&gt;
&lt;h2 id=&quot;silly-models-yes-but-quantitative-and-predictive&quot;&gt;Silly Models, yes. But quantitative, and Predictive.&lt;/h2&gt;
&lt;p&gt;As silly as these assumptions may sound today, these models were quantitative and they had predictive power. You could plug numbers into them and get numerical predictions out. That’s tremendously useful to an engineer.&lt;/p&gt;
&lt;h2 id=&quot;seeking-a-modular-language-for-deep-learning-to-describe-the-action-of-each-layer&quot;&gt;Seeking: A modular language for deep learning to describe the action of each layer.&lt;/h2&gt;
&lt;p&gt;It would be easier to design deep nets if we could talk about the action of each of its layers the way we talk about the action of an optical element on the light that passes through it.&lt;/p&gt;
&lt;p&gt;We talk about convolutional layers as running matched filters against their inputs, and the subsequent nonlinearities as pooling. This is a relatively low-level description, akin to describing the action of a lens in terms of Maxwell’s equations.&lt;/p&gt;
&lt;p&gt;Maybe there are higher level abstractions to rely on, in terms of a quantity that is modified as it passes through the layers of a net, akin to the action of lens in terms of how it bends rays.&lt;/p&gt;
&lt;p&gt;And it would be nice if this abstraction were quantitative so you could plug numbers into a formula to run back-of-the-envelope analyses to help you design your network.&lt;/p&gt;
&lt;h2 id=&quot;were-far-from-this-kind-of-language-lets-start-with-something-simpler&quot;&gt;We’re far from this kind of language. Let’s start with something simpler.&lt;/h2&gt;
&lt;p&gt;But I’m getting carried away with fantasies.&lt;/p&gt;
&lt;p&gt;Let’s start with something simpler. We have lots of mental models of how deep net training works. I’ve collected a sampling of phenomena worth explaining. Let’s see how well these mental models explain these phenomena.&lt;/p&gt;
&lt;p&gt;Before I get too far, I admit that this exercise is doomed. Optics had 300 years to do this. I spent a Saturday afternoon on it. In exchange I’m just reporting my findings in a blog.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-a-random-initializer-for-sgd-is-good-enough-but-small-numerical-errors-thereafter-or-bad-step-sizes-break-sgd&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; A random initializer for SGD is good enough. But small numerical errors thereafter, or bad step sizes, break SGD.&lt;/h4&gt;
&lt;p&gt;Some practitioners have observed that small changes in how gradients are accumulated can result in vastly different performance on the test set. This comes up for example, when you train with a GPU instead of a CPU (&lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/2226&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/2732&quot;&gt;2&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Do you think this is a legitimate observation that’s worth explaining?&lt;/p&gt;
&lt;p&gt;Or do you think this a spurious observation, and it’s probably untrue?&lt;/p&gt;
&lt;p&gt;Or maybe you think there is something wrong with this observation, like it’s logically self-contradictory in some way, or it’s a malformed claim?&lt;/p&gt;
&lt;p&gt;Sentiments are mixed, I’m sure, but let me record this as a phenomenon and move on.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-shallow-local-minima-generalize-better-than-sharp-ones&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; Shallow local minima generalize better than sharp ones.&lt;/h4&gt;
&lt;p&gt;This claim is fashionable. Some people insist it’s true (&lt;a href=&quot;https://arxiv.org/abs/1609.04836&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://arxiv.org/abs/1611.01838&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;https://arxiv.org/abs/1704.04289&quot;&gt;5&lt;/a&gt;, &lt;a href=&quot;https://arxiv.org/abs/1710.06451&quot;&gt;6&lt;/a&gt;), and others, including myself, believe that it can’t be true on logical grounds. Others have refuted the claim on empirical grounds (&lt;a href=&quot;https://arxiv.org/abs/1703.04933&quot;&gt;7&lt;/a&gt;). Yet others have offered refined variants of this claim (&lt;a href=&quot;https://arxiv.org/abs/1706.08947&quot;&gt;8&lt;/a&gt;). Confusion remains (&lt;a href=&quot;https://twitter.com/beenwrekt/status/941005520420225025&quot;&gt;9&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I’ll note that this phenomenon might be disputed, but record it nevertheless.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-inserting-batch-norm-layers-speeds-up-sgd&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; Inserting Batch Norm layers speeds up SGD.&lt;/h4&gt;
&lt;p&gt;That batchnorm works is mostly undisputed. I offer only one redoubtable exception (&lt;a href=&quot;http://nyus.joshuawise.com/batchnorm.pdf&quot;&gt;10&lt;/a&gt;)), and record this as a phenomenon with no reservation.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-sgd-is-successful-despite-many-local-optima-and-saddle-points&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; SGD is successful despite many local optima and saddle points.&lt;/h4&gt;
&lt;p&gt;There are several claims packed in this one. It is often claimed that the training loss surface of deep learning is rife with saddle points and local minima (&lt;a href=&quot;https://arxiv.org/abs/1712.04741&quot;&gt;11&lt;/a&gt;). In addition, it is variously claimed either that gradient descent can traverse these hazards (&lt;a href=&quot;https://arxiv.org/abs/1412.6544&quot;&gt;12&lt;/a&gt;), or that it need not traverse these hazards to produce a solution that generalizes well (&lt;a href=&quot;https://arxiv.org/abs/1712.04741&quot;&gt;13&lt;/a&gt;). It is also just as often claimed that the loss surface of deep models is altogether benign (&lt;a href=&quot;http://openaccess.thecvf.com/content_cvpr_2017/html/Haeffele_Global_Optimality_in_CVPR_2017_paper.html&quot;&gt;14&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I’ll record this a phenomenon, begrudgingly.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-dropout-works-better-than-other-randomization-strategies&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; Dropout works better than other randomization strategies.&lt;/h4&gt;
&lt;p&gt;I don’t know how to categorize the class of dropout-like things, so I’m calling them “randomization strategies”.&lt;/p&gt;
&lt;p&gt;Recorded with apologies and without discussion.&lt;/p&gt;
&lt;h4 id=&quot;phenomenon-deep-nets-can-memorize-random-labels-and-yet-they-generalize&quot;&gt;&lt;em&gt;Phenomenon:&lt;/em&gt; Deep nets can memorize random labels, and yet, they generalize.&lt;/h4&gt;
&lt;p&gt;The evidence is plain (&lt;a href=&quot;https://arxiv.org/abs/1611.03530&quot;&gt;15&lt;/a&gt;), witnessed and supported by dear friends.&lt;/p&gt;
&lt;p&gt;Recorded as a phenomenon despite the conflict of interest.&lt;/p&gt;
&lt;h2 id=&quot;explications&quot;&gt;Explications&lt;/h2&gt;
&lt;p&gt;We’ve gathered some phenomena. From the papers I cited above, I’ve also gathered theories that I think have the best chance of explaining these phenomena.&lt;/p&gt;
&lt;p&gt;Let’s see how we fare:&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;&lt;img src=&quot;http://www.argmin.net/assets/optics/deeplearning-scorecard.png&quot; alt=&quot;You're fired&quot; width=&quot;650px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There are a few reasons to not get excited.&lt;/p&gt;
&lt;p&gt;First, we couldn’t agree on some of the observations we were trying to explain in the first place.&lt;/p&gt;
&lt;p&gt;Second, I couldn’t organize the explanations into a hierarchy of abstractions. What made optics easy to learn isn’t at all manifest here.&lt;/p&gt;
&lt;p&gt;Third, I suspect some of the theories I’m quoting from the papers aren’t true.&lt;/p&gt;
&lt;h2 id=&quot;my-point&quot;&gt;My Point&lt;/h2&gt;
&lt;p&gt;There’s a mass influx of newcomers to our field and we’re equipping them with little more than folklore and pre-trained deep nets, then asking them to innovate. We can barely agree on the phenomena that we should be explaining away. I think we’re far from teaching this stuff in high schools.&lt;/p&gt;
&lt;p&gt;How do we get there?&lt;/p&gt;
&lt;p&gt;It would be nice if we could provide mental models, at various layers of abstraction, of the action of the layers of a deep net. What could be our equivalent of refraction, dispersion, and diffraction? Maybe you already think in terms of these actions, but we just haven’t standardized our language around these concepts?&lt;/p&gt;
&lt;p&gt;Let’s gather a set of phenomena that we all agree on. We could then try to explain them away. What is our equivalent of Newton Rings, the Kerr effect, or the Faraday effect?&lt;/p&gt;
&lt;p&gt;A small group of colleagues and I have started a massive empirical effort to catalogue mental models that are ambient in our field, to formalize them, and to then validate them with experiments. It’s a lot of work. I think it’s the first step to developing a layered mental model of deep learning that you could teach in high schools. If you want to chat about this project or to help out, please &lt;a href=&quot;https://twitter.com/beenwrekt/status/956621165161779200&quot;&gt;tweet me&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 15:06:34 +0000</pubDate>
<dc:creator>mxwsn</dc:creator>
<og:type>article</og:type>
<og:title>Lessons from Optics, The Other Deep Learning</og:title>
<og:description>Musings on systems, information, learning, and optimization.</og:description>
<og:url>http://benjamin-recht.github.io/2018/01/25/optics/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.argmin.net/2018/01/25/optics/</dc:identifier>
</item>
<item>
<title>Cloud TPUs in Beta</title>
<link>https://cloudplatform.googleblog.com/2018/02/Cloud-TPU-machine-learning-accelerators-now-available-in-beta.html</link>
<guid isPermaLink="true" >https://cloudplatform.googleblog.com/2018/02/Cloud-TPU-machine-learning-accelerators-now-available-in-beta.html</guid>
<description></description>
<pubDate>Mon, 12 Feb 2018 14:01:19 +0000</pubDate>
<dc:creator>saeta</dc:creator>
<og:title>Cloud TPU machine learning accelerators now available in beta</og:title>
<og:url>https://cloudplatform.googleblog.com/2018/02/Cloud-TPU-machine-learning-accelerators-now-available-in-beta.html</og:url>
<og:type>article</og:type>
<og:image>https://4.bp.blogspot.com/-PTPDiXQlxpQ/WoE1egCCWiI/AAAAAAAAFBc/upPx57HXKu4Ld7ieL25RWPw2_dJle9QCwCLcBGAs/s640/cloud-tpu-beta.png</og:image>
<og:description>By John Barrus, Product Manager for Cloud TPUs, Google Cloud and Zak Stone, Product Manager for TensorFlow and Cloud TPUs, Google Brain Team...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://cloudplatform.googleblog.com/2018/02/Cloud-TPU-machine-learning-accelerators-now-available-in-beta.html</dc:identifier>
</item>
<item>
<title>My professional opinion as a blockchain researcher: I don’t see the point (yet)</title>
<link>https://jmkorhonen.net/2018/01/12/my-professional-opinion-as-a-blockchain-researcher-i-dont-see-the-point/</link>
<guid isPermaLink="true" >https://jmkorhonen.net/2018/01/12/my-professional-opinion-as-a-blockchain-researcher-i-dont-see-the-point/</guid>
<description>&lt;p&gt;I’ve spent the last 15 months researching the implications and possibilities of blockchains and related “distributed trust technologies” from a business and societal point of view. Sadly, I have to say that I don’t quite get the hype, as much as I’d love to believe in a technological revolution that democratises the world economy.&lt;/p&gt;
&lt;p&gt;(&lt;strong&gt;NOTE: &lt;/strong&gt;I’ve edited this text a bit to be clear that I’m talking about &lt;em&gt;public &lt;/em&gt;blockchains. &lt;em&gt;Private&lt;/em&gt; blockchains are a different matter, and they will have applications in e.g. automating many transactions. That said, the effects are hardly revolutionary, at least in the short term.)&lt;/p&gt;
&lt;p&gt;As it stands, public blockchain is very much a kludgy solution looking for non-existent problem, namely lack of trusted intermediaries in finance and accounting.&lt;/p&gt;
&lt;p&gt;Unfortunately for this central value proposition of blockchain, there is no lack of trusted enough intermediaries in the financial/accounting sector.&lt;/p&gt;
&lt;p&gt;Very few people outside so-called crypto-anarchist community are opposed to trusted intermediaries as a matter of principle, and outside this (admittedly vocal) minority and those who for their own personal reasons want to believe in this scheme, I seriously doubt there is going to be a huge market of people who are willing to pay a premium (in time, effort or actual valuables) just for the sake of avoiding one sort of intermediary, only to trust the transactions to a code that may or may not be transparently accounted for.&lt;/p&gt;
&lt;p&gt;For who among us can honestly say “yes, I am capable of reviewing the code behind blockchain applications I’m using and I have personally done so to make sure I’m not being scammed?”&lt;/p&gt;
&lt;p&gt;How can the people who are now willing to trust their savings to blockchain technologies  be sure that the code and &lt;a href=&quot;https://medium.com/blockchain-reconnaissance/segwit2x-proves-that-blockchain-doesnt-make-politics-obsolete-831432cd16c3&quot;&gt;its underlying governance structures&lt;/a&gt; (that is, how it is being developed and modified) are in any way better than at least nominally democratically governed systems – with at least some possibility for recourse if things go sour – they want to replace?&lt;/p&gt;
&lt;p&gt;To me, it all seems another gold craze, stoked not only by the usual crowd of techno-babblers keen on latching on the latest buzzword, but also by certified wingnuts from the long-discredited hyper-libertarian Austrian school of economics, kept buoyant by half-baked comparisons to “unreliable” “paper money” (which is nevertheless very effectively backed by the government’s universal tendency to require said paper money for taxes, not to mention the inconvenient fact that if societal trust erodes sufficiently for paper money to lose its value, it’s highly unlikely an arbitrary string of ones and zeros in an arbitrary hard disk somewhere would fare much better), spotty comparisons of current economic system &lt;a href=&quot;https://rationalwiki.org/wiki/Inflation&quot;&gt;to few exceptions where hyperinflation was allowed to run rampant&lt;/a&gt;, and perhaps most of all, by simple wishes that the persons currently propping up the belief in blockchains will not be the last ones who are blinded by the latest buzzword and get-rich-quick scheme.&lt;/p&gt;
&lt;p&gt;Please do not get me wrong. I believe that in the long run, crypto-enabled distributed trust technologies could possibly have significant role in enabling micropayments and microinvestments, effectively by reducing transaction costs related to distribution and bookkeeping. There may also be some &lt;a href=&quot;https://medium.com/blockchain-reconnaissance/are-blockchains-the-3d-printing-of-trust-services-8408458cf38a&quot;&gt;very interesting applications in governance and organisation of human work,&lt;/a&gt; and these initiatives ought to be followed more closely. Furthermore, private, permissioned blockchains are already quite useful for e.g. automating transactions.&lt;/p&gt;
&lt;p&gt;However, the crypto-enthusiastic community loudly ignores that 1) there are absolutely no reasons the current banking system couldn’t reduce its own transaction costs enough to compete very effectively in these lucrative sectors, and 2) the bog standard public blockchain with its Proof of Work scheme (e.g. how Bitcoin burns electricity) is certainly not going to cut transaction costs enough, as throughput rates are simply not even within two orders of magnitude from what is needed. Case in point: a &lt;a href=&quot;https://news.bitcoin.com/miami-bitcoin-conference-stops-accepting-bitcoin-due-to-fees-and-congestion/&quot;&gt;Bitcoin developer conference just announced it won’t be accepting Bitcoin as a means of payment, because it’s too slow and the transaction fees are too high. &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we will inevitably end up with some variation of Proof of Stake protocol – where we will simply have to trust some users more than others – just because Proof of Work, where we don’t have to know or trust other users, is absolutely ridiculous waste of resources and will always have trouble scaling up.&lt;/p&gt;
&lt;p&gt;See, for example, how &lt;a href=&quot;https://getacryp.com/blockchain-vs-tangle-dag/&quot;&gt;Directed Acyclic Graph (DAG) “tangles”&lt;/a&gt; are proposed to work. And once we go down that route, it will become increasingly hard to avoid asking the question: since distributed computing in this sort of record-keeping is always going to be less efficient than centralised computing, what are the precise reasons we should not go the whole route and designate certain nodes as … trusted intermediaries?&lt;/p&gt;
&lt;p&gt;So we’ll end up with what is basically a buzzword-enhanced database solution with some redundancy and consensus algorithms built in. These are not new, &lt;a href=&quot;https://en.wikipedia.org/wiki/Paxos_(computer_science)&quot;&gt;PAXOS consensus algorithms debuted in 1989&lt;/a&gt; – and there are Reasons why they haven’t been used very much. Namely, performance, and the fact that there is no pressing problem these would solve.&lt;/p&gt;
&lt;p&gt;Crypto applications will certainly be useful for verification of various things (again, these are not exactly new ideas) and I could foresee a micropayment and &lt;a href=&quot;https://valuecraft.coop&quot;&gt;alternative finance systems&lt;/a&gt; that could well take off, provided the backbone is something else than blockchain as it is. (My money at the moment would be on DAGs, as both Bitcoin and Ethereum still seem to have grave problems scaling up – but it’s even more likely that someone will come up with something better than current DAGs.) This could develop into a microinvestment vehicle of some sort, and unlocking the investment potential of the world’s poor could well make some people very, very wealthy indeed.&lt;/p&gt;
&lt;p&gt;However, there are also Reasons why such “penny stocks” have been regulated everywhere for decades if not centuries: they have &lt;strong&gt;always&lt;/strong&gt; been fantastic vehicles for scamming the credulous. Cryptography is not some magic free lunch that totally changes the rules in investing and finance.&lt;/p&gt;
&lt;p&gt;Feel free to call me a luddite or whatever. It’s just that I’ve been studying the possibilities of blockchains for business for over a year now, and while it is certainly possible that I simply lack the imagination (or chutzpah) necessary for bold proclamations, I just don’t see the possibilities the marketers seem to see.’&lt;/p&gt;
&lt;p&gt;My advice to all those who are interested in blockchain systems is this: think very carefully whether the problem you are interested in solving will truly be easier to solve, or can be solved better, by distributing the database to the users of the database. If the answer is yes, and &lt;em&gt;if &lt;/em&gt;you can also remain fairly confident that the solution will not infringe on privacy or financial regulation, and &lt;em&gt;if &lt;/em&gt;you have money to spare, then by all means go ahead and experiment with blockchain technologies – though keep in mind that at this stage, everything is so rudimentary that systems will have to be built from scratch (not a good idea, usually) and that technologies can change abruptly. At this moment, there are already some fairly well established private blockchains, though.&lt;/p&gt;
&lt;p&gt;Interesting things are more likely to appear in the smart contracts field, and technologies like blockchain are almost certainly going to be used both to enhance existing systems and to develop new kinds of services that are still hard to envision in detail. Some interesting developments that may point a direction to the future include automating some aspects of insurance markets, such as automating claims processing in more straightforward cases (e.g. when a flight is cancelled and customers need to be refunded) or even selling of insurances automatically based on mutually shared financial data. However, these technologies are still very much immature, and while early adopters could potentially benefit, the risks are also significant.&lt;/p&gt;
&lt;p&gt;Very good reads on the topic are becoming more numerous than it is possible to keep track of, but here are some of the best ones I’ve come across lately.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://prestonbyrne.com/2017/12/08/bitcoin_ponzi/&quot;&gt;Preston Byrne: The Problem with Calling Bitcoin a “Ponzi Scheme”&lt;/a&gt; (“This is no pyramid scheme – our model is the trapezoid!”)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://prestonbyrne.com/2017/09/01/the-bear-case-for-crypto/amp/&quot;&gt;Preston Byrne: The bear case for crypto, part I (the other parts are good too)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://webb-site.com/articles/bitcoinponzi.asp&quot;&gt;Webb Reports: Bitcoin: The world’s first decentralized Ponzi scheme&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/matt_levine/status/951147744772743168&quot;&gt;Someone wants to create “legally binding agreements” for consensual sex, and store them in … blockchain, because of course they would. &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.theregister.co.uk/2017/10/27/biz_quadruples_value_over_night_by_adding_blockchain_to_name/&quot;&gt;One company found its valuation quadruple simply by adding “blockchain” to its name. No bubbles here, nossiree!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-01-08/bitcoin-resumes-drop-as-asian-regulation-demand-concerns-linger&quot;&gt;Governments are finally beginning to do something, and it doesn’t bode well for the prices of cryptocurrencies&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;wpcnt&quot;&gt;
&lt;div class=&quot;wpa wpmrec&quot;&gt;&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;



&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-15258697-1883-5a822a96ae39d&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20180212#blog_id=15258697&amp;amp;post_id=1883&amp;amp;origin=jmkorhonen.wordpress.com&amp;amp;obj_id=15258697-1883-5a822a96ae39d&quot; data-name=&quot;like-post-frame-15258697-1883-5a822a96ae39d&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Mon, 12 Feb 2018 12:00:52 +0000</pubDate>
<dc:creator>ericdanielski</dc:creator>
<og:type>article</og:type>
<og:title>My professional opinion as a blockchain researcher: I don’t see the point (yet)</og:title>
<og:url>https://jmkorhonen.net/2018/01/12/my-professional-opinion-as-a-blockchain-researcher-i-dont-see-the-point/</og:url>
<og:description>I’ve spent the last 15 months researching the implications and possibilities of blockchains and related “distributed trust technologies” from a business and societal point of view…</og:description>
<og:image>https://jmkorhonen.files.wordpress.com/2017/12/cropped-ci-270-1.gif?w=200</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://jmkorhonen.net/2018/01/12/my-professional-opinion-as-a-blockchain-researcher-i-dont-see-the-point/</dc:identifier>
</item>
<item>
<title>Appropriate Uses for SQLite</title>
<link>https://sqlite.org/whentouse.html</link>
<guid isPermaLink="true" >https://sqlite.org/whentouse.html</guid>
<description>&lt;p&gt;SQLite is not directly comparable to client/server SQL database engines such as MySQL, Oracle, PostgreSQL, or SQL Server since SQLite is trying to solve a different problem.&lt;/p&gt;&lt;p&gt;Client/server SQL database engines strive to implement a shared repository of enterprise data. They emphasize scalability, concurrency, centralization, and control. SQLite strives to provide local data storage for individual applications and devices. SQLite emphasizes economy, efficiency, reliability, independence, and simplicity.&lt;/p&gt;&lt;p&gt;SQLite does not compete with client/server databases. SQLite competes with &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen()&lt;/a&gt;.&lt;/p&gt;&lt;div id=&quot;&quot;&gt;&lt;li&gt;&lt;/li&gt;
&lt;li readability=&quot;24&quot;&gt;&lt;strong&gt;Embedded devices and the internet of things&lt;/strong&gt;
&lt;p&gt;Because an SQLite database requires no administration, it works well in devices that must operate without expert human support. SQLite is a good fit for use in cellphones, set-top boxes, televisions, game consoles, cameras, watches, kitchen appliances, thermostats, automobiles, machine tools, airplanes, remote sensors, drones, medical devices, and robots: the &quot;internet of things&quot;.&lt;/p&gt;
&lt;p&gt;Client/server database engines are designed to live inside a lovingly-attended datacenter at the core of the network. SQLite works there too, but SQLite also thrives at the edge of the network, fending for itself while providing fast and reliable data services to applications that would otherwise have dodgy connectivity.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;12.668085106383&quot;&gt;
&lt;p&gt;&lt;strong&gt;Application file format&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite is often used as the on-disk file format for desktop applications such as version control systems, financial analysis tools, media cataloging and editing suites, CAD packages, record keeping programs, and so forth. The traditional File/Open operation calls sqlite3_open() to attach to the database file. Updates happen automatically as application content is revised so the File/Save menu option becomes superfluous. The File/Save_As menu option can be implemented using the &lt;a href=&quot;https://sqlite.org/backup.html&quot;&gt;backup API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many benefits to this approach, including improved application performance, reduced cost and complexity, and improved reliability. See technical notes &lt;a href=&quot;https://sqlite.org/aff_short.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://sqlite.org/appfileformat.html&quot;&gt;here&lt;/a&gt; for details. &lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;12.143016759777&quot;&gt;
&lt;p&gt;&lt;strong&gt;Websites&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite works great as the database engine for most low to medium traffic websites (which is to say, most websites). The amount of web traffic that SQLite can handle depends on how heavily the website uses its database. Generally speaking, any site that gets fewer than 100K hits/day should work fine with SQLite. The 100K hits/day figure is a conservative estimate, not a hard upper bound. SQLite has been demonstrated to work with 10 times that amount of traffic.&lt;/p&gt;
&lt;p&gt;The SQLite website (&lt;a href=&quot;https://www.sqlite.org/&quot;&gt;https://www.sqlite.org/&lt;/a&gt;) uses SQLite itself, of course, and as of this writing (2015) it handles about 400K to 500K HTTP requests per day, about 15-20% of which are dynamic pages touching the database. Dynamic content uses &lt;a href=&quot;https://sqlite.org/np1queryprob.html&quot;&gt;about 200 SQL statements per webpage&lt;/a&gt;. This setup runs on a single VM that shares a physical server with 23 others and yet still keeps the load average below 0.1 most of the time.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;10.689130434783&quot;&gt;
&lt;p&gt;&lt;strong&gt;Data analysis&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;People who understand SQL can employ the &lt;a href=&quot;https://sqlite.org/cli.html&quot;&gt;sqlite3 command-line shell&lt;/a&gt; (or various third-party SQLite access programs) to analyze large datasets. Raw data can be imported from CSV files, then that data can be sliced and diced to generate a myriad of summary reports. More complex analysis can be done using simple scripts written in Tcl or Python (both of which come with SQLite built-in) or in R or other languages using readily available adaptors. Possible uses include website log analysis, sports statistics analysis, compilation of programming metrics, and analysis of experimental results. Many bioinformatics researchers use SQLite in this way.&lt;/p&gt;
&lt;p&gt;The same thing can be done with an enterprise client/server database, of course. The advantage of SQLite is that it is easier to install and use and the resulting database is a single file that can be written to a USB memory stick or emailed to a colleague.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Cache for enterprise data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Many applications use SQLite as a cache of relevant content from an enterprise RDBMS. This reduces latency, since most queries now occur against the local cache and avoid a network round-trip. It also reduces the load on the network and on the central database server. And in many cases, it means that the client-side application can continue operating during network outages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li readability=&quot;24&quot;&gt;
&lt;p&gt;&lt;strong&gt;Server-side database&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Systems designers report success using SQLite as a data store on server applications running in the datacenter, or in other words, using SQLite as the underlying storage engine for an application-specific database server.&lt;/p&gt;
&lt;p&gt;With this pattern, the overall system is still client/server: clients send requests to the server and get back replies over the network. But instead of sending generic SQL and getting back raw table content, the client requests and server responses are high-level and application-specific. The server translates requests into multiple SQL queries, gathers the results, does post-processing, filtering, and analysis, then constructs a high-level reply containing only the essential information.&lt;/p&gt;
&lt;p&gt;Developers report that SQLite is often faster than a client/server SQL database engine in this scenario. Database requests are serialized by the server, so concurrency is not an issue. Concurrency is also improved by &quot;database sharding&quot;: using separate database files for different subdomains. For example, the server might have a separate SQLite database for each user, so that the server can handle hundreds or thousands of simultaneous connections, but each SQLite database is only used by one connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;9.7678018575851&quot;&gt;
&lt;p&gt;&lt;strong&gt;File archives&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.sqlite.org/sqlar&quot;&gt;SQLite Archiver&lt;/a&gt; project shows how SQLite can be used as a substitute for ZIP archives or Tarballs. An archive of files stored in SQLite is only very slightly larger, and in some cases actually smaller, than the equivalent ZIP archive. And an SQLite archive features incremental and atomic updating and the ability to store much richer metadata.&lt;/p&gt;
&lt;p&gt;SQLite archives are useful as the distribution format for software or content updates that are broadcast to many clients. Variations on this idea are used, for example, to transmit TV programming guides to set-top boxes and to send over-the-air updates to vehicle navigation systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.5944700460829&quot;&gt;
&lt;p&gt;&lt;strong&gt;Replacement for &lt;em&gt;ad hoc&lt;/em&gt; disk files&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Many programs use &lt;a href=&quot;http://man.he.net/man3/fopen&quot;&gt;fopen()&lt;/a&gt;, &lt;a href=&quot;http://man.he.net/man3/fread&quot;&gt;fread()&lt;/a&gt;, and &lt;a href=&quot;http://man.he.net/man3/fwrite&quot;&gt;fwrite()&lt;/a&gt; to create and manage files of data in home-grown formats. SQLite works particularly well as a replacement for these &lt;em&gt;ad hoc&lt;/em&gt; data files.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Internal or temporary databases&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For programs that have a lot of data that must be sifted and sorted in diverse ways, it is often easier and quicker to load the data into an in-memory SQLite database and use queries with joins and ORDER BY clauses to extract the data in the form and order needed rather than to try to code the same operations manually. Using an SQL database internally in this way also gives the program greater flexibility since new columns and indices can be added without having to recode every query.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;Stand-in for an enterprise database during demos or testing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Client applications typically use a generic database interface that allows connections to various SQL database engines. It makes good sense to include SQLite in the mix of supported databases and to statically link the SQLite engine in with the client. That way the client program can be used standalone with an SQLite data file for testing or for demonstrations.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Education and Training&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because it is simple to setup and use (installation is trivial: just copy the &lt;strong&gt;sqlite3&lt;/strong&gt; or &lt;strong&gt;sqlite3.exe&lt;/strong&gt; executable to the target machine and run it) SQLite makes a good database engine for use in teaching SQL. Students can easily create as many databases as they like and can email databases to the instructor for comments or grading. For more advanced students who are interested in studying how an RDBMS is implemented, the modular and well-commented and documented SQLite code can serve as a good basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;Experimental SQL language extensions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The simple, modular design of SQLite makes it a good platform for prototyping new, experimental database language features or ideas.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;li readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;strong&gt;Client/Server Applications&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If there are many client programs sending SQL to the same database over a network, then use a client/server database engine instead of SQLite. SQLite will work over a network filesystem, but because of the latency associated with most network filesystems, performance will not be great. Also, file locking logic is buggy in many network filesystem implementations (on both Unix and Windows). If file locking does not work correctly, two or more clients might try to modify the same part of the same database at the same time, resulting in corruption. Because this problem results from bugs in the underlying filesystem implementation, there is nothing SQLite can do to prevent it.&lt;/p&gt;
&lt;p&gt;A good rule of thumb is to avoid using SQLite in situations where the same database will be accessed directly (without an intervening application server) and simultaneously from many computers over a network.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;High-volume Websites&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite will normally work fine as the database backend to a website. But if the website is write-intensive or is so busy that it requires multiple servers, then consider using an enterprise-class client/server database engine instead of SQLite.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Very large datasets&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An SQLite database is limited in size to 140 terabytes (2&lt;sup&gt;&lt;small&gt;47&lt;/small&gt;&lt;/sup&gt; bytes, 128 tibibytes). And even if it could handle larger databases, SQLite stores the entire database in a single disk file and many filesystems limit the maximum size of files to something less than this. So if you are contemplating databases of this magnitude, you would do well to consider using a client/server database engine that spreads its content across multiple disk files, and perhaps across multiple volumes.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;High Concurrency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQLite supports an unlimited number of simultaneous readers, but it will only allow one writer at any instant in time. For many situations, this is not a problem. Writer queue up. Each application does its database work quickly and moves on, and no lock lasts for more than a few dozen milliseconds. But there are some applications that require more concurrency, and those applications may need to seek a different solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;li readability=&quot;18.666666666667&quot;&gt;
&lt;p&gt;&lt;strong&gt;Is the data separated from the application by a network? → choose client/server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Relational database engines act as bandwidth-reducing data filters. So it is best to keep the database engine and the data on the same physical device so that the high-bandwidth engine-to-disk link does not have to traverse the network, only the lower-bandwidth application-to-engine link.&lt;/p&gt;
&lt;p&gt;But SQLite is built into the application. So if the data is on a separate device from the application, it is required that the higher bandwidth engine-to-disk link be across the network. This works, but it is suboptimal. Hence, it is usually better to select a client/server database engine when the data is on a separate device from the application.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota Bene:&lt;/em&gt; In this rule, &quot;application&quot; means the code that issues SQL statements. If the &quot;application&quot; is an &lt;a href=&quot;https://sqlite.org/whentouse.html#serversidedb&quot;&gt;application server&lt;/a&gt; and if the content resides on the same physical machine as the application server, then SQLite might still be appropriate even though the end user is another network hop away.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;strong&gt;Many concurrent writers? → choose client/server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If many threads and/or processes need to write the database at the same instant (and they cannot queue up and take turns) then it is best to select a database engine that supports that capability, which always means a client/server database engine.&lt;/p&gt;
&lt;p&gt;SQLite only supports one writer at a time per database file. But in most cases, a write transaction only takes milliseconds and so multiple writers can simply take turns. SQLite will handle more write concurrency that many people suspect. Nevertheless, client/server database systems, because they have a long-running server process at hand to coordinate access, can usually handle far more write concurrency than SQLite ever will.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;Big data? → choose client/server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If your data will grow to a size that you are uncomfortable or unable to fit into a single disk file, then you should select a solution other than SQLite. SQLite supports databases up to 140 terabytes in size, assuming you can find a disk drive and filesystem that will support 140-terabyte files. Even so, when the size of the content looks like it might creep into the terabyte range, it would be good to consider a centralized client/server database.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&lt;strong&gt;Otherwise → choose SQLite!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For device-local storage with low writer concurrency and less than a terabyte of content, SQLite is almost always a better solution. SQLite is fast and reliable and it requires no configuration or maintenance. It keeps thing simple. SQLite &quot;just works&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 12 Feb 2018 06:26:07 +0000</pubDate>
<dc:creator>tzhenghao</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://sqlite.org/whentouse.html</dc:identifier>
</item>
<item>
<title>Let’s talk about usernames</title>
<link>https://www.b-list.org/weblog/2018/feb/11/usernames/</link>
<guid isPermaLink="true" >https://www.b-list.org/weblog/2018/feb/11/usernames/</guid>
<description>&lt;p class=&quot;meta&quot;&gt;Published: &lt;a href=&quot;https://www.b-list.org/weblog/2018/feb/11/&quot;&gt;February 11, 2018&lt;/a&gt;. Filed under: &lt;a href=&quot;https://www.b-list.org/weblog/categories/django/&quot;&gt;Django&lt;/a&gt;, &lt;a href=&quot;https://www.b-list.org/weblog/categories/pedantics/&quot;&gt;Pedantics&lt;/a&gt;, &lt;a href=&quot;https://www.b-list.org/weblog/categories/programming/&quot;&gt;Programming&lt;/a&gt;, &lt;a href=&quot;https://www.b-list.org/weblog/categories/python/&quot;&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A few weeks ago I released &lt;a href=&quot;https://www.b-list.org/projects/django-registration/&quot;&gt;django-registration&lt;/a&gt; 2.4.1. The 2.4 series is the last in the django-registration 2.x line, and from here on out it’ll only get bugfixes. The &lt;code&gt;master&lt;/code&gt; branch is now prepping for 3.0, which will remove a lot of the deprecated cruft that’s accumulated over the past decade of maintaining it, and try to focus on best practices for modern Django applications.&lt;/p&gt;
&lt;p&gt;I’ll write more about that sometime soon, but right now I want to spend a little bit of time talking about a deceptively hard problem django-registration has to deal with: usernames. And while I could write this as one of those “falsehoods programmers believe about X” articles, my personal preference is to actually explain why this is trickier than people think, and offer some advice on how to deal with it, rather than just provide mockery with no useful context.&lt;/p&gt;
&lt;h2&gt;Aside: the right way to do identity&lt;/h2&gt;
&lt;p&gt;Usernames — as implemented by many sites and services, and by many popular frameworks (including Django) — are almost certainly not the right way to solve the problem they’re often used to solve. What we really want in terms of identifying users is some combination of:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;System-level identifier, suitable for use as a target of foreign keys in our database&lt;/li&gt;
&lt;li&gt;Login identifier, suitable for use in performing a credential check&lt;/li&gt;
&lt;li&gt;Public identity, suitable for displaying to other users&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Many systems ask the username to fulfill all three of these roles, which is probably wrong. A better approach is &lt;a href=&quot;http://habitatchronicles.com/2008/10/the-tripartite-identity-pattern/&quot;&gt;the tripartite identity pattern&lt;/a&gt;, in which each identifier is distinct, and multiple login and/or public identifiers may be associated with a single system identifier.&lt;/p&gt;
&lt;p&gt;Many of the problems and pains I’ve seen with people trying to build and scale account systems have come down to ignoring this pattern. An unfortunate number of hacks have been built on top of systems which &lt;em&gt;don’t&lt;/em&gt; have this pattern, in order to make them look or sort-of act as if they do.&lt;/p&gt;
&lt;p&gt;So if you’re building an account system from scratch today in 2018, I would suggest reading up on this pattern and using it as the basis of your implementation. The flexibility it will give you in the future is worth a little bit of work, and one of these days someone might even build a good generic reusable implementation of it (I’ve certainly given thought to doing this for Django, and may still do it one day).&lt;/p&gt;
&lt;p&gt;For the rest of this post, though, I’ll be assuming that you’re using a more common implementation where a unique username serves as at least a system and login identifier, and probably also a public identifier. And by “username” I mean essentially any string identifier; you may be using usernames in the sense that, say, Reddit or Hacker News do, or you might be using email addresses, or you might be using some other unique string. But no matter what, you’re probably using &lt;em&gt;some&lt;/em&gt; kind of single unique string for this, and that means you need to be aware of some issues.&lt;/p&gt;
&lt;h2&gt;Uniqueness is harder than you think&lt;/h2&gt;
&lt;p&gt;You might be thinking to yourself, how hard can this be? We can just create a unique column and we’re good to go! Here, let’s make a user table in Postgres:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accounts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;SERIAL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email_address&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There’s our user table, there’s our unique username column. Easy!&lt;/p&gt;
&lt;p&gt;Well, it’s easy until we start thinking about case. If you’re registered as &lt;code&gt;john_doe&lt;/code&gt;, what happens if I register as &lt;code&gt;JOHN_DOE&lt;/code&gt;? It’s a different username, but could I cause people to think I’m you? Could I get people to accept friend requests or share sensitive information with me because they don’t realize case matters to a computer?&lt;/p&gt;
&lt;p&gt;This is a simple thing that a lot of systems get wrong. In researching for this post, I discovered Django’s auth system doesn’t enforce case-insensitive uniqueness of usernames, despite getting quite a lot of other things generally right in its implementation. There is a ticket for making usernames case-insensitive, but it’s &lt;span class=&quot;caps&quot;&gt;WONTFIX&lt;/span&gt; now because making usernames case-insensitive would be a massive backwards-compatibility break and nobody’s sure whether or how we could actually do it. I’ll probably look at enforcing it in django-registration 3.0, but I’m not sure it’ll be possible to do even there — any site with existing case-sensitive accounts that bolts on a case-insensitive solution is asking for trouble.&lt;/p&gt;
&lt;p&gt;So if you’re going to build a system from scratch today, you should be doing case-insensitive uniqueness checks on usernames from day one; &lt;code&gt;john_doe&lt;/code&gt;, &lt;code&gt;John_Doe&lt;/code&gt;, and &lt;code&gt;JOHN_DOE&lt;/code&gt; should all be the same username in your system, and once one of them is registered, none of the others should be available.&lt;/p&gt;
&lt;p&gt;But that’s just the start; we live in a Unicode world, and determining if two usernames are the same in a Unicode world is more complex than just doing &lt;code&gt;username1 == username2&lt;/code&gt;. For one thing, there are composed and decomposed forms which are distinct when compared as sequences of Unicode code points, but render on-screen as visually identical to each other. So now you need to talk about normalization, pick a normalization form, and then normalize every username to your chosen form &lt;em&gt;before&lt;/em&gt; you do any uniqueness checks.&lt;/p&gt;
&lt;p&gt;You also need to be considering non-&lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; when thinking about how to do your case-insensitive checks. Is &lt;code&gt;StraßburgJoe&lt;/code&gt; the same user as &lt;code&gt;StrassburgJoe&lt;/code&gt;? What answer you get will often depend on whether you do your check by normalizing to lowercase or uppercase. And then there are the different ways of decomposing Unicode; you can and will get different results for many strings depending on whether you use canonical equivalence or compatibility.&lt;/p&gt;
&lt;p&gt;If all this is confusing — and it is, even if you’re a Unicode geek! — my recommendation is to follow &lt;a href=&quot;http://www.unicode.org/reports/tr36/#Recommendations_General&quot;&gt;the advice of Unicode Technical Report 36&lt;/a&gt; and normalize usernames using &lt;abbr title=&quot;Compatibility Decomposition, Canonical Composition&quot;&gt;&lt;span class=&quot;caps&quot;&gt;NFKC&lt;/span&gt;&lt;/abbr&gt;. If you’re using Django’s &lt;code&gt;UserCreationForm&lt;/code&gt; or a subclass of it (django-registration uses subclasses of &lt;code&gt;UserCreationForm&lt;/code&gt;), this is already done for you. If you’re using Python but not Django (or not using &lt;code&gt;UserCreationForm&lt;/code&gt;), you can do this in one line using a helper from the standard library:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;unicodedata&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;username_normalized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unicodedata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'NFKC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other languages, look up a good Unicode library.&lt;/p&gt;
&lt;h2&gt;No, really, uniqueness is harder than you think&lt;/h2&gt;
&lt;p&gt;Unfortunately, that’s not the end of it. Case-insensitive uniqueness checks on normalized strings are a start, but won’t catch all the cases you probably need to catch. For example, consider the following username: &lt;code&gt;jane_doe&lt;/code&gt;. Now consider another username: &lt;code&gt;jаne_doe&lt;/code&gt;. Are these the same username?&lt;/p&gt;
&lt;p&gt;In the tyepface I’m using as I write this, and in the typeface my blog uses, they &lt;em&gt;appear&lt;/em&gt; to be. But to software, they’re very much &lt;em&gt;not&lt;/em&gt; the same, and still aren’t the same after Unicode normalization and case-insensitive comparison (whether you go to upper- or lower-case doesn’t matter).&lt;/p&gt;
&lt;p&gt;To see why, pay attention to the second code point. In one of the usernames above, it’s &lt;code&gt;U+0061 LATIN SMALL LETTER A&lt;/code&gt;. But in the other, it’s &lt;code&gt;U+0430 CYRILLIC SMALL LETTER A&lt;/code&gt;. And no amount of Unicode normalization or case insensitivity will make those be the same code point, even though they’re often visually indistinguishable.&lt;/p&gt;
&lt;p&gt;This is the basis of the homograph attack, which first gained widespread notoriety in the context of &lt;a href=&quot;https://en.wikipedia.org/wiki/IDN_homograph_attack&quot;&gt;internationalized domain names&lt;/a&gt;. And solving it requires a bit more work.&lt;/p&gt;
&lt;p&gt;For network host names, one solution is to represent names in &lt;a href=&quot;https://en.wikipedia.org/wiki/Punycode&quot;&gt;Punycode&lt;/a&gt;, which is designed to head off precisely this issue, and also provides a way to represent a non-&lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; name using only &lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; characters. Returning to our example usernames above, this makes the distinction between the two obvious. If you want to try it yourself, it’s a one-liner in Python. Here it is on the version which includes the Cyrillic ‘а’:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jаne_doe'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'punycode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;b'jne_doe-2fg'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(if you have difficulty copy/pasting the non-&lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; character, you can also express it in a string literal as &lt;code&gt;j\u0430ne_doe&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;But this isn’t a real solution for usernames; sure, you could use Punycode representation whenever you display a name, but it will break display of a lot of perfectly legitimate non-&lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; names, and what you probably really &lt;em&gt;want&lt;/em&gt; is to reject the above username during your signup process. How can you do that?&lt;/p&gt;
&lt;p&gt;Well, this time we open our hymnals to &lt;a href=&quot;http://www.unicode.org/reports/tr39/&quot;&gt;Unicode Technical Report 39&lt;/a&gt;, and begin reading sections 4 and 5. Sets of code points which are distinct (even after normalization) but visually identical or at least confusingly similar when rendered for display are called (appropriately) “confusables”, and Unicode does provide mechanisms for detecting the presence of such code points.&lt;/p&gt;
&lt;p&gt;The example username we’ve been looking at here is what Unicode terms a “mixed-script confusable”, and this is what we probably want to detect. In other words: an all-Latin username containing confusables is probably fine, and an all-Cyrillic username containing confusables is probably fine, but a username containing mostly Latin plus one Cyrillic code point which happens to be confusable with a Latin one… is not.&lt;/p&gt;
&lt;p&gt;Unfortunately, Python doesn’t provide the necessary access to the full set of Unicode properties and tables in the standard library to be able to do this. But a helpful developer named Victor Felder has written &lt;a href=&quot;http://confusable-homoglyphs.readthedocs.io/en/latest/index.html&quot;&gt;a library which provides what we need&lt;/a&gt;, and released it under an open-source license. Using the &lt;code&gt;confusable_homoglyphs&lt;/code&gt; library, we can detect the problem:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;confusable_homoglyphs&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confusables&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jane_doe'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'j&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u0430&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ne_doe'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confusables&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_dangerous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confusables&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_dangerous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The actual output of &lt;a href=&quot;http://confusable-homoglyphs.readthedocs.io/en/latest/apidocumentation.html#confusable_homoglyphs.confusables.is_dangerous&quot;&gt;is_dangerous()&lt;/a&gt;, for the second username, is a data structure containing detailed information about the potential problems, but what we care about is that it detects a mixed-script string containing code points which are confusable, and that’s what we want.&lt;/p&gt;
&lt;p&gt;Django allows non-&lt;abbr title=&quot;American Standard Code for Information Interchange&quot;&gt;&lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt;&lt;/abbr&gt; in usernames, but does not check for homograph problems. Since version 2.3, though, django-registration has had a dependency on &lt;code&gt;confusable_homoglyphs&lt;/code&gt;, and has used its &lt;code&gt;is_dangerous()&lt;/code&gt; function as part of the validation for usernames and email addresses. If you need to do user signups in Django (or generally in Python), and can’t or don’t want to use django-registration, I encourage you to make use of &lt;code&gt;confusable_homoglyphs&lt;/code&gt; in the same way..&lt;/p&gt;
&lt;h2&gt;Have I mentioned that uniqueness is hard?&lt;/h2&gt;
&lt;p&gt;Once we’re dealing with Unicode confusables, it’s worth also asking whether we should deal with &lt;em&gt;single-script&lt;/em&gt; confusables. For example, &lt;code&gt;paypal&lt;/code&gt; and &lt;code&gt;paypa1&lt;/code&gt;, which (depending on your choice of typeface) may be difficult to distinguish from one another. So far, everything I’ve suggested is good general-purpose advice, but this is starting to get into things which are specific to particular languages, scripts or geographic regions, and should only be done with care and with the potential tradeoffs in mind (forbidding confusable Latin characters may end up with a higher false-positive rate than you’d like, for example). But it is something worth thinking about. The same goes for usernames which are distinct but still very similar to each other; you can check this at the database level in a variety of ways — Postgres, for example, ships with support for &lt;a href=&quot;https://en.wikipedia.org/wiki/Soundex&quot;&gt;Soundex&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Metaphone&quot;&gt;Metaphone&lt;/a&gt;, as well as &lt;a href=&quot;https://en.wikipedia.org/wiki/Levenshtein_distance&quot;&gt;Levenshtein distance&lt;/a&gt; and &lt;a href=&quot;https://www.postgresql.org/docs/9.6/static/pgtrgm.html&quot;&gt;trigram fuzzy matching&lt;/a&gt; — but again it’s going to be something you do on a case-by-case basis, rather than just something you should generally always do.&lt;/p&gt;
&lt;p&gt;There is one more uniqueness issue I want to mention, though, and it primarily affects email addresses, which often get used as usernames these days (especially in services which rely on a third-party identity provider and use OAuth or similar protocols). So assume you’ve got a case for enforcing uniqueness of email addresses. How many distinct email addresses are listed below?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;johndoe@example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;johndoe+yoursite@example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;john.doe@example.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The answer is “it depends”. Most &lt;abbr title=&quot;Mail Transfer Agents&quot;&gt;MTAs&lt;/abbr&gt; have long ignored anything after a &lt;code&gt;+&lt;/code&gt; in the local-part when determining recipient identity, which in turn has led to many people using text after a &lt;code&gt;+&lt;/code&gt; as a sort of &lt;em&gt;ad hoc&lt;/em&gt; tagging and filtering system. And Gmail famously ignores dot (&lt;code&gt;.&lt;/code&gt;) characters in the local-part, including in their custom-domain offerings, so it’s impossible without doing &lt;abbr title=&quot;Domain Name System&quot;&gt;&lt;span class=&quot;caps&quot;&gt;DNS&lt;/span&gt;&lt;/abbr&gt; lookups to figure out whether someone’s mail provider actually thinks &lt;code&gt;johndoe&lt;/code&gt; and &lt;code&gt;john.doe&lt;/code&gt; are distinct.&lt;/p&gt;
&lt;p&gt;So if you’re enforcing unique email addresses, or using email addresses as a user identifier, you need to be aware of this and you probably need to strip all dot characters from the local-part, along with &lt;code&gt;+&lt;/code&gt; and any text after it, before doing your uniqueness check. Currently django-registration doesn’t do this, but I have plans to add it in the 3.x series.&lt;/p&gt;
&lt;p&gt;Also, for dealing with Unicode confusables in email addresses: apply that check to the local-part and the domain &lt;em&gt;separately&lt;/em&gt;. People don’t always have control over the script used for the domain, and shouldn’t be punished for choosing something that causes the local-part to be in a single script distinct from the domain; as long as neither the local-part nor the domain, considered in isolation, are mixed-script confusable, the address is probably &lt;span class=&quot;caps&quot;&gt;OK&lt;/span&gt; (and this is what django-registration’s validator does).&lt;/p&gt;
&lt;p&gt;There are a lot of other concerns you can have about usernames which are too similar to each other to be considered “distinct”, but once you deal with case-insensitivity, normalization, and confusables, you start getting into diminishing-returns territory pretty quickly, especially since many rules start being language-, script-, or region-specific. That doesn’t mean you shouldn’t think about them, just that it’s difficult to give general-purpose advice.&lt;/p&gt;
&lt;p&gt;So let’s switch things up a bit and consider a different category of problem.&lt;/p&gt;
&lt;h2&gt;You should have reservations about some names&lt;/h2&gt;
&lt;p&gt;Many sites use the username as more than just a field in the login form. Some will create a profile page for each user, and put the username in the &lt;abbr title=&quot;Uniform Resource Locator&quot;&gt;&lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;&lt;/abbr&gt;. Some might create email addresses for each user. Some might create subdomains. So here are some questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If your site puts the username in the &lt;abbr title=&quot;Uniform Resource Locator&quot;&gt;&lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;&lt;/abbr&gt; of the user’s profile page, what would happen if I created a user named &lt;code&gt;login&lt;/code&gt;? If I were to populate my profile with the text “Our log-in page has moved, please click here to log in”, with a link to my credential-harvesting site, how many of your users do you think I could fool?&lt;/li&gt;
&lt;li&gt;If your site creates email addresses from usernames, what happens if I sign up as a user named &lt;code&gt;webmaster&lt;/code&gt; or &lt;code&gt;postmaster&lt;/code&gt;? Will I get email directed to those addresses for your domain? Could I potentially obtain an &lt;abbr title=&quot;Secure Sockets Layer&quot;&gt;&lt;span class=&quot;caps&quot;&gt;SSL&lt;/span&gt;&lt;/abbr&gt; certificate for your domain with the right username and auto-created email address?&lt;/li&gt;
&lt;li&gt;If your site creates subdomains from usernames, what happens if I sign up as a user named &lt;code&gt;www&lt;/code&gt;? Or &lt;code&gt;smtp&lt;/code&gt; or &lt;code&gt;mail&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you think these are just silly hypotheticals, well, &lt;a href=&quot;http://www.theregister.co.uk/2011/04/11/state_of_ssl_analysis/&quot;&gt;some of them have actually happened&lt;/a&gt;. And not just once, but &lt;a href=&quot;https://www.tivi.fi/Kaikki_uutiset/2015-03-18/A-Finnish-man-created-this-simple-email-account---and-received-Microsofts-security-certificate-3217662.html&quot;&gt;multiple times&lt;/a&gt;. No really, &lt;a href=&quot;https://twitter.com/EdOverflow/status/954093588362809345&quot;&gt;these things have happened multiple times&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can — and should — be taking some precautions to ensure that, say, an auto-created subdomain for a user account doesn’t conflict with a pre-existing subdomain you’re actually using or that has a special meaning, or that auto-created email addresses can’t clash with important/pre-existing ones.&lt;/p&gt;
&lt;p&gt;But to really be careful, you should probably also just disallow certain usernames from being registered. I first saw this suggestion — and a list of names to reserve, and the first two articles linked above — in &lt;a href=&quot;https://ldpreload.com/blog/names-to-reserve&quot;&gt;this blog post by Geoffrey Thomas&lt;/a&gt;. Since version 2.1, django-registration has shipped a list of reserved names, and the list has grown with each release; it’s now around a hundred items.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ubernostrum/django-registration/blob/1d7d0f01a24b916977016c1d66823a5e4a33f2a0/registration/validators.py#L25&quot;&gt;The list in django-registration&lt;/a&gt; breaks names down into a few categories, which lets you compose subsets of them based on your needs (the default validator combines all of them, but lets you override with your own preferred set of reserved names):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Hostnames used for autodiscovery/autoconfig of some well-known services&lt;/li&gt;
&lt;li&gt;Hostnames associated with common protocols&lt;/li&gt;
&lt;li&gt;Email addresses used by certificate authorities to verify domain ownership&lt;/li&gt;
&lt;li&gt;Email addresses listed in &lt;a href=&quot;https://tools.ietf.org/html/rfc2142&quot;&gt;&lt;span class=&quot;caps&quot;&gt;RFC&lt;/span&gt; 2142&lt;/a&gt; that don’t appear in any other subset of reserved names&lt;/li&gt;
&lt;li&gt;Common no-reply email addresses&lt;/li&gt;
&lt;li&gt;Strings which match sensitive filenames (like cross-domain access policies)&lt;/li&gt;
&lt;li&gt;A laundry list of other potentially-sensitive names like &lt;code&gt;contact&lt;/code&gt; and &lt;code&gt;login&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The validator in django-registration will also reject any username which begins with &lt;code&gt;.well-known&lt;/code&gt;, to protect anything which uses the &lt;a href=&quot;https://tools.ietf.org/html/rfc5785&quot;&gt;&lt;span class=&quot;caps&quot;&gt;RFC&lt;/span&gt; 5785&lt;/a&gt; system for “well-known locations”.&lt;/p&gt;
&lt;p&gt;As with confusables in usernames, I encourage you to copy from and improve on django-registration’s list, which in turn is based on and expanded from Geoffrey Thomas’ list.&lt;/p&gt;
&lt;h2&gt;It’s a start&lt;/h2&gt;
&lt;p&gt;The ideas above are not an exhaustive list of all the things you could or should do to validate usernames in sites and services you build, because if I started trying to write an exhaustive list, I’d be here forever. They are, though, a good baseline of things you can do, and I’d recommend you do most or all of them. And hopefully this has provided a good introduction to the lurking complexity of something as seemingly “simple” as user accounts with usernames.&lt;/p&gt;
&lt;p&gt;As I’ve mentioned, Django and/or django-registration already do most of these, and the ones that they don’t are likely to be added at least to django-registration in 3.0; Django itself may not be able to adopt some of them soon, if ever, due to stronger backwards-compatibility concerns. All the code is open source (&lt;abbr title=&quot;Berkeley Software Distribution&quot;&gt;&lt;span class=&quot;caps&quot;&gt;BSD&lt;/span&gt;&lt;/abbr&gt; license) and so you should feel free to copy, adapt or improve it.&lt;/p&gt;
&lt;p&gt;And if there’s something important I’ve missed, please feel free to let me know about it; you can file a bug or pull request to &lt;a href=&quot;https://github.com/ubernostrum/django-registration&quot;&gt;django-registration on GitHub&lt;/a&gt;, or just &lt;a href=&quot;https://www.b-list.org/contact/&quot;&gt;get in touch with me directly&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 12 Feb 2018 03:52:23 +0000</pubDate>
<dc:creator>acjohnson55</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.b-list.org/weblog/2018/feb/11/usernames/</dc:identifier>
</item>
<item>
<title>Slack is the opposite of organizational memory</title>
<link>https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html</link>
<guid isPermaLink="true" >https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html</guid>
<description>&lt;ol id=&quot;markdown-toc&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#interruptions&quot; id=&quot;markdown-toc-interruptions&quot;&gt;Interruptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#the-format-is-fragmented-and-constrained&quot; id=&quot;markdown-toc-the-format-is-fragmented-and-constrained&quot;&gt;The format is fragmented and constrained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#slack-search-is-broken&quot; id=&quot;markdown-toc-slack-search-is-broken&quot;&gt;slack search is broken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#it-increases-productivity-the-bad-kind&quot; id=&quot;markdown-toc-it-increases-productivity-the-bad-kind&quot;&gt;It increases productivity (the bad kind)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#it-replaces-documentation&quot; id=&quot;markdown-toc-it-replaces-documentation&quot;&gt;It replaces documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#what-does-slack-do-right&quot; id=&quot;markdown-toc-what-does-slack-do-right&quot;&gt;What does slack do right&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#trello--jira&quot; id=&quot;markdown-toc-trello--jira&quot;&gt;trello &amp;amp; jira&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html#deleteuber&quot; id=&quot;markdown-toc-deleteuber&quot;&gt;#deleteuber&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Between 2014 and 2016 my working life went through a lot of changes but the worst one was the normalization of slack. Managers like it because it ‘gets things down on paper’, ‘improves reachability’, ‘gets questions answered quickly’. My argument is that it destroys teams’ ability to think, plan &amp;amp; get complex work out the door. Read on for the full story.&lt;/p&gt;
&lt;h2 id=&quot;interruptions&quot;&gt;Interruptions&lt;/h2&gt;
&lt;p&gt;slack empowers your worst people to overwhelm your best. It has that in common with the open office.&lt;/p&gt;
&lt;p&gt;It normalizes interruptions, multitasking, and distractions, implicitly permitting these things to happen IRL as well as online. It normalizes insanely short reply times for questions. In the slack world people can escalate from asking in a room to @person to @here in a matter of minutes. And they’re not wrong to – if your request isn’t handled in 5 minutes it’s as good as forgotten.&lt;/p&gt;
&lt;p&gt;Somewhere along the way we forgot that interruptions are toxic to real work. It wasn’t always this way. On day 1 of my first trading job the only instruction I received was ‘when the market is open, mute your phone.’ The subtext was ‘or else’. If someone said this to me today I’d give them a hug, and I’m not a hugger.&lt;/p&gt;
&lt;p&gt;I’ve tried to have this conversation with people who respond with ‘this is an office; it shouldn’t be a library’. At the time I was only livid. If someone said this to me today, two years into my life as a slack user, I’m not sure how I would react.&lt;/p&gt;
&lt;p&gt;Remote work culture is a defense mechanism against the distracting open office, and slack is the end run around that defense mechanism. It abrades your team’s adrenal system and forces you to live in the present. Unlike email, it can’t delay messages. Chat makes ‘now or never’ your team’s reality.&lt;/p&gt;
&lt;p&gt;When everything is urgent nothing is. This is the master plan of the villain in pixar’s incredibles. slack is a supervillain plot to destroy your team.&lt;/p&gt;
&lt;h2 id=&quot;the-format-is-fragmented-and-constrained&quot;&gt;The format is fragmented and constrained&lt;/h2&gt;
&lt;p&gt;Chat is not editable, or not in the way you’d want. You can edit text for some time window but it doesn’t create an alert. I think corrections and careful research are more important than initial reactions. I prefer the G docs model, where comments / questions create an alert and initial text doesn’t.&lt;/p&gt;
&lt;p&gt;Chat, at least on slack, isn’t grouped or threaded. ‘What about rooms?’ you ask. In my experience (at 4+ companies) rooms aren’t a clear delineation; they tend to anchor groups rather than topics and topics/conversations still overlap in any one channel. Under the typical use patterns I’ve observed, it’s non-trivial to know what the current topics of conversation are in a slack channel or to assign one of those topics to any given message.&lt;/p&gt;
&lt;p&gt;Scrolling would be a great way to identify the topic but scrolling is totally broken. Scrolling up more than two pages’ worth causes nightmare reflows, anchor jumping – things that more civilized computer users from the 80s or 90s would call glitches but modern web users have come to tolerate.&lt;/p&gt;
&lt;p&gt;Email is way better at threading and slack has killed it – nobody will pay attention to both.&lt;/p&gt;
&lt;p&gt;slack is inherently rushed: I feel like I’m in a hurry to whisper before someone shouts. The ‘is typing’ feature is the nail in the coffin here. It shuts down my ability to think coherently. I find myself composing messages in the address bar with my eyes closed to ward off panic.&lt;/p&gt;
&lt;p&gt;‘is typing’ allows slow typists to dissolve group thought. Sorry for the metaphor but it’s like having an old man pee on your face one trickle at a time. I’d rather have it over with quickly and go wash up.&lt;/p&gt;
&lt;p&gt;Paradoxically, speed is just as toxic to group thought, as people will race to get out ideas and leave them half-formed or contradictory. Missing ‘not’ in a sentence is my favorite. When people catch themselves at this they will post a &lt;code class=&quot;highlighter-rouge&quot;&gt;*not&lt;/code&gt;, sometimes a few lines down. I feel like I’m in a wayne’s world sketch.&lt;/p&gt;
&lt;h2 id=&quot;slack-search-is-broken&quot;&gt;slack search is broken&lt;/h2&gt;
&lt;p&gt;In like every way it’s possible to break search:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in part because unlike threads in email / forums, there’s no natural grouping, so you can only search for messages&lt;/li&gt;
&lt;li&gt;in part because the slack search feature is badly implemented – adjacent messages show up as separate results, even when their before/after context overlaps&lt;/li&gt;
&lt;li&gt;I never know what clicking will do – sometimes it will scroll my channel to the message, other times show or hide or resize the search result&lt;/li&gt;
&lt;li&gt;the ‘more results’ button takes me to a paged view but the first results are the same 3 I just saw – i.e. ‘more’ takes me from page 1 to page 1. WTF.&lt;/li&gt;
&lt;li&gt;ctrl-f, the one constant of web interaction, is broken in channels if you’re searching more than one page up. We can blame this on the DOM but I assume this is because slack’s heavy CSS uses too much memory to keep a long scroll history.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I get that this is just a UX issue and is fixable but (1) I don’t know if it &lt;em&gt;is&lt;/em&gt; fixable when your foundation is the sandy marsh that is the DOM and (2) if slack were a tool for augmenting thought rather than preventing it, it would have a working search feature.&lt;/p&gt;
&lt;h2 id=&quot;it-increases-productivity-the-bad-kind&quot;&gt;It increases productivity (the bad kind)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Goodhart%27s_law&quot;&gt;Goodhart’s law&lt;/a&gt; is the one where turning a metric into a target makes it a bad metric. Slack subverts valuable work by making productivity = availability on slack.&lt;/p&gt;
&lt;p&gt;Productivity as a metric is problematic because it’s so hard to measure or even to define in a general way. In economics, total factor productivity is basically wages minus capital, and is flummoxed by the fact that better tools don’t put more money in people’s pockets (employees are generally paid for their time).&lt;/p&gt;
&lt;p&gt;At work, productivity conflates delivery and business value. We know how to measure the first but we mostly care about the second. Optimizing delivery rate has bad effects on products and teams:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Middle managers will make deliverables smaller and less valuable so they can declare a win to their bosses or so the C-suite can brag to shareholders&lt;/li&gt;
&lt;li&gt;Which in turn moves design work from domain experts to PMs, resulting in nuts designs&lt;/li&gt;
&lt;li&gt;And it increases utilization, which leads to burnout, reduces safety margins, stifles innovation (that’s what those spare cycles were getting used for)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These points are part of a larger tug of war between middle managers and programmers. That argument is out of scope for this article, except to say that pervasive chat empowers middle managers (i.e. people who like to check in a lot) to do so, at the expense of your creatives’ well-being and your long-term organizational health.&lt;/p&gt;
&lt;p&gt;Why are people blind to this? I think because most people never understood how work gets done or don’t think about it. Now slack comes in and makes ‘work’ visible in the form of instant replies to quick questions, dancing emoji stickers, and nonstop chatter, and some people are like, ‘yes! look at all that my team has accomplished’.&lt;/p&gt;
&lt;h2 id=&quot;it-replaces-documentation&quot;&gt;It replaces documentation&lt;/h2&gt;
&lt;p&gt;I think most people agree that when knowledge workers work together on teams they need to use writing to agree on what to do. On slack the quality of that writing is plumbing new depths. There’s a world of difference between a well-considered G doc that has been edited by multiple people vs a stream of consciousness mixed in with people’s WFH announcements and ‘look what my cat did’.&lt;/p&gt;
&lt;p&gt;24/7 reachability also hurts good docs practices. When people couldn’t get ahold of each other at all hours orgs had to design for redundancy, i.e. write things down such that they could be understood by someone else. But there’s a whole generation of workers and even companies that never experienced that.&lt;/p&gt;
&lt;p&gt;The information critical to your company’s ops is stored in three places:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;brains&lt;/li&gt;
&lt;li&gt;documents (including email)&lt;/li&gt;
&lt;li&gt;software&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The slack model increases the percent of your company’s critical decisions that rely on a specific brain. Good luck with that.&lt;/p&gt;
&lt;h2 id=&quot;what-does-slack-do-right&quot;&gt;What does slack do right&lt;/h2&gt;
&lt;p&gt;There’s one way in which slack edges out trello &amp;amp; jira for project management. T&amp;amp;J don’t implement backpressure; slack does, because there are limits to attention.&lt;/p&gt;
&lt;p&gt;But this is a goldilocks problem – neither the jira ‘kitchen sink’ model nor the slack ‘off the dome’ model is ideal. Also, lots of people want to use slack trello AND jira simultaneously without any sense of shame (2 is egregious but 3 is insane). Also, slack isn’t the right solution for project management, at minimum because it doesn’t have good aggregation views; not that jira really does either. We need to build scheduling tools that have well-considered limits, not the arbitrary limit of what people can process under high attention pressure.&lt;/p&gt;
&lt;h2 id=&quot;trello--jira&quot;&gt;trello &amp;amp; jira&lt;/h2&gt;
&lt;p&gt;Are also things I hate.&lt;/p&gt;
&lt;p&gt;They promote this icebox theory of design. What did a PM think of six months ago that hasn’t been started? Let’s do that. If your best people aren’t inventing and assigning projects, why should anyone bother showing up to work?&lt;/p&gt;
&lt;p&gt;JIRA has a screen real estate problem. Have you seen the articles about SERP shrinkage, where a G results page in 2004 was mostly results and now it’s mostly ads? JIRA &lt;em&gt;started out this way&lt;/em&gt;. 90% of the text on the screen isn’t your project’s information, it’s JIRA chrome.&lt;/p&gt;
&lt;p&gt;Another JIRA flaw: highly formalized process is usually a hindrance, especially considering who in your organization invents, applies and benefits from process. Hint: middle managers.&lt;/p&gt;
&lt;p&gt;The commoditization of communication &lt;em&gt;isn’t working&lt;/em&gt;. So let’s get off the wagon and start making considered plans again. A blank sheet of paper is all anyone has ever needed to do this well.&lt;/p&gt;
&lt;p&gt;Orgs do have a real need to get questions answered. You can say chat is the closest thing to this, but it comes with too many costs. Stack overflow was a cool innovation when it landed – marking questions completed. But bear in mind that the previous SERP winner, expertsexchange, hid the answer because they wanted to charge you for it, not for UX reasons. And SO has become relatively shitty now, and replaced docs for a lot of OSS libs.&lt;/p&gt;
&lt;h2 id=&quot;deleteuber&quot;&gt;#deleteuber&lt;/h2&gt;
&lt;p&gt;Deleting uber didn’t fix labor relations in the gig economy, but your org can free itself from chat anytime you want – &lt;a href=&quot;https://www.youtube.com/embed/9Vhca4V_FhM?start=58&amp;amp;end=85&quot;&gt;all you have to do is to stop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stop reading if you don’t care about any of the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;increasing your best people’s happiness&lt;/li&gt;
&lt;li&gt;being less reactive to distractions&lt;/li&gt;
&lt;li&gt;being more focused on real progress&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you &lt;em&gt;do&lt;/em&gt; care about those things, also stop reading but after you do, go dump chat.&lt;/p&gt;
&lt;p&gt;I took 4 months off in 2015 and when I rejoined the workforce in 2016 – distraction city. People were checking buzzing phones in meetings. Chat alerts were click-click-clicking all the time. There was no cultural support or even real understanding of the idea that you need to turn this stuff &lt;em&gt;off&lt;/em&gt; to get any work done. I made this point to a PM and his response was ‘oh, you have ADD’.&lt;/p&gt;
&lt;p&gt;Slack and the toxic behaviors it implicitly endorses will give ADD to your &lt;em&gt;whole company&lt;/em&gt;. Want a one-click competitive advantage? Delete your account.&lt;/p&gt;
</description>
<pubDate>Sun, 11 Feb 2018 23:35:41 +0000</pubDate>
<dc:creator>awinter-py</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://abe-winter.github.io/plea%27s/help/2018/02/11/slack.html</dc:identifier>
</item>
<item>
<title>Solid aims to radically change the way web applications work</title>
<link>https://solid.mit.edu/</link>
<guid isPermaLink="true" >https://solid.mit.edu/</guid>
<description>[unable to retrieve full-text content]&lt;p&gt;Article URL: &lt;a href=&quot;https://solid.mit.edu/&quot;&gt;https://solid.mit.edu/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=16355311&quot;&gt;https://news.ycombinator.com/item?id=16355311&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Points: 344&lt;/p&gt;&lt;p&gt;# Comments: 117&lt;/p&gt;</description>
<pubDate>Sun, 11 Feb 2018 22:52:51 +0000</pubDate>
<dc:creator>doener</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://solid.mit.edu/api/auth/select-provider?returnToUrl=https://solid.mit.edu/</dc:identifier>
</item>
</channel>
</rss>