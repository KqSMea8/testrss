<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Notepad++中实现Markdown语法高亮与实时预览 - 武培轩</title>
<link>http://www.cnblogs.com/wupeixuan/p/8673362.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wupeixuan/p/8673362.html</guid>
<description>&lt;p&gt;Notepad ++是一个十分强大的编辑器，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。Notepad ++不仅有语法高亮度显示，也有语法折叠功能，并且支持宏以及扩充基本功能的外挂模组。但是对Markdown支持不够。&lt;/p&gt;
&lt;p&gt;这里通过插件与自定义语法让Notepad++变成一个Markdown书写工具。&lt;/p&gt;
&lt;h2 id=&quot;markdown语法高亮&quot;&gt;Markdown语法高亮&lt;/h2&gt;
&lt;h3 id=&quot;下载所需文件&quot;&gt;下载所需文件&lt;/h3&gt;
&lt;p&gt;因为通过GitHub下载一直超时，我就直接打包放在博客园了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://files.cnblogs.com/files/wupeixuan/notepad_markdown.zip&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;导入语法规则&quot;&gt;导入语法规则&lt;/h3&gt;
&lt;p&gt;打开Notepad++，点击“语言” ，选择“自定义语言格式” ，点击“导入”，选择下载并解压后文件夹中的“userDefineLang_markdown.xml”文件。&lt;/p&gt;
&lt;p&gt;导入完成后重启notepad++，点击“语言”，选择“Markdown”即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/wupeixuan/1188893/o_%e5%9b%be%e7%89%871_%e7%9c%8b%e5%9b%be%e7%8e%8b.png&quot; alt=&quot;设置&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;markdown实时预览&quot;&gt;Markdown实时预览&lt;/h2&gt;
&lt;h3 id=&quot;安装实时预览插件&quot;&gt;安装实时预览插件&lt;/h3&gt;
&lt;p&gt;打开Notepad++，点击“设置”，选择“导入-导入插件”，将之前下载的文件中的“NppMarkdown.dll”导入即可。&lt;/p&gt;
&lt;h3 id=&quot;打开插件&quot;&gt;打开插件&lt;/h3&gt;
&lt;p&gt;打开Notepad++，点击“插件”，选择“NppMarkdown” 在右侧出现的“preview markdown”窗口底部，勾选“live preview” 同时点击“preview”即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.cnblogs.com/cnblogs_com/wupeixuan/1188893/o_%e5%be%ae%e4%bf%a1%e6%88%aa%e5%9b%be_20180329234049.png&quot; alt=&quot;设置&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 15:46:00 +0000</pubDate>
<dc:creator>武培轩</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wupeixuan/p/8673362.html</dc:identifier>
</item>
<item>
<title>[LTR] 信息检索评价指标（RP/MAP/DCG/NDCG/RR/ERR） - Memento</title>
<link>http://www.cnblogs.com/memento/p/8673309.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/memento/p/8673309.html</guid>
<description>&lt;h3&gt;&lt;span&gt;一、RP&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;R（&lt;span&gt;recall&lt;/span&gt;）表示&lt;strong&gt;召回率、查全率&lt;/strong&gt;，指查询返回结果中相关文档占所有相关文档的比例；P（&lt;span&gt;precision&lt;/span&gt;）表示&lt;strong&gt;准确率、精度&lt;/strong&gt;，指查询返回结果中相关文档占所有查询结果文档的比例；&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233645735-1369060548.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;541&quot; height=&quot;78&quot; title=&quot;f9fa0f3c-e542-4bec-a51c-f1fbd4c1e2e4&quot; alt=&quot;f9fa0f3c-e542-4bec-a51c-f1fbd4c1e2e4&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233646125-1210474261.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233646464-1819469058.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;509&quot; height=&quot;81&quot; title=&quot;45533e0d-4575-4428-909f-8a67872eebeb&quot; alt=&quot;45533e0d-4575-4428-909f-8a67872eebeb&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233646843-1958639536.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;则 PR 曲线呈现出负相关的下降趋势；&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233647165-334566582.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;305&quot; height=&quot;287&quot; title=&quot;058a9536-fe6c-4c21-84d5-467d9e35a456&quot; alt=&quot;058a9536-fe6c-4c21-84d5-467d9e35a456&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233647537-1246757166.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一般来说，recall 和 precision 反映了模型性能的两个方面，单一依靠某个指标并不能较为全面的评价一个模型的性能。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;此时引入&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;strong&gt;F-Score/F-measure&lt;/strong&gt; 作为综合指标，平衡 recall 和 precision 的影响，较为全面的评价一个模型。&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233647866-1291011888.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;455&quot; height=&quot;82&quot; title=&quot;22d25eb1-a548-4965-9bb7-1c62d7ceaf08&quot; alt=&quot;22d25eb1-a548-4965-9bb7-1c62d7ceaf08&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233648228-1181219934.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;其中，F1-Score 表示准确率和召回率一样重要；F2-Score 表示召回率比准确率重要一倍；F0.5-Score 表示准确率比召回率重要一倍。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;二、MAP&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;对 PR 曲线进行积分求曲线下方的面积，就是 AP（Average Precision），即&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233648503-735079860.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;195&quot; height=&quot;64&quot; title=&quot;9aa94817-14eb-43e6-937f-fe0e25281282&quot; alt=&quot;9aa94817-14eb-43e6-937f-fe0e25281282&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233648783-605294957.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;其中，p 表示 precision，r 表示 recall，p 是一个以 r 为参数的函数，AP 的计算是对排序位置敏感的，相关文档排序的位置越靠前，检索出相关的文档越多，AP 值越大。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;近似计算约等于 AAP（Aproximate Average Precision）：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233649160-1834099625.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;688&quot; height=&quot;92&quot; title=&quot;5b39c9fe-d327-4543-82de-61f1cf73f4f1&quot; alt=&quot;5b39c9fe-d327-4543-82de-61f1cf73f4f1&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233649579-1457822439.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span&gt;其中，N 代表所有相关文档的总数，p(k) 表示能检索出 k 个相关文档时的 precision 值，而 △r(k) 则表示检索相关文档个数从 k-1 变化到 k 时（通过调整阈值）recall 值的变化情况。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;rel(k) 表示第 k 个文档是否相关，若相关则为1，否则为0，则可以简化公式为：&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233650014-668416066.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;311&quot; height=&quot;85&quot; title=&quot;984c61c5-337e-4d5b-ba7f-192e99eb3668&quot; alt=&quot;984c61c5-337e-4d5b-ba7f-192e99eb3668&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233650299-1351349744.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;其中，N 表示相关文档总数，position(i) 表示第 i 个相关文档在检索结果列表中的位置。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MAP（Mean Average Precision）即多个查询的平均正确率（AP）的均值，从整体上反映模型的检索性能。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;下面举一个例子来说明上述公式的计算：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;查询 query1 对应总共有4个相关文档，查询 query2 对应总共有5个相关文档。当通过模型执行查询1、2时，分别检索出4个相关文档（Rank=1、2、4、7）和3个相关文档（Rank=1、3、5）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;则 query1&lt;/span&gt;&lt;sub&gt;&lt;span&gt;AP&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;=(1/1+2/2+3/4+4/7)/4=0.83，query2&lt;/span&gt;&lt;sub&gt;&lt;span&gt;AP&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;=(1/1+2/3+3/5+0+0)/5=0.45，最后 MAP=(0.83+0.45)/2=0.64。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;三、NDCG&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;1、CG（Cumulative Gain）&lt;/span&gt;&lt;span&gt;&lt;span&gt;累计效益&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233650555-1852084284.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;219&quot; height=&quot;86&quot; title=&quot;7c723338-5b30-4824-99be-503c257250e7&quot; alt=&quot;7c723338-5b30-4824-99be-503c257250e7&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233650854-1188142155.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其中 k 表示 k 个文档组成的集合，rel 表示第 i 个文档的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;相关度&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，例如&lt;/span&gt;&lt;span&gt;相关度&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;分为以下几个等级：&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;wiz-table-container&quot;&gt;
&lt;div class=&quot;wiz-table-body&quot;&gt;
&lt;table width=&quot;277&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Relevance Rating&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;center&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Value&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Perfect&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Excellent&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Good&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Fair&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot;&gt;&lt;span&gt;Simple&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot;&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;156&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Bad&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;120&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;2、DCG（Discounted Cumulative Gain）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;在 CG 的计算中没有考虑到位置信息，例如检索到三个文档的相关度依次为（3，-1&lt;span&gt;，&lt;/span&gt;1）和（-1&lt;span&gt;，&lt;/span&gt;1&lt;span&gt;，&lt;/span&gt;3），根据 CG 的计算公式得出的排名是相同的，但是显然前者的排序好一些。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;所以需要在 CG 计算的基础上加入位置信息的计算，现假设根据位置的递增，对应的价值递减，为 1/log&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;(i+1)，其中 log&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;(i+1) 为&lt;span&gt;折扣因子&lt;/span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233651147-547765551.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;317&quot; height=&quot;83&quot; title=&quot;a4fe0c3e-f733-418c-a015-b14359025caf&quot; alt=&quot;a4fe0c3e-f733-418c-a015-b14359025caf&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233651585-1898482726.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;另一种&lt;strong&gt;增加相关度影响比重&lt;/strong&gt;的 DCG 计算公式：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233652134-2083685297.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;311&quot; height=&quot;92&quot; title=&quot;76654d8a-82be-4ce7-9f97-08f8d4e715fe&quot; alt=&quot;76654d8a-82be-4ce7-9f97-08f8d4e715fe&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233652473-1450456377.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h4&gt;&lt;span&gt;3、IDCG（ideal DCG）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;理想情况&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;下，按照相关度从大到小排序，然后计算 DCG 可以取得最大值情况。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233652806-236956354.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;331&quot; height=&quot;92&quot; title=&quot;51869e97-3a06-40f1-ae79-dea40691e10a&quot; alt=&quot;51869e97-3a06-40f1-ae79-dea40691e10a&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233653136-262596326.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;其中 |REL| 表示文档按照相关度从大到小排序，取前 k 个文档组成的集合。&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、NDCG（Normalized DCG）&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;由于每个查询所能检索到的结果文档集合长度不一致，k 值的不同会影响 DCG 的计算结果。所以不能简单的对不同查询的 DCG 结果进行平均，需要先归一化处理。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;NDCG 就是利用 IDCG 进行归一化处理，表示当前的 DCG 与理想情况下的 IDCG 相差多大：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233653462-1211841969.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;291&quot; height=&quot;78&quot; title=&quot;baba3d13-fbd8-4448-9514-55ac759dbf34&quot; alt=&quot;baba3d13-fbd8-4448-9514-55ac759dbf34&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233653834-940026362.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这样每个查询的 NDCG 均在 0-1 范围内，不同查询之间就可以进行比较，求取多个查询的平均 NDCG。&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、例子&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;通过一个计算示例来说明上面的公式，例如现在有一个 query={abc}，返回下图左列的 Ranked List，当假设用户的选择与排序结果无关，则根据相关度生成的累计增益如下图所示：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;wiz-table-container&quot;&gt;
&lt;div class=&quot;wiz-table-body&quot;&gt;
&lt;table width=&quot;601&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td width=&quot;40&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;br/&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;URL&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;rel&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;&lt;span&gt;Gain(2&lt;/span&gt;&lt;sup&gt;&lt;span&gt;reli-&lt;/span&gt;&lt;/sup&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;Cumulative Gain&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;40&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;#1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;http://abc.go.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;40&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;#2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;http://www.abctech.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;34=31+3&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td width=&quot;40&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;#3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;http://abcnews.go.com/sections/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;49=31+3+15&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;40&quot;&gt;&lt;span&gt;#4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot;&gt;&lt;span&gt;http://www.abc.net.au/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot;&gt;&lt;span&gt;64=31+3+15+15&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;40&quot;&gt;&lt;span&gt;#5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot;&gt;&lt;span&gt;http://abcnews.com/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot;&gt;&lt;span&gt;79=31+3+15+15+15&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;40&quot;&gt;&lt;span&gt;#6&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;101&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;169&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;现在考虑搜索结果排在前面的用户会优先选择，引入一个折算因子（discounting factor）：1/(log(i+1)/log2) = log2/log(i+1)。&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;wiz-table-container&quot;&gt;
&lt;div class=&quot;wiz-table-body&quot;&gt;
&lt;table width=&quot;781&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;URL&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;rel&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;&lt;span&gt;Gain(2&lt;/span&gt;&lt;sup&gt;&lt;span&gt;reli-&lt;/span&gt;&lt;/sup&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;Cumulative Gain&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;DCG&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abc.go.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;31=31×1&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://www.abctech.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;34=31+3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;32.9=31+3×0.63&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abcnews.go.com/sections/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;49=31+3+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;40.4=32.9+15×0.50&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://www.abc.net.au/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;64=31+3+15+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;46.9=40.4+15×0.43&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abcnews.com/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;79=31+3+15+15+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;52.7=46.9+15×0.39&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#6&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span&gt;而理想的情况，根据相关度 rel 递减排序后计算 DCG：&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div class=&quot;wiz-table-container&quot;&gt;
&lt;div class=&quot;wiz-table-body&quot;&gt;
&lt;table width=&quot;615&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;URL&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;rel&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;&lt;span&gt;Gain(2&lt;/span&gt;&lt;sup&gt;&lt;span&gt;reli-&lt;/span&gt;&lt;/sup&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;IDCG（Max DCG）&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abc.go.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31=31×1&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td width=&quot;39&quot;&gt;&lt;span&gt;#3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot;&gt;&lt;span&gt;http://abcnews.go.com/sections/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot;&gt;&lt;span&gt;40.5=31+15×0.63&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://www.abc.net.au/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;48.0=40.5+15×0.5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abcnews.com/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;54.5=48.0+15×0.43&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot;&gt;&lt;span&gt;#7&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot;&gt;&lt;span&gt;http://abc.org/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot;&gt;&lt;span&gt;60.4=54.5+15×0.39&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;39&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#9&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span&gt;所以最终得出 NDCG 结果：&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div class=&quot;wiz-table-container&quot;&gt;
&lt;div class=&quot;wiz-table-body&quot;&gt;
&lt;table width=&quot;1083&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;URL&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;rel&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;&lt;span&gt;Gain(2&lt;/span&gt;&lt;sup&gt;&lt;span&gt;reli-&lt;/span&gt;&lt;/sup&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;Cumulative Gain&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;DCG&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;IDCG（Max DCG）&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;NDCG&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abc.go.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;31=31×1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;31=31×1&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;1=31/31&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://www.abctech.com&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;34=31+3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;32.9=31+3×0.63&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;40.5=31+15×0.63&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;0.81=32.9/40.5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#3&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abcnews.go.com/sections/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;49=31+3+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;40.4=32.9+15×0.50&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;48.0=40.5+15×0.5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;0.84=40.4/48.0&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://www.abc.net.au/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;64=31+3+15+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;46.9=40.4+15×0.43&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;54.5=48.0+15×0.43&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;0.86=46.9/54.5&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#5&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;http://abcnews.com/&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;79=31+3+15+15+15&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;52.7=46.9+15×0.39&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;60.4=54.5+15×0.39&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;0.87=52.7/60.4&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;37&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;#6&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;248&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;42&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;103&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;165&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;183&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;162&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;
&lt;td width=&quot;142&quot; align=&quot;left&quot; valign=&quot;middle&quot;&gt;&lt;br/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;四、ERR&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span&gt;1、RR（reciprocal rank）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;倒数排名，指检索结果中第一个相关文档的排名的倒数。&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233654171-1308937891.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;151&quot; height=&quot;77&quot; title=&quot;9d0fa1c3-5446-4161-9bbb-b88811ff9b36&quot; alt=&quot;9d0fa1c3-5446-4161-9bbb-b88811ff9b36&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233654476-33703257.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、MRR（mean reciprocal rank）&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;多个查询的倒数排名的均值，公式如下：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233654729-847316414.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;264&quot; height=&quot;92&quot; title=&quot;b9d4b10e-a0de-448d-8dd6-6962a57e7824&quot; alt=&quot;b9d4b10e-a0de-448d-8dd6-6962a57e7824&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233655006-1753595183.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;rank&lt;/span&gt;&lt;sub&gt;&lt;span&gt;i&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;表示第 i 个查询的第一个相关文档的排名。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;3、Cascade Model（瀑布模型）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击模型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;中的瀑布模型，考虑到在同一个检索结果列表中各文档之间的位置依赖关系，假设用户从上至下查看，如果遇到某一检索结果项满意并进行点击，则操作结束；否则跳过该项继续往后查看。第 i 个位置的文档项被点击的概率为：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233655268-282374562.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;234&quot; height=&quot;88&quot; title=&quot;48f5f9eb-dd78-4ad0-bb08-514712295384&quot; alt=&quot;48f5f9eb-dd78-4ad0-bb08-514712295384&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233655629-1596370064.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;其中 r&lt;/span&gt;&lt;sub&gt;&lt;span&gt;i&lt;/span&gt;&lt;/sub&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;表示第 i 个文档被点击的概率，前 i-1 个文档则没有被点击，概率均为 1-r&lt;/span&gt;&lt;sub&gt;&lt;span&gt;j&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;4、ERR（Expected reciprocal rank）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;预期的倒数排名，表示用户的需求被满足时停止的位置的倒数的期望，与 RR 计算第一个相关文档的位置倒数不同。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;首先用户在位置 r 处停止的概率 PP&lt;/span&gt;&lt;sub&gt;&lt;span&gt;r&lt;/span&gt;&lt;/sub&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;计算公式如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233655898-1839418406.jpg&quot;&gt;&lt;span&gt;&lt;img width=&quot;234&quot; height=&quot;79&quot; title=&quot;d9f84f88-933b-49dd-a6e2-0f470eb81386&quot; alt=&quot;d9f84f88-933b-49dd-a6e2-0f470eb81386&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233656219-217839556.jpg&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;其中 R&lt;/span&gt;&lt;sub&gt;&lt;span&gt;i&lt;/span&gt;&lt;/sub&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;是关于文档相关度等级的函数，现假设该函数为：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233656511-1920293571.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;469&quot; height=&quot;108&quot; title=&quot;3623a307-2760-4c02-806a-ea9ca4be5ceb&quot; alt=&quot;3623a307-2760-4c02-806a-ea9ca4be5ceb&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233656886-293149431.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;当文档是不相关的（g=0），则用户检索到相关文档的概率为0；而当文档极其相关（g=4，如果相关度划分5个等级）时，用户检索到相关文档的概率接近于1。上面公式中的 g 表示文档的相关度，参考 NDCG 中的 rel。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;更通用一点来讲，ERR 不一定是计算用户需求满足时停止的位置的倒数的期望，它可以是基于位置的函数&lt;/span&gt; &lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;?XML:NAMESPACE PREFIX = &quot;[default] http://www.w3.org/1998/Math/MathML&quot; NS = &quot;http://www.w3.org/1998/Math/MathML&quot; /??&gt;&lt;span&gt;φ(r&lt;/span&gt;&lt;span&gt;) ，只要满足 φ(0&lt;/span&gt;&lt;span&gt;)=1，且随着 r→&lt;span&gt;∞，&lt;/span&gt;φ(r&lt;/span&gt;&lt;span&gt;)→0。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span&gt;ERR 的计算公式如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233657253-1088965604.png&quot;&gt;&lt;span&gt;&lt;img width=&quot;627&quot; height=&quot;91&quot; title=&quot;29e3a765-0beb-4df5-beb1-010ac8a91b63&quot; alt=&quot;29e3a765-0beb-4df5-beb1-010ac8a91b63&quot; src=&quot;https://images2018.cnblogs.com/blog/335284/201803/335284-20180329233657574-1792360744.png&quot; border=&quot;0&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span&gt;&lt;span&gt;可以看出，当 φ(r&lt;/span&gt;&lt;span&gt;)=1/r 时就是 ERR，当 φ(r&lt;/span&gt;&lt;span&gt;)=1/log&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;(r+1) 就是DCG。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;参考链接：&lt;/span&gt;&lt;/h3&gt;







&lt;p&gt;by. Memento&lt;br class=&quot;Apple-interchange-newline&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 15:37:00 +0000</pubDate>
<dc:creator>Memento</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/memento/p/8673309.html</dc:identifier>
</item>
<item>
<title>drbd(一)：简介和安装 - 骏马金龙</title>
<link>http://www.cnblogs.com/f-ck-need-u/p/8673178.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/f-ck-need-u/p/8673178.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;a&gt;&lt;span&gt;本文目录：&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog1&quot;&gt;&lt;span&gt;1.drbd简介&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2&quot;&gt;&lt;span&gt;2.drbd工作原理和术语说明&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.1&quot;&gt;&lt;span&gt;2.1 drbd工作原理&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.2&quot;&gt;&lt;span&gt;2.2 drbd复制协议模型&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.3&quot;&gt;&lt;span&gt;2.3 drbd设备的概念&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.4&quot;&gt;&lt;span&gt;2.4 drbd资源角色&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.5&quot;&gt;&lt;span&gt;2.5 drbd工作模式&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog2.6&quot;&gt;&lt;span&gt;2.6 drbd分区说明&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog3&quot;&gt;&lt;span&gt;3.drbd部署实验&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog3.1&quot;&gt;&lt;span&gt;3.1 实验环境和部署前的准备&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog3.2&quot;&gt;&lt;span&gt;3.2 yum安装drbd&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html#blog3.3&quot;&gt;&lt;span&gt;3.3 编译安装drbd&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;drbd是&lt;strong&gt;通过网络(tcp连接)在不同服务器之间实现基于block级别进行数据实时同步的软件&lt;/strong&gt;&lt;/span&gt;。类似于inotify+rsync，只不过inotify+rsync是按文件级别来同步的，而drbd是工作在文件系统下层的，实现的是block同步和拷贝，效率相对较高。且inotify+rsync是通过监控事件来实现实时同步的，而drbd则跟普通写入磁盘的过程一样，只不过多了一条写入网卡的分支路线。&lt;/p&gt;
&lt;p&gt;如下图，此处只是简单的示意图。更具体的原理图见下文。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/733013/201803/733013-20180329152757292-1204044548.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;drbd只能在分区上、LVM逻辑卷上或整块磁盘上实现，不能在某一个目录上实现。&lt;/p&gt;
&lt;p&gt;drbd支持同步、半同步、异步三种数据同步的方式。&lt;/p&gt;
&lt;p&gt;drbd支持脑裂(brain split)通知和自动恢复。&lt;/p&gt;


&lt;p&gt;drbd的核心功能是通过Linux内核模块实现的。特别地，操作系统中的虚拟块设备(virtual block device)中有它的驱动，因此drbd几乎处于操作系统I/O堆栈的&quot;最底部&quot;。这使得它非常具有弹性，可以很容易地为服务提供高可用性。&lt;/p&gt;
&lt;p&gt;但注意，drbd处于文件系统之下的层次，不能实现文件系统层次的功能，例如检查文件是否损坏、为文件系统提供高可用等。但它是基于block的，可以做块设备检查、同步的完整性检查等。&lt;/p&gt;

&lt;h2 id=&quot;2-1-drbd-&quot;&gt;2.1 drbd工作原理&lt;/h2&gt;
&lt;p&gt;drbd实现基于块级别的数据同步，其实现方式是通过tcp连接来镜像整个设备。&lt;/p&gt;
&lt;p&gt;它有主备节点的概念。在主节点上，可以对drbd设备创建文件系统以供读取，甚至可以直接IO。在主节点写入的数据通过DRBD设备存储到主节点的磁盘设备中，同时，这个数据块也会通过网络传输到备节点对应的DRBD设备上，最终写入备用节点的磁盘设备上实现同步。在备用节点上，DRBD只是将数据从DRBD设备写入到备用节点的磁盘中，无法供外界读、写，之所以连读都提供，是为了维护缓存一致性(cache coherency)的问题。&lt;/p&gt;
&lt;p&gt;现在大部分的高可用集群都会使用共享存储，在实时同步以及数据一致性角度而言，drbd能代替共享存储。而且，drbd可以配合高可用软件，实现高可用服务的切换而不会数据丢失，因为备节点和主节点数据是实时同步的，这样给用户的体验是更好的，但却节约了成本，其性能与稳定性方面也不错。&lt;/p&gt;
&lt;p&gt;下图是drbd的原理图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/733013/201803/733013-20180329153010222-1008430710.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对于正常的文件系统，写入数据的流程：&lt;code&gt;buffer--&amp;gt;filesystem--&amp;gt; disk scheduler--&amp;gt;disk driver--&amp;gt;disk&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而使用drbd时，流程是上图中的红色箭头。在filesystem的下一层加上drbd层，该层将写入的数据通过drbd发送到tcp套接字的send缓存(send buffer)，再通过DMA的方式拷贝到网卡，由网卡发送到备节点。备节点的drbd设备从tcp套接字的recv缓存(recv buffer)中接收数据，然后从drbd设备读出数据并等待disk scheduler调度写入到磁盘中。&lt;/p&gt;
&lt;p&gt;如果不理解或者理解的不清晰，可先阅读：&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7623252.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;不可不知的socket和TCP连接过程&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;其中A/B/C是drbd复制的协议级别，如下&quot;drbd复制模型&quot;所述。&lt;/p&gt;

&lt;h2 id=&quot;2-2-drbd-&quot;&gt;2.2 drbd复制协议模型&lt;/h2&gt;
&lt;p&gt;上面drbd工作原理图中的A、B、C对应的是drbd的不同复制模型。复制模型指的是数据的写入执行到哪个过程就认为此次写操作已经完成。&lt;/p&gt;
&lt;p&gt;drbd有三种复制协议：同步、半同步、异步。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;A协议&lt;/code&gt;：异步复制(asynchronous)，如上图A标识，指的是&lt;span&gt;&lt;strong&gt;当数据写到本地磁盘上，并且复数据已经复制到tcp的send buffer缓冲区以后，此时就认为写入磁盘成功。&lt;/strong&gt;&lt;/span&gt;此复制协议性能好，但可能会丢失一些最近的数据。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;B协议&lt;/code&gt;：半同步复制(semi sync)，也称为内存复制，如上图B标识，指的是&lt;span&gt;&lt;strong&gt;数据已经写到本地磁盘上，并且已经被对方的tcp协议栈接收到(即写入到了对方的recv buffer中)，此时就认为此次写操作成功。&lt;/strong&gt;&lt;/span&gt;此复制协议性能较好，且只有当两节点都断电时才会丢失最近处于socket buffer中的数据。因此性能和数据可靠性介于协议A和C之间。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C协议&lt;/code&gt;：同步复制(sync)，如上图C标识，指的是&lt;span&gt;&lt;strong&gt;数据已经写入到本地磁盘，也已经写入到远程磁盘上，此时就认为此次写操作成功。&lt;/strong&gt;&lt;/span&gt;此复制协议性能较差，但数据可靠性高。&lt;/p&gt;
&lt;p&gt;C复制协议是drbd默认使用的协议。&lt;/p&gt;

&lt;h2 id=&quot;2-3-drbd-&quot;&gt;2.3 DRBD设备的概念&lt;/h2&gt;
&lt;p&gt;DRBD设备是操作系统中的一个虚拟块设备，在Linux上游内核中已经集成了DRBD的块设备模块和驱动。它的主设备号(major)为147，次设备号默认从0开始编号。&lt;/p&gt;
&lt;p&gt;在一组主机上,drbd设备的设备名称为/dev/drbdN，这个N通常和它的次设备号一致。&lt;/p&gt;
&lt;p&gt;DRBD需要构建在底层设备之上，然后构建出一个块设备出来。对于用户来说，一个DRBD设备，就像是一个分区，可以在上面创建文件系统。DRBD所支持的底层设备有以下这些类：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1、磁盘或磁盘的某一个分区；&lt;/li&gt;
&lt;li&gt;2、软 raid 设备；&lt;/li&gt;
&lt;li&gt;3、LVM的逻辑卷；&lt;/li&gt;
&lt;li&gt;4、EVMS(企业卷管理系统,Enterprise Volume Management System)；&lt;/li&gt;
&lt;li&gt;4、其他任何的块设备，甚至DRBD块设备自身也能成为另一个DRBD的底层设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-4-drbd-&quot;&gt;2.4 drbd资源角色&lt;/h2&gt;
&lt;p&gt;在drbd构造的集群中，资源具有角色的概念，分别为primary和secondary（主从的概念）。&lt;/p&gt;
&lt;p&gt;所有primary的资源将不受限制进行读写操作，可以创建文件系统，可以使用裸设备，可以直接io。而所有secondary的设备中不能挂载，不能读、写。&lt;/p&gt;

&lt;h2 id=&quot;2-5-drbd-&quot;&gt;2.5 drbd工作模式&lt;/h2&gt;
&lt;ol readability=&quot;2&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;主从模型master/slave（primary/secondary）&lt;/strong&gt;&lt;br/&gt;这种机制在某一时刻只允许有一个主节点。主节点的作用是可以挂载使用，写入数据等；从节点只是作为主节点的镜像，是主节点的备份，且是不可见的。&lt;br/&gt;这样的工作机制的好处是可以有效的避免磁盘出现单点故障，而且数据不会错乱。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;双主模型dula primary(primary/primary)&lt;/strong&gt;&lt;br/&gt;所谓双主模型是2个节点都可以当做主节点来挂载使用。但会导致数据错乱。当第一个主节点对某一文件正在执行写操作，此时另一个节点也正在对同一文件执行写操作，这种情况会造成数据错乱，从而导致数据不能正常使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;解决双主模型数据混乱的方案是：使用集群(分布式)文件系统，如gfs2。集群文件系统使用分布式文件锁管理器，当一个节点对文件加锁之后会通过某种机制来通知其他节点锁信息，从而实现文件锁共享。&lt;/p&gt;
&lt;p&gt;也可以将两节点的不同drbd设备分别设置主从，从而实现双主模型。例如服务器A上的a分区(主)和服务器B上的a分区（从），同时服务器A上的b分区(从)和服务器B上的b分区(主)。&lt;/p&gt;

&lt;h2 id=&quot;2-6-&quot;&gt;2.6 分区说明&lt;/h2&gt;
&lt;p&gt;drbd分为两种分区。其中一个分区是metadata区，用于存储元数据，给个1G就够了，2G就非常多了；另一种分区是数据区，这是drbd块设备的底层设备。因此，大多数情况下需要在drbd的两节点上创建两个分区，分别作为metadata区和data区。&lt;/p&gt;
&lt;p&gt;注意，metadata区也可以和数据区在同一分区，这时metadata区称为&quot;内部元数据区(Internal metadata)&quot;。&lt;/p&gt;
&lt;p&gt;关于分区有几点注意：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;数据区创建完成后不能挂载。&lt;/li&gt;
&lt;li&gt;metadata分区创建完成后不能格式化，也就是不能创建文件系统（要交给drbd来处理）。&lt;/li&gt;
&lt;li&gt;建议两边的数据分区大小给一样的，否则一端会浪费空间。如何解决此问题后文说明。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;绝大多数情况下，drbd都是两节点的，要么是主从工作模式(primary/secondary)，要么是结合集群文件系统的主主模式(primary/primary)。很少情况下，可以添加一个第三节点，作为backup角色。&lt;/p&gt;
&lt;p&gt;drbd节点最好部署在使用专门的网络环境下，节点之间可以使用直连模式、back-to-back模式或使用高速网卡。如果中间跨了交换机，建议加上Linux的网卡绑定功能(如不了解，请百度&quot;bonding驱动&quot;)。不建议drbd节点之间跨路由器，这会严重影响性能。&lt;/p&gt;
&lt;p&gt;drbd两节点之间的数据区应尽量差不多大小。&lt;/p&gt;

&lt;h2 id=&quot;3-1-&quot;&gt;3.1 实验环境以及安装前的准备&lt;/h2&gt;
&lt;p&gt;drbd的实验环境：&lt;br/&gt;A服务器上：&lt;br/&gt;　　管理IP：eth0 192.168.100.49&lt;br/&gt;　　数据同步IP：eth1 192.168.100.51&lt;br/&gt;B服务器上：&lt;br/&gt;　　管理IP：eth0 192.168.100.50&lt;br/&gt;　　数据同步IP：eth1 192.168.100.52&lt;/p&gt;
&lt;p&gt;操作系统均为CentOS 7.2，安装的drbd是8.4版。&lt;/p&gt;
&lt;ol readability=&quot;7&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;修改主机名。因为drbd是基于主机名解析的。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hostnamectl &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;-hostname drbd1.longshuai.com  &lt;span class=&quot;hljs-preprocessor&quot;&gt;# A服务器上配置&lt;/span&gt;
hostnamectl &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;-hostname drbd2.longshuai.com  &lt;span class=&quot;hljs-preprocessor&quot;&gt;# B服务器上配置&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;修改hosts文件。最好将主机名配置成数据同步专用通道eth1的地址。&lt;br/&gt;A/B服务器上都配置&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;192.168.100.51 node1.longshuai.com node1
192.168.100.52 node2.longshuai.com node2
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;添加主机路由。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-title&quot;&gt;route&lt;/span&gt; add -host &lt;span class=&quot;hljs-number&quot;&gt;192.168.100.52&lt;/span&gt; dev eth1  
route add -host &lt;span class=&quot;hljs-number&quot;&gt;192.168.100.51&lt;/span&gt; dev eth1  
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时间同步。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-title&quot;&gt;ntpdate&lt;/span&gt; ntp1.aliyun.com     
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;提供分区。&lt;br/&gt;分别在A/B服务器上添加一块硬盘，然后都分为两个区。注意，作为metadata的分区不要格式化，而用作data的分区格式化后不要挂载。&lt;br/&gt;此处实验分区为/dev/sdb1(metadata区)和/dev/sdb5(数据区)。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; /sys/class/scsi_host/*;&lt;span class=&quot;hljs-keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;- - -&quot;&lt;/span&gt; &amp;gt;&lt;span class=&quot;hljs-variable&quot;&gt;$i&lt;/span&gt;/scan;&lt;span class=&quot;hljs-keyword&quot;&gt;done&lt;/span&gt;


parted /dev/sdb mklabel msdos
parted /dev/sdb mkpart p &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;G
parted /dev/sdb &lt;span class=&quot;hljs-string&quot;&gt;&quot;mkpart e 1G -1&quot;&lt;/span&gt;
parted /dev/sdb mkpart l &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;G &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;G
fdisk /dev/sdb
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;3-2-yum-drbd&quot;&gt;3.2 yum安装drbd&lt;/h2&gt;
&lt;p&gt;drbd工具分为两部分：内核模块(kmod-drbd)和用户空间的管理工具(drbd-utils)，其中内核模块已经整合到了2.6.33版本及以后版本的上游内核中。如果早于这个版本，则需要安装和管理工具相同版本的模块。&lt;/p&gt;
&lt;p&gt;在elrepo源中，可以找到drbd的内核模块和管理工具。因此先配置elrepo源(此处配置清华大学镜像站的elrepo)。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cat /etc/yum.repos.d/elrepo.repo 

[elrepo]
&lt;span class=&quot;hljs-constant&quot;&gt;name&lt;/span&gt;=elrepo
&lt;span class=&quot;hljs-constant&quot;&gt;baseurl&lt;/span&gt;=https://mirrors.tuna.tsinghua.edu.cn/elrepo/archive/elrepo/el7/x86_64/
&lt;span class=&quot;hljs-constant&quot;&gt;enable&lt;/span&gt;=1
&lt;span class=&quot;hljs-constant&quot;&gt;gpgcheck&lt;/span&gt;=0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;再安装drbd84-utils和对应版本的模块kmod-drbd84。安装后装载drbd模块。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;yum -y &lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;install&lt;/span&gt; drbd84-utils kmod-drbd84

modprobe drbd&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果装载drbd模块时发现&quot;not found&quot;，说明没有安装&quot;kernel-devel&quot;，yum安装下后重启系统即可。&lt;/p&gt;
&lt;p&gt;看看drbd84-utils提供了哪些工具：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root&lt;span class=&quot;hljs-variable&quot;&gt;@node1&lt;/span&gt; ~]
/usr/sbin/drbd-overview   
/usr/sbin/drbdadm         
/usr/sbin/drbdmeta        
/usr/sbin/drbdmon         
/usr/sbin/drbdsetup       
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中drbdadm是主要管理工具，可以给其传递一些模块化的命令来调用其他的drbd工具。例如&lt;code&gt;drbdadm create-md&lt;/code&gt;将调用drbdmeta工具。&lt;/p&gt;
&lt;p&gt;此外，还提供了/etc/ha.d/resource.d/drbddisk脚本，用于结合heartbeat使用，该脚本用于标记节点块设备为primary角色并进行文件系统的挂载。&lt;/p&gt;

&lt;h2 id=&quot;3-3-drbd&quot;&gt;3.3 编译安装drbd&lt;/h2&gt;
&lt;p&gt;测试环境CentOS 6.6&lt;/p&gt;
&lt;p&gt;安装相关程序：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;yum -y &lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;install&lt;/span&gt; gcc make automake autoconf kernel-devel kernel-headers flex libxslt&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果发现更新了kernel版本，则需要重启系统。重启后需要重新配置路由，否则两端不能通信。&lt;/p&gt;
&lt;p&gt;下载drbd-utils：wget &lt;a href=&quot;http://www.drbd.org/download/drbd/utils/drbd-utils-8.9.10.tar.gz&quot;&gt;http://www.drbd.org/download/drbd/utils/drbd-utils-8.9.10.tar.gz&lt;/a&gt;&lt;br/&gt;下载drbd软件：wget &lt;a href=&quot;http://www.drbd.org/download/drbd/9.0/drbd-9.0.4-1.tar.gz&quot;&gt;http://www.drbd.org/download/drbd/9.0/drbd-9.0.4-1.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;ol readability=&quot;2&quot;&gt;&lt;li readability=&quot;1&quot;&gt;先安装drbd-utils再安装drbd
&lt;pre&gt;
&lt;code&gt;wget http://www.drbd.org/download/drbd/utils/drbd-utils-8.9.10.tar.gz
tar xf drbd-utils-8.9.10.tar.gz 
cd drbd-utils-8.9.10
./autogen.sh
./configure 
make KDIR=/usr/src/kernels/2.6.32-504.el6.x86_64/
make &lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;再安装drbd
&lt;pre&gt;
&lt;code&gt;tar xf drbd-&lt;span class=&quot;hljs-number&quot;&gt;9.0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.tar.gz
cd drbd-&lt;span class=&quot;hljs-number&quot;&gt;9.0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;
make &lt;span class=&quot;hljs-constant&quot;&gt;KDIR&lt;/span&gt;=&lt;span class=&quot;hljs-regexp&quot;&gt;/usr/src&lt;/span&gt;&lt;span class=&quot;hljs-regexp&quot;&gt;/kernels/&lt;/span&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.6&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;504&lt;/span&gt;.el6.x86_64/
make install
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;最后加载drbd模块
&lt;pre&gt;
&lt;code&gt;lsmod|&lt;span class=&quot;hljs-keyword&quot;&gt;grep&lt;/span&gt; drbd
modprobe drbd
lsmod|&lt;span class=&quot;hljs-keyword&quot;&gt;grep&lt;/span&gt; drbd
drbd                  &lt;span class=&quot;hljs-number&quot;&gt;500374&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; 
libcrc32c               &lt;span class=&quot;hljs-number&quot;&gt;1246&lt;/span&gt;  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; drbd,btrfs
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;由于重启模块不自动加载，可以在&lt;code&gt;/etc/sysconfig/modules/&lt;/code&gt;目录下新建一个*.modules文件，里面写入&lt;code&gt;modprobe drbd&lt;/code&gt;，或者在/etc/rc.modules文件(可能不存在)中追加此行。当然，放入到rc.local也是一样的。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7048359.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到Linux系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7048359.html&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7576137.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到网站架构系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7576137.html&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7586194.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到数据库系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7586194.html&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/8673178.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;转载请注明出处：http://www.cnblogs.com/f-ck-need-u/p/8673178.html&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;注：若您觉得这篇文章还不错请点击右下角推荐，您的支持能激发作者更大的写作热情，非常感谢！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 15:15:00 +0000</pubDate>
<dc:creator>骏马金龙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/f-ck-need-u/p/8673178.html</dc:identifier>
</item>
<item>
<title>ASP.NET没有魔法——ASP.NET MVC Razor与View渲染 - 7m鱼</title>
<link>http://www.cnblogs.com/selimsong/p/8670744.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/selimsong/p/8670744.html</guid>
<description>&lt;p&gt;　　对于Web应用来说，它的界面是由浏览器根据HTML代码及其引用的相关资源进行渲染后展示给用户的结果，换句话说Web应用的界面呈现工作是由浏览器完成的，&lt;span&gt;Web应用的原理是通过Http协议从服务器上获取到对应的Html代码以及相关资源，使得浏览器能够完成正确的呈现工作&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;　　ASP.NET MVC作为一个Web应用构建框架View承担了UI显示的功能，在开发过程中View以Action的名称命名，当用户的请求被路由到某一Action方法时，ASP.NET MVC将会根据Action的名称来获取到对应的View文件，将该View文件动态处理后生成最终的Html内容，将内容返回到浏览器进行显示。所以&lt;span&gt;ASP.NET的渲染实际上指的是动态的生成Html代码的过程&lt;/span&gt;。&lt;br/&gt;　　而ASP.NET MVC中action的代码可以简单如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329144505497-1446560647.png&quot; alt=&quot;&quot;/&gt;　&lt;/p&gt;
&lt;p&gt;　　仅需要调用一个View方法就可以将Index这个View显示到用户的浏览器上，那么View方法到底做了什么处理？Razor是什么？Action方法的返回值ActionResult又是什么？&lt;br/&gt;　　本文将从以下几个方面来介绍ASP.NET MVC Html代码的生成过程：&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#actionresult&quot;&gt;ActionResult及ViewResult&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#findview&quot;&gt;View的查找与Razor&lt;/a&gt;&lt;br/&gt;　　　　○ &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#viewengine&quot;&gt;ViewEngineCollection&amp;amp;ViewEngine&lt;/a&gt;&lt;br/&gt;　　　　○ &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#viewengineresult&quot;&gt;ViewEngineResult&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#viewcompiled&quot;&gt;View的编译与激活&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#viewrender&quot;&gt;View的渲染&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#viewdemo&quot;&gt;使用示例代码演示View的渲染过程&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#htmlhelper&quot;&gt;View的Html Helper与ModelMetadata&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#moreresult&quot;&gt;常用的ActionResult&lt;/a&gt;&lt;br/&gt;　　● &lt;a href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html#summary&quot;&gt;小结&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;ActionResult及ViewResult&lt;/h2&gt;
&lt;p&gt;　　在之前的文章《ASP.NET没有魔法——ASP.NET MVC 过滤器(Filter)》中提到过，Action方法是由ActionInvoker完成执行的，Action返回的结果是一个ActionResult类型，Action执行后ActionInvoker又调用了ActionResult的ExecuteResult方法完成特定的操作，相关代码如下所示：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329144828010-1166195013.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329144841214-2018237195.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　ActionResult的定义如下，它包含了一个名为ExecuteResult的方法，该方法用来完成对action方法执行结果进行处理：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329145317594-4107320.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　回到最初提到的View()方法，该方法定义在Controller中，它的返回值是一个ViewResult类型：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329145537111-1253533339.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　可以这么说，当Action执行完成后，ASP.NET MVC的&lt;strong&gt;&lt;span&gt;View渲染工作是由ViewResult在ExecuteResult方法中完成的&lt;/span&gt;&lt;/strong&gt;，ViewResult的ExecuteResult实现代码如下(&lt;span&gt;注：该代码在ViewResult的基类ViewResultBase中实现&lt;/span&gt;)：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329150018357-475158461.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从代码中可以容易的看出，ASP.NET MVC中View的渲染工作主要有四步：&lt;br/&gt;　　1. 如果没有指定View的名称，那么默认以Action的名称为View名称。&lt;br/&gt;　　2. 根据控制器的上下文查找并获得真实的View对象。&lt;br/&gt;　　3. 调用View对象的Render方法将View的内容写到HttpContext的响应信息中，后续将其返回至浏览器。&lt;br/&gt;　　4. 释放View对象。&lt;/p&gt;
&lt;p&gt;　　根据上面的分析View渲染的两个重要步骤就是View对象的&lt;strong&gt;&lt;span&gt;查找&lt;/span&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;span&gt;渲染&lt;/span&gt;&lt;/strong&gt;，其整个过程可参考下图，详细内容将在后续介绍：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329172352760-1808655103.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;View的查找与Razor&lt;/h2&gt;
&lt;p&gt;　　在ASP.NET MVC中View文件一般放置在项目根目录的Views目录下，以Controller名称为子目录，每一个子目录下保存了以action方法名称命名的View文件：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329152244734-463264037.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　ViewResult类型中查找View的代码如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329152952714-1234046494.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从代码可以看出它是通过一个ViewEngineCollection对象，根据ViewName（默认是actionName）去查找View的，如果找到返回一个ViewEngineResult类型，否则将抛出异常，异常中包含查找的位置：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329153107077-1997978555.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;注：从上面的错误信息中可以看到ASP.NET MVC在查找View时，除了匹配了.cshtml和.vbhtml的文件外，还匹配了.aspx和.ascx的文件，后者是Web Form框架的页面文件，这是为什么呢？因为默认情况下ASP.NET MVC中会包含MVC使用的Razor 引擎和Web Form使用的Web Form引擎，所以在纯使用MVC开发的情况下，&lt;strong&gt;为了优化性能&lt;/strong&gt;，一般会通过以下代码将Web Form的引擎删除：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329171719306-428819317.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;更多View引擎的内容后续介绍。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;ViewEngineCollection&amp;amp;ViewEngine&lt;/h3&gt;
&lt;p&gt;　　在ASP.NET中有一个IViewEngine的接口，它定义了查找和释放View，其定义如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329153215554-1044568484.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　而ASP.NET中实现IViewEngine接口的类型关系如下图：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329153243202-1814045667.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从该图中可以得到一下信息：&lt;br/&gt;　　● ASP.NET中有两个最终实现的ViewEngine，分别是Razor和WebForm，MVC应用中使用Razor实现View的渲染。&lt;br/&gt;　　● 它们的基类都是VirtualPathProviderViewEngine，就是说它们都是基于相对路径来管理View的。&lt;br/&gt;　　● 它们的基类都是BuildManagerViewEngine，表面它们都和编译有关(&lt;span&gt;注：在ASP.NET中无论是WebForm还是MVC，都可以在页面上编写代码，而这些代码肯定是不能被浏览器理解的，需要经过编译才能够正常工作&lt;/span&gt;)。&lt;/p&gt;
&lt;p&gt;　　ASP.NET中的ViewEngine被一个名为ViewEngines的集合进行管理，如下图：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329154347598-900293092.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　MVC中主要使用的是RazorViewEngine，下图是RazorViewEngine的部分代码：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329154606667-73048216.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从代码中可以看到两个重要信息，第一是&lt;strong&gt;&lt;span&gt;“_ViewStart”被硬编码为启动页面&lt;/span&gt;&lt;/strong&gt;，这也是为什么在该页面指定布局的原因，另外&lt;strong&gt;&lt;span&gt;在其构造方法中硬编码了各种LocationFormats，它们指定了相应类型页面的搜索路径&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　那么上面提到的Razor又是什么呢?&lt;strong&gt;Razor是ASP.NET的一种可以将服务器代码嵌入到网页中的标记语言，它由Razor标记、服务器代码(C#/VB)以及Html代码组成&lt;/strong&gt;。在Html中以@符号开始的内容将会被识别为服务器代码，而Razor将识别这些代码将其渲染为Html代码。更多关于Razor的内容可参考：&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;ViewEngineResult&lt;/h3&gt;
&lt;p&gt;　　ViewEngineResult是ViewEngine对View查找后结果的封装，其定义如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162157495-40366445.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　它包含了查找后的结果IView类型以及用于查找的ViewEngine本身，另外还有一个字符串列表用来保存查找该View所遍历过的路径。&lt;br/&gt;　　下面是RazorViewEngine用来查找和创建RazorView对象的主要代码，其核心实际就是根据action名称和Controller名称与相应的LocationFormats匹配后查找文件是否存在，如果存在则创建IView实例的过程：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162347734-1804871852.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　而这里的IView类型就是RazorView：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162424571-198475675.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;View的编译与激活&lt;/h2&gt;
&lt;p&gt;　　上面介绍了ViewEngine用来查找并获取相应IView对象，那IView是用来做什么的呢？下图是IView的接口定义，它只有一个Render方法，用来将指定的View上下文信息通过指定的TextWriter进行渲染，这实际上就是将View文件的内容处理后，写到Http响应数据的过程：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162459105-1329576207.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　ASP.NET中实现IView的类结构如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162518393-750741143.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　同样的有两种View分别对象Razor和WebForm，而它们的基类都是BuildManagerCompiledView(被BuildManager编译后的View)，而且Render方法也是在基类中实现的，具体代码如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162615936-305197795.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　RenderView方法实现在对应的子类中，下图为RazorView的RenderView方法：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162642286-1410008542.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　上面代码的核心在于：&lt;br/&gt;　　1. 通过BuildManager根据View文件的路径对View文件进行编译，并获得编译后的类型(注：BuildManager是ASP.NET中用于对程序集、页面进行编译的工具)。&lt;br/&gt;　　2. 通过激活器创建View编译后的类型，下图是默认使用的激活器，其核心是通过依赖解析器或者Activator来直接创建类型实例。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162729073-1401415832.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　3. 实例化后的对象是一个WebViewPage类型，通过对WebViewPage初始化后(包含起始页的查找)调用WebViewPage的ExecutePageHierarchy方法完成渲染。&lt;/p&gt;
&lt;p&gt;　　注：WebViewPage是Razor对应的页面类型，WebForm对应的是ViewPage和ViewUserControl。&lt;/p&gt;
&lt;h2&gt;View的渲染&lt;/h2&gt;
&lt;p&gt;　　上面提到View文件编译后是一个WebViewPage对象，而View的渲染也是由该对象完成的，那么WebViewPage是什么？下图是WebViewPage的定义：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162825558-1549464309.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从中可以看到一些重要的属性如Html、Ajax、Url等这些可以在View里面使用的，有用来生成Html、Url、Ajax的帮助类型，也有如携带了数据用于绑定到View上的Model、TempData、ViewBag、ViewData等类型。&lt;br/&gt;　　另外WebViewPage继承至WebPageBase：&lt;/p&gt;
&lt;p&gt; 　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162914804-635161436.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　WebPageBase类型里面定义了RenderBody、RenderSection等方法。&lt;br/&gt;　　了解了WebPage与WebPageBase之后有没有感觉&lt;span&gt;View文件实际上是WebPage的一个子类型&lt;/span&gt;，在&lt;span&gt;View中可以随意使用和调用WebPage和WebPageBase中的属性和方法&lt;/span&gt;。&lt;br/&gt;　　下图是对Contact.cshtml文件编译后的代码：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329162943503-747374091.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从代码中证明了之前的猜想，View文件编译后确实是WebViewPage的子类型，而该类型中的Execute方法是将Html代码以字符串的形式进行了拼接，拼接过程中如果遇到特殊方法的调用则拼接特殊方法的返回值：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329163009358-804784937.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329163018718-478049176.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　以上代码来自布局文件的编译结果。&lt;br/&gt;　　而Execute方法也就是最终ASP.NET MVC进行View渲染的实际方法。WebViewPage的ExecutePageHierarchy是因为MVC中页面可能依赖多个View，如默认情况下页面有StartPage中指定的布局View和内容View，为了&lt;strong&gt;&lt;span&gt;保证渲染内容顺序不变&lt;/span&gt;&lt;/strong&gt;ExecutePageHierarchy方法中引入了栈机制(后进先出)。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329163050981-1782850911.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;注：BuildManager编译的View结果默认路径为&quot;%WinDir\Microsoft.NET\Framework\ {Version No}\Temporary ASPNET Files&quot;目录下，以App_Web_开头的程序集中，程序集的名称是根据路径随机生成的。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;使用示例代码演示View的渲染过程&lt;/h2&gt;
&lt;p&gt;　　下面就用代码的方式来演示View的查找、编译、激活以及渲染的全过程：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329163259532-1652515296.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　全量代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('940125bc-ccf8-4f0c-b6b5-7d6067c8b9a7')&quot; readability=&quot;43.5&quot;&gt;&lt;img id=&quot;code_img_closed_940125bc-ccf8-4f0c-b6b5-7d6067c8b9a7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_940125bc-ccf8-4f0c-b6b5-7d6067c8b9a7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('940125bc-ccf8-4f0c-b6b5-7d6067c8b9a7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_940125bc-ccf8-4f0c-b6b5-7d6067c8b9a7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;82&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.IO;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Web;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Web.Compilation;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Web.Mvc;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Web.WebPages;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; My_Blog.Controllers
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ViewRenderController : Controller
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; GET: ViewRender&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Index()
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; path = &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; viewEngineResult = &lt;span&gt;this&lt;/span&gt;.FindView(&lt;span&gt;out&lt;/span&gt; path);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;查找View&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;             Render(viewEngineResult, path);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;渲染View&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;View的查找，相当于RazorViewEngine&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; ViewEngineResult FindView(&lt;span&gt;out&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; path)
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; actionName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Contact&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; controllerName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Home&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; viewLocationFormat = &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据Controller和Action名称与地址模板组成View相对路径&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;             path = &lt;span&gt;string&lt;/span&gt;&lt;span&gt;.Format(viewLocationFormat, actionName, controllerName);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据文件路径创建RazorView和ViewEngineResult&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; view = &lt;span&gt;new&lt;/span&gt; RazorView(&lt;span&gt;this&lt;/span&gt;.ControllerContext, path, &lt;span&gt;&quot;&quot;&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ViewEngineResult(view, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RazorViewEngine());
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;View的渲染&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Render(ViewEngineResult viewEngineResult,&lt;span&gt;string&lt;/span&gt;&lt;span&gt; path)
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;             Type pageType = BuildManager.GetCompiledType(path);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据对View文件进行编译&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; pageInstance = Activator.CreateInstance(pageType);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建View文件编译后类型实例&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; webViewPage = &lt;span&gt;this&lt;/span&gt;.InitViewPage(pageInstance, viewEngineResult, path);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;对实例中相关属性进行初始化&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;             webViewPage.ExecutePageHierarchy(&lt;span&gt;//&lt;/span&gt;&lt;span&gt;完成View的渲染&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt; WebPageContext(&lt;span&gt;this&lt;/span&gt;.HttpContext, &lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                 &lt;span&gt;this&lt;/span&gt;.HttpContext.Response.Output, &lt;span&gt;null&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;startpage设置为null，将不会渲染布局页面&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; WebViewPage InitViewPage(&lt;span&gt;object&lt;/span&gt; instance, ViewEngineResult viewEngineResult, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; path)
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;             WebViewPage webViewPage = instance &lt;span&gt;as&lt;/span&gt;&lt;span&gt; WebViewPage;
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (webViewPage == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; InvalidOperationException(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;无效&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;             ViewContext viewContext = &lt;span&gt;new&lt;/span&gt; ViewContext(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.ControllerContext,
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;                viewEngineResult.View, 
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;                 &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.ViewData, 
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;                 &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.TempData, 
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;                 &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.HttpContext.Response.Output);
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;             webViewPage.VirtualPath =&lt;span&gt; path;
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;             webViewPage.ViewContext =&lt;span&gt; viewContext;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;             webViewPage.ViewData =&lt;span&gt; viewContext.ViewData;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;            webViewPage.InitHelpers();
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; webViewPage;
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　上面的代码要点如下：&lt;br/&gt;　　● FindView方法实际上代表的就是RazorViewEngine，它根据硬编码的View文件搜索模板结合Controller和Action的名称获得View文件的全路径，并创建RazorView和ViewEngineResult对象。&lt;br/&gt;　　● Render则代表了View的编译、激活以及渲染过程。&lt;/p&gt;
&lt;p&gt; 　　运行结果(由于没有布局页面，所以相关的样式和JS都没有被引入)：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329163648919-1074870631.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;View的Html Helper与ModelMetadata&lt;/h2&gt;
&lt;p&gt;　　在ASP.NET MVC的View中可以通过一些Helper类型来生成HTML代码，下图为用户注册页面的View代码：&lt;/p&gt;
&lt;p&gt; 　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329164047126-1512334777.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从代码中可以看到ASP.NET MVC并不是完全使用Html来构成页面的，中间有一些通过Html属性（注：Html是WebViewPage类型中的HtmlHelper类型的实例）调用的方法，从方法的名称来看这些方法分别用于生成如数据验证信息、Label标签、文本框以及密码类型文本框等HTML代码。&lt;br/&gt;　　ASP.NET MVC提供了一系列的Helper类及其拓展方法，这些Helper类中封装了针对HTML、Ajax（ASP.NET MVC中Ajax Helper的用法可参考：&lt;a href=&quot;https://www.c-sharpcorner.com/article/Asp-Net-mvc-ajax-helper/&quot; target=&quot;_blank&quot;&gt;https://www.c-sharpcorner.com/article/Asp-Net-mvc-ajax-helper/&lt;/a&gt;）等相关内容的实现，ASP.NET MVC对Html拓展可以分为以下四类：&lt;br/&gt;　　1. 用于生成特定标签的拓展，如Form、Input、Label、TextArea、Select等拓展。&lt;br/&gt;　　使用方式如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329164217611-479125341.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　将常用的HTML标签进行封装，对于不熟悉Html的开发人员来说ASP.NET MVC提供了一种面向对象编程的方式来对页面进行开发，更重要的是Html方法可以与模型关联，当模型的元数据中有相应的验证特性并且开启了客户端验证时，在渲染标签时会包含相应的验证信息，使用&lt;span&gt;这类标签最大的好处就是可以将关注点全部放在模型上，当模型发生变化时View上不需要做任何的修改&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;　　2. 用于生成Model验证信息的拓展。&lt;br/&gt;　　使用方式如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329164705782-1961879341.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　ASP.NET MVC中提供了模型验证的机制，当模型验证失败时会有相应的失败信息，而该拓展就是对这些错误信息进行渲染，大大的减少了输出验证信息的工作量。&lt;/p&gt;
&lt;p&gt;　　3. 根据用途“展示/编辑”生成标签的Display以及Editor拓展。&lt;br/&gt;　　使用方式如下(注：DisplayFor是用于显示指定模型属性中的值，如果要显示对应模型属性的名称可用DisplayNameFor)：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329165038383-1602549393.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　Display与Editor是根据模型的数据类型来判断如何对模型进行展示。ASP.NET MVC中为Display和Editor提供了一些基础类型的默认模板实现分别通过内部静态类型DefaultEditorTemplates和DefaultDisplayTemplates进行存储，下面是bool类型模板代码：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329165059105-57322413.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329165108573-395269398.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　在提供默认模板的同时ASP.NET MVC也提供了自定义模板的机制，可以分别使用DisplayAttribute与UIHintAttribute对特定属性指定渲染模板，如何自定义Display和Editor模板可参考：&lt;a href=&quot;http://www.growingwiththeweb.com/2012/12/aspnet-mvc-display-and-editor-templates.html&quot; target=&quot;_blank&quot;&gt;http://www.growingwiththeweb.com/2012/12/aspnet-mvc-display-and-editor-templates.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　4. Partial拓展。&lt;br/&gt;　　使用方法(注：第一个参数是Partial View的名称，默认情况下Partial View文件存储于Views/Shared目录下，如果文件不在这个目录下需要在参数中体现具体目录)：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329165150250-1039824775.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　Partial是ASP.NET MVC中用于将可重用Html进行分离的机制，并且Partial是可以访问数据的，就是说通过parital分离的Html代码，可以根据传入的数据来动态生成Html代码，更多关于Partial View的内容可参考.Net Core的文档：&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/partial&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/partial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　5. Child Action拓展。&lt;br/&gt;　　使用方法：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/640251/201803/640251-20180329165218407-643369753.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　Child Action类似于Partial View，它也是将可重用的部分进行分离，但Partial View更侧重于关注Html代码重用，Child Action还包含了后端逻辑的重用。如购物网站的购物车，它可能出现在任意的页面中，但首页的逻辑、模型与购物车就可能没有任何关系，此时就可以使用Child Action。&lt;/p&gt;
&lt;h2&gt;常用的ActionResult&lt;/h2&gt;
&lt;p&gt;　　前面提到过ASP.NET MVC的页面渲染工作实际上是由一个继承至ActionResult的ViewResult对象完成的，ActionResult实际上是ASP.NET MVC中的一个抽象，代表了所有逻辑执行后的结果，而ViewResult是将结果面向人的，所以返回了Html让浏览器显示给人看，除了ViewResult之外还有一些常用的ActionResult如下：&lt;br/&gt;　　● ContentResult：用于将字符串返回到客户端，在Action方法中调用Content方法返回。&lt;br/&gt;　　● FileStreamResult：用于将文件返回到客户端，在Action方法中调用File方法(有多个重载)返回。&lt;br/&gt;　　● HttpNotFoundResult：用于返回HTTP未找到状态，在Action方法中调用HttpNotFound方法返回。&lt;br/&gt;　　● JavaScriptResult：用于将JavaScript返回到客户端并执行，在Action方法中调用JavaScript方法返回。&lt;br/&gt;　　● JsonResult：用于将Json数据返回到客户端，在Action方法中调用Json方法返回。&lt;br/&gt;　　● PartialViewResult：用于渲染partial页面，在Action方法中调用PartialView方法返回。&lt;br/&gt;　　● RedirectResult：用于重定向，在Action方法中调用Redirect方法传入需要重定向的Url进行重定向操作。&lt;br/&gt;　　● RedirectToRouteResult：用于路由重定向，在Action方法中调用RedirectToAction方法重定向到指定的Action。&lt;br/&gt;　　● EmptyResult：返回空，在Action方法中返回Null或将Action方法的返回值设为Void即可。&lt;/p&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;　　本文介绍了ASP.NET MVC如何在Action方法执行时通过对ActionResult(ViewResult)的执行完成View文件的查找、编译以及渲染的过程，除了ViewResult之外ASP.NET MVC还提供了其它类型的ActionResult如Json、File等，使用这些结果可以创建简单的Web API以及文件下载等功能，另外MVC通过Html Helper类型对View进行了拓展，在开发View时可以最大程度的对View的Html代码和逻辑进行重用，同时也将View与Model(特指ViewModel)进行关联，在开发时可以将关注点放在Model上，无需担心Model修改后View代码的修改。合理的使用View提供的相关机制，可以极大的减少工作量同时也可以让代码变得更加简洁。&lt;/p&gt;
&lt;p&gt;参考：&lt;br/&gt;　　&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29418126&quot; target=&quot;_blank&quot;&gt;https://zhuanlan.zhihu.com/p/29418126&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;https://www.codeproject.com/Articles/787320/An-Absolute-Beginners-Tutorial-on-HTML-Helpers-and&quot; target=&quot;_blank&quot;&gt;https://www.codeproject.com/Articles/787320/An-Absolute-Beginners-Tutorial-on-HTML-Helpers-and&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;https://www.c-sharpcorner.com/article/Asp-Net-mvc-ajax-helper/&quot; target=&quot;_blank&quot;&gt;https://www.c-sharpcorner.com/article/Asp-Net-mvc-ajax-helper/&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;http://www.growingwiththeweb.com/2012/12/aspnet-mvc-display-and-editor-templates.html&quot; target=&quot;_blank&quot;&gt;http://www.growingwiththeweb.com/2012/12/aspnet-mvc-display-and-editor-templates.html&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;https://stackoverflow.com/questions/5037580/asp-net-mvc-3-partial-vs-display-template-vs-editor-template&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/5037580/asp-net-mvc-3-partial-vs-display-template-vs-editor-template&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;https://weblogs.asp.net/scottgu/introducing-razor&quot; target=&quot;_blank&quot;&gt;https://weblogs.asp.net/scottgu/introducing-razor&lt;/a&gt;&lt;br/&gt;　　&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor&quot; target=&quot;_blank&quot;&gt;https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 本文链接：&lt;a id=&quot;Editor_Edit_hlEntryLink&quot; title=&quot;view: ASP.NET没有魔法——ASP.NET MVC View渲染及Razor&quot; href=&quot;http://www.cnblogs.com/selimsong/p/8670744.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/selimsong/p/8670744.html&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;post_title_link_7641799&quot; href=&quot;http://www.cnblogs.com/selimsong/p/7641799.html&quot;&gt;ASP.NET没有魔法——目录&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 15:10:00 +0000</pubDate>
<dc:creator>7m鱼</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/selimsong/p/8670744.html</dc:identifier>
</item>
<item>
<title>走进webpack（2）--第三方框架（类库）的引入及抽离 - Zaking</title>
<link>http://www.cnblogs.com/zaking/p/8656625.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zaking/p/8656625.html</guid>
<description>&lt;p&gt;　　正文之前，由于这是一个系列的文章，可能第一次看到的看官老爷们会觉得突兀，如果你是webpack新手，我建议你先从前几篇文章看起，如果你对webpack有一些了解，也希望可以在&lt;a href=&quot;https://github.com/ZakingQ/structure-demo/tree/master/webpackSeniorDemo&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;上下载代码，对照着看会更有效果&lt;/p&gt;
&lt;p&gt;　　在当代的前端开发中，很少会用原生JS来开发页面，最基本的都会使用jQuery来节省我们开发的时间和效率，而angular，vue，react的出现更是为前端开发者带来了福音。那么这篇文章就说说如何用webpack来打包引入第三方框架（类库）。如果单纯的引入jQuery或者其他第三方类库，在打包的时候webpack会把它一起打包进我们的main.js，也就说，如果我们引入两三个框架，两三个UI库，那么我们的集成包会很大，页面的加载时间也会很长，这是我们不愿见到的结果。所以在学会引入的同时，还要知道如何把第三方类库从我们的业务逻辑包中抽离出来。&lt;/p&gt;
&lt;p&gt;　　那么我们先来安装一下jQuery，因为在生产环境我们仍旧是需要jQuery作为依赖的，所以我们需要用npm install jquery --save来安装它。安装完成之后，我们在main.js中增加两行代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;引入jQuery&lt;/span&gt;
import $ from 'jquery'&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;编写jQuery代码&lt;/span&gt;
$('#jqueryDiv').html('Hello Zaking,jQuery is useful');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　我们还需要在index.html中增加一个div容器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; jQuery代码容器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;jqueryDiv&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后，我们npm run dev看一下，会发现页面中已经有jQuery代码所生成的文字，说明我们引入jQuery成功了。你可以在每一个需要jQuery的页面这样引入。但是这样会很麻烦，我们如果通过这样的方式引入了jQuery，但是整个项目中却并没有写一行jQuery代码，那么webpack也是会把它打包进去的。而且每一个需要jQuery的页面都需要引入的话好麻烦，那么我们可以使用ProvidePlugin来实现一次引入全局使用，而且通过插件的方式来引入第三方类库，如果你不使用它的话，webpack就不会打包它，还不错吧。由于ProvidePlugin是webpack自带的插件，我们不需要引入他，但是需要引入一下webpack：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;引入webpack&lt;/span&gt;
const webpack = require('webpack');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　我们还需要在入口文件引入jQuery，还记得前面模块化的时候把入口文件单独拆分成了一个entry.js，所以我们在其中增加一点代码，现在看起来应该是这样的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
entry.path=&lt;span&gt;{
    main:&lt;/span&gt;'./src/main.js'&lt;span&gt;,
    jquery:&lt;/span&gt;'jquery'&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　然后我们在plugins项下配置一下这个插件，就像这样：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建一个webpack下的ProvidePlugin插件的实例，使全局都可以使用jQuery&lt;/span&gt;
&lt;span&gt;new&lt;/span&gt;&lt;span&gt; webpack.ProvidePlugin({
   $:&lt;/span&gt;&quot;jquery&quot;&lt;span&gt;
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这样就可以了，但是别忘了把main.js中通过import引入的jQuery代码删除，然后再npm run dev试一下。会发现也同样出现了jQuery生成的文字。&lt;/p&gt;
&lt;p&gt;　　那么下面我们就学习一下，如何抽离第三方类库，使其存储在一个单独的文件夹下，在webpack3时代，通常是使用CommonsChunkPlugin，CommonsChunkPlugin也是webpack自带的插件。官方文档是这样解释他的：&lt;strong&gt;&lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 插件，是一个可选的用于建立一个独立文件(又称作 chunk)的功能，这个文件包括多个入口&lt;code&gt;chunk&lt;/code&gt; 的公共模块。通过将公共模块拆出来，最终合成的文件能够在最开始的时候加载一次，便存到缓存中供后续使用。这个带来速度上的提升，因为浏览器会迅速将公共的代码从缓存中取出来，而不是每次访问一个新页面时，再去加载一个更大的文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　简单来说，就是将公共模块拆分出来以便使浏览器加载速度更快。但是在webpack4时代，已经取消了这个插件取而代之的是&lt;/strong&gt;splitChunks 和runtimeChunk ，那么我们就来看一下，在webpack4的环境下，如何抽离多个第三方类库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;我们先来安装一下vue，跟jQuery的安装方式一样，就不多说了，同样的我们也需要在入口文件处引入vue：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
entry.path=&lt;span&gt;{
    main:&lt;/span&gt;'./src/main.js'&lt;span&gt;,
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;引入jQuery和vue&lt;/span&gt;
    jquery:'jquery'&lt;span&gt;,
    vue:&lt;/span&gt;&quot;vue&quot;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后再ProvidePlugin中加入vue这个选项：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;new&lt;/span&gt;&lt;span&gt; webpack.ProvidePlugin({
        $:&lt;/span&gt;&quot;jquery&quot;&lt;span&gt;,
        vue:&lt;/span&gt;&quot;vue&quot;&lt;span&gt;
    })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后我们在plugins中增加一个配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;new&lt;/span&gt;&lt;span&gt; webpack.optimize.SplitChunksPlugin({
      chunks: &lt;/span&gt;&quot;all&quot;&lt;span&gt;,
      minSize: &lt;/span&gt;20000&lt;span&gt;,
      minChunks: &lt;/span&gt;1&lt;span&gt;,
      maxAsyncRequests: &lt;/span&gt;5&lt;span&gt;,
      maxInitialRequests: &lt;/span&gt;3&lt;span&gt;,
      name: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
  })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后我们npm run build一下，会发现在dist的根目录下已经生成了vue.js和jQuery.js。说明我们打包成功了。那么我们想要测试一下，vue究竟能用了么？&lt;/p&gt;
&lt;p&gt;　　我们在main.js中引入vue，并且加上vue官网例子中最简单的一个：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
import Vue from 'vue'
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;vue代码&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; app = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Vue({
  el: &lt;/span&gt;'#vueApp'&lt;span&gt;,
  data: {
    message: &lt;/span&gt;'Hello Vue!'&lt;span&gt;
  }
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后，我们在index.html创建一个div容器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; vue容器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;vueApp&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
  {{message}}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后我们试一下npm run dev，页面打开之后我们发现没有hello vue，f12看下控制台，发现报错了。不出意外的话，你的报错信息是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1184971/201803/1184971-20180328234308087-1099576013.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　什么意思呢，官方解释是：运行时构建不包含模板编译器，因此不支持 template 选项，只能用 render 选项，但即使使用运行时构建，在单文件组件中也依然可以写模板，因为单文件组件的模板会在构建时预编译为 render 函数。就是说，&lt;strong&gt;如果我们想使用template，我们不能直接在客户端使用npm install之后的vue&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　那么我们需要新增一点配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;resolve: {
   alias: {
     &lt;/span&gt;'vue$': 'vue/dist/vue.esm.js'&lt;span&gt;
  }
}
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;resolve是在最外层的，与plugins等同级&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这样就可以了，然后运行一下，会发现Hello Vue已经出现在我们的页面之中了。这两天一直加班，所以更新的有点慢，这个系列的文章还有最后一篇，尽量在这两天就可以完成。&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 14:33:00 +0000</pubDate>
<dc:creator>Zaking</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zaking/p/8656625.html</dc:identifier>
</item>
<item>
<title>Java编程配置思路详解 - ITDragon龙</title>
<link>http://www.cnblogs.com/itdragon/p/8658946.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/itdragon/p/8658946.html</guid>
<description>&lt;p&gt;SpringBoot虽然提供了很多优秀的starter帮助我们快速开发，可实际生产环境的特殊性，我们依然需要对默认整合配置做自定义操作，提高程序的可控性，虽然你配的不一定比官方提供的starter好。上周因为工作和装修的事情，导致博客没有正常更新，害怕停更会让人懒惰起来，挤了一点时间写了一篇内容比较简单的文章。后面闲谈一下我是如何从装修小白到入门的经历。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;技术&lt;/strong&gt;：Configuration，ComponentScan，PropertySource，EnableTransactionManagement，Bean，Value&lt;br/&gt;&lt;strong&gt;说明&lt;/strong&gt;：文中只贴出了配置代码，完整的测试代码在github上。&lt;br/&gt;&lt;strong&gt;源码&lt;/strong&gt;：&lt;a href=&quot;https://github.com/ITDragonBlog/daydayup/tree/master/Spring/itdragon-spring-anno&quot; class=&quot;uri&quot;&gt;https://github.com/ITDragonBlog/daydayup/tree/master/Spring/itdragon-spring-anno&lt;/a&gt;&lt;br/&gt;文章目录结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/806956/201803/806956-20180329221202054-169494814.png&quot; alt=&quot;文章目录结构&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;一java编程配置&quot;&gt;一、Java编程配置&lt;/h2&gt;
&lt;p&gt;在Spring4.x之前，应用的基本配置中一般使用xml配置的方式，而在业务逻辑中建议使用注解的方式。可在Spring4.x以后，官方便开始推荐使用Java的编程配置来代替xml配置，这又是为什么？这两种配置又有什么优缺点呢？&lt;/p&gt;
&lt;h3 id=&quot;java编程配置和xml配置&quot;&gt;Java编程配置和xml配置&lt;/h3&gt;
&lt;p&gt;xml配置优点：对于我们这些老一辈的程序员来说(┬＿┬)，xml非常亲切，使用简单，容易扩展，修改应用配置参数不需要重新编译。&lt;/p&gt;
&lt;p&gt;xml配置缺点：配置文件的读取和解析需要耗时，xml配置文件内容太多会显得很臃肿，不方便管理。&lt;/p&gt;
&lt;p&gt;Java编程配置优点：相对于xml配置而言，其结构更清晰，可读性更高，同时也节省了解析xml耗时。&lt;/p&gt;
&lt;p&gt;Java编程配置缺点：修改应用配置参数需要重新编译。其实并不是一个大的问题，实际生成环境中，应用配置完成后一般都不会也不敢去随意修改。&lt;/p&gt;
&lt;p&gt;两者各有千秋，考虑到Spring4.x和SpringBoot都在推荐使用Java编程配置的方式，那我们也应该顺应时代潮流，你可以不用，但你应该要懂！&lt;/p&gt;
&lt;h3 id=&quot;java编程配置步骤&quot;&gt;Java编程配置步骤&lt;/h3&gt;
&lt;p&gt;第一步：创建配置类，在类名上添加注解Configuration，告知Spring这是一个配置类，其作用类似xml文件&lt;/p&gt;
&lt;p&gt;第二步：加载外部配置文件，在类名上添加注解PropertySource，指定properties文件的读取路径&lt;/p&gt;
&lt;p&gt;第三步：获取应用配置属性值，在属性变量上添加注解Value,通过${}表达式获取配置文件中参数&lt;/p&gt;
&lt;p&gt;第四步：依赖注入，在方法上添加Bean注解，也可以用FactoryBean&lt;/p&gt;
&lt;p&gt;第一步和第四步的语法，文章第二部分会详细介绍。第二步和第三步的语法，文章第三部分会详细介绍。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;import javax.sql.DataSource;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.beans.factory.annotation.Value;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Bean;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.ComponentScan;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Configuration;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.PropertySource;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.jdbc.core.JdbcTemplate;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.jdbc.datasource.DataSourceTransactionManager;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.transaction.PlatformTransactionManager;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.transaction.annotation.EnableTransactionManagement;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.mchange.v2.c3p0.ComboPooledDataSource;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * Spring 配置类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 配置数据源，事务管理，bean，自动扫描包&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@author &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;itdragon&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@Configuration&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 声明该类为配置类&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@PropertySource&lt;/span&gt;({&lt;span class=&quot;st&quot;&gt;&quot;classpath:propertySource.properties&quot;&lt;/span&gt;})    &lt;span class=&quot;co&quot;&gt;// 引入外部文件&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@ComponentScan&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;com.itdragon&quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;// 配置自动扫描包的路径&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@EnableTransactionManagement&lt;/span&gt;    &lt;span class=&quot;co&quot;&gt;// 开启基于注解的事务管理功能&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; ApplicationContextConfig {
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${DATA_USER}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String DATA_USER;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${DATA_PAWD}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String DATA_PAWD;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${DATA_DRIVER}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String DATA_DRIVER;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${DATA_JDBC_URL}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String DATA_JDBC_URL;
    
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 数据源&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; DataSource &lt;span class=&quot;fu&quot;&gt;dataSource&lt;/span&gt;() &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; Exception{
        ComboPooledDataSource dataSource = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ComboPooledDataSource&lt;/span&gt;();
        dataSource.&lt;span class=&quot;fu&quot;&gt;setUser&lt;/span&gt;(DATA_USER);
        dataSource.&lt;span class=&quot;fu&quot;&gt;setPassword&lt;/span&gt;(DATA_PAWD);
        dataSource.&lt;span class=&quot;fu&quot;&gt;setDriverClass&lt;/span&gt;(DATA_DRIVER);
        dataSource.&lt;span class=&quot;fu&quot;&gt;setJdbcUrl&lt;/span&gt;(DATA_JDBC_URL);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; dataSource;
    }
    
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// jdbc模板&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; JdbcTemplate &lt;span class=&quot;fu&quot;&gt;jdbcTemplate&lt;/span&gt;() &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; Exception{
        JdbcTemplate jdbcTemplate = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;JdbcTemplate&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;dataSource&lt;/span&gt;());
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; jdbcTemplate;
    }
    
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 事务管理&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; PlatformTransactionManager &lt;span class=&quot;fu&quot;&gt;transactionManager&lt;/span&gt;() &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; Exception{
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DataSourceTransactionManager&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;dataSource&lt;/span&gt;());
    }

}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;事务测试代码，请异步github&lt;/p&gt;
&lt;h2 id=&quot;二组件注入&quot;&gt;二、组件注入&lt;/h2&gt;
&lt;p&gt;Bean注解类似xml文件中的&lt;code&gt;&amp;lt;bean&amp;gt;&lt;/code&gt;标签，其中被Bean注解修饰的方法名对应&lt;code&gt;&amp;lt;bean&amp;gt;&lt;/code&gt;标签中的id，也可以通过Bean注解的value属性设置id的值。在SpringBoot底层代码中被大量使用。&lt;/p&gt;
&lt;p&gt;若希望容器启动后创建对象，并在使用后从容器中直接获取，则什么都不需要做，因为Spring默认是单实例，即容器启动后创建对象，并保存到容器中，使用时再从容器中获取。&lt;/p&gt;
&lt;p&gt;若希望容器启动后不创建对象，而是在使用时再创建，继而保存到容器中，下次使用再从容器中获取，可以通过懒加载的方式实现，即使用Lazy注解修饰。&lt;/p&gt;
&lt;p&gt;若希望容器启动后不创建对象，而是在每次使用时创建，则采用多实例的方式，即使用Scope注解，参数的值为prototype，&lt;a href=&quot;mailto:即@Scope&quot;&gt;即@Scope&lt;/a&gt;(&quot;prototype&quot;) 。&lt;/p&gt;
&lt;p&gt;若希望容器启动后根据条件选择需要注入的Bean，可以使用注解Conditional判断，SpringBoot的底层打量使用了该注解。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Bean;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.ComponentScan;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.ComponentScan.Filter;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Conditional;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Configuration;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.FilterType;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Lazy;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.stereotype.Controller;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.itdragon.entity.ITDragonEntity;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.itdragon.server.ITDragonServer;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 知识点二：配置自动扫描包路径&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 一、注解ComponentScan的value值设置自动扫描包的路径&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 二、注解ComponentScan的excludeFilters值设置扫描排除的规则&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; *  1)、通过注解@Filter设置排除的类型,type=ANNOTATION表示按照注解包含排除。classes是具体的注解，如Controller,Server,Repository&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 三、注解ComponentScan的includeFilters值设置扫描加入的规则&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; *  1)、通过设置useDefaultFilters=false关闭Spring默认扫描全部的功能，使includeFilters生效&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; *  &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 知识点三：@Filter常用的拦截类型&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 一、FilterType.ANNOTATION：按照注解&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 二、FilterType.ASSIGNABLE_TYPE：按照给定的类型，包括其子类和实现类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 三、FilterType.CUSTOM：使用自定义规则&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 第一个ComponentScan注解表示在指定包下不扫描通过Controller注解修饰的类和ITDragonServer类及其子类和实现类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 第二个ComponentScan注解表示在指定包下只扫描通过Controller注解修饰的类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 第三个ComponentScan注解表示在指定包下根据自定义拦截规则，不扫描满足规则的类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@ComponentScan&lt;/span&gt;(value=&lt;span class=&quot;st&quot;&gt;&quot;com.itdragon&quot;&lt;/span&gt;,excludeFilters={&lt;span class=&quot;fu&quot;&gt;@Filter&lt;/span&gt;(type=FilterType.&lt;span class=&quot;fu&quot;&gt;ANNOTATION&lt;/span&gt;,classes={Controller.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;}),
        &lt;span class=&quot;fu&quot;&gt;@Filter&lt;/span&gt;(type=FilterType.&lt;span class=&quot;fu&quot;&gt;ASSIGNABLE_TYPE&lt;/span&gt;,classes={ITDragonServer.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;})})
&lt;span class=&quot;co&quot;&gt;//@ComponentScan(value=&quot;com.itdragon&quot;,includeFilters={@Filter(type=FilterType.ANNOTATION,classes={Controller.class})},useDefaultFilters=false)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;//@ComponentScan(value=&quot;com.itdragon&quot;,excludeFilters={@Filter(type=FilterType.CUSTOM,classes={ITDragonCustomTypeFilter.class})})&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; ITDragonConfig {
    
    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 知识点一：配置bean&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 一、注解Bean的value值表示bean的id&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 二、注解Bean的value值未设置，则方法名表示bean的id&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt;(value=&lt;span class=&quot;st&quot;&gt;&quot;itdragonBean&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; ITDragonEntity &lt;span class=&quot;fu&quot;&gt;itdragonEntity&lt;/span&gt;() { &lt;span class=&quot;co&quot;&gt;//方法名很重要，类似xml的id名，也可以通过@bean的value值重定义&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ITDragonEntity&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;itdragon&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;configuration-password&quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;);
    }
    
    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 知识点四：Scope属性&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * @Scope，调整作用域，默认单实例&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * singleton：单实例：ioc容器启动后创建对象放到ioc容器中，需要是从容器中获取。&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * prototype：多实例：ioc容器启动后每次获取对象时都要创建对象。&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * request：同一次请求创建一个实例&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * session：同一个session创建一个实例&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 知识点五：懒加载&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 针对单实例而言，在容器启动后不创建对象，在第一次使用Bean时创建对象。可以理解为单实例的一种补充。&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;//  @Scope(&quot;prototype&quot;)&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Lazy&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; ITDragonEntity &lt;span class=&quot;fu&quot;&gt;scopeTopicBean&lt;/span&gt;() {
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^^Create Bean&quot;&lt;/span&gt;);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ITDragonEntity&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;scopeBean&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;singleton-prototype-request-session&quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;);
    }
    
    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 知识点六：Conditional条件判断&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 满足条件才会注册bean，可以修饰在类上，管理整个类下的组件注入。&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Conditional&lt;/span&gt;({ITDragonCustomCondition.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;})
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; ITDragonEntity &lt;span class=&quot;fu&quot;&gt;conditionalBean&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ITDragonEntity&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;conditionalBean&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;Conditional-Condition-CustomCondition&quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;);
    }
    
    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 知识点七：FactoryBean工厂Bean&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * FactoryBean默认通过调用getObject创建的对象，通过调用isSingleton设置单实例和多实例。&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; ITDragonFactoryBean &lt;span class=&quot;fu&quot;&gt;itdragonFactoryBean&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ITDragonFactoryBean&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;三属性赋值&quot;&gt;三、属性赋值&lt;/h2&gt;
&lt;p&gt;属性赋值步骤：&lt;/p&gt;
&lt;p&gt;第一步：通过注解PropertySource引入外部文件。可以引入多个，若担心文件不存在，可以通过参数ignoreResourceNotFound设置忽略&lt;/p&gt;
&lt;p&gt;第二步：通过注解Value从外部文件中获取值，一般采用${}格式，还支持#{} SpEL表达式，也可以直接传字符串。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;import org.springframework.beans.factory.annotation.Value;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Bean;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.Configuration;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import org.springframework.context.annotation.PropertySource;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.itdragon.entity.ITDragonEntity;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 知识点一： 引入外部文件，并从文件中获取值&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * @PropertySource 引入外部文件，支持多个，如果文件不存在会报错，可以通过设置参数ignoreResourceNotFound=true忽略&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * @Value 从外部文件中获取值，支持spel表达式，#{},${},string&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@author &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;itdragon&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;@PropertySource&lt;/span&gt;(value={&lt;span class=&quot;st&quot;&gt;&quot;classpath:propertySource.properties&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;classpth:xxx.properties&quot;&lt;/span&gt;},ignoreResourceNotFound=&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; ITDragonConfigValue {
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${ACCOUNT}&quot;&lt;/span&gt;)        &lt;span class=&quot;co&quot;&gt;// 从配置文件获取数据&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String ACCOUNT;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${PASSWORD}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String PASSWORD;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;${AGE}&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Integer AGE;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;ITDragon&quot;&lt;/span&gt;)          &lt;span class=&quot;co&quot;&gt;// 普通赋值&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String str;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;#{(1+2-3)/4*5}&quot;&lt;/span&gt;)    &lt;span class=&quot;co&quot;&gt;// 算术运算&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String operator;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;#{1&amp;gt;2 || 2 &amp;lt;= 3}&quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;// 关系运算&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Boolean comparison;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;#{systemProperties['java.version']}&quot;&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;// 系统配置：os.name&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String systemProperties;
    
    &lt;span class=&quot;fu&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;#{T(java.lang.Math).abs(-18)}&quot;&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;// 表达式&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String mapExpression;
    
    &lt;span class=&quot;fu&quot;&gt;@Bean&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;valueBean&quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; ITDragonEntity &lt;span class=&quot;fu&quot;&gt;itdragonEntity&lt;/span&gt;() {
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^ str : &quot;&lt;/span&gt; + str);
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^ operator : &quot;&lt;/span&gt; + operator);
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^ comparison : &quot;&lt;/span&gt; + comparison);
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^ systemProperties : &quot;&lt;/span&gt; + systemProperties);
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;^^^^^^^^^^^^^^^^^^^^ mapExpression : &quot;&lt;/span&gt; + mapExpression);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ITDragonEntity&lt;/span&gt;(ACCOUNT, PASSWORD, AGE);
    }

}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;四闲谈学习&quot;&gt;四、闲谈学习&lt;/h2&gt;
&lt;p&gt;这里并不是介绍如何学习一门技术，而是论养成一个学习习惯的重要性。大一时期，因为担心找不到工作而报了一个线上培训机构。经常被洗脑，其中一句话而我印象深刻 ---- &quot;让优秀成为一种习惯&quot;。听得我热血沸腾。花了五六千大洋报名，后来才发现网上有免费的。。。。&lt;strong&gt;个人不建议参加培训&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这钱花的还算值得，&quot;让优秀成为一种习惯&quot;，这句话对我的影响很大，从大学到工作，每当遇到陌生的知识，并没有选择逃避它。而是抽时间从网上找资料，去学习，整理，实践直到弄懂它。可我万万没有想到，这种学习的精神竟然用到了装修上。。。。&lt;strong&gt;可能学习已经是我的一个习惯了吧&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;开始，我是一个装修小白，不知道什么是全包、半包、清包；不知道什么是硬装、软装；也不知道装修的流程；不知道水电线、橱柜、洁具的品牌选择，不知道挂机、柜机、风管机、中央空调的优缺点；不知道封阳台的利弊；更不知道一个装修效果图要七八千。面对这些未知的领域，我寸步难行。我清楚的知道：如果你不懂，你就是砧板上的鱼肉，任人宰割。&lt;/p&gt;
&lt;p&gt;现在，我通过在百度，知乎，兔巴兔等平台上找答案，并把内容用Markdown的格式整理！我都被自己吓到了。不仅如此，我还在抢设计师的饭碗，自己动手设计效果图。在制作效果图的过程中，发现了很多不合理的设想。庆幸问自己设计了一套效果图，不然又有很多无用功，耗时，耗力，耗钱。爸妈和女票就是客户，而我就一直处于改！改！改！的阶段。体验了一把前端工程师的辛酸。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我是谁？我在哪？我在做什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我是一名程序员，我在学习的道路上，我在做能提高自己的事情！&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 14:15:00 +0000</pubDate>
<dc:creator>ITDragon龙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/itdragon/p/8658946.html</dc:identifier>
</item>
<item>
<title>tensorflow安装过程-（windows环境下）---详解（摆平了很多坑!） - lvsling</title>
<link>http://www.cnblogs.com/lvsling/p/8672404.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lvsling/p/8672404.html</guid>
<description>&lt;p&gt;一，　前言：本次安装tensorflow是基于Python的，安装Python的过程不做说明（既然决定按，Python肯定要先了解啊）：本次教程是windows下Anaconda安装Tensorflow的过程（cpu版，显卡不支持gpu版的...）&lt;/p&gt;
&lt;p&gt;二，　安装环境：（tensorflow支持的系统是64位的，windows和linux，mac都需要64位）&lt;/p&gt;
&lt;p&gt;　　　　windows7（其实和windows版本没什么关系，我的是windows7，安装时参照的有windows10的讲解）&lt;/p&gt;
&lt;p&gt;　　　　Python3.5.2（之前电脑上是安装的就是这个版本，如果你安装了，不知道版本的话可以在命令窗口输入&quot;python --version&quot;,会显示你已安装的Python的版本号）&lt;/p&gt;
&lt;p&gt;　　　　Anaconda3-4.2.0-Windows-x86_64.exe (windows下安装注意选择windows x86 64位就好)&lt;/p&gt;
&lt;p&gt;三，　Anaconda3-4.2.0-Windows-x86_64.exe&lt;/p&gt;
&lt;p&gt;　　　　下载可以去官网上下载，直接搜索找与你电脑对应的版本就好，我个人习惯从国内镜像网站下载，下载快哇（国内清华镜像网站是：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/）&lt;/p&gt;
&lt;p&gt;　　　　下载完成后直接安装就行，步骤如下图所示：&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329200456068-502413575.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329200639660-933415165.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　   自己用，就选择Just me&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329200706382-801302294.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　选择习惯的存储盘&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329200904112-78599680.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　    下面两个全部选上，点Install安装就好了&lt;/p&gt;
&lt;p&gt;　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329200955796-669171146.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　验证Anaconda是否安装成功的方法：&lt;/p&gt;
&lt;p&gt;　　　　　　命令窗口中输入“conda --version”  -----&amp;gt;得到conda 4.2.0&lt;/p&gt;
&lt;p&gt;　　　　看到了这个结果，恭喜你，你已经成功的安装上了Anaconda了，那么我们继续。&lt;/p&gt;
&lt;p&gt;四，　安装Tensorflow&lt;/p&gt;
&lt;p&gt;　　　安装Tensorflow时，需要从Anaconda仓库中下载，一般默认链接的都是国外镜像地址，下载肯定很慢啊（跨国呢！），这里我是用国内清华镜像，需要改一下链接镜像的地址。这里，我们打开刚刚安装好的Anaconda中的 Anaconda Prompt，然后输入：&lt;/p&gt;
&lt;p&gt;　　　　&lt;span class=&quot;hljs-attribute&quot;&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ 　　　　conda config --set show_channel_urls &lt;span class=&quot;hljs-literal&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;　　　　这两行代码用来改成连接清华镜像的&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;　　　　接下来安装Tensorflow，在Anaconda Prompt中输入：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;　　　　conda &lt;span class=&quot;hljs-keyword&quot;&gt;create -&lt;span class=&quot;hljs-keyword&quot;&gt;n tensorflow python=&lt;span class=&quot;hljs-number&quot;&gt;3.5.2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　一下图片是安装过程，有些坑我也写出来，注意一下就好：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　正常的情况应该如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329202703519-1769199726.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　等待，然后输入“y”&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329202756597-1581309040.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　然后：&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329202902630-41120937.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　看到上面这些activate tensorflow（这么直白的英语，看看是不是很激动，）恭喜你，tensorflow你已经安装成功啦，去激活一下，紧接着输入：“activate tensorflow”就Ok了&lt;/p&gt;
&lt;p&gt;　　　　我们要安装的是CPU版本，那么在命令下紧接着输入：&lt;/p&gt;
&lt;p&gt;　　　　pip install -i &lt;span class=&quot;hljs-symbol&quot;&gt;https:/&lt;span class=&quot;hljs-regexp&quot;&gt;/pypi.tuna.tsinghua.edu.cn/simple&lt;span class=&quot;hljs-regexp&quot;&gt;/https:/&lt;span class=&quot;hljs-regexp&quot;&gt;/mirrors.tuna.tsinghua.edu.cn/tensorflow&lt;span class=&quot;hljs-regexp&quot;&gt;/windows/cpu&lt;span class=&quot;hljs-regexp&quot;&gt;/tensorflow-1.1.0-cp35-cp35m-win_amd64.whl&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　　　你也可以自己选择对应的Tensorflow版本，可以在清华镜像中查看&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329203817681-937509493.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　经过一小会的等待，当你看见如上图最后一行时，那么，恭喜你，你已经安装成功了，是不是很惊喜，是不是很激动，是不是想测试一下呢，那么我们先测试一下吧&lt;/p&gt;
&lt;p&gt;五，　　测试：&lt;/p&gt;
&lt;p&gt;　　　　在Anaconda Prompt窗口中输入： python&lt;/p&gt;
&lt;p&gt;　　　　进入python后输入：&lt;/p&gt;
&lt;p&gt;　　　　&lt;span class=&quot;im&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import tensorflow &lt;span class=&quot;im&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;as tf&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　sess &lt;span class=&quot;op&quot;&gt;= tf.Session()&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;op&quot;&gt;　　　　&lt;span class=&quot;hljs-meta&quot;&gt;a &lt;span class=&quot;op&quot;&gt;= tf.constant(&lt;span class=&quot;dv&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;10)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;dv&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;b&lt;span class=&quot;op&quot;&gt;= tf.constant(1&lt;span class=&quot;dv&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;2)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;dv&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;dv&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;span class=&quot;op&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;sess.run(a&lt;span class=&quot;op&quot;&gt;+b)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329204245316-140364925.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　好了，到这里你可以放心了，你可以使用Tensorflow了&lt;/p&gt;
&lt;p&gt;六，　　那些年，那些坑：&lt;/p&gt;
&lt;p&gt;　　　　好了，最后我们来填坑了&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329204706010-285100783.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　改为清华镜像时的错误：会显示路径错误，没关系，conda info 查看一下，你会发现：&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329204855968-1265906717.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　很明显的发现地址乱了，不过没关系，找到电脑：C:\Users\Administrator中的.condarc文件，打开，然后修改一下，如下就可以了&lt;/p&gt;
&lt;p&gt; 　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329205202917-1915823354.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　然后在回到命令窗口，你可以继续安装了。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　如果你在安装Tensorflow时出现了如下情况：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;&lt;span class=&quot;hljs-literal&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329205459728-595447542.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　哇，那么多红色字体，不要担心，看最后一段，提示是版本问题，我们就升级版本就好了。&lt;/p&gt;
&lt;p&gt;　　操作如下图所示：&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329205730111-780457761.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　结果：&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1334819/201803/1334819-20180329205748083-89508331.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　好了，问题解决了&lt;/p&gt;

&lt;p&gt;　　　　以上就是我的全部安装步骤了，有空的话我试着在linux系统中安装一线Tensorflow，哈哈。&lt;/p&gt;

</description>
<pubDate>Thu, 29 Mar 2018 13:02:00 +0000</pubDate>
<dc:creator>lvsling</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lvsling/p/8672404.html</dc:identifier>
</item>
<item>
<title>web语义化之SEO和ARIA - weixiao-he</title>
<link>http://www.cnblogs.com/weixiao-he/p/8672200.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/weixiao-he/p/8672200.html</guid>
<description>&lt;p&gt;在&lt;a href=&quot;http://www.cnblogs.com/weixiao-he/p/8630084.html&quot;&gt;快速理解web语义化&lt;/a&gt;的时候，只知道web语义化有利于&lt;code&gt;SEO&lt;/code&gt;和便于屏幕阅读器阅读，但并不知道它是如何有利于&lt;code&gt;SEO&lt;/code&gt;和便于阅读器阅读的，带着这个疑问，进行了一番探索总结。&lt;/p&gt;
&lt;h2 id=&quot;seo&quot;&gt;SEO&lt;/h2&gt;
&lt;h3 id=&quot;什么是seo&quot;&gt;什么是SEO？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SEO&lt;/code&gt;（Search Engine Optimization，搜索引擎优化 ），是一种利用搜索引擎的搜索规则来提高目的网站在有关搜索引擎内的排名的方式。通俗来讲就是根据搜素引擎的规则来优化你的网站，让你的网站能够在用户的搜索结果中排在前面，提高网站的访问量。&lt;/p&gt;
&lt;h3 id=&quot;seo常用方式&quot;&gt;SEO常用方式&lt;/h3&gt;
&lt;h4 id=&quot;采用divcss布局&quot;&gt;采用DIV+CSS布局&lt;/h4&gt;
&lt;p&gt;采用div-css布局的网站对于搜索引擎很是友好，因此其避免了Table嵌套层次过多而无法被搜索引擎抓取的问题，而且简洁、结构化的代码更加有利于突出重点和适合搜索引擎抓取。&lt;/p&gt;
&lt;p&gt;尽量不使用表格布局，因为搜索引擎对表格布局嵌套3层以上的内容懒的去抓取。&lt;/p&gt;
&lt;h4 id=&quot;tdk优化&quot;&gt;TDK优化&lt;/h4&gt;
&lt;p&gt;TDK，即 &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;keywords&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一、title&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;SEO&lt;/code&gt;中，标题的优化占着举足轻重的地位，无论是从用户体验的角度出发，还是从搜索引擎的排名效果出发，&lt;code&gt;title&lt;/code&gt;都是页面优化最最重要的因素。&lt;br/&gt;&lt;code&gt;title&lt;/code&gt;的分隔符一般有&lt;code&gt;,&lt;/code&gt;，&lt;code&gt;_&lt;/code&gt;，&lt;code&gt;-&lt;/code&gt;和空格。其中&lt;code&gt;_&lt;/code&gt;对百度比较友好，而&lt;code&gt;-&lt;/code&gt;对谷歌比较友好，空格在英文站点可以使用但中文少用。&lt;/p&gt;
&lt;p&gt;推荐做法：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;每个网页应该有一个独一无二的标题，切忌所有的页面都使用同样的默认标题&lt;/li&gt;
&lt;li&gt;标题要主题明确，包含这个网页中最重要的内容&lt;/li&gt;
&lt;li&gt;简明精练，不罗列与网页内容不相关的信息&lt;/li&gt;
&lt;li&gt;如果你的文章标题不是很长，还可以加入点关键词进去，如文章title_关键词_网站名称&lt;/li&gt;
&lt;li&gt;用户浏览通常是从左到右的，重要的内容应该放到title的靠前的位置&lt;/li&gt;
&lt;li&gt;使用用户所熟知的语言描述。如果你有中、英文两种网站名称，尽量使用用户熟知的那一种做为标题描述&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;title&amp;gt;阿里巴巴1688.com - 全球领先的采购批发平台,批发网&amp;lt;/title&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;title&amp;gt;京东(JD.COM)-正品低价、品质保障、配送及时、轻松购物！&amp;lt;/title&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;二、description&lt;/p&gt;
&lt;p&gt;&lt;code&gt;description&lt;/code&gt;不是权值计算的参考因素，这个标签存在与否不影响网页权值，只会用做搜索结果摘要的一个选择目标。用户极有可能通过网站的摘要来决定是否浏览该网站。&lt;/p&gt;
&lt;p&gt;推荐做法：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;网站首页、频道页、产品参数页等没有大段文字可以用做摘要的网页最适合使用description&lt;/li&gt;
&lt;li&gt;准确的描述网页，不要堆砌关键词&lt;/li&gt;
&lt;li&gt;为每个网页创建不同的description，避免所有网页都使用同样的描述&lt;/li&gt;
&lt;li&gt;长度合理，不过长不过短（最好在100-150个字符，对应中文就是50到75个汉字）。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;meta name=&quot;description&quot; content=&quot;阿里巴巴（1688.com）批发网是全球企业间（B2B）电子商务的著名品牌，为数千万网商提供海量商机信息和便捷安全的在线交易市场，也是商人们以商会友、真实互动的社区平台。目前1688.com已覆盖原材料、工业品、服装服饰、家居百货、小商品等12个行业大类，提供从原料--生产--加工--现货等一系列的供应产品和服务。&quot;
  /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;meta name=&quot;description&quot; content=&quot;京东JD.COM-专业的综合网上购物商城,销售家电、数码通讯、电脑、家居百货、服装服饰、母婴、图书、食品等数万个品牌优质商品.便捷、诚信的服务，为您提供愉悦的网上购物体验!&quot; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;三、keywords&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keywords&lt;/code&gt;在搜索排名的权重不高，但是合理的设置，可以提高关键字的密度及优化搜索结果页的体验。通过加大关键词的密度，从而提高关键词在搜索引擎的排名，是SEO优化的一个常用手段。&lt;/p&gt;
&lt;p&gt;SEO的核心思想是每个页面抓住几个关键字（一般不超过5个）进行核心优化，所以设定与本页内容相关的主关键词一到三个就可以了。关键字之间用英文状态下的逗号分割，不要再滥用关键字，这会给搜索引擎不好的印象。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;meta name=&quot;keywords&quot; content=&quot;阿里巴巴，批发网，1688，批发市场，批发，采购，微商，微店，货源&quot;/&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;meta name=&quot;Keywords&quot; content=&quot;网上购物,网上商城,手机,笔记本,电脑,MP3,CD,VCD,DV,相机,数码,配件,手表,存储卡,京东&quot; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;使用html结构化&quot;&gt;使用HTML结构化&lt;/h4&gt;
&lt;p&gt;一、h标签&lt;/p&gt;
&lt;p&gt;h标签在html代码中是“标题”的意思，就如一篇文章，标题是文章最为重要的一个对象，也是搜索引擎在排名时重点考虑的一个对象。html中的h标签一共有六个，分别是h1/h2/h3/h4/h5/h6，分别代表不同的级别，h1标题具备更多的权重,以此类推。&lt;/p&gt;
&lt;p&gt;一般情况下，每个页面都应该有个唯一的&lt;code&gt;h1&lt;/code&gt;标题，但html5中&lt;code&gt;h1&lt;/code&gt;标题是可以多次出现的，每个具有结构大纲的标签都可以拥有自己独立的h1标题，如&lt;code&gt;header&lt;/code&gt;,&lt;code&gt;footer&lt;/code&gt;,&lt;code&gt;section&lt;/code&gt;,&lt;code&gt;aside&lt;/code&gt;,&lt;code&gt;article&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;关于h标签的使用，需要根据实际情况来使用，不可任意滥用。如一篇文章，不可能出现多个一级标题，所以h1在同一篇文章中只能出现一次，而h2等则可以出现多次。根据你需要表现的内容的重要程度，分别使用不同的h标签即可。特别注意，h标签中最好出现关键字！但不可滥用。&lt;/p&gt;
&lt;p&gt;在页面中合理利用h1-h6标签，能够让页面内容主次结构分明，利于搜索引擎识别内容偏重&lt;/p&gt;
&lt;p&gt;二、alt&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alt&lt;/code&gt;是图像中的注释，对图像的优化至关重要。搜索引擎还不能有效额识别出图片内容，给&lt;code&gt;img&lt;/code&gt;添加&lt;code&gt;alt&lt;/code&gt;属性就相当于告诉搜索引擎图片是什么内容，从而获取更好的图片排名。&lt;/p&gt;
&lt;p&gt;一般在插入图像时，我们在&lt;code&gt;alt&lt;/code&gt;中设置图像的描述内容，其中可以包含关键字但不要故意堆砌。特别需要注意的是，这些内容是不可以重复的，否则这样很容易被搜索引擎惩罚！&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;img src=&quot;../logo.png&quot; alt=&quot;XXXlogo&quot; width=&quot;100px&quot; height=&quot;100px&quot; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;三、strong,em 标签&lt;/p&gt;
&lt;p&gt;这些标签可以把文字变成另一个突出的样式，如加粗，变成斜体。他们不但可以在视觉上引起读者的注意，而且搜索引擎也会把他们当成关键字标示。&lt;br/&gt;&lt;code&gt;strong&lt;/code&gt;被认为是“加强”，&lt;code&gt;em&lt;/code&gt;被认为是“强调”，也就是这两个标签是有特殊含义的，这对于网站优化至关重要。多数时候，我们在优化网站时会对关键字进行突出，这时使用&lt;code&gt;strong&lt;/code&gt;或&lt;code&gt;em&lt;/code&gt;就比使用&lt;code&gt;b&lt;/code&gt;或者&lt;code&gt;i&lt;/code&gt;好很多。&lt;/p&gt;
&lt;p&gt;四、nofollow&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nofollow&lt;/code&gt;用在站内链接上，可以影响搜索引擎排名。&lt;/p&gt;
&lt;p&gt;它其实是HTML标签中的一种属性，它的主要作用就是告诉搜索引擎蜘蛛，不要跟踪加了&lt;code&gt;nofollow&lt;/code&gt;属性标签的这条链接了，也就是告诉搜索引擎蜘蛛禁止爬取和传递权重。&lt;/p&gt;
&lt;p&gt;比如说，在网站中一些评论留言中总会用人留下各式各样的链接地址，时间久了便会形成很多的垃圾链接。这对主网站的影响是很大的，会导致这些链接与链接之间互相传递权重，最终使主网站的权重分散了。&lt;/p&gt;
&lt;p&gt;添加方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;a href=”URL地址”rel=”nofollow”&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;a href=”URL地址” rel=”external nofollow”&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第一种&lt;code&gt;nofollow&lt;/code&gt;属性标签的添加方法是比较常见的一种，它的主要作用就是告诉搜索引擎蜘蛛不要跟踪这条链接，而第二种&lt;code&gt;nofollow&lt;/code&gt;属性标签的添加方法主要作用是告诉搜索引擎这是一个出站链接，不允许跟踪。虽然出站链接在添加了&lt;code&gt;nofollow&lt;/code&gt;属性标签之后，搜索引擎蜘蛛在第一次发现这条链接的时候，还是会照样爬取这条链接，但是，搜索引擎会自动记录这条链接的&lt;code&gt;nofollow&lt;/code&gt;属性值，从而不给这条链接导出权重。&lt;/p&gt;
&lt;h4 id=&quot;链接url&quot;&gt;链接URL&lt;/h4&gt;
&lt;p&gt;一、统一URL&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://www.domainname.com
http://domainname.com
http://www.domainname.com/index.html
http://domainname.com/index.html&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;以上四个其实都是首页。虽然不会给访客造成什么麻烦，但对于搜索引擎来说就是四条网址，并且内容相同，很可能会被误认为是作弊手段。而这四个页面的权重会被分散掉。&lt;/p&gt;
&lt;p&gt;二、301跳转&lt;/p&gt;
&lt;p&gt;URL发生改变，一定要把旧的地址301指向新的，不然之前做的一些收录权重什么的全白搭了。&lt;/p&gt;
&lt;p&gt;三、URL层级&lt;/p&gt;
&lt;p&gt;链接目录层级越浅，权重越大。在没有其他反向链接的前提下，每个目录的权重只是继承它的上级权重的一部分，因此这个权重会低于它的上级目录。也就是常说的离首页的层级越远，权重越小。&lt;/p&gt;
&lt;p&gt;这个是有前提的，就是没有其他外链影响。所以网站在进行外链建设或者内链布局调整之后，是会出现在一些低级目录的权重高于上级目录的情况。尤其是在一些针对具体目录关键词的排名能力上。&lt;/p&gt;
&lt;p&gt;在京东98%以上的页面，URL层级都是在顶级域名之下，最多也是在一级目录之下。这样就确保了权重最好的继承主域名，减少权重的分层流失。&lt;br/&gt;如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;京东一级分类页URL：
http://channel.jd.com/electronic.html
http://channel.jd.com/home.html

二级分类URL：
http://list.jd.com/670-677-678-0-0-0-0-0-0-0-1-1-1-1-1-72-4137-0.html&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;从上面的URL来看，链接的层级都不超过两层，尽可能的减少链接的层级。同时也是尽可能的简短（摘自&lt;a href=&quot;http://www.ghugo.com/jd-seo/&quot;&gt;【京东SEO】京东站内优化分析&lt;/a&gt;）&lt;/p&gt;
&lt;h2 id=&quot;aria&quot;&gt;ARIA&lt;/h2&gt;
&lt;h3 id=&quot;什么是aria&quot;&gt;什么是ARIA&lt;/h3&gt;
&lt;p&gt;无障碍网络倡议的无障碍丰富互联网应用规范（WAI-ARIA，简称 ARIA）。主要针对的是视觉缺陷，失聪，行动不便的残疾人以及假装残疾的测试人员。尤其像盲人，眼睛看不到，其浏览网页则需要借助辅助设备，如屏幕阅读器，屏幕阅读机可以大声朗读或者输出盲文。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    2015年5月21日，W3C HTML工作组（HTML Working Group）发布了在HTML中使用ARIA（Notes on Using ARIA in HTML）的标准工作草案。该文档实际地指导了开发者如何向HTML文档中添加由WAI-ARIA 1.1规范（Accessible Rich Internet Applications specification， WAI-ARIA 1.1） 所规定的无障碍辅助信息，从而使残障人士更容易获得Web内容和访问Web应用。&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;aria-使用规范&quot;&gt;ARIA 使用规范&lt;/h3&gt;
&lt;p&gt;一些HTML语义化标签在ARIA中会有对应的默认属性，但并不是所有的语义化标签都会有。根据&lt;code&gt;ARIA&lt;/code&gt;规范中描述的要求，Web开发人员可以使用&lt;code&gt;role&lt;/code&gt;和&lt;code&gt;aria-&lt;/code&gt;来给HTML元素添加ARIA属性。&lt;br/&gt;其中，&lt;code&gt;role&lt;/code&gt;标识了一个元素的作用，&lt;code&gt;aria-&lt;/code&gt;描述了与之有关的事物特征及其状态。&lt;br/&gt;如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;div role=&quot;header&quot;&amp;gt;
    &amp;lt;div role=&quot;navigation&quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div role=&quot;main&quot;&amp;gt;
    &amp;lt;div role=&quot;button&quot; tabindex=&quot;0&quot; disabled aria-disabled=&quot;true&quot;&amp;gt;&amp;lt;/div&amp;gt; //按钮为禁用状态
&amp;lt;/div&amp;gt;
&amp;lt;div role=&quot;footer&quot;&amp;gt;

&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;特别注意：使用&lt;code&gt;role&lt;/code&gt;时不能违背标签本身的语义。&lt;/p&gt;
&lt;p&gt;以下使用&lt;code&gt;role=title&lt;/code&gt;一个&lt;code&gt;button&lt;/code&gt;元素。这是不允许的，因为button元素具有与标题角色相冲突的默认特征。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;button role = &quot;title&quot; &amp;gt;搜索&amp;lt;/button &amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;ARIA更深入的理解和使用方法 在w3cplus上大漠老师的这一篇文章总结得非常到位，详情请点击&lt;a href=&quot;https://www.w3cplus.com/wai-aria/wai-aria.html&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;end&quot;&gt;END&lt;/h2&gt;
&lt;p&gt;从web语义化到SEO和ARIA，非常感谢前辈们的用心总结，让我们能够站在巨人的肩膀上前行。&lt;/p&gt;
&lt;p&gt;全文参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ghugo.com/jd-seo/&quot;&gt;【京东SEO】京东站内优化分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://imweb.io/topic/5682938b57d7a6c47914fc00&quot;&gt;SEO优化实战&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.kancloud.cn/digest/web-4/129983&quot;&gt;Web前端开发学习3：SEO代码优化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.w3cplus.com/wai-aria/wai-aria.html&quot;&gt;WAI-ARIA 无障碍Web规范&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 29 Mar 2018 12:31:00 +0000</pubDate>
<dc:creator>weixiao-he</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/weixiao-he/p/8672200.html</dc:identifier>
</item>
<item>
<title>linux系统无法正常启动，故障排查恢复 - zangfans</title>
<link>http://www.cnblogs.com/zangfans/p/8672155.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zangfans/p/8672155.html</guid>
<description>&lt;div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;

&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;首先看一下linux内核重要文件grub.conf&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;12.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;45&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
# grub.conf generated by anaconda                                                                                                              
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE:  You have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /boot/, eg.
#          root (hd0,0)
#          kernel /vmlinuz-version ro root=/dev/sda2
#          initrd /initrd-[generic-]version.img
#boot=/dev/sda
default=0    #如果有多个菜单，默认选择的菜单为0
timeout=5    #菜单选项栏等待5s
splashimage=(hd0,0)/grub/splash.xpm.gz   #/dev/sda1即/boot下开机启动图片
hiddenmenu   #影藏菜单
title CentOS 6 (2.6.32-696.el6.x86_64)     #标题为CentOS 6 (2.6.32-696.el6.x86_64),此标题不能没有
    root (hd0,0)     #第一块磁盘，第1个分区，指的是/boot
    kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet      #  kernel相对于/boot的路径，此处根值/boot，kenrl后面跟有系统启动相关参数  rhgb 图形化工具（转圈圈），删除rhgb直接到正常启动界面   quiet默认隐藏内核的启动过程
    initrd /initramfs-2.6.32-696.el6.x86_64.img


title CentOS 6 (2.6.32-696.el6.x86_64)     #标题为CentOS 6 (2.6.32-696.el6.x86_64),此标题不能没有
    kernel (hd0,0)/vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet      #  没有定义根,后面不能调用只能在前面添加(hd0,0)
    initrd (hd0,0)/initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div readability=&quot;37&quot;&gt;
&lt;div readability=&quot;51&quot;&gt;
&lt;h3&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;一 删除/boot/grub/*下所有文件，只保留grub.conf配置文件，系统能否正常启动修复？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201729439-1362231705.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201729439-1362231705.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;155&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;系统能够正常启动&lt;/p&gt;
&lt;p&gt;stage2阶段就是一个grub.conf配置文件，其它文件都不起到直接的作用        &lt;/p&gt;
&lt;p&gt;此时重新启动系统只会在一开始报一个没有启动图片的错误，此错误不影响系统的正常启动(可忽略)，/boot/grub下的所有文件只做暂时备份使用即stage1 stage1_5阶段的备份文件，只有当1和1.5阶段出现故障的时候 可以通过一些命令进行修复，修复的时候会用到此处的备份文件&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;二 破坏MBR的前446字节的信息，修复（stage1阶段修复）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# dd if=/dev/zero of=/dev/sda bs=1 count=4426
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;破坏stage1阶段&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201730009-86038513.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201730009-86038513.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;242&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;此时发现系统重启进入光盘界面&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201730495-1923644446.jpg&quot; alt=&quot;&quot; width=&quot;471&quot; height=&quot;347&quot;/&gt;&lt;/div&gt;
&lt;p&gt;重启系统直接进入光盘界面，也就是光盘上的MBR没有启动代码&lt;/p&gt;
&lt;p&gt;选择第三项进入救援模式&lt;/p&gt;

&lt;p&gt;&lt;span&gt;修复步骤&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1.切根  chroot /mnt/sysiamge&lt;/p&gt;
&lt;p&gt;&lt;span&gt;此时所处的位置并不是磁盘上的根，真正的根位于/mnt/sysimage下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;起因：在救援模式自身是不提供grub-install的只有切根才可以&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201730928-108443513.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731150-667867852.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731335-1214261666.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;2.grub-install  /dev/sda  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修复grub，此过程stage[1,1.5,2]都可以修复&lt;/p&gt;
&lt;p&gt;此时出现分区别标签的错误，不用管，此步骤容易出现故障&lt;/p&gt;
&lt;p&gt;3.sync&lt;/p&gt;
&lt;p&gt;确保磁盘已经写入进去了&lt;/p&gt;
&lt;p&gt;此时不仅修复了mbr还修复了grub里面不同stage的文件&lt;/p&gt;
&lt;p&gt;4.退出shell，重新启动&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;总结：此时stage1阶段的恢复完成，主要通过grub-install进行恢复&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;-------------------------------补充关闭selinux---------------------------&lt;/p&gt;
&lt;p&gt;1、重启系统按c键，直接进入grub&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;span&gt;grub&amp;gt; kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=/dev/sda2 selinux=0&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;grub&amp;gt; initrd /initramfs-2.6.32-696.el6.x86_64.img&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;grub&amp;gt; boot&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、通过修改/etc/sysconfig/selinux     把selinux=disabled&lt;/p&gt;
&lt;/div&gt;
-----------------------------------------------------------------------------------&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;三 破坏512字节之后的内容进行修复（stage1.5阶段过程）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;dd if=/dev/zero of=/dev/sda bs=1 count=10240 seek=512&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731555-900153935.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731555-900153935.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;83&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

此时会发现菜单都看不到&lt;/div&gt;
&lt;p&gt;stage1.5出故障使用光盘引导&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复步骤：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1.按Esc键进入光盘引导界面&lt;/p&gt;
&lt;p&gt;2.选择第三项进入救援模式&lt;/p&gt;
&lt;p&gt;3.切根  chroot /mnt/sysimage&lt;/p&gt;
&lt;p&gt;4.grub-install或者使用grub命令&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
sh-4.1# grub
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731757-1803850700.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
grub&amp;gt;root (hd0,0)     #表示boot在第一块磁盘第1个分区
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;20.5&quot;&gt;
&lt;div readability=&quot;26&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201731935-337765412.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;setup (hd0)      #此步骤依赖于/boot/grub/*下面的文件&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;表示把grub按在哪个硬盘上，没有写分区的原因在于有一部分是装在MBR里面的即boot分区里面，boot里面有一个目录名为grub，告诉各个路径在什么地方&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732245-1854789456.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732245-1854789456.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;412&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;-------------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;5.sync   #设置通过到磁盘&lt;/p&gt;
&lt;p&gt;6.reboot  #退出shell，重启系统方可恢复&lt;/p&gt;

&lt;h3&gt;四 在“三”的基础上在重新做“一”的操作，再启动会出现报错，状态码为Error 15&lt;/h3&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732442-1981657737.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复方案：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如把stage2文件复制到/boot/grup目录下，系统可以重新启动&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;解释&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;重启系统，此时可以知道重新安装grub以后stage2并不是起备份作用了，“一”中之所以成功是通过磁盘上别的空间来读取数据，可以明白stage1.5阶段已经成功了&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732690-1944294449.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;注：如果后期没有更改时间，grub.conf文件时间就是安装操作系统的时间&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732875-821992588.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201732875-821992588.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;77&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;在grub.conf文件下kernel没有写&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;/boot分区&lt;/span&gt;是因为boot是一个&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;独立分区&lt;/span&gt;，此文件是相对于boot分区，/=/boot&lt;/p&gt;
&lt;p&gt;如果没有指定root的位置必须指定kernel,initrd的位置及在前面加上(hd0,0)，即为/boot&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;五  如果没有root(hd0,0)且kernel,initrd不指定/boot的位置会出现如下报错&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
title CentOS 6 (2.6.32-696.el6.x86_64)     #标题为CentOS 6 (2.6.32-696.el6.x86_64),此标题不能没有
    kernel vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet      #  没有定义根,后面不能调用只能在前面添加(hd0,0)
    initrd initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201733139-320679924.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
#此时只能进入救援模式切根修改文件
title CentOS 6 (2.6.32-696.el6.x86_64)     #标题为CentOS 6 (2.6.32-696.el6.x86_64),此标题不能没有
    kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet      #  没有定义根,后面不能调用只能在前面添加(hd0,0)
    initrd /initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;六 如果在默认文件中去掉root (hd0,0)一行系统启动会出现的情况&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/p&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
title CentOS 6 (2.6.32-696.el6.x86_64)          
    kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet    
    initrd /initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;开头出现下面的提示，但是&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;系统能够正常的启动&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201733416-790152977.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201733416-790152977.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;101&quot;/&gt;&lt;/a&gt;&lt;/div&gt;


&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;七 调换kernel和initrd调换顺序，开机启动情况？&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
title CentOS 6 (2.6.32-696.el6.x86_64)          
    initrd /initramfs-2.6.32-696.el6.x86_64.img
    kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet    
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;div readability=&quot;17&quot;&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;解释：&lt;/span&gt;直接报错，大概意思是linux kernel必须在initrd之前加载，否则系统无法启动&lt;/p&gt;
&lt;p&gt;只有加载kernel才会知道操作系统的根，找到根了才会找到内存用户驱动&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201733613-839289784.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;修复步骤&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修复方法，显示删除initrd添加一新行，在编辑新行grub&amp;gt; initrd /initramfs-2.6.32-696.el6.x86_64.img&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201733827-1561662638.png&quot; alt=&quot;&quot; width=&quot;518&quot; height=&quot;262&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201734027-636914794.png&quot; alt=&quot;&quot; width=&quot;517&quot; height=&quot;254&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201734236-71091950.png&quot; alt=&quot;&quot; width=&quot;514&quot; height=&quot;272&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201734516-565363707.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201734750-1648460092.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201735074-1379844683.png&quot; alt=&quot;&quot; width=&quot;544&quot; height=&quot;269&quot;/&gt;&lt;/div&gt;


&lt;h3&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;strong&gt;八 单用户模式下可以轻易破解口令，如何明文加密口令？&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;加上密码口令并不影响启动，只是不能菜单编辑&lt;/p&gt;
&lt;p&gt;在title的上一行加上passwd   &lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;密码     &lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;此时验证的时候不知道都不会成功&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
password zangfans
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201735350-2034912594.png&quot; alt=&quot;&quot; width=&quot;602&quot; height=&quot;288&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201735661-504677174.png&quot; alt=&quot;&quot; width=&quot;603&quot; height=&quot;317&quot;/&gt;&lt;/div&gt;

&lt;p&gt;验证会出现&lt;span&gt;Failed&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;修复方案&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在hidddenmenu上方和initrd下方各插入一行&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;41&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
# grub.conf generated by anaconda                                                                                                              
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE:  You have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /boot/, eg.
#          root (hd0,0)
#          kernel /vmlinuz-version ro root=/dev/sda2
#          initrd /initrd-[generic-]version.img
#boot=/dev/sda
default=0   
timeout=5    
splashimage=(hd0,0)/grub/splash.xpm.gz
password centos6    #编辑菜单项输入密码
hiddenmenu  
title CentOS 6 (2.6.32-696.el6.x86_64)    
    root (hd0,0)    
    kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet     
    initrd /initramfs-2.6.32-696.el6.x86_64.img


title CentOS 6 (2.6.32-696.el6.x86_64)    
    kernel (hd0,0)/vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSF ONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet      # 
    initrd (hd0,0)/initramfs-2.6.32-696.el6.x86_64.img
    password centos6   #启动输入密码    
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201735350-2034912594.png&quot; alt=&quot;&quot; width=&quot;602&quot; height=&quot;288&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201735661-504677174.png&quot; alt=&quot;&quot; width=&quot;603&quot; height=&quot;317&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201736078-194098619.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;


&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;九 如何通过密文设置加密口令&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;使用加密算法对口令进行加密，可以使用MD5.SHA512&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;明文加密&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、使用grub-md5-crypt设置密码&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# grub-md5-crypt 
Password: 
Retype password: 
$1$Z.gAn/$Xd647hXfPj/sJ.i8A0By8.
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;p&gt;进入/boot/grub/grub.conf文件使用vim编译器的功能&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201736460-754909080.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;输入密码和验证，即可生成一段md5加密的字符串&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
password --md5 $1$V1hAn/$hSLRXWfIZWwVtYz4th5rg1 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;密文加密&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、使用grub-crypt及sha512进行加密&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# grub-crypt               
Password: 
Retype password: 
$6$jkKAT.eUrv3d4bfM$f41lkKlqQk3fAPqNwgy93J6Wi6bVF.zB5b.24V1QPwAGXkVVmwk2MGdi1UxzStHBaPWarW20AppaOvwheNRRj.
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;修改/boot/grub/grub.conf文件&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
password --encrypted $6$ndPVD/LnVhjBwHaG$XlSiTmJfRJrWufrmH0tLzle/zlmCB.Zyi/WClkcL8G43NDpXlKuQPvsw4AiIJqT1fJrb2Kh8DgZLY68pIAKFI0 
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;13&quot;&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;h3&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;strong&gt;十 如果忘记root账号口令，如何修复？&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复方案：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;可以通过救援模式删除口令&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201736847-135957474.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201736847-135957474.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;184&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201737197-989349211.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;删除口令之后进入系统直接输入root用户&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;无需密码验证&lt;/span&gt;就可以登录&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201737455-1698243094.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十一 设置启动背景图片&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;图片像素和格式是有要求的&lt;/p&gt;
&lt;p&gt;使用convert工具对图片像素进行设置&lt;/p&gt;
&lt;p&gt;首先得安装convert命令所提供的包&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# which convert          
/usr/bin/convert
[root@Centos6 ~]# rpm -qf `which convert`
ImageMagick-6.7.2.7-6.el6.x86_64
[root@Centos6 ~]# convert -resize 640x480 -colors 14 zf.jpg zf.xpm      #此命令必须在zf.jpg位置使用,使用less zf.xpm可以在头部看到相关信息
[root@Centos6 ~]# cp zf.xpm /boot/grub
[root@Centos6 grub]# vim grub.conf
splashimage=(hd0,0)/grub/zf.xpm
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;p&gt;进入grub界面就能看到设置的背景图片&lt;/p&gt;
&lt;p&gt;查看内核启动参数内核参数&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# cat /proc/cmdline
ro root=UUID=9ca5bdac-ce61-410e-a9fb-19a7877163cc rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16   KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;14&quot;&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十二 删除grub.conf文件,启动修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;环境：&lt;/span&gt;/boot/grub 目录下只有stage2文件，删除原有的grub.conf文件&lt;/p&gt;
&lt;p&gt;重启系统进入如下界面&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201737776-1801957822.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;解释：&lt;/span&gt;stage1、stage1.5没有问题主要stage2有问题，连菜单都进不去，直接跳到grub&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复方案：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201738191-524693981.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;grub支持交互式输入，如果没有grub.conf文件可以手动输入&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十三 删除/boot/grub整个目录，如何修复？&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# rm -rf /boot/grub
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;div readability=&quot;15&quot;&gt;
&lt;p&gt;重启进入如下界面&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201738511-332541433.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复方案：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、进入救援模式&lt;/p&gt;
&lt;p&gt;2、chroot /mnt/sysimage 切根&lt;/p&gt;
&lt;p&gt;3、使用grub-install /dev/sda&lt;/p&gt;
&lt;p&gt;4、sync同步磁盘，此时grub目录已经修复好了&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201738808-853609925.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;5、写一个grub.conf文件&lt;/p&gt;
&lt;p&gt;因为修复时并没有grub.conf文件必须手写&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201739130-414064691.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
#必须写三项分别是title kernel initrd
default 0
timeout 3
title  Centos6
kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=/dev/sda2       #方便的小技巧，防止手敲出错
initrd /initramfs-2.6.32-696.el6.x86_64.img　　
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201739447-159537987.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201739661-1893796554.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;使用UUID也是可以的&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201739873-65947038.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;注：r!blkid|grep /dev/sda2   #UUID后面注意去掉引号&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十四 删除/boot下所有文件如何修复？  &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;环境:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# ls /boot
config-2.6.32-696.el6.x86_64  initramfs-2.6.32-696.el6.x86_64.img  System.map-2.6.32-696.el6.x86_64
efi                           lost+found                           vmlinuz-2.6.32-696.el6.x86_64
grub                          symvers-2.6.32-696.el6.x86_64.gz
[root@Centos6 ~]# rm -rf /boot
rm: cannot remove `/boot': Device or resource busy
[root@Centos6 ~]# ls /boot    
[root@Centos6 ~]# 
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;27&quot;&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复分析：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;主要修复/boot里面的内核，虚拟文件系统，grub。&lt;span&gt;内核：可以在光盘里面找或者去其它相同系统的机子上拷一份&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复方案：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、进入救援模式&lt;/p&gt;
&lt;p&gt;2、chroot /mnt/sysimage  切根&lt;/p&gt;
&lt;p&gt;3、挂载光盘    mount /dev/sr0  /mnt&lt;/p&gt;
&lt;p&gt;4、cd /mnt/selinux/&lt;/p&gt;
&lt;p&gt;vmlinuz  大小和刚开始文件系统大小是一样的，说明内核是一个固定不变的东西&lt;/p&gt;
&lt;p&gt;5、cp vmlinuz /boot  复制内核到/boot下&lt;/p&gt;
&lt;p&gt;6、mkinitrd /boot/initramfs.img `uname -r`&lt;/p&gt;
&lt;p&gt;7、grub-install /dev/sda&lt;/p&gt;
&lt;p&gt;8、在/boot/grub目录下新建一个grub.conf文件&lt;/p&gt;
&lt;p&gt;default o&lt;/p&gt;
&lt;p&gt;timeout 3&lt;/p&gt;
&lt;p&gt;title Centos6&lt;/p&gt;
&lt;p&gt;kernel  /vmlinuz ro root=/dev/sda2&lt;/p&gt;
&lt;p&gt;initrd    /initramfs.img&lt;/p&gt;
&lt;p&gt;9、重启恢复正常&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十五 误删除/sbin/init，无法进入系统如何修复？&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# mv /sbin/init ~/
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;9.5&quot;&gt;
&lt;div readability=&quot;14&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201740157-86345189.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;恢复方案；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、进入grub&lt;/p&gt;
&lt;p&gt;2、按a键在后面添加 init=/bin/bash  #指定不用系统默认的init，使用/bin/bash来代替&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201740634-1936708049.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;用bash来作为计算机的第一个进程，bash内置了一些内部命令&lt;/p&gt;
&lt;p&gt;4、回车之后进入如下界面，可以输入一些命令&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201740873-1106923161.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;5、查看/sbin/bash命令来自哪个包&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
bash-4.1# rpm -qf /sbin/init 
#upstart包提供
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201741058-174557799.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;此时挂载是只读挂载，不能安装此包&lt;/p&gt;

&lt;p&gt;6、重新挂载根，默认只读挂载&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
bash-4.1# mount -o remount,rw /
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201741244-1659623347.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;7、安装upstart包&lt;/p&gt;
&lt;p&gt;注意此时光盘已经挂载，安装包要覆盖安装，--force选项，upstart包毕竟已经安装过了&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
#默认光盘已经挂载在/mnt
bash-4.1# cd /mnt
bash-4.1# rpm -ivh /Packages/upstart-xxxxxx  --force
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201741480-1782234799.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;8、同步到磁盘&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
bash-4.1# sync
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;14&quot;&gt;

&lt;p&gt;9、检查一下可以看到/sbin/bin&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201741665-1455154879.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;总结：/sbin/bin文件误删除后，不需要进入救援模式就可以直接通过命令进行修复，过程中发现根是只读挂载的，必须重新挂载才能安装upstart包&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h3 class=&quot;CodeMirror-gutters&quot;&gt;十六 根文件系统放在逻辑卷上，若误操作删除/fstab,/boot/*文件该如何恢复？&lt;/h3&gt;
&lt;/p&gt;
&lt;div readability=&quot;21&quot;&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6-LVM ~]# mv /etc/fstab /root
[root@Centos6-LVM ~]# rm -rf /boot/*
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;36.5&quot;&gt;
&lt;p&gt;此时boot里面的内核文件已经删除了，所以不能通过手写恢复，只有通过救援模式&lt;/p&gt;
&lt;p&gt;重启直接进入grub&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742570-1561955501.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742570-1561955501.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;242&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;修复分析&lt;/span&gt;：boot分区是不能放在逻辑卷上的，那么有多快逻辑卷如何区分哪块逻辑卷是根？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;&lt;span&gt;恢复方案&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、进入救援模式&lt;/p&gt;
&lt;p&gt;2、创建一个临时目录   mkdir /mnt/tmp&lt;/p&gt;
&lt;p&gt;3、激活逻辑卷  vgchage -ay    #当前逻辑卷状态处于非活动状态，必须激活才可以&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742788-790744557.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;4、根据我的机器我从里面文件的结构和大小了解到，Vo100,Vo101app,Vo102分别为root、app、swap&lt;/p&gt;
&lt;p&gt;5、挂载/dev/vg_centos6lvm/LogVo100到/mnt/tmp&lt;/p&gt;
&lt;p&gt;mount /dev/vg_centos6lvm/LogVo100 /mnt/tmp&lt;/p&gt;
&lt;p&gt;6、新建fstab文件&lt;/p&gt;
&lt;p&gt;touch /mnt/tmp/etc/fstab&lt;/p&gt;
&lt;p&gt;7、对fstab文件添加挂载信息&lt;/p&gt;
&lt;p&gt;vi /mnt/tmp/etc/fstab&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742971-185749524.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;8、重启系统，挂载一下分区，然后进入救援模式&lt;/p&gt;
&lt;p&gt;9、切根 chroot /mnt/sysimage&lt;/p&gt;
&lt;p&gt;到此步不能用第十四题思路对grub解题&lt;/p&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;10、重新安装内核&lt;/p&gt;
&lt;p&gt;rpm -ivh /mnt/Packege/kernel-xxxxx.rpm --force&lt;/p&gt;
&lt;p&gt;这里不同于“十四”，重新安装内核，“十四”是通过复制光盘的文件到/boot，重写grub.conf进行恢复&lt;/p&gt;
&lt;p&gt;11、重写grub.conf文件&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
#必须写三项分别是title kernel initrd
default 0
timeout 3
title  Centos6_lvm
kernel /vmlinuz-2.6.32-696.el6.x86_64  ro root=/dev/vg_centos6lvm/LogVo100  selinux=0    
initrd /initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;12、重启系统，恢复正常&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;十七 误删除/etc/fstab文件和/boot下的所有文件如何修复？&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@Centos6 ~]# rm -rf /etc/fstab 
[root@Centos6 ~]# rm -rf /boot
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;重启后进入如下界面&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201741847-2075487336.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;修复分析：&lt;/span&gt;进入救援模式怎么区分/boot,/,/swap？&lt;span&gt;可以通过挂载分区，进入挂载目录里面，查看内容，以区分区挂载目录&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
bash-4.1# mkdir /mnt/tmp   #创建
bash-4.1# mount /sda1 /mnt/tmp   #挂载到临时文件
bash-4.1# ls /mnt/tmp    #查看里面的内容，此处可以看到没有任何文件可以判断为/boot
通过以上方法就可以知道每个分区到底是什么
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div readability=&quot;38&quot;&gt;
&lt;p&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;恢复方案：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、进入救援模式&lt;/p&gt;
&lt;p&gt;2、chroot /mnt/sysimage   #切根&lt;/p&gt;
&lt;p&gt;3、mkdir /mnt/tmp&lt;/p&gt;
&lt;p&gt;4、mount /dev/sda2 /mnt/tmp&lt;/p&gt;
&lt;p&gt;5、touch /mnt/tmp/etc/fstab   #创建删除的文件&lt;/p&gt;
&lt;p&gt;6、vi /mnt/tmp/etc/fstab  &lt;/p&gt;
&lt;p&gt;/dev/sda1 /boot  ext4   defaults 0 0&lt;/p&gt;
&lt;p&gt;/dev/sda2 /         ext4   defaults 0 0&lt;/p&gt;
&lt;p&gt;/dev/sda5 swap  swap  defaults 0 0&lt;/p&gt;
&lt;p&gt;错误一：扩展内存加上了/&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742097-1581873196.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;错误二：文件系统类型为ext4&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1270435/201803/1270435-20180329201742314-1780932451.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot;&gt;注：此处是一个大坑，稍有出错会导致在救援系统里面无法挂载光盘&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;7、重启系统进入救援模式&lt;/p&gt;
&lt;p&gt;8、切根挂载光盘&lt;/p&gt;
&lt;p&gt;chroot /mnt/sysimage/&lt;/p&gt;
&lt;p&gt;mount /dev/cdrom /mnt&lt;/p&gt;
&lt;p&gt;9、重新安装内核&lt;/p&gt;
&lt;p&gt;rpm -ivh /mnt/Packege/kernel-xxxxx.rpm --force&lt;/p&gt;
&lt;p&gt;这里不同于“十四”，重新安装内核，“十四”是通过复制光盘的文件到/boot，重写grub.conf进行恢复&lt;/p&gt;
&lt;p&gt;10、此时/boot会生成一些新文件  （看教程使用在强制安装kernel后在做grub-instlal /dev/sda，通过我的操作过程我了解在重新安装内核会自动生成grub目录里面的内容）&lt;/p&gt;
&lt;p&gt;11、新建grub.conf文件&lt;/p&gt;
&lt;/div&gt;
&lt;div data-mode=&quot;Shell&quot; data-theme=&quot;default&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
#必须写三项分别是title kernel initrd
default 0
timeout 3
title  Centos6
kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=/dev/sda2       
initrd /initramfs-2.6.32-696.el6.x86_64.img
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 29 Mar 2018 12:18:00 +0000</pubDate>
<dc:creator>zangfans</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zangfans/p/8672155.html</dc:identifier>
</item>
<item>
<title>慢查询日志分析（mysql） - lvp</title>
<link>http://www.cnblogs.com/peter-yan/p/8670005.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/peter-yan/p/8670005.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;$ perl pt-query-digest --help
pt-query-digest analyzes MySQL queries from slow&lt;/span&gt;, general,&lt;span&gt; and binary log files.
It can also analyze queries from C&amp;lt;SHOW PROCESSLIST&amp;gt; and MySQL protocol data
from tcpdump.  By default&lt;/span&gt;,&lt;span&gt; queries are grouped by fingerprint and reported in
descending order of query time (i.e. the slowest queries first).  If no C&amp;lt;FILES&amp;gt;
are given&lt;/span&gt;,&lt;span&gt; the tool reads C&amp;lt;STDIN&amp;gt;.  The optional C&amp;lt;DSN&amp;gt; is used for certain
options like L&amp;lt;&lt;/span&gt;&quot;--since&quot;&amp;gt; and L&amp;lt;&quot;--until&quot;&amp;gt;.  For more details,&lt;span&gt; please use the
--help option&lt;/span&gt;,&lt;span&gt; or try 'perldoc pt-query-digest' for complete documentation.

Usage: pt-query-digest &lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;OPTIONS&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;FILES&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span&gt;DSN&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;

Options:

  --ask-pass                   Prompt for a password when connecting to MySQL
  --attribute-aliases&lt;/span&gt;=a        List of attribute|alias,&lt;span&gt;etc (default db|Schema)
  --attribute-value-limit&lt;/span&gt;=i    A sanity limit for attribute values (default 0&lt;span&gt;)
  --charset&lt;/span&gt;=&lt;span&gt;s              -A  Default character set
  --config&lt;/span&gt;=A                   Read this comma-separated list of config files&lt;span&gt;;
&lt;/span&gt;                               if specified,&lt;span&gt; this must be the first option on
                               the command line
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;continue-on-error      Continue parsing even if there is an error (
                               default yes)
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;create-history-table   Create the --history table if it does not exist (
                               default yes)
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;create-review-table    Create the --review table if it does not exist (
                               default yes)
  --daemonize                  Fork to the background and detach from the shell
  --database&lt;/span&gt;=&lt;span&gt;s             -D  Connect to this database
  --defaults-file&lt;/span&gt;=&lt;span&gt;s        -F  Only read mysql options from the given file
  --embedded-attributes&lt;/span&gt;=&lt;span&gt;a      Two Perl regex patterns to capture pseudo-
                               attributes embedded in queries
  --expected-range&lt;/span&gt;=&lt;span&gt;a           Explain items when there are more or fewer than
                               expected (default &lt;/span&gt;5,10&lt;span&gt;)
  --explain&lt;/span&gt;=&lt;span&gt;d                  Run EXPLAIN for the sample query with this DSN
                               and print results
  --filter&lt;/span&gt;=&lt;span&gt;s                   Discard events for which this Perl code doesn't
                               return true
  --group-by&lt;/span&gt;=&lt;span&gt;A                 Which attribute of the events to group by (
                               default fingerprint)
  --help                       Show help and exit
  --history&lt;/span&gt;=&lt;span&gt;d                  Save metrics for each query class in the given
                               table. pt-query-digest saves query metrics (
                               query time&lt;/span&gt;, lock time,&lt;span&gt; etc.) to this table so
                               you can see how query classes change over time
  --host&lt;/span&gt;=&lt;span&gt;s                 -h  Connect to host
  --ignore-attributes&lt;/span&gt;=a        Do not aggregate these attributes (default arg,&lt;span&gt;
                               cmd&lt;/span&gt;, insert_id, ip, port, Thread_id, timestamp,&lt;span&gt;
                               exptime&lt;/span&gt;, flags, key, res, val, server_id,&lt;span&gt;
                               offset&lt;/span&gt;, end_log_pos,&lt;span&gt; Xid)
  --inherit-attributes&lt;/span&gt;=a       If missing,&lt;span&gt; inherit these attributes from the
                               last event that had them (default db&lt;/span&gt;,&lt;span&gt;ts)
  --interval&lt;/span&gt;=f                 How frequently to poll the processlist,&lt;span&gt; in
                               seconds (default &lt;/span&gt;.1&lt;span&gt;)
  --iterations&lt;/span&gt;=&lt;span&gt;i               How many times to iterate through the collect-
                               and-report cycle (default &lt;/span&gt;1&lt;span&gt;)
  --limit&lt;/span&gt;=&lt;span&gt;A                    Limit output to the given percentage or count (
                               default &lt;/span&gt;95%:20&lt;span&gt;)
  --log&lt;/span&gt;=&lt;span&gt;s                      Print all output to this file when daemonized
  --order-by&lt;/span&gt;=&lt;span&gt;A                 Sort events by this attribute and aggregate
                               function (default Query_time:sum)
  --outliers&lt;/span&gt;=&lt;span&gt;a                 Report outliers by attribute:percentile:count (
                               default Query_time:&lt;/span&gt;1:10&lt;span&gt;)
  --output&lt;/span&gt;=&lt;span&gt;s                   How to format and print the query analysis
                               results (default report)
  --password&lt;/span&gt;=&lt;span&gt;s             -p  Password to use when connecting
  --pid&lt;/span&gt;=&lt;span&gt;s                      Create the given PID file
  --port&lt;/span&gt;=&lt;span&gt;i                 -P  Port number to use for connection
  --preserve-embedded-numbers  Preserve numbers in database/table names when
                               fingerprinting queries
  --processlist&lt;/span&gt;=d              Poll this DSN's processlist for queries,&lt;span&gt; with --
                               interval sleep between
  --progress&lt;/span&gt;=a                 Print progress reports to STDERR (default time,
                               30&lt;span&gt;)
  --read-timeout&lt;/span&gt;=m             Wait this long for an event from the input&lt;span&gt;;&lt;/span&gt;&lt;span&gt; 0 to&lt;/span&gt;
                               wait forever (default 0).  Optional suffix s=&lt;span&gt;
                               seconds&lt;/span&gt;, m=minutes, h=hours, d=days&lt;span&gt;;&lt;/span&gt;&lt;span&gt; if no&lt;/span&gt;
                               suffix,&lt;span&gt; s is used.
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;report                 Print query analysis reports for each --group-by
                               attribute (default yes)
  --report-all                 Report all queries&lt;/span&gt;,&lt;span&gt; even ones that have been
                               reviewed
  --report-format&lt;/span&gt;=&lt;span&gt;A            Print these sections of the query analysis
                               report (default rusage&lt;/span&gt;,date,hostname,files,&lt;span&gt;
                               header&lt;/span&gt;,profile,query_report,&lt;span&gt;prepared)
  --report-histogram&lt;/span&gt;=&lt;span&gt;s         Chart the distribution of this attribute's
                               values (default Query_time)
  --resume&lt;/span&gt;=s                   If specified,&lt;span&gt; the tool writes the last file
                               offset&lt;/span&gt;, if there is one,&lt;span&gt; to the given filename
  --review&lt;/span&gt;=d                   Save query classes for later review,&lt;span&gt; and don't
                               report already reviewed classes
  --run-time&lt;/span&gt;=&lt;span&gt;m                 How long to run for each --iterations.  Optional
                               suffix s&lt;/span&gt;=seconds, m=minutes, h=hours, d=days&lt;span&gt;;&lt;/span&gt;&lt;span&gt; if&lt;/span&gt;
                               no suffix,&lt;span&gt; s is used.
  --run-time-mode&lt;/span&gt;=&lt;span&gt;s            Set what the value of --run-time operates on (
                               default clock)
  --sample&lt;/span&gt;=&lt;span&gt;i                   Filter out all but the first N occurrences of
                               each query
  --set-vars&lt;/span&gt;=&lt;span&gt;A                 Set the MySQL variables in this comma-separated
                               list of variable&lt;/span&gt;=&lt;span&gt;value pairs
  --show-all&lt;/span&gt;=&lt;span&gt;H                 Show all values for these attributes
  --since&lt;/span&gt;=&lt;span&gt;s                    Parse only queries newer than this value (parse
                               queries since this date)
  --slave-password&lt;/span&gt;=&lt;span&gt;s           Sets the password to be used to connect to the
                               slaves
  --slave-user&lt;/span&gt;=&lt;span&gt;s               Sets the user to be used to connect to the slaves
  --socket&lt;/span&gt;=&lt;span&gt;s               -S  Socket file to use for connection
  --timeline                   Show a timeline of events
  --type&lt;/span&gt;=&lt;span&gt;A                     The type of input to parse (default slowlog)
  --until&lt;/span&gt;=&lt;span&gt;s                    Parse only queries older than this value (parse
                               queries until this date)
  --user&lt;/span&gt;=&lt;span&gt;s                 -u  User for login if not current user
  --variations&lt;/span&gt;=&lt;span&gt;A               Report the number of variations in these
                               attributes' values
  --version                    Show version and exit
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;version-check          Check for the latest version of Percona Toolkit,&lt;span&gt;
                               MySQL&lt;/span&gt;,&lt;span&gt; and other programs (default yes)
  --&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;no&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;vertical-format        Output a trailing &quot;\G&quot;&lt;span&gt; in the reported SQL
                               queries (default yes)
  --watch-server&lt;/span&gt;=&lt;span&gt;s             This option tells pt-query-digest which server
                               IP address and port (like &lt;/span&gt;&quot;10.0.0.1:3306&quot;&lt;span&gt;) to
                               watch when parsing tcpdump (for --type tcpdump)&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;                               all other servers are ignored

Option types: s&lt;/span&gt;=string, i=integer, f=float, h/H/a/A=comma-separated list, d=DSN, z=size, m=&lt;span&gt;time

Rules:

  This tool accepts additional command-line arguments. Refer to the SYNOPSIS and usage information for details.

DSN syntax is key&lt;/span&gt;=value&lt;span&gt;[&lt;/span&gt;&lt;span&gt;,key=value...&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;  Allowable DSN keys:

  KEY  COPY  MEANING
  &lt;/span&gt;===  ====  =============================================&lt;span&gt;
  A    yes   Default character set
  D    yes   Default database to use when connecting to MySQL
  F    yes   Only read default options from the given file
  P    yes   Port number to use for connection
  S    yes   Socket file to use for connection
  h    yes   Connect to host
  p    yes   Password to use when connecting
  t    no    The --review or --history table
  u    yes   User for login if not current user

  If the DSN is a bareword&lt;/span&gt;,&lt;span&gt; the word is treated as the 'h' key.

Options and values after processing arguments:

  --ask-pass                   FALSE
  --attribute-aliases          db|Schema
  --attribute-value-limit      &lt;/span&gt;0&lt;span&gt;
  --charset                    (No value)
  --config                     /etc/percona-toolkit/percona-toolkit.conf&lt;/span&gt;,/etc/percona-toolkit/pt-query-digest.conf,/c/Users/Admin/.percona-toolkit.conf,&lt;span&gt;/c/Users/Admin/.pt-query-digest.conf
  --continue-on-error          TRUE
  --create-history-table       TRUE
  --create-review-table        TRUE
  --daemonize                  FALSE
  --database                   (No value)
  --defaults-file              (No value)
  --embedded-attributes        (No value)
  --expected-range             &lt;/span&gt;5,10&lt;span&gt;
  --explain                    (No value)
  --filter                     (No value)
  --group-by                   fingerprint
  --help                       TRUE
  --history                    (No value)
  --host                       (No value)
  --ignore-attributes          arg&lt;/span&gt;,cmd,insert_id,ip,port,Thread_id,timestamp,exptime,flags,key,res,val,server_id,offset,end_log_pos,&lt;span&gt;Xid
  --inherit-attributes         db&lt;/span&gt;,&lt;span&gt;ts
  --interval                   &lt;/span&gt;.1&lt;span&gt;
  --iterations                 &lt;/span&gt;1&lt;span&gt;
  --limit                      &lt;/span&gt;95%:20&lt;span&gt;
  --log                        (No value)
  --order-by                   Query_time:sum
  --outliers                   Query_time:&lt;/span&gt;1:10&lt;span&gt;
  --output                     report
  --password                   (No value)
  --pid                        (No value)
  --port                       (No value)
  --preserve-embedded-numbers  FALSE
  --processlist                (No value)
  --progress                   time&lt;/span&gt;,30&lt;span&gt;
  --read-timeout               &lt;/span&gt;0&lt;span&gt;
  --report                     TRUE
  --report-all                 FALSE
  --report-format              rusage&lt;/span&gt;,date,hostname,files,header,profile,query_report,&lt;span&gt;prepared
  --report-histogram           Query_time
  --resume                     (No value)
  --review                     (No value)
  --run-time                   (No value)
  --run-time-mode              clock
  --sample                     (No value)
  --set-vars
  --show-all
  --since                      (No value)
  --slave-password             (No value)
  --slave-user                 (No value)
  --socket                     (No value)
  --timeline                   FALSE
  --type                       slowlog
  --until                      (No value)
  --user                       (No value)
  --variations
  --version                    FALSE
  --version-check              TRUE
  --vertical-format            TRUE
  --watch-server               (No value)&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 29 Mar 2018 11:03:00 +0000</pubDate>
<dc:creator>lvp</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/peter-yan/p/8670005.html</dc:identifier>
</item>
</channel>
</rss>