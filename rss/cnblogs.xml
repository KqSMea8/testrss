<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>当我问表单校验的面试题时，我期望得到什么样的答案 - 钌子_rawbin</title>
<link>http://www.cnblogs.com/rawbin/p/8506892.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rawbin/p/8506892.html</guid>
<description>&lt;h2 id=&quot;面试题&quot;&gt;面试题&lt;/h2&gt;
&lt;p&gt;校验用户名表单，长度为8-10位的只包含数字和字母的字符串，用JavaScript实现一个校验函数。&lt;/p&gt;
&lt;h2 id=&quot;解决过程&quot;&gt;1 解决过程&lt;/h2&gt;
&lt;h3 id=&quot;首先确认题目需求几乎没有人确认过当然也没有人写对过&quot;&gt;1.1 首先确认题目需求（几乎没有人确认过，当然也没有人写对过）&lt;/h3&gt;
&lt;h4 id=&quot;题目要求&quot;&gt;1.1.1 题目要求&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;长度8-10位&lt;/li&gt;
&lt;li&gt;只包含数字和字母&lt;/li&gt;
&lt;li&gt;JS校验函数&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;tips&quot;&gt;1.1.2 Tips&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;几乎没人确认过&lt;/li&gt;
&lt;li&gt;没人写对过&lt;/li&gt;
&lt;li&gt;如果这里有问题，后面肯定对不了&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;其次分析思路转换为可以写代码的等价逻辑表达也没人写对过&quot;&gt;1.2 其次分析思路（转换为可以写代码的等价逻辑表达，也没人写对过）&lt;/h3&gt;
&lt;h4 id=&quot;等价逻辑转换一&quot;&gt;1.2.1 等价逻辑转换一&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;包含字母&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含数字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只能是数字和字母&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;长度8-10位&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h4 id=&quot;等价逻辑转换二&quot;&gt;1.2.2 等价逻辑转换二&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;不 全为数字&lt;/li&gt;
&lt;li&gt;不 全为字母&lt;/li&gt;
&lt;li&gt;只能是数字和字母&lt;/li&gt;
&lt;li&gt;长度8-10位&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;等价逻辑转换三&quot;&gt;1.2.3 等价逻辑转换三&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;所有字符ASCII码在数字和字母的范围内&lt;/li&gt;
&lt;li&gt;长度8-10位&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;tips-1&quot;&gt;1.2.4 Tips&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;即使前面需求理解清楚，这里转换不等价也得不到正确的结果&lt;/li&gt;
&lt;li&gt;有了这里面的等价分解，最基本的TestCase也就有了，便于后面做校验&lt;/li&gt;
&lt;li&gt;即使写不出代码来，这里能说清楚也行&lt;/li&gt;
&lt;li&gt;说不清楚也行，需要能看到不断尝试，积极思考的过程&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;然后是核心代码实现清一色的正则我们也先说正则&quot;&gt;1.3 然后是核心代码实现（清一色的正则，我们也先说正则）&lt;/h3&gt;
&lt;h4 id=&quot;使用零宽正向先行断言&quot;&gt;1.3.1 使用零宽正向先行断言&lt;/h4&gt;
&lt;h5 id=&quot;代码实现&quot;&gt;1.3.1.1 代码实现&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;/^(?=.*\d.*)(?=.*[a-zA-Z].*)[0-9a-zA-Z]{8,10}$/.test(str)&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;代码解释&quot;&gt;1.3.1.2 代码解释&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;(?=)&lt;/code&gt;表达正向先行断言，满足条件的其他匹配结果才为真，即括号内的表达式匹配整个匹配结果才为真&lt;/li&gt;
&lt;li&gt;可以出现在代码的任意位置&lt;/li&gt;
&lt;li&gt;不占用最终的匹配宽度&lt;/li&gt;
&lt;li&gt;这里表达既包含数字又包含字母的只包含数字和字母的8-10位的字符串&lt;/li&gt;
&lt;/ul&gt;&lt;h5 id=&quot;逻辑表达&quot;&gt;1.3.1.3 逻辑表达&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;包含数字&lt;/li&gt;
&lt;li&gt;包含字母&lt;/li&gt;
&lt;li&gt;8-10位的数字和字母的组合（全匹配）&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;使用零宽负向先行断言&quot;&gt;1.3.2 使用零宽负向先行断言&lt;/h4&gt;
&lt;h5 id=&quot;代码实现-1&quot;&gt;1.3.2.1 代码实现&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;/^(?!\d+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,10}$/.test(str)&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;代码解释-1&quot;&gt;1.3.2.2 代码解释&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;(?!)&lt;/code&gt; 表达负向先行断言，满足非条件的其他匹配结果才为真，即括号内的表达式不匹配整个匹配结果才为真&lt;/li&gt;
&lt;li&gt;可以出现在代码的任意位置&lt;/li&gt;
&lt;li&gt;不占用最终的匹配宽度&lt;/li&gt;
&lt;li&gt;这里表达不全为数字且不全为字母的只包含数字和字母的8-10位的字符串&lt;/li&gt;
&lt;/ul&gt;&lt;h5 id=&quot;逻辑表达-1&quot;&gt;1.3.2.3 逻辑表达&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;不全为数字的（全匹配）&lt;/li&gt;
&lt;li&gt;不全为字母的（全匹配）&lt;/li&gt;
&lt;li&gt;8-10位的数字和字母的组合（全匹配）&lt;/li&gt;
&lt;/ul&gt;&lt;h5 id=&quot;section&quot;&gt;1.3.2.4&lt;/h5&gt;
&lt;h4 id=&quot;如果不知道上面的方式可以拆分一下&quot;&gt;1.3.3 如果不知道上面的方式，可以拆分一下&lt;/h4&gt;
&lt;h5 id=&quot;代码实现-2&quot;&gt;1.3.3.1 代码实现&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;!/^\d+$/.test(str) &amp;amp;&amp;amp; !/^[a-zA-Z]+$/.test(str) &amp;amp;&amp;amp; /^[0-9a-zA-Z]{8,10}$/.test(str)&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;代码解释-2&quot;&gt;1.3.3.2 代码解释&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;不解释了，直接的逻辑表达&lt;/li&gt;
&lt;/ul&gt;&lt;h5 id=&quot;逻辑表达-2&quot;&gt;1.3.3.3 逻辑表达&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;不全为数字的（全匹配）&lt;/li&gt;
&lt;li&gt;不全为字母的（全匹配）&lt;/li&gt;
&lt;li&gt;8-10位的数字和字母的组合（全匹配）&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;如果不知道正则怎么玩也可以用字符判断的方式&quot;&gt;1.3.4 如果不知道正则怎么玩，也可以用字符判断的方式&lt;/h4&gt;
&lt;h5 id=&quot;代码实现-3&quot;&gt;1.3.4.1 代码实现&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;//考虑记不住ASCII码
var rangeChars = '09azAZ';
var char0Code = rangeChars.charCodeAt(0),
char9Code = rangeChars.charCodeAt(1),
charaCode = rangeChars.charCodeAt(2),
charzCode = rangeChars.charCodeAt(3),
charACode = rangeChars.charCodeAt(4),
charZCode = rangeChars.charCodeAt(5);

Array.from(str).every(char =&amp;gt; {
    return '0' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= '9' || 'a' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= 'z' || 'A' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= 'Z' 
});

Array.from(str).some(char =&amp;gt; {
    return '0' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= '9'
});

Array.from(str).some(char =&amp;gt; {
    return 'a' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= 'z' || 'A' &amp;lt;= char &amp;amp;&amp;amp; char &amp;lt;= 'Z' 
});

8 &amp;lt;= str.length &amp;amp;&amp;amp; str.length &amp;lt;= 10&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;最后是结果的输出&quot;&gt;1.4 最后是结果的输出&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;export const validationUtil = {
    isNameValid:(str) =&amp;gt; {
        //调用isNameValid 的同时，不应该有判断undefind,判断null的过程，表单取出来的不会有这俩值
        str += '';
        str = str.trim();
        return /^(?!\d+$)(?![a-zA-Z]+$)[0-9a-zA-Z]{8,10}$/.test(str);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;常见问题&quot;&gt;2 常见问题&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;校验不写trim&lt;/li&gt;
&lt;li&gt;正则不写首尾匹配&lt;/li&gt;
&lt;li&gt;/^[0-9a-zA-Z]{8,10}$/ 作为题目结果&lt;/li&gt;
&lt;li&gt;自己写出来的正则，自己也不知道啥意思&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;参考资料&quot;&gt;3 参考资料&lt;/h2&gt;
&lt;h3 id=&quot;正则书籍&quot;&gt;3.1 正则书籍&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;基础&lt;/li&gt;
&lt;li&gt;学习正则表达式&lt;/li&gt;
&lt;li&gt;正则表达式必知必会&lt;/li&gt;
&lt;li&gt;神奇的匹配&lt;/li&gt;
&lt;li&gt;进阶&lt;/li&gt;
&lt;li&gt;精通正则表达式&lt;/li&gt;
&lt;li&gt;正则指引&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;正则工具&quot;&gt;3.2 正则工具&lt;/h3&gt;
</description>
<pubDate>Sun, 04 Mar 2018 15:49:00 +0000</pubDate>
<dc:creator>钌子_rawbin</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rawbin/p/8506892.html</dc:identifier>
</item>
<item>
<title>webTest-----webUI自动化框架 - 邻居的尾巴</title>
<link>http://www.cnblogs.com/we8fans/p/8506884.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/we8fans/p/8506884.html</guid>
<description>&lt;h3 id=&quot;地址&quot;&gt;地址&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/wuranxu/webTest&quot; class=&quot;uri&quot;&gt;https://github.com/wuranxu/webTest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望大家能够喜欢!!!&lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;
&lt;p&gt;本框架基于Python3+selenium3+unittest组成，用户以Page Object的模式编写用例。元素的定位和操作按照页面划分，达到Web端自动化回归测试的目的，并生成测试报告。浏览器兼容性暂时未完善。&lt;br/&gt;本例子展示了一个必应首页搜索&quot;龙珠超&quot;的测试用例，比较简陋。&lt;/p&gt;
&lt;h3 id=&quot;运行日志&quot;&gt;运行日志&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-6b49d999bd81fd03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;过程截图&quot;&gt;过程截图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-2f1cb468358719c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;效果展示&quot;&gt;效果展示&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-fa525599b8c29947.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;快速上手&quot;&gt;快速上手&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;从远程仓库拉取代码&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code&gt;git clone https://github.com/wuranxu/webTest.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-535641f29e7df072.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;安装依赖包&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;进入下载好的webTest目录，并在此目录运行install.py&lt;br/&gt;mac/Linux: &lt;code&gt;python3 install.py&lt;/code&gt;&lt;br/&gt;windows: &lt;code&gt;python install.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-7d9a5b3777cc6297.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;运行demo&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在webTest目录输入命令(确保chrome浏览器已安装, 驱动会自行下载):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python run_case.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-3698662b1b177b18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;环境配置&quot;&gt;环境配置&lt;/h3&gt;
&lt;h5 id=&quot;注-无桌面版linux目前只做到支持firefox&quot;&gt;注: 无桌面版Linux目前只做到支持firefox&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;os: Windows/Mac os x/Linux&lt;/li&gt;
&lt;li&gt;Python3.x&lt;/li&gt;
&lt;li&gt;Chrome浏览器&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;目录结构&quot;&gt;目录结构&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;project

└───ErrorPic
|
└───DataBase
|
└───Log
|
└───Xmind
|
└───Page
|
└───Report
|
└───Page
|
└───TestSuite
|   |    base_case.py
|
└───templates
|   |   report_templates.html
└───TestResult
|   |   report_templates.html
|   |   GenerateReport.py
|   |   Result.py
|
└───chromedriver
│   │   chromedriver.exe
|
└───Tools
|   |   chrome.py
|   |   decorator.py
|   |   driver.py
|   |   logger.py
|   |   web_tool.py
|
│   README.md
│   run_case.py
|   requirements.txt    
│   config.py
|   webdriver_test.log
 
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;内容介绍&quot;&gt;内容介绍&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;chromedriver&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;存放chromedriver驱动, 若本机未安装chromedriver则自动匹配本机chrome版本下载对应驱动。&lt;/p&gt;
&lt;p&gt;存放Mysql和Mongodb的连接类&lt;/p&gt;
&lt;p&gt;存放出错截图, 目前根据用例名称创建文件夹并存放。&lt;/p&gt;
&lt;p&gt;存放所有日志文件, 目前只有webdriver_test.log, 主要目的是将日志区分开来。&lt;/p&gt;
&lt;p&gt;页面目录, 可扩展, 针对不同模块的页面可设计不同目录结构。一般存放该页面的操作(Action)以及元素(Location), 用例具体断言不建议写于此处(因人而异)。&lt;/p&gt;
&lt;p&gt;存放测试报告，为html形式，可右键通过浏览器打开，使用chrome效果尤佳。&lt;/p&gt;
&lt;p&gt;存放html模板，传入测试结果以生成测试报告。&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li&gt;
&lt;p&gt;TestResult&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;GenerateReport.py&lt;/p&gt;
&lt;p&gt;是组织测试结果, 生成测试报告, 填入数据至html报告模板的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Result.py&lt;/p&gt;
&lt;p&gt;继承自unittest.TextTestResult类, 存放测试结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TestSuite&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;测试套件目录, 可扩展, 子目录为某个测试集。测试集中存放测试用例。&lt;/p&gt;
&lt;ul readability=&quot;7&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;base_case.py&lt;/p&gt;
&lt;p&gt;存放基础测试用例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tools&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;chrome.py&lt;/p&gt;
&lt;p&gt;用于更新/下载chromedriver, 目前只支持mac os和windows系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;decorator.py&lt;/p&gt;
&lt;p&gt;用于存放自动截图/重跑等装饰器, 主要是为测试函数添加错误截图以及重跑等功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;driver.py&lt;/p&gt;
&lt;p&gt;继承自WebDriver类, 主要用于简化原生api以及添加切换frame/handle等api。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;logger.py&lt;/p&gt;
&lt;p&gt;记录日志的功能函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;web_tool.py&lt;/p&gt;
&lt;p&gt;用于Web自动化测试的工具类, 包括截图、获取用例等方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;xmind_reader.py&lt;/p&gt;
&lt;p&gt;用于解析xmind文件，暂时不支持过于复杂的xmind。用例的大概编写方式如下图。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-4f08935ff9ddff18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xmind&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;存放Xmind文件, xmind文件用于编写测试用例。&lt;/p&gt;
&lt;p&gt;用于存放绝大部分配置。继承于BaseConf类, 可拥有自己的配置。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;requirements.txt&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;用于存放本框架所需库。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;run_case.py&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;存放组织用例, 生成测试套件, 运行测试用例等函数。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;webdriver_test.log&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;存放测试用例执行时候的有关操作和错误信息等。&lt;/p&gt;
&lt;h4 id=&quot;注-以上目录结构命名可能并不合理-还望海涵&quot;&gt;注: 以上目录结构/命名可能并不合理, 还望海涵。&lt;/h4&gt;
&lt;hr/&gt;&lt;h3 id=&quot;使用手册&quot;&gt;使用手册&lt;/h3&gt;
&lt;h5 id=&quot;以下内容若已安装-可跳过&quot;&gt;以下内容若已安装, 可跳过。&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;安装Python3&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://www.python.org/downloads/release/python-364/&quot;&gt;Python3.6下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载对应操作系统的Python版本并安装。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;下载IDE(非必须)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;推荐Pycharm&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;Pycharm下载地址&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;安装必须的库&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;目录中有install.py, 安装好Python之后, 在终端窗口中输入如下命令:&lt;/p&gt;
&lt;p&gt;Linux/mac: &lt;code&gt;python3 install.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;windows: &lt;code&gt;python install.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意: 安装时需要带上install.py路径或者进入该文件所在目录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-01ed844c0870d6c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;选择webTest目录, 点击窗口右下角的Open&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-cd6a91df8687e4c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开Preferences, 在Project Interpreter里选择刚才安装Python的地址, 点击OK&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-e4ad74e6fc94703b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;第二步: 配置run_case.py&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;点击Edit Configurations&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-7e2c8d7c3be8afb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果没有Python配置的话, 点击图中&quot;+&quot;图标, 然后选择Python并添加&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-5036e9d36e54da08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-92391a98b0d090c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置脚本&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-9bb907d9d3df9026.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;第三步: 运行用例&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;右击run_case.py, 选择Run则为运行模式, Debug则为调试模式&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/6053915-9eae73a79ef61182.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;用例编写规则&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Python:&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li&gt;可参考Search.py编写用例(最好用例的类名不重复)&lt;/li&gt;
&lt;li&gt;用例需要写在TestSuite/测试集/这种目录下&lt;/li&gt;
&lt;li&gt;用例需要继承base_case.py&lt;/li&gt;
&lt;li&gt;用例需要以test开头如test_bmp&lt;/li&gt;
&lt;li&gt;用例的test函数需要带上screenshot的装饰器, 不带无截图功能&lt;/li&gt;
&lt;li&gt;报告会按照时间生成, 且会写入2份report.html&lt;/li&gt;
&lt;li&gt;日志在webdriver_test.log查看&lt;/li&gt;
&lt;li&gt;Page页面编写此页面需要的操作及元素&lt;/li&gt;
&lt;li&gt;Location类是封装了WebElement, 其中包含name, value, 默认以css方式定位&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Location类实例化的时候可指定第三个参数, 方便使用其他定位的同学。如:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;menu = Location(&quot;大后台左侧菜单&quot;, &quot;.menuItem&quot;, &quot;XPATH&quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Xmind:&lt;/p&gt;
&lt;ul readability=&quot;14.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;画布(必填)&lt;/p&gt;
&lt;p&gt;为TestSuite名, 可允许重复画布名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根元素(必填)&lt;/p&gt;
&lt;p&gt;为用例的Class名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;描述(最好有)&lt;/p&gt;
&lt;p&gt;为该用例的测试点&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;页面(必填)&lt;/p&gt;
&lt;p&gt;需要填写Page下的页面, 子节点为其页面下需要用到的方法, 方法后如果还有子节点，则为该方法返回值, 若有多个返回值则用;分割且该返回值会被保留方便做断言&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;跳过(不填默认生成用例)&lt;/p&gt;
&lt;p&gt;不为True的时候均会生成用例&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;重跑次数(可选)&lt;/p&gt;
&lt;p&gt;用例若失败, 重新运行的次数, 默认为0。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;14&quot;&gt;
&lt;p&gt;步骤(必填)&lt;/p&gt;
&lt;p&gt;子节点为页面方法或断言, 若以assert开头则为断言, 否则则判断为方法, 若在页面中忘了填写该方法, 则调用系统内部方法。&lt;/p&gt;
&lt;p&gt;方法节点的子节点为参数, 同样以;分割。&lt;/p&gt;
&lt;p&gt;断言的子节点为2或3个, 如assertEqual, 可理解是&lt;code&gt;A==B?true:msg&lt;/code&gt;, 最后一个参数是msg, 具体出错原因。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;已知缺陷
&lt;ol&gt;&lt;li&gt;截止到现在还未支持非页面方法调用如print;&lt;/li&gt;
&lt;li&gt;不支持导入本用例需要的其他类库;&lt;/li&gt;
&lt;li&gt;其他不爽的有待补充。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;亮痛点&quot;&gt;亮痛点&lt;/h3&gt;
&lt;ul readability=&quot;11&quot;&gt;&lt;li&gt;
&lt;p&gt;浏览器驱动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;问题: 浏览器驱动偶尔会与浏览器对应不上&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;解决方案: 自动下载, 但只针对mac/win下的chrome, 且版本不能太低。firefox不支持, 任性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集成jenkins&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;问题: centos6.x不带桌面无法运行UI自动化用例&lt;/li&gt;
&lt;li readability=&quot;19&quot;&gt;
&lt;p&gt;解决方案:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;phantomJs(不合适, 还是要写出来)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;新版selenium使用的时候会提示被废弃, 建议用无头模式取代, 且运行不稳定。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Chrome无头模式(centos7以上应可行)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;由于jenkins所在机器centos6.x版本过低, 被Chrome放弃支持, Chrome浏览器无法安装&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Firefox无头模式(目测不可行, 测太多次了记不住)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Firefox可正常安装, 但是geckodriver比较挑浏览器版本, 多次试验不成功, 换了无数个浏览器版本+geckodriver版本后已经忘了是否可行。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Firefox+虚拟桌面(目前解决方案)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;见用例driver.py文件。但不完美, 错误截图显示的网页内容都····一言难尽, 好像一个瞎子终于重获光明却发现自己满脸麻子。回到正题, 为什么不自动同步firefox驱动, 因为在c方案卡壳太久比较恶心。&lt;/p&gt;
&lt;p&gt;版本信息:&lt;/p&gt;
&lt;p&gt;geckodriver0.16&lt;/p&gt;
&lt;p&gt;selenium&amp;gt;=3.4&lt;/p&gt;
&lt;p&gt;firefox52.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试报告&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;由于邮件不支持js和引入的css, 导致报告巨难看。所以采用了附件形式, 目前是个比较大的痛点。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Page Object&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;关于po, 确实也没有很深的研究, 只等小白鼠试水了。&lt;/p&gt;
&lt;p&gt;api封装得还不够多, 除了常用方法以外。但是基本上每个方法都插入了显示等待, 大大降低了元素找不到, 点不到, 各种不到的可能性。&lt;/p&gt;
&lt;p&gt;解决了使用装饰器重跑用例不执行setUp+tearDown的问题。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;错误截图&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;截图用base64保存, 所以只有错误的时候才会截图。因为base64太大。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Xmind编写用例&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这算一个小亮点吧。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;自动化配置环境&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;已完成, 方便使用。&lt;/p&gt;
&lt;p&gt;支持mongo和mysql。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;执行效率&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;目前是单线程, 还没做多线程, 时间紧迫。所以在jenkins那台老爷机比较慢, 如果用例多起来了肯定是不行的。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;代码规范/质量&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;写得一塌糊涂, 大家看不过去就帮忙改了吧, 跪谢orz&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 15:46:00 +0000</pubDate>
<dc:creator>邻居的尾巴</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/we8fans/p/8506884.html</dc:identifier>
</item>
<item>
<title>WinSock WSAEventSelect 模型总结 - TanGuoying</title>
<link>http://www.cnblogs.com/tanguoying/p/8506821.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tanguoying/p/8506821.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;本文配套代码：&lt;a href=&quot;https://github.com/TTGuoying/WSAEventSelect-model&quot; target=&quot;_blank&quot;&gt;https://github.com/TTGuoying/WSAEventSelect-model&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;span&gt;由于篇幅原因，本文假设你已经熟悉了利用Socket进行TCP/IP编程的基本原理，并且也熟练的掌握了多线程编程技术，太基本的概念我这里就略过不提了，网上的资料应该遍地都是。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　上一篇文章介绍的&lt;a href=&quot;http://www.cnblogs.com/tanguoying/p/8439701.html&quot; target=&quot;_blank&quot;&gt;IOCP模型&lt;/a&gt;主要用于服务器，客户端的话一般&lt;span&gt;用&lt;/span&gt;WSAEventSelect模型，下面介绍 WSAEventSelect 模型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　由于网络编程中数据何时到来的不可预知，如果我们在线程中用recv()函数一直等待数据的到来会造成cpu的极大浪费，事件选择(WSAEventSelect)模型可以避免这个问题。事件选择(WSAEventSelect)模型原理是：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;WSAEventSelect模型是Windows Sockets提供的一个有用异步I/O模型。该模型允许在一个或者多个套接字上接收以事件为基础的网络事件通知。Windows Sockets应用程序在创建套接字后，调用WSAEventSelect()函数，将一个事件对象与网络事件集合关联在一起。当网络事件发生时，应用程序以事件的形式接收网络事件通知。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;基本流程 &lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;para&quot; readability=&quot;41.410932260228&quot;&gt;
&lt;ol readability=&quot;3.5&quot;&gt;&lt;li readability=&quot;-2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;初始化网络环境，创建一个监听的socket，然后进行connect操作。接下来WSACreateEvent()创建一个网络事件对象，其声明如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
WSAEVENT WSACreateEvent(&lt;span&gt;void&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回一个手工重置的事件对象句柄&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;1.5&quot;&gt;&lt;span&gt;&lt;span&gt;再调用WSAEventSelect，来将监听的socket与该事件进行一个关联，其声明如下：&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;int&lt;/span&gt;&lt;span&gt; WSAEventSelect(    
  SOCKET s,                 &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;套接字  &lt;/span&gt;
  WSAEVENT hEventObject,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;网络事件对象  &lt;/span&gt;
  &lt;span&gt;long&lt;/span&gt; lNetworkEvents       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;需要关注的事件  &lt;/span&gt;
); 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;我们客户端只关心FD_READ和FD_CLOSE操作，所以第三个参数传FD_READ | FD_CLOSE。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.5&quot;&gt;&lt;span&gt;&lt;span&gt;启动一个线程调用WSAWaitForMultipleEvents等待1中的event事件，其声明如下：&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;DWORD WSAWaitForMultipleEvents(    
  DWORD cEvents,                  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指定了事件对象数组里边的个数，最大值为64  &lt;/span&gt;
  &lt;span&gt;const&lt;/span&gt; WSAEVENT FAR *lphEvents,  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;事件对象数组  &lt;/span&gt;
  BOOL fWaitAll,                  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;等待类型，TRUE表示要数组里全部有信号才返回，FALSE表示至少有一个就返回，这里必须为FALSE  &lt;/span&gt;
  DWORD dwTimeout,                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;等待的超时时间  &lt;/span&gt;
  BOOL fAlertable                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;当系统的执行队列有I/O例程要执行时，是否返回，TRUE执行例程返回，FALSE不返回不执行，这里为FALSE  &lt;/span&gt;
);  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;由于我们是客户端，所以只等待一个事件。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;12.5&quot;&gt;&lt;span&gt;&lt;span&gt;当事件发生，我们需要调用WSAEnumNetworkEvents，来检测指定的socket上的网络事件。其声明如下：&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;int&lt;/span&gt;&lt;span&gt; WSAEnumNetworkEvents  
(    
  SOCKET s,                             &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指定的socket  &lt;/span&gt;
  WSAEVENT hEventObject,                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;事件对象  &lt;/span&gt;
  LPWSANETWORKEVENTS lpNetworkEvents    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;WSANETWORKEVENTS&amp;lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;&quot;&amp;gt;结构地址&amp;lt;/span&amp;gt;  &lt;/span&gt;
);  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;当我们调用这个函数成功后，它会将我们指定的socket和事件对象所关联的网络事件的信息保存到WSANETWORKEVENTS这个结构体里边去，我们来看下这个结构体的声明：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
typedef &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; _WSANETWORKEVENTS {  
  &lt;/span&gt;&lt;span&gt;long&lt;/span&gt;     lNetworkEvents;&amp;lt;span style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;white-space:pre&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;          &amp;lt;/span&amp;gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指定了哪个已经发生的网络事件  &lt;/span&gt;
  &lt;span&gt;int&lt;/span&gt;      iErrorCodes[FD_MAX_EVENTS];&amp;lt;span style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;white-space:pre&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;      &amp;lt;/span&amp;gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;错误码  &lt;/span&gt;
} WSANETWORKEVENTS, *LPWSANETWORKEVENTS;  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;根据这个结构体我们就可以判断是否是我们所关注的网络事件已经发生了。如果是我们的读的网络事件发生了，那么我们就调用recv函数进行操作。若是关闭的事件发生了，就调用closesocket将socket关掉，在数组里将其置零等操作。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;　　整个模型的流程图如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/832024/201803/832024-20180304231122015-1681972784.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;实现&lt;strong&gt;(配合&lt;a href=&quot;http://www.cnblogs.com/tanguoying/p/8439701.html&quot; target=&quot;_blank&quot;&gt;IOCP服务器类&lt;/a&gt;测试更佳)&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;#pragma&lt;/span&gt; once
&lt;span&gt; 2&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stdafx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; #include &amp;lt;WinSock2.h&amp;gt;
&lt;span&gt; 4&lt;/span&gt; #include &amp;lt;Windows.h&amp;gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 释放指针的宏&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; RELEASE(x)            {if(x != NULL) {delete x; x = NULL;}}
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 释放句柄的宏&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; RELEASE_HANDLE(x)    {if(x != NULL &amp;amp;&amp;amp; x != INVALID_HANDLE_VALUE) { CloseHandle(x); x = INVALID_HANDLE_VALUE; }}
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 释放Socket的宏&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; RELEASE_SOCKET(x)    {if(x != INVALID_SOCKET) { closesocket(x); x = INVALID_SOCKET; }}
&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ClientBase
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    ClientBase();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     ~&lt;span&gt;ClientBase();
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 启动通信&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     BOOL Start(&lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; *&lt;span&gt;IPAddress, USHORT port);    
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 关闭通信&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    BOOL Stop();    
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 发送数据&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     BOOL Send(&lt;span&gt;const&lt;/span&gt; BYTE* buffer, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; len);    
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 是否已启动&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    BOOL HasStarted();    
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件通知函数(派生类重载此族函数)
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 连接关闭&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnConnectionClosed() = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 连接上发生错误&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnConnectionError() = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 读操作完成&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnRecvCompleted(BYTE* buffer, &lt;span&gt;int&lt;/span&gt; len) = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 写操作完成&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnSendCompleted() = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; 
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 接收线程函数&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt; DWORD WINAPI RecvThreadProc(LPVOID lpParam); 
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; socket是否存活&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt; &lt;span&gt;    BOOL IsSocketAlive(SOCKET sock);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    SOCKET clientSock;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    WSAEVENT socketEvent;
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;    HANDLE stopEvent;
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;    HANDLE thread;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; };
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientBase.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; #include &amp;lt;WS2tcpip.h&amp;gt;
&lt;span&gt;  3&lt;/span&gt; 
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;WS2_32.lib&quot;)
&lt;span&gt;  5&lt;/span&gt; 
&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;ClientBase::ClientBase()
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;    WSADATA wsaData;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt;     WSAStartup(MAKEWORD(&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;), &amp;amp;&lt;span&gt;wsaData);
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; 
&lt;span&gt; 12&lt;/span&gt; 
&lt;span&gt; 13&lt;/span&gt; ClientBase::~&lt;span&gt;ClientBase()
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;    WSACleanup();
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; 
&lt;span&gt; 18&lt;/span&gt; BOOL ClientBase::Start(&lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; *&lt;span&gt;IPAddress, USHORT port)
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;     clientSock =&lt;span&gt; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (clientSock ==&lt;span&gt; INVALID_SOCKET)
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;     socketEvent =&lt;span&gt; WSACreateEvent();
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     stopEvent =&lt;span&gt; CreateEvent(NULL, FALSE, FALSE, NULL);
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; 
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    sockaddr_in serAddr;
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;     serAddr.sin_family =&lt;span&gt; AF_INET;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     serAddr.sin_port =&lt;span&gt; htons(port);
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;     inet_pton(AF_INET, IPAddress, &amp;amp;&lt;span&gt;serAddr.sin_addr);
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;serAddr.sin_addr.S_un.S_addr = inet_addr(IPAddress);&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (connect(clientSock, (sockaddr *)&amp;amp;serAddr, &lt;span&gt;sizeof&lt;/span&gt;(serAddr)) ==&lt;span&gt; SOCKET_ERROR)
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     {  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接失败   &lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;        closesocket(clientSock);
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;0&lt;/span&gt; != WSAEventSelect(clientSock, socketEvent, FD_READ |&lt;span&gt; FD_CLOSE))
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; 
&lt;span&gt; 39&lt;/span&gt;     thread = CreateThread(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, RecvThreadProc, (&lt;span&gt;void&lt;/span&gt; *)&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;BOOL ClientBase::Stop()
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;    SetEvent(stopEvent);
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;    WaitForSingleObject(thread, INFINITE);
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;    RELEASE_SOCKET(clientSock);
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;    WSACloseEvent(socketEvent);
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;    RELEASE_HANDLE(stopEvent);
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; 
&lt;span&gt; 53&lt;/span&gt; BOOL ClientBase::Send(&lt;span&gt;const&lt;/span&gt; BYTE * buffer, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; len)
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (SOCKET_ERROR == send(clientSock, (&lt;span&gt;char&lt;/span&gt;*)buffer, len, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; 
&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;BOOL ClientBase::HasStarted()
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; 
&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;DWORD ClientBase::RecvThreadProc(LPVOID lpParam)
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (lpParam ==&lt;span&gt; NULL)
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; 
&lt;span&gt; 72&lt;/span&gt;     ClientBase *client = (ClientBase *&lt;span&gt;)lpParam;
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;     DWORD ret = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; index = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;    WSANETWORKEVENTS networkEvent;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;     HANDLE events[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     events[&lt;span&gt;0&lt;/span&gt;] = client-&amp;gt;&lt;span&gt;socketEvent;
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;     events[&lt;span&gt;1&lt;/span&gt;] = client-&amp;gt;&lt;span&gt;stopEvent;
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; 
&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         ret = WSAWaitForMultipleEvents(&lt;span&gt;2&lt;/span&gt;&lt;span&gt;, events, FALSE, INFINITE, FALSE);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (ret == WSA_WAIT_FAILED || ret ==&lt;span&gt; WSA_WAIT_TIMEOUT)
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;             &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;         index = ret -&lt;span&gt; WSA_WAIT_EVENT_0;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (index == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;             WSAEnumNetworkEvents(client-&amp;gt;clientSock, events[&lt;span&gt;0&lt;/span&gt;], &amp;amp;&lt;span&gt;networkEvent);
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (networkEvent.lNetworkEvents &amp;amp;&lt;span&gt; FD_READ)
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (networkEvent.iErrorCode[FD_READ_BIT != &lt;span&gt;0&lt;/span&gt;&lt;span&gt;])
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;                     &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;                 &lt;span&gt;char&lt;/span&gt; *buff = (&lt;span&gt;char&lt;/span&gt;*)HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, &lt;span&gt;4096&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;                 ret = recv(client-&amp;gt;clientSock, buff, &lt;span&gt;4096&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (ret == &lt;span&gt;0&lt;/span&gt; || (ret == SOCKET_ERROR &amp;amp;&amp;amp; WSAGetLastError() ==&lt;span&gt; WSAECONNRESET))
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;                     client-&amp;gt;&lt;span&gt;OnConnectionClosed();
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;错误&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;                 client-&amp;gt;OnRecvCompleted((BYTE*&lt;span&gt;)buff, ret);
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (networkEvent.lNetworkEvents &amp;amp;&lt;span&gt; FD_CLOSE)
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; 
&lt;span&gt;108&lt;/span&gt;                 client-&amp;gt;&lt;span&gt;OnConnectionClosed();
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭&lt;/span&gt;
&lt;span&gt;110&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;113&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;             client-&amp;gt;&lt;span&gt;OnConnectionClosed();
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;             &lt;span&gt;break&lt;/span&gt;;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 退出&lt;/span&gt;
&lt;span&gt;116&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;         
&lt;span&gt;118&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; 
&lt;span&gt;122&lt;/span&gt; &lt;span&gt;BOOL ClientBase::IsSocketAlive(SOCKET sock)
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; #include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClientBase.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; #include &amp;lt;stdio.h&amp;gt;
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Client : &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ClientBase
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 连接关闭&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnConnectionClosed()
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;   Close\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 连接上发生错误&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnConnectionError()
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;   Error\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 读操作完成&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; OnRecvCompleted(BYTE* buffer, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; len)
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;recv[%d]:%s\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, len, (&lt;span&gt;char&lt;/span&gt;*&lt;span&gt;)buffer);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 写操作完成&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnSendCompleted()
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*Send success\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;};
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    Client client;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (!client.Start(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;127.0.0.1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;10240&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;   start error\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; 
&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;char&lt;/span&gt; buff[&lt;span&gt;128&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;scanf_s(&quot;%s&quot;, &amp;amp;buff, 128);&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;         
&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;         sprintf_s(buff, &lt;span&gt;128&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;第%d条Msg&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, i++&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;         Sleep(&lt;span&gt;500&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         client.Send((BYTE*)buff, strlen(buff)+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

</description>
<pubDate>Sun, 04 Mar 2018 15:18:00 +0000</pubDate>
<dc:creator>TanGuoying</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tanguoying/p/8506821.html</dc:identifier>
</item>
<item>
<title>03 Spring的父子容器 - nnngu</title>
<link>http://www.cnblogs.com/nnngu/p/8506812.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/nnngu/p/8506812.html</guid>
<description>&lt;h2 id=&quot;概念理解和知识铺垫&quot;&gt;1、概念理解和知识铺垫&lt;/h2&gt;
&lt;p&gt;在Spring整体框架的核心概念中，容器是核心思想，就是用来管理Bean的整个生命周期的，而在一个项目中，容器不一定只有一个，Spring中可以包括多个容器，而且容器有上下层关系，目前最常见的一种场景就是在一个项目中引入Spring和SpringMVC这两个框架，那么它其实就是两个容器，Spring是父容器，SpringMVC是其子容器，并且在父容器中注册的Bean对于子容器是可见的，而在子容器中注册的Bean对于父容器是不可见的，也就是子容器可以看见父容器中的注册的Bean，反之就不行。&lt;/p&gt;
&lt;p&gt;我们可以使用统一的如下注解配置来对Bean进行批量注册，而不需要再给每个Bean单独使用xml的方式进行配置。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; base-package=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;com.nnngu&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从Spring提供的参考手册中我们得知该配置的功能是扫描配置的base-package包下的所有使用了@Component注解的类，并且将它们自动注册到容器中，同时也扫描@Controller，@Service，@Respository这三个注解，因为他们是继承自@Component。&lt;/p&gt;
&lt;p&gt;在项目中我们经常见到还有如下这个配置，其实有了上面的配置，这个是可以省略掉的，因为上面的配置会默认打开以下配置。以下配置会默认声明了@Required、@Autowired、 @PostConstruct、@PersistenceContext、@Resource、@PreDestroy等注解。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;context:annotation-config/&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外，还有一个和SpringMVC相关如下配置，经过验证，这个是SpringMVC必须要配置的，因为它声明了@RequestMapping、@RequestBody、@ResponseBody等。并且，该配置默认加载很多的参数绑定方法，比如json转换解析器等。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;mvc:annotation-driven&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;使用场景分析&quot;&gt;2、使用场景分析&lt;/h2&gt;
&lt;p&gt;我们共有Spring和SpringMVC两个容器，它们的配置文件分别为applicationContext.xml和applicationContext-MVC.xml。&lt;/p&gt;
&lt;ol readability=&quot;3&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;在applicationContext.xml中配置了&lt;code&gt;&amp;lt;context:component-scan base-package=“com.nnngu&quot; /&amp;gt;&lt;/code&gt;，负责所有需要注册的Bean的扫描和注册工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;在applicationContext-MVC.xml中配置&lt;code&gt;&amp;lt;mvc:annotation-driven /&amp;gt;&lt;/code&gt;，负责SpringMVC相关注解的使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;启动项目我们发现SpringMVC无法进行跳转，将log的日志打印级别设置为DEBUG进行调试，发现SpringMVC容器中的请求好像没有映射到具体controller中。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;在applicationContext-MVC.xml中配置&lt;code&gt;&amp;lt;context:component-scan base-package=“com.nnngu&quot; /&amp;gt;&lt;/code&gt;，重启后，验证成功，springMVC跳转有效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;下面我们来查看具体原因，翻看源码，从SpringMVC的DispatcherServlet开始往下找，我们发现SpringMVC初始化时，会寻找SpringMVC容器中的所有使用了@Controller注解的Bean，来确定其是否是一个handler。1,2两步的配置使得当前springMVC容器中并没有注册带有@Controller注解的Bean，而是把所有带有@Controller注解的Bean都注册在Spring这个父容器中了，所以springMVC找不到处理器，不能进行跳转。&lt;/p&gt;
&lt;p&gt;而在第4步配置中，SpringMVC容器中也注册了所有带有@Controller注解的Bean，故SpringMVC能找到处理器进行处理，从而正常跳转。&lt;/p&gt;
&lt;h2 id=&quot;官方推荐配置&quot;&gt;3、官方推荐配置&lt;/h2&gt;
&lt;p&gt;在实际工程中会包括很多配置，我们按照官方推荐根据不同的业务模块来划分不同容器中注册不同类型的Bean：Spring父容器负责所有其他非@Controller注解的Bean的注册，而SpringMVC只负责@Controller注解的Bean的注册，使得他们各负其责、明确边界。配置方式如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;在applicationContext.xml中配置:&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- Spring容器中注册非@Controller注解的Bean --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; base-package=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;com.nnngu&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;kw&quot;&gt;&amp;lt;context:exclude-filter&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;annotation&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; expression=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;org.springframework.stereotype.Controller&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/context:component-scan&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;&lt;li&gt;applicationContext-MVC.xml中配置&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;co&quot;&gt;&amp;lt;!-- SpringMVC容器中只注册带有@Controller注解的Bean --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; base-package=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;com.nnngu&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; use-default-filters=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;kw&quot;&gt;&amp;lt;context:include-filter&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;annotation&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; expression=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;org.springframework.stereotype.Controller&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/context:component-scan&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;总结&quot;&gt;4、总结&lt;/h2&gt;
&lt;p&gt;我们在清楚了Spring和SpringMVC的父子容器关系、以及扫描注册的原理以后，根据官方建议，就可以很好把不同类型的Bean分配到不同的容器中进行管理。出现Bean找不到或者SpringMVC不能跳转以及事务的配置失效的问题时，我们就可以很快的定位以及解决问题了。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;本文永久更新地址：&lt;a href=&quot;https://github.com/nnngu/LearningNotes/blob/master/Spring/03%20Spring%E7%9A%84%E7%88%B6%E5%AD%90%E5%AE%B9%E5%99%A8.md&quot;&gt;https://github.com/nnngu/LearningNotes/blob/master/Spring/03%20Spring%E7%9A%84%E7%88%B6%E5%AD%90%E5%AE%B9%E5%99%A8.md&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 15:14:00 +0000</pubDate>
<dc:creator>nnngu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/nnngu/p/8506812.html</dc:identifier>
</item>
<item>
<title>springMVC,spring,mybatis全注解搭建框架--第一步，让框架跑起来 - 还是盼盼好</title>
<link>http://www.cnblogs.com/chengpanpan/p/8506794.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chengpanpan/p/8506794.html</guid>
<description>&lt;p&gt;自己从事java开发工作也有一年多了，自己却没有亲手搭建一个完整的框架。于是今天自己动手搭建一个，过程中遇到一些问题，倒腾了大半天终于搞定了。&lt;/p&gt;
&lt;p&gt;现在给大家分享一下过程，自己也记录下来，以后学习参考使用。&lt;/p&gt;
&lt;p&gt;我采用全注解的方式去搭建springMVC，spring,mybatis框架，同时自己也可以去配置xml，但是主要还是通过注解的方式来实现。参考的网上其它大神分享的方法，多多少少有些地方写的不清楚，也并不是完全通过注解去实现的。&lt;/p&gt;
&lt;p&gt;springboot可以真正说是零配置吧，后面我将给大家演示springboot搭建的过程。&lt;/p&gt;
&lt;p&gt;1.先介绍一下我使用的开发环境：&lt;/p&gt;
&lt;p&gt;    idea，jdk1.7,tomcat7.0，操作系统就不用介绍了(winddos10)。&lt;/p&gt;
&lt;p&gt;2.使用框架：&lt;/p&gt;
&lt;p&gt;  2.1：前台我使用freemarker模板，通常咋们说的ftl文件。&lt;/p&gt;
&lt;p&gt;  2.2:后台我使用springMVC,spring,mybatis。&lt;/p&gt;
&lt;p&gt;  2.3：数据库我使用mysql,也可以使用orcl，更换一下配置就OK。&lt;/p&gt;
&lt;p&gt;3.管理工具：&lt;/p&gt;
&lt;p&gt;   maven&lt;/p&gt;
&lt;p&gt;在开始贴出源码之前，我先贴出idea在创建maven项目以及在配置tomcat需要注意的几个问题，我在部署项目的时候，idea提示项目部署成功但是就是没有启动tomcat发布项目，搞了半天，真滴蛋疼。&lt;/p&gt;
&lt;p&gt;1.我的架构目录，设置source和resource不要忘记了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304213344672-1325740828.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.最关键的地方。&lt;/p&gt;
&lt;p&gt; 2.1：web Module Deployment Descriptor 后面的xml文件，是你项目的入口。一般是web.xml文件，检查路径是否正确。&lt;/p&gt;
&lt;p&gt;2.2：web Resource Directory 是对应你webapp下部署到tomcat的文件。&lt;/p&gt;
&lt;p&gt;2.3：source root 是你的源文件，检查是否正确。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304213857257-1164373064.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.有一个更重要的设置，大家务必要检查一下，不然项目就无法启动，也不报什么错误。就是下面截图的几个参数设置，要和你本地的jdk版本一致。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304215509343-414346605.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3.2：有个更更更重要的地方一定要检查一下，把你这些jar包都put到lib下面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304224002549-1411857557.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;4.其他的配置我就不说了，都一样。如果大家要这前面的过程，在评论说出来，我整理出一个word文档分享给大家。&lt;/p&gt;
&lt;p&gt;下面我就直接贴出源码了。&lt;/p&gt;
&lt;p&gt;pom.xml  .===这个地方我没有把版本组件提取出来，不过不影响使用，里面有些其他的jar在后面会使用其他的功能。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;         xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt; 
&lt;span&gt;  7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;cn.com.MyBigSys&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;MyBigSys&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 定义使用组件的版本，单独提取出来方便以后升级！ &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.reporting.outputEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.reporting.outputEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;spring.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.2.8.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;spring.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mybatis.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.3.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mybatis.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mySql-driver.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.1.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mySql-driver.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;durid.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0.27&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;durid.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fastjson.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;fastjson.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aspectj.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;aspectj.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mybatis-pagerHelper.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mybatis-pagerHelper.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mybatis-spring.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mybatis-spring.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mybatis-mapper.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.3.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mybatis-mapper.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jsqlparser.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0.9.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jsqlparser.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;log4j.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;log4j.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dom4j.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.6.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dom4j.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aopalliance.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;aopalliance.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fileupload.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;fileupload.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jackson-mapper-asl.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.9.13&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jackson-mapper-asl.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jackson.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.5.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jackson.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;quartz.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;quartz.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;commons-lang3.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;commons-lang3.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;commons-codec.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;commons-codec.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-api.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-api.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jsp-api.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jsp-api.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;junit.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;junit.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;httpclient.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.3.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;httpclient.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;httpmime.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.1.3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;httpmime.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;lombok.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.14.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;lombok.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; 
&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 声明项目需要的依赖组件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt; 
&lt;span&gt; 44&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jbarcode&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;含spring的jar包&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-beans&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt; 
&lt;span&gt; 56&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-webmvc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 68&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-aop&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-jdbc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context-support&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-web&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${spring.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.data&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-data-jpa&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.2.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 95&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt; 
&lt;span&gt; 97&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.data&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-data-commons&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.5.1.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;使用freemarker语法jar&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.freemarker&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;freemarker&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.3.20&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;108&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;109&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-dbcp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;110&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-dbcp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;111&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;113&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;关于log4j日志jar&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;114&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;115&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.slf4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;116&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;slf4j-log4j12&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.7.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;119&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;120&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;121&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;122&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;124&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;125&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;126&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;127&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;128&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;129&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;130&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;131&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;132&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;133&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.javassist&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javassist&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.18.0-GA&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;138&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;139&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;140&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;141&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;junit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;142&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.11&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;143&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;144&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;145&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;146&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-beanutils&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;147&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-beanutils&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;148&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8.3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;149&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;150&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;151&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;152&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;servlet-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;153&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;154&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;provided&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;155&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;156&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;157&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;158&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jsp-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;159&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;160&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;provided&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;161&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;162&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;mybatis使用jar&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;163&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;164&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.generator&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;165&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-generator-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;166&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;167&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;compile&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;168&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;169&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;170&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;171&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;172&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;173&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.2.6&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;174&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;175&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;176&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;177&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;178&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;179&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;180&lt;/span&gt; 
&lt;span&gt;181&lt;/span&gt; 
&lt;span&gt;182&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;连接oral驱动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;183&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;184&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.oracle&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;185&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ojdbc6&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;186&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;11.2.0.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;187&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;188&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;连接mysql驱动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;189&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;191&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;192&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.1.38&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;193&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;194&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;195&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.ibatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;196&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ibatis-sqlmap&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;197&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.3.4.726&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;198&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;199&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;200&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.jacob&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;201&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jacob&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;202&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.17&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;203&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;204&lt;/span&gt; 
&lt;span&gt;205&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;206&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.commons&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;207&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-compress&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;208&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;209&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;210&lt;/span&gt; 
&lt;span&gt;211&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;212&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.commons&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;213&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-lang3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;214&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.3.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;215&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;216&lt;/span&gt; 
&lt;span&gt;217&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;218&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;219&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;fastjson&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;220&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.1.28&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;222&lt;/span&gt; 
&lt;span&gt;223&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;224&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.persistence&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;225&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;persistence-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;226&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;227&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;228&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;229&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.amqp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;230&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-rabbit&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;231&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.3.6.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;232&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;233&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;234&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.aspectj&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;235&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;aspectjweaver&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;236&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;237&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;238&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;239&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.aspectj&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;240&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;aspectjrt&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;241&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;242&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;243&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;244&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;QRCode&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;245&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;QRCode&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;246&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;247&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;248&lt;/span&gt; 
&lt;span&gt;249&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;250&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;net.sf.json-lib&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;251&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;json-lib&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;252&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;253&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jdk15&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;254&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;255&lt;/span&gt; 
&lt;span&gt;256&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;257&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.quartz-scheduler&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;258&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;quartz&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;259&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8.5&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;260&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;261&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;262&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;263&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.servlet-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;264&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;265&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;266&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;267&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.projectlombok&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;268&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;lombok&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;269&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.16.10&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;270&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;271&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;新增jar包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;272&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;273&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.security&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;274&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-security-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;275&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.0.7.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;276&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;277&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;阿里巴巴druid数据库jar包&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;278&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;279&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;280&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;druid&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;281&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.1.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;282&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;283&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;284&lt;/span&gt; 
&lt;span&gt;285&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;286&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;287&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;288&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;289&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;maven-war-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;290&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;291&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;292&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;293&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;294&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;295&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.3.2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;296&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;version&amp;gt;3.1&amp;lt;/version&amp;gt; &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;297&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;298&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;299&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.7&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;300&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;encoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;encoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;301&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;compilerArguments&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;302&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;verbose &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;303&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bootclasspath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${java.home}/lib/rt.jar;${java.home}/lib/jce.jar&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bootclasspath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;304&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;compilerArguments&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;305&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;306&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;307&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;308&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;309&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.web.xml文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;web-app &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;         xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;         version&lt;/span&gt;&lt;span&gt;=&quot;3.1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;SSMTest&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;SSMTest Application&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置spring启动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:application.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            org.springframework.web.context.ContextLoaderListener
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;encodingFilter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;encoding&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;forceEncoding&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;encodingFilter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/*&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置springmvc启动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springMVC&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;            org.springframework.web.servlet.DispatcherServlet
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:spring-mvc.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;springMVC&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;web-app&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6.下面来说src下的目录结构，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304221148221-102994326.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;7.application.xml 文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;       xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt; xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;       xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt; xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;       xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/beans
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/context
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/context/spring-context-3.2.xsd
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/tx
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/aop
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 加载数据库配置文件&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:property-placeholder &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;classpath:jdbc.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&lt;/span&gt;&lt;span&gt; init-method&lt;/span&gt;&lt;span&gt;=&quot;init&quot;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;          destroy-method&lt;/span&gt;&lt;span&gt;=&quot;close&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;数据库驱动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;driverClassName&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.driver}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;连接数据库的url&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;url&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.url}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;连接数据库的用户名&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.username}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;连接数据库的密码&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.password}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;最大连接数&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;maxActive&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.maxActive}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;最大空闲数&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;maxIdle&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.maxIdle}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;初始化连接数&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;initialSize&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.initialSize}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:annotation-driven&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置事务管理器，依赖于数据源&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;transCation&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置session工厂&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;sqlSeeesionFactory&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;configLocation&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;classpath:mybatis.xml&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;mapper动态代理开发&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;basePackage&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;com.panpan.service&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;8.spring-mvc.xml文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;       xmlns:mvc&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;&lt;span&gt; xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;       xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt; xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;       xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/mvc
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/context
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        http://www.springframework.org/schema/context/spring-context-3.2.xsd &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;spring2.5以后不需要配置注解启动&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;context:annotation-config/&amp;gt;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    &amp;amp;lt;!&amp;amp;ndash; 启用spring mvc 注解 &amp;amp;ndash;&amp;amp;gt;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置使用注解的类所在的jar包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;context:component-scan base-package=&quot;com.xxx.webController&quot; /&amp;gt; &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:annotation-driven &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan &lt;/span&gt;&lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;com.panpan&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:default-servlet-handler&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 完成请求和注解POJO的映射 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;freemark配置&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;freemarkConfig&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.beans.factory.config.PropertiesFactoryBean&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;location&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;classpath:freemarker.properties&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;viewResolver&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;viewClass&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerView&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;cache&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suffix&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;.ftl&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;contentType&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;freeMarkerConfigurer&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;templateLoaderPath&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;/WEB-INF/views/&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;freemarkerSettings&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;freemarkConfig&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;9.mybatis.xml文件，mybatis和spring整合之后配置文件很简单了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE configuration
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;settings&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置实体类与数据库字段驼峰命名&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;setting &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;mapUnderscoreToCamelCase&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;settings&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置别名 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;typeAliases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 2. 指定扫描包，会把包内所有的类都设置别名，别名的名称就是类名，大小写不敏感 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;com.panpan.entity&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;typeAliases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10.log4j.properties日志文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;log4j.rootLogger=info,Console
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;log4j.appender.Console=org.apache.log4j.ConsoleAppender
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;log4j.appender.Console.encoding=utf-8
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;log4j.appender.Console.layout=org.apache.log4j.PatternLayout
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;log4j.appender.Console.layout.ConversionPattern=[%c]%m%n
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;#log4j.appender.File=org.apache.log4j.RollingFileAppender 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;log4j.appender.File=org.apache.log4j.DailyRollingFileAppender 
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;log4j.appender.File.DatePattern = '.'yyyy-MM-dd 
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;log4j.appender.File.File=logs/SpringMvc.log
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;#log4j.appender.File.MaxFileSize=10MB
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;log4j.appender.File.Threshold=ALL
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;log4j.appender.File.layout=org.apache.log4j.PatternLayout
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; log4j.appender.File.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH\:mm\:ss,SSS}][%c]%m%n
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;11.freemarker.properties文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;tag_syntax=auto_detect 
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;template_update_delay=60
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;default_encoding=UTF-8 
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;output_encoding=UTF-8 
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;locale=zh_CN 
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;date_format=yyyy-MM-dd 
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;time_format=HH\:mm\:ss 
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;datetime_format=yyyy-MM-dd HH\:mm\:ss
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt; number_format=\#
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;12.jdbc.properties数据库连接配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;jdbc.driver=com.mysql.jdbc.Driver
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;jdbc.url=jdbc:mysql://localhost:3306/school_bl
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;jdbc.username=root
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;jdbc.password=root
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;jdbc.maxActive=30
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;jdbc.maxIdle=10
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; jdbc.initialSize=5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;13.实体类User.java这里我采用了lombok提供的@Data注解，省去了getter和setter方法。pom.xml中引入lombok依赖，如果使用idea，那在安装一下lombok的插件就可以使用啦。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.panpan.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lombok.Data;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Id;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Table;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * Created by panpan on 2018/2/27.
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; @Table(name = &quot;user&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;@Data
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    @Id
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String id;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String loginName;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String loginPassword;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;14.user接口定义，这个也不需要实现类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.panpan.service.inter;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.panpan.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Select;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * Created by panpan on 2018/3/2.
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; UserInter {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     @Select(&quot;select * from school_bl.user t where t.id=#{id}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; User findById(String id);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     @Select(&quot;select * from school_bl.user&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt;&lt;span&gt; findAll();
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;15.controller控制器层&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.panpan.webController;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.panpan.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.panpan.service.inter.UserInter;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.ResponseBody;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt; * Created by panpan on 2018/2/18.
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; @RequestMapping(&quot;sys&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Login {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    UserInter userInter;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     ModelAndView modelAndView = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ModelAndView();
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt;     @RequestMapping(&quot;login&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView getLogin() {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;         User user = userInter.findById(&quot;1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         modelAndView.addObject(&quot;user&quot;&lt;span&gt;, user);
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         modelAndView.setViewName(&quot;login/login&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;     @RequestMapping(&quot;getAllUsers&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView getAllUsers() {
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         List&amp;lt;User&amp;gt; users =&lt;span&gt; userInter.findAll();
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         modelAndView.addObject(&quot;users&quot;&lt;span&gt;, users);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         modelAndView.setViewName(&quot;test&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;16.把以上的都写完之后，咱们来看看web-app下面的目录结构，这些就是页面啦，先测试一下，让整个框架跑起来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304224542541-1806258170.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304224633274-1232263649.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;17.test.ftl页面&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;#if &lt;/span&gt;&lt;span&gt;users??&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;#list &lt;/span&gt;&lt;span&gt;users as user &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${user.id!}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; ${user.loginName!}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${user.loginPassword!}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;#list&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;#if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;18.login.ftl页面&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    ${user.id!}
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    ${user.loginName!}
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    ${user.loginPassword!}
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;19.mysql数据库结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304225251367-2114671588.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304225824939-1788573040.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;20.然后就可以把程序跑起来了，看的以下结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304225528774-556755718.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1144581/201803/1144581-20180304225723636-99751297.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ok啦，框架能正常跑起来了，后面第二次内容将会添加更新，插入和删除数据，包括前台获取参数，分页查询。&lt;/p&gt;
&lt;p&gt;感谢各位大牛们能看到结尾，如果有问题的地方可以在评论提出来，大家一起交流学习，您们的点评就是我学习的动力！&lt;/p&gt;
&lt;p&gt;如果需要源码的话，也留个言哦，我把gtiHup上的地址给大家。&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 15:08:00 +0000</pubDate>
<dc:creator>还是盼盼好</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chengpanpan/p/8506794.html</dc:identifier>
</item>
<item>
<title>我博客上的围棋js程序 - 窗户</title>
<link>http://www.cnblogs.com/Colin-Cai/p/8506691.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Colin-Cai/p/8506691.html</guid>
<description>&lt;p&gt;　　作为一个围棋爱好者，就决定在博客里加个围棋js程序。于是，申请了博客的js权限，美化美化我的博客。&lt;/p&gt;
&lt;p&gt;　　好在js的语法像C系的，看了看，写个程序应该还是可以的。&lt;/p&gt;
&lt;p&gt;　　围棋里，设计好基本的数据结构：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;a是19X19数组，用来存放围棋,每个位置0为空，1为黑，2为白&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;b是检测禁手、提子时临时使用&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; a = &lt;span&gt;new&lt;/span&gt; Array(19&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; b = &lt;span&gt;new&lt;/span&gt; Array(19&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;19;i++&lt;span&gt;) {
    a[i] &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Array(19&lt;span&gt;);
    b[i] &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Array(19&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; j=0;j&amp;lt;19;j++&lt;span&gt;) {
        a[i][j] &lt;/span&gt;= 0&lt;span&gt;;
    }
}
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当前棋的步数，从0开始&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; step = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;选择qa变量的第qipu_seq个棋谱&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; qipu_seq = Math.floor(10000*Math.random())%&lt;span&gt;qa.length;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;所有的棋谱，这个数据结构是本文重点，后面讲&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; qa;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　画图用canvas,之前并未接触，一样，baidu上搜搜，知道了画圆、画线、画方块的办法，OK了，我画围棋说白了就是圆、线、方块组成。过程中有个BUG，后来才知道，是我对moveTo、LineTo的理解有问题，最终画棋盘、棋子的函数如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; draw_weiqi()
{
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; c=document.getElementById(&quot;myCanvas&quot;).getContext(&quot;2d&quot;&lt;span&gt;);

    c.fillStyle&lt;/span&gt;=&quot;#808080&quot;&lt;span&gt;;
    c.fillRect(&lt;/span&gt;0,0,8*20,8*20&lt;span&gt;); 
    c.beginPath();
    c.strokeStyle&lt;/span&gt;=&quot;#000000&quot;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;19;i++&lt;span&gt;) {    
        c.lineWidth &lt;/span&gt;= 1&lt;span&gt;;
        c.moveTo(&lt;/span&gt;8+i*8,8&lt;span&gt;);
        c.lineTo(&lt;/span&gt;8+i*8,19*8&lt;span&gt;);
        c.stroke();
        c.moveTo(&lt;/span&gt;8,8+i*8&lt;span&gt;);
        c.lineTo(&lt;/span&gt;19*8,8+i*8&lt;span&gt;);
        c.stroke();
    }
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;19;i++&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; j=0;j&amp;lt;19;j++&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(a[i][j] != 0&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(a[i][j] == 1&lt;span&gt;) {
                    c.fillStyle&lt;/span&gt;=&quot;#000000&quot;&lt;span&gt;;
                } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                    c.fillStyle&lt;/span&gt;=&quot;#FFFFFF&quot;&lt;span&gt;;
                }
                c.beginPath();
                c.arc(&lt;/span&gt;8+i*8,8+j*8,4,0,Math.PI*2,&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
                c.fill();
            }
        }
    }
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(step!=0&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; n = qipu[Math.floor((step-1)/2)];
        &lt;span&gt;if&lt;/span&gt;(step%2==1&lt;span&gt;) {
            n &lt;/span&gt;= n%361&lt;span&gt;;
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            n &lt;/span&gt;= Math.floor(n/361);
&lt;span&gt;        }
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x = Math.floor(n/19);
        &lt;span&gt;var&lt;/span&gt; y = n%19&lt;span&gt;;
        c.fillStyle&lt;/span&gt;=&quot;#FF0000&quot;&lt;span&gt;;
        c.fillRect(&lt;/span&gt;6+x*8,6+y*8,4,4&lt;span&gt;);
    }
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;9;i++&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x = 3+6*(i%3&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; y = 3+2*(i-i%3&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(a[x][y] == 0&lt;span&gt;) {
                        c.fillStyle&lt;/span&gt;=&quot;#c0c0c0&quot;&lt;span&gt;;
                        c.fillRect(&lt;/span&gt;8+x*8,8+y*8,1,1&lt;span&gt;);
                }
        }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　我的想法是js默认的情况是反复播放alphago master和alphago zero的二十局棋，鼠标点上去之后可以手动下棋（但不支持AI），于是还要去考虑鼠标的操作。&lt;/p&gt;
&lt;p&gt;　　鼠标的操作网上有太多的文章来讲，但讲的似乎又不清晰，不过反复调试，试验下，鼠标的支持还是没问题了。&lt;/p&gt;
&lt;p&gt;　　var n = document.getElementById(&quot;myCanvas&quot;);&lt;/p&gt;
&lt;p&gt;　　var ev = event || window.event;&lt;br/&gt;　　var x = ev.PageX||ev.clientX;&lt;br/&gt;　　var y = ev.PageY||ev.clientY;&lt;br/&gt;　　x += document.documentElement.scrollLeft || document.body.scrollLeft;&lt;br/&gt;　　y += document.documentElement.scrollTop || document.body.scrollTop;&lt;/p&gt;
&lt;p&gt;　　x -= n.offsetLeft;&lt;br/&gt;　　y -= n.offsetTop;&lt;/p&gt;
&lt;p&gt;　　找到点击的位置在画布里的相对坐标为以上代码，可是这里还是有一个BUG，对于Firefox不支持，我也没去找原因，如果有知道的，欢迎和我联系或者写在评论里，让我可以补掉这个BUG。&lt;/p&gt;

&lt;p&gt;　　围棋的规则也没什么问题，我有篇文章（&lt;a href=&quot;http://www.cnblogs.com/Colin-Cai/p/7502410.html&quot; target=&quot;_blank&quot;&gt;《围棋规则的计算机实现》&lt;/a&gt;）里专门讲围棋的规则可以看成是一个连通图遍历，如此可以判断有没有气，从而禁手、提子、打劫，乃至后面点掉死子、数子计算胜负都可以归结于连通图遍历。&lt;/p&gt;

&lt;p&gt;　　放进去棋谱是个问题，这需要相对较大的数据量，我虽然只放20个棋谱，但是我的强迫症总觉得棋谱的数据多了。&lt;/p&gt;
&lt;p&gt;　　我拿到的sgf文件，是围棋界的标准存储文件，以master和zero的第一局为例，棋谱如下：&lt;/p&gt;
&lt;p&gt;(;FF[4]CA[UTF-8]KM[7.5]OT[3x60 byo-yomi]PB[AlphaGo Master]PW[AlphaGo Zero]&lt;br/&gt;RE[W+R]RU[Chinese]TM[7200];B[dd];W[pp];B[cp];W[pd];B[fp];W[cc];B[cd];W[dc];&lt;br/&gt;B[fc];W[ec];B[ed];W[fb];B[dj];W[nq];B[mp];W[hq];B[qf];W[qk];B[nc];W[pf];B[pg];&lt;br/&gt;W[of];B[qd];W[qc];B[qe];W[pc];B[qi];W[md];B[og];W[mc];B[gb];W[gc];B[fd];W[hb];&lt;br/&gt;B[gd];W[ga];B[hp];W[ip];B[ho];W[gq];B[fq];W[io];B[np];W[mq];B[in];W[jq];B[jn];&lt;br/&gt;W[op];B[lq];W[lr];B[lp];W[kq];B[ek];W[dp];B[dq];W[bj];B[bl];W[cq];B[me];W[le];&lt;br/&gt;B[lf];W[mf];B[ne];W[nf];B[ke];W[ld];B[kd];W[nd];B[cr];W[ch];B[eh];W[be];B[bd];&lt;br/&gt;W[cf];B[rn];W[rp];B[qo];W[qp];B[mr];W[nr];B[ir];W[iq];B[on];W[eg];B[dh];W[dg];&lt;br/&gt;B[fg];W[bg];B[mh];W[lg];B[kf];W[nh];B[mj];W[mg];B[kg];W[lh];B[kh];W[hf];B[gf];&lt;br/&gt;W[hd];B[hg];W[ml];B[nl];W[nm];B[om];W[ck];B[cl];W[nk];B[ol];W[mk];B[pj];W[eq];&lt;br/&gt;B[dr];W[fr];B[fo];W[qm];B[qn];W[pn];B[po];W[oo];B[pk];W[er];B[ep];W[ri];B[rh];&lt;br/&gt;W[do];B[es];W[gr];B[kj];W[pm];B[rm];W[ql];B[qj];W[hn];B[hm];W[dk];B[dl];W[ej];&lt;br/&gt;B[co];W[rj];B[pl];W[fk];B[el];W[di];B[fj];W[ei];B[fi];W[fh];B[gh];W[rk];B[si];&lt;br/&gt;W[ff];B[gg];W[ie];B[ge];W[kc];B[lj];W[ko];B[lm];W[nj];B[mi];W[ni];B[kr];W[ms];&lt;br/&gt;B[jd];W[kk];B[nn];W[km];B[kn];W[ng];B[jk];W[jl];B[bk];W[cj];B[rc];W[rb];B[jc];&lt;br/&gt;W[jj];B[ik];W[gi];B[gj];W[ij];B[hj];W[il];B[hk];W[ki];B[ji];W[gn];B[dn];W[hl];&lt;br/&gt;B[gl];W[gm];B[kb];W[lb];B[mb];W[nb];B[bc];W[bb];B[ab];W[ba];B[da];W[db];B[ma];&lt;br/&gt;W[na];B[ea];W[eb];B[sd];W[ln];B[lo];W[im];B[aj];W[ai];B[sb];W[ra];B[jr];W[hr];&lt;br/&gt;B[ii];W[la];B[he];W[id];B[if];W[ro];B[rl];W[lk];B[li];W[sn];B[sk];W[fn];B[eo];&lt;br/&gt;W[sm];B[sj];W[ib];B[jb];W[kp];B[jo];W[mm];B[mn];W[qb];B[jp];W[ks];B[fm];W[em];&lt;br/&gt;B[fl];W[en];B[fs];W[sa];B[ef];W[ak];B[al];W[dm];B[cm];W[ee];B[fe];W[de];B[ae];&lt;br/&gt;W[ce];B[af];W[sc];B[rd];W[ph];B[qg];W[oh];B[pe];W[oe];B[pr];W[rr];B[rq];W[qq];&lt;br/&gt;B[so];W[sp];B[sl];W[so];B[ic];W[hc];B[ag];W[ah];B[gs];W[is];B[eh];W[je];B[jf];&lt;br/&gt;W[ia];B[aj];W[bf];B[ad];W[ak];B[gp];W[js];B[aj];W[lc];B[no];W[ak];B[sb];W[aj])&lt;/p&gt;
&lt;p&gt;　　我不用解释，应该也能猜的出来，前面是信息，B[dd];W[pp];B[cp];这样的是一步一步的棋，采用坐标的方法，横纵坐标都是a-s这19个字母中的一个。&lt;/p&gt;
&lt;p&gt;　　因为最开始对js不熟悉，想全部用整数存储棋谱，每一步棋存成0~360的一个数字，方法是把a-s对应于0~18，然后X*19+Y(其中X,Y是横纵坐标)，然后搞成数组，20个棋谱的qa变量就是数组的数组。&lt;/p&gt;
&lt;p&gt;　　用shell设计出来就是这样：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;bash
export LANG&lt;/span&gt;=&lt;span&gt;C
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; *.sgf; &lt;span&gt;do&lt;/span&gt;
        &lt;span&gt;cat&lt;/span&gt; $i | &lt;span&gt;tr&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\r\n\t() &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;tr&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/^[BW]\[([a-s][a-s])\]$/!d;s//\1/;H;${x;s/\n//gp;}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | od -t u1 -An -v | &lt;span&gt;gawk&lt;/span&gt; &lt;span&gt;'
&lt;/span&gt;        BEGIN {n=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;}
        {&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=NF;i++){a[n++]=$i-&lt;span&gt;97&lt;/span&gt;&lt;span&gt;;}}
        END {
                m&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i+&lt;span&gt;2&lt;/span&gt;&amp;lt;=n;i+=&lt;span&gt;2&lt;/span&gt;)b[m++]=a[i]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;];
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;m;i++&lt;span&gt;) {
                        x &lt;/span&gt;=&lt;span&gt; b[i];
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i!=&lt;span&gt;0&lt;/span&gt;)printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,x);
                }
                printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | sed -nr &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;s/^/\[/;s/$/\],/;p&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | tr -d &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\n&lt;span&gt;'
&lt;/span&gt;&lt;span&gt;done&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/,$//;s/^/var qa = \[/;s/$/\];/;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;var qa = [[60,300,53,288,110,40,41,59,97,78,79,96,66,263,243,149,309,314,249,290,291,271,307,306,308,287,312,231,272,230,115,116,98,134,117,114,148,167,147,130,111,166,262,244,165,187,184,281,225,226,224,206,86,72,73,28,30,54,232,213,214,233...&lt;/p&gt;
&lt;p&gt;　　因为js是解释型语言，最终从服务器上下下来的是代码，一数，字节数很多，&lt;strong&gt;&lt;span&gt;19788字节&lt;/span&gt;&lt;/strong&gt;。强迫症犯了，要压一下。&lt;/p&gt;
&lt;p&gt; 　　于是每两步棋合一起，比如前一步棋为A，后一步棋为B，AB范围都为0~360，则用B*361+A表示两步棋。如果整局棋的步数为奇数，最后一步棋找不到配的，那么最后一个数字就是361*361+A（正常范围是0~360,361并不是真实棋步，可以直接判断出来这一步没有）&lt;/p&gt;
&lt;p&gt;　　shell程序如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;bash
export LANG&lt;/span&gt;=&lt;span&gt;C
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; *.sgf; &lt;span&gt;do&lt;/span&gt;
        &lt;span&gt;cat&lt;/span&gt; $i | &lt;span&gt;tr&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\r\n\t() &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;tr&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/^[BW]\[([a-s][a-s])\]$/!d;s//\1/;H;${x;s/\n//gp;}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | od -t u1 -An -v | &lt;span&gt;gawk&lt;/span&gt; &lt;span&gt;'
&lt;/span&gt;        BEGIN {n=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;}
        {&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=NF;i++){a[n++]=$i-&lt;span&gt;97&lt;/span&gt;&lt;span&gt;;}}
        END {
                m&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i+&lt;span&gt;4&lt;/span&gt;&amp;lt;=n;i+=&lt;span&gt;4&lt;/span&gt;)b[m++]=a[i]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;1&lt;/span&gt;]+(a[i+&lt;span&gt;2&lt;/span&gt;]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;3&lt;/span&gt;])*&lt;span&gt;361&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i+&lt;span&gt;2&lt;/span&gt;&amp;lt;=n)b[m++]=a[i]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;1&lt;/span&gt;]+&lt;span&gt;361&lt;/span&gt;*&lt;span&gt;361&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;m;i++&lt;span&gt;) {
                        x &lt;/span&gt;=&lt;span&gt; b[i];
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i!=&lt;span&gt;0&lt;/span&gt;)printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,x);
                }
                printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | sed -nr &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;s/^/\[/;s/$/\],/;p&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | tr -d &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\n&lt;span&gt;'
&lt;/span&gt;&lt;span&gt;done&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/,$//;s/^/var qa = \[/;s/$/\];/;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　再来看一看，数据如下这样：&lt;/p&gt;
&lt;p&gt;var qa = [[108360,104021,14550,21340,28255,34735,95009,54032,113663,104939,98122,110773,103915,83703,83302,41991,48472,41271,60435,47077,60037,88346,67672,101625,81811,74590,26078,10181,19524,77125,84327,91223,76726,90443,16300,8386,15545,122354,115477,95549,60817,29881,22807...&lt;/p&gt;
&lt;p&gt;　　这里的数据压缩到&lt;strong&gt;&lt;span&gt;16489字节&lt;/span&gt;&lt;/strong&gt;，还是很多。&lt;/p&gt;
&lt;p&gt;　　其实，当初有个很好的选择，就是直接提出a-s的坐标，然后来表示，那么master和zero第一盘棋就变成以下字符串&lt;/p&gt;
&lt;p&gt;　　“ddppcppdfpcccddcfcecedfbdjnqmphqqfqkncpfpgofqdqcqepcqimdogmcgbgcfdhbgdgahpiphogqfqionpmqinjqjnoplqlrlpkqekdpdqbjblcqmelelfmfnenfkeldkdndcrchehbebdcfrnrpqoqpmrnririqonegdhdgfgbgmhlgkfnhmjmgkglhkhhfgfhdhgmlnlnmomckclnkolmkpjeqdrfrfoqmqnpnpooopkereprirhdoesgrkjpmrmqlqjhnhmdkdlejcorjplfkeldifjeififhghrksiffggiegekcljkolmnjminikrmsjdkknnkmknngjkjlbkcjrcrbjcjjikgigjijhjilhkkijigndnhlglgmkblbmbnbbcbbabbadadbmanaeaebsdlnloimajaisbrajrhriilaheidifrorllklisnskfneosmsjibjbkpjommmnqbjpksfmemflenfssaefakaldmcmeefedeaeceafscrdphqgohpeoeprrrrqqqsospslsoichcagahgsisehjejfiaajbfadakgpjsajlcnoaksbaj”&lt;/p&gt;
&lt;p&gt;　　shell如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;bash
export LANG&lt;/span&gt;=&lt;span&gt;C
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; *.sgf; &lt;span&gt;do&lt;/span&gt;
        &lt;span&gt;cat&lt;/span&gt; $i | &lt;span&gt;tr&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\r\n\t() &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;tr&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/^[BW]\[([a-s][a-s])\]$/!d;s//\1/;H;${x;s/\n//gp;}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/^/&quot;/;s/$/&quot;,/;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;done&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/,$//;s/^/var qa = \[/;s/$/\];/;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　这个其实已经很不错，&lt;strong&gt;&lt;span&gt;10730字节&lt;/span&gt;&lt;/strong&gt;。只是最开始的时候对js不熟，不知道怎么处理字符到整形，强迫症也没犯。&lt;/p&gt;
&lt;p&gt;　　不过，这个10730字节我还是不满足，后来想了想，&lt;/p&gt;
&lt;p&gt;　　其实用一个整数来代表两步棋,B*361+A(B为0~361,A为0~360)，那么这个整数范围为0~130681，&lt;/p&gt;
&lt;p&gt;　　而2&lt;sup&gt;17&lt;/sup&gt;=131072&amp;gt;130681&lt;/p&gt;
&lt;p&gt;　　而且数值非常接近，&lt;/p&gt;
&lt;p&gt;　　于是决定每步棋编码17bits，编成二进制数据，又因为js不是编译型语言，需要给二进制数据一个编码，base64是合适的，理论上可以再压缩的多那么一点点，比如不只64个可见字符，用的更多一些也可，只是程序比较复杂，因为不再是2的整数次方个不同的用来编码的可见字符，压缩率提高也有限。于是就此作罢。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;bash
export LANG&lt;/span&gt;=&lt;span&gt;C
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; *.sgf; &lt;span&gt;do&lt;/span&gt;
        &lt;span&gt;cat&lt;/span&gt; $i | &lt;span&gt;tr&lt;/span&gt; -d &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\r\n\t() &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;tr&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/^[BW]\[([a-s][a-s])\]$/!d;s//\1/;H;${x;s/\n//gp;}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; | od -t u1 -An -v | &lt;span&gt;gawk&lt;/span&gt; &lt;span&gt;'
&lt;/span&gt;        BEGIN {n=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;}
        {&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=NF;i++){a[n++]=$i-&lt;span&gt;97&lt;/span&gt;&lt;span&gt;;}}
        END {
                m&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i+&lt;span&gt;4&lt;/span&gt;&amp;lt;=n;i+=&lt;span&gt;4&lt;/span&gt;)b[m++]=a[i]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;1&lt;/span&gt;]+(a[i+&lt;span&gt;2&lt;/span&gt;]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;3&lt;/span&gt;])*&lt;span&gt;361&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i+&lt;span&gt;2&lt;/span&gt;&amp;lt;=n)b[m++]=a[i]*&lt;span&gt;19&lt;/span&gt;+a[i+&lt;span&gt;1&lt;/span&gt;]+&lt;span&gt;361&lt;/span&gt;*&lt;span&gt;361&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;m;i++&lt;span&gt;) {
                        x &lt;/span&gt;=&lt;span&gt; b[i];
                        y &lt;/span&gt;= &lt;span&gt;65536&lt;/span&gt;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(j=&lt;span&gt;0&lt;/span&gt;;j&amp;lt;&lt;span&gt;17&lt;/span&gt;;j++&lt;span&gt;) {
                                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(x&amp;gt;=&lt;span&gt;y) {
                                        x&lt;/span&gt;-=&lt;span&gt;y
                                        print &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                                } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                                        print &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                                y&lt;/span&gt;/=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
                        }
                }
        }
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | gawk &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;BEGIN{i=&lt;span&gt;0&lt;/span&gt;;j=&lt;span&gt;128&lt;/span&gt;;v=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;}
        {&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;($&lt;span&gt;1&lt;/span&gt;==&lt;span&gt;1&lt;/span&gt;)v+=j;j/=&lt;span&gt;2&lt;/span&gt;;i++;&lt;span&gt;if&lt;/span&gt;(i==&lt;span&gt;8&lt;/span&gt;){printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,v);i=&lt;span&gt;0&lt;/span&gt;;j=&lt;span&gt;128&lt;/span&gt;;v=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;}}
        END{&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i!=&lt;span&gt;0&lt;/span&gt;)printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,v)}
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | base64 | tr -d &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;\n&lt;span&gt;'&lt;/span&gt;&lt;span&gt; | sed -nr &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;s/^/&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/;s/$/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,/;p&lt;span&gt;'
&lt;/span&gt;&lt;span&gt;done&lt;/span&gt; | &lt;span&gt;sed&lt;/span&gt; -nr &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s/,$//;s/^/var qa = \[/;s/$/\];/;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;echo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　var qa = [&quot;06RllUcaxTXDcvoevuZC0xDd/+Z67+lbC1yvXRveisykB16sKE3dgmt+V1QtZGoQsYz5n8nI14y7wnxSYiS1FpLPZFeV21hSx/WCDCHlz3fLhit1PXbInS5LIuI6aYDVm8aVzzFcYa+wD+oyVuPSJjWqaqFmguJPHW+CdK74wDQiZ0x4ytK5GdHMb2CZ42Xww8EPUYEqclwAO24kD3rByOYm46Q82kENad20QdbtY1bR3esshAVshMnKKX9AqysccI5mmL4qzymWrLIrlHDXp0OJIazCkB10zNnDOmd0EYLUeRpNRCk6y2xzt602Ifq6Jms+cY2SCQ4NTKdeFSYKPkGfevxW4OazCsHECKzQOz7yjudCsEX33f8FFxJP8aP3ZV98gnleB89xprhAh4QcOwsGlMoDx8HBAA==&quot;,...&lt;/p&gt;
&lt;p&gt;　　总算满意了，数数字节数，&lt;/p&gt;
&lt;p&gt;# ./deal.sh | wc -c&lt;/p&gt;
&lt;p&gt;7680&lt;/p&gt;

&lt;p&gt;　　7680字节，算是交代了。&lt;/p&gt;
&lt;p&gt;　　最后，再把代码中的一堆变量、函数名给用单个字符替换了，去掉所有的换行、空格，甚至括号都没有多余的，&lt;/p&gt;
&lt;p&gt;　　遇到if(cnt1 != 0 &amp;amp;&amp;amp; cnt2 == 0)，都被我简写成了if(cnt&amp;amp;&amp;amp;!cnt2),当然，后面cnt、cnt2都被搞成了单字符。&lt;/p&gt;
&lt;p&gt;　　最后贴了出去，可读性极差，不过代码小，如果我自己需要改动，就用原本的代码改动了。接下去想在此基础上搞个简易的AI，再看时间了。&lt;/p&gt;

&lt;p&gt;　　刚才想了想，base64的解码是从网上找过来然后修改的，我看那个字符串表示不是太长了一点，强迫症又来了，我是不是该再裁它一刀。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; base64_decode(c){
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; s=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x=&quot;&quot;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; e=&lt;span&gt;new&lt;/span&gt; Array(4&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; i=0&lt;span&gt;;
        c&lt;/span&gt;=c.replace(/[^A-Za-z0-9\+\/\=]/g, &quot;&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(i&amp;lt;&lt;span&gt;c.length){
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; j=0;j&amp;lt;4;j++&lt;span&gt;)
                        e[j]&lt;/span&gt;=s.indexOf(c.charAt(i++&lt;span&gt;));
                x&lt;/span&gt;+=String.fromCharCode((e[0]&amp;lt;&amp;lt;2)|(e[1]&amp;gt;&amp;gt;4&lt;span&gt;));
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (e[2]!=64&lt;span&gt;)
                        x&lt;/span&gt;+=String.fromCharCode(((e[1]&amp;amp;15)&amp;lt;&amp;lt;4)|(e[2]&amp;gt;&amp;gt;2&lt;span&gt;));
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (e[3] != 64&lt;span&gt;)
                        x&lt;/span&gt;+=String.fromCharCode(((e[2]&amp;amp;3)&amp;lt;&amp;lt;6)|e[3&lt;span&gt;]);
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; x;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sun, 04 Mar 2018 14:37:00 +0000</pubDate>
<dc:creator>窗户</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Colin-Cai/p/8506691.html</dc:identifier>
</item>
<item>
<title>为什么说“概率”带来一场现代革命？ - Vamei</title>
<link>http://www.cnblogs.com/vamei/p/8506555.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vamei/p/8506555.html</guid>
<description>&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot; readability=&quot;54&quot;&gt;
&lt;p&gt;作者：Vamei 出处：http://www.cnblogs.com/vamei 严禁转载。&lt;/p&gt;
&lt;p&gt;&lt;br class=&quot;Apple-interchange-newline&quot;/&gt;
概率是生活中平常不过的概念。我们用概率来量化某种结果的可能性。日常生活中常见到概率。成功有概率，体育比赛的胜负有概率，彩票中奖也有概率。概率就是“概率论”这门学科研究的核心。不过，像概率这样“日常”的概念，是在16世纪文艺复兴时才成为数学家研究的课题。&lt;/p&gt;

&lt;p&gt;最先研究概率论的是一位名为卡尔达诺的数学家。他研究了一个概率问题：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;扔两个色子，总和为10的概率有多大？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;扔色子这个游戏，大家常玩。色子是一个方块，六个面各有一个数字，从1到6。扔出去一个色子，那么出现六个面中任意一个面的概率相同，因此每种结果的概率就是1/6。&lt;/p&gt;

&lt;p&gt;扔两个色子算总数时，总数概率就不一样了。直觉上来说，总数为2的概率会很小。只有两个骰子都为1这一种结果时，总数才能为2。我们把这样的两个色子的结果记成（1，1）。总数为10的概率要高一些，包括了（5，5）、（4，6）、（6、4）三种结果。在桌游《卡坦岛》中，每块儿土地有一个从2到12的数字。玩家通过扔两个色子决定那块儿土地产出资源。从下图看到，7号包含的结合总数，比2号大得多。在总共36种结果中，总数7对应了6种结果，概率是6/36，大约是16.7%。总数2只对应了1种结果，所以概率就是1/36，大约为2.8%。&lt;/p&gt;
&lt;img src=&quot;https://images2018.cnblogs.com/blog/413416/201803/413416-20180304222619285-224326083.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;卡坦岛的结果&lt;/p&gt;

&lt;p&gt;我们看到，两个色子的概率问题解决起来很容易，根本不需要高深的数学知识。但这个问题直到16世纪才被卡尔达诺搞明白。当时正值 “文艺复兴”的时代。卡尔达诺的父亲，就是“文艺复兴”最著名画家达·芬奇的朋友。欧洲掌握了火药和印刷术，即将走入现代。放眼世界，哥伦布已经发现了美洲。中国进入到倒数第二个封建王朝：大明。日本已经结束了战国，进入最后一个幕府时代，也就是江户幕府。经过两千年的发展，数学家已经发明了非常复杂的数学工具：欧氏几何、代数方程、三角函数。诡异的是，看起来简单的概率论，到了这么晚的时间才诞生。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/413416/201803/413416-20180304222527400-462469282.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;公元前300年就诞生的欧式几何&lt;/p&gt;

&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot; readability=&quot;35&quot;&gt;
&lt;p&gt;概率论诞生得晚，有一种技术性的解释：古代人制造色子的技艺不精。就拿古罗马人来说，根本就没有六个面方方正正的色子。人们赌博时用的，都是动物身上略显方正的关节骨，比如猪肘的骨头。由于表面不规则，不同结果出现的概率起伏很大，概率问题根本无从研究。然而，古人在金属加工方面的水平并不算低。既然能造出精美无双的首饰，那就完全有能力制作一个均匀的色子。因此，这个纯粹技术性的解释很难服众。&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot; readability=&quot;70&quot;&gt;
&lt;p&gt;概率论诞生的根本阻碍，其实在于信仰。古人认为，事情的结果是神的安排。生意成功时，认为得到了财神保佑。地震发生，认为是触怒了老天。正是基于这样的信念，古人才会用求签和抽牌的随机方式，来窥探天意。抱着这样的信念，所谓的概率研究不但荒谬，而且有亵渎神灵的嫌疑。就以欧洲为例，从古罗马末期到文艺复兴，基督教拥有的权力甚至超过了国王。基督教认为上帝全知全能，安排了一切事情的结果。如果有个数学家宣称，数字就能代表结果的可能性，那上帝可真要无处安放了。&lt;/p&gt;

&lt;p&gt;文艺复兴正是以理性挑战神权的时代，为随后的宗教改革奠定了基础。欧洲正是经过了文艺复兴洗礼，才摆脱了宗教的束缚。所以，概率论的诞生，必须以文艺复兴这样一场思想解放为前提。卡尔达诺解决的概率问题非常简单。他甚至在现代初中生就能解答的问题上犯错，比如“扔3个色子，至少出现一次6的概率”。但他无疑引领了一次思想革命。数学家自己也意识到概率论思想的危险性。卡尔达诺在表述概率想法时就小心翼翼，并且明确表示不能排除上帝的作用。事实上，在卡尔达诺逝世几十年后，伽利略重拾色子问题时，也在论文里尽量避免“概率”和“随机”之类的字眼。&lt;/p&gt;

&lt;p&gt;无论如何，概率诞生了。为了赢钱，赌徒们可不在乎上帝。他们开始拿着赌场的问题求助于数学家。早期的概率问题就和赌博结下了不解之缘。费马和帕斯卡两位数学家就联手解决了一系列的赌博问题。其中一个有名的问题，是在一场未完成的赌局中，赌徒应该怎样分赃。拿一个简单的例子来说明。两个赌徒摇两次色子，约定以两次色子总和来比大小定输赢。第一轮，有人摇出5，另一个人摇出1。摇出5的人欢欣雀跃，摇出1的虽然沮丧但也盼着下一轮来翻盘。如果这个时候赌局停止，两人应该怎样分钱才公平。平分当然不公平。在第一轮已经完成的情况下，摇出5的赌徒应该有更大概率赢得第二轮。因此，这个人会期望自己分到更多的钱。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/413416/201803/413416-20180304222408310-1916664319.jpg&quot; alt=&quot;&quot; width=&quot;465&quot; height=&quot;364&quot;/&gt;&lt;/p&gt;
&lt;p&gt;赌场的概率问题&lt;/p&gt;

&lt;p&gt;费马和帕斯卡通过数学计算了每种结果出现的概率，再用概率来计算出每个人应该分到的钱。通过特定的数学方法，人们可以计算出对未知的“期望”。“期望”很快应用在兴旺的航海业中。当时的西欧国家都在全面投机航海业。帆船从亚洲、美洲、非洲运来大量货物，创造着巨额利润。可如果船沉了，投资人的钱就全亏了。有了“期望”这样的概率工具，商人可以计算出预期收益，最终决定入股哪艘航船。可以说，两位数学家为“股权投资”这一现代金融形式铺平了道路。 说到底，概率论研究的是未发生的事情。在盈利性投机的金融活动中，越多了解未来，就越能赚钱。&lt;/p&gt;
&lt;p&gt;既然能赚钱，上帝就不那么重要了。商人们聚集在阿姆斯特丹、巴黎和伦敦的交易所，狂热地用数字来揣摩上帝对未来的安排。在投入实用的同时，概率依然充满了神秘色彩。在概率计算的第一步，数学家依然在使用经验性的假设，却无法说清为什么。为什么均匀色子一个面的结果和另一个面的色子相同？为什么硬币证明的概率是1/2？这些看似简单的问题，却涉及到了概率本质，甚至威胁到概率论的进一步发展。在这个危机关头，数学家又一次出手，挽救了概率论。&lt;/p&gt;

&lt;p&gt;雅克布·伯努利是来自伯努利家族的“数二代”。伯努利提出了 “大数定律”。伯努利认为，在试验不变的条件下，重复试验多次，随机事件的频率近似于它的概率。换句话说，伯努利用频率解释了概率。如果你确定色子抛出1的概率，那就成千上万次地扔出色子，并记录结果1占总实验次数的比例。 “大数定律”去处了概率最后一分“玄学”色彩，让概率变成了像物理化学那样的实验学科。&lt;/p&gt;

&lt;p&gt;在日常生活中，我们会在潜意识中把“频率”和“概率”联系起来。常听说东京地震的新闻，却不常听说上海地震，那上海地震的概率自然比东京的高。伯努利只是用严格的数学语言，更清楚地说明了“频率”和“概率”的关系。但千万不要小看“大数定律”。以这条数学定律为基础，概率论的大厦才能继续施工。这里举一个简单的应用，就是计算圆周率。一个半径是1的圆，它的面积就是圆周率。这个数字从3.1415926……开始，小数点后会有无限位。中国数学家祖冲之的伟大成就，就是通过复杂的几何方法，计算出了圆周率的后面的第七位。&lt;/p&gt;

&lt;p&gt;但根据“大数定律”，我们可以用一种玩游戏的方法算出圆周率。我们找一个正方形的场地围起来。正方形变长是2。正方形中再画一个半径为1的内切圆，如下图所示。我们往这个场地中随机地丢沙包，并记下圆形中沙包和扔出沙包总数的比值。当我们扔越来越多沙包时，比值就会越来越趋近于圆周率的1/4。也就是说，困扰古人数千年的圆周率计算问题，可以通过丢沙包来算出无限高的精度。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/413416/201803/413416-20180304222325800-1931971164.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;扔沙包的场地&lt;/p&gt;
&lt;div class=&quot;RichText PostIndex-content av-paddingSide av-card&quot; readability=&quot;40&quot;&gt;
&lt;p&gt;“丢沙包计算圆周率”的方式之所以成立，就在于“大数定律”。沙包会随机地出现在场地的任意一点，那沙包入圆的概率是圆形面积和方形面积的比值，也就是圆周率的1/4。另一方面根据“大数定律”，当我们扔的沙包越来越多的时候，结果中沙包成功进入到圆形的频率，会越来越趋近该情况的概率。因此，我们最终用扔沙包获得的频率，获得了包含在概率中的圆周率。 祖冲之的时代还没有概率的思想，想不到用这种简单的方法来计算圆周率。另一方面，这种名为“蒙特卡罗方法”的计算方式，已经是天气预报、金融博弈、航天器设计等领域不可或缺的工具。&lt;/p&gt;

&lt;p&gt;如今，概率论已经是中学时就会接触的数学知识。但概率论的简单公式，记载了一场思想革命。在这场革命中，沉默的数学家用数字向上帝宣战，把“未来”从上帝那里转交到每个人的手上。这场革命不但改变了社会的面貌，也彻底改变了人的思想。&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Sun, 04 Mar 2018 14:28:00 +0000</pubDate>
<dc:creator>Vamei</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/vamei/p/8506555.html</dc:identifier>
</item>
<item>
<title>人工智能 - 雪飞鸿</title>
<link>http://www.cnblogs.com/Cwj-XFH/p/8506514.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Cwj-XFH/p/8506514.html</guid>
<description>&lt;p&gt;全书共分为6个章节，6个主题：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;人工智能现状&lt;/li&gt;
&lt;li&gt;人工智能发展历程&lt;/li&gt;
&lt;li&gt;人工智能对人类有威胁吗&lt;/li&gt;
&lt;li&gt;人工智能目前的典型应用场景&lt;/li&gt;
&lt;li&gt;人工智能带来的创新创业机遇&lt;/li&gt;
&lt;li&gt;人工智能时代教育与个人发展&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;用第一章中提到的Primsa软件，给自家狗拍照后用生成不同风格的画作&lt;/p&gt;
&lt;br/&gt;&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1920&quot; data-height=&quot;1080&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1458860-b6fc614ef3817099.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1458860-b6fc614ef3817099.jpg&quot; data-original-width=&quot;1920&quot; data-original-height=&quot;1080&quot; data-original-format=&quot;image/jpeg&quot; data-original-filesize=&quot;348241&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;素描&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;1920&quot; data-height=&quot;1080&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1458860-ec42a8721caa527c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1458860-ec42a8721caa527c.jpg&quot; data-original-width=&quot;1920&quot; data-original-height=&quot;1080&quot; data-original-format=&quot;image/jpeg&quot; data-original-filesize=&quot;356391&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;油画&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;精彩看点&lt;/h3&gt;
&lt;h5&gt;什么是人工智能&lt;/h5&gt;
&lt;p&gt;第一章最后提到了人工智能的5种定义：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AI就是让人觉得不可思议的计算机程序&lt;/li&gt;
&lt;li&gt;AI就是与人类思考方式相似的计算机程序&lt;/li&gt;
&lt;li&gt;AI就是与人类行为相似的计算机程序&lt;/li&gt;
&lt;li&gt;AI就是会学习的计算机程序&lt;/li&gt;
&lt;li&gt;AI就是根据对环境的感知，做出合理的行动，并获得最大收益的计算机程序&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其中，第二种定义被作者明确否决，因为目前人类自己对自己大脑的工作机理认知尚浅；第四种定义则反应了当前的AI技术趋势——机器学习。我个人更喜欢最后一个定义：根据对环境的感知，作出合理的行动，并获得最大收益，这个定义也可用于日常生活中，当然，合理的行动要在法律和道德允许的范围内。&lt;/p&gt;
&lt;p&gt;不同的角度看AI会得到不同的定义，不同的定义会导致不同的研究方向。在《纯粹经济学》的序言中提到，不同的经济理论造就不同的经济制度，进而造就不同的经济社会后果。所以，在生活、工作中，一个好的引导理论是十分必要的。这里顺道给大家安利一篇文章——如何用一种思维，解决人生99%的困惑，文章中提到了定义式思维。定义的过程，本质上是在回答一个事物是什么，不是什么的过程，是建立事物的边界，锁定事物本质特征的过程。多数事情搞不定是因为人对事情的定义不清晰导致的。&lt;/p&gt;
&lt;h5&gt;人工智能简史&lt;/h5&gt;
&lt;p&gt;本章对人工智能的历史作了简单梳理，用书中的一张图片概括就是：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-width=&quot;640&quot; data-height=&quot;328&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1458860-878d7c551f913c0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1458860-878d7c551f913c0f.png&quot; data-original-width=&quot;640&quot; data-original-height=&quot;328&quot; data-original-format=&quot;image/png&quot; data-original-filesize=&quot;45008&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;br/&gt;人们对于人工智能的认识可谓一波三折，先是被AI技术在某些领域的惊艳表现震撼到，进而对AI抱有很高的心理预期，然后认识到其局限性，导致巨大的心理落差。这有点儿像&lt;a href=&quot;https://www.jianshu.com/p/b7dd8ed59a82&quot; target=&quot;_blank&quot;&gt;《三体Ⅱ：黑暗森林》&lt;/a&gt;中，在三体入侵舰队毁灭人类太空舰队后，罗辑的待遇。主角罗辑先是被寄予拯救人类的厚望而被抬上神坛，但并未能给到民众一个符合预期的计划而又惨遭唾弃。其实，现实生活中也是如此，所谓希望越大，失望越大。

&lt;div class=&quot;image-package&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;image-container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt; 高德纳技术成熟度曲线：&lt;/p&gt;
&lt;div class=&quot;image-view&quot; data-width=&quot;640&quot; data-height=&quot;395&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1458860-61aa406e411941de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640&quot; alt=&quot;&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1458860-61aa406e411941de.png&quot; data-original-width=&quot;640&quot; data-original-height=&quot;395&quot; data-original-format=&quot;image/png&quot; data-original-filesize=&quot;129732&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;但，本书作者看好第三次也就是当前我们正在经历的AI热潮，一句话概括原因就是，本次AI热潮有商业需求推动且AI被用于解决具体场景中的实际问题（如：自动驾驶，语音识别等）。在本章末，书中用通俗&lt;span id=&quot;pos_placeholder&quot;/&gt;易懂的话对深度学习和大数据与人工智能的关系做了详尽的阐述，正是深度学习与大数据携手早就了第三次AI热潮，读后受益匪浅。&lt;/p&gt;
&lt;h5&gt;人工智能会威胁到人类吗&lt;/h5&gt;
&lt;p&gt;先科普三个概念：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;弱人工智能&lt;br/&gt;也称限制领域人工智能或应用型人工智能，指的是专注于且只能解决特定领域问题的人工智能，也是当前人工智能所处的阶段。&lt;/li&gt;
&lt;li&gt;强人工智能&lt;br/&gt;又称通用型人工智能或完全人工智能，指的是可以胜任人类所有工作的人工智能。&lt;/li&gt;
&lt;li&gt;超人工智能&lt;br/&gt;计算机程序通过不断发展，可以比世界上最聪明、最有天赋的人类还聪明，那么，由此产生的人工智能系统就可以被称为超人工智能。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;第三章通过两篇文章——蒂姆·厄班的&lt;a href=&quot;https://link.jianshu.com/?t=https%3A%2F%2Fweibo.com%2Fp%2F1001603807746951619315%3Fsudaref%3Dwww.baidu.com%26display%3D0%26retcode%3D6102&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;一个故意不通过图灵测试的人工智能&lt;/a&gt;和&lt;a href=&quot;https://link.jianshu.com/?t=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F24761876&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;AI只是人类的工具：专访杰瑞·卡普兰&lt;/a&gt;来引出两种截然相反的观点：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AI快要毁灭人类了&lt;/li&gt;
&lt;li&gt;人类离威胁还相当遥远&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;书中提到第一种观点的持有者霍金和埃隆·马斯克公开发表了对于人工智能发展的担忧，同时赞扬二位不是悲观的担忧，而是积极行动来预防人工智能对人类可能造成的威胁。&lt;/p&gt;
&lt;p&gt;我不认同蒂姆在人工智能发展上的观点，但我认可他的两句话：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;指数级增长的开端可能像蜗牛漫步，但是后期会跑得非常快&lt;/li&gt;
&lt;li&gt;软件的发展可能看起来很缓慢，但是一次顿悟，就能永远改变进步的速度&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;作者自己则持第二种态度，现在还远没到必须分散精力去担心未来，或为可能的机器威胁做准备的地步。第一种观点建立在技术人类科技总是以加速度形式跃进的基础上。在这个基础上进行推导，会得出：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;一个人工智能系统花了几十年时间达到了人类脑残智障的水平，而当这个节点发生的时候，电脑对于世界的感知大概和一个4岁小孩一般；而在这个节点后一小时，电脑立马推导出了统一广义相对论和量子力学的物理学理论；而在这之后一个半小时，这个强人工智能变成了超人工智能，智能达到了普通人类的17万倍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而作者则认为，特定技术如人工智能，在一段时间的加速发展后，会遇到某些难以逾越的技术瓶颈。从技术角度来说，从弱人工智能到强人工智能之间的鸿沟可能比我们想象的要大得多。而且，由于基础科学（如物理学和生物学）尚缺乏对人类智慧和意识的精确描述，从弱人工智能发展到强人工智能，期间有很大概率存在短期内难以解决的技术难题。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;我们所面对的，只不过是一些列工程设计上的问题。我们必须确保我们设计制造的产品和服务符合我们的愿望和预期。你知道，这件事与桥梁工程师们使用一整套质量保障方案来确保他们建造的桥梁不会坍塌没有什么两样。我们有许多工程学上的原则，来指导我们测试一个系统，什么样的系统是合格的，什么样的系统是足够安全的，等等。在人工智能领域，我们同样需要这样的技术，因为人工智能十分强大，具有潜在的危险性。但这并不是因为智能机器会像人类一样思考，只是因为它们十分强大，我们必须小心使用它们。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;华盛顿计算机科学家奥伦 伊兹奥尼则表示：&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“今天的人工智能发展，距离人们可能或应该担忧机器统治世界的成都，还非常遥远......如果我们讨论的是一千年后或更遥远的未来，AI是否有可能给人来带来厄运？绝对是可能的，但我不认为这种长期的讨论应该分散我们关注真实问题的注意力。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天的人工智能在跨领域推理、抽象能力、知其然也知其所以然、常识、审美、情感、自我意识七个领域还很“稚嫩”。但若，人工智能拥有了自我意识或情感后会是怎样的一幅场景？届时AI将不再是冷冰冰的机器，电影黑客帝国就是讲述人类反抗具有自我意识的机器的暴政的故事；电影人工智能则讲述了具有情感的机器人融入人类家庭的故事。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;应该说，可预见的未来AI对于人类的威胁主要在于失业问题。在第四章及第六章中，均对于人工智能可能带来的失业问题做了相关的论述。&lt;/p&gt;
&lt;p&gt;五秒钟准则&lt;br/&gt;在判断一项工作是否会被人工智能取代问题上，作者李开复提出五秒钟准则：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;一项本来有人从事的工作，如果人可以在5秒钟以内对工作中需要思考和决策的问题做出相应的决定，那么，这项工作就有非常大的可能被人工智能技术全部或部分取代。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照这个标准，交易员，司机等职位会被人工智能取代。但作者也明确表示，五秒钟准则只是个经验法则，如，护理工作，很少有复杂的决策过程，但它很难被机器取代，因为这项工作需要较多的人与人之间的交流。但，收银、银行柜台这些也需与顾客交流的工作却有被替代的趋势，我觉着在判断人工智能是否可以替代某项工作时，还应结合替代的经济成本这个维度加以考虑。&lt;/p&gt;
&lt;p&gt;作者认为，将来大部分工作只是工作内容发生转换而非消失。在未来10年里，至少有一半的人需要关系自己的工作与人工智能的关系，需要在未来的人机写作模式中，找到自己的新位置。&lt;/p&gt;
&lt;p&gt;漫漫千年人类文明史，因科技进步而造成的社会格局、经济结构的调整、变革、阵痛乃至暂时的倒退都屡见不鲜。但，从全局视角看，历史上还没有哪次科技革命成为人类灾难而不是福音。&lt;/p&gt;
&lt;p&gt;书中第四章最后，还对AI可能对人类社会产生的影响与变革做了简要论述。&lt;/p&gt;
&lt;h5&gt;AI时代的教育与个人发展&lt;/h5&gt;
&lt;p&gt;本书最后，对于AI时代教育体系应该做怎样的变革和个人的发展问题做了论述。怎样学比学什么重要，作者还推荐了几种学习方法，如：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;主动挑战极限&lt;/li&gt;
&lt;li&gt;向机器学习&lt;/li&gt;
&lt;li&gt;启发式教育&lt;/li&gt;
&lt;li&gt;学习要追随兴趣&lt;/li&gt;
&lt;li&gt;......&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;个人感觉这些有点儿形而上，说到学习方法，我正在看一本书——《如何高效学习》，该书提到了整体性学习，由于目前尚未完成该书的阅读，更为能实践书中的学习方法，所以不做过多的介绍。若有兴趣，大家可以自行翻阅。&lt;/p&gt;
&lt;p&gt;若AI可以胜任绝大多数人类工作，那么人还有存在的意义吗？答案是，不要停止思考。黑客帝国里面，第一代在设计第一代母体时，模拟出的人类生存环境是一个极乐园，结果培养皿中的人类因为大脑无需对周围环境进行分析，进而做出对最优选择而导致大量死亡。大脑一旦停止思考，人也就失去了为人的意义。&lt;/p&gt;
&lt;h3&gt;结语&lt;/h3&gt;
&lt;p&gt;本书有创新工厂创始人李开复和王咏刚合著，李开复在人工智能领域深耕多年，颇有造诣；王咏刚则是IT行业的大牛。全书通俗易懂而又不失专业水准，通篇没有晦涩的专业术语和枯燥的数学公式，是科普人工智能的优秀读物，值得一读。&lt;/p&gt;
&lt;h3&gt;推荐阅读&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://link.jianshu.com/?t=https%3A%2F%2Fweibo.com%2Fp%2F1001603807746951619315%3Fsudaref%3Dwww.baidu.com%26display%3D0%26retcode%3D6102&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;一个故意不通过图灵测试的人工智能&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://link.jianshu.com/?t=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F24761876&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;AI只是人类的工具：专访杰瑞·卡普兰&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.jianshu.com/p/33285451b75d&quot; target=&quot;_blank&quot;&gt;10个机器学习的JavaScript示例&lt;/a&gt;&lt;br/&gt;如何用一种思维，解决人生99%的困惑&lt;/p&gt;
&lt;h3&gt;书籍推荐&lt;/h3&gt;
&lt;p&gt;《人工智能》&lt;br/&gt;《大数据时代》&lt;/p&gt;
&lt;h3&gt;影视推荐&lt;/h3&gt;
&lt;p&gt;《黑客帝国》三部曲&lt;br/&gt;《人工智能》&lt;br/&gt;《异次元骇客》&lt;br/&gt;《机器人总动员》&lt;/p&gt;
&lt;p&gt;文章较长，文笔较烂，能读到最后哥们对你表示佩服和同情，：) 。&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 14:19:00 +0000</pubDate>
<dc:creator>雪飞鸿</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Cwj-XFH/p/8506514.html</dc:identifier>
</item>
<item>
<title>ANTD mobile源码分析 -- popover - Mr 布鲁斯</title>
<link>http://www.cnblogs.com/sunshine-anycall/p/8506311.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sunshine-anycall/p/8506311.html</guid>
<description>&lt;p&gt;最近的开发中要用到很多的各式各样的组件。但是发现ant design mobile（后面简称ANTDM）里很多的资源。于是就分析一下，学习学习。&lt;/p&gt;
&lt;p&gt;ANTDM直接使用了typescript，没有用ES2015，不过这不会是障碍，反而是学习typescript的一个好机会。基本上可以学的开源项目里比这个好的也不多。&lt;/p&gt;
&lt;h2 id=&quot;目录结构&quot;&gt;目录结构&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Popover&lt;/code&gt;组件在：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;|
|--components
  |
  |--popover&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们要分析的组件全部都在&lt;em&gt;components&lt;/em&gt;这个目录下。&lt;/p&gt;
&lt;p&gt;在这个目录里还包含&lt;em&gt;&lt;strong&gt;tests&lt;/strong&gt;&lt;/em&gt;, &lt;em&gt;demo&lt;/em&gt;和&lt;em&gt;style&lt;/em&gt;。里面分别存放测试代码、实例和样式。其他的文件包括*[component name]_native.tsx&lt;em&gt;和&lt;/em&gt;[component name].txs以及对应的&lt;em&gt;index.native.tsx&lt;/em&gt;和&lt;em&gt;index.tsx&lt;/em&gt;，方便外部引入组件。&lt;/p&gt;
&lt;h2 id=&quot;计算点击组件的位置&quot;&gt;计算点击组件的位置&lt;/h2&gt;
&lt;p&gt;这个是最核心的问题了！&lt;/p&gt;
&lt;p&gt;实现React Native的弹出菜单，需要达到在界面上的某个可点击组件上点击了之后，就可以在被点击的组件紧挨着的下方出现一个菜单（其他的计算，比如弹出菜单在左下、右下，左上，右上的位置计算暂时不提）。&lt;/p&gt;
&lt;p&gt;用户点击了哪个组件（按钮），哪个按钮的下面就出现一个菜单（View）。这就需要确定点击组件的位置。&lt;/p&gt;
&lt;p&gt;我们看一下&lt;em&gt;index.native.tsx&lt;/em&gt;这个文件。文件里基本上没几行代码，直接看&lt;code&gt;render&lt;/code&gt;方法里返回的是&lt;code&gt;MenuContext&lt;/code&gt;等。也就是，这个文件没实现什么pop over需要的什么东西。都在import里了：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; Menu&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; MenuContext&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; MenuOptions&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; MenuOption&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; MenuTrigger &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-native-menu'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以ANTDM的源码分析到此为止。&lt;/p&gt;
&lt;p&gt;我们要跳到&lt;code&gt;react-native-menu&lt;/code&gt;。我们分析代码的方式就是无限递归，一直找到实现功能的代码为止。那么我们就可以分析&lt;code&gt;react-native-menu&lt;/code&gt;了。&lt;/p&gt;

&lt;p&gt;这个项目的写法也是很不同。用的是比较老的ES5的React版本。github地址在&lt;a href=&quot;https://github.com/jaysoo/react-native-menu&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这个项目里很多的文件，各位可以后面慢慢看。我们来看&lt;em&gt;makeMenuContext.js&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;在这个项目里，除了&lt;em&gt;index.js&lt;/em&gt;之外都是叫做&lt;em&gt;makeXXX.js&lt;/em&gt;。里面都是HOC的实现方式。而且更加Trick的是HOC的前两个参数是&lt;code&gt;React&lt;/code&gt;和&lt;code&gt;ReactNative&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;回到&lt;em&gt;makeMenuContext.js&lt;/em&gt;，在&lt;code&gt;openMenu()&lt;/code&gt;这个方法里就有实现的方式。这就是我们寻找代码递归跳出的地方。我们来看一下实现方式：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;25&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;at&quot;&gt;openMenu&lt;/span&gt;(name) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; handle &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;ReactNative&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;findNodeHandle&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_menus&lt;/span&gt;[name].&lt;span class=&quot;at&quot;&gt;ref&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;va&quot;&gt;UIManager&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;measure&lt;/span&gt;(handle&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; (x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_menus&lt;/span&gt;[name].&lt;span class=&quot;at&quot;&gt;measurements&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;openedMenu&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; name&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;menuOptions&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_makeAndPositionOptions&lt;/span&gt;(name&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_menus&lt;/span&gt;[name].&lt;span class=&quot;at&quot;&gt;measurements&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;backdropWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;_ownMeasurements&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;w&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_activeMenuHooks&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_menus&lt;/span&gt;[name]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_activeMenuHooks&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;_activeMenuHooks&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;didOpen&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里使用了&lt;code&gt;UIManager&lt;/code&gt;，来自：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;  &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    UIManager&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    TouchableWithoutFeedback&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    ScrollView&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    View&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    BackHandler
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; ReactNative&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用现代一点的写法的话就是：&lt;code&gt;import { UIManager } from 'react-native';&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用的时候是这么用的：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;19&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;  &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; handle &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;ReactNative&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;findNodeHandle&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;_menus&lt;/span&gt;[name].&lt;span class=&quot;at&quot;&gt;ref&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;va&quot;&gt;UIManager&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;measure&lt;/span&gt;(handle&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; (x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// x, y, width, height, pageX, pageY&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;measure()&lt;/code&gt;方法的回调里得到的就是该组件对于&lt;strong&gt;Screen&lt;/strong&gt;的位置。还有其他的&lt;code&gt;measureXXX()&lt;/code&gt;方法在&lt;a href=&quot;https://facebook.github.io/react-native/docs/direct-manipulation.html#other-native-methods&quot;&gt;这里&lt;/a&gt;可以看到。&lt;/p&gt;
&lt;p&gt;measure得到的x，y，w，h，px，py是这个组件的左上角坐标（x，y）和宽、高。在这个measure方法里得到的px和py与这个组件的左上角坐标值一样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：measure的时候，只有在原生视图完成绘制之后才会返回值。&lt;/p&gt;
&lt;p&gt;所以，如果要快点得到一个组件在screen上的坐标值的话，那么可以这样：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;View onLayout&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onLayout&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;gt;&lt;/span&gt;
  
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/View&amp;gt;&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;// onLayout&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;onLayout&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt; {&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;  const handle = ReactNative.findNodeHandle&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;this.refs.Container&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;  UIManager.measure&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;handle, &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;x, y, w, h, px, py&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt; =&amp;gt; {&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    this._ownMeasurements = {x, y, w, h, px, py};&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;  }&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以，在弹出菜单的组件上使用&lt;code&gt;onLayout&lt;/code&gt;props得到它的位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;they(measureXXX方法) are not available on composite components that aren't directly backed by a native view.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;大意是，如果组合组件的最外层不是一个原生view的话，&lt;code&gt;measureXXX()&lt;/code&gt;方法是没法用的！！&lt;/p&gt;
&lt;p&gt;那么measure方法的第一个参数，也就是measure的目标组件如何获得呢？代码在这里：&lt;code&gt;const handle = ReactNative.findNodeHandle(this._menus[name].ref);&lt;/code&gt;。在&lt;code&gt;findNodeHandle()&lt;/code&gt;方法的参数是组件的&lt;code&gt;ref&lt;/code&gt;。那么，通过组件的ref可以得到组件的handle。在通过这个&lt;code&gt;handle&lt;/code&gt;就可以来measure组件，得到这个组件的位置、宽高等数据。&lt;/p&gt;
&lt;p&gt;到这里我们就知道如何来算出触发组件的位置了。但是，这个直接使用&lt;code&gt;UIManager&lt;/code&gt;的方法太复杂了。&lt;/p&gt;
&lt;p&gt;基本上，组件可以直接调用measure方法。我们来简单的实现一下这个弹出菜单的功能。&lt;/p&gt;
&lt;h2 id=&quot;reimplement&quot;&gt;Reimplement&lt;/h2&gt;
&lt;p&gt;不管单词对错了。总之是重写一次。简化版的！为了篇幅足够长，我就把代码都贴出来了。哈哈~&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * Created by Uncle Charlie, 2018/03/01&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * &lt;/span&gt;@flow
&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; TouchableOpacity&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; Text&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; View&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; StyleSheet &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-native'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

type Prop &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;string&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  onPress: (e&lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;: any) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  styles&lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;: &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; any&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; any &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Button &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Prop&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;static&lt;/span&gt; defaultProps &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'Show Menu'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

  handlePress &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; onPress &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;container&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'container view is empty'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;measure&lt;/span&gt;((x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'===&amp;gt;measure'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      onPress &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;onPress&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; y &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; h &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

  onLayout &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; text&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; styles &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; wrapper &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;
      styles &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;styles&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;wrapper&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;styles&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;wrapper&lt;/span&gt; : &lt;span class=&quot;va&quot;&gt;innerStyles&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;View
        style&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;wrapper&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        onLayout&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onLayout&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        ref&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;container &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; container)&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;TouchableOpacity onPress&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;handlePress&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;View&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Text&lt;span class=&quot;op&quot;&gt;&amp;gt;{&lt;/span&gt;text&lt;span class=&quot;op&quot;&gt;}&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;          &amp;lt;/View&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/TouchableOpacity&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;      &amp;lt;/View&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
    )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; innerStyles &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;StyleSheet&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;justifyContent&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;alignItems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'center'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个简化版的实现思路就是：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;点击按钮（&lt;code&gt;TouchableOpacity&lt;/code&gt;）的时候measure按钮组件&lt;/li&gt;
&lt;li&gt;把measure出来的按钮组件的位置作为参数发送给父组件&lt;/li&gt;
&lt;li&gt;父组件在计算后的位置显示menu&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;measure&quot;&gt;measure&lt;/h4&gt;
&lt;p&gt;在measure组件之前，首先要获得这个组件的ref。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;  &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;View ref&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;container &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; container)&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/View&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;得到的ref就是&lt;code&gt;this.container&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;  handlePress &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; onPress &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;container&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;error&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'container view is empty'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;measure&lt;/span&gt;((x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'===&amp;gt;measure'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; h&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; px&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; py &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      onPress &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;onPress&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; y &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; h &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在点击按钮之后开始measure。直接在获得的ref上调用measure方法就可以：&lt;code&gt;this.container.measure&lt;/code&gt;。获得measure的结果之后，调用props传过来的方法&lt;code&gt;onPress&lt;/code&gt;把需要用到的数据传过去。&lt;/p&gt;

&lt;div class=&quot;sourceCode&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;renderMenu &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; top&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; left&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; open &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;open) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;View
        style&lt;span class=&quot;op&quot;&gt;={{&lt;/span&gt;
          &lt;span class=&quot;dt&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'absolute'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
          left&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
          top&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dt&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dt&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;dt&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'rgba(52, 52, 52, 0.8)'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}}&lt;/span&gt;
      &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Text&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;Menu&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;      &amp;lt;/View&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
    )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们要View显示在一个特定的位置的时候，需要在style里设置位置模式为&lt;code&gt;position: 'absolute'&lt;/code&gt;，也就是启用绝对定位。&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;left&lt;/code&gt;、和&lt;code&gt;top&lt;/code&gt;就是菜单的具体位置。宽、高暂时hard code了（简化版。。。）。&lt;/p&gt;
&lt;p&gt;这样就一个popover，超级简化版的，就完成了。全部的代码在&lt;a href=&quot;https://github.com/futurechallenger/react-native-popover-menu-demo&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;我们在前文中说道过一个更好的获得触发组件的位置的方式，&lt;code&gt;onLayout&lt;/code&gt;。这个方法是空的。各位可以试着完成这个方法，或者全部完成这个popover组件作为练习。&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 13:42:00 +0000</pubDate>
<dc:creator>Mr 布鲁斯</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sunshine-anycall/p/8506311.html</dc:identifier>
</item>
<item>
<title>ES6的介绍和常用语法 - 生命壹号</title>
<link>http://www.cnblogs.com/smyhvae/p/8506152.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/smyhvae/p/8506152.html</guid>
<description>&lt;blockquote readability=&quot;5.375&quot;&gt;
&lt;p&gt;本文最初发表于&lt;a href=&quot;http://www.cnblogs.com/smyhvae/p/8506152.html&quot;&gt;博客园&lt;/a&gt;，并在&lt;a href=&quot;https://github.com/smyhvae/Web&quot;&gt;GitHub&lt;/a&gt;上持续更新&lt;strong&gt;前端的系列文章&lt;/strong&gt;。欢迎在GitHub上关注我，一起入门和进阶前端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是正文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;ECMAScript 是 JS 的语言标准。而 ES6 是新的 JS 语法标准。&lt;/p&gt;
&lt;p&gt;PS：严格来说，ECMAScript 还包括其他很多语言的语言标准。&lt;/p&gt;
&lt;h3 id=&quot;ecmascript-发展历史&quot;&gt;ECMAScript 发展历史&lt;/h3&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;1995年：ECMAScript 诞生。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;1997年：ECMAScript 标准确立。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;1999年：ES3 出现，与此同时，IE5 风靡一时。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;2009年，ES5 出现，例如 foreach、Object.keys、Object.create 和 json 标准。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;2015年6月，ES6正式发布。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;ES6 的目标是：让 JS 语言可以编写复杂的大型应用程序，成为企业级开发语言。&lt;/p&gt;
&lt;h3 id=&quot;es6-的其他优势&quot;&gt;ES6 的其他优势&lt;/h3&gt;
&lt;h2 id=&quot;es6的环境配置&quot;&gt;ES6的环境配置&lt;/h2&gt;
&lt;p&gt;掌握 ES6 之后，如果要考虑 ES5 的兼容性，可以这样做：写 ES6 语法的 js 代码，然后通过 &lt;code&gt;Babel&lt;/code&gt;将 ES6 转换为 ES5。&lt;/p&gt;
&lt;p&gt;但是，在这之前，我们需要配置一下相关的环境。&lt;/p&gt;
&lt;h3 id=&quot;建立工程目录&quot;&gt;建立工程目录&lt;/h3&gt;
&lt;p&gt;（1）先建立一个空的工程目录 &lt;code&gt;ES6Demo&lt;/code&gt;，并在目录下建立两个文件夹 &lt;code&gt;src&lt;/code&gt;和 &lt;code&gt;dist&lt;/code&gt;：&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;src&lt;/code&gt;：书写ES6代码，我们写的 js 程序都放在这里。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;code&gt;dist&lt;/code&gt;：利用 Babel 编译生成的 ES5 代码。&lt;strong&gt;我们在 HTML 页面需要引入 dist 里的 js 文件&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;（2）在 src 里新建文件 &lt;code&gt;index.html&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;!-- 我们引入 ES5 中的 js 文件，而不是引入 ES6 中的 js 文件。 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;./dist/index.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;，上方代码中，我们引入的是&lt;code&gt;dist&lt;/code&gt;目录下的 js 文件。&lt;/p&gt;
&lt;p&gt;然后我们新建文件 &lt;code&gt;src/index.js&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'vitateam'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个文件是一个 ES6语法 的js文件，稍后，我们尝试把这个 ES6 语法的 js 文件转化为 ES5 的 js 文件。&lt;/p&gt;
&lt;p&gt;PS：我们在写代码时，能用单引号尽量用单引号，而不是双引号，前者在压缩之后，程序执行会更快。&lt;/p&gt;
&lt;h3 id=&quot;全局安装-babel-cli&quot;&gt;全局安装 Babel-cli&lt;/h3&gt;
&lt;p&gt;（1）初始化项目：&lt;/p&gt;
&lt;p&gt;在安装Babel之前，需要先用 npm init 先初始化我们的项目。打开终端或者通过cmd打开命令行工具，进入项目目录，输入如下命令：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;npm&lt;/span&gt; init -y&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码中，&lt;code&gt;-y&lt;/code&gt; 代表全部默认同意，就不用一次次按回车了（稍后再根据需要，在文件中手动修改）。命令执行完成后，会在项目的根目录下生成package.json文件：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode json&quot;&gt;
&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;es6demo&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;echo &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &amp;amp;&amp;amp; exit 1&quot;&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;smyhvae&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;ISC&quot;&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS：VS Code 里打开终端的快捷键是：&lt;code&gt;Contol + ~&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;（2）全局安装 Babel-cli：&lt;/p&gt;
&lt;p&gt;在终端中输入以下命令：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;npm&lt;/span&gt; install -g babel-cli&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1305.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果安装比较慢的话，Mac 下可以使用&lt;code&gt;cnpm&lt;/code&gt;进行安装 ，windows 下可以使用&lt;code&gt;nrm&lt;/code&gt;切换到 taobao 的镜像。&lt;/p&gt;
&lt;p&gt;（3）本地安装 babel-preset-es2015 和 babel-cli：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;npm&lt;/span&gt; install --save-dev babel-preset-es2015 babel-cli&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1307.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，会发现&lt;code&gt;package.json&lt;/code&gt;文件，已经多了 devDependencies 选项：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1308.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）新建.babelrc：&lt;/p&gt;
&lt;p&gt;在根目录下新建文件&lt;code&gt;.babelrc&lt;/code&gt;，输入如下内容：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{
    &quot;presets&quot;:[
        &quot;es2015&quot;
    ],
    &quot;plugins&quot;:[]
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）开始转换：&lt;/p&gt;
&lt;p&gt;现在，我们应该可以将 ES6 的文件转化为 ES5 的文件了，命令如下：（此命令略显复杂）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    babel src/index.js -o dist/index.js&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们可以将上面这个命令进行简化一下。操作如下：&lt;/p&gt;
&lt;p&gt;在文件 &lt;code&gt;package.json&lt;/code&gt; 中修改键 &lt;code&gt;scripts&lt;/code&gt;中的内容：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode json&quot;&gt;
&lt;code class=&quot;sourceCode json&quot;&gt;  &lt;span class=&quot;er&quot;&gt;&quot;scripts&quot;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;babel src/index.js -o dist/index.js&quot;&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;,&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改后的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1315.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目前为止，环境配置好了。以后，我们执行如下命令，即可将&lt;code&gt;src/index.js&lt;/code&gt;这个 ES6 文件转化为 &lt;code&gt;dist/index.js&lt;/code&gt;这个 ES5 文件：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;npm&lt;/span&gt; run build&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们执行上面的命令之后，会发现， dist目录下会生成 ES5 的 js 文件：&lt;/p&gt;
&lt;p&gt;index.js：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;st&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'vitateam'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当我们打开网页后，就可以在浏览器的控制台，看到代码的输出结果。&lt;/p&gt;
&lt;p&gt;接下来，我们讲一下 ES6的常见语法。&lt;/p&gt;
&lt;h2 id=&quot;es6-的变量声明&quot;&gt;ES6 的变量声明&lt;/h2&gt;
&lt;p&gt;ES6 中新增了 let 和 const 来定义变量：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;var&lt;/code&gt;：，ES5 和 ES6中，定义&lt;strong&gt;全局变量&lt;/strong&gt;（是variable的简写）。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;let&lt;/code&gt;：定义&lt;strong&gt;局部变量&lt;/strong&gt;，替代 var。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;const&lt;/code&gt;：定义&lt;strong&gt;常量&lt;/strong&gt;（定义后，不可修改）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;var全局变量&quot;&gt;var：全局变量&lt;/h3&gt;
&lt;p&gt;看下面的代码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;//这里的 a，指的是 区块 里的 a&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码是可以输出结果的，输出结果为 1。因为 var 是全局声明的，所以，即使是在区块里声明，但仍然在全局起作用。&lt;/p&gt;
&lt;p&gt;再来看下面这段代码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;//这里的 a，指的是 区块 里的 a&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码的输出结果为 2 ，因为 var 是全局声明的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用 var 定义的全部变量，有时候会污染整个 js 的作用域。&lt;/p&gt;
&lt;h3 id=&quot;let局部变量&quot;&gt;let：局部变量&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;    var a = 2;
    {
        let a = 3;
    }

    console.log(a);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上方代码的输出结果为 2。用 let 声明的变量，只在局部起作用。&lt;/p&gt;
&lt;p&gt;let是防止数据污染，我们来看下面这个例子：&lt;/p&gt;
&lt;p&gt;用 var 声明变量：（可以打印结果，说明循环体外的变量 i 被污染了）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    for (var i = 0; i &amp;lt; 10; i++) {
        console.log('循环体中:' + i);
    }

    console.log('循环体外:' + i);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;用let声明变量：（不能打印结果）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    for (let i = 0; i &amp;lt; 10; i++) {
        console.log('循环体中:' + i);
    }

    console.log('循环体外:' + i);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;我们要习惯用 let 声明，减少var声明带来的&lt;strong&gt;污染全局空间&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为了进一步说明 let 不会带来污染，需要说明的是：当我们定义了&lt;code&gt;let a = 1&lt;/code&gt;时，如果我们在同一个作用域内继续定义&lt;code&gt;let a = 2&lt;/code&gt;，是会报错的。&lt;/p&gt;
&lt;h3 id=&quot;const声明常量&quot;&gt;const：声明常量&lt;/h3&gt;
&lt;p&gt;在程序开发中，有些变量是希望声明后，在业务层就不再发生变化，此时可以用 const 来定义。&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;const name = 'smyhvae';  //定义常量
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;变量的解构赋值&quot;&gt;变量的解构赋值&lt;/h2&gt;
&lt;p&gt;ES6允许我们，通过数组或者对象的方式，对一组变量进行赋值，这被称为解构。&lt;/p&gt;
&lt;p&gt;解构赋值在实际开发中可以大量减少我们的代码量，并且让程序结构更清晰。&lt;/p&gt;
&lt;h3 id=&quot;数组的解构赋值&quot;&gt;数组的解构赋值&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;举例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通常情况下，我们在为一组变量赋值时，一般是这样写：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; c &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在我们可以通过数组解构的方式进行赋值：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; c] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;二者的效果是一样的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解构的默认值：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在解构赋值时，是允许使用默认值的。举例如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//一个变量时&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [foo &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; []&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(foo)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：true&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//两个变量时&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'生命壹号'&lt;/span&gt;]   &lt;span class=&quot;co&quot;&gt;//a 赋值为：生命壹号。b没有赋值&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：生命壹号,undefined&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;//两个变量时&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'生命壹号'&lt;/span&gt;]   &lt;span class=&quot;co&quot;&gt;//a 赋值为：生命壹号。b 采用默认值 smyhvae&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：生命壹号,smyhvae&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;和&lt;code&gt;null&lt;/code&gt;的区别：&lt;/p&gt;
&lt;p&gt;如果我们在赋值时，采用的是 &lt;code&gt;undefined&lt;/code&gt;或者&lt;code&gt;null&lt;/code&gt;，那会有什么区别呢？&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'生命壹号'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;undefined&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//b 虽然被赋值为 undefined，但是 b 会采用默认值&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：生命壹号,smyhvae&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'生命壹号'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//b 被赋值为 null&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：生命壹号,null&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码分析：&lt;/p&gt;
&lt;h3 id=&quot;对象的解构赋值&quot;&gt;对象的解构赋值&lt;/h3&gt;
&lt;p&gt;我们同样可以针对对象，进行结构赋值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举例如下：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    let { foo, bar } = { bar: '我是 bar 的值', foo: '我是 foo 的值' };
    console.log(foo + ',' + bar); //输出结果：我是键 foo 的值,我是键 bar 的值
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上方代码可以看出，对象的解构与数组的结构，有一个重要的区别：&lt;strong&gt;数组&lt;/strong&gt;的元素是按次序排列的，变量的取值由它的&lt;strong&gt;位置&lt;/strong&gt;决定；而&lt;strong&gt;对象的属性没有次序&lt;/strong&gt;，是&lt;strong&gt;根据键来取值&lt;/strong&gt;的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;圆括号的使用&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;如果变量 foo 在解构之前就已经定义了，此时你再去解构，就会出现问题。下面是错误的代码，编译会报错：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; foo &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'haha'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; foo &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(foo)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要解决报错，只要在解构的语句外边，加一个圆括号即可：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; foo &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'haha'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    (&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; foo &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(foo)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//输出结果：smyhvae&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;字符串结构&quot;&gt;字符串结构&lt;/h3&gt;
&lt;p&gt;字符串也可以解构，这是因为，此时字符串被转换成了一个类似数组的对象。举例如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; [a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; d] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(c)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(d)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;typeof&lt;/span&gt; a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//输出结果：string&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1626.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;扩展运算符和-rest-运算符&quot;&gt;扩展运算符和 rest 运算符&lt;/h2&gt;
&lt;h3 id=&quot;扩展运算符&quot;&gt;扩展运算符&lt;/h3&gt;
&lt;p&gt;有了ES6，当我们在定义一个方法，但是不确定其参数的个数时，我们就可以用&lt;strong&gt;扩展运算符&lt;/strong&gt;作为参数。&lt;/p&gt;
&lt;p&gt;以前，我们在定义方法时，参数要确定个数，如下：（程序会报错）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; c) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(a)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(b)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(c)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(d)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码中，因为方法的参数是三个，但使用时是用到了四个参数，所以会报错：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1638.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在，我们有了扩展运算符，就不用担心报错的问题了。代码可以这样写：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(...&lt;span class=&quot;at&quot;&gt;arg&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;//当不确定方法的参数时，可以使用扩展运算符&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(arg[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(arg[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(arg[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(arg[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;//方法中定义了四个参数，但只引用了三个参数，ES6 中并不会报错。&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1650.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举例：&lt;/strong&gt;数组赋值的问题&lt;/p&gt;
&lt;p&gt;我们来分析一段代码：（将数组 arr1 赋值给 arr2）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; arr1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'www'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'com'&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; arr2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; arr1&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;co&quot;&gt;// 将 arr1 赋值给 arr2，其实是让 arr2 指向 arr1 的内存地址&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr1:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr2:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr2)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'---------------------'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;arr2&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'你懂得'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//往arr2 里添加一部分内容&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr1:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr2:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr2)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1950.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上方代码中，我们往往 arr2 里添加了&lt;code&gt;你懂的&lt;/code&gt;，却发现，arr1 里也有这个内容。原因是：&lt;code&gt;let arr2 = arr1;&lt;/code&gt;其实是让 arr2 指向 arr1 的地址。也就是说，二者指向的是同一个内存地址。&lt;/p&gt;
&lt;p&gt;如果不想让 arr1 和 arr2 指向同一个内存地址，我们可以借助扩展运算符来做：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; arr1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;'www'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'com'&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; arr2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [...&lt;span class=&quot;at&quot;&gt;arr1&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//arr2 会重新开辟内存地址&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr1:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr2:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr2)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'---------------------'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;arr2&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'你懂得'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//往arr2 里添加一部分内容&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr1:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'arr2:'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; arr2)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_1951.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们明白了这个例子，就可以避免开发中的很多业务逻辑上的 bug。&lt;/p&gt;
&lt;h3 id=&quot;rest-运算符&quot;&gt;&lt;code&gt;rest&lt;/code&gt; 运算符&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rest&lt;/code&gt; 在英文中指的是&lt;strong&gt;剩余部分&lt;/strong&gt;（不是指休息）。我们来举个例子，理解剩余部分的含义：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(first&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; second&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; ...&lt;span class=&quot;at&quot;&gt;arg&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;arg&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//调用函数后，输出结果为 5&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码的输出结果为 5。 调用&lt;code&gt;fn()&lt;/code&gt;时，里面有七个参数，而&lt;code&gt;arg&lt;/code&gt;指的是剩下的部分（因为除去了&lt;code&gt;firt&lt;/code&gt;和&lt;code&gt;second&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;从上方例子中可以看出，&lt;code&gt;rest&lt;/code&gt;运算符适用于：知道前面的一部分参数的数量，但对于后面剩余的参数数量未知的情况。&lt;/p&gt;
&lt;h2 id=&quot;for-...-of-循环&quot;&gt;for ... of 循环&lt;/h2&gt;
&lt;p&gt;ES6 中，如果我们要遍历一个数组，可以这样做：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    let arr1 = [1, 2, 3, 4, 5];

    for (let value of arr1) {
        console.log(value);
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180304_2016.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;for…of 的循环可以避免我们开拓内存空间，增加代码运行效率，所以建议大家在以后的工作中使用for…of循环。&lt;/p&gt;
&lt;h2 id=&quot;模板字符串&quot;&gt;模板字符串&lt;/h2&gt;
&lt;p&gt;我们以前让字符串进行拼接的时候，是这样做的：（传统写法的字符串拼接）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; age &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'26'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'name:'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;name&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;',age:'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;age)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;//传统写法&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这种写法，比较繁琐，而且容易出错。&lt;/p&gt;
&lt;p&gt;现在有了 ES6 语法，字符串拼接可以这样写：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'smyhvae'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; age &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'26'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'name:'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;name&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;',age:'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;age)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;//传统写法&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;vs&quot;&gt;`name:&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;${&lt;/span&gt;name&lt;span class=&quot;sc&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;vs&quot;&gt;,age:&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;${&lt;/span&gt;age&lt;span class=&quot;sc&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;vs&quot;&gt;`&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//ES6 写法&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意，上方代码中，倒数第二行用的是单引号，最后一行用的是反引号（在tab键的上方）。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;h2 id=&quot;箭头函数&quot;&gt;箭头函数&lt;/h2&gt;
&lt;p&gt;定义和调用函数：（传统写法）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;fn1&lt;/span&gt;(a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;fn1&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//输出结果：3&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义和调用函数：（ES6中的写法）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
    var fn2 = (a, b) =&amp;gt; a + b;

    console.log(fn2(1, 2));  //输出结果：3
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上方代码中，箭头后面的内容，就相当于 return 的内容。&lt;/p&gt;
&lt;p&gt;在箭头函数中，如果方法体内有两句话，那就需要在方法体外边加上{}括号。如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; fn2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'haha'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;fn2&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//输出结果：3&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从上面的箭头函数中，我们可以很清晰地找到函数名、参数名、方法体。&lt;/p&gt;
&lt;p&gt;当然，在 ES6 中定义方法时，我们还可以给方法里的参数加一个&lt;strong&gt;默认值&lt;/strong&gt;（缺省值）：&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; fn2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'haha'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;fn2&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;co&quot;&gt;//第二个参数使用默认值 5。输出结果：6&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;fn2&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;//输出结果：9&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多 ES6 的语法，本文会陆续更新。&lt;/p&gt;
&lt;h2 id=&quot;参考链接&quot;&gt;参考链接：&lt;/h2&gt;
&lt;h2 id=&quot;我的公众号&quot;&gt;我的公众号&lt;/h2&gt;
&lt;p&gt;想学习&lt;span&gt;&lt;strong&gt;代码之外的软技能&lt;/strong&gt;&lt;/span&gt;？不妨关注我的微信公众号：&lt;strong&gt;生命团队&lt;/strong&gt;（id：&lt;code&gt;vitateam&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/2016040102.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 04 Mar 2018 13:07:00 +0000</pubDate>
<dc:creator>生命壹号</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/smyhvae/p/8506152.html</dc:identifier>
</item>
</channel>
</rss>