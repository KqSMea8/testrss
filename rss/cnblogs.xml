<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>定制属于你自己的ViewEngine(一套逻辑多套UI) - 扫地僧2015</title>
<link>http://www.cnblogs.com/saodiseng2015/p/9742283.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/saodiseng2015/p/9742283.html</guid>
<description>&lt;p&gt;ASP.NET MVC出来这么久了，心中却又很多的疑惑：为什么所有的View都要放在Views目录下? 为什么Shared文件夹下面的页面可以被共享? 为什么Page既可以是*.cshtml，也可以是*.aspx? &lt;/p&gt;
&lt;p&gt;其实上面的几个问题归结起来都是视图引擎的功效。&lt;/p&gt;
&lt;p&gt;在传统的ASP.NET中，可能还没有ViewEngine的概念。因为在Web From里面，实现Page实现了IHttpHanlder的接口，所以Page既是响应的处理类，也是视图的渲染类。在ASP.NET MVC中，视图的概念被抽象了出来，试图引擎的概念也被抽象成了一个接口。&lt;/p&gt;
&lt;p&gt;首先来看一下IViewEngine接口的定义&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; System.Web.Mvc
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IViewEngine
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         ViewEngineResult FindPartialView(ControllerContext controllerContext, &lt;span&gt;string&lt;/span&gt; partialViewName, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; useCache);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         ViewEngineResult FindView(ControllerContext controllerContext, &lt;span&gt;string&lt;/span&gt; viewName, &lt;span&gt;string&lt;/span&gt; masterName, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; useCache);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ReleaseView(ControllerContext controllerContext, IView view);
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总共3个函数，总结起来大概就是两个功能：Find &amp;amp; Release。&lt;/p&gt;


&lt;p&gt;默认情况下，ASP.NET MVC提供了两个视图引擎：WebFormViewEngine和RazorViewEngine&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; System.Web.Mvc
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ViewEngines
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; ViewEngineCollection _engines = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ViewEngineCollection
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WebFormViewEngine(),
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RazorViewEngine(),
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;  
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; ViewEngineCollection Engines
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;get&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _engines; }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这就是为什么ASP.NET MVC既支持*.aspx，又支持*.cshtml的原因了（个人觉得如果已经确定要使用RazorView的话，不如把WebFormViewEngine给移除，可能对性能会有所帮助）。&lt;/p&gt;

&lt;p&gt;那为什么所有的视图都要放在Views目录下呢，这个就要拜RazorViewngines所赐了。&lt;/p&gt;
&lt;p&gt;下面是RazorViewEngine的构造函数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; RazorViewEngine(IViewPageActivator viewPageActivator)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;             : &lt;span&gt;base&lt;/span&gt;&lt;span&gt;(viewPageActivator)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             AreaViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             AreaMasterLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             AreaPartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Areas/{2}/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;  
&lt;span&gt;26&lt;/span&gt;             ViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             MasterLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;             PartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/{1}/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views/Shared/{0}.vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;  
&lt;span&gt;48&lt;/span&gt;             FileExtensions = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vbhtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有的寻址路径都被格式化了，是不是很眼熟呢，关于这里为啥用数组而不用List，个人觉得，数组的寻址效率要更高些，遍历速度更快。&lt;/p&gt;

&lt;p&gt;好了，找了“罪魁祸首”，就好好地调教一个，让它乖乖听话，小样让去哪就去哪里。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; razor视图引擎扩展
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerViewEngine : RazorViewEngine
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 可以分开部署不同语种
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;engineName&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; CustomerViewEngine(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; engineName)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.ViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.PartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.AreaViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.AreaPartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; ViewEngineResult FindView(ControllerContext controllerContext, &lt;span&gt;string&lt;/span&gt; viewName, &lt;span&gt;string&lt;/span&gt; masterName, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; useCache)
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;             &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.SetEngine(controllerContext);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;base&lt;/span&gt;&lt;span&gt;.FindView(controllerContext, viewName, masterName, useCache);
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; 
&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; ViewEngineResult FindPartialView(ControllerContext controllerContext, &lt;span&gt;string&lt;/span&gt; partialViewName, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; useCache)
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.SetEngine(controllerContext);
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;base&lt;/span&gt;&lt;span&gt;.FindPartialView(controllerContext, partialViewName, useCache);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 根据条件自行设置,目前是chrome浏览器就展示默认的
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 不是chrome浏览器的话就展示/Themes/Eleven下的
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 可以直接测试是移动端还是pc端
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 然后写入cookie
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; SetEngine(ControllerContext controllerContext)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;             &lt;span&gt;string&lt;/span&gt; engineName = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Themes/Eleven&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (controllerContext.HttpContext.Request.UserAgent.IndexOf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Chrome/65&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) &amp;gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;                 engineName = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; 
&lt;span&gt;63&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;if (controllerContext.HttpContext.Request.IsMobile())&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测是不是移动端
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    engineName = null;
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;67&lt;/span&gt; 
&lt;span&gt;68&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.ViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;               {
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;72&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.PartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;78&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt; 
&lt;span&gt;80&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.AreaViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;84&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt; 
&lt;span&gt;86&lt;/span&gt;             &lt;span&gt;base&lt;/span&gt;.AreaPartialViewLocationFormats = &lt;span&gt;new&lt;/span&gt;&lt;span&gt;[]
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;88&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/{1}/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt;                     &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;~Areas/{2}/Views&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + engineName + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/Shared/{0}.cshtml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;90&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;91&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下去就很简单了，只需要把原来的视图引擎清空，加载自己的视图引擎就可以了&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Application_Start()
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;            AreaRegistration.RegisterAllAreas();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;  
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;            ViewEngines.Engines.Clear();
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;  
&lt;span&gt; 7&lt;/span&gt;             ViewEngines.Engines.Add(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; CustomViewEngine());
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            RegisterGlobalFilters(GlobalFilters.Filters);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            RegisterRoutes(RouteTable.Routes);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 04 Oct 2018 07:06:00 +0000</pubDate>
<dc:creator>扫地僧2015</dc:creator>
<og:description>ASP.NET MVC出来这么久了，心中却又很多的疑惑：为什么所有的View都要放在Views目录下? 为什么Shared文件夹下面的页面可以被共享? 为什么Page既可以是*.cshtml，也可以是</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/saodiseng2015/p/9742283.html</dc:identifier>
</item>
<item>
<title>Django商城项目笔记No.8用户部分-注册接口实现 - 冯文瑞</title>
<link>http://www.cnblogs.com/blog-rui/p/9742266.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/blog-rui/p/9742266.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1417295/201810/1417295-20181004124453656-389459156.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1417295/201810/1417295-20181004124529455-1652057923.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;users的view.py中增加如下代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; RegisterUserView(CreateAPIView):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    用户注册视图
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    serializer_class &lt;/span&gt;= serializers.RegisterUserSerializer
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在users中创建serializers.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;&lt;img id=&quot;code_img_closed_99509ff7-b601-424a-ab6f-4891f37af239&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_99509ff7-b601-424a-ab6f-4891f37af239&quot; class=&quot;code_img_opened&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_99509ff7-b601-424a-ab6f-4891f37af239&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;89&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; RegisterUserSerializer(serializers.ModelSerializer):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;用户注册序列化器&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    password2 &lt;/span&gt;= serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;确认密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=&lt;span&gt;True)
    sms_code &lt;/span&gt;= serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;短信验证码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=&lt;span&gt;True)
    allow &lt;/span&gt;= serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;同意协议&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; User
        fields &lt;/span&gt;= (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;password2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mobile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;allow&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        extra_kwargs &lt;/span&gt;=&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 5&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 20&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;error_messages&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许5-20个字符的用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许5-20个字符的用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                }
            },
            &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;write_only&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: True,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 8&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 20&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;error_messages&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许8-20个字符的密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许8-20个字符的密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                }
            }
        }

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; validate_mobile(self, value):
        &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;验证手机号&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; re.match(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^1[3-9]\d{9}$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, value):
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;手机号格式错误&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; value

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; validate_allow(self, value):
        &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;检查用户是否同意协议&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; value != &lt;span&gt;'&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;请同意用户协议&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; value

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; validate(self, attrs):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 判断两次密码&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] != attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]:
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;输入的两次密码不一致&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 判断短信验证码&lt;/span&gt;
        redis_conn = get_redis_connection(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;verify_codes&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 获取真实验证码&lt;/span&gt;
        real_sms_code = redis_conn.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_%s&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; % attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;mobile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;])
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 如果取出来是None，那么代表已经超时了&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; real_sms_code &lt;span&gt;is&lt;/span&gt;&lt;span&gt; None:
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;短信验证码无效&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 注意real_sms_code 从redis中取出来的是bytes类型，需要decode一下&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] !=&lt;span&gt; real_sms_code.decode():
            &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;短信验证码错误&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; attrs

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; create(self, validated_data):
        &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;重写保存方法，增加密码加密&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;

        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 移除数据库模型类中不需要的属性&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 删除字典数据的两种方法是&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; del 字典[key] 删除指定键值对,key不存在不会报错&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 字典.pop(key) 删除指定键值对,key不存在会报错&lt;/span&gt;
        &lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        &lt;/span&gt;&lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;allow&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        &lt;/span&gt;&lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; user = User.objects.create(username=xxx, password=xxxx, mobile=xxxx)&lt;/span&gt;
        user = User.objects.create(**&lt;span&gt;validated_data)

        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 将密码加密,然后保存&lt;/span&gt;
        user.set_password(validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;])
        user.save()

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; user
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
fields = (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;password2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mobile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;allow&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;fields=(),括号里面需要输入&lt;span&gt;序列化和反序列化&lt;/span&gt;过程中所用到的&lt;span&gt;所有&lt;/span&gt;字段，如果是模型类中没有的字段，可以在上面指明字段的类型和限制&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
password2 = serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;确认密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=&lt;span&gt;True)
sms_code &lt;/span&gt;= serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;短信验证码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=&lt;span&gt;True)
allow &lt;/span&gt;= serializers.CharField(label=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;同意协议&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, write_only=True)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;write_only=True的意思是指在序列化的时候使用，序列化(从&lt;span&gt;后端往前端&lt;/span&gt;传叫&lt;span&gt;序列化&lt;/span&gt;)，反序列化(从&lt;span&gt;前端往后端&lt;/span&gt;传，&lt;span&gt;保存到数据库&lt;/span&gt;中，叫&lt;span&gt;反序列化&lt;/span&gt;)&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
extra_kwargs =&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 5&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 20&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;error_messages&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许5-20个字符的用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许5-20个字符的用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                }
            },
            &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;write_only&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: True,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 8&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 20&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;error_messages&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: {
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;min_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许8-20个字符的密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;max_length&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;仅允许8-20个字符的密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                }
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;extra_kwargs是对字段做限制。“error_messages”是如果不符合限制的规则，提示的信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; validate_mobile(self, value):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;验证手机号&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; re.match(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^1[3-9]\d{9}$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, value):
        &lt;/span&gt;&lt;span&gt;raise&lt;/span&gt; serializers.ValidationError(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;手机号格式错误&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; value
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;validate_字段名,是对一个字段做判断。自己写判断规则，如果不符合的话，就抛出异常，最后再return value&lt;/p&gt;
&lt;p&gt;def validate(self, attrs): 这是对多个字段做判断，attrs是一个字典，可以通过attrs['字段名']来获取字段的值&lt;/p&gt;
&lt;p&gt;不符合的话，也是raise 抛出异常，最后再return attrs&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt; 最后重写create方法，创建user&lt;/p&gt;
&lt;p&gt;创建之前要把数据库模型类中不需要的字段从validated_data中删掉&lt;/p&gt;
&lt;p&gt;# 移除数据库模型类中不需要的属性&lt;br/&gt;# 删除字典数据的两种方法是&lt;br/&gt;# del 字典[key] 删除指定键值对,key不存在不会报错&lt;br/&gt;# 字典.pop(key) 删除指定键值对,key不存在会报错&lt;/p&gt;
&lt;p&gt;这里使用del删除&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;allow&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;del&lt;/span&gt; validated_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;sms_code&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除之后，validated_data字典中只剩下这几个&lt;span&gt;'id'&lt;/span&gt;, 'username', 'password', 'mobile' 键值对  &lt;strong&gt;&lt;span&gt;TODO？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;为什么要重写create方法，&lt;/p&gt;
&lt;p&gt;user = User.objects.create(username=xxx, password=xxxx, mobile=xxxx)&lt;/p&gt;
&lt;p&gt;user = User.objects.create(**validated_data)  # **validated_data是拆包,拆成上面的形式&lt;/p&gt;
&lt;p&gt;因为password字段，需要存入的是加密后的密码，如果直接create()然后save()的话，存入的密码是明文，所以要调用user.set_password(validated_data['password'])&lt;/p&gt;
&lt;p&gt;加密密码之后再进行save保存，然后return user&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;设置路由&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1417295/201810/1417295-20181004145736683-1124868890.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;前端js代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_c1db2d2b-e107-43d9-b4ef-5164901cb0b3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c1db2d2b-e107-43d9-b4ef-5164901cb0b3&quot; class=&quot;code_img_opened&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c1db2d2b-e107-43d9-b4ef-5164901cb0b3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 注册&lt;/span&gt;
        on_submit: &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_username();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_pwd();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_cpwd();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_phone();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_sms_code();
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.check_allow();

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;this&lt;/span&gt;.error_name == &lt;span&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span&gt;this&lt;/span&gt;.error_password == &lt;span&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span&gt;this&lt;/span&gt;.error_check_password == &lt;span&gt;false&lt;/span&gt; 
                &amp;amp;&amp;amp; &lt;span&gt;this&lt;/span&gt;.error_phone == &lt;span&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span&gt;this&lt;/span&gt;.error_sms_code == &lt;span&gt;false&lt;/span&gt; &amp;amp;&amp;amp; &lt;span&gt;this&lt;/span&gt;.error_allow == &lt;span&gt;false&lt;/span&gt;&lt;span&gt;) {
                axios.post(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.host + '/users/'&lt;span&gt;, {
                        username: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.username,
                        password: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.password,
                        password2: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.password2,
                        mobile: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.mobile,
                        sms_code: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.sms_code,
                        allow: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.allow.toString()
                    }, {
                        responseType: &lt;/span&gt;'json'&lt;span&gt;
                    })
                    .then(response &lt;/span&gt;=&amp;gt;&lt;span&gt; {
                        location.href &lt;/span&gt;= '/index.html'&lt;span&gt;;    
                    })
                    .&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;(error=&amp;gt;&lt;span&gt; {
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (error.response.status == 400&lt;span&gt;) {
                            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; ('non_field_errors' &lt;span&gt;in&lt;/span&gt;&lt;span&gt; error.response.data) {
                                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.error_sms_code_message = error.response.data.non_field_errors[0&lt;span&gt;];
                            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.error_sms_code_message = '数据有误'&lt;span&gt;;
                            }
                            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.error_sms_code = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                            console.log(error.response.data);
                        }
                    })
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;测试结果，去数据库查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1417295/201810/1417295-20181004145940402-30173031.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注册接口到这里就完成了&lt;/p&gt;

</description>
<pubDate>Thu, 04 Oct 2018 07:00:00 +0000</pubDate>
<dc:creator>冯文瑞</dc:creator>
<og:description>Django商城项目笔记No.8用户部分-注册接口实现 users的view.py中增加如下代码 在users中创建serializers.py class RegisterUserSerialize</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/blog-rui/p/9742266.html</dc:identifier>
</item>
<item>
<title>SpringMVC 完美解决PUT请求参数绑定问题(普通表单和文件表单) - 梦三</title>
<link>http://www.cnblogs.com/huangyi-427/p/9742000.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huangyi-427/p/9742000.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;一 解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修改web.xml配置文件 将下面配置拷贝进去(在原有的web-app节点里面配置 其它配置不变)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!-- 处理PUT提交参数(只对基础表单生效) --&amp;gt;
&amp;lt;filter&amp;gt;
    &amp;lt;filter-name&amp;gt;httpPutFormContentFilter&amp;lt;/filter-name&amp;gt;
    &amp;lt;filter-&lt;span&gt;class&lt;/span&gt;&amp;gt;org.springframework.web.filter.HttpPutFormContentFilter&amp;lt;/filter-&lt;span&gt;class&lt;/span&gt;&amp;gt;
&amp;lt;/filter&amp;gt;
&amp;lt;filter-mapping&amp;gt;
    &amp;lt;filter-name&amp;gt;httpPutFormContentFilter&amp;lt;/filter-name&amp;gt;
    &amp;lt;!-- 拦截所有 --&amp;gt;
    &amp;lt;url-pattern&amp;gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;&amp;lt;/url-pattern&amp;gt;
&amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写一个PostAndPutCommonsMultipartResolver继承CommonsMultipartResolver 重写isMultipart()&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 处理PUT提交参数(只对文件表单生效)
 * Created by Hy on 2018/9/30.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; PostAndPutCommonsMultipartResolver &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; CommonsMultipartResolver {

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isMultipart(HttpServletRequest request) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&quot;POST&quot;.equalsIgnoreCase(request.getMethod()) || &quot;PUT&quot;&lt;span&gt;.equalsIgnoreCase(request.getMethod())) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; FileUploadBase.isMultipartContent(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ServletRequestContext(request));
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改spring-mvc.xml配置文件 将下面配置拷贝进去(在原有的beans节点里面配置 其它配置不变)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!-- 配置文件上传实现类 --&amp;gt;
&amp;lt;bean id=&quot;multipartResolver&quot; &lt;span&gt;class&lt;/span&gt;=&quot;com.hy.mm.manager.resolver.PostAndPutCommonsMultipartResolver&quot;&amp;gt;
    &amp;lt;!-- 设定默认编码 --&amp;gt;
    &amp;lt;property name=&quot;defaultEncoding&quot; value=&quot;UTF-8&quot; /&amp;gt;
    &amp;lt;!-- 文件上传大小(单位B) 30M = 30 * 1024 * 1024 --&amp;gt;
    &amp;lt;property name=&quot;maxUploadSize&quot; value=&quot;31457280&quot; /&amp;gt;
&amp;lt;/bean&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写一个Controller&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * PUT请求
 * Created by Hy on 2018/9/30.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@Controller
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PutController {

    @PutMapping(&lt;/span&gt;&quot;/put/normal&quot;&lt;span&gt;) @ResponseBody
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String normalForm(String name, Integer age) {
        System.out.println(&lt;/span&gt;&quot;name = &quot; +&lt;span&gt; name);
        System.out.println(&lt;/span&gt;&quot;age = &quot; +&lt;span&gt; age);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;ok&quot;&lt;span&gt;;
    }

    @PutMapping(&lt;/span&gt;&quot;/put/file&quot;&lt;span&gt;) @ResponseBody
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; String fileForm(String name, MultipartFile file) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
        System.out.println(&lt;/span&gt;&quot;name = &quot; +&lt;span&gt; name);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;null&lt;/span&gt; != file &amp;amp;&amp;amp; !&lt;span&gt;file.isEmpty()) {
            System.out.println(&lt;/span&gt;&quot;file = &quot; +&lt;span&gt; file.getSize());
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 保存图片&lt;/span&gt;
            String fileName = UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;文件名&lt;/span&gt;
            String extension = FilenameUtils.getExtension(file.getOriginalFilename()); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;扩展名 不包含(.)&lt;/span&gt;
            file.transferTo(&lt;span&gt;new&lt;/span&gt; File(&quot;/Users/HUANGYI/Downloads/&quot; + fileName + &quot;.&quot; +&lt;span&gt; extension));
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;ok&quot;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;error&quot;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就能完美解决PUT请求参数绑定问题 赶时间的老哥可以忽略下文&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;二 解决思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;先bb一下起因&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我最近再重构一个自己的项目 打算把接口交互修改成RESTful风格 浅显的说一下RESTful风格 增删改查对应POST DELETE PUT GET请求&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;客户端: Android 使用Retrofit发起请求&lt;/p&gt;
&lt;p&gt;服务端: Java 使用SpringMVC处理请求&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;客户端使用PUT请求发送表单数据 不管是普通表单还是文件表单 服务端Controller层参数绑定均为null&lt;/p&gt;
&lt;p&gt;但是 客户端使用PUT请求发送非文件数据携带在Url上(类似GET请求) 服务端Controller层参数就能接收到&lt;/p&gt;
&lt;p&gt;为了避免重复造轮子 我用Google解决了普通表单数据接收不到 也就是使用上面说的org.springframework.web.filter.HttpPutFormContentFilter就可以解决该问题&lt;/p&gt;
&lt;p&gt;但是 文件表单数据还是接收不到 Google也不好用了 不知道是不是我姿势不对&lt;/p&gt;
&lt;p&gt;自己尝试解决吧&lt;/p&gt;
&lt;p&gt;先验证文件表单数据到底写入请求体没有?&lt;/p&gt;
&lt;p&gt;我用logging-interceptor和Charles观察了好几遍请求 确认了数据确实已经写入了请求体&lt;/p&gt;
&lt;p&gt;那么 问题肯定就出现在SpringMVC的文件参数绑定上&lt;/p&gt;
&lt;p&gt;仔细观察org.springframework.web.multipart.commons.CommonsMultipartResolver&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/775225/201810/775225-20181004122315503-1435296761.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中 isMultipart()是一个比较重要的方法 用来判断请求是否包含多部分内容 也就是判断是否是文件表单 深入观察一下该方法的实现&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/775225/201810/775225-20181004122330625-1583812414.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;真相大白 该方法默认POST请求才可能包含多部分内容&lt;/p&gt;
&lt;p&gt;使用上面说的PostAndPutCommonsMultipartResolver就可以解决该问题&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Android客户端核心代码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * ...
 * Created by Hy on 2018/9/30.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; PutApi {

    @PUT(&lt;/span&gt;&quot;/put/normal&quot;&lt;span&gt;) @FormUrlEncoded
    Call&lt;/span&gt;&amp;lt;ResponseBody&amp;gt; normal(@Field(&quot;name&quot;) String name, @Field(&quot;age&quot;&lt;span&gt;) Integer age);

    @PUT(&lt;/span&gt;&quot;/put/file&quot;&lt;span&gt;) @Multipart
    Call&lt;/span&gt;&amp;lt;ResponseBody&amp;gt; file(@Part(&quot;name&quot;&lt;span&gt;) String name, @Part MultipartBody.Part file);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Override
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onClick(View view) {
    &lt;/span&gt;&lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (view.getId()) {
        &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; R.id.normal:
            Call&lt;/span&gt;&amp;lt;ResponseBody&amp;gt; normalCall = mApi.normal(&quot;黄祎&quot;, 18&lt;span&gt;);
            normalCall.enqueue(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Callback&amp;lt;ResponseBody&amp;gt;&lt;span&gt;() {
                @Override
                &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onResponse(Call&amp;lt;ResponseBody&amp;gt; call, Response&amp;lt;ResponseBody&amp;gt;&lt;span&gt; response) {
                    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                        Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;code = &quot; +&lt;span&gt; response.code());
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;null&lt;/span&gt; !=&lt;span&gt; response.body())
                            Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;body = &quot; +&lt;span&gt; response.body().string());

                    } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
                        e.printStackTrace();
                    }
                }

                @Override
                &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onFailure(Call&amp;lt;ResponseBody&amp;gt;&lt;span&gt; call, Throwable t) {
                    Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;t = &quot; +&lt;span&gt; t.getMessage());
                }
            });

            &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; R.id.file:
            RequestBody fileBody &lt;/span&gt;= RequestBody.create(MediaType.parse(&quot;application/octet-stream&quot;&lt;span&gt;), copy());
            MultipartBody.Part body &lt;/span&gt;= MultipartBody.Part.createFormData(&quot;file&quot;, &quot;a.mp4&quot;&lt;span&gt;, fileBody);
            Call&lt;/span&gt;&amp;lt;ResponseBody&amp;gt; fileCall = mApi.file(&quot;黄祎&quot;&lt;span&gt;, body);
            fileCall.enqueue(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Callback&amp;lt;ResponseBody&amp;gt;&lt;span&gt;() {
                @Override
                &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onResponse(Call&amp;lt;ResponseBody&amp;gt; call, Response&amp;lt;ResponseBody&amp;gt;&lt;span&gt; response) {
                    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                        Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;code = &quot; +&lt;span&gt; response.code());
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;null&lt;/span&gt; !=&lt;span&gt; response.body())
                            Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;body = &quot; +&lt;span&gt; response.body().string());

                    } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
                        e.printStackTrace();
                    }
                }

                @Override
                &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onFailure(Call&amp;lt;ResponseBody&amp;gt;&lt;span&gt; call, Throwable t) {
                    Log.i(&lt;/span&gt;&quot;HUANG&quot;, &quot;t = &quot; +&lt;span&gt; t.getMessage());
                }
            });
            &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然只是寥寥几句 但是我走完这几步也花了一下午时间 哈哈哈 技术有限技术有限&lt;/p&gt;
&lt;p&gt;希望能帮助到你 如果你的问题得到解决 请给个推荐点个赞 这样能帮助到更多人 毕竟搜索不到解决方案的时候太痛苦了&lt;/p&gt;

</description>
<pubDate>Thu, 04 Oct 2018 04:28:00 +0000</pubDate>
<dc:creator>梦三</dc:creator>
<og:description>SpringMVC 完美解决PUT请求参数绑定问题(普通表单和文件表单)</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huangyi-427/p/9742000.html</dc:identifier>
</item>
<item>
<title>Springboot 2.0 - 集成redis - L99</title>
<link>http://www.cnblogs.com/LxyXY/p/9741921.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/LxyXY/p/9741921.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1262632/201810/1262632-20181004114452064-962016451.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;序&lt;/p&gt;
&lt;p&gt;最近在入门SpringBoot，然后在感慨 SpringBoot较于Spring真的方便多时，顺便记录下自己在集成redis时的一些想法。&lt;/p&gt;
&lt;p&gt;1、从springboot官网查看redis的依赖包&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、操作redis&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/*
   操作k-v都是字符串的
 */
@Autowired
StringRedisTemplate stringRedisTemplet;

 /*
     操作k-v都是对象的
 */
@Autowired
RedisTemplate redisTemplate;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;redis的包中提供了两个可以操作方法，根据不同类型的值相对应选择。&lt;/p&gt;
&lt;p&gt;两个操作方法对应的redis操作都是相同的&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; stringRedisTemplet.opsForValue() // 字符串
 stringRedisTemplet.opsForList() // 列表
 stringRedisTemplet.opsForSet() // 集合
 stringRedisTemplet.opsForHash() // 哈希
 stringRedisTemplet.opsForZSet() // 有序集合&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3、修改数据的存储方式&lt;/p&gt;
&lt;p&gt;在StringRedisTemplet中，默认都是存储字符串的形式；在RedisTemplet中，值可以是某个对象，而redis默认把对象序列化后存储在redis中（所以存放的对象默认情况下需要序列化）&lt;/p&gt;
&lt;p&gt;如果需要更改数据的存储方式，如采用json来存储在redis中，而不是以序列化后的形式。&lt;/p&gt;
&lt;p&gt;1）自己创建一个RedisTemplate实例，在该实例中自己定义json的序列化格式（org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// 这里传入的是employee对象（employee 要求可以序列化）
Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt; jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2）把定义的格式放进自己定义的RedisTemplate实例中&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;RedisTemplate&amp;lt;Object,Employee&amp;gt; template = new RedisTemplate&amp;lt;&amp;gt;();
template.setConnectionFactory(redisConnectionFactory);
// 定义格式
Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt; jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class);
// 放入RedisTemplate实例中
template.setDefaultSerializer(jackson2JsonRedisSerializer);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;参考代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Bean
 public RedisTemplate&amp;lt;Object,Employee&amp;gt; employeeRedisTemplate(RedisConnectionFactory redisConnectionFactory)throws UnknownHostException{
        RedisTemplate&amp;lt;Object,Employee&amp;gt; template = new RedisTemplate&amp;lt;&amp;gt;();
        template.setConnectionFactory(redisConnectionFactory); 
        Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt; jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class);
        template.setDefaultSerializer(jackson2JsonRedisSerializer);
        return template;
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Configuration
@ConditionalOnClass({RedisOperations.class})
@EnableConfigurationProperties({RedisProperties.class})
@Import({LettuceConnectionConfiguration.class, JedisConnectionConfiguration.class})
public class RedisAutoConfiguration {
    public RedisAutoConfiguration() {
    }

    @Bean
    @ConditionalOnMissingBean(
        name = {&quot;redisTemplate&quot;}
    ) // 在容器当前没有redisTemplate时运行
    public RedisTemplate&amp;lt;Object, Object&amp;gt; redisTemplate(RedisConnectionFactory redisConnectionFactory) throws UnknownHostException {
        RedisTemplate&amp;lt;Object, Object&amp;gt; template = new RedisTemplate();
        template.setConnectionFactory(redisConnectionFactory);
        return template;
    }

    @Bean
    @ConditionalOnMissingBean // 在容器当前没有stringRedisTemplate时运行
    public StringRedisTemplate stringRedisTemplate(RedisConnectionFactory redisConnectionFactory) throws UnknownHostException {
        StringRedisTemplate template = new StringRedisTemplate();
        template.setConnectionFactory(redisConnectionFactory);
        return template;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果你自己定义了RedisTemplate后并添加@Bean注解，（要在配置类中定义），那么默认的RedisTemplate就不会被添加到容器中，运行的就是自己定义的ReidsTemplate实例，而你在实例中自己定义了序列化格式，所以就会以你采用的格式定义存放在redis中的对象。&lt;/p&gt;
&lt;p&gt;4、更改默认的缓冲&lt;/p&gt;
&lt;p&gt;springboot默认提供基于注解的缓冲，只要在主程序类（xxxApplication）标注@EnableCaching，缓冲注解有&lt;/p&gt;
&lt;p&gt;@Cachingable、@CachingEvict、@CachingPut,并且该缓冲默认使用的是ConcurrentHashMapCacheManager&lt;/p&gt;
&lt;p&gt;当引入redis的starter后,容器中保存的是RedisCacheManager ,RedisCacheManager创建RedisCache作为缓冲组件，RedisCache通过操纵redis缓冲数据&lt;/p&gt;
&lt;p&gt;5、修改redis缓冲的序列化机制&lt;/p&gt;
&lt;p&gt;在SpringBoot中，如果要修改序列化机制，可以直接建立一个配置类，在配置类中自定义CacheManager，在CacheManager中可以自定义序列化的规则，默认的序列化规则是采用jdk的序列化&lt;/p&gt;
&lt;p&gt;注：在SpringBoot 1.5.6 和SpringBoot 2.0.5 的版本中自定义CacheManager存在差异&lt;/p&gt;
&lt;p&gt;参考代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// springboot 1.x的版本
public RedisCacheManager employeeCacheManager(RedisConnectionFactory redisConnectionFactory){
    
    // 1、自定义RedisTemplate
    RedisTemplate&amp;lt;Object,Employee&amp;gt; template = new RedisTemplate&amp;lt;&amp;gt;();
    template.setConnectionFactory(redisConnectionFactory);
    Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt; jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class);
    template.setDefaultSerializer(jackson2JsonRedisSerializer);
    
    // 2、自定义RedisCacheManager
    RedisCacheManager cacheManager = new RedisCacheManager(template);
    cacheManager.setUsePrefix(true); // 会将CacheName作为key的前缀
    
    return cacheManager;
}



// springboot 2.x的版本

/**
 * serializeKeysWith() 修改key的序列化规则，这里采用的是StringRedisSerializer()
 * serializeValuesWith() 修改value的序列化规则，这里采用的是Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class)
 * @param factory
 * @return
 */
@Bean
public RedisCacheManager employeeCacheManager(RedisConnectionFactory redisConnectionFactory) {


RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()
              .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(new StringRedisSerializer())) 
             .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(new Jackson2JsonRedisSerializer&amp;lt;Employee&amp;gt;(Employee.class)));

        RedisCacheManager cacheManager = RedisCacheManager.builder(redisConnectionFactory).cacheDefaults(config).build();

        return cacheManager;
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;tip：可以通过查看各版本的org.springframework.data.redis.cache.RedisCacheConfiguration去自定义CacheManager.&lt;/p&gt;
&lt;p&gt;因为不同版本的SpringBoot对应的Redis版本也是不同的，所以要重写时可以查看官方是怎么定义CacheManager，才知道怎样去自定义CacheManager。&lt;/p&gt;
&lt;p&gt;完&lt;/p&gt;
</description>
<pubDate>Thu, 04 Oct 2018 03:48:00 +0000</pubDate>
<dc:creator>L99</dc:creator>
<og:description>序 最近在入门SpringBoot，然后在感慨 SpringBoot较于Spring真的方便多时，顺便记录下自己在集成redis时的一些想法。 1、从springboot官网查看redis的依赖包 o</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/LxyXY/p/9741921.html</dc:identifier>
</item>
<item>
<title>设计模式（五）：策略模式 - JaJian</title>
<link>http://www.cnblogs.com/jajian/p/9740271.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jajian/p/9740271.html</guid>
<description>&lt;p&gt;策略设计模式是行为设计模式之一。当我们为特定任务使用多个算法时，使用策略模式，客户端决定在运行时使用的实际实现。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1162587/201810/1162587-20181003173456674-1139320552.png&quot;/&gt;&lt;br/&gt;策略模式的最佳示例之一是Collections.sort()采用Comparator参数的方法。基于Comparator接口的不同实现，对象将以不同的方式进行排序。&lt;/p&gt;

&lt;p&gt;对于我们的示例，我们将尝试实施一个简单的购物车，我们有两种付款策略 - 使用信用卡或使用PayPal。&lt;/p&gt;
&lt;p&gt;首先，我们将为我们的策略模式示例创建接口，在我们的例子中，支付金额作为参数传递。&lt;br/&gt;&lt;strong&gt;支付方式：PaymentStrategy.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

public interface PaymentStrategy {

    public void pay(int amount);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在我们将不得不使用信用卡/借记卡或通过PayPal为支付创建具体的算法实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信用卡付款：CreditCardStrategy.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

public class CreditCardStrategy implements PaymentStrategy {

    private String name;
    private String cardNumber;
    private String cvv;
    private String dateOfExpiry;
    
    public CreditCardStrategy(String nm, String ccNum, String cvv, String expiryDate){
        this.name=nm;
        this.cardNumber=ccNum;
        this.cvv=cvv;
        this.dateOfExpiry=expiryDate;
    }
    @Override
    public void pay(int amount) {
        System.out.println(amount +&quot; paid with credit/debit card&quot;);
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Paypal付款：PaypalStrategy.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

public class PaypalStrategy implements PaymentStrategy {

    private String emailId;
    private String password;
    
    public PaypalStrategy(String email, String pwd){
        this.emailId=email;
        this.password=pwd;
    }
    
    @Override
    public void pay(int amount) {
        System.out.println(amount + &quot; paid using Paypal.&quot;);
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在我们的策略模式示例算法准备好了。我们可以实施购物车和付款方式将需要输入作为付款策略。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

public class Item {

    private String upcCode;
    private int price;
    
    public Item(String upc, int cost){
        this.upcCode=upc;
        this.price=cost;
    }

    public String getUpcCode() {
        return upcCode;
    }

    public int getPrice() {
        return price;
    }
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ShoppingCart.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

public class ShoppingCart {

    //List of items
    List&amp;lt;Item&amp;gt; items;
    
    public ShoppingCart(){
        this.items=new ArrayList&amp;lt;Item&amp;gt;();
    }
    
    public void addItem(Item item){
        this.items.add(item);
    }
    
    public void removeItem(Item item){
        this.items.remove(item);
    }
    
    public int calculateTotal(){
        int sum = 0;
        for(Item item : items){
            sum += item.getPrice();
        }
        return sum;
    }
    
    public void pay(PaymentStrategy paymentMethod){
        int amount = calculateTotal();
        paymentMethod.pay(amount);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;请注意，购物车的付款方式需要付款算法作为参数，并且不会将其作为实例变量存储在任何位置。&lt;/p&gt;
&lt;p&gt;让我们用一个简单的程序测试我们的策略模式示例设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ShoppingCartTest.java&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;package com.journaldev.design.strategy;

public class ShoppingCartTest {

    public static void main(String[] args) {
        ShoppingCart cart = new ShoppingCart();
        
        Item item1 = new Item(&quot;1234&quot;,10);
        Item item2 = new Item(&quot;5678&quot;,40);
        
        cart.addItem(item1);
        cart.addItem(item2);
        
        //pay by paypal
        cart.pay(new PaypalStrategy(&quot;myemail@example.com&quot;, &quot;mypwd&quot;));
        
        //pay by credit card
        cart.pay(new CreditCardStrategy(&quot;Pankaj Kumar&quot;, &quot;1234567890123456&quot;, &quot;786&quot;, &quot;12/15&quot;));
    }

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述程序的输出是：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;50 paid using Paypal.
50 paid with credit/debit card&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1162587/201810/1162587-20181003173432721-1664229235.png&quot;/&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;我们可以使用组合为策略创建实例变量，但我们应该避免这种情况，因为我们希望将特定策略应用于特定任务。在Collections.sort（）和Arrays.sort（）方法中遵循相同的方法，将比较器作为参数。&lt;/li&gt;
&lt;li&gt;策略模式与状态模式(State Pattern)非常相似。其中一个区别是Context包含状态作为实例变量，并且可以有多个任务，其实现可以依赖于状态，而策略模式策略作为参数传递给方法，上下文对象没有任何变量来存储它。&lt;/li&gt;
&lt;li&gt;当我们为特定任务提供多个算法时，策略模式很有用，我们希望我们的应用程序可以灵活地在运行时为特定任务选择任何算法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：1、算法可以自由切换。 2、避免使用多重条件判断。 3、扩展性良好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：1、策略类会增多。 2、所有策略类都需要对外暴露。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主要解决&lt;/strong&gt;：在有多种算法相似的情况下，使用 if...else 所带来的复杂和难以维护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;何时使用&lt;/strong&gt;：一个系统有许多许多类，而区分它们的只是他们直接的行为。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何解决&lt;/strong&gt;：将这些算法封装成一个一个的类，任意地替换。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关键代码&lt;/strong&gt;：实现同一个接口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用场景&lt;/strong&gt;： 1、如果在一个系统里面有许多类，它们之间的区别仅在于它们的行为，那么使用策略模式可以动态地让一个对象在许多行为中选择一种行为。 2、一个系统需要动态地在几种算法中选择一种。 3、如果一个对象有很多的行为，如果不用恰当的模式，这些行为就只好使用多重的条件选择语句来实现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：如果一个系统的策略多于四个，就需要考虑使用混合模式，解决策略类膨胀的问题。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这就是java中的Strategy Pattern，我希望你喜欢它。&lt;br/&gt;翻译：&lt;a href=&quot;https://www.journaldev.com/1754/strategy-design-pattern-in-java-example-tutorial&quot;&gt;journaldev&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 04 Oct 2018 03:29:00 +0000</pubDate>
<dc:creator>JaJian</dc:creator>
<og:description>介绍 策略设计模式是行为设计模式之一。当我们为特定任务使用多个算法时，使用策略模式，客户端决定在运行时使用的实际实现。 策略模式的最佳示例之一是Collections.sort()采用Comparat</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jajian/p/9740271.html</dc:identifier>
</item>
<item>
<title>用CSS实现一个抽奖转盘 - wenr</title>
<link>http://www.cnblogs.com/wenruo/p/9732704.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wenruo/p/9732704.html</guid>
<description>&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181003215625839-597753770.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;基本是用CSS实现的，没有用图片，加一丢丢JS。&lt;/p&gt;
&lt;p&gt;首先画一个转盘，&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;幸运大转盘&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 重置默认样式 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      outline&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .wrapper &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #000000 0px 0px 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .panel &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #b7b7b7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      z-index&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fff899&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 15px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #dc5b5b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pointer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;开始抽奖&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如下，配色什么的不要在意，可能比较丑。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201809/670878-20180930145507979-915915781.png&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后写抽奖指针的小箭头，用CSS画三角形是一个比较常见的问题，通过设置width和height为0，然后用border实现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201809/670878-20180930150326467-1746760277.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如图，矩形是由四个三角形边框组成的，只要设置其它边颜色为透明，就可以获得单独的三角形。&lt;/p&gt;
&lt;p&gt;这里通过伪元素after实现三角形，并通过绝对定位将三角形定位到中间小圆的顶端。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;.pointer::after &lt;/span&gt;{&lt;span&gt;
      content&lt;/span&gt;:&lt;span&gt; ''&lt;/span&gt;;&lt;span&gt;
      position&lt;/span&gt;:&lt;span&gt; absolute&lt;/span&gt;;&lt;span&gt;
      left&lt;/span&gt;:&lt;span&gt; 14px&lt;/span&gt;;&lt;span&gt;
      top&lt;/span&gt;:&lt;span&gt; -24px&lt;/span&gt;;&lt;span&gt;
      border-width&lt;/span&gt;:&lt;span&gt; 12px 6px&lt;/span&gt;;&lt;span&gt;
      border-style&lt;/span&gt;:&lt;span&gt; solid&lt;/span&gt;;&lt;span&gt;
      border-color&lt;/span&gt;:&lt;span&gt; transparent&lt;/span&gt;;&lt;span&gt;
      border-bottom-color&lt;/span&gt;:&lt;span&gt; #c0381f&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在才像一个指针了。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201809/670878-20180930151251040-293454825.png&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;哦 接下来是实现转盘背景，不同的扇区对应不同的奖品，这样就有一个需求：实现任意角度扇形。&lt;/p&gt;
&lt;p&gt;可能会想当然的认为和三角形一样，不过是加一个border-radius而已，高度是圆半径，宽度是tan(θ/2)，但是实现出来的效果和想象并不一样……（可能需要做一些其他操作以达到效果，但是我没想到。&lt;/p&gt;
&lt;p&gt;最后还是求助了搜索引擎。不得不承认dalao们实在是太nb了，qaq……通过 &lt;code&gt;&lt;span class=&quot;pln&quot;&gt;linear-gradient 实现想法是真的棒。不过还有好多复杂的实现看的不是很懂= =&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p class=&quot;grid--cell fs-headline1 fl1&quot;&gt;&lt;a class=&quot;question-hyperlink&quot; href=&quot;https://stackoverflow.com/questions/21205652/how-to-draw-a-circle-sector-in-css&quot;&gt;How to draw a circle sector in CSS?&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;grid--cell fs-headline1 fl1&quot;&gt;&lt;a class=&quot;question-hyperlink&quot; href=&quot;https://stackoverflow.com/questions/14184494/segments-in-a-circle-using-css3&quot;&gt;Segments in a circle using CSS3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhangxinxu.com/wordpress/2017/11/pure-css-colorful-circle/&quot; target=&quot;_blank&quot;&gt;3种纯CSS实现中间镂空的12色彩虹渐变圆环方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;实现就是通过两个正方形取相交区域。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181002211629597-1958563814.png&quot; alt=&quot;&quot; width=&quot;645&quot; height=&quot;278&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我觉图画的还是挺好的:D &lt;/p&gt;
&lt;p&gt;没有用伪元素实现，因为我还要加文字，至于文字的位置，我真的是瞎调的，反正正经写代码也不会这么写= =&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Document&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .sector &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px 100px 100px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 40px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 3px 0 57px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 195px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffeab1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; translateX(-100px) rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px 0 0 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .sector-inner span &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-19deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #d46854&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如下，一个带有文字的小扇形~~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181002212119985-1405065786.png&quot; alt=&quot;&quot; width=&quot;98&quot; height=&quot;149&quot;/&gt;&lt;/p&gt;
&lt;p&gt;OK，现在写一堆扇形放到一开始的转盘上。&lt;/p&gt;
&lt;p&gt;现在的代码是酱紫滴~~太长了折起来。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b552c4d9-0a7b-4b3c-b264-7e07f3980f49')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_b552c4d9-0a7b-4b3c-b264-7e07f3980f49&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b552c4d9-0a7b-4b3c-b264-7e07f3980f49&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b552c4d9-0a7b-4b3c-b264-7e07f3980f49',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b552c4d9-0a7b-4b3c-b264-7e07f3980f49&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;幸运大转盘&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 重置默认样式 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      outline&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .wrapper &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #000000 0px 0px 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .panel &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #b7b7b7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px 100px 100px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; left center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(1) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(3) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(54deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(4) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(90deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(5) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(126deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(6) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(162deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(7) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(198deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(8) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(234deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(9) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(270deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(10) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(306deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n+1) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fef6e0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffffff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 40px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 3px 0 57px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 195px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; translateX(-100px) rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px 0 0 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner span &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-19deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #d46854&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      z-index&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fff899&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 15px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #dc5b5b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer::after &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      content&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ''&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 14px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -24px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-style&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-bottom-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10元话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pointer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;开始抽奖&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181002223843242-955095835.png&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;嘻嘻，现在是抽奖转盘的样子了吧~~~&lt;/p&gt;
&lt;p&gt;最后再加点浮夸的灯。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('e57fdd98-8904-403b-98b4-274dac9622cc')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_e57fdd98-8904-403b-98b4-274dac9622cc&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e57fdd98-8904-403b-98b4-274dac9622cc&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('e57fdd98-8904-403b-98b4-274dac9622cc',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e57fdd98-8904-403b-98b4-274dac9622cc&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;幸运大转盘&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 重置默认样式 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      outline&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .wrapper &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #000000 0px 0px 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 115px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 115px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2n) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fafce7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2n+1) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffe58b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(3) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(72deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(4) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(108deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(5) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(144deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(6) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(180deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(7) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(216deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(8) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(252deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(9) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(288deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(10) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(324deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .panel &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #b7b7b7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px 100px 100px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; left center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(1) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(3) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(54deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(4) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(90deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(5) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(126deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(6) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(162deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(7) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(198deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(8) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(234deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(9) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(270deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(10) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(306deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n+1) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fef6e0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffffff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 40px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 3px 0 57px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 195px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; translateX(-100px) rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px 0 0 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner span &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-19deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #d46854&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      z-index&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fff899&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 15px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #dc5b5b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer::after &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      content&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ''&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 14px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -24px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-style&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-bottom-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #c0381f&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 50 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10元话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pointer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;开始抽奖&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181002225520777-1190042944.png&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在转盘CSS部分基本完成。简单写一下JS部分。点击中间的指针时，指针会转，可以拉一条贝塞尔曲线，控制动画的速度。&lt;/p&gt;
&lt;p&gt;贝塞尔曲线可以简单的看作是时间-距离曲线，斜率就是速度。因为转盘的速度肯定是先快后慢，随便拉一条。&lt;/p&gt;
&lt;p&gt;http://cubic-bezier.com/#.2,.93,.43,1&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181002230842492-1510988866.png&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;CSS中添加属性&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;.pointer &lt;/span&gt;{&lt;span&gt;
  // ...
  transition&lt;/span&gt;:&lt;span&gt; transform 3s cubic-bezier(.2,.93,.43,1)&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;点击开始抽奖的时候，为中间的指针加一个旋转的角度。这里有一个问题就是不同的扇区抽到的概率是相同的，改成不同应该…也蛮简单的，不过主要是想练下CSS，JS就随便写了。&lt;/p&gt;
&lt;p&gt;JS部分代码。。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
let getEle =&lt;span&gt; document.getElementsByClassName.bind(document);
let pointer &lt;/span&gt;= getEle('pointer')[0&lt;span&gt;];
let result &lt;/span&gt;= getEle('result')[0&lt;span&gt;];

let onRotation &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 记录当前是否正在旋转，如果正在旋转，就不能继续点击了&lt;/span&gt;
let reward = ['谢谢参与', '50积分', '谢谢参与', '100元话费', '50积分'&lt;span&gt;, 
&lt;/span&gt;'谢谢参与', '100元话费', '谢谢参与', '50积分', '10元话费'&lt;span&gt;];

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据随机角度获取奖励&lt;/span&gt;
let getReward = (&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
  currentDeg &lt;/span&gt;= 0&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 转两圈到三圈&lt;/span&gt;
    let rotateDeg = Math.random() * 360 + 1080&lt;span&gt;;
    currentDeg &lt;/span&gt;+=&lt;span&gt; rotateDeg;
    let rewardText &lt;/span&gt;= reward[Math.floor((currentDeg + 18) % 360 / 36&lt;span&gt;)]
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
      deg: currentDeg,
      text: rewardText &lt;/span&gt;=== '谢谢参与' ? '很遗憾，您没有获得奖品。' : '恭喜获得: ' +&lt;span&gt; rewardText
    }
  }
})();

pointer.addEventListener(&lt;/span&gt;'click', () =&amp;gt;&lt;span&gt; {
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (onRotation) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  console.log(&lt;/span&gt;'开始抽奖'&lt;span&gt;);
  onRotation &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
  let nextStatus &lt;/span&gt;=&lt;span&gt; getReward();
  console.log(nextStatus)
  result.innerText &lt;/span&gt;=&lt;span&gt; nextStatus.text;
  result.style.display &lt;/span&gt;= 'none'&lt;span&gt;;
&lt;/span&gt;  pointer.style.transform =&lt;span&gt; `rotateZ(${nextStatus.deg}deg)`;
})
pointer.addEventListener(&lt;/span&gt;'transitionend', () =&amp;gt;&lt;span&gt; {
  console.log(&lt;/span&gt;'抽奖结束'&lt;span&gt;);
  onRotation &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
  result.style.display &lt;/span&gt;= 'block'&lt;span&gt;;
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在一个抽奖转盘基本完成了，最后一个需求，如果旁边的等能够亮起来就好了。&lt;/p&gt;
&lt;p&gt;至于灯怎么亮，就需要用到CSS3的动画了，我还不太熟悉，先去学习一下&amp;gt;_&amp;lt;&lt;/p&gt;
&lt;p&gt;我学完回来了，参考教程http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html，内容不是很多。&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-name&lt;/span&gt;&lt;/span&gt; 指定动画名称，&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-duration&lt;/span&gt;&lt;/span&gt; 指定动画持续时间，&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-timing-function&lt;/span&gt;&lt;/span&gt; 指定动画函数，和transition的函数是一样的，&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-delay&lt;/span&gt;&lt;/span&gt; 指定动画延迟多久后执行，&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-iteration-count&lt;/span&gt;&lt;/span&gt; 指定动画执行多少次，默认为一次，可以指定为infinite，无限循环。&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-direction&lt;/span&gt;&lt;/span&gt; 指定动画多次播放时，一次结束，下一次怎么接上一次，如图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181003212939240-94978023.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-fill-mode&lt;/span&gt;&lt;/span&gt; 指定动画结束后停在什么位置，默认回到起始状态，forwards表示让动画停留在结束状态，backwards让动画回到第一帧的状态，both根据animation-direction轮流应用forwards和backwards规则。&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;animation-play-state&lt;/span&gt;&lt;/span&gt; 动画执行状态，默认为running，可以设置为pause，动画将在当前状态停止，再改为running时，会接着上一次停止的位置继续执行动画。&lt;/p&gt;
&lt;p&gt;使用关键字 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;keyframes&lt;/span&gt;&lt;/span&gt; 来定义一个动画。通过百分比指定其中任意几个状态。&lt;/p&gt;

&lt;p&gt;尝试着写一下=。=&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Document&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            animation&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1s twinkling 3, 100ms 3s twinkling 3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        @keyframes twinkling &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            50% { background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        }
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个方块，先慢速闪三下，再快速闪三下，最后消失。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;webkit-css-property&quot;&gt;animation: &lt;span class=&quot;expand-icon spritesheet-smallicons smallicon-triangle-down icon-mask&quot;&gt;&lt;span class=&quot;value&quot;&gt;1s twinkling 3;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;webkit-css-property&quot;&gt;就相当于&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
animation-name: twinkling;
animation-duration: 1s;
animation-timing-function: ease;
animation-delay: 0s;
animation-iteration-count: 3;
animation-direction: normal;
animation-fill-mode: none;
animation-play-state: running;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/670878/201810/670878-20181003214334830-402859831.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我觉得还可以:P 反正我只能写成这样了。&lt;/p&gt;
&lt;p&gt;最后把动画加到转盘的灯上。完成代码（好像颜色变了，咳，那是因为我animation学了太久都掉色了）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;幸运大转盘&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 重置默认样式 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      outline&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      user-select&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .wrapper &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ff5555&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #000000 0px 0px 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 115px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 115px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light-twinkling &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      animation&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1s twinkling 3, 100ms 3s twinkling 3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2n) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fafce7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2n+1) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffe58b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(2) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(3) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(72deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(4) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(108deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(5) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(144deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(6) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(180deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(7) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(216deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(8) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(252deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(9) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(288deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .light:nth-child(10) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(324deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .panel &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #b7b7b7&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 14px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px 100px 100px 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; left center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(1) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(18deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(3) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(54deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(4) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(90deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(5) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(126deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(6) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(162deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(7) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(198deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(8) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(234deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(9) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(270deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(10) &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(306deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n+1) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fef6e0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector:nth-child(2n) .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ffffff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 40px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 5px 3px 0 57px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 195px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; translateX(-100px) rotate(36deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px 0 0 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .sector-inner span &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; rotate(-19deg)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #d46854&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 79px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      z-index&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #fff899&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 15px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ff5350&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid #ff5350&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transition&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transform 3s cubic-bezier(.2,.93,.43,1)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .pointer::after &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      content&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ''&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 14px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -24px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px 6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-style&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      border-bottom-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #ff5350&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      transform-origin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .result &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px 60px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    @keyframes twinkling &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
      50% { background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    }
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;light&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 5 0 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100元话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 5 0 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100元话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;谢谢参与&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 5 0 积分&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sector-inner&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;10元话费&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pointer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;开始抽奖&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;result&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    let getEle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; document.getElementsByClassName.bind(document);
    let pointer &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; getEle(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;pointer&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
    let result &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; getEle(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
    let lights &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; Array.prototype.slice.call(getEle(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;light&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));

    let onRotation &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 记录当前是否正在旋转，如果正在旋转，就不能继续点击了&lt;/span&gt;
&lt;span&gt;    let reward &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;谢谢参与&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;50积分&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;谢谢参与&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;100元话费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;50积分&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, 
    &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;谢谢参与&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;100元话费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;谢谢参与&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;50积分&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10元话费&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;];

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据随机角度获取奖励&lt;/span&gt;
&lt;span&gt;    let getReward &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
      currentDeg &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 转两圈到三圈&lt;/span&gt;
&lt;span&gt;        let rotateDeg &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; Math.random() &lt;/span&gt;&lt;span&gt;*&lt;/span&gt; &lt;span&gt;360&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1080&lt;/span&gt;&lt;span&gt;;
        currentDeg &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt;&lt;span&gt; rotateDeg;
        let rewardText &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; reward[Math.floor((currentDeg &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;18&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;%&lt;/span&gt; &lt;span&gt;360&lt;/span&gt; &lt;span&gt;/&lt;/span&gt; &lt;span&gt;36&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
          deg: currentDeg,
          text: rewardText &lt;/span&gt;&lt;span&gt;===&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;谢谢参与&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;?&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;很遗憾，您没有获得奖品。&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;恭喜获得: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; rewardText
        }
      }
    })();

    pointer.addEventListener(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, () &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt; {
      &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (onRotation) &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
      console.log(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;开始抽奖&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
      onRotation &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
      lights.forEach(light &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt; { light.className &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt; light-twinkling&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;; });
      let nextStatus &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; getReward();
      console.log(nextStatus)
      result.innerText &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; nextStatus.text;
      result.style.display &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
      pointer.style.transform &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; `rotateZ(${nextStatus.deg}deg)`;
    })
    pointer.addEventListener(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;transitionend&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, () &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt; {
      console.log(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;抽奖结束&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
      setTimeout(() &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt; { &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 等闪烁三下结束&lt;/span&gt;
&lt;span&gt;        onRotation &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        lights.forEach(light &lt;/span&gt;&lt;span&gt;=&amp;gt;&lt;/span&gt;&lt;span&gt; { light.className &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;light&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;; });
        result.style.display &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
      }, &lt;/span&gt;&lt;span&gt;300&lt;/span&gt;&lt;span&gt;);
    })
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 04 Oct 2018 02:31:00 +0000</pubDate>
<dc:creator>wenr</dc:creator>
<og:description>效果 基本是用CSS实现的，没有用图片，加一丢丢JS。 首先画一个转盘， 效果如下，配色什么的不要在意，可能比较丑。。。 然后写抽奖指针的小箭头，用CSS画三角形是一个比较常见的问题，通过设置widt</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wenruo/p/9732704.html</dc:identifier>
</item>
<item>
<title>数据结构与算法----数学应用之一元多项式 - CMusketeer</title>
<link>http://www.cnblogs.com/cmusketeer/p/9741680.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cmusketeer/p/9741680.html</guid>
<description>&lt;p&gt;PS：上一篇说了线性表的顺序表和链式表表达，该片就写一下应用到现实数学中去，一元多项式的加减。&lt;/p&gt;
&lt;p&gt;一元多项式我们在本子上可以说是手到拈来，但是在电脑上用语言敲出来，估计这会让很多人头疼，比如下面的多项式&lt;/p&gt;
&lt;p&gt;y1 = 9x^1  + 4x^3 + 6x^4&lt;/p&gt;
&lt;p&gt;y2 = 2x^3 + 4x^4 + 3x^7 + 3x^8&lt;/p&gt;
&lt;p&gt;yz = y1 + y2 ；&lt;/p&gt;
&lt;p&gt;效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1258190/201810/1258190-20181004095331165-1278651609.png&quot; alt=&quot;&quot; width=&quot;890&quot; height=&quot;243&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;思路：&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;创建一个结构体，里面只存连个数，一个是系数data，一个是次幂，至于x就不用存了，只在打印的时候写上就OK了，&lt;/li&gt;
&lt;li&gt;然后写插入操作，注意一定要是有序的，方便在后期相加&lt;/li&gt;
&lt;li&gt;两个多项式相加就是合并，我们可以按照顺序两两比较，先拿y1的第一个数和y2第一个比较，如果y1&amp;gt;y2,则把y2添加到yz，相反之，如果y1=y2则相加系数，按照y1（也可y2）加入yz，等全都比较过后，如果y1（y2）还有项的话，就把剩下的全都加载到yz中，其实就是直接把next指向y1（y2）即可。&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;1：结构体&lt;/h2&gt;
&lt;p&gt;定义一个结构体类型&lt;br/&gt;在SlinkOnez调用变量是，都是&lt;br/&gt;L-&amp;gt;data;L-&amp;gt;next;的形式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
typedef &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; SlinkOne {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; data;
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; cimi;
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt; SlinkOne *&lt;span&gt;next;
} SlinkOne, &lt;/span&gt;*SlinkOnez;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2：初始化&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*c
 * 初始化
 * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
SlinkOnez initLink() {
    SlinkOnez L &lt;/span&gt;= (SlinkOnez) malloc(&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(SlinkOne));
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;L) {
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }
    L&lt;/span&gt;-&amp;gt;next =&lt;span&gt; NULL;
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; L;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3：插入操作&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 插入
 * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;int&lt;/span&gt; insertLink(SlinkOnez &amp;amp;L, &lt;span&gt;int&lt;/span&gt; pos, &lt;span&gt;int&lt;/span&gt; e, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; cimi) {
    SlinkOnez p &lt;/span&gt;=&lt;span&gt; L;
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (p &amp;amp;&amp;amp; i &amp;lt; pos-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) {
        p &lt;/span&gt;= p-&amp;gt;&lt;span&gt;next;
        i&lt;/span&gt;++&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!p || i &amp;gt; pos-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) {
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;单链表未被创建\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建一个新的结点，并赋值&lt;/span&gt;
    SlinkOnez s = (SlinkOnez) malloc(&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(SlinkOne));
    s&lt;/span&gt;-&amp;gt;data =&lt;span&gt; e;
    s&lt;/span&gt;-&amp;gt;cimi =&lt;span&gt; cimi;
    s&lt;/span&gt;-&amp;gt;next = p-&amp;gt;&lt;span&gt;next;
    p&lt;/span&gt;-&amp;gt;next =&lt;span&gt; s;
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;插入成功\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4：打印全部数据&lt;/h2&gt;
&lt;p&gt;注意：我在这里面加入了几个判断，一个是当p-&amp;gt;next ==NULL时，后面的加号就不要了，如果次幂==0的话那就只打印系数，当然如果系数==0，那就不打印，下方并未给出。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 打印全部数据
 * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; printL(SlinkOnez L) {
    SlinkOnez p &lt;/span&gt;= L-&amp;gt;&lt;span&gt;next;
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;p) {
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;单链表不成立或者为NULL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; (p) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (p-&amp;gt;next ==&lt;span&gt; NULL) {
            printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%dX^%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, p-&amp;gt;data, p-&amp;gt;&lt;span&gt;cimi);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (p-&amp;gt;cimi == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;) {
                printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d + &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, p-&amp;gt;&lt;span&gt;data);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%dX^%d + &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, p-&amp;gt;data, p-&amp;gt;&lt;span&gt;cimi);
            }
        }
        p &lt;/span&gt;= p-&amp;gt;&lt;span&gt;next;
    }
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5：合并（重点）&lt;/h2&gt;
&lt;p&gt;注意：pz = p1;//往下走一个，这句话其实就相当于 pz = pz-&amp;gt;next;&lt;/p&gt;
&lt;p&gt;下面的全部代码实现都是在我上面说的思路上一一对应的，只要有思路，问题就已经解决了一半了，&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 合并
 * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
SlinkOnez mergeLink(SlinkOnez &lt;/span&gt;&amp;amp;Lz, SlinkOnez &amp;amp;L1, SlinkOnez &amp;amp;&lt;span&gt;L2) {
    Lz&lt;/span&gt;-&amp;gt;next=&lt;span&gt;NULL;
    SlinkOnez pz &lt;/span&gt;=&lt;span&gt; Lz;
    SlinkOnez p1 &lt;/span&gt;= L1-&amp;gt;&lt;span&gt;next;
    SlinkOnez p2 &lt;/span&gt;= L2-&amp;gt;&lt;span&gt;next;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (p1 &amp;amp;&amp;amp;&lt;span&gt; p2) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (p1-&amp;gt;cimi &amp;lt; p2-&amp;gt;&lt;span&gt;cimi) {&lt;/span&gt;
            pz-&amp;gt;next =&lt;span&gt; p1;
            pz &lt;/span&gt;= p1;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;往下走一个&lt;/span&gt;
            p1 = p1-&amp;gt;&lt;span&gt;next;
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (p1-&amp;gt;cimi &amp;gt; p2-&amp;gt;&lt;span&gt;cimi) {&lt;/span&gt;
            pz-&amp;gt;next =&lt;span&gt; p2;
            pz &lt;/span&gt;= p2;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;往下走一个&lt;/span&gt;
            p2 = p2-&amp;gt;&lt;span&gt;next;
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;0&lt;/span&gt; !=(p1-&amp;gt;data + p2-&amp;gt;&lt;span&gt;data)){
                p1&lt;/span&gt;-&amp;gt;data = (p1-&amp;gt;data+p2-&amp;gt;data);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注意此处，重点，不能写成pz-&amp;gt;data，否则会把当前p的值给替换掉，而不是赋值给下一个指针的值&lt;/span&gt;
                pz-&amp;gt;next =&lt;span&gt; p1;
                pz &lt;/span&gt;= p1;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;往下走一个&lt;/span&gt;
&lt;span&gt;            }
            p1&lt;/span&gt;=p1-&amp;gt;&lt;span&gt;next;
            p2&lt;/span&gt;=p2-&amp;gt;&lt;span&gt;next;
        }
    }

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (p1!=&lt;span&gt;NULL){
        pz&lt;/span&gt;-&amp;gt;next=&lt;span&gt;p1;
    }
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (p2!=&lt;span&gt;NULL){
        pz&lt;/span&gt;-&amp;gt;next=&lt;span&gt;p2;
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Lz;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;6：使用&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main() {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第一个多项式&lt;/span&gt;
&lt;span&gt;    SlinkOnez L;
    L &lt;/span&gt;=&lt;span&gt; initLink();
    insertLink(L, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    insertLink(L, &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
    insertLink(L, &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt;);
    printL(L);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;第二个多项式&lt;/span&gt;
&lt;span&gt;    SlinkOnez L2;
    L2 &lt;/span&gt;=&lt;span&gt; initLink();
    insertLink(L2, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;&lt;span&gt;);
    insertLink(L2, &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;&lt;span&gt;);
    insertLink(L2, &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;&lt;span&gt;);
    insertLink(L2, &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;&lt;span&gt;);
    printL(L2);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;合并后多项式&lt;/span&gt;
&lt;span&gt;    SlinkOnez L3;
    L3&lt;/span&gt;=&lt;span&gt;initLink();
    L3&lt;/span&gt;=&lt;span&gt;mergeLink(L3,L,L2);
    printL(L3);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完&lt;/p&gt;

</description>
<pubDate>Thu, 04 Oct 2018 02:19:00 +0000</pubDate>
<dc:creator>CMusketeer</dc:creator>
<og:description>PS：上一篇说了线性表的顺序表和链式表表达，该片就写一下应用到现实数学中去，一元多项式的加减。 一元多项式我们在本子上可以说是手到拈来，但是在电脑上用语言敲出来，估计这会让很多人头疼，比如下面的多项式</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cmusketeer/p/9741680.html</dc:identifier>
</item>
<item>
<title>Netty4.x整合SpringBoot2.x使用Protobuf3详解 - 三升水</title>
<link>http://www.cnblogs.com/sanshengshui/p/9741655.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sanshengshui/p/9741655.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181003202351987-643437253.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;本篇文章主要介绍的是SpringBoot整合Netty以及使用Protobuf进行数据传输的相关内容。Protobuf会介绍下用法，至于Netty在&lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui/p/9726306.html&quot;&gt;netty 之 telnet HelloWorld 详解&lt;/a&gt;中已经介绍过了，这里就不再过多细说了。&lt;/span&gt;&lt;/p&gt;

&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;介绍&lt;/h2&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;Protocol Buffer是Google的语言中立的，平台中立的，可扩展机制的，用于序列化结构化数据 - 对比XML，但更小，更快，更简单。您可以定义数据的结构化，然后可以使用特殊生成的源代码轻松地在各种数据流中使用各种语言编写和读取结构化数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;md-end-block&quot;&gt;官网地址: &lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;https://developers.google.com/protocol-buffers/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;使用&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;这里的使用就只介绍Java相关的使用。具体protobuf3的使用可以看&lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui/p/9739521.html&quot;&gt;Protobuf 语言指南(proto3)&lt;/a&gt;。&lt;span class=&quot;md-softbreak&quot;&gt; 首先我们需要在src/main文件夹下建立一个proto文件夹，然后在该文件夹新建一个&lt;strong&gt;user.proto&lt;/strong&gt;文件，此文件定义我们需要传输的文件。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot; md-link&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181003203336488-1885632255.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_002.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;注&lt;/strong&gt;：使用grpc方式编译&lt;strong&gt;.proto&lt;/strong&gt;时，会默认扫描src/main/proto文件夹下的protobuf文件。&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;例如我们需要定义一个用户的信息，包含的字段主要有编号、名称、年龄。&lt;span class=&quot;md-softbreak&quot;&gt; 那么该&lt;strong&gt;protobuf&lt;/strong&gt;文件的格式如下:&lt;span class=&quot;md-softbreak&quot;&gt; &lt;strong&gt;注&lt;/strong&gt;：这里使用的是&lt;strong&gt;proto3&lt;/strong&gt;，相关的注释我已写了，这里便不再过多讲述了。需要注意一点的是&lt;strong&gt;proto&lt;/strong&gt;文件和生成的&lt;strong&gt;Java&lt;/strong&gt;文件名称不能一致!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 1   //proto3语法注解:如果您不这样做，protobuf编译器将假定您正在使用proto2,这必须是文件的第一个非空的非注释行。
 2   syntax = &quot;proto3&quot;&lt;span&gt;;
 3   //生成的包名
 4   option java_package = &quot;com.sanshengshui.netty.protobuf&quot;&lt;span&gt;;
 5   //生成的java名
 6   option java_outer_classname = &quot;UserMsg&quot;&lt;span&gt;;
 7 &lt;span&gt;  ​
 8 &lt;span&gt;  message User{
 9       //ID
10       int32 id = 1&lt;span&gt;;
11       //姓名
12       string name = 2&lt;span&gt;;
13       //年龄
14       int32 age = 3&lt;span&gt;;
15       //状态
16       int32 state = 4&lt;span&gt;;
17   }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;创建好该文件之后，我们&lt;strong&gt;cd&lt;/strong&gt;到该工程的根目录下，执行&lt;strong&gt;mvn clean compile&lt;/strong&gt;,输入完之后，回车即可在target文件夹中看到已经生成好的Java文件，然后直接在工程中使用此protobuf文件就可以了。因为能自动扫描到此类。详情请看下图:&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181003203400831-1405438408.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_003.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;注：生成protobuf的文件软件和测试的protobuf文件我也整合到该项目中了，可以直接获取的。&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;Java文件生成好之后，我们再来看怎么使用。&lt;span class=&quot;md-softbreak&quot;&gt; 这里我就直接贴代码了，并且将注释写在代码中，应该更容易理解些吧。。。&lt;span class=&quot;md-softbreak&quot;&gt; &lt;strong&gt;代码示例:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  @RunWith(JUnit4.class&lt;span&gt;)
  @Slf4j
  public class&lt;span&gt; NettySpringbootProtostuffApplicationTests {
      @Test
      public void ProtobufTest() throws&lt;span&gt; IOException {
          UserMsg.User.Builder userInfo =&lt;span&gt; UserMsg.User.newBuilder();
          userInfo.setId(1&lt;span&gt;);
          userInfo.setName(&quot;mushuwei&quot;&lt;span&gt;);
          userInfo.setName(&quot;24&quot;&lt;span&gt;);
          UserMsg.User user =&lt;span&gt; userInfo.build();
          // 将数据写到输出流
          ByteArrayOutputStream output = new&lt;span&gt; ByteArrayOutputStream();
          user.writeTo(output);
          // 将数据序列化后发送
          byte[] byteArray =&lt;span&gt; output.toByteArray();
          // 接收到流并读取
          ByteArrayInputStream input = new&lt;span&gt; ByteArrayInputStream(byteArray);
          // 反序列化
          UserMsg.User userInfo2 =&lt;span&gt; UserMsg.User.parseFrom(input);
          log.info(&quot;id:&quot; +&lt;span&gt; userInfo2.getId());
          log.info(&quot;name:&quot; +&lt;span&gt; userInfo2.getName());
          log.info(&quot;age:&quot; +&lt;span&gt; userInfo2.getAge());
  ​
      }
  }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;注：这里说明一点，因为&lt;strong&gt;protobuf&lt;/strong&gt;是通过二进制进行传输，所以需要注意下相应的编码。还有使用&lt;strong&gt;protobuf&lt;/strong&gt;也需要注意一下一次传输的最大字节长度。&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;输出结果：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  17:28:07.914 [main] INFO com.sanshengshui.nettyspringbootprotostuff.NettySpringbootProtostuffApplicationTests - id:1
  17:28:07.919 [main] INFO com.sanshengshui.nettyspringbootprotostuff.NettySpringbootProtostuffApplicationTests - name:24
  17:28:07.919 [main] INFO com.sanshengshui.nettyspringbootprotostuff.NettySpringbootProtostuffApplicationTests - age:0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;说明：如果想直接获取工程那么可以直接跳到底部，通过&lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui/netty-learning-example/tree/master/netty-springboot-protobuf&quot;&gt;链接&lt;/a&gt;下载工程代码。&lt;/span&gt;&lt;/h3&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;开发准备&lt;/h2&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;环境要求&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;JDK&lt;/strong&gt;:：1.8&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-softbreak&quot;&gt;&lt;strong&gt;Netty&lt;/strong&gt;:：4.0或以上(不包括5)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-softbreak&quot;&gt;&lt;strong&gt;Protobuf&lt;/strong&gt;：3.0或以上&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;如果对Netty不熟的话，可以看看我之前写的netty 之 telnet HelloWorld 详解。大神请无视~。~&lt;span class=&quot;md-softbreak&quot;&gt; 地址：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui/p/9726306.html&quot;&gt;https://www.cnblogs.com/sanshengshui/p/9726306.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;首先还是Maven的相关依赖:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
      &amp;lt;properties&amp;gt;
          &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
          &amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt;
          &amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
          &amp;lt;netty-all.version&amp;gt;4.1.29.Final&amp;lt;/netty-all.version&amp;gt;
          &amp;lt;protobuf.version&amp;gt;3.6.1&amp;lt;/protobuf.version&amp;gt;
          &amp;lt;grpc.version&amp;gt;1.15.0&amp;lt;/grpc.version&amp;gt;
      &amp;lt;/properties&amp;gt;&lt;span&gt;
  ​
      &amp;lt;dependencies&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt;
          &amp;lt;/dependency&amp;gt;&lt;span&gt;
  ​
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
              &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
          &amp;lt;/dependency&amp;gt;
          &amp;lt;!--netty jar包导入--&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;io.netty&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;netty-all&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;${netty-all.version}&amp;lt;/version&amp;gt;
          &amp;lt;/dependency&amp;gt;&lt;span&gt;
  ​
          &amp;lt;!--使用grpc优雅的编译protobuf--&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;com.google.protobuf&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;protobuf-java&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;${protobuf.version}&amp;lt;/version&amp;gt;
          &amp;lt;/dependency&amp;gt;&lt;span&gt;
  ​
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;grpc-netty&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;${grpc.version}&amp;lt;/version&amp;gt;
          &amp;lt;/dependency&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;grpc-protobuf&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;${grpc.version}&amp;lt;/version&amp;gt;
          &amp;lt;/dependency&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;grpc-stub&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;${grpc.version}&amp;lt;/version&amp;gt;
          &amp;lt;/dependency&amp;gt;&lt;span&gt;
  ​
          &amp;lt;!--lombok用于日志,实体类的重复代码书写--&amp;gt;
          &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;
              &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
          &amp;lt;/dependency&amp;gt;
      &amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;添加了相应的maven依赖之后！我们还需要添加&lt;strong&gt;grpc优雅的编译protobuf的插件&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
         &amp;lt;build&amp;gt;
          &amp;lt;extensions&amp;gt;
              &amp;lt;extension&amp;gt;
                  &amp;lt;groupId&amp;gt;kr.motd.maven&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;os-maven-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;1.5.0.Final&amp;lt;/version&amp;gt;
              &amp;lt;/extension&amp;gt;
          &amp;lt;/extensions&amp;gt;
          &amp;lt;plugins&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;2.5.1&amp;lt;/version&amp;gt;
                  &amp;lt;configuration&amp;gt;
                      &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
                      &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
                  &amp;lt;/configuration&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;2.7&amp;lt;/version&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-source-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;2.2.1&amp;lt;/version&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;maven-dependency-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;executions&amp;gt;
                      &amp;lt;execution&amp;gt;
                          &amp;lt;id&amp;gt;copy-protoc&amp;lt;/id&amp;gt;
                          &amp;lt;phase&amp;gt;generate-sources&amp;lt;/phase&amp;gt;
                          &amp;lt;goals&amp;gt;
                              &amp;lt;goal&amp;gt;copy&amp;lt;/goal&amp;gt;
                          &amp;lt;/goals&amp;gt;
                          &amp;lt;configuration&amp;gt;
                              &amp;lt;artifactItems&amp;gt;
                                  &amp;lt;artifactItem&amp;gt;
                                      &amp;lt;groupId&amp;gt;com.google.protobuf&amp;lt;/groupId&amp;gt;
                                      &amp;lt;artifactId&amp;gt;protoc&amp;lt;/artifactId&amp;gt;
                                      &amp;lt;version&amp;gt;${protobuf.version}&amp;lt;/version&amp;gt;
                                      &amp;lt;classifier&amp;gt;${os.detected.classifier}&amp;lt;/classifier&amp;gt;
                                      &amp;lt;type&amp;gt;exe&amp;lt;/type&amp;gt;
                                      &amp;lt;overWrite&amp;gt;true&amp;lt;/overWrite&amp;gt;
                                      &amp;lt;outputDirectory&amp;gt;${project.build.directory}&amp;lt;/outputDirectory&amp;gt;
                                  &amp;lt;/artifactItem&amp;gt;
                              &amp;lt;/artifactItems&amp;gt;
                          &amp;lt;/configuration&amp;gt;
                      &amp;lt;/execution&amp;gt;
                  &amp;lt;/executions&amp;gt;
              &amp;lt;/plugin&amp;gt;
              &amp;lt;plugin&amp;gt;
                  &amp;lt;groupId&amp;gt;org.xolstice.maven.plugins&amp;lt;/groupId&amp;gt;
                  &amp;lt;artifactId&amp;gt;protobuf-maven-plugin&amp;lt;/artifactId&amp;gt;
                  &amp;lt;version&amp;gt;0.5.0&amp;lt;/version&amp;gt;
                  &amp;lt;configuration&amp;gt;
                      &amp;lt;!--&lt;span&gt;
                        The version of protoc must match protobuf-java. If you don't depend on
                        protobuf-&lt;span&gt;java directly, you will be transitively depending on the
                        protobuf-&lt;span&gt;java version that grpc depends on.
                      --&amp;gt;
                      &amp;lt;protocArtifact&amp;gt;&lt;span&gt;com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                      &amp;lt;/protocArtifact&amp;gt;
                      &amp;lt;pluginId&amp;gt;grpc-java&amp;lt;/pluginId&amp;gt;
                      &amp;lt;pluginArtifact&amp;gt;io.grpc:protoc-gen-grpc-java:1.0.0&lt;span&gt;:exe:${os.detected.classifier}
                      &amp;lt;/pluginArtifact&amp;gt;
                  &amp;lt;/configuration&amp;gt;
                  &amp;lt;executions&amp;gt;
                      &amp;lt;execution&amp;gt;
                          &amp;lt;goals&amp;gt;
                              &amp;lt;goal&amp;gt;compile&amp;lt;/goal&amp;gt;
                              &amp;lt;goal&amp;gt;compile-custom&amp;lt;/goal&amp;gt;
                              &amp;lt;goal&amp;gt;test-compile&amp;lt;/goal&amp;gt;
                          &amp;lt;/goals&amp;gt;
                      &amp;lt;/execution&amp;gt;
                  &amp;lt;/executions&amp;gt;
              &amp;lt;/plugin&amp;gt;
          &amp;lt;/plugins&amp;gt;
      &amp;lt;/build&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;此外我们还需要对&lt;strong&gt;application.yml&lt;/strong&gt;配置文件作一点修改:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  server:
    enabled: true&lt;span&gt;
    bind_address: 0.0.0.0&lt;span&gt;
    bind_port: 9876&lt;span&gt;
    netty:
      #不进行内存泄露的检测
      leak_detector_level: DISABLED
      boss_group_thread_count: 1&lt;span&gt;
      worker_group_thread_count: 12&lt;span&gt;
      #最大负载大小
      max_payload_size: 65536&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;项目结构&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    netty-springboot-&lt;span&gt;protobuf
      ├── client
        ├── NettyClient.class --&lt;span&gt; 客户端启动类
        ├── NettyClientHandler.class --&lt;span&gt; 客户端逻辑处理类
        ├── NettyClientHandler.class --&lt;span&gt; 客户端初始化类
      ├── server 
        ├── NettyServer.class --&lt;span&gt; 服务端启动类
        ├── NettyServerHandler --&lt;span&gt; 服务端逻辑处理类
        ├── NettyServerInitializer --&lt;span&gt; 服务端初始化类
      ├── proto
        ├── user.proto -- protobuf文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;代码编写&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;代码模块主要分为服务端和客户端。&lt;span class=&quot;md-softbreak&quot;&gt; 主要实现的业务逻辑：&lt;span class=&quot;md-softbreak&quot;&gt; 服务端启动成功之后，客户端也启动成功，这时服务端会发送一条&lt;strong&gt;protobuf&lt;/strong&gt;格式的信息给客户端，然后客户端给予相应的应答。客户端与服务端连接成功之后，客户端每个一段时间会发送心跳指令给服务端，告诉服务端该客户端还存过中，如果客户端没有在指定的时间发送信息，服务端会关闭与该客户端的连接。当客户端无法连接到服务端之后，会每隔一段时间去尝试重连，只到重连成功!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;服务端&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;首先是编写服务端的启动类，相应的注释在代码中写得很详细了，这里也不再过多讲述了。不过需要注意的是，在之前的我写的Netty文章中，是通过main方法直接启动服务端，因此是直接new一个对象的。而在和SpringBoot整合之后，我们需要将Netty交给springBoot去管理，所以这里就用了相应的注解。&lt;span class=&quot;md-softbreak&quot;&gt; &lt;strong&gt;代码如下:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
 1  @Service(&quot;nettyServer&quot;&lt;span&gt;)
 2 &lt;span&gt;  @Slf4j
 3   public class&lt;span&gt; NettyServer {
 4       /**
 5        * 通过springboot读取静态资源,实现netty配置文件的读写
 6        */
 7 &lt;span&gt;  ​
 8       @Value(&quot;${server.bind_port}&quot;&lt;span&gt;)
 9       private&lt;span&gt; Integer port;
10 &lt;span&gt;  ​
11       @Value(&quot;${server.netty.boss_group_thread_count}&quot;&lt;span&gt;)
12       private&lt;span&gt; Integer bossGroupThreadCount;
13 &lt;span&gt;  ​
14       @Value(&quot;${server.netty.worker_group_thread_count}&quot;&lt;span&gt;)
15       private&lt;span&gt; Integer workerGroupThreadCount;
16 &lt;span&gt;  ​
17       @Value(&quot;${server.netty.leak_detector_level}&quot;&lt;span&gt;)
18       private&lt;span&gt; String leakDetectorLevel;
19 &lt;span&gt;  ​
20       @Value(&quot;${server.netty.max_payload_size}&quot;&lt;span&gt;)
21       private&lt;span&gt; Integer maxPayloadSize;
22 &lt;span&gt;  ​
23       private&lt;span&gt;  ChannelFuture channelFuture;
24       private&lt;span&gt;  EventLoopGroup bossGroup;
25       private&lt;span&gt;  EventLoopGroup workerGroup;
26 &lt;span&gt;  ​
27 &lt;span&gt;  ​
28 &lt;span&gt;      @PostConstruct
29       public void init() throws&lt;span&gt; Exception {
30               log.info(&quot;Setting resource leak detector level to {}&quot;&lt;span&gt;,leakDetectorLevel);
31 &lt;span&gt;              ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.valueOf(leakDetectorLevel.toUpperCase()));
32 &lt;span&gt;  ​
33               log.info(&quot;Starting Server&quot;&lt;span&gt;);
34               //创建boss线程组 用于服务端接受客户端的连接
35               bossGroup = new&lt;span&gt; NioEventLoopGroup(bossGroupThreadCount);
36               // 创建 worker 线程组 用于进行 SocketChannel 的数据读写
37               workerGroup = new&lt;span&gt; NioEventLoopGroup(workerGroupThreadCount);
38               // 创建 ServerBootstrap 对象
39               ServerBootstrap b = new&lt;span&gt; ServerBootstrap();
40               //设置使用的EventLoopGroup
41 &lt;span&gt;              b.group(bossGroup, workerGroup)
42                       //设置要被实例化的为 NioServerSocketChannel 类
43                       .channel(NioServerSocketChannel.class&lt;span&gt;)
44                       // 设置 NioServerSocketChannel 的处理器
45                       .handler(new&lt;span&gt; LoggingHandler(LogLevel.INFO))
46                       // 设置连入服务端的 Client 的 SocketChannel 的处理器
47                       .childHandler(new&lt;span&gt; NettyServerInitializer());
48               // 绑定端口，并同步等待成功，即启动服务端
49               channelFuture =&lt;span&gt; b.bind(port).sync();
50 &lt;span&gt;  ​
51               log.info(&quot;Server started!&quot;&lt;span&gt;);
52 &lt;span&gt;  ​
53 &lt;span&gt;      }
54 &lt;span&gt;  ​
55 &lt;span&gt;      @PreDestroy
56       public void shutdown() throws&lt;span&gt; InterruptedException {
57           log.info(&quot;Stopping Server&quot;&lt;span&gt;);
58           try&lt;span&gt; {
59               // 监听服务端关闭，并阻塞等待
60 &lt;span&gt;              channelFuture.channel().closeFuture().sync();
61           } finally&lt;span&gt; {
62               // 优雅关闭两个 EventLoopGroup 对象
63 &lt;span&gt;              workerGroup.shutdownGracefully();
64 &lt;span&gt;              bossGroup.shutdownGracefully();
65 &lt;span&gt;          }
66           log.info(&quot;server stopped!&quot;&lt;span&gt;);
67 &lt;span&gt;  ​
68 &lt;span&gt;      }
69 &lt;span&gt;  ​
70   }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class=&quot;md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded&quot;&gt;
&lt;span class=&quot;cm-meta&quot;&gt;&lt;br/&gt;​&lt;/span&gt;
&lt;/pre&gt;
&lt;p class=&quot;md-end-block&quot;&gt;服务端主类编写完毕之后，我们再来设置下相应的过滤条件。&lt;span class=&quot;md-softbreak&quot;&gt; 这里需要继承Netty中&lt;strong&gt;ChannelInitializer&lt;/strong&gt;类，然后重写&lt;strong&gt;initChannel&lt;/strong&gt;该方法，进行添加相应的设置，如心跳超时设置，传输协议设置，以及相应的业务实现类。&lt;span class=&quot;md-softbreak&quot;&gt; &lt;strong&gt;代码如下:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
  public class NettyServerInitializer extends ChannelInitializer&amp;lt;SocketChannel&amp;gt;&lt;span&gt; {
  ​
  ​
      @Override
      protected void initChannel(SocketChannel ch) throws&lt;span&gt; Exception {
          ChannelPipeline ph =&lt;span&gt; ch.pipeline();
  ​
          //入参说明: 读超时时间、写超时时间、所有类型的超时时间、时间格式
          ph.addLast(new IdleStateHandler(5, 0, 0&lt;span&gt;, TimeUnit.SECONDS));
          // 解码和编码，应和客户端一致
          //传输的协议 Protobuf
          ph.addLast(new&lt;span&gt; ProtobufVarint32FrameDecoder());
          ph.addLast(new&lt;span&gt; ProtobufDecoder(UserMsg.User.getDefaultInstance()));
          ph.addLast(new&lt;span&gt; ProtobufVarint32LengthFieldPrepender());
          ph.addLast(new&lt;span&gt; ProtobufEncoder());
  ​
          //业务逻辑实现类
          ph.addLast(&quot;nettyServerHandler&quot;, new&lt;span&gt; NettyServerHandler());
      }
  }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class=&quot;md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded&quot;&gt;
&lt;span class=&quot;cm-keyword&quot;&gt;&lt;br/&gt;​&lt;/span&gt;
&lt;/pre&gt;
&lt;p class=&quot;md-end-block&quot;&gt;服务相关的设置的代码写完之后，我们再来编写主要的业务代码。&lt;span class=&quot;md-softbreak&quot;&gt; 使用Netty编写业务层的代码，我们需要继承&lt;strong&gt;ChannelInboundHandlerAdapter&lt;/strong&gt; 或&lt;strong&gt;SimpleChannelInboundHandler&lt;/strong&gt;类，在这里顺便说下它们两的区别吧。&lt;span class=&quot;md-softbreak&quot;&gt; 继承&lt;strong&gt;SimpleChannelInboundHandler&lt;/strong&gt;类之后，会在接收到数据后会自动&lt;strong&gt;release&lt;/strong&gt;掉数据占用的&lt;strong&gt;Bytebuffer&lt;/strong&gt;资源。并且继承该类需要指定数据格式。&lt;span class=&quot;md-softbreak&quot;&gt; 而继承&lt;strong&gt;ChannelInboundHandlerAdapter&lt;/strong&gt;则不会自动释放，需要手动调用&lt;strong&gt;ReferenceCountUtil.release()&lt;/strong&gt;等方法进行释放。继承该类不需要指定数据格式。&lt;span class=&quot;md-softbreak&quot;&gt; 所以在这里，个人推荐服务端继承&lt;strong&gt;ChannelInboundHandlerAdapter&lt;/strong&gt;，手动进行释放，防止数据未处理完就自动释放了。而且服务端可能有多个客户端进行连接，并且每一个客户端请求的数据格式都不一致，这时便可以进行相应的处理。&lt;span class=&quot;md-softbreak&quot;&gt; 客户端根据情况可以继承&lt;strong&gt;SimpleChannelInboundHandler&lt;/strong&gt;类。好处是直接指定好传输的数据格式，就不需要再进行格式的转换了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;代码如下:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; @Slf4j
  public class NettyServerHandler extends&lt;span&gt; ChannelInboundHandlerAdapter {
      /** 空闲次数 */
      private AtomicInteger idle_count = new AtomicInteger(1&lt;span&gt;);
      /** 发送次数 */
      private AtomicInteger count = new AtomicInteger(1&lt;span&gt;);
  ​
  ​
      /**
       * 建立连接时，发送一条消息
       */&lt;span&gt;
      @Override
      public void channelActive(ChannelHandlerContext ctx) throws&lt;span&gt; Exception {
          log.info(&quot;连接的客户端地址:&quot; +&lt;span&gt; ctx.channel().remoteAddress());
          UserMsg.User user = UserMsg.User.newBuilder().setId(1).setAge(24).setName(&quot;穆书伟&quot;).setState(0&lt;span&gt;).build();
          ctx.writeAndFlush(user);
          super&lt;span&gt;.channelActive(ctx);
      }
  ​
      /**
       * 超时处理 如果5秒没有接受客户端的心跳，就触发; 如果超过两次，则直接关闭;
       */&lt;span&gt;
      @Override
      public void userEventTriggered(ChannelHandlerContext ctx, Object obj) throws&lt;span&gt; Exception {
          if (obj instanceof&lt;span&gt; IdleStateEvent) {
              IdleStateEvent event =&lt;span&gt; (IdleStateEvent) obj;
              // 如果读通道处于空闲状态，说明没有接收到心跳命令
              if&lt;span&gt; (IdleState.READER_IDLE.equals(event.state())) {
                  log.info(&quot;已经5秒没有接收到客户端的信息了&quot;&lt;span&gt;);
                  if (idle_count.get() &amp;gt; 1&lt;span&gt;) {
                      log.info(&quot;关闭这个不活跃的channel&quot;&lt;span&gt;);
                      ctx.channel().close();
                  }
                  idle_count.getAndIncrement();
              }
          } else&lt;span&gt; {
              super&lt;span&gt;.userEventTriggered(ctx, obj);
          }
      }
  ​
      /**
       * 业务逻辑处理
       */&lt;span&gt;
      @Override
      public void channelRead(ChannelHandlerContext ctx, Object msg) throws&lt;span&gt; Exception {
          log.info(&quot;第&quot; + count.get() + &quot;次&quot; + &quot;,服务端接受的消息:&quot; +&lt;span&gt; msg);
          try&lt;span&gt; {
              // 如果是protobuf类型的数据
              if (msg instanceof&lt;span&gt; UserMsg.User) {
                  UserMsg.User user =&lt;span&gt; (UserMsg.User) msg;
                  if (user.getState() == 1&lt;span&gt;) {
                      log.info(&quot;客户端业务处理成功!&quot;&lt;span&gt;);
                  } else if(user.getState() == 2&lt;span&gt;){
                      log.info(&quot;接受到客户端发送的心跳!&quot;&lt;span&gt;);
                  }else&lt;span&gt;{
                      log.info(&quot;未知命令!&quot;&lt;span&gt;);
                  }
              } else&lt;span&gt; {
                  log.info(&quot;未知数据!&quot; +&lt;span&gt; msg);
                  return&lt;span&gt;;
              }
          } catch&lt;span&gt; (Exception e) {
              e.printStackTrace();
          } finally&lt;span&gt; {
              ReferenceCountUtil.release(msg);
          }
          count.getAndIncrement();
      }
  ​
      /**
       * 异常处理
       */&lt;span&gt;
      @Override
      public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws&lt;span&gt; Exception {
          cause.printStackTrace();
          ctx.close();
      }
  }
还有个服务端的启动类，之前是通过main方法直接启动， 不过这里改成了通过springBoot进行启动，差别不大。 代码如下：

  @SpringBootApplication
  @ComponentScan({&quot;com.sanshengshui.netty.server&quot;&lt;span&gt;})
  public class&lt;span&gt; NettyServerApp {
      /**
       * @param args
       */
      public static void&lt;span&gt; main(String[] args) {
         SpringApplication.run(NettyServerApp.class&lt;span&gt;);
      }
  }
  ​&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;到这里服务端相应的代码就编写完毕了&lt;span class=&quot;md-emoji&quot; data-content=&quot;bulb&quot;&gt;💡。&lt;/span&gt;&lt;/p&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;客户端&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;客户端这边的代码和服务端的很多地方都类似，我就不再过多细说了，主要将一些不同的代码拿出来简单的讲述下。&lt;span class=&quot;md-softbreak&quot;&gt; 首先是客户端的主类，基本和服务端的差不多，也就是多了监听的端口和一个监听器(用来监听是否和服务端断开连接，用于重连)。&lt;span class=&quot;md-softbreak&quot;&gt; 主要实现的代码逻辑如下:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded&quot;&gt;
      
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
/**
       * 重连
       */
      public void&lt;span&gt; doConnect(Bootstrap bootstrap, EventLoopGroup eventLoopGroup) {
          try&lt;span&gt; {
              if (bootstrap != null&lt;span&gt;) {
                  bootstrap.group(eventLoopGroup);
                  bootstrap.channel(NioSocketChannel.class&lt;span&gt;);
                  bootstrap.option(ChannelOption.SO_KEEPALIVE, true&lt;span&gt;);
                  bootstrap.handler(new&lt;span&gt; NettyClientInitializer());
                  bootstrap.remoteAddress(host, port);
                  f = bootstrap.connect().addListener((ChannelFuture futureListener) -&amp;gt;&lt;span&gt; {
                      final EventLoop eventLoop =&lt;span&gt; futureListener.channel().eventLoop();
                      if (!&lt;span&gt;futureListener.isSuccess()) {
                          log.info(&quot;与服务端断开连接!在10s之后准备尝试重连!&quot;&lt;span&gt;);
                          eventLoop.schedule(() -&amp;gt; doConnect(new Bootstrap(), eventLoop), 10&lt;span&gt;, TimeUnit.SECONDS);
                      }
                  });
                  if&lt;span&gt;(initFalg){
                      log.info(&quot;Netty客户端启动成功!&quot;&lt;span&gt;);
                      initFalg=false&lt;span&gt;;
                  }
              }
          } catch&lt;span&gt; (Exception e) {
              log.info(&quot;客户端连接失败!&quot;+&lt;span&gt;e.getMessage());
          }
  ​
      }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;注：监听器这块的实现用的是JDK1.8的写法。&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;客户端过滤其这块基本和服务端一直。不过需要注意的是，传输协议、编码和解码应该一致，还有心跳的读写时间应该小于服务端所设置的时间。&lt;span class=&quot;md-softbreak&quot;&gt; 改动的代码如下:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
1       ChannelPipeline ph =&lt;span&gt; ch.pipeline();
2           /*
3            * 解码和编码，应和服务端一致
4            * */
5           //入参说明: 读超时时间、写超时时间、所有类型的超时时间、时间格式
6           ph.addLast(new IdleStateHandler(0, 4, 0, TimeUnit.SECONDS));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;客户端的业务代码逻辑。&lt;span class=&quot;md-softbreak&quot;&gt; 主要实现的几点逻辑是心跳按时发送以及解析服务发送的&lt;strong&gt;protobuf&lt;/strong&gt;格式的数据。&lt;span class=&quot;md-softbreak&quot;&gt; 这里比服务端多个个注解， 该注解&lt;strong&gt;Sharable&lt;/strong&gt;主要是为了多个handler可以被多个channel安全地共享，也就是保证线程安全。&lt;span class=&quot;md-softbreak&quot;&gt; 废话就不多说了，代码如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
 1 &lt;span&gt;      @ChannelHandler.Sharable
 2 &lt;span&gt;  @Slf4j
 3   public class NettyClientHandler extends&lt;span&gt; ChannelInboundHandlerAdapter {
 4 &lt;span&gt;      @Autowired
 5       private&lt;span&gt; NettyClient nettyClient;
 6 &lt;span&gt;  ​
 7       /** 循环次数 */
 8       private AtomicInteger fcount = new AtomicInteger(1&lt;span&gt;);
 9 &lt;span&gt;  ​
10       /**
11        * 建立连接时
12        */
13 &lt;span&gt;      @Override
14       public void channelActive(ChannelHandlerContext ctx) throws&lt;span&gt; Exception {
15           log.info(&quot;建立连接时：&quot; + new&lt;span&gt; Date());
16 &lt;span&gt;          ctx.fireChannelActive();
17 &lt;span&gt;      }
18 &lt;span&gt;  ​
19       /**
20        * 关闭连接时
21        */
22 &lt;span&gt;      @Override
23       public void channelInactive(ChannelHandlerContext ctx) throws&lt;span&gt; Exception {
24           log.info(&quot;关闭连接时：&quot; + new&lt;span&gt; Date());
25           final EventLoop eventLoop =&lt;span&gt; ctx.channel().eventLoop();
26           nettyClient.doConnect(new&lt;span&gt; Bootstrap(), eventLoop);
27           super&lt;span&gt;.channelInactive(ctx);
28 &lt;span&gt;      }
29 &lt;span&gt;  ​
30       /**
31        * 心跳请求处理 每4秒发送一次心跳请求;
32        *
33        */
34 &lt;span&gt;      @Override
35       public void userEventTriggered(ChannelHandlerContext ctx, Object obj) throws&lt;span&gt; Exception {
36           log.info(&quot;循环请求的时间：&quot; + new Date() + &quot;，次数&quot; +&lt;span&gt; fcount.get());
37           if (obj instanceof&lt;span&gt; IdleStateEvent) {
38               IdleStateEvent event =&lt;span&gt; (IdleStateEvent) obj;
39               // 如果写通道处于空闲状态,就发送心跳命令
40               if&lt;span&gt; (IdleState.WRITER_IDLE.equals(event.state())) {
41                   UserMsg.User.Builder userState = UserMsg.User.newBuilder().setState(2&lt;span&gt;);
42 &lt;span&gt;                  ctx.channel().writeAndFlush(userState);
43 &lt;span&gt;                  fcount.getAndIncrement();
44 &lt;span&gt;              }
45 &lt;span&gt;          }
46 &lt;span&gt;      }
47 &lt;span&gt;  ​
48       /**
49        * 业务逻辑处理
50        */
51 &lt;span&gt;      @Override
52       public void channelRead(ChannelHandlerContext ctx, Object msg) throws&lt;span&gt; Exception {
53           // 如果不是protobuf类型的数据
54           if (!(msg instanceof&lt;span&gt; UserMsg.User)) {
55               log.info(&quot;未知数据!&quot; +&lt;span&gt; msg);
56               return&lt;span&gt;;
57 &lt;span&gt;          }
58           try&lt;span&gt; {
59 &lt;span&gt;  ​
60               // 得到protobuf的数据
61               UserMsg.User userMsg =&lt;span&gt; (UserMsg.User) msg;
62               // 进行相应的业务处理。。。
63               // 这里就从简了，只是打印而已
64 &lt;span&gt;              log.info(
65                       &quot;客户端接受到的用户信息。编号:&quot; + userMsg.getId() + &quot;,姓名:&quot; + userMsg.getName() + &quot;,年龄:&quot; +&lt;span&gt; userMsg.getAge());
66 &lt;span&gt;  ​
67               // 这里返回一个已经接受到数据的状态
68               UserMsg.User.Builder userState = UserMsg.User.newBuilder().setState(1&lt;span&gt;);
69 &lt;span&gt;              ctx.writeAndFlush(userState);
70               log.info(&quot;成功发送给服务端!&quot;&lt;span&gt;);
71           } catch&lt;span&gt; (Exception e) {
72 &lt;span&gt;              e.printStackTrace();
73           } finally&lt;span&gt; {
74 &lt;span&gt;              ReferenceCountUtil.release(msg);
75 &lt;span&gt;          }
76 &lt;span&gt;      }
77 &lt;span&gt;  ​
78   }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;那么到这里客户端的代码也编写完毕了&lt;span class=&quot;md-emoji&quot; data-content=&quot;bulb&quot;&gt;💡。&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;功能测试&lt;/h3&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;protobuf传输&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;首先启动服务端，然后再启动客户端。&lt;span class=&quot;md-softbreak&quot;&gt; 我们来看看结果是否如上述所说。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;服务端输出结果:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
2018-10-03 19:58:41.098  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第1次,服务端接受的消息:state: 1&lt;span&gt;
  ​
  2018-10-03 19:58:41.098  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 客户端业务处理成功!
  2018-10-03 19:58:45.058  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第2次,服务端接受的消息:state: 2&lt;span&gt;
  ​
  2018-10-03 19:58:45.059  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 接受到客户端发送的心跳!
  2018-10-03 19:58:49.060  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第3次,服务端接受的消息:state: 2&lt;span&gt;
  ​
  2018-10-03 19:58:49.061  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 接受到客户端发送的心跳!
  2018-10-03 19:58:53.063  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第4次,服务端接受的消息:state: 2&lt;span&gt;
  ​
  2018-10-03 19:58:53.064  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 接受到客户端发送的心跳!
  2018-10-03 19:58:57.066  INFO 23644 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第5次,服务端接受的消息:state: 2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;客户端输入结果:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
 2018-10-03 19:58:40.733  INFO 23737 --- [           main] c.sanshengshui.netty.client.NettyClient  : Netty客户端启动成功!
  2018-10-03 19:58:40.897  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 建立连接时：Wed Oct 03 19:58:40 CST 2018
  2018-10-03 19:58:41.033  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 客户端接受到的用户信息。编号:1,姓名:穆书伟,年龄:24
  2018-10-03 19:58:41.044  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 成功发送给服务端!
  2018-10-03 19:58:41.053  INFO 23737 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for&lt;span&gt; JMX exposure on startup
  2018-10-03 19:58:41.067  INFO 23737 --- [           main] com.sanshengshui.netty.NettyClientApp    : Started NettyClientApp in 1.73 seconds (JVM running for 2.632&lt;span&gt;)
  2018-10-03 19:58:45.054  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 19:58:45 CST 2018&lt;span&gt;，次数1
  2018-10-03 19:58:49.057  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 19:58:49 CST 2018&lt;span&gt;，次数2
  2018-10-03 19:58:53.060  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 19:58:53 CST 2018&lt;span&gt;，次数3
  2018-10-03 19:58:57.063  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 19:58:57 CST 2018&lt;span&gt;，次数4
  2018-10-03 19:59:01.066  INFO 23737 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 19:59:01 CST 2018&lt;span&gt;，次数5
  ​&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;通过打印信息可以看出如上述所说。&lt;/p&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;断线重连&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;接下来我们再来看看客户端是否能够实现重连。&lt;span class=&quot;md-softbreak&quot;&gt; 先启动客户端，再启动服务端。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;客户端输入结果:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
  2018-10-03 20:02:33.549  INFO 23990 --- [ntLoopGroup-2-1] c.sanshengshui.netty.client.NettyClient  : 与服务端断开连接!在10s之后准备尝试重连!
  2018-10-03 20:02:43.571  INFO 23990 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 建立连接时：Wed Oct 03 20:02:43 CST 2018
  2018-10-03 20:02:43.718  INFO 23990 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 客户端接受到的用户信息。编号:1,姓名:穆书伟,年龄:24
  2018-10-03 20:02:43.727  INFO 23990 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 成功发送给服务端!
  2018-10-03 20:02:47.733  INFO 23990 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 20:02:47 CST 2018&lt;span&gt;，次数1
  2018-10-03 20:02:51.735  INFO 23990 --- [ntLoopGroup-2-1] c.s.netty.client.NettyClientHandler      : 循环请求的时间：Wed Oct 03 20:02:51 CST 2018&lt;span&gt;，次数2
  ​&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;服务端输出结果:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
  2018-10-03 20:02:43.661  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 连接的客户端地址:/127.0.0.1:55690
  2018-10-03 20:02:43.760  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第1次,服务端接受的消息:state: 1&lt;span&gt;
  ​
  2018-10-03 20:02:43.760  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 客户端业务处理成功!
  2018-10-03 20:02:47.736  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第2次,服务端接受的消息:state: 2&lt;span&gt;
  ​
  2018-10-03 20:02:47.737  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 接受到客户端发送的心跳!
  2018-10-03 20:02:51.736  INFO 24067 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 第3次,服务端接受的消息:state: 2&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;结果也如上述所说！&lt;/p&gt;
&lt;h4 class=&quot;md-end-block md-heading&quot;&gt;读写超时&lt;/h4&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;服务端输出结果:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  2018-10-03 20:12:19.193  INFO 24507 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 连接的客户端地址:/127.0.0.1:56132
  2018-10-03 20:12:24.173  INFO 24507 --- [ntLoopGroup-3-1&lt;span&gt;] c.s.netty.server.NettyServerHandler      : 已经5秒没有接收到客户端的信息了
  2018-10-03 20:12:29.171  INFO 24507 --- [ntLoopGroup-3-1&lt;span&gt;] c.s.netty.server.NettyServerHandler      : 已经5秒没有接收到客户端的信息了
  2018-10-03 20:12:29.172  INFO 24507 --- [ntLoopGroup-3-1] c.s.netty.server.NettyServerHandler      : 关闭这个不活跃的channel&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;strong&gt;telnet输出结果:&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;如下图:&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181003203658280-1840305020.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_004.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;其它&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;关于netty整合springboot并使用protobuf进行数据传输到这里就结束了。&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;netty整合springboot并使用protobuf进行数据传输 项目工程地址: &lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui/netty-learning-example/tree/master/netty-springboot-protobuf&quot;&gt;https://github.com/sanshengshui/netty-learning-example/tree/master/netty-springboot-protobuf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;对了，也有Netty整合的其他中间件项目工程地址: &lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui/netty-learning-example&quot;&gt;https://github.com/sanshengshui/netty-learning-example&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;原创不易，如果感觉不错，希望给个推荐！您的支持是我写作的最大动力！&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;版权声明: 作者：穆书伟&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;博客园出处：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui&quot;&gt;https://www.cnblogs.com/sanshengshui&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;github出处：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui&quot;&gt;https://github.com/sanshengshui&lt;/a&gt;　　　　&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;个人博客出处：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://sanshengshui.github.io/&quot;&gt;https://sanshengshui.github.io/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 04 Oct 2018 02:06:00 +0000</pubDate>
<dc:creator>三升水</dc:creator>
<og:description>前言 本篇文章主要介绍的是SpringBoot整合Netty以及使用Protobuf进行数据传输的相关内容。Protobuf会介绍下用法，至于Netty在netty 之 telnet HelloWor</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sanshengshui/p/9741655.html</dc:identifier>
</item>
<item>
<title>机器学习——数据预处理 - 抿嘴唇</title>
<link>http://www.cnblogs.com/siplips/p/9741626.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/siplips/p/9741626.html</guid>
<description>&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;机器学习主要有两种，监督学习和非监督学习。监督学习就是督促计算机去学习，明确告诉它目标是什么，非监督学习是让计算机“自学成才”，没有设定目标，学习完告诉我你学到了什么&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; encoding=utf-8&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn &lt;span&gt;import&lt;/span&gt;&lt;span&gt; linear_model
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; matplotlib.pyplot as plt
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 房屋面积与价格历史数据（csv文件）&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; data = np.array([[150, 6450], [200, 7450], [250, 8450], [300, 9450], [350, 11450], [400, 15450], [600, 18450&lt;span&gt;]])
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print data[:, 0].reshape(-1, 1)&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; plt.scatter(data[:, 0], data[:, 1], color='blue')&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; plt.show()&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 线性模型&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; regr = linear_model.LinearRegression()&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 拟合&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; regr.fit(data[:, 0].reshape(-1, 1), data[:, 1])&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 直线的斜率、截距&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; a, b = regr.coef_, regr.intercept_&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print a, b&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; plt.plot(data[:,0],regr.predict(data[:,0].reshape(-1,1)),color='red',linewidth=4)&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; plt.scatter(data[:, 0], regr.predict(data[:, 0].reshape(-1, 1)), color='red')&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 预测175天和800天房价数据&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print regr.predict(175)&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print regr.predict(800)&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; plt.show()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;导入类库&quot; data-source-line=&quot;1&quot;&gt;导入类库&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature_extraction &lt;span&gt;import&lt;/span&gt;&lt;span&gt; DictVectorizer
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span&gt;import&lt;/span&gt;&lt;span&gt; CountVectorizer, TfidfVectorizer
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; jieba
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature_selection &lt;span&gt;import&lt;/span&gt;&lt;span&gt; VarianceThreshold
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; StandardScaler, MinMaxScaler
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;数据处理&quot; data-source-line=&quot;10&quot;&gt;数据处理&lt;/h2&gt;
&lt;h3 id=&quot;字典数据抽取&quot; data-source-line=&quot;11&quot;&gt;字典数据抽取&lt;/h3&gt;
&lt;h4 id=&quot;代码&quot; data-source-line=&quot;12&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; dictvec():
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    字典数据抽取：DictVectorizer
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    sprase：为False时生成矩阵形式
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    fit_transform：训练数据集
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    get_feature_names：获取特征名，即列名或表头
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    inverse_transform：得到每行数据中为1的数据（为1即为存在）
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    :return:
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     dict = DictVectorizer(sparse=&lt;span&gt;False)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     data =&lt;span&gt; dict.fit_transform(
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         [{&lt;span&gt;'&lt;/span&gt;&lt;span&gt;city&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;北京&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pos&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;北方&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;temperature&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 100&lt;span&gt;},
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;          {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;city&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;上海&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pos&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;南方&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;temperature&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 60&lt;span&gt;},
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;          {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;city&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;深圳&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pos&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;南方&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;temperature&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 30&lt;span&gt;},
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;          {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;city&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;重庆&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pos&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;南方&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;temperature&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 70&lt;span&gt;},
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;          {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;city&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;北京&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pos&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;北方&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;temperature&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 100&lt;span&gt;}])
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(dict.get_feature_names())
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(dict.inverse_transform(data))
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data)
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果&quot; data-source-line=&quot;36&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;38&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
[&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;上海&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;北京&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;深圳&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;重庆&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;北方&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;南方&lt;/span&gt;&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;']
[{&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;北京&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;北方&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;100.0&lt;/span&gt;}, {&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;上海&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;南方&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;60.0&lt;/span&gt;}, {&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;深圳&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;南方&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;30.0&lt;/span&gt;}, {&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;重庆&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;南方&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;70.0&lt;/span&gt;}, {&lt;span class=&quot;hljs-symbol&quot;&gt;'city=&lt;span class=&quot;zh-hans&quot;&gt;北京&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'pos=&lt;span class=&quot;zh-hans&quot;&gt;北方&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;hljs-symbol&quot;&gt;'temperature&lt;/span&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;':&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;100.0&lt;/span&gt;}]
[[  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;. &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;.]
 [  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.  &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt;.]
 [  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.  &lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;.]
 [  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.  &lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt;.]
 [  &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.   &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;. &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;.]]
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;英文特征值化&quot; data-source-line=&quot;49&quot;&gt;英文特征值化&lt;/h3&gt;
&lt;h4 id=&quot;代码-2&quot; data-source-line=&quot;50&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; countvec():
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    对文本进行特征值化：CountVectorizer对文本中的词可进行统计
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    排序：会按照英文常用性进行排序
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    停用：a 等无显著特征的词会被停用
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    :return: None
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     cv =&lt;span&gt; CountVectorizer()
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     data = cv.fit_transform([&lt;span&gt;'&lt;/span&gt;&lt;span&gt;this is a test test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;we have a test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;])
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(cv.get_feature_names())
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data.toarray())
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-2&quot; data-source-line=&quot;68&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;70&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
[&lt;span class=&quot;hljs-symbol&quot;&gt;'have&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'is&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'test&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'this&lt;/span&gt;', &lt;span class=&quot;hljs-symbol&quot;&gt;'we&lt;/span&gt;']
[[&lt;span class=&quot;hljs-name&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;]
 [&lt;span class=&quot;hljs-name&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]]
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;中文特征值化&quot; data-source-line=&quot;77&quot;&gt;中文特征值化&lt;/h3&gt;
&lt;h4 id=&quot;代码-3&quot; data-source-line=&quot;78&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; cutword():
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 分词&lt;/span&gt;
    con1 = jieba.cut(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;天空灰得像哭过&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    con2 &lt;/span&gt;= jieba.cut(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;离开你以后&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    con3 &lt;/span&gt;= jieba.cut(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;并没有很自由&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 转换成列表&lt;/span&gt;
    content1 =&lt;span&gt; list(con1)
    content2 &lt;/span&gt;=&lt;span&gt; list(con2)
    content3 &lt;/span&gt;=&lt;span&gt; list(con3)

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 把列表转换成字符串&lt;/span&gt;
    c1 = &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.join(content1)
    c2 &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.join(content2)
    c3 &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.join(content3)
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; c1, c2, c3
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; hanzivec():
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    对文本进行特征值化：CountVectorizer对文本中的词可进行统计
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    :return: None
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     c1, c2, c3 =&lt;span&gt; cutword()
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     cv =&lt;span&gt; CountVectorizer()
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(c1, c2, c3)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     data =&lt;span&gt; cv.fit_transform([c1, c2, c3])
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(cv.get_feature_names())
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data.toarray())
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-3&quot; data-source-line=&quot;114&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;116&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
&lt;span class=&quot;zh-hans&quot;&gt;天空&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;灰得&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;像&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;哭&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;过&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;离开&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;你&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;以后&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;并&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;没有&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;很&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;自由&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;['&lt;span class=&quot;zh-hans&quot;&gt;以后&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;天空&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;没有&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;灰得&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;离开&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;自由&lt;/span&gt;']&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;[[0 1 0 1 0 0]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [1 0 0 0 1 0]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [0 0 1 0 0 1]]&lt;/span&gt;
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;词频&quot; data-source-line=&quot;125&quot;&gt;词频&lt;/h3&gt;
&lt;h4 id=&quot;代码-4&quot; data-source-line=&quot;126&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; tfidfvec():
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    中文特征值化
    TF(词频)：在一篇文章中出现该词的次数与文章中总词数的比值，（出现次数/文章总词数）
    IDF(逆向词频)：log(文章总数/该词出现的文章数)
    TF,IDF值越大说明该词特征越显著
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    c1, c2, c3 &lt;/span&gt;=&lt;span&gt; cutword()
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(c1, c2, c3)
    tf &lt;/span&gt;=&lt;span&gt; TfidfVectorizer()
    data &lt;/span&gt;=&lt;span&gt; tf.fit_transform([c1, c2, c3])
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(tf.get_feature_names())
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data.toarray())
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-4&quot; data-source-line=&quot;144&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;146&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
&lt;span class=&quot;zh-hans&quot;&gt;天空&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;灰得&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;像&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;哭&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;过&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;离开&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;你&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;以后&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;并&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;没有&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;很&lt;/span&gt; &lt;span class=&quot;zh-hans&quot;&gt;自由&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;['&lt;span class=&quot;zh-hans&quot;&gt;以后&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;天空&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;没有&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;灰得&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;离开&lt;/span&gt;', '&lt;span class=&quot;zh-hans&quot;&gt;自由&lt;/span&gt;']&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;[[0.         0.70710678 0.         0.70710678 0.         0.        ]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [0.70710678 0.         0.         0.         0.70710678 0.        ]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [0.         0.         0.70710678 0.         0.         0.70710678]]&lt;/span&gt;
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;标准化缩放&quot; data-source-line=&quot;155&quot;&gt;标准化缩放&lt;/h3&gt;
&lt;h4 id=&quot;代码-5&quot; data-source-line=&quot;156&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; stand():
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    标准化缩放：特征列均值为0，标准差为1
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    将数据差值很大，但变化率等相近的数据标准化，类似于横坐标是1000,2000,3000，纵坐标是1,2,3
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    :return:
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     std =&lt;span&gt; StandardScaler()
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; data = std.fit_transform([[1., -1., 3.], [2., 4., 2.], [4., 6., -1.]])&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     data = std.fit_transform([[1., 2., 3.], [100., 200., 300.], [1000., 2000., 3000&lt;span&gt;.]])
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-5&quot; data-source-line=&quot;171&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;173&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
&lt;span class=&quot;hljs-meta&quot;&gt;[[-0.81438366 -0.81438366 -0.81438366]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [-0.59409956 -0.59409956 -0.59409956]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [ 1.40848322  1.40848322  1.40848322]]&lt;/span&gt;
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;归一化&quot; data-source-line=&quot;180&quot;&gt;归一化&lt;/h3&gt;
&lt;h4 id=&quot;代码-6&quot; data-source-line=&quot;181&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; mm():
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    归一化处理：类似于上面标准化，可以设定归一化后的特征值范围
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    :return:
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     mm = MinMaxScaler(feature_range=(2, 3&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;     data = mm.fit_transform([[90, 2, 10, 40], [60, 4, 15, 45], [75, 3, 13, 46&lt;span&gt;]])
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data)
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-6&quot; data-source-line=&quot;194&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;196&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
&lt;span class=&quot;hljs-meta&quot;&gt;[[3.         2.         2.         2.        ]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [2.         3.         3.         2.83333333]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [2.5        2.5        2.6        3.        ]]&lt;/span&gt;
'''
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;特征选择&quot; data-source-line=&quot;203&quot;&gt;特征选择&lt;/h3&gt;
&lt;h4 id=&quot;代码-7&quot; data-source-line=&quot;204&quot;&gt;代码&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;def&lt;/span&gt;&lt;span&gt; var():
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    特征选择-删除低方差的特征
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    threshold：阈值，小于设定阈值方差的特征列将被剔除
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    注：方差小的，特征不显著
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    :return:
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     var = VarianceThreshold(threshold=1.0&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     data = var.fit_transform([[0, 2, 0, 3], [0, 1, 4, 3], [0, 1, 1, 3&lt;span&gt;]])
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(data)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; None
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;结果-7&quot; data-source-line=&quot;221&quot;&gt;结果&lt;/h4&gt;
&lt;pre data-source-line=&quot;223&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;'''
&lt;span class=&quot;hljs-meta&quot;&gt;[[0]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [4]&lt;/span&gt;
&lt;span class=&quot;hljs-code&quot;&gt; [1]]&lt;/span&gt;
'''&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 04 Oct 2018 01:51:00 +0000</pubDate>
<dc:creator>抿嘴唇</dc:creator>
<og:description>基础 机器学习主要有两种，监督学习和非监督学习。监督学习就是督促计算机去学习，明确告诉它目标是什么，非监督学习是让计算机“自学成才”，没有设定目标，学习完告诉我你学到了什么 数据预处理 导入类库 数据</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/siplips/p/9741626.html</dc:identifier>
</item>
<item>
<title>Flask：04-五分钟轻松理解学会：文件上传与邮件发送（自带优化） - Sunwj_Monkey</title>
<link>http://www.cnblogs.com/swjblog/p/9726896.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/swjblog/p/9726896.html</guid>
<description>&lt;p&gt;使用：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_uploads &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; UploadSet, IMAGES
&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_uploads &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; configure_uploads
&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; flask_uploads &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; patch_request_class
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; os

app = Flask(__name__)

app.config[&lt;span class=&quot;hljs-string&quot;&gt;'MAX_CONTENT_LENGTH'&lt;/span&gt;] = &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;1024&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;
app.config[&lt;span class=&quot;hljs-string&quot;&gt;'UPLOADED_PHOTOS_DEST'&lt;/span&gt;] = os.path.join(os.getcwd(), &lt;span class=&quot;hljs-string&quot;&gt;'static/upload'&lt;/span&gt;)

photos = UploadSet(&lt;span class=&quot;hljs-string&quot;&gt;'photos'&lt;/span&gt;, IMAGES)

configure_uploads(app, photos)

patch_request_class(app, size=&lt;span class=&quot;hljs-keyword&quot;&gt;None&lt;/span&gt;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;视图函数&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;hljs language-python&quot;&gt;&lt;span class=&quot;hljs-decorator&quot;&gt;@app.route('/upload/', methods=['GET', 'POST'])&lt;/span&gt;
&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;
    img_url = &lt;span class=&quot;hljs-keyword&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;hljs-string&quot;&gt;'POST'&lt;/span&gt;:
        
        photo = request.files.get(&lt;span class=&quot;hljs-string&quot;&gt;'photo'&lt;/span&gt;)
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; photo:
            
            photos.save(photo)
            
            img_url = photos.url(photo.filename)
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;hljs-string&quot;&gt;'upload.html'&lt;/span&gt;, img_url=img_url)
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;优化上传：生成随机文件名，生成缩略图(PIL模块，只支持py2，py3中使用需要安装pillow)&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;hljs language-python&quot;&gt;
&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;random_string&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(length=&lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; random
    base_str = &lt;span class=&quot;hljs-string&quot;&gt;'abcdefghijklmnopqrstuvwxyz1234567890'&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;''&lt;/span&gt;.join(random.choice(base_str) &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; range(length))

&lt;span class=&quot;hljs-decorator&quot;&gt;@app.route('/upload/', methods=['GET', 'POST'])&lt;/span&gt;
&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;
    img_url = &lt;span class=&quot;hljs-keyword&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;hljs-string&quot;&gt;'POST'&lt;/span&gt;:
        
        photo = request.files.get(&lt;span class=&quot;hljs-string&quot;&gt;'photo'&lt;/span&gt;)
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; photo:
            
            suffix = os.path.splitext(photo.filename)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]
            
            filename = random_string() + suffix
            
            photos.save(photo, name=filename)
            
            &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; PIL &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; Image
            
            pathname = os.path.join(app.config[&lt;span class=&quot;hljs-string&quot;&gt;'UPLOADED_PHOTOS_DEST'&lt;/span&gt;], filename)
            
            img = Image.open(pathname)
            
            img.thumbnail((&lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;64&lt;/span&gt;))
            
            img.save(pathname)
            
            img_url = photos.url(filename)
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; render_template(&lt;span class=&quot;hljs-string&quot;&gt;'upload.html'&lt;/span&gt;, img_url=img_url)
&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 04 Oct 2018 01:29:00 +0000</pubDate>
<dc:creator>Sunwj_Monkey</dc:creator>
<og:description>文件上传与邮件发送 可以按照标题分别直接粘贴对应的文件夹，运行直接用： 原生上传 模板文件 &lt;form method=&quot;post&quot; enctype=&quot;multipa</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/swjblog/p/9726896.html</dc:identifier>
</item>
</channel>
</rss>