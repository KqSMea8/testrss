<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>上海，苏州，面试归来——总结一下 - 莫那-鲁道</title>
<link>http://www.cnblogs.com/stateis0/p/9070182.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stateis0/p/9070182.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;楼主离职已有 10 天，这段时间里除了看源码，就是投简历面试了。一共面试了 4 家，说说感受。&lt;/p&gt;
&lt;h2 id=&quot;xx-汇&quot;&gt;XX 汇&lt;/h2&gt;
&lt;p&gt;XX 汇是一家小型的电商网站，由于楼主的技术栈集中在 Java 语言这里，所以，即使楼主对并发，JVM，Netty，Spring 等都稍有了解，但依然没有任何优势—— 因为他们完全用不到。&lt;/p&gt;
&lt;p&gt;整个面试过程中，问了大概以下问题：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;说说你的项目，用了 SpringCloud 哪些功能？&lt;/li&gt;
&lt;li&gt;熟悉 Mysql 吗？说说索引（不懂 Mysql 啊 大佬）。&lt;/li&gt;
&lt;li&gt;如何实现一个单例模式（这个俺擅长）&lt;/li&gt;
&lt;li&gt;平时使用了哪些线程池（这个俺也擅长）&lt;/li&gt;
&lt;li&gt;Map 接口有哪些类（这个俺也擅长）&lt;/li&gt;
&lt;li&gt;写一段 SQL 呗（不会 SQL）&lt;/li&gt;
&lt;li&gt;如何实现免登陆功能（cookie session？）&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;当然，被刷了，估计是 SQL 不够好吧，而我擅长的他们也不需要。&lt;/p&gt;
&lt;h2 id=&quot;xx-旅游&quot;&gt;XX 旅游&lt;/h2&gt;
&lt;p&gt;这个就比较奇葩了，是最奇葩的一个，面试官是个小伙子，根本不懂并发，然后强行问我并发，自己基本一言不发。还对我的回答貌似不满意？&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;自我介绍一下。&lt;/li&gt;
&lt;li&gt;说说 Mysql 的索引。&lt;/li&gt;
&lt;li&gt;说说 redis 主从同步。&lt;/li&gt;
&lt;li&gt;说说 redis 缓存穿透，缓存雪崩，恶意访问。redis key 怎么设计？redis master 崩了怎么办？&lt;/li&gt;
&lt;li&gt;如何设计一个高并发系统。&lt;/li&gt;
&lt;li&gt;如何设计一个高并发活动业务。&lt;/li&gt;
&lt;li&gt;说说 volatile 。&lt;/li&gt;
&lt;li&gt;说说 Java 里面的锁。使用上有什么不同？&lt;/li&gt;
&lt;li&gt;说说 final。&lt;/li&gt;
&lt;li&gt;说说 Java 内存模型。&lt;/li&gt;
&lt;li&gt;说说 GC。&lt;/li&gt;
&lt;li&gt;Mybatis 为什么比 JDBC 快（缓存？）？&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;整个沟通过程中，除了上面的 redis 和项目有一些引导性的提问之外，后面关于 Java 的，基本一言不发，然后不知所以。。。。真不知道 XX 旅游还有没有大神了。&lt;/p&gt;
&lt;h2 id=&quot;xxx-中间件&quot;&gt;XXX 中间件&lt;/h2&gt;
&lt;p&gt;这家就比较有意思了，是在 Mycat 中间件上做的 Mysql 中间件。两个面试官都挺有意思的。&lt;br/&gt;先是研发 leader 问。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;说说你擅长的（并发，JVM，RPC，Netty）&lt;/li&gt;
&lt;li&gt;说说 Java 的内存模型&lt;/li&gt;
&lt;li&gt;说说 Netty 的 reactor 模型相比普通的 NIO 实现好在哪？&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;然后是中间件 leader 提问。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;黑板上手写几段排序和过滤字符串代码。&lt;/li&gt;
&lt;li&gt;说说常用的设计模式。&lt;/li&gt;
&lt;li&gt;GC 优化有哪些经验。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;总的来讲，虽然问题不多，但问的都很专业，也能感觉到面试官的技术确实非常深入，按照他们说的，“我们经常要解决操作系统层面的问题，因此要非常熟悉 Linux”，然后和我讲了几个 OS 的函数。。。&lt;/p&gt;
&lt;p&gt;基本上，都是从简历上开始问的，不像有的公司，简历写的和没写一样，根本不问简历上的，就问你不懂的，那你叫我来干啥？？？我只会我简历上的，简历上给你看的东西就是我擅长的，如果你不需要，就不要叫我过来。&lt;/p&gt;
&lt;p&gt;所以，遇到问你简历的面试官，好好珍惜。&lt;/p&gt;
&lt;p&gt;PS：这是 4 家中，唯一一家给面试者喝水的公司。。。。。&lt;/p&gt;
&lt;h2 id=&quot;xx-医生&quot;&gt;XX 医生&lt;/h2&gt;
&lt;p&gt;怎么说呢？第一个面试官还挺正常的，第二个面试官就奇葩的很。。。&lt;/p&gt;
&lt;p&gt;第一个面试官。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;懂基本的数据结构和算法吧？说说链表。怎么提高查询效率（2分？），还能再提高吗（提示跳表）。&lt;/li&gt;
&lt;li&gt;cookie 和 session。实现一个记住我功能。session 存放在哪里？用户很多怎么办？JVM 崩了 session 怎么办？&lt;/li&gt;
&lt;li&gt;设计一个票房表结构。&lt;/li&gt;
&lt;li&gt;说说 hashMap。&lt;/li&gt;
&lt;li&gt;为什么线程不安全。&lt;/li&gt;
&lt;li&gt;为什么 HashMap 线程不安全？&lt;/li&gt;
&lt;li&gt;多线程下 HashMap 安全吗？读也不安全吗？（WTF？开始怀疑他们了。。。。）&lt;/li&gt;
&lt;li&gt;平时使用并发类库解决了哪些问题？&lt;/li&gt;
&lt;li&gt;说说 Java 内存模型。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;还算比较正常的。基本上还能聊。&lt;/p&gt;
&lt;p&gt;第二个面试官就奇葩了。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;写一段代码，把这个字符串过滤然后分组一下。&lt;/li&gt;
&lt;li&gt;给 10 个数，下面写的数是上面的数的下面的个数。。。。。&lt;/li&gt;
&lt;li&gt;over，我觉得你思维还是不够开放。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;我他么的也是日了狗。。。。。&lt;/p&gt;
&lt;p&gt;这家公司，6 点叫我过去，七点他们才吃好饭来面试，面到 8 点多，一口水都没得喝。真是神一般的公司。。。。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;总结下来。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;楼主的 mysql ，redis 确实不够深入，因为没花时间，无法狡辩。这个确实是职业规划带来的副作用吧。&lt;/li&gt;
&lt;li&gt;楼主投递简历的时候，不够专业，投递的岗位可能和楼主的技能不匹配。&lt;/li&gt;
&lt;li&gt;运气好，遇到一个合格的面试官很重要，很多面试官不够专业。&lt;/li&gt;
&lt;li&gt;平常心，面试就是一个撮合的过程，合适自己的公司不多，没面上，说明没有缘分，正常。继续努力，找到适合自己的公司。&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Mon, 21 May 2018 18:22:00 +0000</pubDate>
<dc:creator>莫那-鲁道</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stateis0/p/9070182.html</dc:identifier>
</item>
<item>
<title>.NET Core 获取操作系统各种信息 - 晓晨Master</title>
<link>http://www.cnblogs.com/stulzq/p/9070164.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stulzq/p/9070164.html</guid>
<description>&lt;h2 id=&quot;一.前言&quot;&gt;一.前言&lt;/h2&gt;
&lt;p&gt;.NET Core 内置了一些API供我们获取操作系统、运行时、框架等信息。这些API不是很常用，所有有些小伙伴可能还不知道，这里做一些可能用到的获取操作系统的API介绍&lt;/p&gt;
&lt;h2 id=&quot;二.判断操作系统&quot;&gt;二.判断操作系统&lt;/h2&gt;
&lt;p&gt;判断操作系统是否为 Linux OSX Windows，主要使用 &lt;code&gt;System.Runtime.InteropServices.IsOSPlatform()&lt;/code&gt;这个方法，使用如下：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;Console.WriteLine(&quot;判断是否为Windows Linux OSX&quot;);
Console.WriteLine($&quot;Linux:{RuntimeInformation.IsOSPlatform(OSPlatform.Linux)}&quot;);
Console.WriteLine($&quot;OSX:{RuntimeInformation.IsOSPlatform(OSPlatform.OSX)}&quot;);
Console.WriteLine($&quot;Windows:{RuntimeInformation.IsOSPlatform(OSPlatform.Windows)}&quot;);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201805/668104-20180522013439813-1928652341.png&quot; alt=&quot;1526923666756&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;三.获取操作系统架构名称&quot;&gt;三.获取操作系统架构、名称&lt;/h2&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;Console.WriteLine($&quot;系统架构：{RuntimeInformation.OSArchitecture}&quot;);
Console.WriteLine($&quot;系统名称：{RuntimeInformation.OSDescription}&quot;);
Console.WriteLine($&quot;进程架构：{RuntimeInformation.ProcessArchitecture}&quot;);
Console.WriteLine($&quot;是否64位操作系统：{Environment.Is64BitOperatingSystem}&quot;);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201805/668104-20180522013439422-1306877085.png&quot; alt=&quot;1526923737607&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;四.写在最后&quot;&gt;四.写在最后&lt;/h2&gt;
&lt;p&gt;获取这些信息的类主要都在 &lt;code&gt;System.Runtime.InteropServices&lt;/code&gt;名称空间下。相关类名都带 Runtime 或者 Environment，如果还有其他需求，请大家去这里查找。&lt;/p&gt;
</description>
<pubDate>Mon, 21 May 2018 17:40:00 +0000</pubDate>
<dc:creator>晓晨Master</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stulzq/p/9070164.html</dc:identifier>
</item>
<item>
<title>Django+Bootstrap+Mysql 搭建个人博客（六） - zhang_derek</title>
<link>http://www.cnblogs.com/derek1184405959/p/9069472.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/derek1184405959/p/9069472.html</guid>
<description>&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.1.comments插件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）安装&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
pip install django-contrib-comments
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（02）settings&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
INSTALLED_APPS =&lt;span&gt; [
          &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;django.contrib.sites&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
          &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;django_comments&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
SITE_ID =1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180521210315259-51453316.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; （3）website/url&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 url(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^comments/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, include(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;django_comments.urls&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)),
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（4）修改源码&lt;/p&gt;
&lt;p&gt;django_comments/abstracts.py第36行&lt;/p&gt;
&lt;p&gt; 原代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    site = models.ForeignKey(Site, on_delete=models.CASCADE)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改后&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 site = models.ForeignKey(Site,default=None,blank=True,null=True,on_delete=models.CASCADE)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; （5）修改源码&lt;/p&gt;
&lt;p&gt; django_comments/abstracts.py第52行&lt;/p&gt;
&lt;p&gt;修改和增加了几个字段&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; CommentAbstractModel(BaseCommentAbstractModel):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    A user comment about some object.
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;

    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; Who posted this comment? If ``user`` is set then it was an authenticated&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; user; otherwise at least user_name should have been set and the comment&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; was posted by a non-authenticated user.&lt;/span&gt;
    user = models.ForeignKey(settings.AUTH_USER_MODEL, verbose_name=_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                             blank&lt;/span&gt;=True, null=True, related_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%(class)s_comments&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                             on_delete&lt;/span&gt;=&lt;span&gt;models.SET_NULL)

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Explicit `max_length` to apply both to Django 1.7 and 1.8+.&lt;/span&gt;
    user_email = models.EmailField(_(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user's email address&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), max_length=254&lt;span&gt;,
                                   blank&lt;/span&gt;=True,null=True,default=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;xxx@xxx.com&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    user_url &lt;/span&gt;= models.URLField(_(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user's URL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), blank=True,null=True,default=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;https://xxx.xxx.xxx.xxx&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

    user_name &lt;/span&gt;= models.CharField(_(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user's name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), max_length=50, blank=&lt;span&gt;True)
    user_img &lt;/span&gt;= models.ImageField(upload_to=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user_images&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, blank=True,null=True,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;用户图像&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    comment_title &lt;/span&gt;= models.CharField(max_length=256,default=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;无标题&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, blank=True,null=True,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;评论标题&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    parent_comment &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;self&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,default=None, blank=True,null=True,related_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;child_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,on_delete=models.CASCADE) &lt;br/&gt;level &lt;span&gt;= models.PositiveIntegerField(default=0, blank=True,null=True,verbose_name=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论层级&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) comment &lt;/span&gt;&lt;span&gt;= models.TextField(_(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;), max_length=&lt;/span&gt;&lt;span&gt;COMMENT_MAX_LENGTH)&lt;br/&gt;. &lt;br/&gt;. &lt;br/&gt;. &lt;br/&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; （6）修改源码&lt;/p&gt;
&lt;p&gt; django_comments/admin.py第29和37行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Content&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
            {&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;fields&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user_name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user_email&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user_url&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment_title&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;parent_comment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
list_display = (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment_title&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;content_type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;object_pk&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ip_address&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;submit_date&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;is_public&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;is_remov&lt;/span&gt;ed')
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（7）修改源码&lt;/p&gt;
&lt;p&gt; django_comments/forms.py第97行表单&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt;    class CommentDetailsForm(CommentSecurityForm):&lt;em id=&quot;__mceDel&quot;&gt;   &lt;br/&gt;　　　　 &quot;&quot;&quot;&lt;/em&gt;&lt;br/&gt;　　　　Handles the specific details of the comment (name, comment, etc.).
    　　&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; name = forms.CharField(label=pgettext_lazy(&quot;Person name&quot;, &quot;Name&quot;), max_length=50)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; email = forms.EmailField(label=_(&quot;Email address&quot;))&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; url = forms.URLField(label=_(&quot;URL&quot;), required=False)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; Translators: 'Comment' is a noun here.&lt;/span&gt;
    comment = forms.CharField(label=_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Comment&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;), widget=&lt;span&gt;forms.Textarea,
                              max_length&lt;/span&gt;=&lt;span&gt;COMMENT_MAX_LENGTH)
    comment_title &lt;/span&gt;= forms.CharField(max_length=256,label=_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;标题&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    parent_id &lt;/span&gt;= forms.IntegerField(min_value=-1,label=_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;父评论的id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    level &lt;/span&gt;= forms.IntegerField(min_value=0,label=_(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;层级&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),)&lt;br/&gt;　　.&lt;br/&gt;　　.&lt;br/&gt;　　.&lt;br/&gt;&lt;/span&gt;&lt;span&gt;　
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; get_comment_create_data(self, site_id=&lt;span&gt;None):
        &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
        Returns the dict of data to be used to create a comment. Subclasses in
        custom comment apps that override get_comment_model can override this
        method to add extra fields onto a custom comment model.
        &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
        parent_id &lt;/span&gt;= self.cleaned_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;parent_id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; parent_id &amp;lt;=&lt;span&gt; 0:
            parent &lt;/span&gt;=&lt;span&gt; None
            _level &lt;/span&gt;= self.cleaned_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;level&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            parent &lt;/span&gt;= get_model().objects.get(id=&lt;span&gt;parent_id)
            _level &lt;/span&gt;= self.cleaned_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;level&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] + 4    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 4是缩进&lt;/span&gt;

        &lt;span&gt;return&lt;/span&gt;&lt;span&gt; dict(
            content_type&lt;/span&gt;=&lt;span&gt;ContentType.objects.get_for_model(self.target_object),
            object_pk&lt;/span&gt;=&lt;span&gt;force_text(self.target_object._get_pk_val()),
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; user_name=self.cleaned_data[&quot;name&quot;],&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; user_email=self.cleaned_data[&quot;email&quot;],&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; user_url=self.cleaned_data[&quot;url&quot;],&lt;/span&gt;
            comment_title = self.cleaned_data[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment_title&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;],
            parent_comment &lt;/span&gt;=&lt;span&gt; parent,
            level &lt;/span&gt;=&lt;span&gt; _level,
            comment&lt;/span&gt;=self.cleaned_data[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;],
            submit_date&lt;/span&gt;=&lt;span&gt;timezone.now(),
            site_id&lt;/span&gt;=site_id &lt;span&gt;or&lt;/span&gt; getattr(settings, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SITE_ID&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, None),
            is_public&lt;/span&gt;=&lt;span&gt;True,
            is_removed&lt;/span&gt;=&lt;span&gt;False,
        )&lt;/span&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（8）修改源码&lt;/p&gt;
&lt;p&gt;django_comments/views/comments.py第97行表单&lt;/p&gt;
&lt;p&gt;52行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 添加&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; request.session.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;login&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, None) &lt;span&gt;and&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; user_is_authenticated:
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; redirect(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;116行&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; if user_is_authenticated:&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;     comment.user = request.user&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;添加&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; request.session.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;login&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,None):
        comment.user_name &lt;/span&gt;= request.session[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;screen_name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
        comment.user_img &lt;/span&gt;= request.session[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;profile_image_url&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 以上都修改完后&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;python manage.py makemigtations

python manage.py migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.2.评论表单&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;detail.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 　　　　　　　　 &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;hr /&amp;gt;&lt;span&gt;
                    {&lt;/span&gt;% get_comment_form &lt;span&gt;for&lt;/span&gt; entry as form %&lt;span&gt;}
                    {&lt;/span&gt;% get_comment_count &lt;span&gt;for&lt;/span&gt; entry  as comment_count %&lt;span&gt;}
                    &lt;/span&gt;&amp;lt;h3 &amp;gt;评论总数： {{ comment_count }}&amp;lt;/h3&amp;gt;
                    &amp;lt;hr /&amp;gt;
                &amp;lt;/div&amp;gt;

                &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;form &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-horizontal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% comment_form_target %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; method=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span&gt;
                        {&lt;/span&gt;% csrf_token %&lt;span&gt;}
                        &lt;/span&gt;&amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left control-label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;评论标题:&amp;lt;/label&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;col-sm-6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;input &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;comment_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入标题&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; required /&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left control-label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;评论内容:&amp;lt;/label&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;col-sm-6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;textarea style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;resize:none;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; rows=6 name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;在此输入评论&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; required&amp;gt;&amp;lt;/textarea&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;span style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;display: none;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;{{ form.honeypot }}&amp;lt;/span&amp;gt;&lt;span&gt;
                        {{ form.content_type }}
                        {{ form.object_pk }}
                        {{ form.timestamp }}
                        {{ form.security_hash }}
                        &lt;/span&gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;next&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% url 'blog:blog_detail' entry.id %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
                        &amp;lt;input  name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;parent_id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
                        &amp;lt;input  name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;level&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;

                        &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group col-sm-7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-left: 68px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;reset&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-default&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;glyphicon glyphicon-repeat&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;重置&amp;lt;/button&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-right&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-right: 12px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-success&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id_submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;glyphicon glyphicon-send&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;评论&amp;lt;/button&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/form&amp;gt;
                &amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;效果：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180521231420628-1031156264.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在测试评论，可以添加成功，但是还不能显示&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.3.显示评论&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt; （1）views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt; django_comments.models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Comment

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; detail(request,blog_id):
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; entry = models.Entry.objects.get(id=blog_id)&lt;/span&gt;
    entry = get_object_or_404(models.Entry,id=&lt;span&gt;blog_id)

    md &lt;/span&gt;= markdown.Markdown(extensions=&lt;span&gt;[
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;markdown.extensions.extra&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;markdown.extensions.codehilite&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;markdown.extensions.toc&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
    ])
    entry.body &lt;/span&gt;=&lt;span&gt; md.convert(entry.body)
    entry.toc &lt;/span&gt;=&lt;span&gt; md.toc
    entry.increase_visiting()

    comment_list &lt;/span&gt;=&lt;span&gt; list()

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_comment_list(comments):
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; comment &lt;span&gt;in&lt;/span&gt;&lt;span&gt; comments:
            comment_list.append(comment)
            children &lt;/span&gt;=&lt;span&gt; comment.child_comment.all()
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; len(children) &amp;gt;&lt;span&gt; 0:
                get_comment_list(children)

    top_comments &lt;/span&gt;= Comment.objects.filter(object_pk=blog_id, parent_comment=&lt;span&gt;None,
                                          content_type__app_label&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;blog&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;).order_by(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-submit_date&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

    get_comment_list(top_comments)
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; render(request, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;blog/detail.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, locals())
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）detail.html&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
                    {% get_comment_form for entry as form %}
                    {% get_comment_count for entry  as comment_count %}
                    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3 &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;评论总数： {{ comment_count }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;

              {#            评论表单#}
            {% if request.session.login or request.user.is_authenticated %}
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-horizontal&quot;&lt;/span&gt;&lt;span&gt; action&lt;/span&gt;&lt;span&gt;=&quot;{% comment_form_target %}&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                        {% csrf_token %}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;input_title&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;pull-left control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;评论标题：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;comment_title&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;input_title&quot;&lt;/span&gt;&lt;span&gt; placeholder&lt;/span&gt;&lt;span&gt;=&quot;请输入标题&quot;&lt;/span&gt;&lt;span&gt; required &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;input_comment&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;pull-left control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;评论内容:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;textarea &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;resize:none;&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; rows&lt;/span&gt;&lt;span&gt;=6 &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;comment&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;input_comment&quot;&lt;/span&gt;&lt;span&gt; placeholder&lt;/span&gt;&lt;span&gt;=&quot;在此输入评论&quot;&lt;/span&gt;&lt;span&gt; required&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;textarea&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;display: none;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ form.honeypot }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                        {{ form.content_type }}
                        {{ form.object_pk }}
                        {{ form.timestamp }}
                        {{ form.security_hash }}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;hidden&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;next&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;{% url 'blog:blog_detail' entry.id %}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input  &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;parent_id&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;hidden&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;-1&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input  &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;level&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;hidden&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;0&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group col-sm-7&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pull-left&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin-left: 68px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;reset&quot;&lt;/span&gt;&lt;span&gt;  class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;glyphicon glyphicon-repeat&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;重置&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;pull-right&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin-right: 12px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-success&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;id_submit&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;glyphicon glyphicon-send&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;评论&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            {% else %}
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登陆后才可以评论&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            {% endif %}
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;


{#            评论显示区#}
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            {% for comment in comment_list %}
                &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;single_comment&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin-left: {{ comment.level }}em&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                        {% if comment.user_img %}
                            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;{{ comment.user_img }}&quot;&lt;/span&gt;&lt;span&gt; alt&lt;/span&gt;&lt;span&gt;=&quot;user_image&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
                        {% else %}
                            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;{% static 'blog/images/cl.jpg' %}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;
                        {% endif %}
                    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-11 comment-content&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin-bottom: 10px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ comment.comment_title }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {% if comment.parent_comment %}
                                        {{ comment.user_name }}{{ request.user }}
                                        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;i &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;glyphicon glyphicon-share-alt&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                                        {{ comment.parent_comment.user_name }}{{ request.user }}
                            {% else %}
                                    By&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;
                                        {{ comment.user_name }}{{ request.user }}
                                    &lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;On&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;
                            {% endif %}
                            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ comment.submit_date }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;em&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {% if request.session.login or request.user.is_authenticated %}
                            &lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;回复&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                            {% endif %}
                        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{ comment.comment }}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            {% endfor %}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）static/blog/images/cl.jpg&lt;/p&gt;
&lt;p&gt; 设置默认图片（如果没有登录就显示默认图片，为了测试评论）&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180522002013584-1189078216.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; （4）blog/blog_comment.css&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;hr &lt;/span&gt;{&lt;span&gt;
    border-top&lt;/span&gt;:&lt;span&gt; 1px solid lightgrey&lt;/span&gt;;&lt;span&gt;
    border-bottom&lt;/span&gt;:&lt;span&gt; 1px solid #fff&lt;/span&gt;;
}&lt;span&gt;

.single_comment &lt;/span&gt;{&lt;span&gt;
    margin-bottom&lt;/span&gt;:&lt;span&gt; 20px&lt;/span&gt;;&lt;span&gt;
    font-family&lt;/span&gt;:&lt;span&gt; &quot;Microsoft Yahei&quot;,&quot;微软雅黑&quot;,Arial,Helvetica,STHeiti,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;&lt;/span&gt;;
}&lt;span&gt;

.single_comment img &lt;/span&gt;{&lt;span&gt;
    width&lt;/span&gt;:&lt;span&gt;50px&lt;/span&gt;;&lt;span&gt;
    height&lt;/span&gt;:&lt;span&gt;50px&lt;/span&gt;;&lt;span&gt;
    border-radius&lt;/span&gt;:&lt;span&gt;50%&lt;/span&gt;;&lt;span&gt;
    overflow&lt;/span&gt;:&lt;span&gt;hidden&lt;/span&gt;;&lt;span&gt;
    float&lt;/span&gt;:&lt;span&gt; left&lt;/span&gt;;&lt;span&gt;
    margin-left&lt;/span&gt;:&lt;span&gt; 10px&lt;/span&gt;;&lt;span&gt;
    margin-top&lt;/span&gt;:&lt;span&gt; 5px&lt;/span&gt;;
}&lt;span&gt;

.single_comment p &lt;/span&gt;{&lt;span&gt;
    margin-bottom&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;
}&lt;span&gt;

.comment-content &lt;/span&gt;{&lt;span&gt;
    border-bottom&lt;/span&gt;:&lt;span&gt; 1px dashed lightgrey&lt;/span&gt;;&lt;span&gt;
    border-left&lt;/span&gt;:&lt;span&gt; 1px dashed #2d7da4&lt;/span&gt;;&lt;span&gt;
    padding-bottom&lt;/span&gt;:&lt;span&gt; 5px&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;detail.html引用&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{% block css %}
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;{% static 'blog/css/github.css' %}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;{% static 'blog/css/blog_comment.css' %}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
{% endblock %}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180522002153873-1822529320.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.4.评论回复&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）blog/urls.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  url(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^reply/(?P&amp;lt;comment_id&amp;gt;\d+)/$&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, views.reply, name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;comment_reply&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt; django_comments &lt;span&gt;import&lt;/span&gt;&lt;span&gt; models as comment_models

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; reply(request, comment_id):
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; request.session.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;login&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, None) &lt;span&gt;and&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; request.user.is_authenticated():
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; redirect(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    parent_comment &lt;/span&gt;= get_object_or_404(comment_models.Comment, id=&lt;span&gt;comment_id)
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; render(request, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;blog/reply.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, locals())
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）blog/reply.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
{% extends &lt;span&gt;'&lt;/span&gt;&lt;span&gt;blog/base.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; %&lt;span&gt;}
{&lt;/span&gt;% load comments %&lt;span&gt;}
{&lt;/span&gt;% load static %&lt;span&gt;}
{&lt;/span&gt;% block title %}回复评论{% endblock %&lt;span&gt;}
{&lt;/span&gt;% block css %&lt;span&gt;}

    &lt;/span&gt;&amp;lt;link rel=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stylesheet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% static 'blog/css/blog_comment.css' %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span&gt;
{&lt;/span&gt;% endblock %&lt;span&gt;}

{&lt;/span&gt;% block content %&lt;span&gt;}
    &lt;/span&gt;&amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;container-fluid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin: 30px 50px 0 50px;min-height: 450px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
        &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;single_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                &amp;lt;div&amp;gt;&lt;span&gt;
                    {&lt;/span&gt;% &lt;span&gt;if&lt;/span&gt; request.session.login %&lt;span&gt;}
                    &lt;/span&gt;&amp;lt;img src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{{ parent_comment.user_img }}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; alt=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user_img&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&lt;span&gt;
                    {&lt;/span&gt;% &lt;span&gt;else&lt;/span&gt; %&lt;span&gt;}
                    &lt;/span&gt;&amp;lt;img src=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% static 'blog/images/cl.jpg' %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; alt=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin_img&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&lt;span&gt;
                    {&lt;/span&gt;% endif %&lt;span&gt;}
                &lt;/span&gt;&amp;lt;/div&amp;gt;
            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;col-md-11&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                &amp;lt;strong&amp;gt;{{ parent_comment.comment_title }}&amp;lt;/strong&amp;gt;
                &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;small&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;strong&amp;gt;{{ parent_comment.username }} {{ request.user }}&amp;lt;/strong&amp;gt;
                    &amp;lt;em&amp;gt;{{ parent_comment.submit_date }}&amp;lt;/em&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;br /&amp;gt;
                &amp;lt;p&amp;gt;{{ parent_comment.comment }}&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;

            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
            &amp;lt;br /&amp;gt;&lt;span&gt;
        {&lt;/span&gt;% &lt;span&gt;if&lt;/span&gt; request.session.login &lt;span&gt;or&lt;/span&gt; request.user.is_authenticated %&lt;span&gt;}
            &lt;/span&gt;&amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;row&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-left: 30px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;h3&amp;gt;回复&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;{{ parent_comment.username }}{{ request.user }}&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;的评论：&amp;lt;/h3&amp;gt;&lt;span&gt;
            {&lt;/span&gt;% get_comment_form &lt;span&gt;for&lt;/span&gt; parent_comment.content_object as form %&lt;span&gt;}
                    &lt;/span&gt;&amp;lt;form &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-horizontal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; action=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% comment_form_target %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; method=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span&gt;
                        {&lt;/span&gt;% csrf_token %&lt;span&gt;}
                        &lt;/span&gt;&amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left control-label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;评论标题：&amp;lt;/label&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;col-sm-6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;input &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;comment_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_title&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入标题&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; required /&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left control-label&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;评论内容:&amp;lt;/label&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;col-sm-6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;textarea style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;resize:none;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-control&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; rows=6 name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;input_comment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; placeholder=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;在此输入评论&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; required&amp;gt;&amp;lt;/textarea&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;span style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;display: none;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;{{ form.honeypot }}&amp;lt;/span&amp;gt;&lt;span&gt;
                        {{ form.content_type }}
                        {{ form.object_pk }}
                        {{ form.timestamp }}
                        {{ form.security_hash }}

                        &lt;/span&gt;&amp;lt;input type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;next&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% url 'blog:blog_detail' parent_comment.content_object.id %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
                        &amp;lt;input  name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;parent_id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{{ parent_comment.id }}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
                        &amp;lt;input  name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;level&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{{ parent_comment.level }}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;

                        &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;form-group col-sm-7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-left&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-left: 68px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;reset&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-default&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;glyphicon glyphicon-repeat&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;重置&amp;lt;/button&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pull-right&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;margin-right: 12px;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                                &amp;lt;button type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;btn btn-success&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; id=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id_submit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;span &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;glyphicon glyphicon-send&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;评论&amp;lt;/button&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;


                    &amp;lt;/form&amp;gt;
                &amp;lt;/div&amp;gt;&lt;span&gt;
        {&lt;/span&gt;% &lt;span&gt;else&lt;/span&gt; %&lt;span&gt;}
            &lt;/span&gt;&amp;lt;h3&amp;gt;登陆后才可以评论&amp;lt;/h3&amp;gt;&lt;span&gt;
        {&lt;/span&gt;% endif %&lt;span&gt;}
        &lt;/span&gt;&amp;lt;br /&amp;gt;

    &amp;lt;div&amp;gt;
        &amp;lt;a href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% url 'blog:blog_detail' parent_comment.content_object.id %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;暂时不评论，返回先前页面!&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;/div&amp;gt;&lt;span&gt;
{&lt;/span&gt;% endblock %}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（4）detail.html&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;a href=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{% url 'blog:comment_reply' comment.id %}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;回复&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;测试回复功能如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201805/1299879-20180522012635602-295737196.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 21 May 2018 17:35:00 +0000</pubDate>
<dc:creator>zhang_derek</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/derek1184405959/p/9069472.html</dc:identifier>
</item>
<item>
<title>Spring MVC温故而知新 – 请求映射RequestMapping - 仍是少年</title>
<link>http://www.cnblogs.com/ashleyboy/p/9070158.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ashleyboy/p/9070158.html</guid>
<description>&lt;h2&gt;RequestMapping注解说明&lt;/h2&gt;
&lt;p&gt;@RequestMapping注解的作用将Web请求映射到特定处理程序类和/或处理程序方法，这个注解可以用于类或者方法上，并通过属性value指定请求路径。用在Controller类上表示提供初步的URL请求映射信息，相对于Web应用的根目录，这是一个前置请求路径。用在Controller中方法上，表示提供详细的URL映射。如果Controller类上没有加RequestMapping注解，则方法上注解标记的URL则是相对于Web应用的根目录。&lt;/p&gt;
&lt;p&gt;@RequestMapping注解提供以下几个属性：&lt;/p&gt;
&lt;p&gt;         name：用于指定映射器名称&lt;/p&gt;
&lt;p&gt;         value：用于指定映射路径，同path&lt;/p&gt;
&lt;p&gt;         path：用于指定映射路径，同value&lt;/p&gt;
&lt;p&gt;         method:用于指定请求类型：GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE&lt;/p&gt;
&lt;p&gt;         params：指定请求的参数&lt;/p&gt;
&lt;p&gt;         headers：指定请求头部，源码示例：RequestMapping(value = &quot;/something&quot;, headers = &quot;content-type=text/*&quot;)&lt;/p&gt;
&lt;p&gt;         consumes：指定处理请求提交的内容类型（Content-Type），例如application/json, text/html，只有在Content-Type匹配这些媒体类型之一时才会映射请求&lt;/p&gt;
&lt;p&gt;         produces：指定请求返回的内容类型 例如：produces = &quot;application/json; charset=UTF-8&quot;&lt;/p&gt;
&lt;h2&gt;通过value属性指定映射路径&lt;/h2&gt;
&lt;h3&gt;Controller类上使用RequestMapping注解&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(&lt;/span&gt;&quot;order&quot;&lt;span&gt;)  
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderInfoController {    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;示例1&lt;/span&gt;
    @RequestMapping(&quot;orderinfo&quot;&lt;span&gt;)   
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView OrderInfo1() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;OrderInfo&quot;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在OrderController类上添加了注解RequestMapping(&quot;order&quot;)，表示所有对的请求必须是以“根目录/order” 开始&lt;/p&gt;
&lt;p&gt;示例1的请求路径为：http://localhost:8080/springMvcNext/order/orderinfo&lt;/p&gt;
&lt;p&gt;示例1 如果注释掉Controller上的@RequestMapping(&quot;order&quot;)，则对应的请求路径为：http://localhost:8080/springMvcNext /orderinfo&lt;/p&gt;
&lt;h3&gt;Controller方法上使用RequestMapping注解&lt;/h3&gt;
&lt;p&gt; 1.&lt;strong&gt;常用基础用法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(&lt;/span&gt;&quot;order&quot;&lt;span&gt;)  
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderInfoController {
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;示例1&lt;/span&gt;
    @RequestMapping(&quot;orderinfo&quot;&lt;span&gt;)   
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView OrderInfo1() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;OrderInfo&quot;&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;示例2 ：处理多个url映射&lt;/span&gt;
    @RequestMapping({&quot;info&quot;,&quot;index&quot;})  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;或者@RequestMapping(value={&quot;info&quot;,&quot;index&quot;})&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView OrderInfo2() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;,&quot;message&quot;, &quot;OrderInfo2&quot;&lt;span&gt;);
    }                              
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;示例3&lt;/span&gt;
&lt;span&gt;    @RequestMapping
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView OrderInfo3() {    
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;,&quot;message&quot;, &quot;OrderInfo3&quot;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;RequestMapping只配置value属性，不显示配置其他属性的情况下，value省略,直接填写URL映射信息即可,指定其他属性的情况下value属性必须明确填写&lt;/p&gt;
&lt;p&gt;上例示例1的访问路径为： http://localhost:8080/springMvcNext/order/orderinfo&lt;/p&gt;
&lt;p&gt;示例2：RequestMapping接口中value属性是一个数组，所有也支持传一个数组 示例2的访问路径：http://localhost:8080/springMvcNext/order/index  或者 http://localhost:8080/springMvcNext/order/info&lt;/p&gt;
&lt;p&gt;示例3：当value为空时，表示该方法为类下默认的Action,示例3的访问路径为：http://localhost:8080/springMvcNext/order&lt;/p&gt;
&lt;p&gt; 2.&lt;strong&gt;URL模板映射&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;在RequestMapping注解中声明URI变量,并通过&lt;code&gt;@PathVariable&lt;/code&gt;&lt;code&gt;注解的方式&lt;/code&gt;访从实际请求URL中获取值，示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderInfoController {
     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 示例10  带占位符的URL&lt;/span&gt;
     @RequestMapping(value = &quot;user/{userId}/order/{orderNumber}&quot;, method =&lt;span&gt; RequestMethod.GET)
     &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ModelAndView OrderInfo4(@PathVariable &lt;span&gt;int&lt;/span&gt;&lt;span&gt; userId,@PathVariable String orderNumber) {
           &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;userid:&quot;+userId+&quot; orderNumber:&quot;+&lt;span&gt;orderNumber);
     }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 示例10请求URL:  http://localhost:8080/springMvcNext/user/12/order/333 当通过此URL发起请求时，SpringMVC将通过@PathVariable可以提取URL模板中的{×××}中的×××变量, URL变量会自动转换为对应的类型，无法转换的则返回错误，比如尝试用以下url访问：http://localhost:8080/springMvcNext/user/xxx/order/333  其中参数Userid=xxx，则发生错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522012723977-1883030071.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.Ant风格的URL路径映射&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; Ant风格通配符如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;? &lt;/code&gt; 匹配一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;    匹配路径段中的零个或多个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**&lt;/code&gt;  匹配零个或多个路径段&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt; 示例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderInfoController {
       &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 示例11  带占位符的URL&lt;/span&gt;
       @RequestMapping(value = &quot;order*&quot;, method =&lt;span&gt; RequestMethod.GET)
&lt;/span&gt;&lt;span&gt;       //&lt;/span&gt;&lt;span&gt;@RequestMapping(value = &quot;order?&quot;, method = RequestMethod.GET)
&lt;/span&gt;&lt;span&gt;       //&lt;/span&gt;&lt;span&gt;@RequestMapping(value = &quot;order/**&quot;, method = RequestMethod.GET)&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView OrderInfo5(String orderNumber) {
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;OrderInfo5&quot;&lt;span&gt;);
        }&lt;br/&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例11请求URL:  http://localhost:8080/springMvcNext/order/orderdexx?orderNumber=12 可以匹配http://localhost:8080/springMvcNext/order/orderXXXXX?orderNumber=yyyy的所有请求&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; @RequestMapping(value = &quot;order?&quot;, method = RequestMethod.&lt;strong&gt;&lt;em&gt;GET&lt;/em&gt;&lt;/strong&gt;)可以匹配诸如 “…/ordera?orderNumber….” “…/orders?orderNumber….”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; @RequestMapping(value = &quot;order/**&quot;, method = RequestMethod.&lt;strong&gt;&lt;em&gt;GET&lt;/em&gt;&lt;/strong&gt;)可以匹配诸如 “…/order/aaa?orderNumber….” “…/order/bbb/ccc?orderNumber….”&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;另外 RequestMapping还支持正则表达式风格的URL路径映射，此处略过&lt;/p&gt;
&lt;h2&gt;通过method属性指定请求类型&lt;/h2&gt;
&lt;p&gt;RequestMapping提供的method属性请求谓词的类型，如下示例示例只接受GET请求&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    //&lt;/span&gt;&lt;span&gt; 示例4&lt;/span&gt;
    @RequestMapping(value=&quot;detail&quot;,method=RequestMethod.GET) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;也可直接使用 @GetMapping(&quot;detail&quot;)&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Info() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;Info&quot;&lt;span&gt;);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于每种请求类型，SpringMVC还提供了专用的注解：&lt;/p&gt;
&lt;p&gt;@GetMapping&lt;/p&gt;
&lt;p&gt;@PostMapping&lt;/p&gt;
&lt;p&gt;@PutMapping&lt;/p&gt;
&lt;p&gt;@DeleteMapping&lt;/p&gt;
&lt;p&gt;@PatchMapping&lt;/p&gt;
&lt;h2&gt;通过params指定参数名或参数值约束&lt;/h2&gt;
&lt;p&gt;params属性可以限定请求参数包含特定的参数，也可限定参数值的约束，如下代码所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    //&lt;/span&gt;&lt;span&gt; 示例5 params 限定参数包含orderNumber&lt;/span&gt;
    @RequestMapping(value = &quot;detail2&quot;, params = &quot;orderNumber&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Detail2(String orderNumber) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;&lt;span&gt;, orderNumber);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 示例6 params 限定参数值&lt;/span&gt;
    @RequestMapping(value = &quot;detail3&quot;, params = &quot;orderNumber!=1222&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Detail3(String orderNumber) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;&lt;span&gt;, orderNumber);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例5限定请求参数必须包含参数orderNumber,如果不包含名为orderNumber的参数，则拒绝访问:访问路径：http://localhost:8080/springMvcNext/order/detail2?orderNumber=12&lt;/p&gt;
&lt;p&gt;示例6限定请求参数必须包含参数orderNumber并且参数值不能为1222 访问路径：http://localhost:8080/springMvcNext/order/detail3?orderNumber=1222 时报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522001838382-1402735262.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;通过headers指定参数名或参数值约束&lt;/h2&gt;
&lt;p&gt; RequestMapping提供的method属性可以指定请求头类型，只有请求数据头部类型符合指定的值时，才能正常访问&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;        //&lt;/span&gt;&lt;span&gt; 示例7 params 限定参数值&lt;/span&gt;
        @RequestMapping(value = &quot;headtest&quot;,headers = &quot;apikey=23131313&quot;&lt;span&gt;) 
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;@RequestMapping(value = &quot;headtest&quot;,headers= {&quot;Accept=application/json&quot;}) &lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Header() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;, &quot;Header&quot;&lt;span&gt;);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例7限定请求头必须包含apikey:23131313才可以正常返回，直接访问，返回错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522001936849-1053946780.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加添加header信息apikey:23131313访问成功：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522001954248-1827386325.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;通过consumes指定请求提交的内容类型（Content-Type）&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    //&lt;/span&gt;&lt;span&gt; 示例8 consumes &lt;/span&gt;
    @RequestMapping(value = &quot;consumes&quot;, method = RequestMethod.POST, consumes = &quot;application/json&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Consumes(String orderNumber) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;&lt;span&gt;, orderNumber);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例限定请求参数类型为application/json，表示该方法只处理请求Content-Type为application/json的请求：&lt;/p&gt;
&lt;p&gt;下面通过抛postman测试：&lt;/p&gt;
&lt;p&gt;设置请求参数格式为application/json，可以正常访问：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522002033198-1878732272.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;设置参数格式为x-form-urlencoded，返回错误，Http Status 415&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522002057471-452911745.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;通过produces指定返回的内容类型（Content-Type）&lt;/h2&gt;
&lt;p&gt; produces属性用于设定返回内容类型，并且满足以下条件：接受请求header中包含Accept的值与produces设定的值相同，或者接受的请求使用不显示设置accept值&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;        //&lt;/span&gt;&lt;span&gt; 示例8 produces 限定返回数据application/json&lt;/span&gt;
        @RequestMapping(value = &quot;produces&quot;, method = RequestMethod.GET, produces = &quot;application/json&quot;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView Produces(String orderNumber) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;order/info&quot;, &quot;message&quot;&lt;span&gt;, orderNumber);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例8 表示返回内容格式application/json ，当客户端设置的accept格式为text/json时，运行报错,Http status 406&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522002159811-152616530.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当客户端设置的accept格式为application/json或者不设置accept值时，可以正常运行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/577318/201805/577318-20180522002212556-156080086.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 21 May 2018 17:32:00 +0000</pubDate>
<dc:creator>仍是少年</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ashleyboy/p/9070158.html</dc:identifier>
</item>
<item>
<title>简说设计模式——享元模式 - JAdam</title>
<link>http://www.cnblogs.com/adamjwh/p/9070107.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/adamjwh/p/9070107.html</guid>
<description>&lt;h2&gt;一、什么是享元模式&lt;/h2&gt;
&lt;p&gt;　　说到享元模式，第一个想到的应该就是池技术了，String常量池、数据库连接池、缓冲池等等都是享元模式的应用，所以说享元模式是池技术的重要实现方式。&lt;/p&gt;
&lt;p&gt;　　比如我们每次创建字符串对象时，都需要创建一个新的字符串对象的话，内存开销会很大，所以如果第一次创建了字符串对象“adam“，下次再创建相同的字符串”adam“时，只是把它的引用指向”adam“，这样就实现了”adam“字符串再内存中的共享。&lt;/p&gt;
&lt;p&gt;　　举个最简单的例子，网络联机下棋的时候，一台服务器连接了多个客户端（玩家），如果我们每个棋子都要创建对象，那一盘棋可能就有上百个对象产生，玩家多点的话，因为内存空间有限，一台服务器就难以支持了，所以这里要使用享元模式，将棋子对象减少到几个实例。下面给出享元模式的定义。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;享元模式（Flyweight）&lt;/strong&gt;，运用共享技术有效地支持大量细粒度的对象。UML结构图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180521224951802-1630441597.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　其中，Flyweight是抽象享元角色。它是产品的抽象类，同时定义出对象的外部状态和内部状态（外部状态及内部状态相关内容见后方）的接口或实现；ConcreteFlyweight是具体享元角色，是具体的产品类，实现抽象角色定义的业务；UnsharedConcreteFlyweight是不可共享的享元角色，一般不会出现在享元工厂中；FlyweightFactory是享元工厂，它用于构造一个池容器，同时提供从池中获得对象的方法。&lt;/p&gt;
&lt;h3&gt;　　1. Flyweight抽象类&lt;/h3&gt;
&lt;p&gt;　　所有具体享元类的超类或接口，通过这个接口，Flyweight可以接受并作用于外部状态。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Flyweight {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;内部状态&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String intrinsic;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;外部状态&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; String extrinsic;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;要求享元角色必须接受外部状态&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Flyweight(String extrinsic) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.extrinsic =&lt;span&gt; extrinsic;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义业务操作&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; operate(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getIntrinsic() {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; intrinsic;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setIntrinsic(String intrinsic) {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.intrinsic =&lt;span&gt; intrinsic;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　2. ConcreteFlyweight类&lt;/h3&gt;
&lt;p&gt;　　继承Flyweight超类或实现Flyweight接口，并为其内部状态增加存储空间。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConcreteFlyweight &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Flyweight {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;接受外部状态&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ConcreteFlyweight(String extrinsic) {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(extrinsic);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据外部状态进行逻辑处理&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; operate(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; extrinsic) {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         System.out.println(&quot;具体Flyweight:&quot; +&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　3. UnsharedConcreteFlyweight类&lt;/h3&gt;
&lt;p&gt;　　指那些不需要共享的Flyweight子类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UnsharedConcreteFlyweight &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Flyweight {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; UnsharedConcreteFlyweight(String extrinsic) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(extrinsic);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; operate(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; extrinsic) {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         System.out.println(&quot;不共享的具体Flyweight:&quot; +&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　4. FlyweightFactory类&lt;/h3&gt;
&lt;p&gt;　　一个享元工厂，用来创建并管理Flyweight对象，主要是用来确保合理地共享Flyweight，当用户请求一个Flyweight时，FlyweightFactory对象提供一个已创建的实例或创建一个实例。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FlyweightFactory {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义一个池容器&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; HashMap&amp;lt;String, Flyweight&amp;gt; pool = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;享元工厂&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Flyweight getFlyweight(String extrinsic) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         Flyweight flyweight = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(pool.containsKey(extrinsic)) {    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;池中有该对象&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             flyweight =&lt;span&gt; pool.get(extrinsic);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             System.out.print(&quot;已有 &quot; + extrinsic + &quot; 直接从池中取----&amp;gt;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据外部状态创建享元对象&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             flyweight = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcreteFlyweight(extrinsic);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;放入池中&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            pool.put(extrinsic, flyweight);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             System.out.print(&quot;创建 &quot; + extrinsic + &quot; 并从池中取出----&amp;gt;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; flyweight;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　5. Client客户端&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Client {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; extrinsic = 22&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         
&lt;span&gt; 6&lt;/span&gt;         Flyweight flyweightX = FlyweightFactory.getFlyweight(&quot;X&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         flyweightX.operate(++&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         
&lt;span&gt; 9&lt;/span&gt;         Flyweight flyweightY = FlyweightFactory.getFlyweight(&quot;Y&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         flyweightY.operate(++&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         
&lt;span&gt;12&lt;/span&gt;         Flyweight flyweightZ = FlyweightFactory.getFlyweight(&quot;Z&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         flyweightZ.operate(++&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         
&lt;span&gt;15&lt;/span&gt;         Flyweight flyweightReX = FlyweightFactory.getFlyweight(&quot;X&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         flyweightReX.operate(++&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         
&lt;span&gt;18&lt;/span&gt;         Flyweight unsharedFlyweight = &lt;span&gt;new&lt;/span&gt; UnsharedConcreteFlyweight(&quot;X&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         unsharedFlyweight.operate(++&lt;span&gt; extrinsic);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     
&lt;span&gt;22&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　运行结果如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180521232254245-1985727778.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　从这个结果我们可以看出来，第一次创建X、Y、Z时，都是先创建再从池中取出，而第二次创建X时，因为池中已经存在了，所以直接从池中取出，这就是享元模式。&lt;/p&gt;
&lt;h2&gt;二、内部状态和外部状态&lt;/h2&gt;
&lt;p&gt;　　上面享元模式的定义为我们提出了两个要求：细粒度和共享对象。我们知道分配太多的对象到应用程序中将有损程序的性能，同时还容易造成内存溢出，要避免这种情况，用到的就是共享技术，这里就需要提到内部状态和外部状态了。&lt;/p&gt;
&lt;p&gt;　　因为要求细粒度对象，所以不可避免地会使对象数量多且性质相近，此时我们就将这些对象的信息分为两个部分：内部状态和外部状态。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;内部状态&lt;/strong&gt;指对象共享出来的信息，存储在享元对象内部并且不会随环境的改变而改变；&lt;strong&gt;外部状态&lt;/strong&gt;指对象得以依赖的一个标记，是随环境改变而改变的、不可共享的状态。&lt;/p&gt;
&lt;p&gt;　　我们举一个最简单的例子，棋牌类游戏大家都有玩过吧，比如说说围棋和跳棋，它们都有大量的棋子对象，围棋和五子棋只有黑白两色，跳棋颜色略多一点，但也是不太变化的，所以棋子颜色就是棋子的内部状态；而各个棋子之间的差别就是位置的不同，我们落子嘛，落子颜色是定的，但位置是变化的，所以方位坐标就是棋子的外部状态。&lt;/p&gt;
&lt;p&gt;　　那么为什么这里要用享元模式呢？可以想象一下，上面提到的棋类游戏的例子，比如围棋，理论上有361个空位可以放棋子，常规情况下每盘棋都有可能有两三百个棋子对象产生，因为内存空间有限，一台服务器很难支持更多的玩家玩围棋游戏，如果用享元模式来处理棋子，那么棋子对象就可以减少到只有两个实例，这样就很好的解决了对象的开销问题。&lt;/p&gt;
&lt;h2&gt;三、享元模式的应用&lt;/h2&gt;
&lt;h3&gt;　　1. 何时使用&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;系统中有大量对象时&lt;/li&gt;
&lt;li&gt;这些对象消耗大量内存时&lt;/li&gt;
&lt;li&gt;这些对象的状态大部分可以外部化时&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;　　2. 方法&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;用唯一标识码判断，如果在内存中有，则返回这个唯一标识码所标识的对象，用HashMap/HashTable存储&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;　　3. 优点&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;大大减少了对象的创建，降低了程序内存的占用，提高效率&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;　　4. 缺点&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;提高了系统的复杂度。需要分离出内部状态和外部状态，而外部状态具有固化特性，不应该随着内部状态的改变而改变&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt; 　　5. 使用场景&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;系统中存在大量相似对象&lt;/li&gt;
&lt;li&gt;需要缓冲池的场景&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt; 　　6. 应用实例&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;String常量池&lt;/li&gt;
&lt;li&gt;数据库连接池&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt; 　　7. 注意事项&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;注意划分内部状态和外部状态，否则可能会引起线程安全问题&lt;/li&gt;
&lt;li&gt;这些类必须有一个工厂类加以控制&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt; 四、享元模式的实现&lt;/h2&gt;
&lt;p&gt;　　应用实例的话，其实上面的模板就已经是一个很好的例子了，类似于String常量池，没有的对象创建后存在池中，若池中存在该对象则直接从池中取出。&lt;/p&gt;
&lt;p&gt;　　为了更好的理解享元模式，这里再举一个实例，比如接了我一个小型的外包项目，是做一个产品展示网站，后来他的朋友们也希望做这样的网站，但要求都有些不同，我们当然不能直接复制粘贴再来一份，有任希望是新闻发布形式的，有人希望是博客形式的等等，而且因为经费原因不能每个网站租用一个空间。&lt;/p&gt;
&lt;p&gt;　　其实这里他们需要的网站结构相似度很高，而且都不是高访问量网站，如果分成多个虚拟空间来处理，相当于一个相同网站的实例对象很多，这是造成服务器的大量资源浪费。如果整合到一个网站中，共享其相关的代码和数据，那么对于硬盘、内存、CPU、数据库空间等服务器资源都可以达成共享，减少服务器资源；而对于代码，由于是一份实例，维护和扩展都更加容易。&lt;/p&gt;
&lt;p&gt;　　那么此时就可以用到享元模式了。UML图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180522004016402-474255157.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;　　1. 网站抽象类&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; WebSite {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; use();
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     
&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　2. 具体网站类&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ConcreteWebSite &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; WebSite {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; String name = &quot;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ConcreteWebSite(String name) {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; use() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         System.out.println(&quot;网站分类：&quot; +&lt;span&gt; name);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     
&lt;span&gt;14&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 　　3. 网络工厂类&lt;/h3&gt;
&lt;p&gt;　　这里使用HashMap来作为池，通过put和get方法实现加入池与从池中取的操作。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; WebSiteFactory {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; HashMap&amp;lt;String, ConcreteWebSite&amp;gt; pool = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获得网站分类&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; WebSite getWebSiteCategory(String key) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;pool.containsKey(key)) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             pool.put(key, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ConcreteWebSite(key));
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; (WebSite)pool.get(key);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获得网站分类总数&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getWebSiteCount() {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; pool.size();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     
&lt;span&gt;19&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 　　4. Client客户端&lt;/h3&gt;
&lt;p&gt;　　这里测试用例给了两种网站，原先我们需要做三个产品展示和三个博客的网站，也即需要六个网站类的实例，但其实它们本质上都是一样的代码，可以利用用户ID号的不同，来区分不同的用户，具体数据和模板可以不同，但代码核心和数据库却是共享的。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Client {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         WebSiteFactory factory = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WebSiteFactory();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         
&lt;span&gt; 6&lt;/span&gt;         WebSite fx = factory.getWebSiteCategory(&quot;产品展示&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        fx.use();
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         
&lt;span&gt; 9&lt;/span&gt;         WebSite fy = factory.getWebSiteCategory(&quot;产品展示&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        fy.use();
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         
&lt;span&gt;12&lt;/span&gt;         WebSite fz = factory.getWebSiteCategory(&quot;产品展示&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        fz.use();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         
&lt;span&gt;15&lt;/span&gt;         WebSite fa = factory.getWebSiteCategory(&quot;博客&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        fa.use();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         
&lt;span&gt;18&lt;/span&gt;         WebSite fb = factory.getWebSiteCategory(&quot;博客&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        fb.use();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         
&lt;span&gt;21&lt;/span&gt;         WebSite fc = factory.getWebSiteCategory(&quot;博客&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;        fc.use();
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         
&lt;span&gt;24&lt;/span&gt;         System.out.println(&quot;网站分类总数为：&quot; +&lt;span&gt; factory.getWebSiteCount());
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     
&lt;span&gt;27&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　运行结果如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180522001501696-717638011.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　可以看出，虽然我们做了6个网站，但网站分类只有2个。这样基本算是实现了享元模式的共享对象的目的，但想想上面提到的内部状态和外部状态，这里实际上没有体现对象间的不同，只体现了它们的共享部分。&lt;/p&gt;
&lt;h3&gt;　　5. 用户类&lt;/h3&gt;
&lt;p&gt;　　所以我们再加一个用户类，作为网站类的外部状态，并在use()方法中传递用户对象，UML如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180522003841006-5397830.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　下面添加一个User类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; User(String name) {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     
&lt;span&gt;13&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　然后再对use()方法进行修改，添加参数，以抽象类为例： &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; use(User user);&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;　　而客户端中只需对每一个网站添加一个用户即可，如： &lt;span class=&quot;cnblogs_code&quot;&gt;fx.use(&lt;span&gt;new&lt;/span&gt; User(&quot;adam&quot;));&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;　　（具体内容可参考源码，源码地址见最下方）&lt;/p&gt;
&lt;p&gt;　　运行结果如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1018770/201805/1018770-20180522002739415-743672215.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　这样就可以协调内部与外部状态，哪怕接手了上千个网站的需求，只要要求相同或类似，实际开发代码也就是分类的哪几种。&lt;/p&gt;

&lt;p&gt;　　源码地址：&lt;a href=&quot;https://gitee.com/adamjiangwh/GoF&quot; target=&quot;_blank&quot;&gt;https://gitee.com/adamjiangwh/GoF&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 21 May 2018 16:31:00 +0000</pubDate>
<dc:creator>JAdam</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/adamjwh/p/9070107.html</dc:identifier>
</item>
<item>
<title>完整打造一个多功能音乐播放器项目（初步设想跟酷狗类似） - 追~梦</title>
<link>http://www.cnblogs.com/dorseych/p/9070092.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dorseych/p/9070092.html</guid>
<description>&lt;p&gt;本人目前准备利用闲暇时间打造一个完整的音乐播放器项目，主要用于学习及分享！原创不易，转载请注明出处。&lt;/p&gt;
&lt;p&gt;这是一个什么样的音乐播放器呢？整体的架构跟酷狗差不多吧，我的方式呢，是一个个组件一个个模块先做好，最后组合成完整的项目，最后项目会放在本人的github上，等项目完毕后会发布链接。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;模块①、歌词同步：&lt;/span&gt;（为了方便测试，先用了h5集成好的audio标签，我们只做歌词功能），初步效果是这样：（另外直接在酷狗下载歌词文件就可以用了）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043914/201805/1043914-20180522001651488-42747976.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;       这个其实不难，不过呢，咱用点最笨的办法（关于解析字符串，不用正则匹配），酷狗都用过吧，里面的歌词文件是.krc文件，这种文件是加密过的，所以呢，从酷狗下载下来的歌词文件需要先转化成lrc文件，推荐下面的软件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043914/201805/1043914-20180522000509381-1492543346.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;krc文件点开是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043914/201805/1043914-20180522000619302-728653281.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;转化成lrc文件后是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043914/201805/1043914-20180522000657843-1679711107.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注意这时候lrc文件的字符编码不是utf-8，各位需要自行另存为utf-8文件，好了，歌词文件准备好了，可以开始我们的歌词模块了。&lt;/p&gt;
&lt;p&gt;css及js文件我全部放在html里，完善后会逐步封装，css会采用less代替。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;基于js的更高级常用函数封装&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;../js/jquery-3.3.1.min.js&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;../js/mine/dc-handle-function.js&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;        .preload&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;200px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;            position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;            top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;35%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;            left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;40%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;        .preload img&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;        .lyric&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;400px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;            margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0 auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;            overflow-y&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;            overflow-x&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;            font&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;18px &quot;华文楷体&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;            color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;black&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;            text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;            box-shadow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;-2px 2px 15px #fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;            background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;rgba(0,255,255,0.3)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;        .music&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;400px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;            margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0 auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;        .music audio&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;        body&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;            overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;scroll&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;            background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;url(&quot;../resource/bg.jpg&quot;) fixed no-repeat&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;cover&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;            dorseyHf.dc_ajax_g(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;../resource/av/ChiQingZhong1.lrc?t=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date().getTime(),
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;                     &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(str){
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个函数以后也是会封装的。&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt;                         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; str1&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;str.split(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;                         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; str2&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[];
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;                         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; lyric&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.lyric&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;str1.length;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;                            str2[i&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;str1[i].split(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(let i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;str2.length;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;                             &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).length&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;                                lyric.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;                            }
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;                            lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).eq(i).html(str2[i][&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;                            lyric.append(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;                        lyric.css(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;str3: &quot;00：00.09&quot;，即获取到歌词的前半部分[时间]；&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;                         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; str3&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[],str4&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[],str5&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[];
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;str2.length;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;                            str3[i&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;str2[i][&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;str4:  str4[i][0]=&quot;00&quot;;str4[i][1]=&quot;00.09&quot;&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;str5：计算str4转化后min:sec的值，单位(s)，用于后续与当前时间比较。&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;                         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;str3.length;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;                            str4[i]&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;str3[i].split(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;                            str5[i]&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;(parseFloat(str4[i][&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;])&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;parseFloat(str4[i][&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;                            console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).eq(i&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).offset().top);
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;                        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;timeupdate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; scale&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.currentTime;
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; k&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;[];
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;                                 &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;str5.length;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;                                     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(scale&lt;/span&gt;&lt;span&gt;&amp;gt;=&lt;/span&gt;&lt;span&gt;str5[i]){
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;                                        lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).eq(i&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).css(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;red&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).siblings().css(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;                                        lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).eq(i&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).css(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;transform&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;scale(1.4)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).siblings().css(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;transform&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;                                        k[i]&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;i;
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;                                      lyric.scrollTop(lyric.children('p').eq(i).offset().top);&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;                                    }
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;                                }
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; music&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;k.length;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;                            console.log(music&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;lyric.children(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).eq(music).offset().top);
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;                        });
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;            },$(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;img&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;        })
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;music&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;../resource/av/ChiQingZhong.mp3&quot;&lt;/span&gt;&lt;span&gt; controls&lt;/span&gt;&lt;span&gt;=&quot;controls&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;preload&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;../resource/preload.gif&quot;&lt;/span&gt;&lt;span&gt; alt&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lyric&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 这里引用了一些封装函数，需引入这个文件，jq的压缩版自行百度：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; ;(&lt;span&gt;function&lt;/span&gt;(win){ &lt;span&gt;//&lt;/span&gt;&lt;span&gt;前面这分号别去掉哦，防止多个js文件合并压缩时因上一个js文件末尾少&quot;;&quot;而带来的问题。&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &quot;use strict&quot;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;严格模式，一般写自己类库的时候最好加上，减少一些代码不规范引起的错误。&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;模块说明：dorseyHf作为一切处理函数的入口&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     let dorseyHf=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; dorseyHf.fn.init();
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     dorseyHf.fn=dorseyHf.prototype=&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         constructor:dorseyHf, &lt;span&gt;//&lt;/span&gt;&lt;span&gt;接口名：是dorsey-handle-function的缩写。意为函数处理&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         init:&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        },
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         math:{&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数学相关处理函数，注意需要通过接口dorseyHf来调用，如dorseyHf.math.random(100,200);&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             random:&lt;span&gt;function&lt;/span&gt;(min,max){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成一个指定范围大小的随机数，默认值小数点后15位&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; Math.random()*(max-min)+&lt;span&gt;min;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             randomAccuracy:&lt;span&gt;function&lt;/span&gt;(min,max,dec){ &lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成一个可以任意指定精度的随机数&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; Math.round((Math.random()*(max-min)+min)*Math.pow(10,dec))/Math.pow(10,dec);
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        },
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         dc_ajax_g:&lt;span&gt;function&lt;/span&gt;(url,fnSucceed,preObj,fnFail){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ajax获取操作&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;             * url：可以是后台接口，json数据，也可以是json文件位置
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;             * fnSucceed：ajax获取成功后的操作
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;             * preObj：预加载，ajax由于要与后台服务器做交互，这需要时间，特别是前后交互数据较大时，用于提醒用户
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;             *         现在在做加载，请稍后...一般是一个gif，或者干脆一个请稍后都行，注意的是基于JQuery的$(select)对象。
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;             * fnFail：ajax获取失败后返回的操作，一般类似于404这样的东西。
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;             * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;             preObj.css(&quot;display&quot;,&quot;block&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             setTimeout(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                 &lt;span&gt;var&lt;/span&gt; oAjax = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; XMLHttpRequest();
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 oAjax.open('GET',url,&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                oAjax.send();
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;                 oAjax.onreadystatechange=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt;(oAjax.readyState==4&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt;(oAjax.status==200&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;                             fnSucceed(oAjax.responseText);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取文本或者json数据&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;                             preObj.css(&quot;display&quot;,&quot;none&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;                         &lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;                             &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(fnFail){
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;                                fnFail(oAjax.status);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;                            }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;             },1500);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个延迟最好改为0，或者干脆把setTimeout去掉，这样加的原因是方便那些ajax获取过快的&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 用户可以查看到这个预加载的效果。&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;     dorseyHf=dorseyHf.fn.init.fn=&lt;span&gt;dorseyHf.fn;
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;     win.dorseyHf=&lt;span&gt;dorseyHf;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; })(window);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后续每个模块写好了会逐步更新，等项目最终完毕了会挂载到github，各位到时可自行下载。&lt;/p&gt;
</description>
<pubDate>Mon, 21 May 2018 16:21:00 +0000</pubDate>
<dc:creator>追~梦</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dorseych/p/9070092.html</dc:identifier>
</item>
<item>
<title>HP-UX 系统下编译 Ice-3.3.0 - 乞丐程序员</title>
<link>http://www.cnblogs.com/mzones/p/ice-3-3-0_install.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mzones/p/ice-3-3-0_install.html</guid>
<description>&lt;p&gt;&amp;#13;
                                    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;sr-only&quot;&gt;Close&lt;/span&gt;&lt;/button&gt;&amp;#13;
                                    &lt;h4 class=&quot;modal-title&quot;&gt;&amp;#13;
                                        请完成人机识别验证&amp;#13;
                                    &lt;/h4&gt;&amp;#13;
                                &lt;/p&gt;
                                &lt;div class=&quot;modal-body&quot; readability=&quot;33&quot;&gt;
                                    
                                    &lt;p&gt;&amp;#13;
                                        &lt;span id=&quot;geetestLoading&quot;&gt; 验证码组件加载中,请稍后...&lt;/span&gt;&amp;#13;
                                    &lt;/p&gt;
                                &lt;/div&gt;
                            </description>
<pubDate>Mon, 21 May 2018 16:05:00 +0000</pubDate>
<dc:creator>乞丐程序员</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://passport.cnblogs.com/user/signin?ReturnUrl=http%3A%2F%2Fwww.cnblogs.com%2Fmzones%2Fp%2Fice-3-3-0_install.html&amp;AspxAutoDetectCookieSupport=1</dc:identifier>
</item>
<item>
<title>JVM学习记录-垃圾收集器 - 纪莫</title>
<link>http://www.cnblogs.com/jimoer/p/9038648.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jimoer/p/9038648.html</guid>
<description>&lt;p&gt;先回顾一下上一篇介绍的JVM中常见几种垃圾收集算法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;标记-清除算法（Mark-Sweep）。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制算法（Copying）。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标记整理算法(Mark-Compact)。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分代收集算法（Generational Collecting）。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如果说收集算法是内存回收的方法论。那么垃圾收集器就是内存回收的具体实现。不同的厂商、不同的版本的虚拟机提供的垃圾收集器会有很大差别，目前讨论的收集器基于JDK1.7 Update 14之后的HotSpot虚拟机。这个虚拟机包含的所有垃圾收集器以及其作用范围如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180514235124109-1889291425.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;7种作用于不同分代的收集器，可以连线的两个说明可以搭配使用。不同的收集器作用于不同的分代，这是说明没有一个收集器能在任何场景下都完美适用，肯定都是有舍有得，通过了解和分析垃圾回收器是就是为了让我们选择出对具体应用最合适的收集器。&lt;/p&gt;

&lt;h2&gt;Serial收集器&lt;/h2&gt;
&lt;p&gt;Serial收集器是发展历史最悠久的收集器，在jdk1.3之前是新生代唯一的选择，它是一个单线程收集器，单线程并不代表在进行垃圾回收时会只用一个线程去进行垃圾回收，而重要的是在它进行垃圾收集时，必须暂停其他所有线程，直到收集结束。这就是传说中的“Stop The World”。&lt;/p&gt;
&lt;p&gt;运行示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180516001233549-1679494242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;虽然这个过程是一个用户不可见的执行过程，但是确实也给用户带来了不良体验，从Serial到G1目前都还没有办法彻底消除停顿时间。Serial收集器虽然有这个大弊端，但是对于限定单个CPU的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。对于运行在Client模式下的虚拟机来说Serial收集器是一个很好的选择。&lt;/p&gt;
&lt;h2&gt;ParNew收集器&lt;/h2&gt;
&lt;p&gt;ParNew收集器其实是Serial收集器的多线程版本，除了使用了多线程进行垃圾收集之外，其他的内容大致和Serial一样，例如：配置参数、收集算法、Stop The World对象分配规则、回收策略等。在实现上大部分代码也重合。而且ParNew收集器也是作用在新生代。&lt;/p&gt;
&lt;p&gt;运行示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180515225224035-1958600927.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ParNew收集器除了多线程收集之外，其他与Serial收集器相比并没有太多创新，但它趋势许多运行在Server模式下的虚拟机中首选的新生代收集器，其中有一个与性能无关但很重要的原因是除了Serial收集器外，目前只有它能与CMS收集器配合工作。&lt;/p&gt;
&lt;h2&gt;Parallel Scavenge收集器&lt;/h2&gt;
&lt;p&gt;Parallel Scavenge收集器也是一个新生代收集器，使用的复制算法，并且也是多线程并行收集器，功能上和ParNew收集器类似，但是两者个关注点是不同的，ParNew等收集器的关注点是尽可能的缩短用&lt;strong&gt;户线程的停止时间&lt;/strong&gt;，而Parallel Scavenge收集器的关注点是让JVM达到一个可控制的&lt;strong&gt;吞吐量&lt;/strong&gt;。所谓吞吐量就是：CPU运行用户代码的时间与CPU消耗时间的比值。即吞吐量 = 运行用户代码时间/(运行用户代码时间+垃圾收集时间)，运行用户代码时间99分钟，垃圾收集时间1分钟，那吞吐量就是99%。&lt;/p&gt;
&lt;p&gt;Parallel Scavenge收集器提供了两个参数用于精确控制吞吐量，分别是&lt;strong&gt;控制最大垃圾收集停顿时间-XX:MaxGCPauseMillis&lt;/strong&gt;参数以及直接设置吞吐量大小的&lt;strong&gt;-XX:GCTimeRatio&lt;/strong&gt;参数。&lt;/p&gt;
&lt;p&gt;MaxGCPauseMillis参数允许的值是一个大于0的毫秒数。&lt;/p&gt;
&lt;p&gt;GCTimeRatio参数的值应当是一个大于0且小于100的整数，即垃圾收集时间占总时间的比率，默认99，就是允许最大1%（1/(1+99)）的垃圾收集时间。&lt;/p&gt;
&lt;p&gt;运行示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180516001441924-1899320113.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Serial Old收集器&lt;/h2&gt;
&lt;p&gt;Serial Old收集器是运行在老年代的收集器，相当于Serial的老年代版本，也是单线程收集器。使用的“标记-整理”算法，主要也是Client模式下的虚拟机使用（单个CPU的环境），在Server模式下主要还有两大用途：一是在JDK1.5以及之前的版本中与Parallel Scavenge收集器搭配使用，二是作为CMS收集器的后备预案。&lt;/p&gt;
&lt;p&gt;Serial Old 收集器运行示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180516001412973-497357601.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Parallel Old收集器&lt;/h2&gt;
&lt;p&gt;Parallel Old收集器是Parallel Scavenge收集器的老年代版本，使用多线程和“标记-整理”算法。在JDK1.6中才开始提供，在此之前，新生代选择了Parallel Scavenge收集器，老年代只能选择Serial Old，因为Parallel Scavenge是多线程收集器，但是到了老年代只能用Serial Old收集器，这样相当于只能在新生代达到提高吞吐量的效果。直到老年代也提供了这种以提高吞吐量为主的收集器，新生代使用Parallel Scavenge收集器，老年代使用Parallel Old收集器就形成了以吞吐量优先的收集器组合。在注重吞吐量以及CPU资源敏感的场合，可以优先考虑这种场合。&lt;/p&gt;
&lt;p&gt;Parallel Old收集器运行示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180520103730165-1426928812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;CMS收集器&lt;/h2&gt;
&lt;p&gt;CMS(Concurrent Mark Sweep)收集器是一种以缩短回收停顿时间为目标，并且适用于老年代的收集器。&lt;/p&gt;
&lt;p&gt;它运作过程相对复杂一些，主要分为4个步骤：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;初始标记（CMS inital mark）&lt;/li&gt;
&lt;li&gt;并发标记  (CMS concurrent mark)&lt;/li&gt;
&lt;li&gt;重新标记  (CMS remark)&lt;/li&gt;
&lt;li&gt;并发清除  (CMS concurrent sweep)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;初始标记和重新标记是需要线程停顿的。初始标记仅仅只是标记一些GC Roots能直接关联到对象，并发标记是进行GC Roots Tracing(追踪)的过程，而重新标记是为了修正并发标记时因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录。&lt;/p&gt;
&lt;p&gt;运行过程示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180520170352885-1423329213.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;CMS收集器的优点从运行过程中就可以看出来，并发收集，低停顿。并发标记和并发清除可以和用户线程一起运行这样也是降低了用户应用程序的停顿时间。&lt;/p&gt;
&lt;p&gt;但是CMS收集器也还是远远没有达到完美的程度， 它有以下3个明显的缺点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMS收集器对CPU资源非常敏感&lt;/strong&gt;。在并发标记和并发清除时是和用户线程一起运行的，收集过程中肯定占用了用户程序的CPU资源。默认启动的回收线程数是（cpu数量+3）/4，当cpu数较少的时候，会分掉大部分的cpu去执行收集器线程，影响用户，降低吞吐量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMS收集器无法处理浮动垃圾&lt;/strong&gt;。在并发清除阶段，用户程序并没有停止，所以还会继续产生垃圾，而这部分垃圾只能等待着下一次收集时才能进行回收。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMS收集器会产生空间碎片&lt;/strong&gt;。因为CMS收集器是基于“标记-清除”算法实现的，所以在进行大量的垃圾回收时，会产生很多不连续的内存空间。这是使用“标记-清除”算法都会有的缺点。&lt;/p&gt;
&lt;h2&gt;G1收集器&lt;/h2&gt;
&lt;p&gt;G1（Garbage First）收集器是目前最新的收集器了，&lt;strong&gt;java9以及java10默认的垃圾收集器就是G1。&lt;/strong&gt;在JDK6u14中就有Early Access版本的G1收集器提供开发人员试用。到JDK 7u4才算是正是发布。G1是基于“标记-整理”算法来实现的，可以独立的维护新生代以及老年代两个部分。&lt;/p&gt;
&lt;p&gt;与其他的GC收集器相比，G1有如下特点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并行与并发&lt;/strong&gt;，G1充分利用多CPU资源来缩短停顿时间，即执行GC过程中用户程序扔可继续执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分代收集，&lt;/strong&gt;虽然G1可以不需要与其他收集器配合就可以独立管理整个GC堆，但分代感念在G1中依然保留，这样可以让G1采用不同的方式来处理新生代和老年代的对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;空间整合&lt;/strong&gt;，因为G1是基于“标记-整理”算法实现的，所以不会产生空间碎片，内存空间很好的整合起来了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可预测的停顿，&lt;/strong&gt;这个特点是相对CMS收集器的一个优势，G1可以让使用者明确指定在一个长度为M毫秒的时间片段内，消耗在牢记收集上的时间不得超过N秒。&lt;/p&gt;
&lt;p&gt;前面介绍的几个收集器，要么是作用在新生代，要么是作用在老年代，G1作用于整个堆，它将整个堆分为多个大小相等的独立区域（Region）,虽然仍保留了分代，但不再是物理隔离，都是一部分Region的集合。&lt;/p&gt;
&lt;p&gt;G1收集器运行过程大致分为以下几步：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;初始标记&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并发标记&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终标记&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;筛选回收&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;初始标记阶段&lt;/strong&gt;和CMS收集器类似，也是仅仅标记一下GC Roots能直接关联到的对象，并且修改TAMS（Next Top at Mark Start）的值，让下一阶段用户程序并发运行时可以在正确的Reginon中创建新对象。&lt;strong&gt;并发标记阶段&lt;/strong&gt;是对堆中对象进行可达性分析，找出存活对象，这个阶段可以与用户线程并发进行，而&lt;strong&gt;最终标记阶段&lt;/strong&gt;是为了修正在并发标记期间因为用户程序并发运行，而导致标记产生变动的那部分标记记录，这阶段需要用户线程停顿，但是可并发进行。在最后的&lt;strong&gt;筛选回收阶段&lt;/strong&gt;首先对各个Region的回收价值和成本进行排序，然后根据用户所期望的GC停顿时间来制定回收计划。&lt;/p&gt;
&lt;p&gt;运行过程示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180521225604661-1256528094.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;JDK目前有的这些收集器差不多都介绍完了，下面来看看各个版本的JDK默认的都是使用的什么垃圾收集器吧。&lt;/p&gt;
&lt;p&gt; 这段代码是打印出当前jdk中使用的是什么垃圾回收器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@org.junit.Test
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; myTestGC(){
        List&lt;/span&gt;&amp;lt;GarbageCollectorMXBean&amp;gt; list =&lt;span&gt;
                ManagementFactory.getGarbageCollectorMXBeans();
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(GarbageCollectorMXBean gb:list){
            System.out.println(&lt;/span&gt;&quot;垃圾回收器:&quot;+&lt;span&gt;gb.getName());
        }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我的的IDEA目前配置的jdk版本是jdk1.8.0_144,运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180521232551861-186078731.png&quot; alt=&quot;&quot; width=&quot;568&quot; height=&quot;175&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; PS Scavenge代表的是Parallel Scavenge收集器，PS MarkSweep 代表的是Parallel Old收集器&lt;/strong&gt;（一开不知道是表示的Parallel Old还跑到知乎上面去提问，结果还是自己找到的答案）这说明JDK8默认使用的是以吞吐量优先的这两个手机器组合。&lt;/p&gt;
&lt;p&gt;下面我把IDEA的JDK版本换成JDK9，运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180521233452167-544999654.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 这个就可以直接了当的看出来 了，JDK9默认的垃圾收集器是&lt;strong&gt;G1&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下面我把IDEA的JDK版本换成JDK10，运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180521234234305-1434898379.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 这说明JDK10默认的垃圾收集器也是&lt;strong&gt;G1。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面我把IDEA的JDK版本换成JDK1.7,运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/772743/201805/772743-20180521234839023-1077483828.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 这表示JDK1.7默认的垃圾收集器也是&lt;strong&gt;Parallel Scavenge和&lt;/strong&gt;Parallel Old。&lt;/p&gt;
&lt;p&gt;因为下载不到JDK1.6以及再之前的JDK了，所以就先看这几个版本的吧。如果找到了，后续再补上。&lt;/p&gt;

</description>
<pubDate>Mon, 21 May 2018 16:05:00 +0000</pubDate>
<dc:creator>纪莫</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jimoer/p/9038648.html</dc:identifier>
</item>
<item>
<title>五大经典算法之回溯法 - 大雄的学习人生</title>
<link>http://www.cnblogs.com/codernie/p/9070015.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/codernie/p/9070015.html</guid>
<description>&lt;h3 id=&quot;一基本概念&quot;&gt;一、基本概念&lt;/h3&gt;
&lt;p&gt;  回溯法，又称为试探法，按&lt;strong&gt;选优条件&lt;/strong&gt;向前不断搜索，以达到目标。但是当探索到某一步时，如果发现原先选择并不优或达不到目标，就会退回一步重新选择，这种达不到目的就退回再走的算法称为回溯法。&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;strong&gt;与穷举法的区别和联系：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;相同点：它们都是基于试探的。&lt;/p&gt;&lt;p&gt;区别：穷举法要将一个解的各个部分全部生成后，才检查是否满足条件，若不满足，则直接放弃该完整解，然后再尝试另一个可能的完整解，它并没有沿着一个可能的完整解的各个部分逐步回退生成解的过程。而对于回溯法，一个解的各个部分是逐步生成的，当发现当前生成的某部分不满足约束条件时，就放弃该步所做的工作，退到上一步进行新的尝试，而不是放弃整个解重来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;二基本思想&quot;&gt;二、基本思想&lt;/h3&gt;
&lt;p&gt;  对于可以使用回溯法来解决的问题，首先可以将其解空间可以看成一棵解空间树。在回溯法中，每次扩大当前部分解时，都面临一个可选的状态集合（所有的子树），每个树结点代表一个可能的部分解。&lt;/p&gt;&lt;p&gt;  回溯法对任一解的生成，一般都采用逐步扩大解的方式。每前进一步，都试图在当前部分解的基础上扩大该部分解。它在问题的状态空间树中，从开始结点（根结点）出发，以深度优先搜索整个状态空间。这个开始结点成为活结点，同时也成为当前的扩展结点。在当前扩展结点处，搜索向纵深方向移至一个新结点。这个新结点成为新的活结点，并成为当前扩展结点。如果在当前扩展结点处不能再向纵深方向移动，则当前扩展结点就成为死结点。此时，应往回移动（回溯）至最近的活结点处，并使这个活结点成为当前扩展结点。回溯法以这种工作方式递归地在状态空间中搜索，直到找到所要求的解或解空间中已无活结点时为止。&lt;/p&gt;
&lt;h3 id=&quot;三解题步骤思路&quot;&gt;三、解题步骤(思路)&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;针对给定的问题，定义问题的解空间；&lt;/li&gt;
&lt;li&gt;确定易于搜索的解空间结构；&lt;/li&gt;
&lt;li&gt;以深度优先方式搜索解空间，并且在搜索过程中用剪枝函数避免无效搜索。（这里的剪枝函数就是&lt;strong&gt;判断该结点是否满足问题题设，如果满足则向下搜索，不满足则在此剪枝&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;四算法框架&quot;&gt;四、算法框架&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 递归实现：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; 变量解释：&lt;/p&gt;&lt;p&gt;  x：存储试探解的数组&lt;/p&gt;&lt;p&gt;  n：解空间树的层数&lt;/p&gt;&lt;p&gt;  i：搜索目前所达到的层数&lt;/p&gt;&lt;p&gt;  start：子节点解空间的最小值&lt;/p&gt;&lt;p&gt;  end：子节点解空间的最大值&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int x[n];
void backtrack (int i) {
    if (i &amp;gt; n) {
       回溯结束； 
    } else {
        // 这里回溯子节点的解空间为start~end
       for (j = start; j &amp;lt;= end; j++) {
            // 满足条件，向下搜索
            if (j满足题设条件) {
                x[i] = j;
                backtrack(i+1);
            // 不满足条件，在此剪枝（即回溯）
            } else {
            }
       }
   }
}   &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt; &lt;strong&gt;2. 非递归实现：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt; 变量解释：&lt;/p&gt;&lt;p&gt;  x：存储试探解的数组&lt;/p&gt;&lt;p&gt;  n：解空间树的层数&lt;/p&gt;&lt;p&gt;  i：搜索目前所达到的层数&lt;/p&gt;&lt;p&gt;  start：子节点解空间的最小值&lt;/p&gt;&lt;p&gt;  end：子节点解空间的最大值&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void f_backtrack(int i) {
  //初始化解向量
  for (int j = 0; j &amp;lt; n; j++) {
    x[j] = 1;
  }
  while (i &amp;gt;= 1) {
    while (x[i] &amp;lt;= n) {
      if (place(i)) {
        if (i == n) {
          回溯结束；
          break;
        // 满足条件，向下搜索
        } else {
          i++;
          x[i] = 1;
        }
      // 不满足条件，在此剪枝（即回溯）
      } else {
        x[i]++;
      }
    }
    //遍历完子节点解空间后，向上剪枝（即回溯）
    x[i] = 1;
    i--;
    x[i]++;
  }
}  &lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;相比之下，递归设计方法比较简单，而非递归方法，也就是循环方法设计细节比较多，但如果掌握了其特点，对不同问题的适用性很强（即代码只需要很少的修改就可以应用到不同问题），加之其最大的优势：&lt;strong&gt;效率更高&lt;/strong&gt;（因为递归的实现是通过调用函数本身，函数调用的时候，每次调用时要做地址保存，参数传递等，这是通过一个递归工作栈实现的。具体是每次调用函数本身要保存的内容包括：局部变量、形参、调用函数地址、返回值。那么，如果递归调用N次，就要分配N&lt;em&gt;局部变量、N&lt;/em&gt;形参、N&lt;em&gt;调用函数地址、N&lt;/em&gt;返回值。这势必是影响效率的。）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;五经典实现&quot;&gt;五、经典实现&lt;/h3&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;strong&gt;经典问题：八皇后问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;  八皇后问题，是一个古老而著名的问题，是回溯算法的典型例题。该问题是十九世纪著名的数学家高斯1850年提出：&lt;/p&gt;&lt;p&gt;  在8X8格的国际象棋上摆放八个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上（斜率为1），问有多少种摆法。高斯认为有76种方案。1854年在柏林的象棋杂志上不同的作者发表了40种不同的解，后来有人用图论的方法解出92种结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;递归实现为以下代码中&lt;strong&gt;backtrack&lt;/strong&gt;方法&lt;/p&gt;&lt;p&gt;非递归实现为以下代码中&lt;strong&gt;f_backtrack&lt;/strong&gt;方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;
int n;
int *x;
int sum;
bool place(int k)
{
  for (int j = 1; j &amp;lt; k; j++)
    if (abs(x[k] - x[j]) == abs(k - j) || x[j] == x[k])
      return false;
  return true;
}

void output()
{
  sum++; //sum为所有的可行的解
  for (int m = 1; m &amp;lt;= n; m++)
  {
    cout &amp;lt;&amp;lt; &quot;&amp;lt;&quot; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; &quot;,&quot; &amp;lt;&amp;lt; x[m] &amp;lt;&amp;lt; &quot;&amp;gt;&quot;; //这一行用输出当递归到叶节点的时候，一个可行解
  }
  cout &amp;lt;&amp;lt; endl;
}

void f_backtrack(int i)
{
  for (int j = 0; j &amp;lt; n; j++)
  { //初始化解向量
    x[j] = 1;
  }
  while (i &amp;gt;= 1)
  {
    while (x[i] &amp;lt;= n)
    {
      if (place(i))
      { //得到可行解
        if (i == n)
        {
          output();
          break;
        } //得到最终可行解，退出
        else
        { //得到部分可行解，搜索下一行
          i++;
          x[i] = 1;
        }
      }
      else
      { //当前解不可行
        x[i]++;
      }
    }
    x[i] = 1;
    i--;
    x[i]++; //回溯
  }
}

void backtrack(int i)
{
  if (i &amp;gt; n)
  {
    output();
  }
  else
  {
    for (int j = 1; j &amp;lt;= n; j++)
    {
      x[i] = j;
      if (place(i))
      {
        backtrack(i + 1);
      }
      else
      {
      }
    }
  }
}

int main()
{
  n = 8;
  sum = 0;
  x = new int[n + 1];
  for (int i = 0; i &amp;lt;= n; i++)
    x[i] = 0;
  backtrack(1);
  cout &amp;lt;&amp;lt; &quot;方案共有&quot; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;
} &lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 21 May 2018 15:47:00 +0000</pubDate>
<dc:creator>大雄的学习人生</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/codernie/p/9070015.html</dc:identifier>
</item>
<item>
<title>安装scrapy出错Failed building wheel for Twisted - 纳米小子</title>
<link>http://www.cnblogs.com/1991-1025/p/9069927.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/1991-1025/p/9069927.html</guid>
<description>&lt;p&gt;&lt;span&gt;用&lt;/span&gt;64&lt;span&gt;位&lt;/span&gt;&lt;span&gt;windows10&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;CMD&lt;/span&gt;&lt;span&gt;命令安装&lt;/span&gt;&lt;span&gt;pip install scrapy&lt;/span&gt;&lt;span&gt;出错：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;  Running setup.py bdist_wheel for Twisted ... error&lt;/p&gt;
&lt;p&gt;  Failed building wheel for Twisted&lt;/p&gt;
&lt;p&gt;  Running setup.py clean for Twisted&lt;/p&gt;
&lt;p&gt;Failed to build Twisted&lt;/p&gt;
&lt;p&gt;Installing collected packages: pycparser, cffi, asn1crypto, cryptography, pyOpenSSL, Twisted, pyasn1, pyasn1-modules, service-identity, queuelib, scrapy&lt;/p&gt;
&lt;p&gt;  Running setup.py install for Twisted ... error&lt;/p&gt;
&lt;p&gt;Exception:&lt;/p&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\compat\__init__.py&quot;, line 73, in console_to_str&lt;/p&gt;
&lt;p&gt;    return s.decode(sys.__stdout__.encoding)&lt;/p&gt;
&lt;p&gt;UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb6 in position 30: invalid start byte&lt;/p&gt;

&lt;p&gt;During handling of the above exception, another exception occurred:&lt;/p&gt;

&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\basecommand.py&quot;, line 215, in main&lt;/p&gt;
&lt;p&gt;    status = self.run(options, args)&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\commands\install.py&quot;, line 342, in run&lt;/p&gt;
&lt;p&gt;    prefix=options.prefix_path,&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\req\req_set.py&quot;, line 784, in install&lt;/p&gt;
&lt;p&gt;    **kwargs&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\req\req_install.py&quot;, line 878, in install&lt;/p&gt;
&lt;p&gt;    spinner=spinner,&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\utils\__init__.py&quot;, line 676, in call_subprocess&lt;/p&gt;
&lt;p&gt;    line = console_to_str(proc.stdout.readline())&lt;/p&gt;
&lt;p&gt;  File &quot;e:\python\envs\py2scripy\lib\site-packages\pip\compat\__init__.py&quot;, line 75, in console_to_str&lt;/p&gt;
&lt;p&gt;    return s.decode('utf_8')&lt;/p&gt;
&lt;p&gt;UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb6 in position 30: invalid start byte&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/793673/201805/793673-20180521231028962-628619515.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;参考连接方法：&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/45830222/a-error-happened-while-pip-was-installing-scrapy&lt;/p&gt;
</description>
<pubDate>Mon, 21 May 2018 15:12:00 +0000</pubDate>
<dc:creator>纳米小子</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/1991-1025/p/9069927.html</dc:identifier>
</item>
</channel>
</rss>