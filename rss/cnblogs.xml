<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>java web需要好好掌握的一些东西 - 叫我菜牛好了</title>
<link>http://www.cnblogs.com/jumptop/p/8598314.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jumptop/p/8598314.html</guid>
<description>&lt;p&gt;这是一些需要好好的复习的东西 本来存了个文档  怕整丢了  就在这里保存一下&lt;/p&gt;

&lt;p&gt;java 基础 重点关注集合 如list hashmap等使用（有时间多看看hashmap的实现原理  问的比较多）&lt;/p&gt;&lt;p&gt;多线程方面  多线程的使用&lt;/p&gt;&lt;p&gt;JAVA核心技术（卷1）基础知识（卷2）高级特性    （下载下来看看）：http://download.csdn.net/download/javawebxy/6845997&lt;/p&gt;&lt;p&gt;框架方面：spring是必须看的  了解ioc和aop原理（面试会问的比较多）&lt;/p&gt;&lt;p&gt;spring mvc(找一些电子书看看)&lt;/p&gt;&lt;p&gt;数据库：mybatis hibernate两者选择一个了解&lt;/p&gt;&lt;p&gt;数据库原理：如 索引的实现（网上找资料了解一下）：https://www.cnblogs.com/tgycoder/p/5410057.html&lt;/p&gt;&lt;p&gt;数据结构算法基础：以实现为主&lt;/p&gt;&lt;p&gt;搜索引擎呀，tomcat容器的理解，消息通讯，JVM，多线程；    微服务  分布式相关技术       AJAX  JSON&lt;/p&gt;&lt;p&gt;http://leetcode.com&lt;/p&gt;&lt;p&gt;（茂昌学长公司）必须掌握部分！！&lt;/p&gt;&lt;p&gt;1.手写冒泡和二分（基本的）  然后其他基本的排序熟悉一下&lt;br/&gt;2.然后是  集合（集合是什么？）  假如我有十万个简单对象 存放在哪好？（多研究研究集合的特性）&lt;br/&gt;3.sql（建表、查数据、改类型、函数、查几张表的级联查询）  用心看这个&lt;br/&gt;4.设计模式（单例模式、工厂模式、抽象工厂、观察者模式）  ！！手写单例！！&lt;br/&gt;5.jsp是什么？？&lt;br/&gt;------------以上是实习工资3500分界线------------------（公司题不难 但是考很多知识点  差不多要两个小时)&lt;br/&gt;6.对对三大框架SSH了解的比较熟悉的话能够拿高一些的工资&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 15:36:00 +0000</pubDate>
<dc:creator>叫我菜牛好了</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jumptop/p/8598314.html</dc:identifier>
</item>
<item>
<title>java ssm框架实现分页功能 （oracle） - 筱月</title>
<link>http://www.cnblogs.com/ainyi/p/8598217.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ainyi/p/8598217.html</guid>
<description>&lt;h2&gt;java web 实现分页功能&lt;/h2&gt;
&lt;p&gt;使用框架：ssm&lt;/p&gt;
&lt;p&gt;数据库：oracle&lt;/p&gt;
&lt;p&gt;话说 oracle 的分页查询比 mysql 复杂多了，在这里简单谈一下：&lt;/p&gt;
&lt;p&gt;查询 前十条数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;&lt;span&gt;(
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;        &lt;span&gt;SELECT&lt;/span&gt; ROWNUM WN,RN.&lt;span&gt;*&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;&lt;span&gt; (
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;SELECT&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;                  id,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;                  title,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                   create_time &lt;span&gt;as&lt;/span&gt;&lt;span&gt; createTime,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;                  musictor,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;                  musictitle
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;              &lt;span&gt;FROM&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;                 krry_blog
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;              &lt;span&gt;ORDER&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; create_time &lt;span&gt;desc&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;         )RN
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    )WN
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;WHERE&lt;/span&gt; WN &lt;span&gt;&amp;lt;= 10&lt;/span&gt; &lt;span&gt;AND&lt;/span&gt; WN &amp;gt; 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法较为复杂，&lt;/p&gt;
&lt;p&gt;同样的结果，mysql 的语法是：用一个 LIMIT 就可以解决。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;SELECT&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    id,
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    title,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     create_time &lt;span&gt;as&lt;/span&gt;&lt;span&gt; createTime,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    musictor,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    musictitle
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;FROM&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    krry_blog
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;ORDER&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; create_time &lt;span&gt;desc&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; LIMIT &lt;span&gt;0&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;SSM 框架的搭建，就不多说了，以前的博客有详细介绍，这里就谈谈实现 java web 分页的功能。&lt;/p&gt;
&lt;p&gt;用到插件 js ：&lt;a href=&quot;https://files.cnblogs.com/files/ainyi/krry_page.js&quot; target=&quot;_blank&quot;&gt; krry_page.js&lt;/a&gt;，还有jQuery&lt;/p&gt;

&lt;h2&gt;mapper 持久层：&lt;/h2&gt;
&lt;p&gt;BlogMapper.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.mapper;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * Mapper：操作数据库
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; BlogMapper {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;     * 查询所有博客
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;     * com.krry.dao.admin 
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * 方法名：countBlogs
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry 
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; int
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@exception&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@since&lt;/span&gt;&lt;span&gt;  1.0.0
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs();
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     
&lt;span&gt;35&lt;/span&gt;     
&lt;span&gt;36&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;BlogMapper.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.krry.mapper.BlogMapper&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 分页查询所有的博客信息 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;findBlogs&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;java.util.HashMap&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;Params&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        SELECT * FROM(
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            SELECT ROWNUM WN,RN.* FROM (
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;                SELECT
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;                    id,
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;                    title,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;                    create_time as createTime,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                    musictor,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                    musictitle
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;                FROM
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;                    krry_blog
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;                ORDER BY create_time desc
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            )RN
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;        )WN
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         WHERE WN &lt;span&gt;&amp;amp;lt;&lt;/span&gt;= #{pageSize} AND WN &lt;span&gt;&amp;amp;gt;&lt;/span&gt;&lt;span&gt; #{pageNo}
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 查询博客数量 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;countBlogs&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;long&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;        SELECT
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;            count(*)
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;        FROM
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;            krry_blog
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     
&lt;span&gt;33&lt;/span&gt;     
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;service业务层：&lt;/h2&gt;
&lt;p&gt;接口类：IBlogService.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.service;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.annotations.Param;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Blog;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt; * service层：处理业务逻辑（impl里面实现）
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IBlogService {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;     * 分页查询所有博客
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     
&lt;span&gt;27&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs();
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     
&lt;span&gt;34&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;impl 实现类：BlogService.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.service.impl;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.mapper.BlogMapper;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.service.IBlogService;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * 实现service层接口
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BlogService &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; IBlogService{
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; BlogMapper blogMapper;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * 查询博客
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt;&lt;span&gt; findBlogs(Params params) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;查询博客信息&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blog =&lt;span&gt; blogMapper.findBlogs(params);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         
&lt;span&gt;33&lt;/span&gt;         
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; blog;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;     * 计算博客数量
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; countBlogs(){
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         
&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;long&lt;/span&gt; coutBlogs =&lt;span&gt; blogMapper.countBlogs();
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; coutBlogs;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     
&lt;span&gt;49&lt;/span&gt;     
&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;controller控制层：&lt;/h2&gt;
&lt;p&gt;KrryController.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.ResponseBody;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.entity.Params;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.krry.service.IBlogService;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt; * KrryController
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * controller层，作为请求转发
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; asusaad
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; @Controller  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;表示是多例模式，每个用户返回的web层是不一样的&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KrryController {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; IBlogService blogService;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     * 首页，并且分页查询
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     @RequestMapping(&quot;/index&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView index(Params params){
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         
&lt;span&gt;33&lt;/span&gt;         params.setPageNo(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         params.setPageSize(10); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;一开始只查询10条
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;调用业务层&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blogs =&lt;span&gt; blogService.findBlogs(params);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;查询博客数量&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;long&lt;/span&gt; coutBlogs =&lt;span&gt; blogService.countBlogs();
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         
&lt;span&gt;41&lt;/span&gt;         ModelAndView modelAndView = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ModelAndView();
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         modelAndView.addObject(&quot;blogs&quot;&lt;span&gt;, blogs);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         modelAndView.addObject(&quot;coutBlogs&quot;&lt;span&gt;, coutBlogs);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         modelAndView.setViewName(&quot;index&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     
&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;     * ajax请求 的 分页查询
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; params
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;     @RequestMapping(&quot;/loadData&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HashMap&amp;lt;String, Object&amp;gt;&lt;span&gt; loadData(Params params){
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;         
&lt;span&gt;58&lt;/span&gt;         HashMap&amp;lt;String, Object&amp;gt; map = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;String, Object&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         List&amp;lt;HashMap&amp;lt;String, Object&amp;gt;&amp;gt; blogs =&lt;span&gt; blogService.findBlogs(params);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         map.put(&quot;blogs&quot;&lt;span&gt;, blogs);
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         
&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; map;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;     
&lt;span&gt;65&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;这里要有两个实体类，作为数据库查询的注入 Blog，还有分页查询的两个参数 Params：&lt;/h3&gt;
&lt;h3&gt;设置data参数：pageNo（下一页）：就是当前页数 * 下一页要显示的数量&lt;br/&gt;  　　　　　　 pageSize（下一页）：已经查询出来的数量（pageNo） + 每页要显示的数量&lt;br/&gt;在数据库中是 WN &amp;lt;= pageSize and WN &amp;gt; pageNo 来查询分页数据&lt;/h3&gt;
&lt;p&gt;Blog.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * User
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Blog {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 主键&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String id;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;博客标题&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String title;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;音乐作者&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String musictor;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;音乐标题&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String musictitle;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建时间&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String createTime;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;      
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Blog(String id, String title, String musictor, String musictitle,
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            String createTime) {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.title =&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictor =&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictitle =&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createTime =&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getId() {
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(String id) {
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getTitle() {
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setTitle(String title) {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.title =&lt;span&gt; title;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getMusictor() {
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMusictor(String musictor) {
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictor =&lt;span&gt; musictor;
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; 
&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getMusictitle() {
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMusictitle(String musictitle) {
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.musictitle =&lt;span&gt; musictitle;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCreateTime() {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; 
&lt;span&gt;69&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateTime(String createTime) {
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createTime =&lt;span&gt; createTime;
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;      
&lt;span&gt;73&lt;/span&gt;      
&lt;span&gt;74&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Params.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.krry.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * 
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; * Params
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; krry
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0.0
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Params {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Integer pageSize = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Integer pageNo = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getPageNo() {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; pageNo;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPageNo(Integer pageNo) {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.pageNo =&lt;span&gt; pageNo;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getPageSize() {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPageSize(Integer pageSize) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.pageSize =&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;web 页面 index.jsp&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; import&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java.util.*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@taglib uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;String&lt;/span&gt;&lt;span&gt; path &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; request.getContextPath();
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;String&lt;/span&gt;&lt;span&gt; basePath &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; request.getScheme()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;://&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;request.getServerName()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;request.getServerPort()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;path&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;pageContext.setAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;basePath&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, basePath);
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE HTML&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;分页&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;        body&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;url(&quot;resource/images/78788.jpg&quot;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;cover&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;        .titless&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 34px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; black&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 16px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;        .ke_tabbox&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;556px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;900px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#f9f9f9&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;20px auto 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;6px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;            .ke_tabbox .sendMy&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;                    font-family&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; &quot;微软雅黑&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;                    font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 28px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;                    -webkit-text-fill-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;                    background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -webkit-gradient(linear,left top,left bottom,from(#FD8700),to(#FF00B1))&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;                    -webkit-background-clip&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; text&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;                    margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;8px auto 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 35px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;            .ke_tabbox .ke_table&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 26px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;            .ke_tabbox  th&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#ccc&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-weight&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;bold&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;            .ke_tabbox .ke_table td,th&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; hidden&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;white-space&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; nowrap&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-overflow&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ellipsis&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#666&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt;             &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;分页相关&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;            .tzPage&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 12px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 480px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;             
&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;            #tbody tr:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#eaeaea&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;            #tbody .t_mode&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;            #tbody .t_avbiaoq:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FF6857&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;transition&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;.4s&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;            #tbody .t_dele&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;padding-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt;     
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;            .tzPage a&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;text-decoration&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#7d7d7d&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#f2f2f2&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;            .tzPage a:hover&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#dd5862&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FFF&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;            .tzPage a,.tzPage span&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0em 0.5em&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;min-width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1em&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;            .tzPage .current&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#dd5862&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#FFF&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;            .tzPage .current.prev,.tzPage .current.next&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#fff&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;            .tm_psize_go&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;4px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;24px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;33px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;            #tm_pagego&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-radius&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;3px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;18px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px solid #e5e5e5&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 22px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;#999&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;            .sortdesc&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;            .sortasc&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;border-bottom&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px solid transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;5px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;            .red&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;red&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;    
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;            .green&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;green&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;             
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;            .hideAdd&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;                    text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;                    line-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;                    margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 16px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;none&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;            .hideAdd a&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;font-size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;28px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;-webkit-text-fill-color&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;transparent&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; -webkit-gradient(linear,left top,left bottom,from(#FD0051),to(#A22C93))&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;-webkit-background-clip&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; text&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt;   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;   
&lt;span&gt; 55&lt;/span&gt;   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt;       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ke_tabbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;titless&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;分页展示&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ke_table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:25%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:25%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;音乐人&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:30%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;音乐标题&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;width:20%&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;发布时间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;             
&lt;span&gt; 68&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;tbody&quot;&lt;/span&gt;&lt;span&gt; data-itemcount&lt;/span&gt;&lt;span&gt;=&quot;${coutBlogs}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt;=&quot;blog&quot;&lt;/span&gt;&lt;span&gt; items&lt;/span&gt;&lt;span&gt;=&quot;${blogs}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.TITLE}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.TITLE}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.MUSICTOR}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.MUSICTOR}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;t_avbiaoq&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;${blog.MUSICTITLE}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.MUSICTITLE}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${blog.CREATETIME}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 75&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;krryPage&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;${basePath}/resource/js/jquery-1.11.3.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;${basePath}/resource/js/krry_page.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; basePath &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${basePath}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt;         
&lt;span&gt; 86&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; krryAdminBlog &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;            initPage:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(itemCount){
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;                $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#krryPage&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).tzPage(itemCount, {
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;                    num_display_entries : &lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;主体页数&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;                    num_edge_entries : &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;边缘页数&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;                    current_page : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指明选中页码&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;                    items_per_page : &lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;每页显示多少条&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;                    prev_text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;上一页&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;                    next_text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;下一页&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;                    showGo:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;                    showSelect:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;                    callback : &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(pageNo, psize) {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;会回传两个参数，第一个是当前页数，第二个是每页要显示的数量&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;                        krryAdminBlog.loadData(pageNo,psize);
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;                });
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置data参数：pageNo（下一页）：就是当前页数 * 下一页要显示的数量&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;            pageSize（下一页）：已经查询出来的数量（pageNo）  + 每页要显示的数量&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;在数据库中是  WN &amp;lt;= pageSize and WN &amp;gt; pageNo 来查询分页数据&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt; &lt;span&gt;            loadData:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(pageNo,pageSize){
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;                pageNo &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; pageNo &lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt; pageSize;
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;                pageSize &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; pageNo &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;                $.ajax({
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;                    type:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;                    url:basePath&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/loadData&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;                    data:{pageNo:pageNo,pageSize:pageSize},
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;                    success:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(data){
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;                             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; blogArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; data.blogs;
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;                             &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,len&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;blogArr.length;i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; len;i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;                                 &lt;span&gt;var&lt;/span&gt;&lt;span&gt; json &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; blogArr[i];
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;                                html&lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;119&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.TITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.TITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;120&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.NAME&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTOR&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;121&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&amp;lt;a class='t_avbiaoq' title='&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.MUSICTITLE&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;122&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;    &amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;json.CREATETIME&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt;                                 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; &lt;span&gt;                            }
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; &lt;span&gt;                            $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#tbody&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;                });
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;         
&lt;span&gt;132&lt;/span&gt; &lt;span&gt;        krryAdminBlog.initPage($(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#tbody&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).data(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;itemcount&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;         
&lt;span&gt;134&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt;   &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;分页效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1344447/201803/1344447-20180318231658521-9669559.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 链接地址：&lt;a href=&quot;https://www.ainyi.com/krry_pages&quot; target=&quot;_blank&quot;&gt;https://www.ainyi.com/krry_pages&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 18 Mar 2018 15:15:00 +0000</pubDate>
<dc:creator>筱月</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ainyi/p/8598217.html</dc:identifier>
</item>
<item>
<title>三方面搞定http协议之“状态码” - 张小楠233</title>
<link>http://www.cnblogs.com/zhangnan35/p/8598186.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhangnan35/p/8598186.html</guid>
<description>&lt;p&gt;      当我们向服务器请求数据的时候，服务器会给我们一个反馈，告诉我们对待我们的请求，服务器处理得怎么样了，而这个反馈，是通过数字来传达的，这个数字就叫状态码。&lt;/p&gt;
&lt;p&gt;　　状态码分为以下几种：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1xx：指示信息--表示请求已接收，继续处理。&lt;/li&gt;
&lt;li&gt;2xx：成功--表示请求已被成功接收、理解、接受。&lt;/li&gt;
&lt;li&gt;3xx：重定向--要完成请求必须进行更进一步的操作。&lt;/li&gt;
&lt;li&gt;4xx：客户端错误--请求有语法错误或请求无法实现。&lt;/li&gt;
&lt;li&gt;5xx：服务器端错误--服务器未能实现合法的请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　常见状态代码、状态描述的说明如下。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;200 OK：客户端请求成功。&lt;/li&gt;
&lt;li&gt;400 Bad Request：客户端请求有语法错误，不能被服务器所理解。&lt;/li&gt;
&lt;li&gt;401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用。&lt;/li&gt;
&lt;li&gt;403 Forbidden：服务器收到请求，但是拒绝提供服务。&lt;/li&gt;
&lt;li&gt;404 Not Found：请求资源不存在，举个例子：输入了错误的URL。&lt;/li&gt;
&lt;li&gt;500 Internal Server Error：服务器发生不可预期的错误。&lt;/li&gt;
&lt;li&gt;503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常。&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Sun, 18 Mar 2018 15:09:00 +0000</pubDate>
<dc:creator>张小楠233</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhangnan35/p/8598186.html</dc:identifier>
</item>
<item>
<title>软件需求工程 - 15021640035高金芳</title>
<link>http://www.cnblogs.com/gaojinfang/p/8598181.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gaojinfang/p/8598181.html</guid>
<description>&lt;p&gt;1.需求的定义：软件需求是指用户对目标软件系统在功能、性能、行为、设计约束等方面的约束。&lt;/p&gt;
&lt;p&gt;2.优秀需求的特性：（1）完整性（2）正确性（3）无歧义性（4）可行性（5）有优先级（6）必要性（7）可验证性&lt;/p&gt;
&lt;p&gt;3.需求定义的要素：目标、范围、相关人员与用户、相关事实与假定。&lt;/p&gt;
&lt;p&gt;4.软件需求的层次：业务需求、用户需求、功能需求。&lt;/p&gt;
&lt;p&gt;（1）业务需求：业务需求代表了需求链最高的抽象，它为软件系统定义了项目视图和范围，反映了企业、组织对软件系统的高层次目标要求。&lt;/p&gt;
&lt;p&gt;（2）用户需求：用户需求是指描述的是用户使用软件需要完成什么任务。怎么完成的需求。&lt;/p&gt;
&lt;p&gt;（3）功能需求：功能需求需要对用户需求进行分析、提炼、整理，因为用户需求具有零散、存在矛盾的特点。&lt;/p&gt;
&lt;p&gt;5.软件需求的分类：功能需求、非功能需求和设计约束&lt;/p&gt;
&lt;p&gt;（1）功能需求：功能需求定义了开发人员必须实现的软件功能，使得用户能完成他们的任务，从而满足业务需求&lt;/p&gt;
&lt;p&gt;（2）非功能需求：作为功能需求补充的非功能需求，他描述了系统展现给用户的行为和执行的操作。&lt;/p&gt;
&lt;p&gt;（3）设计约束：所谓设计约束是指开发人员在软件产品设计和构造上的限制，产品必须遵从的标准、规范和合约&lt;/p&gt;
&lt;p&gt;7.需求管理就是一种获取、组织保持一致的过程。&lt;/p&gt;
&lt;p&gt;8.需求工程是提供一种适当的机制，以了解用户想要什么、分析需求、评估可行性、协商合理的解决方案、无歧义地规约解决方案、&lt;/p&gt;
&lt;p&gt;确认规约以及在开发过程中管理这些被确认的需求。&lt;/p&gt;
&lt;p&gt;9.需求分析活动不再仅限于软件开发的最初阶段，他贯穿于系统开发的整个生命周期&lt;/p&gt;
&lt;p&gt;10需求工程是一个闭环&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 15:07:00 +0000</pubDate>
<dc:creator>15021640035高金芳</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gaojinfang/p/8598181.html</dc:identifier>
</item>
<item>
<title>浅谈强化学习的方法及学习路线 - Angel_Kitty</title>
<link>http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</guid>
<description>&lt;div readability=&quot;181.33137398971&quot;&gt;
&lt;p&gt;目前，对于全球科学家而言，“如何去学习一种新技能”成为了一个最基本的研究问题。为什么要解决这个问题的初衷是显而易见的，如果我们理解了这个问题，那么我们可以使人类做一些我们以前可能没有想到的事。或者，我们可以训练去做更多的“人类”工作，常遭一个真正的人工智能时代。&lt;/p&gt;
&lt;p&gt;虽然，对于上述问题，我们目前还没有一个完整的答案去解释，但是有一些事情是可以理解的。先不考虑技能的学习，我们首先需要与环境进行交互。无论我们是学习驾驶汽车还是婴儿学习走路，学习都是基于和环境的相互交互。从互动中学习是所有智力发展和学习理论的基础概念。&lt;/p&gt;

&lt;p&gt;今天，我们将探讨强化学习，这是一种基于环境相互交互的学习算法。有些人认为，强化学习是实现强人工智能的真正希望。这种说法也是正确的，因为强化学习所拥有的潜力确实是巨大的。&lt;/p&gt;
&lt;p&gt;目前，有关强化学习的研究正在快速增长，人们为不同的应用程序生成各种各样的学习算法。因此，熟悉强化学习的技术就变得尤其重要了。如果你还不是很熟悉强化学习，那么我建议你可以去看看我以前有关强化学习文章和一些开源的强化学习平台。&lt;/p&gt;
&lt;p&gt;一旦你已经掌握和理解了强化学习的基础知识，那么请继续阅读这篇文章。读完本文之后，你会对强化学习有一个透彻的了解，并且会进行实际代码实现。&lt;/p&gt;
&lt;p&gt;注：在代码实现部分，我们假设你已经有了Python的基本知识。如果你还不知道Python，那么你应该先看看&lt;a href=&quot;https://link.jianshu.com/?t=https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;这篇教程&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;1. 确定一个强化学习问题&lt;/h2&gt;
&lt;p&gt;强化学习是学习如何去做，如何根据与环境的交互采取相应的行动。最终的结果就是使得系统的回报信号数值最大化。学习者不会被告知去执行哪个行动，而是要他自己去发现哪种行动将产生最大的回报。让我们通过一个简单的例子来解释一下：&lt;/p&gt;
&lt;p&gt;我们将一个正在学习走路的孩子作为一个例子。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;1280&quot; data-width=&quot;1920&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-bed60c27d7e8179a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;324389&quot; data-original-format=&quot;image/jpeg&quot; data-original-height=&quot;1280&quot; data-original-width=&quot;1920&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-bed60c27d7e8179a.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;以下是孩子在学习走路时所要采取的步骤：&lt;/p&gt;
&lt;p&gt;1.孩子会观察的第一件事，就是注意你是如何走路的。你使用两条腿，一次走一步，一步一步往前走。孩子会抓住这个概念，然后试图去模仿你。&lt;/p&gt;
&lt;p&gt;2.但很快他/她又会明白，在走路之前，孩子必须先站起来！在学习走路的时候，这对于孩子来说是一个挑战。因此，孩子试图自己站起来，他/她不断跌倒，但是任然不断地站起来。&lt;/p&gt;
&lt;p&gt;3.然而还有另外一个挑战需要应付。站起来是相对容易的，但是要保持站立状态就是另一个挑战了。在一个狭小的空气中，找到支撑，孩子设法保持站立。&lt;/p&gt;
&lt;p&gt;4.现在，孩子的真正任务就是开始学习走路了。但是学习走路说起来很容易，而实际做起来就不是那么容易了。在孩子的大脑中需要处理很多事情，比如平衡身体，决定哪个脚是下一次需要放下的，放在哪里。&lt;/p&gt;
&lt;p&gt;这听起来像是一个很困难的任务，对吗？它实际上确实是一个挑战，先要学习站立，然后才能学习行走。但是，现在我们不都学会了走路嘛，再也不会被这个问题所困扰了。现在，你可以明白，为什么这对于孩子是多么困难的原因了。&lt;/p&gt;
&lt;p&gt;让我们形式化上面的例子。例子所要陈述的问题是“走路问题”，其中孩子是一个试图通过采取行动（走路）来操纵环境（在地上走路）的智能体，他/她试图从一个状态（即，他/她走的每一步）转移到另一个状态。当他/她完成任务的一个子模块（即，孩子走了几步）时，孩子会获得奖励（比如，一些巧克力），但是当他/她不会走路时，他/她不会收到任何巧克力（这是一个负反馈过程）。这就是像话学习问题的简单描述。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;175&quot; data-width=&quot;434&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-4362ef3c4906a5fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/434&quot; alt=&quot;&quot; data-original-filesize=&quot;7761&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;175&quot; data-original-width=&quot;434&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-4362ef3c4906a5fe.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;175&quot; data-width=&quot;434&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-197d562de91483bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/434&quot; alt=&quot;&quot; data-original-filesize=&quot;21048&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;175&quot; data-original-width=&quot;434&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-197d562de91483bd.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;这是一个有关强化学习很好的&lt;a href=&quot;https://link.jianshu.com/?t=https://youtu.be/m2weFARriE8&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;介绍视频&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;2. 与其他机器学习方法的比较&lt;/h2&gt;
&lt;p&gt;强化学习属于更打雷的机器学习算法。以下是有关机器学习算法类型的描述。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;597&quot; data-width=&quot;939&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-51d057cc9af03a50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;35760&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;597&quot; data-original-width=&quot;939&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-51d057cc9af03a50.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;让我们比较一下强化学习算法和别的类型算法之间的区别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;监督学习与强化学习&lt;/strong&gt;：在监督学习中，在外部有一个“监督主管”，它拥有所有环境的知识，并且与智能体一起共享这个知识，从而帮助智能体完成任务。但是这样存在一些问题，因为在一个任务中，其中存在如此多的子任务之间的组合，智能体应该执行并且实现目标。所以，创建一个“监督主管”几乎是不切实际的。例如，在象棋游戏中，存在数万个可以移动的玩法。因此，去创建一个可以获胜的玩法知识库是一个单调乏味的任务。在这些问题中，从自己的经验中学习，并且获得知识是更加合理可行的。这就是强化学习和监督学习的主要区别。在监督学习和强化学习中，在输入和输出之间都存在映射。但是在强化学习中，存在的是对智能体的奖励反馈函数，而不是像监督学习直接告诉智能体最终的答案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无监督学习与强化学习&lt;/strong&gt;：在强化学习中，有一个从输入到输出的映射过程，但是这个过程在无监督学习中是不存在的。在无监督学习中，主要任务是找到一个最基础的模式，而不是一种映射关系。例如，如果任务是向用户推荐新闻文章，则无监督学习算法是先查看该人以前读过的类似文章，并把它们推荐给其他人。而强化学习算法则是，通过用户的一些文章，并且获得用户的不断反馈，从而构建一个“知识图谱”，从而得知用户与文章之间的喜爱关系。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;还有第四种类型的机器学习，成为半监督学习，其本质上是监督学习和无监督学习的组合。它不同于强化学习，类似于监督学习和半监督学习具有直接的参照答案，而强化学习不具有。&lt;/p&gt;
&lt;h2&gt;3.解决强化学习问题的框架&lt;/h2&gt;
&lt;p&gt;为了理解如何去解决一个强化学习问题，让我们通过一个经典的例子来说明一下强化学习问题——多臂赌博机。首先，我们需要了解探索与开发的基本问题，然后去定义解决强化学习问题的框架。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;750&quot; data-width=&quot;1123&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-41978be8c6834a60.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;124778&quot; data-original-format=&quot;image/jpeg&quot; data-original-height=&quot;750&quot; data-original-width=&quot;1123&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-41978be8c6834a60.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;Tiger Machine如上图，假设你已经在Tiger Machine上面玩了很多次了。&lt;/p&gt;
&lt;p&gt;现在你想做的是从Tiger Machine上面获得最大的回报，并且尽可能的快。你会怎么做呢？&lt;/p&gt;
&lt;p&gt;一个比较天真的想法是，只选择一个Tiger Machine，然后一整天都在玩它。这听起来非常无聊，但Tiger Machine可能会给你一些“报酬”，即让你赢钱。使用这种方法，你可能中奖的概率大约是0.00000.....1。也就是说，大多数时间你可能知识坐在Tiger Machine面前亏钱。正式说明一下，这可以被定义为一种纯粹的开发方法。但是这是最佳选择吗？答案当然是否定的。&lt;/p&gt;
&lt;p&gt;让我们看看另外一种方法。我们可以拉每个Tiger Machine的拉杆，并且向上帝祈祷，让我们至少打中一个。当然，这是另一种天真的想法，你只会一天都在拉动拉杆，但只是给你一点点报酬。正式说明一下，这种方法只是一种纯粹的探索方法。&lt;/p&gt;
&lt;p&gt;这两种方法都不是最优的，我们必须在它们之间找到适当的平衡点，已获得最大的回报。这被称为强化学习的探索和开发困境。&lt;/p&gt;
&lt;p&gt;首先，我们正式的定义解决强化学习问题的框架，然后列出可能的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;马尔科夫决策过程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在强化学习场景中，我们定义问题的数学框架被称之为马尔科夫决策过程。这可以被设计为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;状态集合：S&lt;/li&gt;
&lt;li&gt;动作集合：A&lt;/li&gt;
&lt;li&gt;奖励函数：R&lt;/li&gt;
&lt;li&gt;策略：π&lt;/li&gt;
&lt;li&gt;价值：V&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们必须采取一定的行动（A），让我们从开始状态移动到结束状态（S）。每当我们采取一个行动之后，我们都会得到一定的回报作为奖励。当然，所获得的奖励的性质（正面奖励还是负面奖励）是由我们的行动决定的。&lt;/p&gt;
&lt;p&gt;我们的策略集合（π）是由我们的动作集合来确定的，而我们得到的回报确定了我们的价值（V）。在这里，我们的任务就是通过选择正确的策略来最大化我们的价值。所以我们必须最大化下面的方程：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;54&quot; data-width=&quot;137&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-103d4e4788d356c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/137&quot; alt=&quot;&quot; data-original-filesize=&quot;2856&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;54&quot; data-original-width=&quot;137&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-103d4e4788d356c6.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;对于时间t，所有可能的S。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;旅行推销员问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;让我们通过另外一个例子来说明一下。&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;435&quot; data-width=&quot;830&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-22319143c159960c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700&quot; alt=&quot;&quot; data-original-filesize=&quot;62069&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;435&quot; data-original-width=&quot;830&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-22319143c159960c.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;这个问题是一系列旅行商（TSP）问题的代表。任务是以尽可能低的成本，完成从地点A到地点F。两个字母之间的每条边上的数字表示两地之间的距离花费。如果这个值是负数，那么表示经过这条路，你会得到一定的报酬。我们定义价值是当你用选择的策略走完整个路程时，所获得的总价值。&lt;/p&gt;
&lt;p&gt;这里说明一下符号：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;状态节点集合：{A,B,C,D,E,F}&lt;/li&gt;
&lt;li&gt;动作集合是从一个地点到另一个地点：{A-&amp;gt;B, C-&amp;gt;D, etc}&lt;/li&gt;
&lt;li&gt;奖励函数是边上的值&lt;/li&gt;
&lt;li&gt;策略函数指的是完整的路径规划，比如: {A -&amp;gt; C -&amp;gt; F}&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;现在假设你在地点A，唯一你能看见的路就是你下一个目的地（也就是说，你只能看见B，D，C，E），而别的地点你是不知道的。&lt;/p&gt;
&lt;p&gt;你可以采取贪心算法，去获取当前状态下最有利的步骤，也就是说你从{A -&amp;gt; (B,C,D,E)}中选择采取 {A-&amp;gt;D} 这种方法。同样，现在你所在的地点是D，想要到达地点F。你可以从{D -&amp;gt; (B, C, F)} 中采取 {D -&amp;gt; F} 这个方法，可以让你得到最大的报酬。因此，我们采取这一条路。&lt;/p&gt;
&lt;p&gt;至此，我们的策略就是采取{A -&amp;gt; D -&amp;gt; F}，我们获得的回报是-120。&lt;/p&gt;
&lt;p&gt;恭喜！你刚刚就实现了强化学习算法。这种算法被称之为 epsilon 贪婪算法。这是一种逐步测试从而解决问题的贪婪算法。现在，如果见你（推销员）想再次从地点A到地点F，你总是会选择这一条路了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他旅游方式？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你能猜出我们的策略是属于哪个类别（纯粹的探索还是纯粹的开发）吗？&lt;br/&gt;请注意，我们采取的策略并不是一个最佳策略。我们必须“探索”一点，然后去寻找最佳的策略。在这里，我们采取的方法是局域策略的而学习，我们的任务是在所有可能的策略中找到最佳的策略。有很多的方法都可以解决这个问题，在这里，我们简要的列出一些主要类别：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;策略优先：我们的重点是找到最佳的策略&lt;/li&gt;
&lt;li&gt;回报优先：我们的重点是找到最佳的回报价值，即累计奖励&lt;/li&gt;
&lt;li&gt;行动优先：我们的重点是在每个步骤上采取最佳行动&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在以后的文章中，我会深入讨论强化学习算法。到那时，你可以参考这篇关于强化学习算法调研的&lt;a href=&quot;https://link.jianshu.com/?t=https://www.jair.org/media/301/live-301-1562-jair.pdf&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;论文&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;4.强化学习的实现&lt;/h2&gt;
&lt;p&gt;接下来，我们将使用深度Q学习算法。Q学习是一种基于策略的学习算法，它具有和神经网络近似的函数表示。这个算法被Google使用，并且打败了Atari游戏。&lt;/p&gt;
&lt;p&gt;让我们看看Q学习的伪代码：&lt;/p&gt;
&lt;p&gt;1.初始化价值表 ‘Q(s, a)’.&lt;br/&gt;2.观察当前的状态值 ‘s’.&lt;br/&gt;3.基于动作选择一个策略（例如，epsilon贪婪）作为该状态选择的动作.&lt;br/&gt;4.根据这个动作，观察回报价值 ’r’ 和下一个新的状态 &lt;code&gt;s&lt;/code&gt;.&lt;br/&gt;5.使用观察到的奖励和可能的下一个状态所获得的最大奖励来更新状态的值。根据上述公式和参数进行更新。&lt;br/&gt;6.将状态设置为新的状态，并且重复上述过程，直到达到最终状态。&lt;/p&gt;
&lt;p&gt;Q学习的简单描述可以总结如下：&lt;/p&gt;
&lt;div class=&quot;image-package&quot;&gt;
&lt;div class=&quot;image-container&quot;&gt;

&lt;div class=&quot;image-view&quot; data-height=&quot;527&quot; data-width=&quot;479&quot;&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1155267-da4dc2982467cee0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/479&quot; alt=&quot;&quot; data-original-filesize=&quot;73469&quot; data-original-format=&quot;image/png&quot; data-original-height=&quot;527&quot; data-original-width=&quot;479&quot; data-original-src=&quot;//upload-images.jianshu.io/upload_images/1155267-da4dc2982467cee0.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;我们首先来了解一下 Cartpole 问题，然后继续编写我们的解决方案。&lt;/p&gt;
&lt;p&gt;当我还是一个孩子的时候，我记得我会选择一根木棍，并试图用一只手指去使它保持平衡。我和我的朋友过去有这样一个比赛，看谁能让木棍保持平衡的时间更多，谁就能得到一块巧克力作为奖励。&lt;/p&gt;
&lt;p&gt;这里有一个&lt;a href=&quot;https://link.jianshu.com/?t=https://youtu.be/XiigTGKZfks&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;简单的视频&lt;/a&gt;来描述一个真正的 Cart-Pole 系统。&lt;/p&gt;
&lt;p&gt;让我们开始编写代码吧！&lt;/p&gt;
&lt;p&gt;在开始编写之前，我们需要先安装几个软件。&lt;/p&gt;
&lt;p&gt;步骤一：安装 keras-rl包&lt;/p&gt;
&lt;p&gt;在终端中，你可以运行以下命令：&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;我们假设你已经安装好了pip，那么你只需要使用以下命令进行安装：&lt;/p&gt;&lt;p&gt;接下来，我们配置和编译我们的智能体。我们将策略设置为 Epsilon 贪婪，我们还将我们的存储空间设置为序列存储，因为我们要需要存储我们执行操作的结果和每一个操作所获得的奖励。&lt;/p&gt;&lt;div readability=&quot;47&quot;&gt;
&lt;pre&gt;
policy =&lt;span&gt; EpsGreedyQPolicy() 
memory &lt;/span&gt;= SequentialMemory(limit=50000, window_length=1&lt;span&gt;) 
dqn &lt;/span&gt;= DQNAgent(model=model, nb_actions=nb_actions, memory=memory, nb_steps_warmup=10, target_model_update=1e-2, policy=&lt;span&gt;policy) 
dqn.compile(Adam(lr&lt;/span&gt;=1e-3), metrics=[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;mae&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]) 
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Okay, now it's time to learn something! We visualize the training here for show, but this slows down training quite a lot. &lt;/span&gt;
dqn.fit(env, nb_steps=5000, visualize=True, verbose=2) 
&lt;/pre&gt;&lt;/div&gt;</description>
<pubDate>Sun, 18 Mar 2018 14:32:00 +0000</pubDate>
<dc:creator>Angel_Kitty</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ECJTUACM-873284962/p/8597995.html</dc:identifier>
</item>
<item>
<title>数据结构—无序树 - daniumeng</title>
<link>http://www.cnblogs.com/daniumeng/p/8597862.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/daniumeng/p/8597862.html</guid>
<description>&lt;hr/&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;节点的度：&lt;/strong&gt;书中某一节点拥有的子节点数量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;数的度：&lt;/strong&gt;该树中所有节点的度的最大值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;叶节点（终端节点）:&lt;/strong&gt;度为零的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;分支节点（非终端节点）:&lt;/strong&gt;度不为零的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;根节点（开始节点）：&lt;/strong&gt;树中的第一个节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;内部节点：&lt;/strong&gt;树中除了根节点之外的节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;节点的层数：&lt;/strong&gt;若根节点层数为1，根节点的第n代子节点的层数为n。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;树的高度：&lt;/strong&gt;书中的节点的最大层数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;有序树和无序树&lt;/strong&gt;：若树中某一节点的子节点无序，则该树为无序树，否则为有序树。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;森林：&lt;/strong&gt;去掉一棵树的根节点后得到的n棵树。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1.树是一种很基础很重要的非线性结构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.除表头（树根）和表尾（叶节点）外，任何一个节点只有一个直接前驱，但有多个直接后继。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.树是数据的有限集，树分为空树和非空树。　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　非空树：有且只有一个根节点。若根节点的子节点大于1，可以理解为这棵非空树有m棵相互独立的非空树组成。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4.&lt;span&gt;树的递归特性（★★★）&lt;/span&gt;：一颗非空树有若干子树组成，每一棵子树又由更小的子组成。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;C++实现：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[MyTree.h]：无序树类模板头文件&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;#pragma&lt;/span&gt; once&lt;span&gt;

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyTree
{
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt; TreeNode  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义私有，不让用户使用&lt;/span&gt;
&lt;span&gt;    {
        T data;  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据域，可以多个数据
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指针域&lt;/span&gt;
        TreeNode *parent;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;节点的父指针&lt;/span&gt;
        TreeNode *child;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;子指针&lt;/span&gt;
        TreeNode *brother;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;兄弟指针  兄弟之间逐级管理&lt;/span&gt;
&lt;span&gt;    };
    TreeNode &lt;/span&gt;*pRoot;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根节点&lt;/span&gt;

&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    MyTree();
    &lt;/span&gt;~&lt;span&gt;MyTree();
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; clear();
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; insertNode(&lt;span&gt;const&lt;/span&gt; T&amp;amp; parentData, &lt;span&gt;const&lt;/span&gt; T&amp;amp; insertData, &lt;span&gt;bool&lt;/span&gt; insertChild = &lt;span&gt;true&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认插入为子节点
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;bool isFind(const T&amp;amp; findData);&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; preOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;前序（前根）遍历&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; posOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;前序（后根）遍历&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; inOrderPrint(TreeNode *root  &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;中序（中根）遍历    &lt;/span&gt;
    TreeNode*&lt;span&gt; getTreeRoot();
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; _clear(TreeNode *root);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于clear（）函数的实现，不提供接口&lt;/span&gt;
    TreeNode* _find(TreeNode *root, &lt;span&gt;const&lt;/span&gt; T&amp;amp;&lt;span&gt; findData);
};

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
typename MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::TreeNode* MyTree&amp;lt;T&amp;gt;&lt;span&gt;::getTreeRoot()
{
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pRoot;
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::inOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    inOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    inOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::posOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    posOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    posOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::preOrderPrint(TreeNode *root &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= pRoot&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;root)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; root-&amp;gt;data &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    preOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
    preOrderPrint(root&lt;/span&gt;-&amp;gt;&lt;span&gt;brother);
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::insertNode(&lt;span&gt;const&lt;/span&gt; T&amp;amp; parentData, &lt;span&gt;const&lt;/span&gt; T&amp;amp; insertData, &lt;span&gt;bool&lt;/span&gt; insertChild &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;= true&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;)
{
    TreeNode &lt;/span&gt;*tempInsertNode = &lt;span&gt;new&lt;/span&gt; TreeNode;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成一个待插入的节点&lt;/span&gt;
    tempInsertNode-&amp;gt;data =&lt;span&gt; insertData;
    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; NULL;
    tempInsertNode&lt;/span&gt;-&amp;gt;child =&lt;span&gt; NULL;
    tempInsertNode&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; NULL;

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pRoot)  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断树是否为空&lt;/span&gt;
&lt;span&gt;    {
        TreeNode &lt;/span&gt;*findNode = _find(pRoot, parentData);    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;找到插入位置&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (findNode)
        {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;找到了插入位置&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (insertChild)
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在子节点插入&lt;/span&gt;
                TreeNode *temp = findNode-&amp;gt;&lt;span&gt;child;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (temp)
                {
                    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (temp-&amp;gt;&lt;span&gt;brother)
                        temp &lt;/span&gt;= temp-&amp;gt;&lt;span&gt;brother;
                    temp&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; findNode;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    findNode&lt;/span&gt;-&amp;gt;child =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; findNode;
                }
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在兄弟节点插入&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt; (findNode-&amp;gt;&lt;span&gt;brother)
                {
                    TreeNode &lt;/span&gt;*tempNode = findNode-&amp;gt;&lt;span&gt;brother;
                    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (tempNode-&amp;gt;&lt;span&gt;brother)
                        tempNode &lt;/span&gt;= tempNode-&amp;gt;&lt;span&gt;brother;
                    tempNode&lt;/span&gt;-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent = tempNode-&amp;gt;&lt;span&gt;parent;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;没有兄弟节点&lt;/span&gt;
                    findNode-&amp;gt;brother =&lt;span&gt; tempInsertNode;
                    tempInsertNode&lt;/span&gt;-&amp;gt;parent = findNode-&amp;gt;&lt;span&gt;parent;
                }
            }
        }
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
        {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果没有找到插入位置  设计为插入在末尾&lt;/span&gt;
            std::cout &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;can not find the parent,insert the data in the end&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
            TreeNode &lt;/span&gt;*temp =&lt;span&gt; pRoot;
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (temp-&amp;gt;&lt;span&gt;child)
                temp &lt;/span&gt;= temp-&amp;gt;&lt;span&gt;child;
            temp&lt;/span&gt;-&amp;gt;child =&lt;span&gt; tempInsertNode;
            tempInsertNode&lt;/span&gt;-&amp;gt;parent =&lt;span&gt; temp;
        }
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;树为空的情况
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         TreeNode *temp = new TreeNode;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         temp-&amp;gt;data = insertData;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         temp-&amp;gt;parent = NULL;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;         inNode-&amp;gt;child = inNode-&amp;gt;brother = NULL;&lt;/span&gt;
        pRoot =&lt;span&gt; tempInsertNode;
    }
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
typename MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::TreeNode * MyTree&amp;lt;T&amp;gt;::_find(TreeNode *root, &lt;span&gt;const&lt;/span&gt; T&amp;amp;&lt;span&gt; findData)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (root)    &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;递归结束条件  传入的的指针为空  例如判断叶节点是  将叶子节点的子节点传入递归函数，
        不满足条件直接返回空&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;先判断本节点 在判断子节点  最后判断兄弟节点 找到直接返回 不继续找&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (root-&amp;gt;data == findData)        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断当前节点是否为 需要找的节点&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; root;
        TreeNode &lt;/span&gt;* temp = _find(root-&amp;gt;&lt;span&gt;child, findData);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (temp)
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; temp;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (temp = _find(root-&amp;gt;&lt;span&gt;brother, findData))
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; temp;
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; NULL;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;若没有找到  返回为空&lt;/span&gt;
&lt;span&gt;}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;::_clear(TreeNode *&lt;span&gt;root)
{
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用递归删除所有节点   树的递归特性&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (root)
    {
        _clear(root&lt;/span&gt;-&amp;gt;&lt;span&gt;child);
        _clear(root&lt;/span&gt;-&amp;gt;brother);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;先删除兄弟和先删除儿子一样&lt;/span&gt;
        &lt;span&gt;delete&lt;/span&gt;[]root;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;必须先删除兄弟和儿子后才能删除自己&lt;/span&gt;
        root = nullptr;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;所有内存被释放后 指针置空&lt;/span&gt;
&lt;span&gt;    }
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;
&lt;span&gt;void&lt;/span&gt; MyTree&amp;lt;T&amp;gt;&lt;span&gt;::clear()
{
    _clear(pRoot);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;不需要再进行判空 ，_clear()中会判断&lt;/span&gt;
&lt;span&gt;}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
MyTree&lt;/span&gt;&amp;lt;T&amp;gt;::~&lt;span&gt;MyTree()
{
    clear();
}

template&lt;/span&gt;&amp;lt;&lt;span&gt;class&lt;/span&gt; T&amp;gt;&lt;span&gt;
MyTree&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span&gt;::MyTree()
{
    pRoot &lt;/span&gt;=&lt;span&gt; nullptr;
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;代码测试：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;55&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 无序树.cpp : 定义控制台应用程序的入口点。
&lt;/span&gt;&lt;span&gt;//
&lt;/span&gt;#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stdafx.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;MyTree.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include&lt;/span&gt;&amp;lt;iostream&amp;gt;
&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; _tmain(&lt;span&gt;int&lt;/span&gt; argc, _TCHAR*&lt;span&gt; argv[])
{
    MyTree&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; tree;
    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tree:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;;

    tree.insertNode(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;;

     tree.insertNode(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;2&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;—&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;5&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;— —&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;9&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; endl;

    tree.insertNode(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
     tree.insertNode(&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;3&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;  &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;6&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;—&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;7&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;10&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;

     tree.insertNode(&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    tree.insertNode(&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;4&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;     &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;8&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;

    

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;前序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.preOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;后序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.posOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;中序遍历：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    tree.inOrderPrint(tree.getTreeRoot());
    std::cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; std::endl;

    std::cin.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;();
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;测试结果：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1345649/201803/1345649-20180318221500335-1975294921.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



</description>
<pubDate>Sun, 18 Mar 2018 14:19:00 +0000</pubDate>
<dc:creator>daniumeng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/daniumeng/p/8597862.html</dc:identifier>
</item>
<item>
<title>Java基础知识回顾之一  ----- 基本数据类型 - 虚无境</title>
<link>http://www.cnblogs.com/xuwujing/p/8597557.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuwujing/p/8597557.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;在开始工作至今，学习各种各样的技术之中发现自己的很多Java的基础知识都忘了⊙﹏⊙b汗。。。 而且越是学习越是发现Java基础的重要性，所以准备单独抽一下时间进行Java基础的重新学习。在重新学习的时候，对这些又有了不同的感悟，于是准备将这些都记载下来，并整理成博客，希望能够帮助那些需要的人。&lt;/p&gt;
&lt;h2 id=&quot;基本数据类型介绍&quot;&gt;基本数据类型介绍&lt;/h2&gt;
&lt;p&gt;基本数据类型主要有这几个:&lt;br/&gt;&lt;strong&gt;byte、short、int、long、float、double、char、boolean&lt;/strong&gt;&lt;br/&gt;可以分为三类:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;数值类型:&lt;strong&gt;byte、short、int、long、float、double&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;字符类型:&lt;strong&gt;char&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;布尔型:&lt;strong&gt;boolean&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;byte&quot;&gt;byte&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;byte是8位的数据类型，占用1个字节(8bit)，默认值是0，它的取值范围是&lt;strong&gt;(-2^7) ~ (2^7-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-128 ~ 127&lt;/strong&gt;之间，所以最大存储数据量是255;&lt;/li&gt;
&lt;li&gt;byte一般在大型数组中使用，来代替整数，因为byte变量占用的空间只有int的1/4。&lt;/li&gt;
&lt;li&gt;byte使用示例: byte a = 10,byte=-10。在使用byte数据类型的时候需要注意取值范围！！！&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;short&quot;&gt;short&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;short是16位的数据类型，占用2个字节，默认值是0，它的取值范围是&lt;strong&gt;(-2^15) ~(2^15-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-32768 ~ 32767&lt;/strong&gt;之间，所以最大数据存储量是65536;&lt;/li&gt;
&lt;li&gt;short虽然是int型变量所占空间的1/2，但是在实际中却很少用到。在大型数组中也可以节省空间。&lt;/li&gt;
&lt;li&gt;short使用示例:short a=100,short b=-200;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;int&quot;&gt;int&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;int是32位的数据类型，占用4个字节，默认值是0，它的取值范围是&lt;strong&gt;(-2^31) ~(2^31-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-2147483648 ~ 2147483647&lt;/strong&gt;之间，所以最大数据存储量是&lt;strong&gt;2^32-1&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;int是数据类型是整型，是我们在项目中用到最多的数据类型之一;&lt;/li&gt;
&lt;li&gt;int 使用示例:int a=1000,int b=-2000;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;long&quot;&gt;long&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;long是64位的数据类型，占用8个字节，默认值是0L，它的取值范围是&lt;strong&gt;(-2^63) ~(2^63-1)&lt;/strong&gt;，也就是 &lt;strong&gt;-9223372036854775808 ~ 9223372036854775808&lt;/strong&gt;之间，所以最大数据存储量是&lt;strong&gt;2^64&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;long是数据类型是长整型，是我们在项目中用到最多的数据类型之一。在使用long类型的数据时最好在数值末尾带上大写的L！&lt;/li&gt;
&lt;li&gt;long 使用示例:long a=1000L,long b=-2000L;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;float&quot;&gt;float&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;float是32位的数据类型，占用4个字节，默认值是0，它的取值范围是&lt;strong&gt;3.4e-45 ~ 1.4e38&lt;/strong&gt; 之间;&lt;/li&gt;
&lt;li&gt;float是数据类型是单精度，在直接赋值时必须在数字后加上f或F。&lt;/li&gt;
&lt;li&gt;float使用示例:float a=10.25f, float b=-20.35F;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;double&quot;&gt;double&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;double是64位的数据类型，占用8个字节，默认值是0，它的取值范围是&lt;strong&gt;4.9e-324 ~ 1.8e308&lt;/strong&gt; 之间;&lt;/li&gt;
&lt;li&gt;double是数据类型是双精度，在直接赋值的时候最好加上D或d。&lt;/li&gt;
&lt;li&gt;double使用示例:double a=10.123d, double b= -10.25644D;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;boolean&quot;&gt;boolean&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;boolean是布尔类型，占用1个字节，只有两个值,false和true，默认值是 false。&lt;/li&gt;
&lt;li&gt;boolean只能用一种标志来记录 true或false，一般和 if 结合使用。&lt;/li&gt;
&lt;li&gt;boolean使用示例: boolean a=true，boolean b=false;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;char&quot;&gt;char&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;char是字符类型，占用2个字节，默认值为空，取值范围 为 &lt;strong&gt;0~65535&lt;/strong&gt;，也就是 &lt;strong&gt;\u0000 ~ \uffff&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;char数据类型可以储存任何字符。&lt;/li&gt;
&lt;li&gt;char 使用示例: char a=1，char b='A';&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;数值类型的级别从低到高分别为：&lt;br/&gt;&lt;strong&gt;byte,char,short(这三个平级)——&amp;gt;int——&amp;gt;float——&amp;gt;long——&amp;gt;double&lt;/strong&gt;&lt;br/&gt;其中由低级别转到高级别，是属于&lt;strong&gt;自动类型转换&lt;/strong&gt;，这点是由系统自动转换的。&lt;/p&gt;
&lt;p&gt;例如将int类型的数据转为float类型的数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int i=10;
float j=i;
System.out.println(&quot;i:&quot;+i+&quot;,j:&quot;+j);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;i:10,j:10.0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果由高级别转为低级别，则需要&lt;strong&gt;强制转换&lt;/strong&gt;，也就是强制类型转换。&lt;br/&gt;例如将int类型的数据转换为byte类型的数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int i=127;
int j=128;
byte bye=(byte)i;
byte bye2=(byte)j;
System.out.println(&quot;i:&quot;+i+&quot;,bye:&quot;+bye);
System.out.println(&quot;j:&quot;+j+&quot;,bye2:&quot;+bye2);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;i:127,bye:127
j:128,bye2:-128&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明:因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。所以在进行强制类型转换的时候，要注意取值范围！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;强制转换&lt;/strong&gt;的时候需要注意数据的精确度，否则可能会出现数据精确丢失。&lt;br/&gt;例如 double类型的数据转换为float类型数据。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;double d=10.1111115;
float f=(float) d;
System.out.println(&quot;f:&quot;+f+&quot;,d:&quot;+d);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;f:10.111112,d:10.1111115&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;了解了数据类型的级别之后，如果用不同的数据类型进行计算，那么最终的数据类型又是哪一种呢?&lt;br/&gt;这里我们用这几种来测试:&lt;br/&gt;1.byte 类型的数据 加 short 类型的数据;&lt;br/&gt;2.short 类型的数据 加 int 类型的数据;&lt;br/&gt;3.int 类型的数据 加 long 类型的数据;&lt;/p&gt;
&lt;p&gt;这里我们使用这个方法来获取最终的数据类型&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public static String getType(Object o){ 
        return o.getClass().toString(); 
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;代码:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;short a=1;
byte b=2;
int c = 3;
long d = 4;
System.out.println(getType(a));
System.out.println(getType(b));
System.out.println(getType(c));
System.out.println(getType(d));
System.out.println(getType(a+b));
System.out.println(getType(a+c));
System.out.println(getType(c+d));&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class java.lang.Short
class java.lang.Byte
class java.lang.Integer
class java.lang.Long
class java.lang.Integer
class java.lang.Integer
class java.lang.Long&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;看到结果是不是有点吃惊呢？那么是为什么呢?&lt;br/&gt;这里的不同的数值类型数据进行相加的时候，会自动转换为级别最高的那一个。&lt;br/&gt;那么short 类型的数据加 byte 类型的数据为什么是int类型呢？&lt;br/&gt;因为在java的世界里，如果比int类型小的类型做运算，java在编译的时候就会将它们统一强转成int类型。&lt;br/&gt;如果上述不好理解的，那么这里我们来做个实验测试下，通过结果来进行验证。&lt;br/&gt;示例:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;short a=1,b=2;
byte c=3,d=4;
System.out.println(getType(a+b));
System.out.println(getType(c+d));
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class java.lang.Integer
class java.lang.Integer&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;那么这里可以得出结论，在数值类型中，若级别小于int，进行计算的时候，最终的数据类型会自动转换为int，如果高于int，最终数据结果会取其中最高的一个！&lt;/p&gt;
</description>
<pubDate>Sun, 18 Mar 2018 13:21:00 +0000</pubDate>
<dc:creator>虚无境</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuwujing/p/8597557.html</dc:identifier>
</item>
<item>
<title>conda创建py27虚拟环境安装theano（anaconda3） - Sinte-Beuve</title>
<link>http://www.cnblogs.com/Sinte-Beuve/p/8597429.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Sinte-Beuve/p/8597429.html</guid>
<description>&lt;p&gt;现在python3已经成为主流的python环境，大部分的package都兼容python3，仍然有一小部分，或者说是某一领域的package需要使用python2。本人现在主要在利用python做机器学习和深度学习，因此对python2还是有一定的需求。&lt;/p&gt;
&lt;p&gt;对于一般的package而言，python3都已经很好的兼容，学习机器学习，基本上直接安装Anaconda3即可。而深度学习大多数的框架对windows支持的不是很好，而且部分框架还对python的版本有一定的要求，name最理想的情况是，机子上可以同时拥有两个python的环境。&lt;/p&gt;
&lt;p&gt;方法有两个，1. 直接安装多个python解释器或者多个版本的Anaconda。2. 利用virtualenv或者conda env来创建多个python虚拟环境。相比之下第二种方法会比较好。因为他可以创建出多个不同版本的python环境供开发使用。&lt;/p&gt;
&lt;p&gt;由于做深度学习需要使用theano框架，而他对于python和package的版本有特定的要求，因此打算创建一个虚拟的环境来单独运行theano。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205305022-676164512.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本机环境：&lt;/strong&gt;windows 10、Anaconda3、python3.6&lt;/p&gt;
&lt;h2 id=&quot;python虚拟环境&quot;&gt;python虚拟环境&lt;/h2&gt;
&lt;p&gt;不考虑底层的技术，python虚拟环境就类似于Docker这类的容器，它可以创建多个相互隔离的python环境来运行不同的脚本。在没有conda之前，使用&lt;code&gt;virtualnev&lt;/code&gt;来实现，而现在conda不仅可以作为包管理工具，同时也能创建虚拟环境。下面是conda 有关于虚拟环境的一些用法。官方文档可做参考。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205315860-3397088.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;常用命令&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;查看命令&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;conda env --help    #查看帮助
conda env list  #列出所有的虚拟环境
conda list --name [虚拟环境名]   #查看指定虚拟环境下的package&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;虚拟环境操作命令&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;#创建
conda create --name [虚拟环境名] [python的版本] [需要的包]
eg:
conda create --name myenv
conda create --name myenv python=2.7
conda create --name myenv pytohon=2.7 numpy scipy

#克隆
conda create --name [虚拟环境名] -- clone [colne的环境]
eg:
#创建一个和原python环境一样的虚拟环境
conda create --name mybase --clone base 

#删除
conda remove --name [虚拟环境名] -all

# 激活取消（默认的环境是base）
activate [虚拟环境名]
deactivate [虚拟环境名]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;虚拟环境激活后，在cmd中输入python，显示的就是一个新的环境。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;package的安装&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;可以在创建环境的时候跟上需要的package，也可以创建完再添加。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#先切换当前的环境再安装
activate [虚拟环境名]
conda install [package_name]

#直接安装
conda list --name [虚拟环境名] [package_name]

#安装指定版本的package
一般直接install package就可以了，有些特定的package就需要指定版本了
conda install [package_name]=[version]
eg:
conda install numpy=0.12.0&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;安装theano框架&quot;&gt;安装theano框架&lt;/h2&gt;
&lt;p&gt;据说windows下安装theano坑比较多，不过我装下来还是比较顺利的。&lt;/p&gt;
&lt;h2 id=&quot;创建env&quot;&gt;创建env&lt;/h2&gt;
&lt;p&gt;由于theano只支持大py3.5，目前机子里的版本是3.6，所以我们索性创建一个py27的env&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;conda create --name theano_py27 python=2.7&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205334178-1052857112.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建成功后，可以查看当前的env。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205341821-272301031.png&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;activate theano_py27&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;激活新的env，根据上图安装需要package。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;conda install scipy=0.17.0 mkl-service&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接下来就可以安装theano了。此处需要安装的package比较多，需要一定的时间。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;conda install theano&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;安装完成后，可以进行测试。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; numpy
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; theano.tensor &lt;span class=&quot;im&quot;&gt;as&lt;/span&gt; T
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; theano &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; function
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; T.dscalar(&lt;span class=&quot;st&quot;&gt;'x'&lt;/span&gt;)
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; y &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; T.dscalar(&lt;span class=&quot;st&quot;&gt;'y'&lt;/span&gt;)
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; z &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; y
&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; function([x, y], z)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;切换完之后，在cmd中输入python，可以发现，已经由原来的3.6变成2.7了。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205355902-2000855300.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;在pycharm中使用虚拟环境&quot;&gt;在pycharm中使用虚拟环境&lt;/h2&gt;
&lt;p&gt;创建了新的env之后，打开pycharm，添加新的解释器即可。一般在&lt;code&gt;Anaconda\env\&lt;/code&gt;目录下。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205413302-473681849.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/697102/201803/697102-20180318205424656-229296844.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样就OK了。&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;参考文献&lt;/h2&gt;
</description>
<pubDate>Sun, 18 Mar 2018 13:02:00 +0000</pubDate>
<dc:creator>Sinte-Beuve</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Sinte-Beuve/p/8597429.html</dc:identifier>
</item>
<item>
<title>Python函数案例——员工信息管理 - 一只小小的寄居蟹</title>
<link>http://www.cnblogs.com/xiao-apple36/p/8597421.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiao-apple36/p/8597421.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding: utf-8 -*-&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; @Time    : 2018/3/17 12:27&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; @Site    : &lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; @File    : staff_info_manage.py&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; @Software: PyCharm&lt;/span&gt;


&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
简单的员工信息增删改查程序
表信息
1,Alex Li,22,13651054608,IT,2013‐04‐01
2,Jack Wang,28,13451024608,HR,2015‐01‐07
3,Rain Wang,21,13451054608,IT,2017‐04‐01

增加
add staff_table Alex Li,25,134435344,IT,2015-10-29
以phone做唯一键(即不允许表里有手机号重复的情况)，staff_id需自增

查询支持三种语法
find name,age from staff_table where age &amp;gt; 22
find * from staff_table where dept = &quot;IT&quot;
find * from staff_table where enroll_date like &quot;2013&quot;

删除指定员工信息纪录
del from staff_table where dept = &quot;IT&quot;

更新记录
update staff_table set dept=&quot;Market&quot; where dept = &quot;IT&quot;
update staff_table set age=25 where name = &quot;Alex Li&quot;
&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;from&lt;/span&gt; tabulate &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tabulate
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 存储信息的文件&lt;/span&gt;
DB_FILE = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;staff.db&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
COLUMN_NAME &lt;/span&gt;= [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;phone&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dept&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;enroll_date&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 打印信息&lt;/span&gt;
&lt;span&gt;def&lt;/span&gt; print_log(msg, log_type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;info&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; log_type == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;info&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\033[32;1m%s\033[0m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;msg)
    &lt;/span&gt;&lt;span&gt;elif&lt;/span&gt; log_type == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\033[31;1m%s\033[0m&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;msg)


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; load_db(DB_FILE):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    载入员工信息
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    staff_data &lt;/span&gt;=&lt;span&gt; {}
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 构建字典空列表&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;{'id': [],'name':[],'age': [],'phone':[],'dept':[],'enrolled_date'[]&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; d &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
        staff_data[d] &lt;/span&gt;=&lt;span&gt; []

    with open(DB_FILE, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, encoding=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) as f:
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt;&lt;span&gt; f:
            staff_datas &lt;/span&gt;= line.split(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 构建员工信息字典&lt;/span&gt;
            &lt;span&gt;for&lt;/span&gt; ind, d &lt;span&gt;in&lt;/span&gt;&lt;span&gt; enumerate(staff_datas):
                staff_data[COLUMN_NAME[ind]].append(d.strip())  &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 去掉末尾回车&lt;/span&gt;

    &lt;span&gt;return&lt;/span&gt;&lt;span&gt; staff_data



&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; op_compare(q_name, q_cond, compare_str):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    解析where 语句的操作符
    :param q_name: 
    :param q_cond: 
    :param compare_str: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    match_data &lt;/span&gt;=&lt;span&gt; []
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; compare_str == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
        compare_str &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; ind, val &lt;span&gt;in&lt;/span&gt;&lt;span&gt; enumerate(STAFF_INFO[q_name]):
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; compare_str != &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;like&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;and&lt;/span&gt;&lt;span&gt; q_cond.isdigit():
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 数字比较&lt;/span&gt;
            exp_str = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%s%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (int(val), compare_str, int(q_cond))
        &lt;/span&gt;&lt;span&gt;elif&lt;/span&gt; compare_str != &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;like&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; q_cond.isdigit():
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 转换操作符两边字符串&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 把val两边加上'val'或&quot;val&quot; ,与输入字符串比较 'Sales' = 'Sales' or &quot;Sales&quot; = &quot;Sales&quot;&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; q_cond.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) != -1&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+val+&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;elif&lt;/span&gt; q_cond.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) != -1&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + val + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + val + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                q_cond &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + q_cond + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 字符比较&lt;/span&gt;
            exp_str = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s%s%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (val, compare_str, q_cond)
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(exp_str)&lt;/span&gt;
        &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; if compare_str = like then compare_str = ' in  '&lt;/span&gt;
            op_str = &lt;span&gt;'&lt;/span&gt;&lt;span&gt; in &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; q_cond.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) != -1&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + val + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;elif&lt;/span&gt; q_cond.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) != -1&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + val + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                val &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + val + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                q_cond &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + q_cond + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 字符比较&lt;/span&gt;
            &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'2015' in '2016-02-01'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(q_cond,val)&lt;/span&gt;
            exp_str = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s%s%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (q_cond, op_str, val)
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(&quot;in=&quot;+exp_str)&lt;/span&gt;

        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(exp_str)&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; eval(exp_str):
            row_data &lt;/span&gt;=&lt;span&gt; []
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
                row_data.append(STAFF_INFO[col][ind])
            match_data.append(row_data)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(tabulate(match_data, headers=COLUMN_NAME, tablefmt=&quot;grid&quot;))&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt;&lt;span&gt; match_data


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_where(where_clause):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    解析where条件 
    where age &amp;gt; 22
    :param where_clause: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 操作字符&lt;/span&gt;
    op_list = [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;like&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; op_key &lt;span&gt;in&lt;/span&gt;&lt;span&gt; op_list:
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; op_key &lt;span&gt;in&lt;/span&gt;&lt;span&gt; where_clause:
            q_name, q_cond &lt;/span&gt;=&lt;span&gt; where_clause.split(op_key)
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; q_name.strip() &lt;span&gt;in&lt;/span&gt; COLUMN_NAME &lt;span&gt;and&lt;/span&gt; q_cond.strip() != &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;:
                match_data &lt;/span&gt;=&lt;span&gt; op_compare(q_name.strip(), q_cond.strip(),op_key)
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; match_data
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; q_name.strip() &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
                    error_str &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语法错误,字段%s不存在&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; q_name
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                    error_str &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;条件值为空&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                print_log(error_str, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; False

    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语法错误,符号不在[&amp;lt;,&amp;gt;,=,like]中&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; False


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_del(dataset, query_clause):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
     解析删除语句
     del from staff_table where id=3
    :param dataset: 
    :param query_clause: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; row &lt;span&gt;in&lt;/span&gt;&lt;span&gt; dataset:
        staff_id &lt;/span&gt;= row[0]  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到id值&lt;/span&gt;
        staff_index = STAFF_INFO[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].index(staff_id)  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到id值在STAFF_INFO[id]的索引&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(staff_index)&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
            STAFF_INFO[col].remove(STAFF_INFO[col][staff_index])  &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 修改col_name值&lt;/span&gt;
&lt;span&gt;
    save_db()
    print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;成功删除%s条纪录&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; len(dataset))


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_add(dataset, query_clause):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    解析增加语句
     add staff_table Alex Li,25,134435344,IT,2015-10-29
    :param dataset:  dataset = [[1,Alex Li,18,13651054608,开发,2013-04-01]]
    :param query_clause: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到增加的值列表&lt;/span&gt;
    add_data = [col.strip() &lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt; query_clause.split(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;staff_table&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)[-1].split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)]
    phone_ind  &lt;/span&gt;= COLUMN_NAME.index(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;phone&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到手机所在列&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt;(len(COLUMN_NAME) - 1 ==&lt;span&gt; len(add_data)):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到最后一行数据，自增长最后一行数据Id最大&lt;/span&gt;
        max_id = dataset[-1&lt;span&gt;][0]
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 自增长ID&lt;/span&gt;
        max_id = int(max_id) + 1
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 把ID插入到第一列&lt;/span&gt;
&lt;span&gt;        add_data.insert(0,str(max_id))
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到手机号&lt;/span&gt;
        phone_val =&lt;span&gt; add_data[phone_ind]
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 判断手机号是否重复&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; (phone_val &lt;span&gt;in&lt;/span&gt; STAFF_INFO[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;phone&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]):
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 把数据插入到STAFF_INFO&lt;/span&gt;
            &lt;span&gt;for&lt;/span&gt; index, col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; enumerate(COLUMN_NAME):
                STAFF_INFO[col].append(add_data[index])

            &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(tabulate(STAFF_INFO, headers=&lt;span&gt;COLUMN_NAME))
            save_db()
            print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;成功添加1条纪录到staff_table表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;手机号%s重复&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %phone_val ,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语法错误，列数不对,必须字段%s：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;% COLUMN_NAME[1:], &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)



&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_update(dataset, query_clause):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    修改语句 update staff_table set age=25 where name='Alex Li'
    :param dataset: 
    :param query_clause: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt; query_clause:
        formula_str &lt;/span&gt;= query_clause.split(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        col_name, new_val &lt;/span&gt;= formula_str[-1].strip().split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(col_name, new_val)&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; STAFF_INFO[col_name]&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; new_val.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) ==&lt;span&gt; 0:
            new_val &lt;/span&gt;= new_val.replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;elif&lt;/span&gt; new_val.find(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) ==&lt;span&gt; 0:
                new_val &lt;/span&gt;= new_val.replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; row &lt;span&gt;in&lt;/span&gt;&lt;span&gt; dataset:
            staff_id &lt;/span&gt;= row[0]  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到id值&lt;/span&gt;
            staff_index = STAFF_INFO[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].index(staff_id)  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到id值在STAFF_INFO[id]的索引&lt;/span&gt;
            STAFF_INFO[col_name][staff_index] = new_val  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 修改col_name值&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(STAFF_INFO)&lt;/span&gt;
&lt;span&gt;        save_db()
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;成功修改了%s条数据!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; len(dataset))
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语法错误，未检测到set&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; save_db():
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    #把修改的数据保存到硬盘上
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    f &lt;/span&gt;= open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s.new&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%DB_FILE, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,encoding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; for k in COLUMN_NAME:&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;     row = []&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;     row = STAFF_INFO[k]&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; ind, val &lt;span&gt;in&lt;/span&gt; enumerate(STAFF_INFO[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]):
        row &lt;/span&gt;=&lt;span&gt; []
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
           row.append(STAFF_INFO[col][ind])
        w_data &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.join(row)
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(w_data)&lt;/span&gt;
        f.write(w_data+&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    f.close()

    os.remove(DB_FILE)
    os.rename(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s.new&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%DB_FILE, DB_FILE)  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 回写原来的文件&lt;/span&gt;



&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_parser(input_sql):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    解析sql语句并执行
    :param input_sql: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(&quot;syntax_parser sql star&quot;)&lt;/span&gt;
    syntax_list =&lt;span&gt;{
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;find&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: syntax_find,
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;del&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: syntax_del,
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;add&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: syntax_add,
        &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: syntax_update
    }


    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; input_sql.split()[0] &lt;span&gt;in&lt;/span&gt; syntax_list.keys() &lt;span&gt;and&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;staff_table&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt; input_str.split():
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt; input_sql.split():
            query_clause, where_clause &lt;/span&gt;= input_sql.split(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print_log(query_clause + where_clause)&lt;/span&gt;
            &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 执行where条件&lt;/span&gt;
            match_data =&lt;span&gt; syntax_where(where_clause.strip())
            input_action &lt;/span&gt;=&lt;span&gt; query_clause.split()[0]
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 执行不同的action&lt;/span&gt;
&lt;span&gt;            syntax_list[input_action](match_data, query_clause)
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            match_data &lt;/span&gt;=&lt;span&gt; []
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; ind, val &lt;span&gt;in&lt;/span&gt; enumerate(STAFF_INFO[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]):
                row &lt;/span&gt;=&lt;span&gt; []
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; COLUMN_NAME:
                    row.append(STAFF_INFO[col][ind])
                match_data.append(row)
            syntax_list[input_sql.split()[0]](match_data, input_sql.strip())

    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语法错误，find/del/add/updata name,age from [staff_table] [where] age [&amp;lt;,&amp;gt;,=,like][1]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;error&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; syntax_find(dataset, query_clause):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    查询语句解析
    :param dataset: 
    :param query_clause: 
    :return: 
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    query_col &lt;/span&gt;= query_clause.split(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)[0][4:].split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 得到name,age&lt;/span&gt;
    filter_col = [col.strip() &lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt; query_col]  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 去除col中的空格&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(query_col)&lt;/span&gt;
    reformat_dataset =&lt;span&gt; []
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; filter_col:  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 输出所有列&lt;/span&gt;
        &lt;span&gt;print&lt;/span&gt;(tabulate(dataset, headers=COLUMN_NAME, tablefmt=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;grid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;匹配到%s条数据!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; len(dataset))
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; row &lt;span&gt;in&lt;/span&gt; dataset:  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 筛选列&lt;/span&gt;
            filter_val =&lt;span&gt; []
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; col &lt;span&gt;in&lt;/span&gt;&lt;span&gt; filter_col:
                index &lt;/span&gt;=&lt;span&gt; COLUMN_NAME.index(col)
                filter_val.append(row[index])
            reformat_dataset.append(filter_val)
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(tabulate(reformat_dataset, headers=COLUMN_NAME, tablefmt=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;grid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
        print_log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;匹配到%s条数据!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; len(reformat_dataset))

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;__name__&lt;/span&gt; == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;__main__&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    用户信息查询
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 把数据载入内存&lt;/span&gt;
    STAFF_INFO =&lt;span&gt; load_db(DB_FILE)
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
        input_str &lt;/span&gt;= input(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;[staff db:]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).strip()
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; input_str : &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;
        syntax_parser(input_str)&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Sun, 18 Mar 2018 12:54:00 +0000</pubDate>
<dc:creator>一只小小的寄居蟹</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiao-apple36/p/8597421.html</dc:identifier>
</item>
<item>
<title>记录使用微信小程序的NFC和蓝牙功能读取15693芯片的开发历程 - Leo C.W</title>
<link>http://www.cnblogs.com/leotsai/p/weixin-applet-nfc-bluetooth-dev-experience.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/leotsai/p/weixin-applet-nfc-bluetooth-dev-experience.html</guid>
<description>&lt;p&gt;开发目标：&lt;/p&gt;
&lt;p&gt;（1） 对于Android手机，直接通过微信小程序调用手机的NFC功能，对15693协议的芯片进行读写操作；&lt;/p&gt;
&lt;p&gt;（2）对于苹果手机（及没有NFC模块的手机），通过微信小程序的蓝牙功能连接到蓝牙/NFC读写器，然后通过蓝牙发送指令操作读写器对15693协议的芯片进行读写操作。&lt;/p&gt;

&lt;h2&gt;DAY #1&lt;/h2&gt;
&lt;p&gt;上午开了半天会，下午开始开发。&lt;/p&gt;

&lt;p&gt;先开发简单的：直接通过Android手机的NFC模块读写芯片。开发思路如下：&lt;/p&gt;
&lt;p&gt;1. 首先调用 wx.getHCEState(OBJECT)， 判断设备是否支持NFC，如果不支持就走蓝牙通道；&lt;/p&gt;
&lt;p&gt;2. 调用 wx.startHCE(OBJECT) 初始化手机的NFC模块；&lt;/p&gt;
&lt;p&gt;3. 初始化完成后，调用  wx.onHCEMessage(CALLBACK) 监听芯片响应的消息；&lt;/p&gt;
&lt;p&gt;4. 点击页面上的“询卡”按钮，调用 wx.sendHCEMessage(OBJECT)发送询卡指令；&lt;/p&gt;
&lt;p&gt;5. 这时 wx.onHCEMessage(CALLBACK) 应该可以收到带有uid信息的芯片响应数据；&lt;/p&gt;
&lt;p&gt;6. 根据uid发送select指令，以及后续多个指令；&lt;/p&gt;
&lt;p&gt;7. 全部操作完成后之后，调用 wx.stopHCE(OBJECT) 停止手机的NFC模块；&lt;/p&gt;
&lt;p&gt;8. 完成。&lt;/p&gt;

&lt;p&gt;思路很清晰，并且开发思路中需要用到的每一个NFC的接口都有对应文档，应该是没有什么问题了，接着就开始开发NFC模块了。&lt;/p&gt;

&lt;p&gt;第一步、微信小程序基本框架搭建，非常顺利的完成界面，调试模式等。&lt;/p&gt;
&lt;p&gt;然后开始写nfc模块，首先是 wx.getHCEState(OBJECT)，比较顺利，同时测试了一下没有NFC模块的手机/NFC为开启等多种情况的返回值（因为小程序开发文档没有写啊）。&lt;/p&gt;

&lt;p&gt;然后是初始化NFC模块，也比较顺利。&lt;/p&gt;

&lt;p&gt;然后完成wx.onHCEMessage(CALLBACK)消息监听，然后就是点击按钮发送消息  wx.sendHCEMessage(OBJECT)，从这时开始就开始进入无助的状态。&lt;/p&gt;

&lt;p&gt;尝试了多组数据进行发送，始终不能触发 wx.onHCEMessage， 折腾了半个小时，未果，等第二天解决吧。&lt;/p&gt;

&lt;h2&gt;DAY #2&lt;/h2&gt;

&lt;p&gt;首先仍然怀疑是数据格式不对，因为第一次开发跟芯片相关的程序，并且也是第一次接触15693协议，所以一开始非常坚定的相信是自己组装的发送数据不对，然后就去请教了芯片开发大牛，以及把15693协议的相关部分读了大约10遍，在网上找15693协议相关资料，百度微信小程序NFC开发资料。&lt;/p&gt;

&lt;p&gt;还是不能触发 wx.onHCEMessage。&lt;/p&gt;

&lt;p&gt;直到在微信小程序开发社区，输入关键字“wx.onHCEMessage”，然后从寥寥的几篇post中，终于明白：TMD微信小程序的NFC功能仅仅是把手机模拟成一张芯片卡，而不是把手机当做芯片读写器！&lt;a href=&quot;https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;amp;docid=000082293b8790bc74365a56f51000&amp;amp;highline=onHCEMessage&amp;amp;token=&amp;amp;lang=zh_CN&quot; target=&quot;_blank&quot;&gt;WTF&lt;/a&gt;！ &lt;/p&gt;

&lt;p&gt;这时已经下午3点。&lt;/p&gt;

&lt;p&gt;因为我一开始跟公司领导说的是微信小程序可以直接调NFC读取芯片，这下就尴尬了，对项目的规划影响巨大。然后，抱着一丝恐惧，也抱着一丝希望，多方搜索，多方确认，TMD微信小程序目前确实只能把手机模拟成一张芯片卡。&lt;/p&gt;

&lt;p&gt;然后跟公司领导电话里简单汇报了一下，领导说第二天开会讨论。&lt;/p&gt;

&lt;p&gt;然后开始写蓝牙通道的解决方案。&lt;/p&gt;

&lt;p&gt;微信小程序开放的蓝牙接口如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/313471/201803/313471-20180309144521728-874434988.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;共18个接口，实在是太多了。这里不得不吐槽一下微信小程序的架构师们，你们设计的开发文档太粗糙了，需要开发人员写大量的代码才能完成一些基本功能，比如我自己想要完成的一些功能：&lt;/p&gt;
&lt;p&gt;1. 初始化蓝牙模块；&lt;/p&gt;
&lt;p&gt;2. 打开/关闭蓝牙发现；&lt;/p&gt;
&lt;p&gt;3. 随时只允许单一设备连接，不允许多设备连接；&lt;/p&gt;
&lt;p&gt;4. 已连接上的蓝牙断开后自动重连，自动重连失败后提示并继续自动重连；&lt;/p&gt;
&lt;p&gt;5. 每次连上蓝牙设备后自动记住蓝牙设备ID，并写入一个长度为5的数组，并写到storage里面，这样下次进入小程序后就可以自动连接曾经连过的蓝牙设备。&lt;/p&gt;

&lt;p&gt;下面是我希望自己的程序可以这样调用蓝牙模块的伪代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;Page({
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     onLoad: &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         ble.onMessageReceived = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         ble.onDeviceFound = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(device){
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;参数是device 而不要 devices&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         ble.autoReconnect = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         ble.maxConnections = 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         ble.maxRememberedConnections = 5&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         ble.init(&lt;span&gt;function&lt;/span&gt;(){ &lt;span&gt;//&lt;/span&gt;&lt;span&gt;init 方法里面初始化蓝牙模块&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             ble.autoConnectToRememberedDevice(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(ble.connectedDevices.length == 0&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接记住的设备失败，跳转到蓝牙发现页面&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    },
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     connectToNewDevice: &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(newDeviceId){
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;由于设置了最大连接数为1，这时调这个方法就会主动断掉之前的连接&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这样就不需要先调 disconnect了， 也不需要检查设备ID/状态是否不一致&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         ble.connectToDevice(newDeviceId, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; });
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;既然微信没有实现这个简便的ble，就只有我自己来实现了。&lt;/p&gt;

&lt;p&gt;当天下午剩下的一两个小时，已经将这个ble写的差不多了，等到第二天来调试。&lt;/p&gt;

&lt;h2&gt;DAY #3&lt;/h2&gt;
&lt;p&gt;早上一来跟领导开会，确认对于Android手机必须开发APP以避免使用蓝牙读写器，小程序仍然要开发，因为iOS系统始终需要读写器才能对芯片进行操作。&lt;/p&gt;

&lt;p&gt;开完会就开始进入蓝牙模块的调试。&lt;/p&gt;

&lt;p&gt;首先遇到的问题就是获取不到蓝牙设备的名称，尝试从advertiseData解析，尝试在网上找了很多资料，未果。看了论坛的很多帖子，应该是小程序API还不能很好的兼容其他设备的，也就是说对于这块功能还很不成熟。&lt;/p&gt;

&lt;p&gt;于是就只有暂时放弃解决蓝牙设备名称的问题。&lt;/p&gt;

&lt;p&gt;继续完善ble模块，到下午下班的时候蓝牙连接模块已经比较成熟了，上文提到的那些功能全部都已实现，并且封装之后的BluetoothManager非常好用，表现也很稳定，体验很流畅，跟iOS系统的wifi连接模块的体验差不多。&lt;/p&gt;

&lt;h2&gt;DAY #4&lt;/h2&gt;
&lt;p&gt;早上一来就开始继续写蓝牙的读写功能。这里不得不吐槽一下微信小程序的架构师们，开发人员使用你们设计的接口，就完成一个读写功能需要调好几个接口，太复杂了。下方是我写的ble开放的几个接口，真希望微信小程序的架构师们也能开发一些这样的快捷接口：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;Page({
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     onLoad: &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         ble.onMessageReceived = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res){
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(询卡指令返回){
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 ble.sendMessage(&quot;发送select指令&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        };
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        ble.init(......);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    },
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     doInventory: &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         ble.sendMessage(&quot;发送询卡指令&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; });
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;等到把这部分代码写完，正好公司购买的蓝牙读写器到货，马上拆开进行测试。&lt;/p&gt;

&lt;p&gt;首先是启动微信小程序，自动进入发现页面，很快找到了新的蓝牙设备，值得庆幸的是竟然读到了新设备的名称（而不是像其他蓝牙设备一样返回空）。选择该设备进行连接，非常顺利，然后继续测试了一下断开自动重连，更换设备（保持单一连接），记住连接过的蓝牙设备，中途修复了两三个小bug，又改进了一下体验，应该说连接部分比较完美了。&lt;/p&gt;

&lt;p&gt;然后就是要测试第一个指令：询卡。&lt;/p&gt;

&lt;p&gt;由于读写器自带一个询卡按钮，通过按一下按钮就发送询卡指令的方式，所以询卡变得很简单。于是对于代码而言，按了询卡按钮之后应该直接进入wx.notifyBLECharacteristicValueChange(OBJECT)。写好相应初始化以及消息监听代码之后，就等着按一下询卡按钮了。&lt;/p&gt;

&lt;p&gt;一按，果然收到消息回调了！调试了这么多天，终于可以触发NFC消息通知了！虽然很简单，但是确实是很激动。&lt;/p&gt;

&lt;p&gt;消息回调虽然收到了，但是不知道响应消息的格式，也就无法解析，不晓得芯片是不是正确响应了。问了芯片厂家，又问了读写器生产厂家，终于问到了询卡指令的响应格式，按照格式解析出来了UID，这么多天终于读到了UID！再对比芯片厂家提供的demo app以及读写器厂家提提供的桌面程序，确认读到的UID是正确的。&lt;/p&gt;

&lt;p&gt;接下来便是发送select指令。下图为15693 select指令格式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/313471/201803/313471-20180318194253514-1456421344.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;首先第一个字节flags就不知道怎么拼，select字节传0x25，UID已得到，CRC不知道怎么计算。&lt;/p&gt;

&lt;p&gt;在网上看了很多资料，包括芯片厂家也说CRC一般是不需要传值的，因为大多数读写器都会在内部进行CRC的计算。好吧，我暂且相信，那么就只剩下一个参数了，那就是flags参数。按照15693协议规定，试了多种组合，尝试发送select指令（在第一个询卡成功的消息回调中发送），然而收不到任何响应消息。&lt;/p&gt;

&lt;p&gt;下班后折腾了一个多小时，做了各种数据格式的尝试，翻阅了多个资料，将手里的15693协议的相关部分阅读了多次，还是收不到任何响应消息。无赖，不得不下班了。等第二天再来研究吧。&lt;/p&gt;

&lt;h2&gt;DAY #5&lt;/h2&gt;
&lt;p&gt;继续研究select指令。在跟读写器厂家交流的过程中得知，CRC是必须自己计算的，不能不传，然后就从读写器厂家提供的DEMO代码中找到了CRC的算法，然后用JS实现了一遍，然后好不容易在读写器厂家的技术文档中看到一个CRC计算示例，根据示例的传入参数和计算结果再次确认了自己的JS算法是正确的。&lt;/p&gt;

&lt;p&gt;然后，不管怎么传参数格式，select指令发送成功后收不到任何消息。&lt;/p&gt;

&lt;p&gt;在绝望之时，干脆不用读写器自带的询卡按钮，自己按照15693协议发送询卡指令。到这时，在跟读写器厂家沟通的过程中得知，他们生产的蓝牙NFC读写器都有自己的数据传输格式，不能完全按照ISO15693协议来写，得按照他们提供的文档来写，当然，到这时候读写器厂家提供的文档也读过将近十遍了，请求格式响应格式已比较熟悉。所以几分钟就完成了询卡代码。&lt;/p&gt;

&lt;p&gt;写完代码之后进入调试，直接就收到了询卡之后的响应，然而在接下来的发送select指令后还是没有收到任何响应。当然，这也本在预料之中。这个时候对读写器厂家的怀疑不断加深，越来越觉得他们卖的读写器无法读到我们的芯片，想要退货。&lt;/p&gt;

&lt;p&gt;但我还是没有死心，尝试按照读写器厂家提供的文档，一步一步组装数据。在之后的大概第3次尝试中，竟然收到了select指令的响应！并且按照响应格式解析数据表明芯片响应成功！&lt;/p&gt;

&lt;p&gt;太激动了！！！&lt;/p&gt;

&lt;p&gt;后来才明白，为什么按读写器自带的询卡按钮之后发送的select指令收不到响应，而自己通过蓝牙发送的询卡指令就收到了响应，我猜测是因为按钮发起的通讯会话跟蓝牙发起的会话完全就是不同的会话导致的，所以点击读写器自带的询卡按钮之后再通过蓝牙发送select指令，应该就相当于直接对着一张芯片发送select指令，当然不会收到任何响应了。&lt;/p&gt;

&lt;p&gt;这时，调通了第一个指令，想当然的我觉得后面的指令肯定不是问题了，肯定就会变得非常简单。&lt;/p&gt;

&lt;p&gt;然而，更让人绝望的事情发生了。&lt;/p&gt;

&lt;p&gt;要说select指令的困惑，差不多花了我4个小时，并且一开始还是非常相信读写器可以通过蓝牙完成select指令的，一直到最后才有点怀疑读写器的问题。&lt;/p&gt;

&lt;p&gt;接下来的这个指令是芯片厂家的一个定制指令，不属于ISO15693协议规定的范围之内，读写器厂家提供的文档中自然不会包含整个定制指令。所以只能按照芯片厂家给的文档来发送指令。&lt;/p&gt;

&lt;p&gt;很显然，这肯定是行不通的。读写器肯定只能认识读写器厂家给的文档中定义的指令格式，然而这个浅显的道理我大概花了1个小时才明白，在尝试了多种尝试之后冷静下来一思考就明白了。&lt;/p&gt;

&lt;p&gt;然后就是找读写器厂家沟通。这个过程也是非常绝望的，因为在跟芯片厂家沟通的过程中得知，必须要读写器支持15693透传协议才可能发送定制指令。然而问了读写器厂商，他们自己也不确认 这款产品的蓝牙通道是否支持透传，他们有另一款产品支持透传，但是不支持蓝牙，这让我一度觉得肯定要把读写器退货了，然后再重新买一个支持15693协议并支持蓝牙透传的读写器。&lt;/p&gt;

&lt;p&gt;然后抱着一丝丝希望，跟读写器厂家咨询了很久，他们建议我按照他们另一款支持透传协议的读写器的文档来开发。&lt;/p&gt;

&lt;p&gt;真的自己都不抱什么希望了，只是再写几行代码总比立即去买一个新的读写器来的更简单一些，于是又做了一次尝试。&lt;/p&gt;

&lt;p&gt;这次按照另一款读写器的透传协议，更改了定制指令的格式。&lt;/p&gt;

&lt;p&gt;竟然！竟然直接就收到了芯片响应！&lt;/p&gt;

&lt;p&gt;太激动了！&lt;/p&gt;

&lt;p&gt;激动了3分钟之后，静下来一看，响应的数据太短，肯定不是正确的数据，然后比对文档中的响应格式，确认芯片没有能够正确响应。&lt;/p&gt;

&lt;p&gt;这时还是继续怀疑读写器不支持透传指令，于是再跟读写器厂家沟通，把响应数据发给了他们看，他们确定芯片是收到了指令了，只是指令格式不对，芯片没有回发正确的数据。&lt;/p&gt;

&lt;p&gt;这时已经下班十几分钟了，感觉就还剩这一个问题了，如果不能确定该读写器是否支持透传，那接下来的周末肯定是无法好好休息的。&lt;/p&gt;

&lt;p&gt;但这时已经对读写器很有信心了，比较坚定的认为是定制指令格式不对。然后又找芯片厂家要了他们以前发送的demo代码，指令的示例，然后又把芯片厂家的对应文档阅读了几遍，几乎一个字一个字去理解协议中的每一个字。&lt;/p&gt;

&lt;p&gt;终于，终于发现指令中的某个代表响应数据长度的字节计算错误，当把这个错误数据修复之后就立即收到了正确的响应了。&lt;/p&gt;

&lt;p&gt;太不容易了！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/313471/201803/313471-20180318202916299-618337892.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;终于可以安心的下班了！&lt;/p&gt;

&lt;h2&gt;后记&lt;/h2&gt;
&lt;p&gt;之后的开发都比较顺利了，因为要么就是给读写器发送读写器自定义的指令，要么就是用透传功能发送芯片自定义的指令，可以说是所有指令都可以发送了。&lt;/p&gt;

&lt;p&gt;这次芯片项目开发收货到最有价值的经验就是，一般读写器厂家都会有自己定义的一套指令格式，或者SDK，当通过读写器操作芯片的时候，必须要首先按照读写器的API文档来写，否则芯片不可能有响应的。&lt;/p&gt;

</description>
<pubDate>Sun, 18 Mar 2018 12:35:00 +0000</pubDate>
<dc:creator>Leo C.W</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/leotsai/p/weixin-applet-nfc-bluetooth-dev-experience.html</dc:identifier>
</item>
</channel>
</rss>