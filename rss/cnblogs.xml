<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>class_copyIvarList方法获取实例变量问题引发的思考 - zhanggui</title>
<link>http://www.cnblogs.com/zhanggui/p/8177400.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhanggui/p/8177400.html</guid>
<description>&lt;p&gt;在runtime.h中，你可以通过其中的class_copyIvarList方法来获取实例变量。具体的实现如下（记得导入头文件&amp;lt;objc/runtime.h&amp;gt;）：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;- (NSArray *)ivarArray:(Class)cls {
    &lt;span class=&quot;dt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; stuIvarCount = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    Ivar *ivars = class_copyIvarList(cls, &amp;amp;stuIvarCount);
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (stuIvarCount == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; nil;
    }
    NSMutableArray *arr = [[NSMutableArray alloc] initWithCapacity:stuIvarCount];
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;i&amp;lt;stuIvarCount;i++) {
        Ivar ivar = ivars[i];
        NSString *ivarName = [NSString stringWithUTF8String:ivar_getName(ivar)];
        NSLog(&lt;span class=&quot;st&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,ivarName);
        [arr addObject:ivarName];
    }
    free(ivars);
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; arr;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上面代码。其中cls就是你要获取实例变量的类，stuIvarCount用来承载要获取类的实例变量的个数。打印出来的ivarName就是cls的实例变量。接下来对这个方法进行解析:&lt;br/&gt;首先看一下里面的Ivar,先看一下定义：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;&lt;span class=&quot;co&quot;&gt;/// An opaque type that represents an instance variable.&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;struct&lt;/span&gt; objc_ivar *Ivar;

&lt;span class=&quot;kw&quot;&gt;struct&lt;/span&gt; objc_ivar {
    &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; * _Nullable ivar_name                               OBJC2_UNAVAILABLE;  &lt;span class=&quot;co&quot;&gt;//变量名字&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; * _Nullable ivar_type                               OBJC2_UNAVAILABLE;   &lt;span class=&quot;co&quot;&gt;//变量类型&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; ivar_offset                                          OBJC2_UNAVAILABLE; &lt;span class=&quot;co&quot;&gt;//偏移量&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#ifdef __LP64__&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; space                                                OBJC2_UNAVAILABLE;  &lt;span class=&quot;co&quot;&gt;//存储空间&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#endif&lt;/span&gt;
}    &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ivar是一个叫做objc_ivar的结构体指针,其中的 ifdef判断是判断当前设备是否是64位设备，这里可以延伸出一个方法：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;&lt;span class=&quot;co&quot;&gt;//判断当前设备是否是64位设备，也可以用这个方法判断是否是32位设备&lt;/span&gt;
- (BOOL)is64Bit {
&lt;span class=&quot;ot&quot;&gt;#if defined(__LP64__) &amp;amp;&amp;amp; __LP64__&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; YES;
&lt;span class=&quot;ot&quot;&gt;#else&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; NO;
&lt;span class=&quot;ot&quot;&gt;#endif&lt;/span&gt;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;OBJC_EXPORT Ivar _Nonnull * _Nullable
class_copyIvarList(Class _Nullable cls, unsigned int * _Nullable outCount) 
    OBJC_AVAILABLE(10.5, 2.0, 9.0, 1.0, 2.0);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;class_copyIvarList的注释如下：&lt;br/&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottZg/MarkDownResource/master/class_copyIvarList/class_copyIvarList.png&quot; alt=&quot;class_copyIvarList&quot;/&gt;&lt;br/&gt;它返回的是一个Ivar的数组，这个数组里面包含了你要查看类的所有实例变量，但是不包括从父类继承过来的。如果你传入的类没有实例变量或者改class为Nil,那么该方法返回的就是NULL，count值也就变成了0。有一点需要注意：&lt;strong&gt;你必须使用free()方法将该数组释放&lt;/strong&gt;。&lt;br/&gt;然后就是通过for循环遍历，通过ivar _ getName拿到ivarName。&lt;br/&gt;以上便是对clas_copyIvarList的介绍。&lt;br/&gt;它还有一个最常用的使用方式（在开发中经常用到的）：根据字典或者json字符串转化为model，在网络请求返回数据时经常用到。使用方法就是自己写一个基类的model，然后让项目中用到的model都继承自此基类，基类中的关键代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;+ (instancetype)zg_modelFromDic:(NSDictionary *)dataDic {
    id model = [[&lt;span class=&quot;kw&quot;&gt;self&lt;/span&gt; alloc] init];  
    &lt;span class=&quot;dt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    
    Ivar *ivarsA = class_copyIvarList(&lt;span class=&quot;kw&quot;&gt;self&lt;/span&gt;, &amp;amp;count);
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (count == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; model;
    }
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;i &amp;lt; count; i++) {
        Ivar iv = ivarsA[i];
        NSString *ivarName = [NSString stringWithUTF8String:ivar_getName(iv)];
        ivarName = [ivarName substringFromIndex:&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;];
        id value = dataDic[ivarName];
        [model setValue:value forKey:ivarName];
    }
    free(ivarsA);
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; model;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里是把字典转成model，先用class_copyIvar获取该model的所有实例变量,然后通过kvc对属性进行赋值。最终返回model。这里有个点需要注意以下几点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;你的model的属性名称要和服务端返回的数据一致，比如你的model有个属性叫做name，那么你服务端返回的数据字典里面的对应属性也要叫做name，因为这个方法是根据属性从字典里面拿数据的。你也可以做一个映射，让自定义的实例变量名称映射到服务端提供的变量名称。&lt;/li&gt;
&lt;li&gt;实现里面有个substringFromIndex：操作，其目的就是把使用该方法拿到的实例变量前面的&quot; _ &quot;去掉。所以你最好使用 @property 进行属性声明，并且不要去修改自动生成的实例变量。（@property = getter + setter + _ ivar，这里的 _ ivar其实就是编译器帮我们生成的实例变量）&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;接下来你可以尝试去获取UILabel的实例变量列表：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[self ivarArray:[UILabel class]]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你会发现拿到的结果是这样的：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;(
    &lt;span class=&quot;st&quot;&gt;&quot;_size&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_highlightedColor&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_numberOfLines&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_measuredNumberOfLines&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_baselineReferenceBounds&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_lastLineBaseline&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_previousBaselineOffsetFromBottom&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_firstLineBaseline&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_previousFirstLineBaseline&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_minimumScaleFactor&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_content&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_synthesizedAttributedText&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_defaultAttributes&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_fallbackColorsForUserInterfaceStyle&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_minimumFontSize&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_lineSpacing&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_layout&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_scaledMetrics&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_cachedIntrinsicContentSize&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_contentsFormat&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_cuiCatalog&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_cuiStyleEffectConfiguration&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_textLabelFlags&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_adjustsFontForContentSizeCategory&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;__textColorFollowsTintColor&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_preferredMaxLayoutWidth&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;_multilineContextWidth&quot;&lt;/span&gt;,
    &lt;span class=&quot;st&quot;&gt;&quot;__visualStyle&quot;&lt;/span&gt;
)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是跳转到UILabel.h，你会发现里面有好多的属性不包含在我们根据该方法得出的属性数组里面，而且使用该方法得到的属性在UILabel.h里面并没有。这个是什么原因呢？&lt;br/&gt;先看一下好多UILabel里面的属性没有在数组里面打印问题：猜想应该是在UILabel.m里面使用了 @dynamic。导致没有自动生成getter、setter和ivar，所以没有在数组里面包含。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;@synthsize：如果没有手动实现setter/getter方法那么会自动生成，自动生成_var变量。如果不写，默认生成getter/setter和_var。你也可以使用该关键字自己设置自动变量的名称。&lt;br/&gt;@dynamic告诉编译器：属性的setter/getter需要用户自己实现，不自动生成，而且也不会产生_var变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说在UILabel里面虽然有个text的属性，也许在UILabel.m里面已经包含：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;@dynamic text;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样的话在实现里面没有产生实例变量，只是手动实现了getter和setter，所以就不会显示text属性在刚才得到的数组里面了。&lt;br/&gt;至于数组中有UILabel.h里面没有的变量，这个就好理解了，有可能在UILabel.m里面添加了一些实例变量或者在运行时添加了这些实例变量。&lt;/p&gt;
&lt;p&gt;除此方法之外，你还可以使用class_copyPropertyList方法，这个是拿到的所有用 @property 声明的属性,包括在.m里面添加的属性（所以打印出来的可能要比真实在.h里面看到的多），具体实现和上面的获取方法类似：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;- (NSArray *)propertyArr:(Class)cls {
    &lt;span class=&quot;dt&quot;&gt;unsigned&lt;/span&gt; count = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    objc_property_t *properties = class_copyPropertyList(cls, &amp;amp;count);
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (count == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; nil;
    }
    NSMutableArray *arr = [[NSMutableArray alloc] initWithCapacity:count];
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i ++) {
        objc_property_t property = properties[i];
        NSString *propertyName = [NSString stringWithUTF8String:property_getName(property)] ;
        [arr addObject:propertyName];
    }
    free(properties);
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; arr;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中的copyPropertyList方法解释如下：&lt;br/&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottZg/MarkDownResource/master/class_copyIvarList/class_copyPropertyList.png&quot; alt=&quot;class_copyPropertyList&quot;/&gt;&lt;br/&gt;记得使用过后也要调用free去释放数组。（PS：在源代码中暂未找到objc_property结构体的说明）因此，你可以通过使用该方法来实现字典或者json字符串转model操作：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode objectivec&quot;&gt;
&lt;code class=&quot;sourceCode objectivec&quot;&gt;+ (instancetype)zg_modelFromDic:(NSDictionary *)dataDic {
    id model = [[&lt;span class=&quot;kw&quot;&gt;self&lt;/span&gt; alloc] init];
    &lt;span class=&quot;dt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    
    objc_property_t *properties = class_copyPropertyList([&lt;span class=&quot;kw&quot;&gt;self&lt;/span&gt; class], &amp;amp;count);
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (count == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; model;
    }
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;i &amp;lt; count; i++) {
        objc_property_t property = properties[i];
        NSString *propertyName = [NSString stringWithUTF8String:property_getName(property)];
        id value = dataDic[propertyName];
        [model setValue:value forKey:propertyName];
    }
    free(properties);
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; model;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;两种方式均可实现model转换操作。&lt;br/&gt;以上便是由class_copyIvarList所引发的思考。&lt;/p&gt;
&lt;p&gt;转载请标明来源：&lt;a href=&quot;http://www.cnblogs.com/zhanggui/p/8177400.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/zhanggui/p/8177400.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 07:25:00 +0000</pubDate>
<dc:creator>zhanggui</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhanggui/p/8177400.html</dc:identifier>
</item>
<item>
<title>openstack操作之二 restful api - 金色旭光</title>
<link>http://www.cnblogs.com/goldsunshine/p/8119209.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/goldsunshine/p/8119209.html</guid>
<description>&lt;p&gt;&lt;span&gt;Restful api 是openstack各服务调用的接口，简单理解为可以通过网络去调用的函数。postman是一款前端调用工具，测试后端接口的时候往往是使用该工具去验证。在openstack的使用中，可以使用postman调用openstack restful接口。这里要区别命令行和restful接口，命令行的使用是调用restful来实现的。所以，不管是命令行还是horizon都是调用了openstack中restful api去实现相应的功能。本节希望通过postman调用接口的方式进一步去剖析openstack&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;安装postman&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一、下载postman离线安装包。链接: https://pan.baidu.com/s/1kUVxKI7 密码: ttmw&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;二、chrome安装postman。&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;打开chrome。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;点击更多工具--&amp;gt;扩展程序--&amp;gt;加载已解压的扩展程序--&amp;gt;选择下载的安装包文件，稍等即可安装成功。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;安装成功之后在扩展程序中有已经安装好的postman，直接运行。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229181458179-603231522.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;运行postman如下图所示：&lt;/span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102140035846-83196310.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;简单使用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取token&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;token是环境可操作的前提，openstack登陆时填写的用户名+密码，登陆之后的操作都是使用token。获取token需要填写的内容如下：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;请求方式为POST&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;请求的URL为 http://controller-ip:5000/v2.0/tokens。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;请求的body格式为raw，JSON格式。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;请求的body具体内容如下表&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;auth&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:{
             &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;passwordCredentials&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
             {
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,    //登陆用户名
                &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;stack2015&lt;/span&gt;&lt;span&gt;&quot; //登陆用户密码&lt;/span&gt;&lt;span&gt;
              },
     &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tenantName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;             //登陆用户所属项目&lt;/span&gt;&lt;span&gt;
       }
}&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;下图为详细的填写内容，1-6分别是：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;请求方式为POST&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;请求URL地址&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;传入内容body&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;body的内容的类型为raw&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;body的内容的格式为JSON&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;具体的body内容&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;body内容为用户信息，如果是使用admin用户登录，用户名为admin，密码为*******，租户名为 admin。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102094516674-526183544.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 返回信息如下，具体的内容包括&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;获得的token值&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;搭建的环境中各服务的restful 端点&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt; 注意这个返回状态信息，200 OK表示请求正确。状态是判断请求是否成功的重要依据。该请求返回类型是http标准请求码，常见的请求码如下：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;200 - OK 一切正常，对GET和POST请求的应答文档跟在后面。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;201 - Created 服务器已经创建了文档，Location头给出了它的URL。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;202 - Accepted 已经接受请求，但处理尚未完成。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;400 - Bad Request 请求出现语法错误。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;401 - Unauthorized 访问被拒绝，客户试图未经授权访问受密码保护的页面。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;404 - Not Found 无法找到指定位置的资源。这也是一个常用的应答。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102101439862-602569763.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如下是完整的返回信息，在获取token的同时，返回的信息可以看到返回的还有所有服务的请求地址即Catalog。其中标蓝的部分要重点注意，是openstack核心服务的访问端点。&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;113&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;access&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;token&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;issued_at&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2017-12-26T09:29:34.000000Z&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;expires&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2017-12-26T10:29:33.000000Z&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;strong&gt;&lt;span&gt;&quot;id&quot;: &quot;gAAAAABaQhZ-a-i7B_f8Vtrlh0NcEyDe9h0RcDLjqXYduJAA-GbA599iLthfbj4_rJMoHx3XNIiIZs18BDWKTu8X1pcaccWbd2BapglewqWreTjnT--fuVrQpN8bzEmAk_pZpC6MFEY93VzsuZGRGAym7hNGRKgfsgyhChJXalPVIDMLLwYCu2s&quot;,
      &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tenant&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Bootstrap project for initializing the cloud.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;enabled&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;audit_ids&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;b7Q0lp05SI2xcoBYBHAQwQ&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      ]
    },
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;serviceCatalog&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8774/v2.1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8774/v2.1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adc922e83ef447e7abca68e96119e60a&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;http://controller:8774/v2.1&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;compute&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;nova&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:9696&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:9696&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;3fa6e602366b424fb51002436b7485c8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;http://controller:9696&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;network&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;neutron&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v2/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v2/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;402b52c472f241fe84e994ec5fb90789&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v2/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;volumev2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;cinderv2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:9292&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:9292&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;39c50e9ed55d4d1486a037a85db863ba&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;http://controller:9292&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;image&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;glance&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v1/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v1/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0c827a2a02e84ed5aa8dc113c1329b33&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8776/v1/ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;volume&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;cinder&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8080/v1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8080/v1/AUTH_ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0ee0b857383a44d98970cce3fd0cdfd2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8080/v1/AUTH_ffd1a0df301045f1b20eef7d9e126dbf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;object-store&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;swift&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8778&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8778&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;43881ded3c564795908280a7408ec8a6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:8778&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;placement&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;placement&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      },
      {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
          {
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;adminURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:35357/v3/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RegionOne&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;internalURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:5000/v3/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0042fccfe6d6476385e2d48692cfebff&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;publicURL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://controller:5000/v3/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
          }
        ],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;endpoints_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;identity&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;keystone&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      }
    ],
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;roles_links&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [],
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;99c64dce212547a08f68a48f5b86044e&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;roles&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
        {
          &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
        }
      ],
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    },
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;is_admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,
      &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;roles&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: [
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;39a6815cad0e4e7c879de0092076ff3f&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
      ]
    }
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;以nova服务为例，具体分析其中的内容。包括：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171228093927847-1362568923.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中endpoints的内容是nova服务在keystone服务中注册的restful路径。在endpoint中从上到下的作用分别是：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;admin管理用户的URL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;域名&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;内部服务&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;nova服务的id&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;公共服务&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;nova服务操作&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;准备工作：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;restful api路径&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;               在openstack社区中有openstack  restful api的使用文档。&lt;a href=&quot;https://developer.openstack.org/api-guide/quick-start/&quot; target=&quot;_blank&quot;&gt;https://developer.openstack.org/api-guide/quick-start/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;               token值是在上面使用用户名和密码获取。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;完成以上准备工作我们来开始使用。首先查看官方文档中nova服务的api的描述。从api使用手册中进入Compute  API。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171228161857506-1155600999.png&quot; alt=&quot;&quot; width=&quot;861&quot; height=&quot;601&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;如下图看到的都是nova的操作，每个操作都是对应一个类型+路径。类型有GET查看类的操作，有POST设置类的操作。路径为/servers。以查看环境中的虚拟机为例，操作类型为GET，路径为/servers。这里的路径没有包括前面的端点，因为每个服务的端点端口号不同，版本信息不同。结合获取token时返回的端点信息为一个完整的路径。nova的端点信息为 &lt;span&gt;http://controller:8774/v2.1，&lt;/span&gt;&lt;span&gt;&lt;span&gt;所以请求的完整路径为http://controller:8774/v2.1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;/servers。使用时将controller换成控制节点的ip地址即可。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171228161947600-1228780324.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;查询主机:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;填写postman，填写的内容有4个点，分别是：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;请求类型。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;请求的URL地址，上面已经分析过完整的地址。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;设置访问的header，这里是设置token的key。第一步已经获取了token的值，剩余的访问都是使用token处理。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;设置token的值。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102094941081-1557358481.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;返回信息为环境中所有虚拟机的简要信息。我的环境中只有一个虚拟机，是上一篇文章中创建的虚拟机myinstance。注意name和id两个参数。一般在openstack中要么使用name操作虚拟机，要么使用id操作虚拟机，两者可以互换。记下该id，后面需要使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102095311253-471856801.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果想要查看虚拟机更详细的信息，可以使用/server/detail路径的api。如下是myinstance的详细信息，可以分析出使用的网络名为mynetwork。更多信息可以亲自动手查看一次。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102095520659-735161697.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上面介绍的是GET操作，GET操作一般都是查看内容，不涉及到传值。restful api的另一大操作是需要POST操作，当需要传入一些参数去改变操作对象时，使用为POST的类型。以暂停虚拟机为例，操作是类型+路径+body。&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;类型为POST。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;路径为/servers/server-id/action。server_id为上一步查询到的id信息。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;body是填入的暂停的动作，具体见官方手册。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229161809038-1530311121.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;暂停主机：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;暂停虚拟机填写的参数分别是：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;请求类型为post请求&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;URL为/servers/server-id/action&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;body填入动作：暂停。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102095701393-2049690630.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;br/&gt;&lt;span&gt;再次查询该虚拟机的详细信息是，能够查询到vm_state是paused状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102100202284-1060069611.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;通过上面postman调用restful api接口的操作，已经介绍了postman的基本使用技巧和restful api的使用方式。下面通过完成创建一个虚拟机的一个小目标来进一步学习restful api的使用技巧。&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;创建虚拟机&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;如下图是官方文档中给出的创建虚拟机的body内容。有四个参数：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;name&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;imageRef&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;flavorRef&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;network&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;name是我们自己定义的，剩余三个参数要自己查找。想要创建一个虚拟机，首先要查询到imageref、flavorref、networks，并选择合适的内容。然后组装查询到的内容，创建虚拟机。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229162724663-326159981.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;准备工作：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 一、查询镜像url。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从官网上找到镜像api介绍&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229163347788-2095940948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229165336992-487515487.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;span&gt;填写URL时和nova操作一样，要知道image服务端点，从获取token时返回的的服务类型中查找，可以得知image的端点是：&lt;span&gt;http://controller:9292。注意不要忘记了token。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102100542174-1596620531.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经过查询可知镜像的id为c980b3ee-99e7-4372-9ce4-354e7e7647fe。记下备用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、查询flavor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102143359956-395816558.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用nova的端点信息，加上/flavors路径。完整路径为：http://controller_ip:8774/v2.1/flavors。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102100713440-292797532.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 从返回信息中记下名为myflavor，flavor id为 e941b823-cdb0-45c5-9f0d-148770588970。记下备用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、查询network&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229164911898-1297376612.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;span&gt;查询官网网络api，可知，路径为/v2.0/networks，完整的URL为：&lt;span&gt;http://controller:9696/v2.0/networks。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102100958268-1355134333.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;从查询结果中选择名为mynetwork的网络， network id 为4bc273a0-e9a5-4a26-b713-509704d19368。记下备用。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、创建虚拟机&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;获取参数&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到目前为止，我们已经集齐了三颗龙珠，不是三个参数，接下来就可以创建虚拟机了。镜像、规格、网络分别如下：&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;镜像 c980b3ee-99e7-4372-9ce4-354e7e7647fe&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;规格 e941b823-cdb0-45c5-9f0d-148770588970&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;网络 4bc273a0-e9a5-4a26-b713-509704d193&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201712/1060878-20171229162724663-326159981.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;组装参数&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;根据手册组装我们自己的body信息，其中注意network的格式。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;server&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;: {
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my_second_instance&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;imageRef&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c980b3ee-99e7-4372-9ce4-354e7e7647fe&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;flavorRef&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;e941b823-cdb0-45c5-9f0d-148770588970&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;networks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: [{&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;uuid&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4bc273a0-e9a5-4a26-b713-509704d19368&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}]
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; 填写参数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;根据官网给出的参数，类型+URL+body。类型为POST，URL为http://controller_ip:8774/v2.1/servers，body为上面填写好的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102101206753-87123987.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; 返回信息如下&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102101248268-868259778.png&quot; alt=&quot;&quot; width=&quot;953&quot; height=&quot;424&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;再次查看环境中虚拟机，可以看到刚刚创建的名为my_second_instance的主机。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1060878/201801/1060878-20180102112855331-37727885.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;简单总结：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;restful api能够完成所有对openstack的操作，并且使用restful api已经比较深入的接触了openstack，至少知道了各种服务接口、服务之间的调用、组件之间的运作机制等。这对理解openstack框架有着深刻的意义。走到已经揭开了openstack朦胧的面纱，能见其轮廓。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:44:00 +0000</pubDate>
<dc:creator>金色旭光</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/goldsunshine/p/8119209.html</dc:identifier>
</item>
<item>
<title>（神州优车）数据交换平台架构分享 - 神州优车技术</title>
<link>http://www.cnblogs.com/ucarinc/p/7831752.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ucarinc/p/7831752.html</guid>
<description>&lt;p&gt;数据交换平台是指将分散建设的若干应用信息系统进行整合，通过计算机网络构建的信息交换平台，它使若干个应用子系统进行信息/数据的传输及共享，提高信息资源的利用率，成为进行信息化建设的基本目标，保证分布异构系统之间互联互通，建立中心数据库，完成数据的抽取、集中、加载、展现，构造统一的数据处理和交换。&lt;/p&gt;

&lt;h2 id=&quot;分布式的需要&quot;&gt;1.分布式的需要&lt;/h2&gt;
&lt;p&gt;PS：(分布式出现的两个驱动要素：1.业务场景越来越复杂，需要进行系统拆分；2.性能的需要)&lt;/p&gt;
&lt;h3 id=&quot;场景举例一eda&quot;&gt;场景举例一：EDA&lt;/h3&gt;
&lt;p&gt;通过数据交换平台，把数据库Log事件（如Mysql的binlog）发送到MQ，驱动后续流程（如:刷新缓存，构造搜索引擎，业务流程驱动&amp;lt;如:下单之后发短信&amp;gt;等）&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114124821171-891202529.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;场景举例二cqrs&quot;&gt;场景举例二：CQRS&lt;/h3&gt;
&lt;p&gt;【命令、查询分离】的思想本质上就是同一份数据建立两套视图：一套是模型清晰的Domain-Mode，代表业务实体，满足复杂业务逻辑的需要；另一套是查询视图，主要面向查询场景，不关心数据库范式，只关心查询最优最快&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114125701468-396008743.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;容灾备份的需要&quot;&gt;2.容灾备份的需要&lt;/h2&gt;
&lt;h3 id=&quot;场景举例一多机房&quot;&gt;场景举例一：多机房&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;多中心、多备份、异地多活等是很多大公司正在实践或者已经实践过的技术难题，这中间的核心便是一整套完整的数据同步方案&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;场景举例二数据镜像&quot;&gt;场景举例二：数据镜像&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;通过数据交换平台，可以创建各种类型的DB镜像，满足不同场景下的使用需要&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;场景举例三数据归档&quot;&gt;场景举例三：数据归档&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;通过增量交换，可以实现实时归档&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;异构重构的需要&quot;&gt;3.异构、重构的需要&lt;/h2&gt;
&lt;h3 id=&quot;场景举例一db升级换代&quot;&gt;场景举例一：DB升级换代&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;通过数据交换平台解决升级过程中的版本兼容性问题&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;场景举例二资产复用&quot;&gt;场景举例二：资产复用&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;任何一个公司都有大大小小的各种IT资产，通过数据交换平台，可以实现这些核心资产的整合、复用&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;场景举例三迁库拆库&quot;&gt;场景举例三：迁库、拆库&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;系统进行重构，业务应用要拆分为两个子系统，对应的数据库由一个拆成两个，需要数据交换平台先进行全量Copy，再进行增量同步，然后配合系统完成迁移对接，如下所示&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114132212874-589991748.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;总体架构图如下所示，整个平台由三个子系统组成&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114131343093-1716447546.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;ucar_datalink增量同步子系统&quot;&gt;ucar_datalink（增量同步子系统）&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;ucar_datalink是优车技术团队自研的一套数据同步中间件，主要满足各异构数据源之间的实时增量同步需求，具有高伸缩性、高扩展性和高性能等优点&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;ucar_datax全量同步子系统&quot;&gt;ucar_dataX（全量同步子系统）&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;ucar_datax是对Alibaba开源的datax进行了深度定制和改造，满足集团内的全量数据同步需求&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;admin管理监控子系统&quot;&gt;Admin（管理监控子系统）&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;管理子系统对整个增量和全量集群进行运维管理，包括：HA、同步申请自动处理、延迟监控、异常监控、机器监控等等&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Datalink借鉴了数个开源产品的设计&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;借鉴了Kafka-Connect的基础设施：分组、HA、Rebalance协议、Task模型等&lt;/li&gt;
&lt;li&gt;借鉴了Otter的诸多功能模型：领域模型抽象、双向同步、数据压缩合并、数据权重算法等&lt;/li&gt;
&lt;li&gt;参与了Linkedin的Databus的一些设计思想&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;datalink的基础设施模型&quot;&gt;1.Datalink的基础设施模型&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114142156999-114292237.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;manager&quot;&gt;Manager&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;整个Datalink集群的大脑，负载均衡协调器、配置管理、集群监控&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;group&quot;&gt;Group&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;分组是一个核心逻辑概念，通过分组实现组内自治、组间隔离，便于进行拆分管理&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;worker&quot;&gt;Worker&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;Worker是Task的运行容器，一个Worker节点运行一系列同步任务，Worker归属于某个分组&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;task&quot;&gt;Task&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;数据同步任务实例，由一个reader和至少一个writer组成，归属于某个分组，在一个分组内Task通过一定的负载均衡策略，被分配到不同的Worker上执行&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;rebalance&quot;&gt;Rebalance&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;Rebalance单位：分组；
Rebalance时机：Manager主备切换、Worker加入分组、Worker离开分组、新增Task、删除Task&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;datalink的领域模型&quot;&gt;2.Datalink的领域模型&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114143113421-495229857.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;contract&quot;&gt;Contract&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;针对每种类型的数据库，我们会抽象一套契约类型，有了这套契约便可实现Reader和Writer的任意组合
比如我们针对关系型数据库抽象一个契约，契约的核心类名为RdbEventRecord，代表一条数据库log事件变更，围绕这个契约，我们可以开发若干插件
如果是Reader插件，这个插件的一个核心功能就是做数据类型转换，如MysqlReader、SqlserverReader、OracleReader分别会把自己对应数据库的底层log-event转换为RdbEventRecord即可
如果是Writer插件，需要的是针对每一种契约实现一个处理器，如HbaseWriter，其主要目的是往hbase写数据，但是在不同的Task中，它对接的Reader是随机的，所以需要的是对不同类型契约的数据做适配&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;business-model&quot;&gt;Business Model&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;领域模型借鉴了Aalibaba-Otter的一些思想，针对数据同步领域的一些常见功能，我们进行了深度分析和抽象
* MediaSource：
是对数据源的抽象，所有类型的数据源都会保存到这个模型，神州内部已经支持的数据源有 MYSQL, SQLSERVER, ORACLE, HDFS,  HBASE, ELASTICSEARCH, ZOOKEEPER,POSTGRESQL
* Media：
是对数据存储单元的抽象，可以是关系型数据库的表、Hbase的表、ElastaicSearch的索引等等
* MediaMapping：
是对数据交换协议的抽象，所有类型的Media之间的数据同步关系都保存到这个模型
* 支持的功能
依托这套领域模型，可以实现的一些主要功能特性如下所示
    库别名
    表别名
    列别名
    列白名单
    列黑名单
    多表合一
    多表聚合
    主键跳过
    同步拦截器
    按权重同步&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;datalink的插件模型&quot;&gt;3.Datalink的插件模型&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114153156249-493681088.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;taskplugin&quot;&gt;Task&amp;amp;Plugin&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* Task是Datalink中的一个核心概念，一个运行中的Task就是一个数据同步任务
* Task由一个Reader和若干个Writer组成，即可以实现一对多的数据同步
* Task的数据同步流程：由Reader端取数据，然后放到内存队列，Writer端消费数据，成功的话执行Ack操作，失败的话执行Rollback操作
* Task提供了插件机制，一个Task只有在运行时才知道自己组装的Reader和Writer是什么
* Task的Reader和Writer插件在运行时有自己独立的ClassLoader，以解决同一进程中jar包冲突的问题
* 通过这套插件模型我们可以实现最大程度的基础设施复用：一套框架支持各种数据源之间的增量同步需求，框架稳定之后，后期关注重点只需要放到插件开发上即可，目前我们内部实现的插件有：
    MysqlReader
    FlexibleQReader（FlexibleQ：内部消息中间件）
    RdbmsWriter
    HbaseReader（建设中）
    ElasticSearchWriter
    HdfsWriter
    FlexibleQWriter
    HbaseWriter(建设中)&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;mysql同步到rdbms&quot;&gt;1.Mysql同步到RDBMS&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114154817171-997551918.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;简介&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* 该场景下的数据同步主要分为两种：一种是线上各个系统间的基础参数表同步，另外一种是线上数据同步到OLAP系统（主要是BI）
* 支持多种同步模式
    全局有序同步：完全按照源端binlog的执行顺序进行重放
    局部有序同步：以表为单位进行聚合，保证单表内同步是有序的
    完全并发：当开启merger功能的时候，在merge合并完之后，能保证同一张表的同一条数据只有一条binlog事件，此时可以完全打乱顺序，保证最终一致即可&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;mysql同步到elasticsearch&quot;&gt;2.Mysql同步到ElasticSearch&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114155809499-1210781049.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介-1&quot;&gt;简介&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* 订单库(Mysql)为应对线上的各种交易请求已经足够忙碌，查询操作必须放到二级系统中去做，所以实现了Mysql到ES的同步，所有查询走ES
* 在同步过程中，可以实现多表聚合，即将Mysql中多张有外键关系的表，在同步过程中进行聚合，到ES端，多张表的数据合并成一条&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;mysql同步到hadoop&quot;&gt;3.Mysql同步到Hadoop&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114160253249-368715447.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介-2&quot;&gt;简介&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* 作为大数据平台的第一层，datalink负责把线上生产库的binlog变更同步到Hadoop
* 数据处理平台每天凌晨对T-1的数据进行清洗、去重，把同步过去的binlog数据更新到spark-hive&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;mysql同步到mq&quot;&gt;4.Mysql同步到MQ&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114161516499-761298805.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介-3&quot;&gt;简介&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* 目前我们内部主要是通过监听binlog事件实现【缓存刷新】和【业务通知】功能&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;分布式db同步&quot;&gt;5.分布式DB同步&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1258524/201711/1258524-20171114160934999-1657828422.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;简介-4&quot;&gt;简介&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;* 类似于电商平台【买家和卖家】的划分，神州专车平台对应的划分为【乘客和司机】，为应对性能压力，我们对DB进行了分库处理，这样就产生了两个维度，主维度是乘客，子维度是司机
  我们需要把主维度产生的数据进行Re-Sharding操作同步到司机维度的分库，以满足司机数据查询的需求&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;主要列举这些，后续梳理完之后再进行补充&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:22:00 +0000</pubDate>
<dc:creator>神州优车技术</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ucarinc/p/7831752.html</dc:identifier>
</item>
<item>
<title>JVM类加载机制以及类缓存问题的处理 - </title>
<link>http://www.cnblogs.com/malcolmfeng/p/8177030.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/malcolmfeng/p/8177030.html</guid>
<description>
&lt;p&gt;　　当一个java项目启动的时候，JVM会找到main方法，根据对象之间的调用来对class文件和所引用的jar包中的class文件进行加载（其步骤分为加载、验证、准备、解析、初始化、使用和卸载），方法区中开辟内存来存储类的运行时数据结构（包括静态变量、静态方法、常量池、类结构等），同时在堆中生成相应的Class对象指向方法区中对应的类运行时数据结构。具体的类加载过程可以参考尚学堂高琪老师的视频教程：http://www.bjsxt.com/2014/down_0425/34.html第218集。&lt;/p&gt;
&lt;p&gt;　　用最简单的一句话来概括，类加载的过程就是JVM根据所需的class文件的路径，通过IO流的方式来读取class字节码文件，并通过一系列解析初始化等步骤来注入到内存。 java中的类加载器有：BootstrapClassLoader（最上层）、ExtClassLoader、AppClassLoader、以及用户自定义的ClassLoader（最下层）。JVM对于不同种类的jar包（或class文件），会有不同种类的类加载器进行加载。对应关系如下：　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;BootstrapClassLoader  用于加载JVM运行所需要的类：

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;resources.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;rt.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;sunrsasign.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;jsse.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;jce.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;charsets.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/lib/&lt;span&gt;jfr.jar:

　　　　JAVA_HOME&lt;/span&gt;/jre/&lt;span&gt;classes

　

　　ExtClassLoader 用于加载扩展类：　　

　　　　..&lt;/span&gt;/Java/&lt;span&gt;Extensions:

　　　　..&lt;/span&gt;/JAVA_HOME/jre/lib/&lt;span&gt;ext:

　　　　..&lt;/span&gt;/Library/Java/Extensions:/Network/Library/Java/&lt;span&gt;Extensions:

　　　　..&lt;/span&gt;/System/Library/Java/&lt;span&gt;Extensions:

　　　　..&lt;/span&gt;/lib/&lt;span&gt;java

　　

　　AppClassLoader 用于加载我们项目中ClassPath下所创建的类和jar包中引用的类。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　整个类加载，是通过一种叫做双亲委派的机制来进行加载。&lt;/p&gt;
&lt;p&gt;　　举例来说，一个类被最下层的加载器（用户自定义ClassLoader）进行加载，此加载器首先会调用上一层的加载器（AppClassLoader）进行加载，而AppClassLoader会继续转交给上层（ExtClassLoader）的加载器进行加载，直到BootstrapClassLoader。  如果BootstrapClassLoader所加载的类路径找不到此类，那么才会交给下一层的加载器（ExtClassLoader）进行加载，如果找不到此类，继续交给下一层（AppClassLoader）进行加载。以此类推，如果用户自定义的ClassLoader也找不到此类，那么程序就会抛出一个ClassNotFoundError。整个加载过程图示如下：&lt;img src=&quot;https://images0.cnblogs.com/blog2015/449064/201506/141255374414759.jpg&quot; alt=&quot;&quot; width=&quot;1001&quot; height=&quot;758&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（图片引用自：https://www.cnblogs.com/xing901022/p/4574961.html）&lt;/p&gt;
&lt;p&gt;　　类加载源的源码跟踪如下（在此对源码进行了适当的简化），读者可以点入源码进行查看：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;span&gt; java.lang.ClassLoader;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; ....

 &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; loadClass(String name, &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; resolve)
        &lt;/span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ClassNotFoundException
    {
        &lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; (getClassLoadingLock(name)) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&lt;span&gt; First，在虚拟机内存中查找是否已经加载过此类...类缓存的主要问题所在！！！&lt;/span&gt; &lt;/span&gt;
            Class&amp;lt;?&amp;gt; c =&lt;span&gt;&lt;span&gt; findLoadedClass&lt;/span&gt;(name);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (c == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;long&lt;/span&gt; t0 =&lt;span&gt; System.nanoTime();
                &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (parent != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {&lt;br/&gt;　　　　　　　　　　　　　　 &lt;span&gt;//先让上一层加载器进行加载&lt;/span&gt;
                        c &lt;/span&gt;= &lt;span&gt;parent.loadClass&lt;/span&gt;(name, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
                    } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                        c &lt;/span&gt;=&lt;span&gt; findBootstrapClassOrNull(name);
                    }
                } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (ClassNotFoundException e) {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ClassNotFoundException thrown if class not found
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; from the non-null parent class loader&lt;/span&gt;
&lt;span&gt;                }

                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (c == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
　　　　　　　　　　　　&lt;span&gt;//调用此类加载器所实现的findClass方法进行加载&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
                    c &lt;/span&gt;=&lt;span&gt;&lt;span&gt; findClass&lt;/span&gt;(name);&lt;/span&gt;&lt;span&gt;
                }
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (resolve) {
                resolveClass(c);
            }
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; c;
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在源码中可以完全领略到双亲委派机制的过程，其中最重要的三句代码已经进行了标注：&lt;/p&gt;
&lt;pre&gt;
&lt;em&gt;&lt;span&gt;　　　　&lt;span&gt;&lt;strong&gt;findLoadedClass&lt;span&gt;（&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;strong&gt;在虚拟机内存中查找是否已经加载过此类...类缓存的主要问题所在！！！&lt;em&gt;）&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;&lt;strong&gt;&lt;em&gt;　　　　parent.loadClass&lt;span&gt;（&lt;/span&gt;&lt;/em&gt;&lt;span&gt;先让上一层加载器进行加载&lt;em&gt;）&lt;/em&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;&lt;strong&gt;&lt;em&gt;　　　　findClass&lt;span&gt;（&lt;/span&gt;&lt;/em&gt;&lt;span&gt;调用此类加载器所实现的findClass方法进行加载&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt;&lt;strong&gt;）&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;如果用户需要自定义加载器，加载自己指定路径的class文件，需要继承ClassLoader，并实现findClass(String name)方法。举例如下：&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.jiefupay.utils;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.ByteArrayOutputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileInputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.InputStream;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ServiceClassLoader &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ClassLoader{

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String classPath;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ServiceClassLoader(String classPath) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.classPath =&lt;span&gt; classPath;
    }
    
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 重写父类的findClass 方法。  父类的loadClass会调用此方法
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; findClass(String name) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ClassNotFoundException {
   &lt;/span&gt;
        Class&amp;lt;?&amp;gt; c = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        
        &lt;/span&gt;&lt;span&gt;byte&lt;/span&gt;[] classData =&lt;span&gt; getClassData(name);
        
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (classData!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            c &lt;/span&gt;= defineClass(name, classData, 0&lt;span&gt;, classData.length);
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ClassNotFoundException();
        }
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; c;
    }
　　&lt;br/&gt;　　&lt;br/&gt;　　 &lt;span&gt;// 将class文件通过IO流读取，转化为字节数组
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;byte&lt;/span&gt;&lt;span&gt;[] getClassData(String name) {
        
        String path &lt;/span&gt;= classPath + &quot;/&quot;+ name.replace('.', '/') + &quot;.class&quot;&lt;span&gt;;
        
        InputStream iStream &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        ByteArrayOutputStream byteArrayOutputStream &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ByteArrayOutputStream();
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            iStream &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; FileInputStream(path);
            
            &lt;/span&gt;&lt;span&gt;byte&lt;/span&gt;[] buffer = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;byte&lt;/span&gt;[1024&lt;span&gt;];
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; temp = 0&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; ((temp = iStream.read(buffer))!=-1&lt;span&gt;) {
                byteArrayOutputStream.write(buffer, &lt;/span&gt;0&lt;span&gt;, temp);
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (byteArrayOutputStream!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; byteArrayOutputStream.toByteArray();
            }
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            e.printStackTrace();
        }&lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (iStream!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                    iStream.close();
                }
            } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
                e.printStackTrace();
            }
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (byteArrayOutputStream!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                    byteArrayOutputStream.close();
                }
            } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
                e.printStackTrace();
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　对类加载器的使用代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ServiceClassLoader serviceClassLoader = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ServiceClassLoader(&quot;c:\myclass&quot;);
Czlass&lt;/span&gt;&amp;lt;?&amp;gt; c = ServiceClassLoader.loadClass(&quot;com.jiefupay.service.Myclass&quot;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　如果&lt;span&gt;用同一个&lt;em id=&quot;__mceDel&quot;&gt;ServiceClassLoader&lt;/em&gt;对象去加载同一个Class文件多次，每次加载后的Class对象为同一个！ 然而如果new不同的自定义ClassLoader去加载同一个Class文件，则每次会返回不同的Class对象。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　注意：&lt;span&gt;不能将所要加载的Class文件放到classpath目录及其任何子目录下，否则会被AppClassLoader优先加载&lt;/span&gt;（这是由于类加载采用双亲委派机制，同时AppClassLoader可以加载所有在classpath下的class文件），&lt;span&gt;每次都是同一个AppClassLoader进行加载，因此会出现类缓存问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt;这样就解决了通常在JVM类加载时，直接使用反射出现的类缓存的问题。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;　　&lt;/span&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;br/&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 02 Jan 2018 06:21:00 +0000</pubDate>
<dc:creator>&amp;amp;lt;!--111--&amp;amp;gt;</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/malcolmfeng/p/8177030.html</dc:identifier>
</item>
<item>
<title>Python函数篇（6）-常用模块及简单的案列 - 无敌小怪兽</title>
<link>http://www.cnblogs.com/Chen-Zhipeng/p/8176917.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Chen-Zhipeng/p/8176917.html</guid>
<description>&lt;p&gt;  函数的优点之一，就是可以使用函数将代码块与主程序分离，通过给函数指定一个描述性的名称，并将函数存储在被称为模块的独立文件中，再将模块导入主程序中，通过import语句允许在当前运行的程序文件中使用模块中的代码，&lt;em&gt;一个.py文件就称为一个模块，包含了Python对象定义和Python语句&lt;/em&gt;。&lt;br/&gt;  如下就是一个简单的模块cal.py&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; cal(x,y):
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;y&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  导入模块的方法有很多种&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; module      &lt;span class=&quot;co&quot;&gt;#导入整个模块&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; module.xx.xx &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; xx     &lt;span class=&quot;co&quot;&gt;#导入模块中的特定函数&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; module.xx.xx &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; xx &lt;span class=&quot;im&quot;&gt;as&lt;/span&gt; rename    &lt;span class=&quot;co&quot;&gt;#使用as给函数指定别名&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; module.xx.xx &lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;    &lt;span class=&quot;co&quot;&gt;#导入模块中的所有函数（不推荐）&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  对于上面一个模块，如果想要在另一文件中调用它，即:&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1195713/201801/1195713-20180102140438018-1109750628.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;  这种就通过import导入，但是调用的时候需要使用&lt;strong&gt;模块名.函数名&lt;/strong&gt;的方式调用,即&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; cal
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(cal.cal(&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;))&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  那么函数再导入模块的时候是以哪个路径为基准呢？&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(sys.path)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  通过sys.path输出的路径，就是寻找该模块的基准路径。&lt;br/&gt;  模块分为三种&lt;br/&gt;  - &lt;em&gt;自定义模块&lt;/em&gt;&lt;br/&gt;  - &lt;em&gt;第三方模块&lt;/em&gt;&lt;br/&gt;  - &lt;em&gt;内置模块&lt;/em&gt;&lt;br/&gt;  - &lt;em&gt;自定义模块&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;time&lt;/strong&gt;&lt;br/&gt;时间有关的操作，有三种表达方式：&lt;/li&gt;
&lt;li&gt;&lt;em&gt;1.时间戳(time.time)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2.结构化时间(time.localtime)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;3.格式化的字符串(time.striftime)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; time
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.time())    &lt;span class=&quot;co&quot;&gt;#时间戳，是指从1970年1月1日0点0分到当前时间过了多少秒，常用来计算&lt;/span&gt;
运行结果：&lt;span class=&quot;fl&quot;&gt;1513730364.4014938&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.localtime())   &lt;span class=&quot;co&quot;&gt;#结构化时间，通过这种方式，可以截取具体的年月日时分秒等信息&lt;/span&gt;
运行结果：time.struct_time(tm_year&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2017&lt;/span&gt;, tm_mon&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;, tm_mday&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, tm_hour&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;, tm_min&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;, tm_sec&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;58&lt;/span&gt;, tm_wday&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, tm_yday&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;354&lt;/span&gt;, tm_isdst&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
t&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;time.localtime()
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(t.tm_year)      &lt;span class=&quot;co&quot;&gt;#运行结果：2017 可以通过.关键字的方式，截取想要的信息&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.strftime(&lt;span class=&quot;st&quot;&gt;&quot;%Y-%m-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%X&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;))    &lt;span class=&quot;co&quot;&gt;#格式化的字符串，必须写入想输出的时间格式&lt;/span&gt;
运行结果：&lt;span class=&quot;dv&quot;&gt;2017-12-20&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;08&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;48&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;01&lt;/span&gt;
将元组形式的时间转化为字符串形式，返回时间形式为：Thu Dec &lt;span class=&quot;dv&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;09&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2017&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.asctime())
返回结果格式同asctime
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.ctime())
返回UTC时间结构化时间
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.gmtime())&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  三种表达方式的互相转化&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;格式化的字符串转换成结构化时间：
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.strptime(&lt;span class=&quot;st&quot;&gt;&quot;2017-12-20&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;%Y-%m-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;))
将结构化时间转换成时间戳
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.mktime(time.localtime()))
将结构化时间转换成格式化的字符串
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(time.strftime(&lt;span class=&quot;st&quot;&gt;&quot;%Y-%m-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%X&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;,time.localtime()))&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;random&lt;/strong&gt;&lt;br/&gt;随机模块，主要功能如下:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; random
&lt;span class=&quot;co&quot;&gt;#随机生成一个0-1的浮点数&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random.random())
&lt;span class=&quot;co&quot;&gt;#随机生成一个整数&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#生成一个指定范围内的随机浮点数&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random.uniform(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;))
&lt;span class=&quot;co&quot;&gt;#随机生成一个整数&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random.randint(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;))
&lt;span class=&quot;co&quot;&gt;#从指定范围内，按指定基数递增的集合中 获取一个随机数&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random.randrange(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))    &lt;span class=&quot;co&quot;&gt;#随机取10-100之间的偶数&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#从序列中随机获取一个元素&lt;/span&gt;
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random.choice([&lt;span class=&quot;st&quot;&gt;&quot;tuple&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;list&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;dic&quot;&lt;/span&gt;]))
&lt;span class=&quot;co&quot;&gt;#将一个列表中的元素打乱&lt;/span&gt;
p&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&quot;tuple&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;list&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;dic&quot;&lt;/span&gt;]
random.shuffle(p)
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(p)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  随机数小案例 ，生成一个五位的随机数&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; random
&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; random_code():
    res&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;):            
        num&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;random.randint(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;)           
        alf&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;chr&lt;/span&gt;(random.randint(&lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;))
        result&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(random.choice([num,alf]))
        res&lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt;result
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; res
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(random_code())&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;  提供对操作系统进行调用的接口，该模块的介绍我在linux操作系统下完成&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;os.getcwd()                 获取当前所在路径
os.chdir(&lt;span class=&quot;st&quot;&gt;&quot;test&quot;&lt;/span&gt;)            改变当前的工作路径，相当于cd
os.makedirs(&lt;span class=&quot;st&quot;&gt;'test/test1'&lt;/span&gt;)   创建多级目录
os.removedirs(&lt;span class=&quot;st&quot;&gt;'test1'&lt;/span&gt;)      递归删除，如目录为空，则删除
os.mkdir(&lt;span class=&quot;st&quot;&gt;'test'&lt;/span&gt;)            创建单级目录
os.rmdir(&lt;span class=&quot;st&quot;&gt;'dirname'&lt;/span&gt;)         删除单级空目录，目录不为空无法删除，报错
os.listdir(&lt;span class=&quot;st&quot;&gt;'dirname'&lt;/span&gt;)       列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印
os.remove()                 删除一个文件
os.rename(&lt;span class=&quot;st&quot;&gt;&quot;oldname&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;new&quot;&lt;/span&gt;)  重命名文件，用“，”分割
os.stat(&lt;span class=&quot;st&quot;&gt;'path/filename'&lt;/span&gt;)    获取文件&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;目录信息
os.sep                      操作系统的路径分隔符，win下为&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;,Linux下为&lt;span class=&quot;st&quot;&gt;&quot;/&quot;&lt;/span&gt;
os.linesep                  当前平台使用的行终止符，win下为&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\t\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;,Linux下为&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;
os.pathsep                  用于分割文件路径的字符串
os.name                     字符串指示当前使用平台。win&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'nt'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; Linux&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'posix'&lt;/span&gt;
os.system(&lt;span class=&quot;st&quot;&gt;&quot;bash command&quot;&lt;/span&gt;)   运行shell命令，直接显示
os.environ                  获取系统环境变量
os.path.abspath(path)       返回path规范化的绝对路径
os.path.split(path)         将path分割成目录和文件名二元组返回
os.path.dirname(path)       返回path的目录。其实就是os.path.split(path)的第一个元素
os.path.basename(path)      返回path最后的文件名。如何path以／或&lt;span class=&quot;op&quot;&gt;\&lt;/span&gt;结尾，那么就会返回空值。即os.path.split(path)的第二个元素
os.path.join(path1[, path2[, ...]])  将多个路径组合后返回，第一个绝对路径之前的参数将被忽略&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;sys.argv           命令行参数List，第一个元素是程序本身路径
sys.exit(n)        退出程序，正常退出时exit(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
sys.version        获取Python解释程序的版本信息
sys.maxint         最大的Int值
sys.path           返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值
sys.platform       返回操作系统平台名称
sys.stdin          输入
sys.stdout         输出
sys.stderror       错误&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  &lt;em&gt;进度百分比小案例&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; time
&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; calc(num, total):
    rate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;float&lt;/span&gt;(num) &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;float&lt;/span&gt;(total)     &lt;span class=&quot;co&quot;&gt;#float 浮点数关键字&lt;/span&gt;
    rate_num &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;int&lt;/span&gt;(rate &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    r &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%d%%&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; (rate_num, )          &lt;span class=&quot;co&quot;&gt;#要加上/r转义符，表示将输出的内容返回到第一个指针，即覆盖前面的内容&lt;/span&gt;
    sys.stdout.write(r)
    sys.stdout.flush()

&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'__main__'&lt;/span&gt;:              &lt;span class=&quot;co&quot;&gt;#这条语句，如果用在被调用文件里面，用于被调用文件的一个测试&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;101&lt;/span&gt;):                &lt;span class=&quot;co&quot;&gt;#  如果放在执行文件里面，就是不想让该文件让齐塔程序调用&lt;/span&gt;
        time.sleep(&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)
        calc(i, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  &lt;em&gt;进度条小案例&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; time
&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;):
    sys.stdout.write(&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;)
    time.sleep(&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)
    sys.stdout.flush()&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  因为工作原因，最近一周没有更新博客，我会在这周补回来，下一篇文章我会重点写re模块。&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:17:00 +0000</pubDate>
<dc:creator>无敌小怪兽</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Chen-Zhipeng/p/8176917.html</dc:identifier>
</item>
<item>
<title>SpringMVC对包的扫描范围扩大后，导致的事务配置不生效问题 - synta</title>
<link>http://www.cnblogs.com/zhaojz/p/8176052.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhaojz/p/8176052.html</guid>
<description>&lt;p&gt;项目使用的框架：Spring 4.1.4 + Hibernate 4.3.8 + MySQL。&lt;/p&gt;
&lt;p&gt;web.xml中对Spring的配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 把 Spring 容器集成到 Web 应用里面 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      org.springframework.web.context.ContextLoaderListener
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; spring配置文件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:/applicationContext.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;DispatcherServlet是前端控制器设计模式的实现，提供Spring Web MVC的集中访问点，而且负责职责的分派，
  而且与Spring IoC容器无缝集成，从而可以获得Spring的所有好处。&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;DispatcherServlet会默认加载[servlet-name]-servlet.xml文件&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;项目使用AOP声明式事务配置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:advice &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;transactionAdvice&quot;&lt;/span&gt;&lt;span&gt; transaction-manager&lt;/span&gt;&lt;span&gt;=&quot;transactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;query*&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;get*&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;save*&quot;&lt;/span&gt;&lt;span&gt; rollback-for&lt;/span&gt;&lt;span&gt;=&quot;Exception&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;update*&quot;&lt;/span&gt;&lt;span&gt; rollback-for&lt;/span&gt;&lt;span&gt;=&quot;Exception&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:advice&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;只对业务逻辑层实施事务 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:pointcut &lt;/span&gt;&lt;span&gt;expression&lt;/span&gt;&lt;span&gt;=&quot;execution(* com.zhimajp.auction.service.impl..*.*(..))&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;busiLogicService&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:advisor &lt;/span&gt;&lt;span&gt;advice-ref&lt;/span&gt;&lt;span&gt;=&quot;transactionAdvice&quot;&lt;/span&gt;&lt;span&gt; pointcut-ref&lt;/span&gt;&lt;span&gt;=&quot;busiLogicService&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;采用annotation方式声明Spring Bean。&lt;/p&gt;
&lt;p&gt;遇到的问题是：通过Hibernate执行save方法后，数据未能插入到DB中并且控制台也没有打印出SQL（控制台没有输出）。&lt;/p&gt;

&lt;p&gt;通过仔细排查，阅读网络文章后，发现问题出现在spring-servlet.xml中：&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;扫描注解包 配置这条便可移除 &amp;lt;context:annotation-config/&amp;gt;&lt;/span&gt; &lt;span&gt;--&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan&lt;/span&gt; &lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;com.zhimajp.auction&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;上述配置的结果是：SpringMVC对Service和Dao的所有package进行了扫描装载。&lt;/p&gt;
&lt;h4&gt;问题分析：&lt;/h4&gt;
&lt;p&gt;1、Spring与SpringMVC属于父子容器关系。框架启动时先启动Spring容器，而后启动SpringMVC容器。子容器可以访问父容器中的Bean，而父容器不能访问子容器中的Bean。&lt;/p&gt;
&lt;p&gt;2、由于SpringMVC在扫描时扩大了扫描范围，装载了@Service标识的类的实例，从而导致Controller层在注入Service时，实际注入的时子容器中的Service实例。&lt;/p&gt;
&lt;p&gt;3、事务被配置在父容器中，Spring父容器在装载Service时会同时应用事务配置，而SpringMVC只是单纯加载Service的实例。&lt;/p&gt;
&lt;h4&gt;问题解决：&lt;/h4&gt;
&lt;p&gt;将SpringMVC的包扫描限定在Controller。&lt;/p&gt;
&lt;p&gt;  &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan&lt;/span&gt; &lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;com.zhimajp.auction.controller&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;/p&gt;


&lt;h4&gt;打印容器管理的bean名称&lt;/h4&gt;
&lt;p&gt;我们使SpringMVC扫描Controller和Service，Spring扫描Service和DAO。&lt;/p&gt;
&lt;p&gt;使用以下代码打印父子窗口管理的bean名称：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
　　　　　WebApplicationContext webApplicationContext =&lt;span&gt; WebApplicationContextUtils.getWebApplicationContext(request.getSession().getServletContext());
        String[] definationBeanNames &lt;/span&gt;= webApplicationContext.getBeanNamesForAnnotation(Service.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
        List&lt;/span&gt;&amp;lt;String&amp;gt; names = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;&lt;span&gt;(Arrays.asList(definationBeanNames));
        Collections.addAll(names, webApplicationContext.getBeanNamesForAnnotation(Controller.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;));
        Collections.addAll(names, webApplicationContext.getBeanNamesForAnnotation(Repository.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;));
        System.out.println(&lt;/span&gt;&quot;Spring 父容器管理的Bean：&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(String beanName : names){
            System.out.println(beanName);
        }&lt;br/&gt;webApplicationContext &lt;/span&gt;=&lt;span&gt; RequestContextUtils.getWebApplicationContext(request);
        definationBeanNames &lt;/span&gt;= webApplicationContext.getBeanNamesForAnnotation(Service.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
        names &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;&lt;span&gt;(Arrays.asList(definationBeanNames));
        Collections.addAll(names, webApplicationContext.getBeanNamesForAnnotation(Controller.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;));
        Collections.addAll(names, webApplicationContext.getBeanNamesForAnnotation(Repository.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;));

        System.out.println(&lt;/span&gt;&quot;SpringMVC 子容器管理的Bean：&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(String beanName : names){
            System.out.println(beanName);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/672666/201801/672666-20180102125514487-1838082646.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 我们发现父子容器同时维护了Service层的类的实例，并且应该是两个独立的实例。&lt;/p&gt;
&lt;h4&gt;只使用子容器，而完全不使用父容器&lt;/h4&gt;
&lt;p&gt;现在我们测试另外一个场景&lt;/p&gt;
&lt;p&gt;将web.xml中，注释掉ContextLoaderListener，修改配置为：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;DispatcherServlet是前端控制器设计模式的实现，提供Spring Web MVC的集中访问点，而且负责职责的分派，
  而且与Spring IoC容器无缝集成，从而可以获得Spring的所有好处。&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;DispatcherServlet会默认加载[servlet-name]-servlet.xml文件&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:/applicationContext.xml;/WEB-INF/spring-servlet.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;移除了父容器，所有配置文件全部交由SpringMVC加载 。&lt;/p&gt;
&lt;p&gt;打印结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/672666/201801/672666-20180102131208565-998524866.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;子容器管理所有的bean，而父容器为null（代码抛出了空指针）。&lt;/p&gt;
&lt;p&gt;项目同样运行正常。&lt;/p&gt;

&lt;p&gt;1、当事务交由Spring管理时，Spring负责管理session中事务的开启、关闭、flush等步骤，开发者只需调用例如save、update方法即可。&lt;/p&gt;
&lt;p&gt;2、当web项目框架中存在父子容器，且事务由父容器管理时，就应当注意SpringMVC对包的扫描范围并且只需扫描Controller组件。官方推荐：父子容器应当各执其责。&lt;/p&gt;
&lt;p&gt;3、如果子容器加载了Service的话，则在该实例上事务并不会生效。也就是Spring不会在service的方法被调用时自动开启事务。&lt;/p&gt;
&lt;p&gt;4、基于2中的前提：SpringMVC应只加载web相关配置（视图配置、Controller注解扫描），由Spring加载数据源、事务配置、Service和Dao注解扫描。&lt;/p&gt;

</description>
<pubDate>Tue, 02 Jan 2018 06:13:00 +0000</pubDate>
<dc:creator>synta</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhaojz/p/8176052.html</dc:identifier>
</item>
<item>
<title>[数据清洗]-混乱的邮编数据 - Boyce Yang</title>
<link>http://www.cnblogs.com/BoyceYang/p/8176958.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/BoyceYang/p/8176958.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt; 内容概要：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 导入需要的包&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pandas as pd
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; numpy as np

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 可以展示比较多的列，60 列&lt;/span&gt;
pd.set_option(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;display.line_width&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, 5000&lt;span&gt;) 
pd.set_option(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;display.max_columns&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, 60)
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt; 混杂数据最重要的一个问题就是：怎么知道是否是混杂的数据。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;下面准备使用 NYC 311 服务请求数据集，因为这个是一个庞杂的数据集。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
requests = pd.read_csv(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;../data/311-service-requests.csv&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p align=&quot;left&quot;&gt;我们开始少看几列，因为现在一直 Zip Code（邮编）有些问题，所以我们首先看看这个。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;为了搞清楚 whether 列是否有问题，常常使用 .unique() 来查看一列的所有数据。如果是一个数值类型的列，最好使用一个直方图来获取数值的分布情况。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;477&quot;&gt;
&lt;pre&gt;
requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;].unique()

array([&lt;/span&gt;11432.0, 11378.0, 10032.0, 10023.0, 10027.0, 11372.0, 11419.0&lt;span&gt;,
       &lt;/span&gt;11417.0, 10011.0, 11225.0, 11218.0, 10003.0, 10029.0, 10466.0&lt;span&gt;,
       &lt;/span&gt;11219.0, 10025.0, 10310.0, 11236.0, nan, 10033.0, 11216.0, 10016.0&lt;span&gt;,
       &lt;/span&gt;10305.0, 10312.0, 10026.0, 10309.0, 10036.0, 11433.0, 11235.0&lt;span&gt;,
       &lt;/span&gt;11213.0, 11379.0, 11101.0, 10014.0, 11231.0, 11234.0, 10457.0&lt;span&gt;,
       &lt;/span&gt;10459.0, 10465.0, 11207.0, 10002.0, 10034.0, 11233.0, 10453.0&lt;span&gt;,
       &lt;/span&gt;10456.0, 10469.0, 11374.0, 11221.0, 11421.0, 11215.0, 10007.0&lt;span&gt;,
       &lt;/span&gt;10019.0, 11205.0, 11418.0, 11369.0, 11249.0, 10005.0, 10009.0&lt;span&gt;,
       &lt;/span&gt;11211.0, 11412.0, 10458.0, 11229.0, 10065.0, 10030.0, 11222.0&lt;span&gt;,
       &lt;/span&gt;10024.0, 10013.0, 11420.0, 11365.0, 10012.0, 11214.0, 11212.0&lt;span&gt;,
       &lt;/span&gt;10022.0, 11232.0, 11040.0, 11226.0, 10281.0, 11102.0, 11208.0&lt;span&gt;,
       &lt;/span&gt;10001.0, 10472.0, 11414.0, 11223.0, 10040.0, 11220.0, 11373.0&lt;span&gt;,
       &lt;/span&gt;11203.0, 11691.0, 11356.0, 10017.0, 10452.0, 10280.0, 11217.0&lt;span&gt;,
       &lt;/span&gt;10031.0, 11201.0, 11358.0, 10128.0, 11423.0, 10039.0, 10010.0&lt;span&gt;,
       &lt;/span&gt;11209.0, 10021.0, 10037.0, 11413.0, 11375.0, 11238.0, 10473.0&lt;span&gt;,
       &lt;/span&gt;11103.0, 11354.0, 11361.0, 11106.0, 11385.0, 10463.0, 10467.0&lt;span&gt;,
       &lt;/span&gt;11204.0, 11237.0, 11377.0, 11364.0, 11434.0, 11435.0, 11210.0&lt;span&gt;,
       &lt;/span&gt;11228.0, 11368.0, 11694.0, 10464.0, 11415.0, 10314.0, 10301.0&lt;span&gt;,
       &lt;/span&gt;10018.0, 10038.0, 11105.0, 11230.0, 10468.0, 11104.0, 10471.0&lt;span&gt;,
       &lt;/span&gt;11416.0, 10075.0, 11422.0, 11355.0, 10028.0, 10462.0, 10306.0&lt;span&gt;,
       &lt;/span&gt;10461.0, 11224.0, 11429.0, 10035.0, 11366.0, 11362.0, 11206.0&lt;span&gt;,
       &lt;/span&gt;10460.0, 10304.0, 11360.0, 11411.0, 10455.0, 10475.0, 10069.0&lt;span&gt;,
       &lt;/span&gt;10303.0, 10308.0, 10302.0, 11357.0, 10470.0, 11367.0, 11370.0&lt;span&gt;,
       &lt;/span&gt;10454.0, 10451.0, 11436.0, 11426.0, 10153.0, 11004.0, 11428.0&lt;span&gt;,
       &lt;/span&gt;11427.0, 11001.0, 11363.0, 10004.0, 10474.0, 11430.0, 10000.0&lt;span&gt;,
       &lt;/span&gt;10307.0, 11239.0, 10119.0, 10006.0, 10048.0, 11697.0, 11692.0&lt;span&gt;,
       &lt;/span&gt;11693.0, 10573.0, 83.0, 11559.0, 10020.0, 77056.0, 11776.0, 70711.0&lt;span&gt;,
       &lt;/span&gt;10282.0, 11109.0, 10044.0, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10452&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11233&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10468&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10310&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11105&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10462&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10029&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10301&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10457&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10467&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10469&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10035&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10031&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11226&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10454&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11221&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10025&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11229&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11235&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11422&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10472&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11208&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11102&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10032&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11216&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10473&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10463&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11213&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10302&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11231&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10470&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11204&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11104&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11212&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10466&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11416&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11214&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10009&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11692&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11385&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11423&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10024&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11435&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10312&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10030&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11106&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10033&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10303&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11215&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11222&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11354&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10034&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11420&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10304&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10019&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11237&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11249&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11230&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11372&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11207&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11378&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11419&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11361&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10011&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11357&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10012&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11358&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10002&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11374&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10007&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11234&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10065&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11369&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11434&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11205&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11206&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11415&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11236&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11218&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11413&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10458&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11101&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11355&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10023&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11368&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10314&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11421&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10018&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11223&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10455&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11377&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11433&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11375&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10037&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11209&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10459&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10128&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10014&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10282&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11373&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10451&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11238&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11211&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10038&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11694&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11203&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11691&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11232&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10305&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10021&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11228&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10036&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10017&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11217&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11219&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10308&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10465&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11379&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11414&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10460&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11417&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11220&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11366&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10027&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11370&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10309&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11412&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11356&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10456&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11432&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10022&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10013&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11367&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10026&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10475&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11210&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11364&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11426&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10471&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10119&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11224&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11418&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11429&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11365&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10461&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11239&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10039&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00083&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11411&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10075&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11360&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10453&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10028&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11430&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10307&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10069&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10474&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11428&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11436&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11362&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11693&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10464&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11427&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10044&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11363&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10006&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;02061&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;77092-2016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10280&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11109&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;14225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;55164-0737&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;19711&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;000000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;NO CLUE&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;90010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10281&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11747&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23541&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11776&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11697&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11788&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;07604&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, 10112.0, 11788.0, 11563.0, 11580.0, 7087.0, 11042.0&lt;span&gt;,
       &lt;/span&gt;7093.0, 11501.0, 92123.0, 0.0, 11575.0, 7109.0, 11797.0, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10803&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11716&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11722&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11549-3650&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10162&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;92123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23502&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11518&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;07020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;08807&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11577&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11563&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;61702&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;29616-0759&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;35209-3114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11520&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11735&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10129&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;41042&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11590&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, 6901.0, 7208.0, 11530.0&lt;span&gt;,
       &lt;/span&gt;13221.0, 10954.0, 11735.0, 10103.0, 7114.0, 11111.0, 10107.0], dtype=object)
&lt;/pre&gt;&lt;/div&gt;

&lt;p align=&quot;left&quot;&gt;当我们在 “Incident Zip” 列使用 .unique()，很轻易的发现这些数据很混乱。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;下面是问题列表：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;类型问题，有些值是字符串的数值，有些是浮点型的数值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;空值问题，有些值是 nan&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式问题，有些 Zip Code 中间有“-”，有些是有两位数值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;正规化问题，有些值是 Pandas 不能识别的值，如 ‘N/A’或 ‘NO CLUE’&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p align=&quot;left&quot;&gt;如何处理：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;正规化 ‘N/A’或 ‘NO CLUE’为常规的 nan 值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仔细分析 ‘83’，再决定如何处理&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全部转换为 string 类型&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p align=&quot;left&quot;&gt;我们在使用 pd.read_csv() 时候，通过传递可选参数 “na_values”来清洗一部分数据。我们还会通过参数指定 “Incident Zip”的数据类型，将类型确定为字符串，而不是浮点型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;287&quot;&gt;
&lt;pre&gt;
na_values = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;NO CLUE&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;N/A&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
requests &lt;/span&gt;= pd.read_csv(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;../data/311-service-requests.csv&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, na_values=na_values, dtype={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: str})

requests[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;].unique()

array([&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11432&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11378&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10032&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10023&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10027&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11372&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11419&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11417&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10011&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11218&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10029&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10466&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11219&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10025&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10310&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11236&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, nan, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10033&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11216&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10305&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10312&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10026&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10309&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10036&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11433&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11235&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11213&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11379&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11101&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10014&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11231&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11234&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10457&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10459&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10465&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11207&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10002&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10034&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11233&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10453&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10456&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10469&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11374&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11221&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11421&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11215&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10007&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10019&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11205&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11418&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11369&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11249&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10009&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11211&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11412&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10458&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11229&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10065&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10030&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11222&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10024&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10013&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11420&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11365&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10012&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11214&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11212&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10022&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11232&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11226&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10281&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11102&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11208&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10472&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11414&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11223&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11220&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11373&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11203&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11691&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11356&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10017&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10452&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10280&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11217&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10031&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11358&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10128&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11423&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10039&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11209&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10021&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10037&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11413&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11375&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11238&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10473&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11354&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11361&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11106&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11385&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10463&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10467&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11204&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11237&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11377&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11364&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11434&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11435&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11210&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11228&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11368&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11694&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10464&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11415&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10314&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10301&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10018&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10038&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11105&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11230&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10468&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11104&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10471&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11416&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10075&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11422&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11355&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10028&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10462&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10461&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11224&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11429&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10035&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11366&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11362&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11206&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10460&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10304&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11360&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11411&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10455&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10475&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10069&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10303&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10308&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10302&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11357&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10470&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11367&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11370&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10454&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10451&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11436&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11426&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10153&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11428&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11427&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11363&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10474&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11430&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10307&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11239&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10119&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10006&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10048&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11697&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11692&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11693&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10573&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00083&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11559&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;77056&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11776&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;70711&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10282&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11109&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10044&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;02061&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;77092-2016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;14225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;55164-0737&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;19711&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;000000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;90010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11747&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23541&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11788&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07604&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10112&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11563&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11580&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07087&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11042&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;07093&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11501&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;92123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11575&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07109&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11797&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10803&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11716&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11722&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11549-3650&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10162&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23502&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11518&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;07020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;08807&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11577&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;61702&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;29616-0759&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;35209-3114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11520&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11735&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10129&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;41042&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11590&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;06901&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07208&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11530&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;13221&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10954&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11111&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10107&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
rows_with_dashes = requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].str.contains(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).fillna(False)
len(requests[rows_with_dashes])

&lt;/span&gt;5&lt;span&gt;

requests[rows_with_dashes]

&lt;/span&gt;29136    77092-2016
30939    55164-0737
70539    11549-3650
85821    29616-0759
89304    35209-3114&lt;span&gt;
Name: Incident Zip, dtype: object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;我们可以简单粗暴的认为这些数据是缺失值，将其删除&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;][rows_with_dashes] = np.nan
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;但是，仔细分析下来9位数字长度的邮编也是正常的，接下来，我们查找下所有大于 5 位数字长度的邮编，确保这些是正常的，然后截断他们&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
long_zip_codes = requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].str.len() &amp;gt; 5&lt;span&gt;
requests[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;][long_zip_codes].unique()

array([&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;77092-2016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;55164-0737&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;000000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11549-3650&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;29616-0759&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;35209-3114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;这些都是可以被我们截断的&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] = requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].str.slice(0, 5) 
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;完成&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;最开始，认为 00083 是一个错误的邮编，最后发现这是一个真实存在的邮编！数据中还有 “00000” 的邮编，我们还是需要考虑下这个邮编的，下面我们找出所有这样邮编的数据。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
requests[requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;这个结果看起来并不好，还是把他们赋值成 nan&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
zero_zips = requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
requests[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;][zero_zips] = np.nan
&lt;/pre&gt;&lt;/div&gt;

&lt;p align=&quot;left&quot;&gt;见证一下阶段性的成果&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;281&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 正常这里是不需要再次进行类型转换，我这里不转换，排序会报错&lt;/span&gt;
&lt;span&gt;
unique_zips &lt;/span&gt;= requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;].unique()
unique_zips.sort()
unique_zips

array([&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;00083&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;02061&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;06901&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07087&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07093&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07109&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;07114&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07208&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;07604&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;08807&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10002&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10006&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10007&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10009&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10011&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10012&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10013&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10014&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10016&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10017&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10018&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10019&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10020&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10021&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10022&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10023&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10024&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10025&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10026&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10027&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10028&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10029&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10030&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10031&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10032&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10033&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10034&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10035&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10036&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10037&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10038&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10039&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10044&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10048&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10065&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10069&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10075&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10107&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10112&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10119&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10128&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10129&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10153&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10162&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10280&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10281&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10282&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10301&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10302&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10303&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10304&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10305&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10306&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10307&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10308&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10309&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10310&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10312&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10314&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10451&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10452&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10453&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10454&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10455&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10456&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10457&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10458&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10459&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10460&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10461&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10462&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10463&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10464&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10465&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10466&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10467&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10468&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10469&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10470&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10471&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10472&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10473&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10474&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10475&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10573&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10803&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10954&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11001&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11003&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11004&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11005&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11040&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11042&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11101&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11102&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11103&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11104&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11105&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11106&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11109&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11111&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11201&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11203&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11204&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11205&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11206&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11207&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11208&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11209&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11210&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11211&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11212&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11213&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11214&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11215&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11216&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11217&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11218&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11219&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11220&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11221&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11222&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11223&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11224&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11226&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11228&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11229&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11230&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11231&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11232&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11233&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11234&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11235&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11236&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11237&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11238&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11239&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11249&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11354&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11355&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11356&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11357&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11358&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11360&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11361&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11362&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11363&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11364&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11365&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11366&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11367&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11368&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11369&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11370&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11372&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11373&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11374&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11375&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11377&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11378&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11379&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11385&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11411&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11412&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11413&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11414&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11415&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11416&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11417&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11418&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11419&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11420&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11421&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11422&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11423&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11426&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11427&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11428&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11429&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11430&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11432&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11433&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11434&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11435&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11436&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11501&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11518&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11520&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11530&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11549&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11559&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11563&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11575&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11577&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11580&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11590&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11691&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11692&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11693&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11694&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11697&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11716&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;11722&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11735&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11747&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11776&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11788&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;11797&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;13221&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;14225&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;19711&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23502&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;23541&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;29616&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;35209&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;41042&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
       &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;55164&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;61702&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;70711&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;77056&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;77092&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;90010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;92123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;nan&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;], dtype=object)
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;还是不错的，数据已经更加清晰了。&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;下面是我们上面做的清洗邮编的代码，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
na_values = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;NO CLUE&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;N/A&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
requests &lt;/span&gt;= pd.read_csv(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;../Data/311-service-requests.csv&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, 
                       na_values&lt;/span&gt;=&lt;span&gt;na_values, 
                       dtype&lt;/span&gt;={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;: str}

 &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; fix_zip_codes(zips):

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 将长度大于 5 位数字的邮编，截断为 5 位 &lt;/span&gt;
    zips = zips.str.slice(0, 5&lt;span&gt;)
    
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 将 00000 赋值为 nan&lt;/span&gt;
    zero_zips = zips == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;00000&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    zips[zero_zips] &lt;/span&gt;=&lt;span&gt; np.nan
    
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; zips



requests[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] = fix_zip_codes(requests[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;])

requests[&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Incident Zip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;].unique()
&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;311-service-requests.csv&lt;/p&gt;
&lt;p&gt;链接：https://pan.baidu.com/s/1mh9HxTe 密码：ksq4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;知乎地址：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32548330&quot; target=&quot;_blank&quot;&gt;https://zhuanlan.zhihu.com/p/32548330&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:09:00 +0000</pubDate>
<dc:creator>Boyce Yang</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/BoyceYang/p/8176958.html</dc:identifier>
</item>
<item>
<title>工厂方法模式(Method Factory),理解多态应用的好例子. - 极酷卡卡</title>
<link>http://www.cnblogs.com/aladdinty/p/8176973.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/aladdinty/p/8176973.html</guid>
<description>&lt;p&gt;工厂方法模式又称为多态性工厂,个人认为多态性工厂更能准确的表达这个模式的用处.与简单工厂(静态工厂)相比较,这里的多态性是指抽象出一个工厂基类,将因为一个产品有N种不同的是现这种变化封装起来,将具体的实例化延迟到了工厂类的子类中来实现.&lt;/p&gt;
&lt;h4 id=&quot;谈谈耦合关系先&quot;&gt;谈谈耦合关系先&lt;/h4&gt;
&lt;p&gt;面向对象设计模式的学习重点应该是寻找业务变化的点,让紧耦合变的松一些,这样面对需求变化修改代码时才会付出最小的代价,同时也实现了代码的复用,维护.学习的重点不应该放在代码,结构,这些表现形式上.模块之间的紧耦合关系在面对业务变化时是非常脆弱的,会因为一处的修改导致好多地方跟着修改,在面向对象设计中,将高层模块(抽象层)与低层模块(实现层)隔离开,因为抽象层相对稳定,而实现层正是业务需求变化的部分,这也就是&lt;strong&gt;依赖倒置&lt;/strong&gt;原则,可以说整个设计模式都是围绕着寻找抽象层与实现层来展开的.&lt;/p&gt;
&lt;h4 id=&quot;意图&quot;&gt;意图&lt;/h4&gt;
&lt;p&gt;定义一个用于创建对象的接口,让子类决定实例化哪个类,把实例化工作延迟到子类.&lt;/p&gt;
&lt;h4 id=&quot;结构&quot;&gt;结构&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/45881/201801/45881-20180102140801596-570432104.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上图中可以看出,AbstractFactory抽象出了一个createProduct()方法,具体的实现交给了FactoryImplA与FactoryImplB两个实现类,分别对应创建ProductImplA与ProductImplB. 客户端代码调用时直接new的方式给出FactoryImplX具体实例,返回AbstractProduct抽象产品对象.&lt;/p&gt;
&lt;h4 id=&quot;代码演示&quot;&gt;代码演示&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 抽象产品
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public interface AbstractProduct
{
    public String getProductInfo() ;
}


package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 工厂方法基类
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public abstract class AbstractFactory
{
    public abstract  AbstractProduct createProdct() ;
}

package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 具体的工厂
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public class FactoryImplA  extends AbstractFactory
{
    @Override
    public AbstractProduct createProdct ()
    {
        return new ProductImplA ();
    }
}

package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 工厂实现B
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public class FactoryImplB extends AbstractFactory
{
    @Override
    public AbstractProduct createProdct ()
    {
        return new ProductImplB () ;
    }
}

package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 具体实现A
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public class ProductImplA implements AbstractProduct
{
    @Override
    public String getProductInfo ()
    {
        return &quot;ProductA_IMPL&quot;;
    }
}

package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 具体实现B
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public class ProductImplB implements AbstractProduct
{
    @Override
    public String getProductInfo ()
    {
        return &quot;ProductB_IMPL&quot;;
    }
}


package com.j2kaka.coolka.common.pattern.factorymethod;

/**
 * 调用处
 *
 * @author aladdinty
 * @create 2018-01-02
 **/
public class Client
{
    public static void main(String[] args )
    {
        AbstractProduct producta = new FactoryImplA ().createProdct () ;
        System.out.println (producta.getProductInfo ());

        AbstractProduct productb = new FactoryImplB ().createProdct () ;
        System.out.println ( productb.getProductInfo () );
    }


}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;运行结果&quot;&gt;运行结果&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;ProductA_IMPL
ProductB_IMPL&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;应对修改&quot;&gt;应对修改&lt;/h4&gt;
&lt;p&gt;如果需要增加新的Product实现,只需要增加一个ProductImplXX,再对应增加一个FactoryImplXX,然后修改一下Client的调用处new FactoryImplXX(),当然这个地方可以用反射之类的技术来替代. 应对这种Product产品实现修改的需求时,工厂方法模式完全符合&lt;strong&gt;开闭原则&lt;/strong&gt;. 而之前所说的简单工厂模式则无法做到,因为要修改工厂方法内部的if else判断.当然也不是说工厂方法模式就比简单方法模式高级,只是应用场景不同,工厂方法解决的变化点是产品类型的不固定变化.而简单工厂只是解决调用处对具体产品实现的隔离,假设产品的实现是相对稳定的.&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:08:00 +0000</pubDate>
<dc:creator>极酷卡卡</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/aladdinty/p/8176973.html</dc:identifier>
</item>
<item>
<title>C#设计模式之二十二备忘录模式（Memento Pattern）【行为型】 - PatrickLiu</title>
<link>http://www.cnblogs.com/PatrickLiu/p/8176974.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/PatrickLiu/p/8176974.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   今天我们开始讲“行为型”设计模式的第十个模式，该模式是【备忘录模式】，英文名称是：Memento Pattern。按老规矩，先从名称上来看看这个模式，个人的最初理解就是对某个对象的状态进行保存，等到需要恢复的时候，可以从备忘录中进行恢复。生活中这样的例子也能经常看到，如备份电话通讯录，备份操作操作系统，备份数据库等。如果我们想恢复对象的状态，那么我们可能首先想到的是把对象保存下来，但是这样会破坏对象的封装性。因为对象有状态有操作，如果我们为了保存对象而留着原来的对象，做一个深拷贝，那么其他对象也能通过这个对象的接口访问这个对象状态，这并不是我们所希望的。而我们需要它的职责只是保存和恢复对象状态，而不应在上面支持对对象状态访问的接口，这就产生了Memento模式。&lt;/p&gt;&lt;p&gt;        &lt;img src=&quot;https://images2017.cnblogs.com/blog/1048776/201801/1048776-20180102140426003-700747056.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;     我们看上图，一个对象肯定会有很多状态，这些状态肯定会相互转变而促进对象的发展，如果要想在某一时刻把当前对象回复到以前某一时刻的状态，这个情况用“备忘录模式”就能很好解决该问题。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、备忘录模式的详细介绍&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.1、动机（Motivate）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   在软件构建过程中，某些对象的状态在转换的过程中，可能由于某种需要，要求程序能够回溯到对象之前处于某个点时的状态。如果使用一些公有接口来让其他对象得到对象的状态，便会暴露对象的细节实现。&lt;/p&gt;&lt;p&gt;　 如何实现对象状态的良好保存与恢复，但同时又不会因此而破坏对象本身的封装性？&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.2、意图（Intent）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态（如果没有这个关键点，其实深拷贝就可以解决问题）。这样以后就可以将该对象恢复到原先保存的状态。　　　　　　                                ——《设计模式》GoF&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.3、结构图（Structure）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;       &lt;img src=&quot;https://images2017.cnblogs.com/blog/1048776/201801/1048776-20180102140346268-233274790.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.4、模式的组成&lt;/strong&gt;&lt;br/&gt;    &lt;br/&gt;    可以看出，在备忘录模式的结构图有以下角色：&lt;br/&gt; &lt;br/&gt;    &lt;strong&gt;（1）、发起人角色（Originator）：&lt;/strong&gt;记录当前时刻的内部状态，负责创建和恢复备忘录数据。负责创建一个备忘录Memento，用以记录当前时刻自身的内部状态，并可使用备忘录恢复内部状态。Originator【发起人】可以根据需要决定Memento【备忘录】存储自己的哪些内部状态。&lt;/p&gt;&lt;p&gt;    &lt;strong&gt;（2）、备忘录角色（Memento）：&lt;/strong&gt;负责存储发起人对象的内部状态，在进行恢复时提供给发起人需要的状态，并可以防止Originator以外的其他对象访问备忘录。备忘录有两个接口：Caretaker【管理角色】只能看到备忘录的窄接口，他只能将备忘录传递给其他对象。Originator【发起人】却可看到备忘录的宽接口，允许它访问返回到先前状态所需要的所有数据。&lt;/p&gt;&lt;p&gt;    &lt;strong&gt;（3）、管理者角色（Caretaker）：&lt;/strong&gt;负责保存备忘录对象。负责备忘录Memento，不能对Memento的内容进行访问或者操作。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.5、备忘录模式的代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    今天我们就用备份电话本的实例来说明备忘录模式的实现。实现代码如下：&lt;br/&gt;  &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; MementoPattern
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 联系人--需要备份的数据，是状态数据，没有操作&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ContactPerson
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;姓名&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;电话号码&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; MobileNumber { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;  
&lt;span&gt; 13&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 发起人--相当于【发起人角色】Originator&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MobileBackOriginator
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 发起人需要保存的内部状态&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; List&amp;lt;ContactPerson&amp;gt;&lt;span&gt; _personList;
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; 
&lt;span&gt; 19&lt;/span&gt;         
&lt;span&gt; 20&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; List&amp;lt;ContactPerson&amp;gt;&lt;span&gt; ContactPersonList
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;            &lt;span&gt;get&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;           {
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;               &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;._personList;
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; 
&lt;span&gt; 27&lt;/span&gt;            &lt;span&gt;set&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;           {
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;               &lt;span&gt;this&lt;/span&gt;._personList=&lt;span&gt;value;
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;           }
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化需要备份的电话名单&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; MobileBackOriginator(List&amp;lt;ContactPerson&amp;gt;&lt;span&gt; personList)
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(personList!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;                 &lt;span&gt;this&lt;/span&gt;._personList =&lt;span&gt; personList;
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;             }
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;                &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ArgumentNullException(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;参数不能为空！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;             }
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;  
&lt;span&gt; 45&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建备忘录对象实例，将当期要保存的联系人列表保存到备忘录对象中&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ContactPersonMemento CreateMemento()
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ContactPersonMemento(&lt;span&gt;new&lt;/span&gt; List&amp;lt;ContactPerson&amp;gt;(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;._personList));
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;  
&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将备忘录中的数据备份还原到联系人列表中&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; RestoreMemento(ContactPersonMemento memento)
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;             &lt;span&gt;this&lt;/span&gt;.ContactPersonList =&lt;span&gt; memento.ContactPersonListBack;
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;  
&lt;span&gt; 57&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Show()
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;联系人列表中共有{0}个人，他们是:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, ContactPersonList.Count);
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;             &lt;span&gt;foreach&lt;/span&gt; (ContactPerson p &lt;span&gt;in&lt;/span&gt;&lt;span&gt; ContactPersonList)
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;姓名: {0} 号码: {1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, p.Name, p.MobileNumber);
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;  
&lt;span&gt; 67&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 备忘录对象，用于保存状态数据，保存的是当时对象具体状态数据--相当于【备忘录角色】Memeto&lt;/span&gt;
&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ContactPersonMemento
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 保存发起人创建的电话名单数据，就是所谓的状态&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; List&amp;lt;ContactPerson&amp;gt; ContactPersonListBack{&lt;span&gt;get&lt;/span&gt;;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;};
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;  
&lt;span&gt; 73&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ContactMemento(List&amp;lt;ContactPerson&amp;gt;&lt;span&gt; personList)
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;             ContactPersonListBack =&lt;span&gt; personList;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;  
&lt;span&gt; 79&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 管理角色，它可以管理【备忘录】对象，如果是保存多个【备忘录】对象，当然可以对保存的对象进行增、删等管理处理---相当于【管理者角色】Caretaker&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MementoManager
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果想保存多个【备忘录】对象，可以通过字典或者堆栈来保存，堆栈对象可以反映保存对象的先后顺序
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;比如：public Dictionary&amp;lt;string, ContactPersonMemento&amp;gt; ContactPersonMementoDictionary { get; set; }&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; ContactPersonMemento ContactPersonMemento{ &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;  
&lt;span&gt; 87&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;         &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;             List&amp;lt;ContactPerson&amp;gt; persons = &lt;span&gt;new&lt;/span&gt; List&amp;lt;ContactPerson&amp;gt;&lt;span&gt;()
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt; ContactPerson() { Name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;黄飞鸿&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, MobileNum = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;13533332222&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;},
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt; ContactPerson() { Name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;方世玉&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, MobileNum = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;13966554433&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;},
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;                 &lt;span&gt;new&lt;/span&gt; ContactPerson() { Name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;洪熙官&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, MobileNum = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;13198765544&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;手机名单发起人&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;             MobileBackOriginator mobileOriginator = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MobileBackOriginator(persons);
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;            mobileOriginator.Show();
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;  
&lt;span&gt;102&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建备忘录并保存备忘录对象&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;             MementoManager manager = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MementoManager();
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;             manager.ContactPersonMemento =&lt;span&gt; mobileOriginator.CreateMemento();
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;  
&lt;span&gt;106&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 更改发起人联系人列表&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;----移除最后一个联系人--------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;             mobileOriginator.ContactPersonList.RemoveAt(&lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;            mobileOriginator.Show();
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;  
&lt;span&gt;111&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 恢复到原始状态&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-------恢复联系人列表------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;            mobileOriginator.RestoreMemento(manager.ContactPersonMemento);
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;            mobileOriginator.Show();
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;  
&lt;span&gt;116&lt;/span&gt; &lt;span&gt;            Console.Read();
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;三、备忘录模式的实现要点：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;        备忘录（Memento）存储原发器（Originator）对象的内部状态，在需要时恢复原发器状态。Memento模式适用于“由原发器管理，却又必须存储在原发器之外的信息”。&lt;/p&gt;&lt;p&gt;　　在实现Memento模式中，要防止原发器以外的对象访问备忘录对象。备忘录对象有两个接口，一个为原发器使用的宽接口；一个为其他对象使用的窄接口。在实现Memento模式时，要考虑拷贝对象状态的效率问题，如果对象开销比较大，可以采用某种增量式改变（即只记住改变的状态）来改进Memento模式。&lt;/p&gt;&lt;p&gt;　　我们也可以用序列化的方式实现备忘录。序列化之后，我们可以把它临时性保存到数据库、文件、进程内、进程外等地方。&lt;/p&gt;&lt;p&gt;    &lt;span&gt;&lt;strong&gt;（1）、备忘录模式的主要优点有：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;            1】、如果某个操作错误地破坏了数据的完整性，此时可以使用备忘录模式将数据恢复成原来正确的数据。&lt;/p&gt;&lt;p&gt;            2】、备份的状态数据保存在发起人角色之外，这样发起人就不需要对各个备份的状态进行管理。而是由备忘录角色进行管理，而备忘录角色又是由管理者角色管理，符合单一职责原则。&lt;/p&gt;&lt;p&gt;            3】、提供了一种状态恢复的实现机制，使得用户可以方便地回到一个特定的历史步骤，当新的状态无效或者存在问题时，可以使用先前存储起来的备忘录将状态复原。&lt;/p&gt;&lt;p&gt;            4】、实现了信息的封装，一个备忘录对象是一种原发器对象的表示，不会被其他代码改动，这种模式简化了原发器对象，备忘录只保存原发器的状态，采用堆栈来存储备忘录对象可以实现多次撤销操作，可以通过在负责人中定义集合对象来存储多个备忘录。&lt;br/&gt;　　&lt;br/&gt;            5】、本模式简化了发起人类。发起人不再需要管理和保存其内部状态的一个个版本，客户端可以自行管理他们所需要的这些状态的版本。&lt;br/&gt;　　&lt;br/&gt;            6】、当发起人角色的状态改变的时候，有可能这个状态无效，这时候就可以使用暂时存储起来的备忘录将状态复原。&lt;/p&gt;&lt;p&gt;　&lt;strong&gt;&lt;span&gt;（2）、备忘录模式的主要缺点有：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;            1】、在实际的系统中，可能需要维护多个备份，需要额外的资源，这样对资源的消耗比较严重。资源消耗过大，如果类的成员变量太多，就不可避免占用大量的内存，而且每保存一次对象的状态都需要消耗内存资源，如果知道这一点大家就容易理解为什么一些提供了撤销功能的软件在运行时所需的内存和硬盘空间比较大了。&lt;/p&gt;&lt;p&gt;            2】、如果发起人角色的状态需要完整地存储到备忘录对象中，那么在资源消耗上面备忘录对象会很昂贵。&lt;/p&gt;&lt;p&gt;　　    3】、当负责人角色将一个备忘录 存储起来的时候，负责人可能并不知道这个状态会占用多大的存储空间，从而无法提醒用户一个操作是否很昂贵。&lt;/p&gt;&lt;p&gt;　　    4】、当发起人角色的状态改变的时候，有可能这个协议无效。如果状态改变的成功率不高的话，不如采取“假如”协议模式。&lt;/p&gt;&lt;p&gt;    &lt;span&gt;&lt;strong&gt;（3）、在下面的情况下可以考虑使用备忘录模式：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;          1】、如果系统需要提供回滚操作时，使用备忘录模式非常合适。例如文本编辑器的Ctrl+Z撤销操作的实现，数据库中事务操作。&lt;/p&gt;&lt;p&gt;          2】、保存一个对象在某一个时刻的状态或部分状态，这样以后需要时它能够恢复到先前的状态。&lt;/p&gt;&lt;p&gt;          3】、如果用一个接口来让其他对象得到这些状态，将会暴露对象的实现细节并破坏对象的封装性，一个对象不希望外界直接访问其内部状态，通过负责人可以间接访问其内部状态。&lt;/p&gt;&lt;p&gt;          4】、有时一些发起人对象的内部信息必须保存在发起人对象以外的地方，但是必须要由发起人对象自己读取，这时，使用备忘录模式可以把复杂的发起人内部信息对其他的对象屏蔽起来，从而可以恰当地保持封装的边界。&lt;/p&gt;&lt;p&gt;    &lt;span&gt;&lt;strong&gt;（4）备忘录的封装性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;         1】、为了确保备忘录的封装性，除了原发器外，其他类是不能也不应该访问备忘录类的，在实际开发中，原发器与备忘录之间的关系是非常特殊的，它们要分享信息而不让其他类知道，实现的方法因编程语言的不同而不同。&lt;/p&gt;&lt;p&gt;    &lt;span&gt;&lt;strong&gt;（5）多备份实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;         1】、在负责人中定义一个集合对象来存储多个状态，而且可以方便地返回到某一历史状态。&lt;/p&gt;&lt;p&gt;         2】、在备份对象时可以做一些记号，这些记号称为检查点(Check Point)。在使用HashMap等实现时可以使用Key来设置检查点。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;四、.NET 备忘录模式的实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;     在现在的Net框架里面，还没有找到备忘录模式的实现，看来还是自己的功力不够，还需努力。个人的理解，这种模式似乎在业务系统里面使用的更多，类似Word,Excel等工具可以有撤销功能，其实很多软件都有这个功能，软件执行的时候，时时刻刻在把自己的状态存储，如果发生错误，或者需要撤销的时候就可以进行相关的操作。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;五、总结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;     备忘录模式写完了，这个模式刚开始理解起来还是挺麻烦的，但是，如果我们多看几个实例代码，完全掌握也不是问题。我们是不是感觉Memento模式和Command模式有些类似，我们要仔细把握模式之间的异同，否则使用模式的时候就会出现张冠李戴的情况或者不能确定使用哪个模式好。Memento备忘录模式和Command命令模式其实还是有些细微的差别的，那就让我们来看看他们的异同吧。虽然两者都支持Undo操作，但是Command是对行为的封装，Memento是对对象状态的保留，这是目的上的不同。它们支持的也是Undo操作的不同层面，Command是对行为序列的操作，Memento是对行为状态的操作。命令模式保存的是发起人的具体命令（命令对应的是行为），而备忘录模式保存的是发起人的状态（而状态对应的数据结构，如属性）。把握细节，理解模式的应用场景，这样可以让模式更好的为我们服务。&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 06:08:00 +0000</pubDate>
<dc:creator>PatrickLiu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/PatrickLiu/p/8176974.html</dc:identifier>
</item>
<item>
<title>2017年终总结 - 温斯渤</title>
<link>http://www.cnblogs.com/ghylzwsb/p/2017summary.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ghylzwsb/p/2017summary.html</guid>
<description>&lt;p&gt;&lt;strong&gt;欢迎访问我的&lt;a href=&quot;http://wensibo.net/&quot;&gt;个人博客&lt;/a&gt; ，原文链接：&lt;a href=&quot;http://wensibo.top/2017/12/31/2017summary/&quot; class=&quot;uri&quot;&gt;http://wensibo.top/2017/12/31/2017summary/&lt;/a&gt; ，未经允许不得转载！&lt;/strong&gt;&lt;br/&gt;大家好，不知不觉已经有两个月的时间没有更新文章了，时间真是过得好快啊，转眼间2017也已经来到了最后一天，这篇文章就来记录和总结一下过去的这个2017年吧！&lt;/p&gt;
&lt;p&gt;过去的两个月时间里状态不是很好，加上学校大四了还一大堆课，一大堆作业要做。本以为拿了offer就可以轻松看书学习了，想不到这段时间过得比找工作还累。本来计划的文章都没有写，拖延症太重了，不过最主要的原因还是自己的惰性太严重了，希望在接下来的新的一年里能有所改善吧！&lt;/p&gt;
&lt;p&gt;2017年对我来说注定是不简单的一个年份，有收获有遗憾，收获的是有了人生中第一份工作、在开源世界上有了自己更多的贡献、阅读了许多经典的书籍让自己的知识的深度和广度上了一个台阶、当然也结识了许多志同道合优秀的朋友、同时趁着自己大学时光的最后一年也出去走走看看；当然遗憾也不少，总感觉时间不够用，也总感觉自己浪费了许多宝贵的年华，每每想到这些心头总是唏嘘不已。&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;今年一共有两次实习的经历，一个较长一个较短，较长的是在博雅，较短的是在CVTE，两家公司的同事和导师们都十分的nice，在这两段实习的时间里真的能够体会到商业项目与个人项目巨大的区别。前一段实习经历我记录在了&lt;a href=&quot;http://wensibo.top/2017/08/31/trainee/&quot;&gt;这篇文章&lt;/a&gt;中，后一段实习则因为自己的拖延症迟迟没有写成文章，不过在这短短的一个星期的考核实习中我的导师以及领导对我的帮助确实是巨大的，尤其是在对工程框架、编码规范、设计模式以及性能优化方面，很感谢他们给我提出的意见。当然我觉得在实习中也有一个比较好的建议想与大家一起分享的，其实这对正式工作也是有很大帮助的，那就是在每天早上工作前先列一个任务清单，确定自己一天需要完成的任务，这能够让你对一天的工作量有所准备，同时也让你更有计划性；接着是一天工作完之后最好能花点时间总结一下今天的任务完成的如何，同时记录自己工作过程中的收货以及遇到的困难等等，我觉得这个方法对我这个菜鸟确实帮助挺大的。&lt;/p&gt;
&lt;p&gt;关于工作，我之前也写过一篇文章：&lt;a href=&quot;http://wensibo.top/2017/08/31/trainee/&quot;&gt;一个三非渣本的安卓秋招之路&lt;/a&gt; ，不过当初在写文章的时候还没有确定正式签约的公司，最后我选择了珍爱网，希望在这里能够遇见美好。&lt;/p&gt;

&lt;p&gt;这一年我开始逐步的拥抱开源，在开源世界上吸收了许多前辈们贡献的成果和经验，当然在此基础上我也向开源世界开始贡献我的绵薄之力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/contribution.png&quot; alt=&quot;贡献图&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上面这张图是我2017年总共的贡献图，实在惭愧，上半年完成的还是可以，但是到了下半年因为要实习还有找工作再加之拖延症一片惨不忍睹的白啊。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/repositories.png&quot; alt=&quot;repositories&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这一年一共写了9个项目，但是真正意义上的只有4个，其中start数量比较多的是&lt;a href=&quot;https://github.com/Wensibob/GankClient&quot;&gt;GankClient&lt;/a&gt;这个项目,我也把这个APP上架到了酷安酷市场了，目前的下载量是1992，下面两张图展示了&lt;a href=&quot;https://www.coolapk.com/apk/138516&quot;&gt;干货集中营&lt;/a&gt;的下载量和评论情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/gank_server.png&quot; alt=&quot;gank&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/gank_client.png&quot; alt=&quot;gank&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然干货集中营这个APP还是需要感谢&lt;a href=&quot;http://gank.io/&quot;&gt;代码家&lt;/a&gt;的支持，以及许多写过干货集中营客户端的前辈们，我也是在向你们借鉴学习的过程中完成的。&lt;/p&gt;

&lt;p&gt;2017年1月份开始搭建的独立个人博客，在这一年的时间里网站总访客数：22725，网站总访问量：59067&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/blog_client.png&quot; alt=&quot;网站访问量&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这一年里时间里，真的很感谢大家的支持，同时博客文章的内容质量不断的提升，博客内容应用层逐步转向系统层面，今后要与大家分享的则会是关于底层方面的知识。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/blog_archives.png&quot; alt=&quot;博客归档&quot;/&gt;&lt;/p&gt;
&lt;p&gt;全年一共写了23篇文章，加上这篇就是24篇，但是从9月份开始更新频率就下了许多，原本是计划每个月2-3篇文章的，来年加油啦！&lt;br/&gt;当然除了在自己的博客上写之外，我还同步在&lt;a href=&quot;https://juejin.im/user/589d35738d6d81006c85e7c9&quot;&gt;掘金&lt;/a&gt;，&lt;a href=&quot;https://www.jianshu.com/u/4628daeba600&quot;&gt;简书&lt;/a&gt;，&lt;a href=&quot;http://www.cnblogs.com/ghylzwsb/&quot;&gt;博客园&lt;/a&gt;这三个第三方网站上，当然我会更喜欢掘金一些，因为在掘金上分享技术更为纯粹，并且它也只分享技术，今天偶然查看自己的主页，原来已经有188人关注我啦，获得的start数量也有761个，文章的阅读数量为17459。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/juejin.png&quot; alt=&quot;掘金&quot;/&gt;&lt;/p&gt;

&lt;p&gt;今年看的书不少，下面这张图是我认真看并且觉得不错的书。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/books.jpg&quot; alt=&quot;books&quot;/&gt;&lt;/p&gt;
&lt;p&gt;还有几本书有的借人了，有的放在图书馆没有拿回来没有拍照，列在下面供大家参考。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Android进阶之光&lt;/li&gt;
&lt;li&gt;Android开发艺术探索&lt;/li&gt;
&lt;li&gt;高性能Android应用开发&lt;/li&gt;
&lt;li&gt;网络是怎样连接的&lt;/li&gt;
&lt;li&gt;算法（第4版）&lt;/li&gt;
&lt;li&gt;程序员的算法趣题&lt;/li&gt;
&lt;li&gt;Java编程思想（第四版）&lt;/li&gt;
&lt;li&gt;Gradle for Android (PDF)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其中《鸟哥的私房菜》、《Java编程思想》没有全部看完，只看了其中的一部分。讲真今年买书花了还挺多钱的，但是如果对自己有所帮助还是很愿意投资的，并且也知道作者出书不容易，应该支持正版啦！&lt;/p&gt;

&lt;p&gt;写博客确实认识了许多志同道合的朋友，这里不能一一举例实在抱歉，向大家推荐两个我比较熟悉的大神，两位都还是学生，&lt;a href=&quot;https://www.jianshu.com/u/383970bef0a0&quot;&gt;@Carson_Ho&lt;/a&gt;是研究生，&lt;a href=&quot;https://tonnyl.github.io/&quot;&gt;@Tonny&lt;/a&gt;则跟我一样也是大四，两位大神比我厉害多了，我也经常看他们的博客和开源项目，&lt;a href=&quot;https://www.jianshu.com/u/383970bef0a0&quot;&gt;@Carson_Ho&lt;/a&gt;博客的更新频率真的很赞，一个月都有几篇，这一点真的很棒啊，希望以后我也能向他这样。&lt;/p&gt;

&lt;p&gt;大学最后一年，也想利用着最后的一点时间出去走走看看，于是就去了成都和重庆，讲真我可能是假的广东人，并不觉得四川和重庆的很辣，难道是我吃了假的辣椒？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/chengdu.jpg&quot; alt=&quot;成都&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://wensibo.top/file/img/2017-12-31summary/chongqing.jpg&quot; alt=&quot;重庆&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2017年遗憾的事情还是挺多的，究其原因还是自己有的时候太懒惰了，没有一直坚持下去，无论是写博客还是开源项目，到了下半年都有所松懈。再加之我也很容易被琐碎的事情打扰，也因为如此很多事情都中途而费了，希望来年自己能够在这方面有所改进。&lt;/p&gt;

&lt;p&gt;2018年自己将迎来工作的第一个年头，希望自己能够尽快适应新的工作环境，在工作上能够有所建树。当然在技术学习的道路上也应用永无止境，自己也已经开始准备学习人工智能和深度学习方面的内容，技术人唯有不断学习才不会太快被淘汰。2018年博客将会继续更新，接下来将会写一个有关Gradle的系列文章，到后面还会与大家一起分享更多流行的技术；文章的更新频率方面会比今年做的更好，在工作学习之余会抽出更多的时间来更新文章。&lt;/p&gt;
&lt;p&gt;最后祝大家2018年新年快乐，新的一年大家都能心想事成！&lt;/p&gt;
</description>
<pubDate>Tue, 02 Jan 2018 05:05:00 +0000</pubDate>
<dc:creator>温斯渤</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ghylzwsb/p/2017summary.html</dc:identifier>
</item>
</channel>
</rss>