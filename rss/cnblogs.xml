<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Spring Boot实战：模板引擎 - liuxiaopeng</title>
<link>http://www.cnblogs.com/paddix/p/8905531.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/paddix/p/8905531.html</guid>
<description>&lt;p&gt;　　虽然现在很多开发，都采用了前后端完全分离的模式，即后端只提供数据接口，前端通过AJAX请求获取数据，完全不需要用的模板引擎。这种方式的优点在于前后端完全分离，并且随着近几年前端工程化工具和MVC框架的完善，使得这种模式的维护成本相对来说也更加低一点。但是这种模式不利于SEO，并且在性能上也会稍微差一点，还有一些场景，使用模板引擎会更方便，比如说邮件模板。这篇文章主要讨论Spring boot与模板引擎Thymeleaf、Freemaker以及JSP的集成。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;span&gt;一、集成Thymeleaf&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;第一步：引入jar包（thymeleaf对应的starter）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-thymeleaf&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　第二步：配置thymeleaf：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
spring:
  thymeleaf:
    prefix: classpath:/templates/
    check-template-location: true
    cache: false
    suffix: .html
    encoding: UTF-8
    content-type: text/html
    mode: HTML5
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　prefix：指定模板所在的目录&lt;/p&gt;
&lt;p&gt;　　check-tempate-location: 检查模板路径是否存在&lt;/p&gt;
&lt;p&gt;　　cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。&lt;/p&gt;
&lt;p&gt;　　encoding&amp;amp;content-type：这个大家应该比较熟悉了，与Servlet中设置输出对应属性效果一致。　&lt;/p&gt;
&lt;p&gt;　　mode：这个还是参考官网的说明吧，并且这个是2.X与3.0不同，本文自动引入的包是2.15。&lt;/p&gt;
&lt;p&gt; 　　第三步 编写thymeleaf模板文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta content=&quot;text/html;charset=UTF-8&quot;/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h6&amp;gt;Thymeleaf 模板引擎&amp;lt;/h6&amp;gt;
&amp;lt;table border=&quot;1&quot; bgcolor=&quot;#f0ffff&quot;&amp;gt;
    &amp;lt;thead&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;序号&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;标题&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;摘要&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;创建时间&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody th:each=&quot;article : ${list}&quot;&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td th:text=&quot;${article.id}&quot;&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td th:text=&quot;${article.title}&quot;&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td th:text=&quot;${article.summary}&quot;&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td th:text=&quot;${article.createTime}&quot;&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　大家可以看到，thymeleaf还是比较简单的，并且最大的特点就是的标签是作为HTML元素的属性存在的，也就是说，该页面是可以直接通过浏览器来预览的，只是没有数据而已，这个很方便大家进行调试。&lt;/p&gt;
&lt;p&gt; 　　第四步 配置Controller：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
@Controller
@RequestMapping(&quot;/article&quot;)
public class ArticleController {

    @Autowired
    private ArticleService articleService;

    @RequestMapping(&quot;/articleList.html&quot;)
    public String getArticleList(Model model, String title, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize,
                                 @RequestParam(defaultValue = &quot;1&quot;) Integer pageNum) {
        int offset = (pageNum - 1) * pageSize;
        List&amp;lt;Article&amp;gt; list = articleService.getArticles(title, 1L, offset, pageSize);
        model.addAttribute(&quot;list&quot;, list);
        return &quot;article/articleList&quot;;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　注意，这里用的注解是@Controller，而不是@RestController，因为@RestController会自动将返回结果转为字符串。&lt;/p&gt;
&lt;p&gt; 　　第五步 查看结果&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/820406/201804/820406-20180423072632332-2146910924.jpg&quot; alt=&quot;&quot; width=&quot;424&quot; height=&quot;324&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、Spring boot与Freemarker的集成&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　1、引入jar包（Freemarker对应的starter）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-freemarker&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2、配置freemarker：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
spring:
  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    content-type: text/html
    charset: UTF-8
    settings:
      number_format: '0.##'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　除了settings外，其他的配置选项和thymeleaf类似。settings会对freemarker的某些行为产生影响，如日期格式化，数字格式化等，感兴趣的同学可以参考官网提供的说明：https://freemarker.apache.org/docs/api/freemarker/template/Configuration.html#setSetting-java.lang.String-java.lang.String-&lt;/p&gt;
&lt;p&gt;　　3、编写freemarker模板文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
&amp;lt;html&amp;gt;
    &amp;lt;title&amp;gt;文章列表&amp;lt;/title&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h6&amp;gt;Freemarker 模板引擎&amp;lt;/h6&amp;gt;
    &amp;lt;table border=&quot;1&quot;&amp;gt;
        &amp;lt;thead&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;th&amp;gt;序号&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;标题&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;摘要&amp;lt;/th&amp;gt;
                &amp;lt;th&amp;gt;创建时间&amp;lt;/th&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/thead&amp;gt;
        &amp;lt;#list list as article&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;${article.id}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.title}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.summary}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.createTime?string('yyyy-MM-dd hh:mm:ss')}&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/#list&amp;gt;
    &amp;lt;/table&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　4、编写Controller：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
@Controller
@RequestMapping(&quot;/article&quot;)
public class ArticleController {

    @Autowired
    private ArticleService articleService;

    @RequestMapping(&quot;/list.html&quot;)
    public String getArticles(Model model, String title, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize, Integer pageNum) {
        if (pageSize == null) {
            pageSize = 10;
        }
        if (pageNum == null) {
            pageNum = 1;
        }
        int offset = (pageNum - 1) * pageSize;
        List&amp;lt;Article&amp;gt; list = articleService.getArticles(title, 1L, offset, pageSize);
        model.addAttribute(&quot;list&quot;, list);
        return &quot;article/list&quot;;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　5、访问页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/820406/201804/820406-20180424072003172-359199509.png&quot; alt=&quot;&quot; width=&quot;431&quot; height=&quot;357&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 三、Sring boot与JSP集成：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　在正式的项目开发中，现在已经极少用jsp模板了，所以Spring boot对jsp的支持也不是很好，因此配置起来比thymeleaf和Freemaker相对来说就更复杂一点。　　&lt;/p&gt;
&lt;p&gt; 第一步 引入jar包：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;jstl&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.tomcat.embed&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;tomcat-embed-jasper&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　第一个jstl的依赖用于支持el表达式，第二个依赖用于支持jsp。注意，如果是在外部的tomcat中运行，需要将scope设置为provide，防止jar包冲突。&lt;/p&gt;
&lt;p&gt;第二步 手动创建webapp目录：&lt;/p&gt;
&lt;p&gt;　　需要手动在main目录下创建一个webapp的目录，结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/820406/201805/820406-20180508065609129-1224300644.png&quot; alt=&quot;&quot; width=&quot;289&quot; height=&quot;185&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第三步 jsp路劲配置：&lt;/p&gt;
&lt;p&gt;　　在application.yml中添加如下配置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
spring:
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　了解Spring mvc的应该很熟悉上面的配置。&lt;/p&gt;
&lt;p&gt;第四步 编写jsp页面：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;table border=&quot;1&quot;&amp;gt;
        &amp;lt;c:forEach var=&quot;article&quot; items=&quot;${list}&quot;&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;${article.id}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.title}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.summary}&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;${article.createTime}&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
        &amp;lt;/c:forEach&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第五步 编写Controller：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
 @RequestMapping(&quot;/listJsp&quot;)
    public String getArticleListJsp(Model model, String title, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize, Integer pageNum) {
        if (pageSize == null) {
            pageSize = 10;
        }
        if (pageNum == null) {
            pageNum = 1;
        }
        int offset = (pageNum - 1) * pageSize;
        List&amp;lt;Article&amp;gt; list = articleService.getArticles(title, 1L, offset, pageSize);
        model.addAttribute(&quot;list&quot;, list);
        return &quot;articles&quot;;
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第六步 访问结果页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/820406/201805/820406-20180508070902825-1058085781.png&quot; alt=&quot;&quot; width=&quot;481&quot; height=&quot;293&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　总体来讲，Spring boot对thymeleaf和Freemaker支持比较友好，配置相对也简单一点，在实际的开发中，大多也以这两种模板引擎为主，很少有用jsp的，jsp现在可能更多是在实验或者学习阶段使用。jsp配置比较麻烦一点的事情是不像前两者，网上的说法基本一致，但是对Jsp的配置有很多种说法，比如说是不是需要将jar包改成war包？jsp的依赖是否需要设置为provide等等，这个主要依赖于你是否最后要将程序部署到外部的tomcat还是直接运行jar？因为本文都是直接在idea下直接运行Application类，所以这些操作就不需要了。&lt;/p&gt;
</description>
<pubDate>Mon, 07 May 2018 23:33:00 +0000</pubDate>
<dc:creator>liuxiaopeng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/paddix/p/8905531.html</dc:identifier>
</item>
<item>
<title>Spring 下 MyBatis 的基本使用 - Meng.NET</title>
<link>http://www.cnblogs.com/Meng-NET/p/9005972.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Meng-NET/p/9005972.html</guid>
<description>&lt;p&gt;&lt;strong&gt;参看代码 GitHub :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/pom.xml&quot; target=&quot;_blank&quot;&gt;pom.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/src/main/resources/dbconfig.properties&quot; target=&quot;_blank&quot;&gt;dbconfig.properties&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/src/main/java/lm/solution/web/config/properties/DbConfig.java&quot; target=&quot;_blank&quot;&gt;DbConfig.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/src/main/java/lm/solution/web/config/beans/MySqlBean.java&quot; target=&quot;_blank&quot;&gt;MySqlBean.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/pojo/src/main/java/lm/solution/pojo/entity/User.java&quot; target=&quot;_blank&quot;&gt;User.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/mapper/src/main/java/lm/solution/mapper/UserMapper.java&quot; target=&quot;_blank&quot;&gt;UserMapper.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/mapper/src/main/java/lm/solution/mapper/provider/UserDynaSqlProvider.java&quot; target=&quot;_blank&quot;&gt;UserDynaSqlProvider.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/service/src/main/java/lm/solution/service/mysql/UserService.java&quot; target=&quot;_blank&quot;&gt;UserService.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/service/src/main/java/lm/solution/service/mysql/impl/UserServiceImpl.java&quot; target=&quot;_blank&quot;&gt;UserServiceImpl.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/src/main/java/lm/solution/web/controller/db/MyBatisController.java&quot; target=&quot;_blank&quot;&gt;MyBatisController.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/liumeng0403/lm.solution/blob/master/springsolution/solution/web/src/main/resources/views/db/mybatis.jsp&quot; target=&quot;_blank&quot;&gt;mybatis.jsp&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、引入类库&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mybatis核心包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;mybatis spring 插件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-spring&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Mysql数据库驱动包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; connection pool &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;druid&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;二、DB 与 Pool 的配置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;#MySQL
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; jdbc.driver=&lt;span&gt;com.mysql.jdbc.Driver
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;#基本属性 url、user、password
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; jdbc.url=jdbc:mysql:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;localhost:3306/mybatis?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;allowMultiQueries=true&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; jdbc.username=&lt;span&gt;root
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; jdbc.password=&lt;span&gt;liumeng
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#配置初始化大小、最小、最大
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; jdbc.initialSize=&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; jdbc.minIdle=&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; jdbc.maxActive=&lt;span&gt;20&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;#配置获取连接等待超时的时间
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; jdbc.maxWait=&lt;span&gt;60000&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; jdbc.timeBetweenEvictionRunsMillis=&lt;span&gt;60000&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;#配置一个连接在池中最小生存的时间，单位是毫秒
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; jdbc.minEvictableIdleTimeMillis=&lt;span&gt;300000&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt; jdbc.validationQuery=SELECT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; jdbc.testWhileIdle=&lt;span&gt;true&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; jdbc.testOnBorrow=&lt;span&gt;false&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; jdbc.testOnReturn=&lt;span&gt;false&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;#打开PSCache，并且指定每个连接上PSCache的大小
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; jdbc.poolPreparedStatements=&lt;span&gt;false&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt; jdbc.maxPoolPreparedStatementPerConnectionSize=&lt;span&gt;20&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt; &lt;span&gt;#配置监控统计拦截的filters
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; jdbc.filters=&lt;span&gt;stat&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; 三、Bean 的 配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1.配置属性到bean&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.web.config.properties;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Value;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.AnnotationConfigApplicationContext;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.PropertySource;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Component;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; @Component(value = &quot;dbConfig&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; @PropertySource(&quot;classpath:dbconfig.properties&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DbConfig {
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; 
&lt;span&gt; 12&lt;/span&gt;     @Value(&quot;${jdbc.url}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String url;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUrl(){
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.url;
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; 
&lt;span&gt; 18&lt;/span&gt;     @Value(&quot;${jdbc.username}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername(){
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.username;
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; 
&lt;span&gt; 24&lt;/span&gt;     @Value(&quot;${jdbc.password}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword(){
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.password;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; 
&lt;span&gt; 30&lt;/span&gt;     @Value(&quot;${jdbc.initialSize}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer initialSize;
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getInitialSize(){
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.initialSize;
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; 
&lt;span&gt; 36&lt;/span&gt;     @Value(&quot;${jdbc.minIdle}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer minIdle;
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getMinIdle(){
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.minIdle;
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; 
&lt;span&gt; 42&lt;/span&gt;     @Value(&quot;${jdbc.maxActive}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer maxActive;
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getMaxActive(){
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.maxActive;
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; 
&lt;span&gt; 48&lt;/span&gt;     @Value(&quot;${jdbc.maxWait}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long maxWait;
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getMaxWait() {
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.maxWait;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; 
&lt;span&gt; 54&lt;/span&gt;     @Value(&quot;${jdbc.timeBetweenEvictionRunsMillis}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long timeBetweenEvictionRunsMillis;
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getTimeBetweenEvictionRunsMillis(){
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.timeBetweenEvictionRunsMillis;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; 
&lt;span&gt; 60&lt;/span&gt;     @Value(&quot;${jdbc.minEvictableIdleTimeMillis}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long minEvictableIdleTimeMillis;
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getMinEvictableIdleTimeMillis(){
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.minEvictableIdleTimeMillis;
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; 
&lt;span&gt; 66&lt;/span&gt;     @Value(&quot;${jdbc.validationQuery}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String validationQuery;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getValidationQuery(){
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.validationQuery;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; 
&lt;span&gt; 72&lt;/span&gt;     @Value(&quot;${jdbc.testWhileIdle}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Boolean testWhileIdle;
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Boolean getTestWhileIdle(){
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.testWhileIdle;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; 
&lt;span&gt; 78&lt;/span&gt;     @Value(&quot;${jdbc.testOnBorrow}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Boolean testOnBorrow;
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Boolean getTestOnBorrow(){
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.testOnBorrow;
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; 
&lt;span&gt; 84&lt;/span&gt;     @Value(&quot;${jdbc.testOnReturn}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Boolean testOnReturn;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Boolean getTestOnReturn(){
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.testOnReturn;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; 
&lt;span&gt; 90&lt;/span&gt;     @Value(&quot;${jdbc.poolPreparedStatements}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Boolean poolPreparedStatements;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Boolean getPoolPreparedStatements(){
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.poolPreparedStatements;
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; 
&lt;span&gt; 96&lt;/span&gt;     @Value(&quot;${jdbc.maxPoolPreparedStatementPerConnectionSize}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer maxPoolPreparedStatementPerConnectionSize;
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getMaxPoolPreparedStatementPerConnectionSize(){
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.maxPoolPreparedStatementPerConnectionSize;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     @Value(&quot;${jdbc.filters}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String filters;
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getFilters(){
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.filters;
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; 
&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Object object=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Object();
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; DbConfig config;
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; DbConfig getConfig(){
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; config;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; 
&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;         &lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt;(object) {
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;             AnnotationConfigApplicationContext configContext = &lt;span&gt;new&lt;/span&gt; AnnotationConfigApplicationContext(DbConfig.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;             config = (DbConfig) configContext.getBean(&quot;dbConfig&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; 
&lt;span&gt;121&lt;/span&gt; 
&lt;span&gt;122&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;　　2.配置组件 Bean&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.web.config.beans;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.alibaba.druid.pool.DruidDataSource;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.web.config.properties.DbConfig;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.spring.SqlSessionFactoryBean;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.mybatis.spring.mapper.MapperScannerConfigurer;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Bean;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.jdbc.datasource.DataSourceTransactionManager;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.sql.SQLException;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;@Configuration
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MySqlBean {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; dataSource 配置数据源&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    @Bean(
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;             name = &quot;dataSource&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             initMethod = &quot;init&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;             destroyMethod = &quot;close&quot;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; DruidDataSource druidDataSource(){
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;//
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             DbConfig db=&lt;span&gt;DbConfig.getConfig();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;//
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             DruidDataSource dataSource = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DruidDataSource();
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;            dataSource.setUrl(db.getUrl());
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;            dataSource.setUsername(db.getUsername());
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;            dataSource.setPassword(db.getPassword());
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            dataSource.setInitialSize(db.getInitialSize());
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;            dataSource.setMinIdle(db.getMinIdle());
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;            dataSource.setMaxActive(db.getMaxActive());
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;            dataSource.setMaxWait(db.getMaxWait());
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;            dataSource.setTimeBetweenEvictionRunsMillis(db.getTimeBetweenEvictionRunsMillis());
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;            dataSource.setMinEvictableIdleTimeMillis(db.getMinEvictableIdleTimeMillis());
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;            dataSource.setValidationQuery(db.getValidationQuery());
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;            dataSource.setTestWhileIdle(db.getTestWhileIdle());
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;            dataSource.setTestOnBorrow(db.getTestOnBorrow());
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;            dataSource.setTestOnReturn(db.getTestOnReturn());
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;            dataSource.setPoolPreparedStatements(db.getPoolPreparedStatements());
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;            dataSource.setMaxPoolPreparedStatementPerConnectionSize(db.getMaxPoolPreparedStatementPerConnectionSize());
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;            dataSource.setFilters(db.getFilters());
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; dataSource;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (SQLException se){
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;            se.printStackTrace();
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; 
&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; mybatis和spring完美整合，不需要mybatis的配置映射文件&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;     @Bean(name = &quot;sqlSessionFactory&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; SqlSessionFactoryBean sqlSessionFactoryBean(DruidDataSource dataSource){
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;         SqlSessionFactoryBean factory=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; SqlSessionFactoryBean();
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;        factory.setDataSource(dataSource);
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; factory;
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; 
&lt;span&gt;67&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; DAO接口所在包名，Spring会自动查找其下的类&lt;/span&gt;
&lt;span&gt;68&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; MapperScannerConfigurer mapperScannerConfigurer(){
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; 
&lt;span&gt;71&lt;/span&gt;         MapperScannerConfigurer scannerConfigurer=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; MapperScannerConfigurer();
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;         scannerConfigurer.setBasePackage(&quot;lm.solution.mapper&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;         scannerConfigurer.setSqlSessionFactoryBeanName(&quot;sqlSessionFactory&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; scannerConfigurer;
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; 
&lt;span&gt;76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; 
&lt;span&gt;78&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 对dataSource 数据源进行事务管理&lt;/span&gt;
&lt;span&gt;79&lt;/span&gt;     @Bean(name = &quot;transactionManager&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; DataSourceTransactionManager dataSourceTransactionManager( DruidDataSource dataSource ){
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; 
&lt;span&gt;82&lt;/span&gt;         DataSourceTransactionManager transactionManager=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; DataSourceTransactionManager();
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt; &lt;span&gt;        transactionManager.setDataSource(dataSource);
&lt;/span&gt;&lt;span&gt;84&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; transactionManager;
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt; 
&lt;span&gt;86&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt; 
&lt;span&gt;88&lt;/span&gt; 
&lt;span&gt;89&lt;/span&gt; 
&lt;span&gt;90&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;四、操作 mysql 数据库 -- 简单的CRUD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1. 实体&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String age;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer salary;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.name = name == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : name.trim();
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAge() {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; age;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAge(String age) {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.age = age == &lt;span&gt;null&lt;/span&gt; ? &lt;span&gt;null&lt;/span&gt;&lt;span&gt; : age.trim();
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; 
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getSalary() {
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; salary;
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSalary(Integer salary) {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.salary =&lt;span&gt; salary;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;　　2.MyBatis Mapper&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.mapper;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.mapper.provider.UserDynaSqlProvider;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.apache.ibatis.annotations.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; UserMapper {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     @Select(&quot; select * from user &quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     List&amp;lt;User&amp;gt;&lt;span&gt; findAllUsers();
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     @Select(&quot; select * from user where id=#{id} &quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     User findById(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     @Select(&quot; select * from user where name=#{name} &quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    User findByName(String name);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     @InsertProvider(type= UserDynaSqlProvider.&lt;span&gt;class&lt;/span&gt;,method = &quot;saveUser&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     @Options(useGeneratedKeys = &lt;span&gt;true&lt;/span&gt;,keyColumn = &quot;id&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    Integer saveUser(User user);
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;     @UpdateProvider(type = UserDynaSqlProvider.&lt;span&gt;class&lt;/span&gt;,method = &quot;updateUser&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    Integer updateUser(User user);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;     @Delete(&quot; delete from user where id=#{id} &quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     Integer deleteUser(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id);
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     @Delete(&quot; delete from user where 1=1 &quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    Integer deleteAllUsers();
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.mapper.provider;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.jdbc.SQL;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserDynaSqlProvider {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String saveUser(&lt;span&gt;final&lt;/span&gt;&lt;span&gt; User user) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SQL() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;                 INSERT_INTO(&quot;user&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getName()!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;!&quot;&quot;&lt;span&gt;.equals(user.getName())){
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                     VALUES(&quot;name&quot;,&quot;#{name}&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getAge()!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;!&quot;&quot;&lt;span&gt;.equals(user.getAge())){
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                     VALUES(&quot;age&quot;,&quot;#{age}&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getSalary()!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                     VALUES(&quot;salary&quot;,&quot;#{salary}&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;        }.toString();
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String updateUser(&lt;span&gt;final&lt;/span&gt;&lt;span&gt; User user){
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;  &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SQL(){
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                 UPDATE(&quot;user&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getName()!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&quot;&quot;&lt;span&gt;.equals(user.getName())){
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                     SET(&quot; name=#{name} &quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getAge()!=&lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&quot;&quot;&lt;span&gt;.equals(user.getAge())){
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                     SET(&quot; age=#{age} &quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(user.getSalary()!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                     SET(&quot; salary=#{salary} &quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;                 WHERE(&quot; id=#{id} &quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;        }.toString();
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;　　3.Service &lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.service.mysql;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; UserService {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt;     List&amp;lt;User&amp;gt;&lt;span&gt; findAllUsers();
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;     User findById(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isUserExist(User user);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; saveUser(User user);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateUser(User user);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt; deleteUser(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteAllUsers();
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.service.mysql.impl;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity.User;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.mapper.UserMapper;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.service.mysql.UserService;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Transactional;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Propagation;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Isolation;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; @Transactional(propagation = Propagation.REQUIRED,isolation =&lt;span&gt; Isolation.DEFAULT)
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; @Service(&quot;userService&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; UserService {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; UserMapper userMapper;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt;&lt;span&gt; findAllUsers() {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; userMapper.findAllUsers();
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;return null;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; User findById(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;return null;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; userMapper.findById(id);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; 
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isUserExist(User user) {
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt;         User userDB=&lt;span&gt;userMapper.findByName(user.getName());
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(userDB==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;  &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; saveUser(User user) {
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        userMapper.saveUser(user);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateUser(User user) {
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;        userMapper.updateUser(user);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteUser(&lt;span&gt;long&lt;/span&gt;&lt;span&gt; id) {
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;        userMapper.deleteUser(id);
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; 
&lt;span&gt;60&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteAllUsers() {
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;        userMapper.deleteAllUsers();
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt; 
&lt;span&gt;66&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;　　4.Controller&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; lm.solution.web.controller.db;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.core.JsonProcessingException;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.databind.ObjectMapper;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.pojo.entity.User;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; lm.solution.service.mysql.UserService;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Qualifier;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; 
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; 
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyBatisController {
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; 
&lt;span&gt; 18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; ObjectMapper objectMapper;
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;     @Qualifier(&quot;userService&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; UserService userService;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; 
&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;         objectMapper = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ObjectMapper();
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; 
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;             value = &quot;/mybatis/userall&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;             method =&lt;span&gt; RequestMethod.GET,
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String allUsers() {
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; 
&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;             List&amp;lt;User&amp;gt; users =&lt;span&gt; userService.findAllUsers();
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; objectMapper.writeValueAsString(users);
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException ioe) {
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;            ioe.printStackTrace();
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &quot;{}&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; 
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;             value = &quot;/mybatis/{id}&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;             method =&lt;span&gt; RequestMethod.GET,
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String getUserById(@PathVariable(&quot;id&quot;) &lt;span&gt;long&lt;/span&gt;&lt;span&gt; id) {
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; 
&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;             User user =&lt;span&gt; userService.findById(id);
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; objectMapper.writeValueAsString(user);
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException ioe) {
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;            ioe.printStackTrace();
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &quot;{}&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; 
&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;             value = &quot;/mybatis/create&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;             method =&lt;span&gt; RequestMethod.POST,
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;             consumes = {&quot;application/json&quot;&lt;span&gt;},
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String create(@RequestBody User user) {
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; 
&lt;span&gt; 69&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; 
&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;            userService.saveUser(user);
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; objectMapper.writeValueAsString(user);
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (JsonProcessingException jpe){
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;            jpe.printStackTrace();
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; 
&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;{}&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; 
&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;             value = &quot;/mybatis/update&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;             method =&lt;span&gt; RequestMethod.PUT,
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;             consumes = {&quot;application/json&quot;&lt;span&gt;},
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String update(@RequestBody User user) {
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; 
&lt;span&gt; 90&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; 
&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;            userService.updateUser(user);
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; objectMapper.writeValueAsString(user);
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; 
&lt;span&gt; 95&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (JsonProcessingException jpe){
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;            jpe.printStackTrace();
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; 
&lt;span&gt; 99&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;{}&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; 
&lt;span&gt;101&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; 
&lt;span&gt;103&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;             value = &quot;/mybatis/{id}&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;             method =&lt;span&gt; RequestMethod.DELETE,
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; String deleteById(@PathVariable(&quot;id&quot;) &lt;span&gt;long&lt;/span&gt;&lt;span&gt; id) {
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;        userService.deleteUser(id);
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;success&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; 
&lt;span&gt;112&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; 
&lt;span&gt;114&lt;/span&gt; &lt;span&gt;    @RequestMapping(
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;             value = &quot;/mybatis&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;             method =&lt;span&gt; RequestMethod.DELETE,
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;             produces = {&quot;application/json;charset=UTF-8&quot;&lt;span&gt;})
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String deleteAll() {
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;        userService.deleteAllUsers();
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;success&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; 
&lt;span&gt;123&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; 
&lt;span&gt;125&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;　　5.View&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;  Created by IntelliJ IDEA.
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;  User: liumeng
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt;   &lt;span&gt;Date&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;2018&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;
&lt;span&gt;  5&lt;/span&gt;   &lt;span&gt;Time&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;14&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt;   &lt;span&gt;To&lt;/span&gt;&lt;span&gt; change this template use File | Settings | File Templates.
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html;charset=UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;MySQL op by MyBatis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;/assets/js/jquery-3.3.1.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;btnAllusers&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;GET-查看所有&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;getAllusers&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#btnAllusers&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis/userall&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; 
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt; data.length; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;                        html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data[i].id &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;                        html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data[i].name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;                        html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data[i].age &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;                        html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data[i].salary &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;                        html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#getAllusers&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; 
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;btnUserByID&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;GET-查看ByID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ID:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;userbyIDtx&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;UserByID&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#btnUserByID&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#userbyIDtx&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;GET&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;                dataType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; 
&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.id &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.age &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.salary &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#UserByID&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; 
&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;createOne&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;POST-创建一个&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ID:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; disabled&lt;/span&gt;&lt;span&gt;=&quot;disabled&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Name:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;createName&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Age:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;createAge&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Salary:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;createSalary&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;createUser&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#createOne&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; data&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;                name:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;                age:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createAge&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;                salary:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createSalary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val()
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; 
&lt;span&gt;101&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis/create&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;POST&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;                data:JSON.stringify(data),
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; &lt;span&gt;                contentType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;dataType:&quot;json&quot;&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; 
&lt;span&gt;109&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.id &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.age &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.salary &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createUser&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; 
&lt;span&gt;121&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;127&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;128&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;putOne&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;PUT-更新一个&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;129&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;130&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ID:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;putId&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;131&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Name:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;putName&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;132&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Age:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;putAge&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;133&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Salary:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;putSalary&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;putUser&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;138&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#putOne&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; data&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;                id:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#putId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt; &lt;span&gt;                name:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#putName&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt; &lt;span&gt;                age:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#putAge&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;                salary:$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#putSalary&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val()
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; 
&lt;span&gt;147&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis/update&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt; &lt;span&gt;                data:JSON.stringify(data),
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;                contentType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;152&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;dataType:&quot;json&quot;&lt;/span&gt;
&lt;span&gt;153&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; 
&lt;span&gt;155&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.id &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.name &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.age &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; data.salary &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt; &lt;span&gt;                    html &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createUser&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(html);
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; 
&lt;span&gt;167&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;173&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;174&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteOne&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;DELETE-删除一个&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;175&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;176&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ID:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;deleteId&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;177&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;&amp;lt;span&amp;gt;Name:&amp;lt;/span&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;putName&quot; &amp;gt;&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt; &lt;span&gt;&amp;lt;span&amp;gt;Age:&amp;lt;/span&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;putAge&quot; &amp;gt;&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt; &lt;span&gt;&amp;lt;span&amp;gt;Salary:&amp;lt;/span&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;putSalary&quot; &amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;180&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;181&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteUser&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;182&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;183&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;184&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#deleteOne&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; var data={&lt;/span&gt;
&lt;span&gt;187&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     id:$(&quot;#putId&quot;).val(),&lt;/span&gt;
&lt;span&gt;188&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     name:$(&quot;#putName&quot;).val(),&lt;/span&gt;
&lt;span&gt;189&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     age:$(&quot;#putAge&quot;).val(),&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     salary:$(&quot;#putSalary&quot;).val()&lt;/span&gt;
&lt;span&gt;191&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; };&lt;/span&gt;
&lt;span&gt;192&lt;/span&gt; 
&lt;span&gt;193&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;$(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#deleteId&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).val(),
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; data:JSON.stringify(data),&lt;/span&gt;
&lt;span&gt;197&lt;/span&gt; &lt;span&gt;                contentType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;198&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;dataType:&quot;json&quot;&lt;/span&gt;
&lt;span&gt;199&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt; 
&lt;span&gt;201&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;203&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.id + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;205&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.name + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;206&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.age + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;207&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.salary + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;208&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;209&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#createUser&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(data);
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt; 
&lt;span&gt;213&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;219&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;220&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteAll&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;DELETE-删除所有&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;222&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteUserAll&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;223&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;224&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;225&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#deleteAll&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).on(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (e) {
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt;&lt;span&gt; request &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $.ajax({
&lt;/span&gt;&lt;span&gt;228&lt;/span&gt; &lt;span&gt;                url: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/mybatis&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt; &lt;span&gt;                method: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; data:JSON.stringify(data),&lt;/span&gt;
&lt;span&gt;231&lt;/span&gt; &lt;span&gt;                contentType:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;application/json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;232&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;dataType:&quot;json&quot;&lt;/span&gt;
&lt;span&gt;233&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; 
&lt;span&gt;235&lt;/span&gt; &lt;span&gt;            request.done(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;236&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (data) {
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; html &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;id&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.id + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;239&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;name&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.name + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;240&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;age&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.age + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;241&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;span&amp;gt;salary&amp;lt;/sapn&amp;gt;:&amp;lt;span&amp;gt;&quot; + data.salary + &quot;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;242&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; html += &quot;&amp;lt;br&amp;gt;----------------------------------------------------------&amp;lt;br&amp;gt;&quot;;&lt;/span&gt;
&lt;span&gt;243&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#deleteUserAll&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).html(data);
&lt;/span&gt;&lt;span&gt;244&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;246&lt;/span&gt; 
&lt;span&gt;247&lt;/span&gt; &lt;span&gt;            request.fail(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (jqXHR, textStatus) {
&lt;/span&gt;&lt;span&gt;248&lt;/span&gt; &lt;span&gt;                alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Request failed: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; textStatus);
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;250&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;252&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;253&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;254&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;255&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;256&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;




&lt;p&gt;&lt;br class=&quot;Apple-interchange-newline&quot;/&gt;
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　蒙&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　2018-05-08 00:15 周二&lt;/p&gt;

</description>
<pubDate>Mon, 07 May 2018 16:17:00 +0000</pubDate>
<dc:creator>Meng.NET</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Meng-NET/p/9005972.html</dc:identifier>
</item>
<item>
<title>Java main方法全解 - 奇客艺术</title>
<link>http://www.cnblogs.com/qikeyishu/p/9005959.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qikeyishu/p/9005959.html</guid>
<description>&lt;h3 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-2&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;1、main方法的重载&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.nxl2018;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main_test {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String args[]) {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         System.out.println(&quot;应用程序入口的main方法&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        main();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         main(10&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         main(10, 10&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(){
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         System.out.println(&quot;无参的main方法&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i){
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         System.out.println(&quot;有参的重载main方法&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(&lt;span&gt;int&lt;/span&gt; i,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; j){
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         System.out.println(&quot;有两个参数的重载main方法&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;&lt;span class=&quot;token md md-strong&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1186474/201805/1186474-20180508000213486-157455945.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;&lt;span class=&quot;token md md-strong&quot;&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;以上实例说明main方法是可以重载的，每个main方法的参数都是不同的，程序是可以运行的，可以输出应有的结果。但是，如果没有程序入口的main方法，只含有其他main方法。虽然编译此程序是可以的通过的，但是运行时会产生错误。这是因为程序运行时，Java虚拟机找不到对应的main方法，就会产生运行错误。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;/&gt;&lt;br/&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;/&gt;&lt;/h4&gt;
&lt;h3 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-3&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;&lt;span class=&quot;token md md-strong&quot;&gt;2、main方法的调用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main_test {                                        
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;        main2(args);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main2(String[] args){
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;        main(args);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-4&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;运行程序后，程序无限递归执行两main方法，很明显main方法是可以被调用的。&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;&lt;span class=&quot;token md md-strong&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1186474/201805/1186474-20180508000321521-2142307512.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;wmd-input-section-4&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;3、main方法的继承&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;pre class=&quot;form-control font-rich has-selection&quot;&gt;
&lt;span id=&quot;wmd-input-section-4&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token li&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;Main.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main{
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         System.out.println(&quot;Hello Word!&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class=&quot;form-control font-rich has-selection&quot;&gt;
&lt;span id=&quot;wmd-input-section-5&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token li&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;Main_test.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Main_test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Main{
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1186474/201805/1186474-20180508000912848-1764936418.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-6&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;编译运行Main_test.java后输出了“Hello Word!”，说明main方法是可以被继承。&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h3 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-6&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;4、main方法的隐藏&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;pre class=&quot;form-control font-rich has-selection&quot;&gt;
&lt;span id=&quot;wmd-input-section-6&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token li&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;Main.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main{
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         System.out.println(&quot;Main&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;pre class=&quot;form-control font-rich has-selection&quot;&gt;
&lt;span id=&quot;wmd-input-section-7&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token li&quot;&gt;&lt;span class=&quot;token strong&quot;&gt;&lt;span class=&quot;token md md-strong&quot;&gt;Main_test.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Main_test &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; Main{
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         System.out.println(&quot;Main_test&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1186474/201805/1186474-20180508000850763-10960637.jpg&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-8&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token p&quot;&gt;很显然父类Main中的main方法被隐藏，结果显示的是子类中的main方法中的内容。&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 class=&quot;form-control font-rich has-selection&quot;&gt;&lt;span id=&quot;wmd-input-section-8&quot; class=&quot;wmd-input-section&quot;&gt;&lt;span class=&quot;token blockquote&quot;&gt;&lt;span class=&quot;token md md-gt&quot;&gt;关联博客(博客园)：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;



</description>
<pubDate>Mon, 07 May 2018 16:10:00 +0000</pubDate>
<dc:creator>奇客艺术</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qikeyishu/p/9005959.html</dc:identifier>
</item>
<item>
<title>windows10不能修改hosts解决方案（亲测） - Mr_LINWH</title>
<link>http://www.cnblogs.com/lwh-note/p/9005953.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lwh-note/p/9005953.html</guid>
<description>&lt;p&gt;hosts文本解释：&lt;/p&gt;
&lt;p&gt;　　　　有时候我们要破解一些软件与服务器通讯，所以通常都需要更改Hosts文件来达到目的，XP系统可以直接修改保存，但是Win10系统却提示没有权限去修改，那么我们要怎样办呢，我们修改的是c:\windows\system32\drivers\etc下面的hosts文件。&lt;/p&gt;
&lt;p&gt;第一步：进入到目录中&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507234706642-292415979.png&quot; alt=&quot;&quot; width=&quot;846&quot; height=&quot;510&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第二步：&lt;/p&gt;
&lt;p&gt;　　右击hosts,打开最后一个选项--&amp;gt;属性，来到下面界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235134825-2127956853.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第三步：&lt;/p&gt;
&lt;p&gt;　　点击编辑&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235331765-1593472209.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt; 第四步：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235409612-2081091893.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第五步;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235445830-1025945905.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第六步：&lt;/p&gt;
&lt;p&gt;　　点击立即查找下方就会出现个文本域&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235706226-609356648.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第七步：&lt;/p&gt;
&lt;p&gt; 　　选中后点击确定，然后当前你选中的用户就会到文本框&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180507235912366-2049232296.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第八步：&lt;/p&gt;
&lt;p&gt;　　你会发现你的账户添加到了组中，然后勾选完全控制或者给你自己想给的权限，点击右下角--&amp;gt;应用&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180508000202586-848984309.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第九步：&lt;/p&gt;
&lt;p&gt;　　系统会弹出提示框&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1301998/201805/1301998-20180508000359807-214382638.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 然后就可以了，你用EditPlus或者记事本打开，修改后在保存，发现就可以保存了&lt;/p&gt;

&lt;p&gt;以上就是所有步骤，望有帮助到你！&lt;/p&gt;

</description>
<pubDate>Mon, 07 May 2018 16:06:00 +0000</pubDate>
<dc:creator>Mr_LINWH</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lwh-note/p/9005953.html</dc:identifier>
</item>
<item>
<title>利用Tess4J实现图片识别 - chestnut_egg</title>
<link>http://www.cnblogs.com/chestnut-egg/p/9005947.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chestnut-egg/p/9005947.html</guid>
<description>
&lt;p&gt;&lt;strong&gt;一、下载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.进入官网下载页面&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/tess4j/&quot; target=&quot;_blank&quot;&gt;https://sourceforge.net/projects/tess4j/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.点击download&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180507234306767-1161388591.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3.下载后解压，目录如下，圈出的三个文件夹是需要用到的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180507234430787-85573264.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、使用Tess4J&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.将dist和lib下的包导入java项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180507234601169-1573849311.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180507234646923-1747589100.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2.将 tessdata 文件夹复制进项目的根目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180507234950696-1089484673.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3.示范代码如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; OCRDemo {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; start=&lt;span&gt;System.currentTimeMillis();
            File imageFile &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; File(&quot;C:\\Users\\dan\\Desktop\\12345.png&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图片位置&lt;/span&gt;
            ITesseract instance = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Tesseract();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;instance.setDatapath(&quot;&quot;);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置tessdata位置&lt;/span&gt;
            instance.setLanguage(&quot;chi_sim&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;选择字库文件&lt;/span&gt;
            String result = instance.doOCR(imageFile);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开始识别&lt;/span&gt;
            &lt;span&gt;double&lt;/span&gt; end=&lt;span&gt;System.currentTimeMillis();
            System.out.println(result);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;打印图片内容&lt;/span&gt;
            System.out.println(&quot;耗时&quot;+(end-start)/1000+&quot; s&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (TesseractException e) {
            e.printStackTrace();
        }
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注意事项：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;①如果tessdata没有放入根目录，务必设置teedata的位置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
instance.setDatapath(&quot;&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置tessdata位置&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;②选择字库文件不需要写上后缀，默认 tessdata 包中可能没有 chi_sim 这个中文包，需要自己下载&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tessdata&quot; target=&quot;_blank&quot;&gt;https://github.com/tesseract-ocr/tessdata&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180508000002561-539384620.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1283237/201805/1283237-20180508000015429-969954630.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;官方字库识别率还是偏低的，如果对精度要求高的话需要自己训练字库了&lt;/p&gt;
</description>
<pubDate>Mon, 07 May 2018 16:02:00 +0000</pubDate>
<dc:creator>chestnut_egg</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chestnut-egg/p/9005947.html</dc:identifier>
</item>
<item>
<title>c#之多线程之为所欲为 - 小熊vs</title>
<link>http://www.cnblogs.com/xiongT/p/8988442.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiongT/p/8988442.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;一 什么是多线程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、 什么是进程？一个 exe 运行一次就会产生一个进程，一个 exe 的多个进程之 间数据互相隔离。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、 一个进程里至少有一个线程：主线程。我们平时写的控制台程序默认就是单线程的，代 码从上往下执行，一行执行完了再执行下一行；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、 什么是多线程：一个人两件事情同时做效率高。同一时刻一 个人只能干一件事情，其实是在“快速频繁切换”，如果处理不当可能比不用多线程效率还低&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;二  Thread 对象&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2.1 thread基础写法&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
public static void ThreadTest()
        {
            int a = 0;
            Thread thread1 = new Thread(m=&amp;gt; 
            {
                for (int i = 0; i &amp;lt; 20; i++)
                {
                    a = a + 1;
                    Console.WriteLine(&quot;线程1：&quot;+ a);
                }

            });

            Thread thread2 = new Thread(m =&amp;gt;
            {
            for (int i = 0; i &amp;lt; 20; i++)
            {
                    a = a + 1;
                Console.WriteLine(&quot;线程2：&quot;+ a);
                }

            });
            
            thread1.Start();
            thread2.Start();
            Console.ReadKey();
        }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码输出结果如下：&lt;/p&gt;
&lt;p&gt;可以看出两个子线程启动后是并行执行的，所以输出结果没有按照顺序来&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/983015/201805/983015-20180503234415585-1260307812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2.2 设置线程的优先级&lt;/p&gt;
&lt;p&gt;thread1.Priority=ThreadPriority。。。&lt;/p&gt;
&lt;p&gt;2.3  t1.Join()当前线程等待 t1 线程执行结束，实例如下：&lt;/p&gt;
&lt;p&gt;这段代码执行过后输出的结果就是正常的从1输出到了40&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ThreadTest()
        {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; a = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            Thread thread1 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(m=&amp;gt;&lt;span&gt; 
            {
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;20&lt;/span&gt;; i++&lt;span&gt;)
                {
                    a &lt;/span&gt;= a + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
                    Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;线程1：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+&lt;span&gt; a);
                }

            });

            Thread thread2 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(m =&amp;gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;等待thread1线程任务完成后在执行&lt;/span&gt;
&lt;span&gt;                thread1.Join();
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;20&lt;/span&gt;; i++&lt;span&gt;)
                {
                    a &lt;/span&gt;= a + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
                Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;线程2：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+&lt;span&gt; a);
                }

            });
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可以将参数传入到子线程中&lt;/span&gt;
&lt;span&gt;            thread1.Start(a);
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;thread1.Join(); 或者将Join放在这里&lt;/span&gt;
&lt;span&gt;            thread2.Start(a);
            Console.ReadKey();

        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.4 Interrupt方法&lt;/p&gt;
&lt;p&gt;Interrupt 用于提前唤醒一个在 Sleep 的线程，Sleep 方法会抛出 ThreadInterruptedException 异常 代码如下： &lt;/p&gt;
&lt;p&gt;代码输出到9的时候线程会休眠8秒钟，但是运行到主线程thread1.Interrupt()时，子线程会被唤醒，然后执行catch里面的Console.WriteLine(&quot;线程被唤醒&quot;)；之后接着从10开始输出到2000。需要注意的是只有线程自身能让自身休眠&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
public static void ThreadTest2()
        {
            Thread thread1 = new Thread(() =&amp;gt;
            {
                for (int i = 0; i &amp;lt; 2000; i++)
                {
                    if (i==10)
                    {
                        //唤醒线程之后会引发ThreadInterruptedException类型的异常，所以需要try catch
                        try
                        {
                            //子线程休眠8秒钟
                            Thread.Sleep(8000);
                        }
                        catch (ThreadInterruptedException ex)
                        {
                            Console.WriteLine(&quot;线程被唤醒&quot;);
                        }
                    }
                    Console.WriteLine(i);
                }
            });
            thread1.Start();
            //提前唤醒在沉睡的子线程
            Thread.Sleep(3000);
            thread1.Interrupt();
            Console.ReadKey();
        }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;三 线程池&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.1、线程池：因为每次创建线程、销毁线程都比较消耗 cpu 资源，因此可以通过线程池进行 优化。线程池是一组已经创建好的线程，随用随取，用完了不是销毁线程，然后放到线程池 中，供其他人用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.2、用线程池之后就无法对线程进行精细化的控制了（线程启停、优先级控制等）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.3、ThreadPool 类的一个重要方法：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　static bool QueueUserWorkItem(WaitCallback callBack)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　static bool QueueUserWorkItem(WaitCallback callBack, object state)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.4、除非要对线程进行精细化的控制，否则建议使用线程池，因为又简单、性能调优又更好。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
//QueueUserWorkItem是一个静态方法不需要New
public static void ThreadPool()
{
    System.Threading.ThreadPool.QueueUserWorkItem(m=&amp;gt; 
    {
        for (int i = 0; i &amp;lt; 1000; i++)
        {
            i++;
            Console.WriteLine(i);
        }
    });
    Console.ReadKey();
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;四 TPL风格的异步方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;TPL（Task Parallel Library）是.Net 4.0 之后带来的新特性，更简洁，更方便。现在在.Net 平台下已经大面积使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意方法中如果有 await，则方法必须标记为 async，不是所有方法都可以被轻松的标记 为 async。WinForm 中的事件处理方法都可以标记为 async、MVC 中的 Action 方法也可以标 记为 async、控制台的 Main 方法不能标记为 async。  TPL 的特点是：方法都以 XXXAsync 结尾，返回值类型是泛型的 Task&amp;lt;T&amp;gt;。  TPL 让我们可以用线性的方式去编写异步程序，不再需要像 EAP 中那样搞一堆回调、逻 辑跳来跳去了。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
/TPL风格返回的Task&amp;lt;T&amp;gt; 泛型的数据
//await 关键字等待异步方法返回
public static async void Task()
{
    WebClient wc = new WebClient();
    string s= await wc.DownloadStringTaskAsync(&quot;http://www.baidu.com&quot;);
    Console.WriteLine(s);
    Console.ReadKey();
}
public static void Task2()
{
    WebClient wc = new WebClient();
    //若果不使用await关键字就得使用Task&amp;lt;string&amp;gt;类型来接收数据
    Task&amp;lt;string&amp;gt; s2 = wc.DownloadStringTaskAsync(&quot;http://www.baidu.com&quot;);
    Console.ReadKey();
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;自己编写一个TPL风格的异步方法：&lt;/p&gt;
&lt;p&gt;使用了async关键字就必须返回Task泛型数据类型的数据&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
public static Task&amp;lt;string&amp;gt; StringAsync()
{
   return Task.Run(() =&amp;gt;
    {
        Thread.Sleep(5000);
        return &quot;hehe&quot;;
    });
          
}
// GET: Home
public async Task&amp;lt;ViewResult&amp;gt; Index()
{

    var s = await StringAsync();
    return View();
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果返回值就是一个立即可以随手可得的值，那么就用 Task.FromResult()  如果是一个需要休息一会的任务（比如下载失败则过 5 秒钟后重试。主线程不休息，和 Thread.Sleep 不一样），那么就用 Task.Delay()。 3、Task.Factory.FromAsync()把 IAsyncResult 转换为 Task，这样 APM 风格的 api 也可以用 await 来调 用。 4、编写异步方法的简化写法。如果方法声明为 async，那么可以直接 return 具体的值，不再用创建 Task，由编译器创建 Task：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
static async Task&amp;lt;int&amp;gt; F1Async() 
{ 
     return 1;
 } 
 
static Task&amp;lt;int&amp;gt; F2Async() 
{  
     return Task.FromResult(3); 
} 
 
static Task&amp;lt;int&amp;gt; F3Async() 
{  
     return Task.Run(()=&amp;gt; {  
     return 1 + 3;  }); 
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一定要让 async 的传染性（调用异步方法要用 await，用了 await 方法就要声明为 async，调 用我这个 async 方法的地方必须要 await……）不要轻易直接调用 Task 的 Wait、WaitAll 等方 法。等待一个用 await，而不是 task.Wait()；等待多个用 await Task.WhenAll()，而不是 Task.WaitAll()&lt;/p&gt;
</description>
<pubDate>Mon, 07 May 2018 15:51:00 +0000</pubDate>
<dc:creator>小熊vs</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiongT/p/8988442.html</dc:identifier>
</item>
<item>
<title>[Luogu 4135] 作诗 - YoungNeal</title>
<link>http://www.cnblogs.com/YoungNeal/p/9005886.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/YoungNeal/p/9005886.html</guid>
<description>&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;
&lt;p&gt;神犇SJY虐完HEOI之后给傻×LYD出了一题：&lt;br/&gt;SHY是T国的公主，平时的一大爱好是作诗。&lt;br/&gt;由于时间紧迫，SHY作完诗之后还要虐OI，于是SHY找来一篇长度为N的文章，阅读M次，每次只阅读其中连续的一段[l,r]，从这一段中选出一些汉字构成诗。因为SHY喜欢对偶，所以SHY规定最后选出的每个汉字都必须在[l,r]里出现了正偶数次。而且SHY认为选出的汉字的种类数（两个一样的汉字称为同一种）越多越好（为了拿到更多的素材！）。于是SHY请LYD安排选法。&lt;br/&gt;LYD这种傻×当然不会了，于是向你请教……&lt;br/&gt;问题简述：N个数，M组询问，每次问[l,r]中有多少个数出现正偶数次。&lt;/p&gt;
&lt;h2 id=&quot;input&quot;&gt;Input&lt;/h2&gt;
&lt;p&gt;输入第一行三个整数n、c以及m。表示文章字数、汉字的种类数、要选择M次。&lt;br/&gt;第二行有n个整数，每个数Ai在[1, c]间，代表一个编码为Ai的汉字。&lt;br/&gt;接下来m行每行两个整数l和r，设上一个询问的答案为ans(第一个询问时ans=0)，令L=(l+ans)mod n+1, R=(r+ans)mod n+1，若L&amp;gt;R，交换L和R，则本次询问为[L,R]。&lt;/p&gt;
&lt;h2 id=&quot;output&quot;&gt;Output&lt;/h2&gt;
&lt;p&gt;输出共m行，每行一个整数，第i个数表示SHY第i次能选出的汉字的最多种类数。&lt;/p&gt;
&lt;h2 id=&quot;range&quot;&gt;Range&lt;/h2&gt;
&lt;p&gt;对于100%的数据，1&amp;lt;=n,c,m&amp;lt;=10^5&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;分块。&lt;br/&gt;我们把数列分成 &lt;span class=&quot;math inline&quot;&gt;\(\sqrt N\)&lt;/span&gt; 块。&lt;br/&gt;记 &lt;span class=&quot;math inline&quot;&gt;\(\mathcal{ans[i][j]}\)&lt;/span&gt; 表示从 &lt;span class=&quot;math inline&quot;&gt;\(l\)&lt;/span&gt; 块到 &lt;span class=&quot;math inline&quot;&gt;\(r\)&lt;/span&gt; 块的答案，可以在 &lt;span class=&quot;math inline&quot;&gt;\(\mathcal{O(N\sqrt N)}\)&lt;/span&gt; 得到。&lt;br/&gt;记 &lt;span class=&quot;math inline&quot;&gt;\(sum[i][j]\)&lt;/span&gt; 表示第 &lt;span class=&quot;math inline&quot;&gt;\(1-i\)&lt;/span&gt; 块数字 &lt;span class=&quot;math inline&quot;&gt;\(j\)&lt;/span&gt; 出现了多少次，这个我们可以先求出第 &lt;span class=&quot;math inline&quot;&gt;\(i\)&lt;/span&gt; 块中数字 &lt;span class=&quot;math inline&quot;&gt;\(j\)&lt;/span&gt; 出现了多少次，然后求前缀和即可。这个可以在 &lt;span class=&quot;math inline&quot;&gt;\(\mathcal{O(C\sqrt N)}\)&lt;/span&gt; 内得到。&lt;br/&gt;对于询问区间 &lt;span class=&quot;math inline&quot;&gt;\([l,r]\)&lt;/span&gt;，我们可以从 &lt;span class=&quot;math inline&quot;&gt;\(ans\)&lt;/span&gt; 数组中快速求出中间连续的完整的块的答案。&lt;br/&gt;对于剩余部分，我们可以一个一个调整答案，反正剩余部分的长度是 &lt;span class=&quot;math inline&quot;&gt;\(\sqrt N\)&lt;/span&gt; 级别的。&lt;br/&gt;ps:判断一个数是不是偶数时不能简单的&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(i^&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) 
    ...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果这样判断，只要 &lt;span class=&quot;math inline&quot;&gt;\(i\)&lt;/span&gt; 不为 &lt;span class=&quot;math inline&quot;&gt;\(0\)&lt;/span&gt;，那么这个值一定为真。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;40&quot;&gt;
&lt;pre class=&quot;sourceCode cpp&quot;&gt;
&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span class=&quot;ot&quot;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#include&amp;lt;cstdio&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#include&amp;lt;cctype&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;#define N 100005&lt;/span&gt;

&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; tot;
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; n,c,m;
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; val[N];
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; cnt[N];
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; sum[&lt;span class=&quot;dv&quot;&gt;405&lt;/span&gt;][N];
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; l[&lt;span class=&quot;dv&quot;&gt;405&lt;/span&gt;],r[&lt;span class=&quot;dv&quot;&gt;405&lt;/span&gt;];
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; ans[&lt;span class=&quot;dv&quot;&gt;405&lt;/span&gt;][&lt;span class=&quot;dv&quot;&gt;405&lt;/span&gt;];
&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; block,belong[N];

&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; read(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &amp;amp;x){
    x=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; ch=getchar();
    &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt;(!isdigit(ch)) ch=getchar();
    &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt;(isdigit(ch)) x=(x&amp;lt;&amp;lt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)+(x&amp;lt;&amp;lt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)+(ch^&lt;span class=&quot;dv&quot;&gt;48&lt;/span&gt;),ch=getchar();
}

&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; query(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; x,&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; y){
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(belong[x]==belong[y] &lt;span class=&quot;kw&quot;&gt;or&lt;/span&gt; belong[x]&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;==belong[y]){
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; now=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=x;i&amp;lt;=y;i++){
            cnt[val[i]]++;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[i]]%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[i]]&amp;gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) now--;
        }
        memset(cnt,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;kw&quot;&gt;sizeof&lt;/span&gt; cnt);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; now;
    }
    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; now=ans[belong[x]&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;][belong[y]&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;];
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=x;i&amp;lt;=r[belong[x]];i++)
        cnt[val[i]]++;
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=y;i&amp;gt;=l[belong[y]];i--)
        cnt[val[i]]++;
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=x;i&amp;lt;=r[belong[x]];i++){
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[i]]){
            &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; tmp=sum[belong[y]&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;][val[i]]-sum[belong[x]][val[i]];
            &lt;span class=&quot;co&quot;&gt;//printf(&quot;tmp=%d\n&quot;,tmp);&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(!tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (tmp&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (tmp%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) now--;
            cnt[val[i]]=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
        }
    }
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=y;i&amp;gt;=l[belong[y]];i--){
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[i]]){
            &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; tmp=sum[belong[y]&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;][val[i]]-sum[belong[x]][val[i]];
            &lt;span class=&quot;co&quot;&gt;//printf(&quot;tmp=%d\n&quot;,tmp);&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(!tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (tmp&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(tmp &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (tmp%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; (cnt[val[i]]&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) now--;
            cnt[val[i]]=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
        }
    }
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; now;
}

&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; file(){
    freopen(&lt;span class=&quot;st&quot;&gt;&quot;in.txt&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;r&quot;&lt;/span&gt;,stdin);
    freopen(&lt;span class=&quot;st&quot;&gt;&quot;out1.txt&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;w&quot;&lt;/span&gt;,stdout);
}

&lt;span class=&quot;dt&quot;&gt;signed&lt;/span&gt; main(){
    &lt;span class=&quot;co&quot;&gt;//file();&lt;/span&gt;
    read(n),read(c),read(m);
    block=sqrt((&lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt;)n);
    tot=n/block;
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(n%block) tot++;
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++){
        scanf(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;,&amp;amp;val[i]);
        belong[i]=(i&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)/block&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;;
        sum[belong[i]][val[i]]++;
    }
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;i&amp;lt;=tot;i++){
        l[i]=(i&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)*block&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;;
        r[i]=i*block;
        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; j=&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;j&amp;lt;=c;j++) sum[i][j]+=sum[i&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;][j];
    }
    &lt;span class=&quot;co&quot;&gt;/*for(int i=1;i&amp;lt;=tot;i++){&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        for(int j=1;j&amp;lt;=c;j++)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;            printf(&quot;i=%d,j=%d,sum=%d\n&quot;,i,j,sum[i][j]);&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    }*/&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;;i&amp;lt;=tot;i++){
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; now=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; j=l[i];j&amp;lt;=n;j++){
            cnt[val[j]]++;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[j]]%&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) now++;
            &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(cnt[val[j]]&amp;gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) now--;
            ans[i][belong[j]]=now;
        }
        &lt;span class=&quot;co&quot;&gt;/*for(int j=l[i];j&amp;lt;=n;j++)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;            cnt[val[j]]--;*/&lt;/span&gt;
        memset(cnt,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;kw&quot;&gt;sizeof&lt;/span&gt; cnt);
    }
    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; last=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt;(m--){
        &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; a,b,x,y;
        read(a),read(b);
        x=(a+last)%n&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;;
        y=(b+last)%n&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(x&amp;gt;y) x^=y^=x^=y;
        printf(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;%d\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;,last=query(x,y));
    }
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 07 May 2018 15:45:00 +0000</pubDate>
<dc:creator>YoungNeal</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/YoungNeal/p/9005886.html</dc:identifier>
</item>
<item>
<title>浅析fork()和底层实现 - tp_16b</title>
<link>http://www.cnblogs.com/tp-16b/p/9005079.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tp-16b/p/9005079.html</guid>
<description>&lt;p&gt;&lt;span&gt;记得以前初次接触fork()函数的时候，一直被“printf”输出多少次的问题弄得比较晕乎。不过，“黄天不负留心人&quot;。哈~ 终于在学习进程和进程创建fork相关知识后，总算是大致摸清了其中的来龙去脉。废话不多讲，下面来谈谈本人的一点小小积累&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; 一个现有的进程可以调用fork函数创建一个新进程。原型如下：&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;dp-highlighter bg_cpp&quot;&gt;
&lt;ol class=&quot;dp-cpp&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;alt&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;lt;unistd.h&amp;gt;  &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;  &lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;pid_t fork(&lt;span class=&quot;keyword&quot;&gt;void);  &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;  &lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;返回值:自进程中返回0，父进程返回进程id，出错返回-1  &lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;br/&gt;&lt;span&gt;f&lt;span&gt;ork()系统调用通过复制一个现有进程来创建一个全新的进程. 进程被存放在一个叫做任务队列的双向循环链表当中.链表当中的每一项都是类型为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;task_struct成为进程描述符的结构.也就是我们写过的&lt;span&gt;进程PCB&lt;/span&gt;&lt;span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;小知识:&lt;/strong&gt;内核通过一个位置的进程标识值或PID来标识每一个进程.同时其最大值默认为32768，short int短整型的最大值. 他就是系统中允许同时存在的进程最大的数目.可以去linux下的proc目录中寻找一个 pid_max的文件，并打开它加以验证. 如&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201805/1272978-20180507203004622-768769985.png&quot; alt=&quot;&quot; width=&quot;759&quot; height=&quot;242&quot;/&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;fork()运行时做的事情&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;首先我们来看一段代码，&lt;span&gt;不过这里会有一点奇怪的现象:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;************************************************************************
  2   &amp;gt; File Name: 1.c
  3   &amp;gt; Author: tp
  4   &amp;gt; Mail: 
  5   &amp;gt; Created Time: Mon 07 May 2018 07:57:28 PM CST
  6  ***********************************************************************&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
  &lt;span&gt;7&lt;/span&gt; 
  &lt;span&gt;8&lt;/span&gt; #include &amp;lt;stdio.h&amp;gt;
  &lt;span&gt;9&lt;/span&gt; #include &amp;lt;stdlib.h&amp;gt;
 &lt;span&gt;10&lt;/span&gt; #include &amp;lt;unistd.h&amp;gt;
 &lt;span&gt;11&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; main( &lt;span&gt;void&lt;/span&gt;&lt;span&gt;)
 &lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt; {
 &lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;change world!\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     pid_t pid =&lt;span&gt; fork();
 &lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;( pid == -&lt;span&gt;1&lt;/span&gt;) {perror(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;fork&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;),exit(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;); }
 &lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
 &lt;span&gt;17&lt;/span&gt;     printf( &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pid=%d, returnVal=%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, getpid(), pid);
 &lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     sleep( &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     exit(&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt; }
&lt;/span&gt;~     
&lt;/pre&gt;&lt;/div&gt;

&lt;span&gt;&lt;br/&gt;&lt;span&gt;这段代码的运行结果，大家如果像我当时不了解fork的时候，一定会以为输出结果是两个&quot;change world!&quot;，然后2个printf里面的内容. 因为&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们复制出来了两个&lt;span&gt;一模一样的进程，那么他们就应该做同样的事情. But!!! 我们看运行结果:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201805/1272978-20180507203735843-573117671.png&quot; alt=&quot;&quot; width=&quot;385&quot; height=&quot;146&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;结果并非我们想的那样，这个时候我们就需要知道fork出子进程之后，程序的运行细节.这里我画一张图帮助我理解：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;span&gt;&lt;img src=&quot;https://img-blog.csdn.net/20171204155921183&quot; alt=&quot;&quot; width=&quot;711&quot; height=&quot;336&quot;/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;div readability=&quot;81.794743429287&quot;&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一般来说，在fork之后是父进程先执行还是子进程先执行是不确定的.这取决于内核所使用的调度算法.如果要求父，子进程之间相互同步.则要求某种形式的进程间通信. 好了我们继续，当进程调用fork后，当控制转移到内核中的fork代码后，内核会做4件事情:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　1.分配新的内存块和内核数据结构给子进程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　2.将父进程部分数据结构内容(数据空间，堆栈等）拷贝至子进程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　3.添加子进程到系统进程列表当中&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　4.fork返回，开始调度器调度&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;&lt;span&gt;为什么fork成功调用后返回两个值? &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;由于在复制时复制了父进程的堆栈段，所以两个进程都停留在fork函数中，等待返回。所以fork函数会返回两次,一次是在父进程中返回，另一次是在子进程中返回，这&lt;strong&gt;两次的返回值不同&lt;/strong&gt;，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中父进程返回子进程pid，这是由于一个进程可以有多个子进程，但是却没有一个函数可以让一个进程来获得这些子进程id，那谈何给别人你创建出来的进程。而&lt;span&gt;子进程返回0，这是由于&lt;/span&gt;子进程可以调用getppid获得其父进程进程ID,但这个父进程ID却不可能为0，因为进程ID0总是有内核交换进程所用，故返回0就可代表正常返回了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;span&gt;从fork函数开始以后的代码父子共享，既父进程要执行这段代码，子进程也要执行这段代码.(子进程获得父进程数据空间，堆和栈的副本. 但是父子进程并不共享这些存储空间部分. (即父，子进程共享代码段.)。现在很多实现并不执行一个父进程数据段，堆和栈的完全复制. 而是采用&lt;a href=&quot;http://blog.csdn.net/dawn_sf/article/details/66522352&quot; target=&quot;_blank&quot;&gt;写时拷贝技术&lt;/a&gt;(&lt;span&gt;不懂可以戳进去看一看).这些区域有父子进程共享，而且内核地他们的访问权限改为只读的.如果父子进程中任一个试图修改这些区域,则内核值为修改区域的那块内存制作一个副本, 也就是如果你不修改我们一起用，你修改了之后对于修改的那部分内容我们分开各用个的.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;



&lt;h3&gt;&lt;span&gt;&lt;strong&gt;父子进程文件共享问题&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;


&lt;p&gt;&lt;span&gt;来看个例子&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;46&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;1&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;************************************************************************
  2   &amp;gt; File Name: 2.c
  3   &amp;gt; Author: tp
  4   &amp;gt; Mail: 
  5   &amp;gt; Created Time: Mon 07 May 2018 12:40:39 PM CST
  6  ***********************************************************************&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
  &lt;span&gt;7&lt;/span&gt; 
  &lt;span&gt;8&lt;/span&gt; #include &amp;lt;stdio.h&amp;gt;
  &lt;span&gt;9&lt;/span&gt; #include &amp;lt;stdlib.h&amp;gt;
 &lt;span&gt;10&lt;/span&gt; #include &amp;lt;unistd.h&amp;gt;
 &lt;span&gt;11&lt;/span&gt; #include &amp;lt;fcntl.h&amp;gt;
 &lt;span&gt;12&lt;/span&gt; 
 &lt;span&gt;13&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; = &lt;span&gt;110&lt;/span&gt;&lt;span&gt;;
 &lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; main( &lt;span&gt;void&lt;/span&gt;&lt;span&gt;)
 &lt;/span&gt;&lt;span&gt;15&lt;/span&gt;&lt;span&gt; {
 &lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     printf( &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;before fork\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     pid_t pid =&lt;span&gt; fork( );
 &lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;( pid &amp;lt; &lt;span&gt;0&lt;/span&gt;){ perror(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; fork&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;),exit( &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);}
 &lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
 &lt;span&gt;20&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;( pid == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
 &lt;/span&gt;&lt;span&gt;21&lt;/span&gt;&lt;span&gt;     {
 &lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         ++&lt;span&gt;set&lt;/span&gt;&lt;span&gt;;
 &lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         printf( &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;son pid=%d, %d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, getpid(), &lt;span&gt;set&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;24&lt;/span&gt;&lt;span&gt;     }
 &lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
 &lt;span&gt;26&lt;/span&gt;&lt;span&gt;     {
 &lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         sleep( &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;28&lt;/span&gt;         printf( &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;parent pid=%d , %d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, getpid( ), &lt;span&gt;set&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;29&lt;/span&gt;&lt;span&gt;     }
 &lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     exit( &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
 &lt;/span&gt;&lt;span&gt;31&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;看一下结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201805/1272978-20180507211704272-1013862793.png&quot; alt=&quot;&quot; width=&quot;432&quot; height=&quot;173&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不难注意到  &lt;strong&gt;&lt;span&gt;“&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;before fork”这句话只是被打印了一次，这个从上面的例子，这不难理解；与此同时&lt;span&gt;&lt;strong&gt;&lt;span&gt;子进程中的&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;set的值&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;被改变了&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;。此时再进行一个重定向操作会发生什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201805/1272978-20180507225008815-1093615116.png&quot; alt=&quot;&quot; width=&quot;419&quot; height=&quot;171&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;出现很神奇的现象！ 这个时候打印了出了两次“before fork”,不仅仅是如此，上述&lt;span&gt;针对父进程的标准输出执行&lt;/span&gt;重定向操作导致了让子进程也执行重定向的操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;透过现象看本质，来细细分析一下。针对打印两次“before fork”,首先，先要知道标准IO库是带缓冲，而像printf这种直接输出到标准输出时，这个缓冲区是由换行符刷新的；而当执行了重定向操作，这里就是将标准输出重定向到文件，文件就不会刷新缓冲区了，好，由于在fork之前调用了一次printf,但fork之后，该行数据仍留着缓冲区，然后父进程数据空间被复制到子进程中，该缓冲去也被复制进去，这样父子进程都各自带有该行内容的缓冲区了，然后exit之前就又追加了一次“before fork”到缓冲区。所以最后就打印了两次。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　再一个就是，在重定向父进程的标准输出时，子进程标准输出也被重定向。这就源于&lt;span&gt;父子进程会共享所有的打开文件。&lt;/span&gt;　因为fork的特性就是将父进程所有打开文件描述符复制到子进程中。当父进程的标准输出被重定向，子进程本是写到标准输出的时候，自然写到其它地方，与此同时，它还更新了与父进程共享的该文件的偏移量。这里，在父进程等待子进程执行时，子进程将改为写到文件show.out中；在子进程终止后，父进程也写到show.out中，同时其输出会追加在子进程所写数据之后。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;在fork之后处理文件描述符一般又以下两种情况：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;span&gt;1.父进程等待子进程完成。此种情况，父进程无需对其描述符作任何处理。当子进程终止后，它曾进行过读，写操作的任一共享描述符的文件偏移已发生改变。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;　　2.父子进程各自执行不同的程序段。这样fork之后，父进程和子进程各自关闭它们不再使用的文件描述符，这样就避免干扰对方使用的文件描述符了。这类似于网络服务进程。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;同时父子进程也是有区别的：它们不仅仅是两个返回值不同；它们各自的父进程也不同，父进程的父进程是ID不变的；还有子进程不继承父进程设置的文件锁，子进程未处理的信号集会设置为空集等不同&lt;/span&gt;&lt;/p&gt;


&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;fork()函数在底层中做了什么?&lt;/span&gt;&lt;/h3&gt;


&lt;p&gt;　&lt;span&gt;　linux平台通过clone()系统调用实现fork(). fork(),vfork()和clone()库函数都根据各自需要的参数标志去调用clone()，然后由clone()去调用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;do_fork(). 再然后do_fork()完成了创建中的大部分工作，他定义在kernel/fork.c当中.该函数调用copy_process(). 然后重点来了，我们看看这个&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;copy_process函数到底做了那些事情?? 我画一张图帮我们理解：&lt;/span&gt;&lt;/p&gt;


&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201804/1272978-20180425230432292-1830281726.png&quot; alt=&quot;&quot; width=&quot;672&quot; height=&quot;296&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1272978/201804/1272978-20180425230326082-1896884090.png&quot; alt=&quot;&quot; width=&quot;681&quot; height=&quot;380&quot;/&gt;

&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;vfork和fork的之间的比较:&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;hr/&gt;&lt;span&gt;vfork()的诞生是在fork()还没有写时拷贝的时候，因为那个时候创建一个子进程的成本太大了，如果一下子创建好多了那么程序的效率一定会下降. 然后就有人提出了vfork(). vfork的实现原理非常简单，就是子进程，父进程完全公用一个资源. 就是是有人修改了内容，甚至main()函数退出了也不会新开辟一个空间. 所以这里里会有问题的，如果你的一个子进程没有使用exit()退出，那么程序就会出现段错误. 不相信可以去试一试~ &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;为什么会出现段错误? &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　&lt;span&gt;　在函数栈上面，子进程运行结束了，main的函数栈被子进程释放了，然后父进程在使用的时候，就访问不到了，一旦vfork出子进程，退出的时候需要使用exit来结束.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;vfork和fork之间的区别:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.fork父子进程交替运行，vfork保证子进程先运行，父进程阻塞，直到子进程结束（或子进程调用了exec或exit）.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.fork实现了写时拷贝. 而vfork直接让父子进程共用公用资源，避免多开辟空间拷贝,&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3,vfork必须使用exit或者excl退出.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.就算是fork使用了写时拷贝，也没有vfork性能高.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.每个系统上的vfork都有问题，推荐不要使用.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;/div&gt;
</description>
<pubDate>Mon, 07 May 2018 15:39:00 +0000</pubDate>
<dc:creator>tp_16b</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tp-16b/p/9005079.html</dc:identifier>
</item>
<item>
<title>纯前端实现图片背景透明化 - 韩子卢</title>
<link>http://www.cnblogs.com/vvjiang/p/9005804.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vvjiang/p/9005804.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;不论是做一些2d的小游戏，或者制作小图标，或者抠图都需要用到这个功能，对图片的背景进行透明化，是我们经常需要用到的一个功能。&lt;/p&gt;
&lt;p&gt;通常情况下我们都会去下载PS或者美图秀秀这样的软件去制作。&lt;/p&gt;
&lt;p&gt;但是我真的不想仅仅为了做个透明图像就去下载这些软件，这些软件不仅体积大，要下载个半天，放在电脑上也占空间。&lt;/p&gt;
&lt;p&gt;最重要的是每次我做这个事情，都需要去临时百度一下制作透明图片的方法。&lt;/p&gt;
&lt;p&gt;这些软件固然强大，但是功能的众多或者需要一些基础知识，往往造成了一些门槛。&lt;/p&gt;
&lt;p&gt;简单点说，虽然瑞士军刀很6，但是我现在只需要一把起子，我不想知道什么蒙版图层，不想在一堆什么美颜什么各种滤镜之中找半天，我就想上传个图片点两下就好了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么能不能在线对图片进行背景透明化呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当然是有的，下面是网址&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;uri&quot; href=&quot;http://www.aigei.com/bgremover/&quot;&gt;http://www.aigei.com/bgremover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你以为我是来推荐网站的？当然不是。&lt;/p&gt;
&lt;p&gt;我之所以提到这个网站，是因为我以前就是用这个做一些处理的，但是真的不是很给力啊。&lt;/p&gt;
&lt;p&gt;我并不知道它的原理，也没有看过它的代码，但是它的缺陷很明显：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;不能对指定颜色进行透明化&lt;/li&gt;
&lt;li&gt;当需要对色差很大的多种颜色进行透明化时，无能为力&lt;/li&gt;
&lt;li&gt;对一些图片的透明化处理不够完美，会出现锯齿，但是又无法进行进一步处理&lt;/li&gt;
&lt;li&gt;对复杂图片完全无能为力&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;有问题就解决问题呗，于是就有了今天的小玩意。&lt;/p&gt;
&lt;h2 id=&quot;作品&quot;&gt;作品&lt;/h2&gt;
&lt;p&gt;与之前的作品一样，直接将功能写在这篇博客里了，所以可以直接在博客园中使用。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;上传图片&lt;/li&gt;
&lt;li&gt;点击图片，将以鼠标点击处的颜色为标准，对色差20之内的颜色进行透明化处理。（如果想调整色差标准，可以在控制台下设置transparentConfig.colorDiff）&lt;/li&gt;
&lt;li&gt;对出现透明化处理有有误的地方，可以开启恢复模式，再次移动鼠标到图片上，此时鼠标会变成红色小方框，小方框区域内会显示原始图像。点击后会将红色小方框区域内的图像恢复为原始图像。（如果想调整小方框尺寸，可以在控制台下通过transparentConfig.setRecoverSize(30)的方式进行修改）&lt;/li&gt;
&lt;li&gt;下载图片，搞定。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;当然按照本懒人的惯例，还是只在chrome浏览器下实现，所以如果您用其它浏览器的话可能无法正常操作。&lt;/p&gt;
&lt;p&gt;不过本应用的核心功能与以往一样都是可以在现代浏览器中实现的，只是需要您调一下兼容性。&lt;/p&gt;
&lt;p&gt;如果您有闲情逸致，想研究一下的话，这是本项目的 &lt;a href=&quot;https://github.com/vvjiang/Img4Transparent&quot;&gt;GitHub地址&lt;/a&gt;，为了能方便复制进博客园，所以代码是直接写在html中的。&lt;/p&gt;
&lt;p&gt;少说废话，以下为应用：&lt;/p&gt;

&lt;h2 id=&quot;技术点&quot;&gt;技术点&lt;/h2&gt;
&lt;p&gt;本应用依然只使用纯前端实现，涉及到的技术点如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;获取图片文件&lt;/li&gt;
&lt;li&gt;将文件转换为图片,并放入canvas中&lt;/li&gt;
&lt;li&gt;点击canvas获取点击处的颜色信息&lt;/li&gt;
&lt;li&gt;根据指定颜色，对图像中在色差范围内的颜色进行透明化处理&lt;/li&gt;
&lt;li&gt;自定义鼠标，在鼠标上显示指定区域内原始图像&lt;/li&gt;
&lt;li&gt;对图像上指定区域，进行图像还原操作&lt;/li&gt;
&lt;li&gt;下载图片&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;其中技术点1，2，7在之前的一篇博客中有涉及到，所以这里就不再赘述，不了解的可以去看一下我之前写的那篇博客：&lt;a href=&quot;http://www.cnblogs.com/vvjiang/p/8673879.html&quot;&gt;在博客园里给图片加水印(canvas + drag)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那么，接下来就让我们看一下具体的实现吧。&lt;/p&gt;
&lt;h2 id=&quot;点击图片获取点击处的颜色信息&quot;&gt;点击图片获取点击处的颜色信息&lt;/h2&gt;
&lt;p&gt;通过type为file类型的input获取到文件，然后通过FileReader读取文件信息后放入到canvas中。&lt;/p&gt;
&lt;p&gt;这是前两步所做的工作，现在我们需要做的是点击图像（实际上是canvas）获取到点击处的颜色信息。&lt;/p&gt;
&lt;p&gt;首先我们需要获取到原始图像的像素信息，并保存下来，这一步在图片加载时实现，部分代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; ctx = document.getElementById('target_canvas').getContext('2d'&lt;span&gt;);
imgDataArr &lt;/span&gt;= ctx.getImageData(0, 0, imgWidth, imgHeight).data;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; 小课堂开始：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;canvas的getImageData会获取canvas中指定区域内的图像信息，返回一个ImageData对象。&lt;/p&gt;
&lt;p&gt;ImageData对象的data属性的值是一个Uint8ClampedArray对象，而这个对象就是图像的像素信息。&lt;/p&gt;
&lt;p&gt;Uint8ClampedArray看名字可以了解到，它是一个定型数组，里面的值都是0-255范围之内的值。&lt;/p&gt;
&lt;p&gt;假如我们有一个图片只有四个像素，长2px，宽2px。左上角的像素和右下角的像素为黑色，而右上角和左下角的像素为白色。&lt;/p&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/746209/201805/746209-20180507231941209-1152228683.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那么这张图片会以怎样的形式存储在Uint8ClampedArray数组中呢？&lt;/p&gt;
&lt;p&gt;首先我们了解到白色的RGBA值为rgba(255,255,255,255)，黑色的RGBA值为rgba(0,0,0,255)。&lt;/p&gt;
&lt;p&gt;那么这张图片的分解为rgba值，分别为&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
rgba(0,0,0,255)           rgba(255,255,255,255)
rgba(255,255,255,255)     rgba(0,0,0,255)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么颜色值将会以从左到右，从上至下的方式存储到Uint8ClampedArray数组中，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;47&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
[0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;小课堂讲解完毕，回到正题。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在我们已经拿到了原始图像的像素信息了，并存放在了imgDataArr这个Uint8ClampedArray数组中。&lt;/p&gt;
&lt;p&gt;如何获取鼠标点击处的像素信息呢？代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　　/*&lt;/span&gt;&lt;span&gt;*
      * 获取图像数据中指定偏移处的颜色信息
      &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;function&lt;/span&gt;&lt;span&gt; getColorInfo(imgDataArr, offsetX, offsetY) {
      &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; pos = canvasInfo.width * 4 * offsetY + offsetX * 4&lt;span&gt;;
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
        rValue: imgDataArr[pos],
        gValue: imgDataArr[pos &lt;/span&gt;+ 1&lt;span&gt;],
        bValue: imgDataArr[pos &lt;/span&gt;+ 2&lt;span&gt;],
        aValue: imgDataArr[pos &lt;/span&gt;+ 3&lt;span&gt;]
      }
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
     * 非恢复模式下，点击canvas，以点击处颜色为标准，去掉颜色色差在指定色差范围内的颜色
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;function&lt;/span&gt;&lt;span&gt; transparetModeCanvasClick(e) {
      &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (imgDataArr.length === 0&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
      }
      &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (resultImgDataArr.length === 0&lt;span&gt;) {
        resultImgDataArr &lt;/span&gt;= imgDataArr.slice(0&lt;span&gt;)
      }
      &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; clickColorInfo =&lt;span&gt; getColorInfo(resultImgDataArr, e.offsetX, e.offsetY)
      ...
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们会给canvas绑定回调函数为transparetModeCanvasClick的click事件，那么，在鼠标点击canvas后，我们就可以获取到鼠标相对于canvas左上角的点击位置。&lt;/p&gt;
&lt;p&gt;imgDataArr里面保存的是原始的图像像素信息，之后还会用到，所以这里不做处理。&lt;/p&gt;
&lt;p&gt;那么就copy数据到当前像素信息数组resultImgDataArr中。&lt;/p&gt;
&lt;p&gt;然后获取像素信息时需要计算像素在一维数组中的位置：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; pos = canvasInfo.width * 4 * offsetY + offsetX * 4;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据上面的表达式得到点击的那个像素在一维数组中的位置，如果有仔细阅读之前Uint8ClampedArray存储像素信息的方式，这个表达式应该不难理解。&lt;/p&gt;
&lt;h2 id=&quot;判断颜色与指定颜色的色差并做透明化处理&quot;&gt;判断颜色与指定颜色的色差，并做透明化处理&lt;/h2&gt;
&lt;p&gt;在获取到点击像素的颜色信息后，我们需要去遍历整个canvas的像素信息，对于色差小于指定范围的颜色做透明化处理。代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
         * 获取图像数据指定位置颜色与指定颜色的色差
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; getColorDiff(imgDataArr, pos, colorInfo) {
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; value = Math.pow(imgDataArr[pos] - colorInfo.rValue, 2) +&lt;span&gt;
            Math.pow(imgDataArr[pos &lt;/span&gt;+ 1] - colorInfo.gValue, 2) +&lt;span&gt;
            Math.pow(imgDataArr[pos &lt;/span&gt;+ 2] - colorInfo.bValue, 2&lt;span&gt;);

          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; Math.pow(value, 0.5&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
         * 设置图像数据指定位置为透明色
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; setTransparent(imgDataArr, pos) {
          imgDataArr[pos] &lt;/span&gt;= 0&lt;span&gt;;
          imgDataArr[pos &lt;/span&gt;+ 1] = 0&lt;span&gt;;
          imgDataArr[pos &lt;/span&gt;+ 2] = 0&lt;span&gt;;
          imgDataArr[pos &lt;/span&gt;+ 3] = 0&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
         * 非恢复模式下，点击canvas，以点击处颜色为标准，去掉颜色色差在指定色差范围内的颜色
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; transparetModeCanvasClick(e) {
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (imgDataArr.length === 0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
          }
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (resultImgDataArr.length === 0&lt;span&gt;) {
            resultImgDataArr &lt;/span&gt;= imgDataArr.slice(0&lt;span&gt;)
          }
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; clickColorInfo =&lt;span&gt; getColorInfo(resultImgDataArr, e.offsetX, e.offsetY)

          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 如果是透明颜色则不做处理&lt;/span&gt;
          &lt;span&gt;if&lt;/span&gt; (clickColorInfo.aValue === 0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
          }

          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ctx = document.getElementById('target_canvas').getContext('2d'&lt;span&gt;);
          &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; pos = 0, len = canvasInfo.width * canvasInfo.height * 4; pos &amp;lt; len; pos = pos + 4&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (getColorDiff(resultImgDataArr, pos, clickColorInfo) &amp;lt;&lt;span&gt; transparentConfig.colorDiff) {
              setTransparent(resultImgDataArr, pos);
            }
          }
          ctx.putImageData(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; ImageData(resultImgDataArr, canvasInfo.width, canvasInfo.height), 0, 0&lt;span&gt;);
          setCanvasImgToDownloadLink();
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 色差计算公式为将rgb三个值的颜色相减，将他们的平方和进行开方即可。&lt;/p&gt;
&lt;p&gt;这里其实存在一个优化点：&lt;/p&gt;
&lt;p&gt;1、通常我们设为透明色的颜色，每次实际上都比较单一，那么在这里可以设一个临时数组存放已经比较过色差的颜色。再次要对一个颜色比较色差前，可以查看颜色是否在这个数组中，从而避免再次计算色差，因此对于大图像而言，存在很多像素点，这种大量计算能尽量减少的话可以让操作更快。&lt;/p&gt;
&lt;p&gt;2、这里的循环也可以进行优化。倒序循环  + Duff's Device可以进行优化。&lt;/p&gt;
&lt;p&gt;之所以在这里强调这一点，是因为在这里对大图进行消除单一颜色为透明色时，确实需要消耗更多时间。（不过我还能接受，所以暂时不理了）&lt;/p&gt;
&lt;p&gt;至于设置图片为透明色，实际上只需要将&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
imgDataArr[pos + 3] = 0;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;即可。&lt;br/&gt;但是为了和一般声明的透明颜色保持一致，还是将其他几个值都设为0。&lt;/p&gt;
&lt;p&gt;将数据设为透明色的数据之后，需要调用canvas的putImageData方法将整个图像的数据设置到canvas中。&lt;/p&gt;
&lt;p&gt;至此，我们完成了对图像进行透明化处理的整个过程。&lt;br/&gt;但是仍然不够，因为对于复杂图像而言，这种方式处理起来太过粗暴，无法做到精细化的处理。&lt;br/&gt;所以接下来我们要实现恢复模式，对于处理的不好的地方进行恢复原始图像的操作。&lt;/p&gt;
&lt;h2 id=&quot;恢复模式的探讨&quot;&gt;恢复模式的探讨&lt;/h2&gt;
&lt;p&gt;在恢复模式下，当我们鼠标移动到canvas上时，鼠标显示为一个小方框，小方框内是原始图像。&lt;br/&gt;当我们点击鼠标时，小方框内的图像会重新覆盖到当前图像上，从而达到恢复原有图像的效果。&lt;/p&gt;
&lt;p&gt;全篇下来，其实在这个地方才开始显得有趣。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 最初方案（隐藏鼠标 + canvas） &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在想到通过这个办法进行精细化操作之后，第一反应是隐藏鼠标，并在移动鼠标时跟随一个小的canvas，这个小canvas中显示的是原始图像。&lt;/p&gt;
&lt;p&gt;事实上最开始也是这么做的，如果各位有兴趣的话可以参考我github上的提交方案，上面有这个方案的实现。&lt;/p&gt;
&lt;p&gt;虽然这个方案可以实现效果，但是存在一个很明显的性能问题，操作起来会有顿卡的感觉。&lt;/p&gt;
&lt;p&gt;原因就是在进行鼠标移动的时候，会频繁的计算图像信息，再写入到小canvas中。&lt;/p&gt;
&lt;p&gt;虽然后来加了个防抖函数，并将移动方框放在防抖函数外，使得红色小框可以即时移动，其中的内容不会出现顿卡，但是因为防抖函数的存在，必然会有一点小小的延迟。&lt;/p&gt;
&lt;p&gt;作为一个懒人其实我觉得做到这里就可以了，因为这样我也可以用了。&lt;/p&gt;
&lt;p&gt;然而，纠结了半天还是改了，这种卡顿实在是蛋疼得紧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现在的方案（隐藏鼠标 + background-image） &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在的方案是在鼠标移动时，隐藏鼠标，并在鼠标那里加一个div，div里面设置原始图像的背景图片。&lt;/p&gt;
&lt;p&gt;在移动鼠标时，不仅会对鼠标的位置进行重新计算（说是位置，实际上用的是translate，而不是top+left），还会对背景图片的位置进行重新计算，这样就可以实现同样的效果了。&lt;/p&gt;
&lt;p&gt;通过这种方案，在我的电脑上移动红框和计算恢复图像的方式很流畅，完全感觉不到卡顿。&lt;/p&gt;
&lt;p&gt;如果在低配电脑上有卡顿的情况，这里也可以加一个防抖函数来处理。&lt;/p&gt;
&lt;h2 id=&quot;恢复模式的实现&quot;&gt;恢复模式的实现&lt;/h2&gt;
&lt;p&gt;那么让我们现在来看一看恢复模式下鼠标在canvas上移动时的代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据鼠标的偏移位置获取recover_img位置&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getRecoverImgPos(e) {
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 给鼠标位置+1，是为了让recover_img不会出现在鼠标下方，从而使得鼠标点击时不会点击在recover_img上&lt;/span&gt;
  &lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
    x: e.offsetX &lt;/span&gt;+ 1&lt;span&gt;,
    y: e.offsetY &lt;/span&gt;+ 1&lt;span&gt;
  }
}

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 恢复模式下，鼠标在canvas上移动，呈现原先图像
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; recoverModeCanvasMove(e) {
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (imgDataArr.length === 0&lt;span&gt;) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  }
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; $recoverImg = $(&quot;#recover_img&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; recoverImgPos =&lt;span&gt; getRecoverImgPos(e)
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (recoverImgPos.x &amp;gt; canvasInfo.width - recoverSize || recoverImgPos.y &amp;gt; canvasInfo.height -&lt;span&gt; recoverSize) {
  $recoverImg.hide();
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
    $recoverImg.show();
  }
  $recoverImg.css({
    transform: &lt;/span&gt;'translate(' + recoverImgPos.x + 'px,' + recoverImgPos.y + 'px)'&lt;span&gt;,
    &lt;/span&gt;'background-position': (-recoverImgPos.x - 1) + 'px ' + (-recoverImgPos.y - 1) + 'px'&lt;span&gt;
  });
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上面的代码中我们会根据鼠标的位置重新计算恢复图像所在的div的位置，然后判断是否触边来决定是否隐藏。&lt;br/&gt;接着再来计算其位置。&lt;/p&gt;
&lt;p&gt;这里有一个坑点在注释里面也写了，就是恢复图像实际上并没有和鼠标重叠，以防止我们在点击时点到恢复图像上而不是canvas上。&lt;/p&gt;
&lt;p&gt;另外如果大家细心查看css样式的话，会发现两个小坑点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;在样式里面对恢复图像和canvas上的鼠标样式都设置了隐藏，原因是避免当鼠标拖动过快时鼠标会出现在恢复图像上，出现鼠标闪烁情况&lt;/li&gt;
&lt;li&gt;恢复图像本身就有一个top：1px和left：1px的初始值，这是因为我们的canvas有一个1px的border，而绝对定位的位置是相对于canvas的父级的。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;然后再来看看点击恢复图像的代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 恢复模式下，点击canvas，将点击处指定范围内图像恢复原样
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; recoverModeCanvasClick(e) {
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (imgDataArr.length === 0&lt;span&gt;) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  }
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; recoverImgPos =&lt;span&gt; getRecoverImgPos(e);
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i = 0, ylen = recoverSize; i &amp;lt; ylen; i++&lt;span&gt;) {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; pos = canvasInfo.width * 4 * (recoverImgPos.y + i) + recoverImgPos.x * 4&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; j = pos, xlen = pos + recoverSize * 4; j &amp;lt; xlen; j++&lt;span&gt;) {
      resultImgDataArr[j] &lt;/span&gt;=&lt;span&gt; imgDataArr[j]
    }
  }
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ctx = document.getElementById('target_canvas').getContext('2d'&lt;span&gt;);
  ctx.putImageData(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; ImageData(resultImgDataArr, canvasInfo.width, canvasInfo.height), 0, 0&lt;span&gt;);
  setCanvasImgToDownloadLink()
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样是先根据鼠标位置获取恢复图像的位置，然后根据偏移量去计算位置。&lt;/p&gt;
&lt;p&gt;我们得注意到虽然我们的恢复图像是一块完整的相连接的区域，但是在&lt;br/&gt;Uint8ClampedArray数组中的数据并不是相连接的，需要我们去计算。&lt;/p&gt;
&lt;p&gt;将最开始我们保存初始图像像素数组imgDataArr赋值到当前处理的图像像素数组中。&lt;/p&gt;
&lt;p&gt;最后将处理好的像素数组以putImageData的方式放入数组即可。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;这个小应用现在可以满足我的需求了，但是它依然存在很多不足与改进空间，比如：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;兼容性&lt;/li&gt;
&lt;li&gt;色差的调整，现在是放在控制台之中。即使是拿出来也可能只是一个输入框。实际上这个地方是可以做的更加完美，在应对一个复杂图片时，当我们点击一个像素后，可以保存这个像素，并出现一个调整色差的滑动条，拖动这个滑动条图像会针对色差在原基础上实时进行透明化和恢复图像的处理。&lt;/li&gt;
&lt;li&gt;恢复图像尺寸的调整，可以通过鼠标滑轮滚动的方式进行处理&lt;/li&gt;
&lt;li&gt;返回操作。可以增加回退功能。&lt;/li&gt;
&lt;li&gt;依然存在的一些小bug以及优化空间，以及仍然不够智能不够完美的图像处理，因为我真的只想点一下然后就自动处理好。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;本期分享结束，依然是一个小应用，依然是一堆你可能知道也可能不知道的小知识点。&lt;/p&gt;
&lt;p&gt;最后例行说明，右下角的精灵球是点赞，这已经是我连续几篇文章说明了，并且那么大几个字已经写明了。&lt;br/&gt;因为有几个园友引用了这个精灵球，所以你们应该也形成了精灵球即是点赞的心理预期和用户习惯了吧。&lt;br/&gt;如果你不小心点错了，请刷新页面，那么精灵球那里会出现取消点赞的按钮。&lt;/p&gt;
&lt;p&gt;下次不会再解释了。&lt;/p&gt;
</description>
<pubDate>Mon, 07 May 2018 15:28:00 +0000</pubDate>
<dc:creator>韩子卢</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/vvjiang/p/9005804.html</dc:identifier>
</item>
<item>
<title>unity零基础开始学习做游戏（四）biu~biu~biu发射子弹打飞机 - AGamer</title>
<link>http://www.cnblogs.com/agamer/p/9003622.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/agamer/p/9003622.html</guid>
<description>&lt;h3&gt;-------小基原创，转载请给我一个面子&lt;/h3&gt;
&lt;h3&gt;　　主角都能移动了，那不得做点什么伸张正义，守护世界和平的事嘛，拿起家伙biu~biu~biu~&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507153226158-1485879909.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;首先得做一个好人和一个坏人&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507153519123-754636750.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;老规矩，Canvas下创建两个Image，一个叫做player，一个叫做enemy1好了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507153716962-23008363.png&quot; alt=&quot;&quot;/&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507153730910-1191558826.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;一个红色，一个蓝色（自古红蓝出CP，不好意思，走错片场了●﹏●）&lt;/p&gt;
&lt;p&gt; &lt;span&gt;新知识：要加BoxCollider2D&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;子弹打到别人，其实是碰撞检测的过程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一种是根据位置坐标，判断子弹有没有打中，另一种是使用物理碰撞系统（小基这里使用后者）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 两个物体&lt;span&gt;物理碰撞检测条件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.物体A，物体B，必须都有Collider&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.运动的一方要有刚体（本例对应的是子弹，后面介绍）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507154339296-1223128192.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最终效果是这样的。&lt;/p&gt;


&lt;p&gt;下面开始制作子弹&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507154505455-1748667063.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Canvas下创建一个Image，修改名字叫做Bullet，使用自带的圆形图片凑合用吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507154645566-2068945688.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;同样添加BoxCollider2D，最后切记添加RigidBody，不然没法碰撞成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507160112486-829749449.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;额外提一句，重力调成0吧，不然子弹抛物线飞=_=&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507154759883-1696092576.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在看起来是这样的。&lt;/p&gt;

&lt;p&gt;接下来想想怎么让子弹动起来，上代码（创建一个脚本Bullet），给那个子弹挂上&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Bullet : MonoBehaviour {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; speed = &lt;span&gt;15&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Vector2 dir = &lt;span&gt;new&lt;/span&gt; Vector2(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; lifeTime =&lt;span&gt; 5f;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; damage = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Use this for initialization&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Start () {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        DestroySelf(lifeTime);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Update is called once per frame&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Update () {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.transform.Translate(dir * speed *&lt;span&gt; Time.deltaTime, Space.World);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt; DestroySelf(&lt;span&gt;float&lt;/span&gt;&lt;span&gt; time)
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         Destroy(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.gameObject, time);
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnTriggerEnter2D(Collider2D other)
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;Debug.Log(&quot;enter&quot;);&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (other.gameObject.tag == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Enemy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;        {&lt;br/&gt;&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             Destroy(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.gameObject);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;start()里面调用DestroySelf()，意思是子弹存活lifeTime 时间后，自动消失。不然“让子弹飞”飞到啥时候是个头啊，飞出屏幕外就没有意义了。存活时间可以自己控制&lt;/p&gt;
&lt;p&gt;Update()方法里面，每帧都在按照指定的dir方向移动，你想让子弹怎么飞，朝哪飞，就自行设计吧，螺旋升天都没有问题~&lt;/p&gt;
&lt;p&gt;OnTriggerEnter2D这个方法是Unity自带的，用处就是当进入碰撞盒Collider时调用，小基的内容是销毁自己，不是~意思是销毁掉子弹&lt;/p&gt;
&lt;p&gt;这里加了一个if的判断，判断tag是不是Enemy，毕竟打到友军可是会被喷猪队友的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507160448661-1067231606.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Tag一般默认是Untagged的，点击一下后有弹出AddTag这个选项，然后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507160616783-1069142580.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击加号，可以自己创建需要的tag，这样可以给不同类别的物体做区分。&lt;/p&gt;

&lt;p&gt; 下面考虑怎么让主角射出子弹，这个就需要代码控制了&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; 
&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyInput2 : MonoBehaviour {
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动方向枚举&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt;     &lt;span&gt;enum&lt;/span&gt;&lt;span&gt; MoveDir
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt;         None = &lt;span&gt;0&lt;/span&gt;,       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;不动&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt;         Up = &lt;span&gt;1&lt;/span&gt;,         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上8&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;         Down = -&lt;span&gt;1&lt;/span&gt;,      &lt;span&gt;//&lt;/span&gt;&lt;span&gt;下2&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;         Left = &lt;span&gt;10&lt;/span&gt;,      &lt;span&gt;//&lt;/span&gt;&lt;span&gt;左4&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;         Right = -&lt;span&gt;10&lt;/span&gt;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;右6&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt;         UL = &lt;span&gt;11&lt;/span&gt;,        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;左上7&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt;         UR = -&lt;span&gt;9&lt;/span&gt;,        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;右上9&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt;         DL = &lt;span&gt;9&lt;/span&gt;,         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;左下1&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;         DR = -&lt;span&gt;11&lt;/span&gt;,       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;右下3&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;输入按键常量（之后走配置）&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_UP =&lt;span&gt; KeyCode.W;
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_DOWN =&lt;span&gt; KeyCode.S;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_LEFT =&lt;span&gt; KeyCode.A;
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_RIGHT =&lt;span&gt; KeyCode.D;
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; 
&lt;span&gt; 26&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认移动方向&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; MoveDir moveDir =&lt;span&gt; MoveDir.None;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;按压值&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; moveDirValue = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;按压记录&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isUpPress = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isDownPress = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isLeftPress = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isRightPress = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; 
&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否可以移动&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; canMove = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;右移动&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 MOVE_RIGHT = &lt;span&gt;new&lt;/span&gt; Vector3(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上移动&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 MOVE_UP = &lt;span&gt;new&lt;/span&gt; Vector3(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;外部调控速度&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; speed =&lt;span&gt; 2f;
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动速度向量&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 move_speed_dir =&lt;span&gt; Vector3.zero;
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动距离&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 move_dis =&lt;span&gt; Vector3.zero;
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; 
&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;控制目标&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Transform target;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; 
&lt;span&gt; 53&lt;/span&gt; 
&lt;span&gt; 54&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标按下时的坐标&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 mouseStartPos =&lt;span&gt; Vector3.zero;
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标是否按下&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isMousePress = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标枚举&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_MOUSE =&lt;span&gt; KeyCode.Mouse0;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标拖动范围&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;     &lt;span&gt;const&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; MOUSE_RADIUS = &lt;span&gt;20&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标移动向量&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Vector3 mouseDir =&lt;span&gt; Vector3.zero;
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标速度衰减&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; mouseSpeedRate = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标速度&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; mouseSpeed = &lt;span&gt;100&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;摇杆底&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; RectTransform joyStickDown;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;摇杆顶&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; RectTransform joyStickUp;
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;摄像机&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Camera camera;
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; 
&lt;span&gt; 75&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;子弹prefab&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    GameObject prefabBullet;
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否开火&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;bool&lt;/span&gt; isFire = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Use this for initialization&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Start () {
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;         prefabBullet = (GameObject)Resources.Load(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Prefab/Bullet&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;Debug.Log(&quot;bullet:&quot; + prefabBullet);&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;     
&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Update is called once per frame&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Update () {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;        CheckInputKey();
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;        CheckMoveDir();
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;        CheckMouseDir();
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; 
&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; FixedUpdate()
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;        CheckMove();
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;        CheckFire();
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测输入按键&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CheckInputKey()
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测单一输入&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt;         &lt;span&gt;foreach&lt;/span&gt; (KeyCode kcode &lt;span&gt;in&lt;/span&gt; System.Enum.GetValues(&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(KeyCode)))
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Input.GetKeyDown(kcode))
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;Debug.Log(&quot;Single KeyCode Down: &quot; + kcode);&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt;                 ChangeKeyPressState(kcode, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Input.GetKeyUp(kcode))
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;Debug.Log(&quot;Single KeyCode Up: &quot; + kcode);&lt;/span&gt;
&lt;span&gt;113&lt;/span&gt;                 ChangeKeyPressState(kcode, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; 
&lt;span&gt;118&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;记录按键的按压状态&lt;/span&gt;
&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt; ChangeKeyPressState(KeyCode keyCode, &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; isPress)
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt;(keyCode)
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_UP:
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;                 isUpPress =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_DOWN:
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;                 isDownPress =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_LEFT:
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;                 isLeftPress =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_RIGHT:
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;                 isRightPress =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_MOUSE:
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt; &lt;span&gt;                MouseStateChange(isPress);
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; INPUT_FIRE:
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;                 isFire =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt; 
&lt;span&gt;144&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标按键输入&lt;/span&gt;
&lt;span&gt;145&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt; MouseStateChange(&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; isPress)
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;         isMousePress =&lt;span&gt; isPress;
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;         mouseStartPos = isPress ?&lt;span&gt; Input.mousePosition : Vector3.zero;
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; &lt;span&gt;        joyStickDown.gameObject.SetActive(isPress);
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;         joyStickDown.position =&lt;span&gt; camera.ScreenToWorldPoint(mouseStartPos);
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt; 
&lt;span&gt;153&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标移动&lt;/span&gt;
&lt;span&gt;154&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CheckMouseDir()
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(isMousePress)
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt;             mouseDir = Input.mousePosition -&lt;span&gt; mouseStartPos;
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;             mouseSpeedRate = Mathf.Min(mouseDir.magnitude / MOUSE_RADIUS, &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt;             move_dis = mouseSpeed * mouseSpeedRate * Time.deltaTime *&lt;span&gt; mouseDir.normalized;
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;             target.position +=&lt;span&gt; move_dis;
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt;             joyStickUp.localPosition = mouseDir.normalized * mouseSpeedRate *&lt;span&gt; MOUSE_RADIUS;
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; 
&lt;span&gt;166&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;确定移动方向&lt;/span&gt;
&lt;span&gt;167&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CheckMoveDir()
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt;         moveDirValue = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;确定方向&lt;/span&gt;
&lt;span&gt;171&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(isUpPress)
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt;             moveDirValue += (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Up;
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isDownPress)
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt;             moveDirValue += (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Down;
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isLeftPress)
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt;             moveDirValue += (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Left;
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (isRightPress)
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt;             moveDirValue += (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Right;
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt; 
&lt;span&gt;189&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测是否可以移动&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CheckMove()
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;某些情况下可能禁止移动，例如暂停，播放CG等&lt;/span&gt;
&lt;span&gt;193&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(canMove &amp;amp;&amp;amp; moveDirValue != (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.None)
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt; &lt;span&gt;            PlayerMove(target, speed);
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;198&lt;/span&gt; 
&lt;span&gt;199&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;移动&lt;/span&gt;
&lt;span&gt;200&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt; PlayerMove(Transform target, &lt;span&gt;float&lt;/span&gt;&lt;span&gt; speed)
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt;         move_dis = speed * Time.deltaTime *&lt;span&gt; GetSpeedDir();
&lt;/span&gt;&lt;span&gt;203&lt;/span&gt;         target.position +=&lt;span&gt; move_dis;
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt; 
&lt;span&gt;206&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;速度向量&lt;/span&gt;
&lt;span&gt;207&lt;/span&gt; &lt;span&gt;    Vector3 GetSpeedDir()
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt;         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt;(moveDirValue)
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Up:
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt;                 move_speed_dir =&lt;span&gt; MOVE_UP;
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Down:
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt;                 move_speed_dir = -&lt;span&gt;MOVE_UP;
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Left:
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt;                 move_speed_dir = -&lt;span&gt;MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;220&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.Right:
&lt;/span&gt;&lt;span&gt;221&lt;/span&gt;                 move_speed_dir =&lt;span&gt; MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.UL:
&lt;/span&gt;&lt;span&gt;224&lt;/span&gt;                 move_speed_dir = MOVE_UP -&lt;span&gt; MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.UR:
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt;                 move_speed_dir = MOVE_UP +&lt;span&gt; MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;228&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.DL:
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt;                 move_speed_dir = -MOVE_UP -&lt;span&gt; MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;232&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)MoveDir.DR:
&lt;/span&gt;&lt;span&gt;233&lt;/span&gt;                 move_speed_dir = -MOVE_UP +&lt;span&gt; MOVE_RIGHT;
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;236&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; move_speed_dir.normalized;
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt; 
&lt;span&gt;239&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;开火&lt;/span&gt;
&lt;span&gt;240&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; KeyCode INPUT_FIRE =&lt;span&gt; KeyCode.Space;
&lt;/span&gt;&lt;span&gt;241&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;开火时间cd&lt;/span&gt;
&lt;span&gt;242&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; fireCD = &lt;span&gt;0.5f&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;243&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上次开火时间&lt;/span&gt;
&lt;span&gt;244&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; lastTime = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;当前时间&lt;/span&gt;
&lt;span&gt;246&lt;/span&gt;     &lt;span&gt;float&lt;/span&gt; curTime = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt; 
&lt;span&gt;248&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CheckFire()
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;250&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(isFire)
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;252&lt;/span&gt; &lt;span&gt;            Fire();
&lt;/span&gt;&lt;span&gt;253&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;255&lt;/span&gt; 
&lt;span&gt;256&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Fire()
&lt;/span&gt;&lt;span&gt;257&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt;         curTime =&lt;span&gt; Time.time;
&lt;/span&gt;&lt;span&gt;259&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(curTime - lastTime &amp;gt;&lt;span&gt; fireCD)
&lt;/span&gt;&lt;span&gt;260&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建子弹&lt;/span&gt;
&lt;span&gt;262&lt;/span&gt; &lt;span&gt;            CreateBullet();
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt;             lastTime =&lt;span&gt; curTime;
&lt;/span&gt;&lt;span&gt;264&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;265&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;266&lt;/span&gt; 
&lt;span&gt;267&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;画布&lt;/span&gt;
&lt;span&gt;268&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Canvas canvas;
&lt;/span&gt;&lt;span&gt;269&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建子弹&lt;/span&gt;
&lt;span&gt;270&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; CreateBullet()
&lt;/span&gt;&lt;span&gt;271&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;272&lt;/span&gt;         GameObject bullet =&lt;span&gt; Instantiate(prefabBullet, target.localPosition, target.rotation);
&lt;/span&gt;&lt;span&gt;273&lt;/span&gt;         bullet.transform.SetParent(canvas.transform, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;274&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;275&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还是之前的移动代码，增加了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507161300717-1670194130.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里是需要先把Bullet制作成Prefab预制体，使用Resources.Load方法载入子弹prefab&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507161359661-1915412341.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在Project下创建文件夹Resources（必须用这个才可以载入）下面Prefab里面都是做好的预制体，做法就是把Hierarchy下的对象直接拖到Prefab文件夹下（请无视与本例无关的东西）&lt;/p&gt;
&lt;p&gt;ChangeKeyPressState（）方法里面增加判断开火的按键，FixedUpdate里面检测是不是开火，if里面可以加很多条件，比如CG时候不能开火，没有子弹不能开火等等。&lt;/p&gt;
&lt;p&gt;Fire()这个方法里面记录了开火的当前时间，下次开火的时候判断是不是已经过了CD时长，不然按住按键，每帧都会开火，火力太猛没法玩了，氪金大佬专属。&lt;/p&gt;
&lt;p&gt;CreateBullet（）这里面使用了Instantiate这个自带的方法，通过前面载入的子弹预设体prefab可以克隆出bullet（就是通过模版复制的过程）&lt;/p&gt;
&lt;p&gt;切记要把bullet的父物体设置成Canvas，就是通过代码把bullet放到canvas下面，不然你子弹可能不在UI里面哦~&lt;/p&gt;
&lt;p&gt;SetParent()方法的第二个参数用false，这样可以保证bullet的size不会因为父节点变化而变化。好奇的话，你可以写成true试试&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507163116788-1849504669.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;来试试发射子弹，打到敌人就消失了。&lt;/p&gt;


&lt;p&gt;不过这敌人木头人太愣了，给他点反应吧，enemy1上添加脚本enemy1（脚本名字你随便起）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; UnityEngine;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Enemy : MonoBehaviour {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ByHit()
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         Debug.Log(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;byHit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.transform.Translate(Vector2.one);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就写一个方法，被揍了，效果就是朝着vector2.one也就是（1，1）这个方向移动。你想让有啥反映就在这里写就可以，想变大变小变色都没问题&lt;/p&gt;
&lt;p&gt;那么怎么才能被调用呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnTriggerEnter2D(Collider2D other)
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         Debug.Log(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;enter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (other.gameObject.tag == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Enemy&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;             other.gameObject.SendMessage(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ByHit&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;             Destroy(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.gameObject);
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;刚才子弹的碰撞里面，增加sendMessage这个方法，参数是被调用方法的名字。这样就可以调用到碰撞的对方身上的脚本里面的&quot;ByHit&quot;这个方法&lt;img src=&quot;https://images2018.cnblogs.com/blog/1386347/201805/1386347-20180507163809300-1434496404.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;虽然敌人暂时还不能反击，不过起码不那么木讷了∠( ᐛ 」∠)＿&lt;/p&gt;
&lt;p&gt;敌人怎么反击的话，大家自己发挥想象力去做就好了，让他发出散弹打你也是可以的哦~&lt;/p&gt;
&lt;p&gt;但愿你可以不用参考这个工程就能自己做出来https://pan.baidu.com/s/1e9rQIJt8AYDgHVPvbyJEuQ&lt;/p&gt;

&lt;h3&gt;不过，这个敌人为啥打不死呢？！哦，因为他没有血条啊！那咋整啊？下一篇介绍制作通用进度条（血条）(=￣ω￣=)&lt;/h3&gt;
</description>
<pubDate>Mon, 07 May 2018 15:03:00 +0000</pubDate>
<dc:creator>AGamer</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/agamer/p/9003622.html</dc:identifier>
</item>
</channel>
</rss>