<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>我的2017 - 肉娃娃</title>
<link>http://www.cnblogs.com/rouwawa/p/8169322.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rouwawa/p/8169322.html</guid>
<description>&lt;p&gt;在经历了2016的苍白，去年的今天决定在2017有所改变，即树目标和做记录。2017即将结束，回头看看目标和记录，这一年的关键词就是一个：踏实。&lt;/p&gt;
&lt;h4 id=&quot;写博客&quot;&gt;1. 写博客&lt;/h4&gt;
&lt;p&gt;这是我在2017年最意外的收获，以前一直知道写博客对工作或生活的重要意义，但是真正付诸于行动之后，才发现并不只有“意义”那么简单，而逐渐养成记录的习惯之后，在工作中遇到的任何一个问题，从发现到解决这一过程中，你会发现自己会有一种“渴望”去用文字梳理这样一个脉络，因为解决问题的过程中，往往是东一个点西一个点的去摸索，比较杂乱，回头梳理一遍，更容易掌握该知识的要点。当然，精力有限，并且紧凑的工作压力下，你可能来不及去梳理，就要赶着时间去解决下一个问题，所以只有简单记录一下，争取回头梳理。&lt;/p&gt;
&lt;p&gt;发表了17篇博客，主要是技术相关，差不多三四万字。&lt;/p&gt;
&lt;h4 id=&quot;阅读&quot;&gt;2. 阅读&lt;/h4&gt;
&lt;p&gt;阅读一直是我多年以来的习惯，虽然阅读速度始终没有大的提升，可能阅读量和知识储备完全不能做到，一目十行，花一两个小时检索一本书的精华即可，现在选的书目基本都是推荐书籍，里面有太多自己不曾接触或者不熟悉的内容，只能细细品读，没关系，没有功利性，享受即可。&lt;/p&gt;
&lt;p&gt;2017年，阅读了11本课外书，其中影响比较大的三本是：&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;《人类简史》——宏观的认识了人类和这个世界的演变。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;《乌合之众》——作者对人类群体活动的高度概括，在百年后的今天依然适用，细思极恐。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;《你一生的故事》——披着科幻外衣的哲学书，深深不能自拔。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其中值得一提的是《你一生的故事》，最初是因为看了其改编的电影《降临》而勾起我极大的兴趣而购买的，该书是本短篇科幻小说集，所谓披着科幻外衣，是因为作者并没有描写什么黑科技，而仅仅是构建了一个现实中不存在的世界。《你一生的故事》只是其中的一篇，讲述了语言到底在人类社会发展，以及大脑构建时空所起的影响，这一脑洞让我非常着迷。该书中绝大多数篇章都极其有内涵，忍不住想要把每一篇都剖析一下，以后慢慢来。&lt;/p&gt;
&lt;h4 id=&quot;运动&quot;&gt;3. 运动&lt;/h4&gt;
&lt;p&gt;运动也一直是我坚持的爱好之一，一直觉得喜欢锻炼完之后的那种感觉，我觉得每一个喜欢运动的人，精气神显得相对更好一些。2017年在keep中记录的运动时间是2871分钟，其中跑步233公里。因为天热偷懒、雾霾和大腿拉伤，没有能很好的完成目标。值得一提的是，2017年回归足球队，主要是抱着跟队友学习的态度，学习怎么踢出“专业化”的感觉，而不是像以前踢野球一样，只知道满场吓跑，对跑位、站位和传接球都理解的不深。球队也首次踢进淘汰赛，不错。&lt;/p&gt;
&lt;h4 id=&quot;电影&quot;&gt;4. 电影&lt;/h4&gt;
&lt;p&gt;电影也是我的爱好之一（不得不说，爱好太多），以前看了大量的电影，没有记录，觉得浑浑噩噩的。2017开始学着在猫眼上做标记。看了40部好电影，其中《降临》、《爱乐之城》、《沃伦》、《新世界》印象深刻，今天看的《芳华》也超出自己的预期。《降临》改变自《你一生的故事》，还原度较高。《沃伦》已写影评发表。&lt;/p&gt;
&lt;h4 id=&quot;工作&quot;&gt;5. 工作&lt;/h4&gt;
&lt;p&gt;没错，工作肯定放在最后^_^。年初，一位FPGA骨干同事离职，一堆烂摊子扔给我，当然这也是一个绝佳的学习机会，项目一直处于赶的状态，FPGA代码修修补补，大半年的时间终于熬到了项目鉴定完成。11月底，却又被“坑”，要求在一个半月内完成一个STM32做控制的项目，也被授权主管该项目，进度控制、协调资源、自己摸索着写代码，目前来看能凑合交付样机，挺有成就感的，除了时间上的压力外，其他都还好，也经历一个快速成长期。&lt;/p&gt;
&lt;p&gt;2016做的计划，在2017年的完成度还是令人满意的，不出意外，2018还有很多件大事要发生，期待一切顺利，继续加油。&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/966190/201801/966190-20180101230635424-866509982.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 15:07:00 +0000</pubDate>
<dc:creator>肉娃娃</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rouwawa/p/8169322.html</dc:identifier>
</item>
<item>
<title>ArcGIS Runtime SDK是什么？ - 秋意正寒</title>
<link>http://www.cnblogs.com/onsummer/p/8169266.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/onsummer/p/8169266.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1097074/201801/1097074-20180101221359331-254810295.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如上图，Runtime SDK是什么东西？居然还有安卓、苹果手机、Mac、QT的版本？&lt;/p&gt;
&lt;p&gt;是不是意味着ArcGIS的编辑数据和空间分析可以通过编程的方法在每个平台上满地跑了？&lt;/p&gt;
&lt;p&gt;答案是：是，也不是。&lt;/p&gt;

&lt;p&gt;AO是ArcGIS Desktop和ArcGIS Server的底层技术，有C++、Java、.NET三种实现方式。&lt;/p&gt;
&lt;p&gt;AO包装一层，就是AE，其绝大部分语法是与AO兼容的。&lt;/p&gt;
&lt;p&gt;只要你能力足够，使用AO可以完全再造一款ArcGIS Desktop软件出来，当然也可以造一款ArcGIS Server；&lt;/p&gt;
&lt;p&gt;也就是说有了AO/AE，可以定制出一款从数据编辑、空间分析、制图输出、数据管理都能做的很好的二次开发软件。&lt;/p&gt;
&lt;h2&gt;1.1 Runtime SDK&lt;/h2&gt;
&lt;p&gt;早期用户可能听说过ArcGIS Engine Runtime等一系列乱七八糟的“Runtime”，这里不废话，以免混淆。&lt;/p&gt;
&lt;p&gt;为了完成在各种平台（Linux、iOS、安卓、Windows、Mac）上进行数据的显示和简单的数据统计、简单的空间分析，但是数据源（地图数据、矢量栅格数据）并不存在于本机，而在远程服务器端（通常是服务器电脑上的ArcGIS Server、ArcGIS Portal、Datastore等），进行的空间分析也不是在本机进行的，仅仅作为远程服务器进行的GP（地理处理，GeoProcess，ArcGIS Server的一个功能，十分强大）的运行结果的显示，就有了Runtime SDK。&lt;/p&gt;
&lt;p&gt;画图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1097074/201801/1097074-20180101223246940-39003698.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Runtime SDK就是为了创造各个平台上的这种客户端而存在的一套开发包。&lt;/p&gt;
&lt;p&gt;其中，QT的特点使得在Linux/Windows都可以跑Runtime SDK.&lt;/p&gt;
&lt;h2&gt;1.2 与B/S架构的ArcGIS API for JavaScript的区别&lt;/h2&gt;
&lt;p&gt;这个更像C/S架构，Runtime SDK的API帮助文档、类结构与Js 4.x API的API极其相似，在不同的编程语言上有所区别而已。&lt;/p&gt;
&lt;p&gt;例如，Js API用Task完成浏览器端处理GP服务的请求、接收远程GP服务生成的结果；&lt;/p&gt;
&lt;p&gt;Runtime SDK也能找到类似的Task类。&lt;/p&gt;

&lt;p&gt;因为Js 4.x API在4.5中已经出现了数据编辑的工具，这就意味着Runtime SDK早就应该具备了简单的数据编辑工作。&lt;/p&gt;
&lt;p&gt;但是，与ArcMap和ArcGIS Pro的“工作站”式编辑工具还是有很大差距的，例如不能完成字段的批量计算、不能完成拓扑、不能方便数据导入导出等，只能简单的画点画线画面。&lt;/p&gt;
&lt;h2&gt;1.3 Runtime SDK产出&lt;/h2&gt;
&lt;p&gt;开发生成的应用程序是绿色的，不需要依赖庞大的运行库，也不需要安装ArcGIS套件，直接双击就能使用。&lt;/p&gt;
&lt;p&gt;随之会产生一些dll（Windows下），随着exe一起携带即可。&lt;/p&gt;
&lt;p&gt;Linux、Mac、安卓、iOS表示不清楚~有兴趣的同学可以自行了解。&lt;/p&gt;

&lt;p&gt;Runtime SDK全线都更新到了100.x这个版本，旗帜鲜明的与ArcGIS Pro对接，也就是说大数据、多线程、3DGIS的加入。&lt;/p&gt;
&lt;p&gt;显然，Runtime SDK就是为了解决AO/AE中数据显示/简单分析的功能而出现的，因为让只需要查看数据、地理数据统计、轻量分析的用户去购买AE是不划算的，Esri考虑到了这一点，将繁重的数据编辑、数据管理、空间分析过程集中到了新的ArcGIS Pro平台上，使用Datastore、Portal进行发布和管理云端数据，再使用Runtime SDK编写轻量化的客户端进行访问，这符合实际的需求。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1097074/201801/1097074-20180101224602003-254445469.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然，为了方便拓展ArcGIS Pro，已经有了帮助开发ArcGIS Pro插件的SDK。&lt;/p&gt;

</description>
<pubDate>Mon, 01 Jan 2018 14:50:00 +0000</pubDate>
<dc:creator>秋意正寒</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/onsummer/p/8169266.html</dc:identifier>
</item>
<item>
<title>图像识别：微信跳一跳机器人 - ExperDot</title>
<link>http://www.cnblogs.com/experdot/p/8157666.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/experdot/p/8157666.html</guid>
<description>&lt;h2&gt;准备&lt;/h2&gt;
&lt;blockquote readability=&quot;5.9367088607595&quot;&gt;
&lt;p&gt;　　IDE：VisualStudio&lt;/p&gt;
&lt;p&gt;　　Language：VB.NET/C#&lt;/p&gt;
&lt;p&gt;　　GitHub：&lt;a href=&quot;https://github.com/experdot/AutoJump.NET&quot; target=&quot;_blank&quot;&gt;AutoJump.NET&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　本文将向你介绍一种通过图像识别实现“跳一跳”机器人的方法。　&lt;/p&gt;
&lt;h2&gt;第一节 图像识别&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;　　文中提到的所有方法和步骤均仅涉及简单的向量计算。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;　　需要哪些计算？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　比较像素点的颜色&lt;/p&gt;
&lt;p&gt;　　求向量集合的中心&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　计算颜色的相似度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　一个RGB颜色可以看作一个三维向量&lt;/p&gt;
&lt;p&gt;　　比较两个颜色的相似度可以计算它们的欧几里得距离&lt;/p&gt;
&lt;p&gt;　　也可以直接比较它们的夹角：夹角越小，两个颜色越相似，反之亦然&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;求平面向量集合的中心位置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;首先，将集合中所有的向量相加得到向量&lt;em&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;再将向量&lt;strong&gt;&lt;em&gt;S&lt;/em&gt;&lt;/strong&gt;除以集合元素的个数，结果即为它们的中心&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101204912659-1974445619.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图1-1 识别效果预览&lt;/p&gt;
&lt;h2&gt;第二节 识别落点&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;　　找出盒子落点的前提是发掘每个盒子都具有的共同特征。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;strong&gt;盒子特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　目标落点有两种类型，菱形或圆形的盒子&lt;/p&gt;
&lt;p&gt;　　只有部分盒子的顶面颜色是大面积的纯色&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;盒子下方的地面背景是纯色，但随着游戏进行颜色会发生变化&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;顶点特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　顶点的上侧为背景色&lt;/p&gt;
&lt;p&gt;　　顶点的左侧（可能不适用于圆形）、右侧（可能不适用于圆形）均为背景色&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;识别方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　从上向下逐行扫描像素找出盒子的顶点&lt;em&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　继续向下找出与&lt;em&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/em&gt;颜色相似的所有像素点集合&lt;em&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　求出&lt;em&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/em&gt;像素集合的中心点，即为落点&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101220518143-146676075.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2-1 盒子落点识别&lt;/p&gt;
&lt;h2&gt;第三节 识别角色&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;　　角色的颜色相对特殊，很容易从游戏图像中区分出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;strong&gt;人物特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　角色呈国际象棋棋子状&lt;/p&gt;
&lt;p&gt;　　角色整体颜色较为一致，部分区域有高光&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;顶点特征&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　角色的顶点颜色较深，易于区分&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;识别方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　从上向下逐行扫描像素找出角色的顶点&lt;em&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　继续向下找出与&lt;em&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/em&gt;颜色相似的所有像素点集合&lt;em&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　求出&lt;em&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/em&gt;像素集合的中心点，并向下偏移固定数值&lt;em&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　中心点偏移后的像素&lt;em&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/em&gt;的位置即为角色的底部&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101194817049-1224504882.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图3-1 角色底部识别&lt;/p&gt;
&lt;h2&gt;第四节 识别干扰&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;　　通常，简单的方法只适应于绝大部分情况，特定情形时仍会出错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;strong&gt;哪些情况会导致识别错误&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;盒子顶部的颜色不一致时&lt;/p&gt;
&lt;p&gt;　　角色顶部的位置高于目标盒子时&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;角色站立的盒子和目标盒子的顶部颜色一致时&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;其他干扰因素的解决方案&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;加分提示的动画：延时解决&lt;/p&gt;
&lt;p&gt;　　击中中心的动画：延时解决&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;音乐盒的乐符动画：不要在音乐盒上停留ヾ(✿ﾟ▽ﾟ)ノ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101222315612-2042666433.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图4-1 魔方（正确）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101222334846-1086830251.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图4-2 商店（偏离中心）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101222827815-1165158036.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图4-3 音乐盒 （偏离中心）&lt;/p&gt;
&lt;h2&gt;第五节 实测数值&lt;/h2&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;　　程序的部分参数需要通过实际测试得出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;strong&gt;识别区域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;仅屏幕中间的三分之一区域需要进行图像识别&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;触压时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　触压屏幕的毫秒数正好是角色与落点距离数值的两倍&lt;/p&gt;
&lt;p&gt;　　例如，距离为500个像素点，那么就需要持续按下1000毫秒&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/726127/201801/726127-20180101214106253-1697136279.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图5-1 识别区域（阴影部分）&lt;/p&gt;
&lt;h2&gt;附录&lt;/h2&gt;
&lt;p&gt;　　&lt;span&gt;（运气好时，机器人可以自动玩到1000分)&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5.5344827586207&quot;&gt;
&lt;p&gt;　　GitHub：&lt;a href=&quot;https://github.com/experdot/AutoJump.NET&quot; target=&quot;_blank&quot;&gt;AutoJump.NET&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;　　参考文章：&lt;a href=&quot;https://www.cnblogs.com/dotnet-org-cn/p/8149693.html&quot; target=&quot;_blank&quot;&gt;.NET开发一个微信跳一跳辅助程序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　参考书籍：《&lt;a href=&quot;https://book.douban.com/subject/10750155/&quot; target=&quot;_blank&quot;&gt;数学之美&lt;/a&gt;》&lt;span&gt;[美] 吴军 著 人民邮电出版社&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Mon, 01 Jan 2018 14:40:00 +0000</pubDate>
<dc:creator>ExperDot</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/experdot/p/8157666.html</dc:identifier>
</item>
<item>
<title>再谈谈数学 - 窗户</title>
<link>http://www.cnblogs.com/Colin-Cai/p/7881317.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Colin-Cai/p/7881317.html</guid>
<description>&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:sql;gutter:true;&quot;&gt;
　　版权申明：本文为博主窗户(Colin Cai)原创，欢迎转帖。如要转贴，必须注明原文网址

　　http://www.cnblogs.com/Colin-Cai/p/7881317.html 

　　作者：窗户

　　QQ：&lt;span&gt;6679072&lt;/span&gt;

　　E-mail：&lt;span&gt;6679072@qq.com
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　在一个很老的群里聊天，群里就那么二十几个人，都是搞这行的，在网上认识了十几年。一人是某大型电子地图公司出来的，说，”地图里面人工智能不就是用初中的概率论搞起来的，谁拿到数据谁都可以搞定“……初中的概率论，听到觉得真的非常的刺耳，于是就在群里争了几句。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　回头来想想，在信息技术领域里，难道数学真的变成了这么低的门槛的东西？再或许，我真的是out了，这些年的执着变得分文不值?可能是因为自己有些偏执，想起以前的时候学习计算机，虽然专业并不是计算机，但依然是一板一眼，一上来是从c语言汇编语言这样的语言开始搞起，数据结构、编译原理、操作系统原理、数据库原理、计算机原理等，过程中潜意识中意识到数学的作用，仿佛所有的计算机知识都可以被形式化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　准确的说，计算机应该属于工科的东西，有很多工程的性质。如同别的工科工程一样，很多时候因为一些具体业务的需求会有一些用到初等数学的小窍门。打个比方，从时间0开始，两个任务，一个3分钟执行一次，一个5分钟执行一次，那么两个在那些分钟点上，两个任务都执行？如果是三个任务呢？于是突然有一天来了更复杂的问题，已知a,b互质数，找一个c，使得ac除以b余1，结果可能就不会做了。那么，为什么不稍微系统的学一下数论呢？设计算法的时候，可能设计了一个频繁使用的平均复杂度为O(logn)的算法，感觉很满意，可是运行的好好的，突然程序运行偶尔会很不顺畅，原来该算法的最高时间复杂度是O(n)。那么，为什么不系统的学学复杂度的计算呢？感到最烦的就是某些可能是初学者，会问为什么什么什么算法没有什么什么语言的描述之类的问题。我们学习算法学习的是神，而不是型，你学得算法的内涵之后，应该很容易就可以用你熟悉的语法写出来，可是很多人不明白这一点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　机器学习里最简单的KNN算法，每个学习过的人真的认真去想过吗？KNN的每个维度如何做到公平这个问题，如果书本或者别人不告诉你的情况下，你自己是否会想到如何变的公平？直方图的意义在什么地方？归一化呢？KNN是很简单，可是你会不会想到如何在很多很多的样本中，尽量快速的找到前k个最近的值？我相信，很多人没有想过，乃至书上不会说自己也就永远不会去想。当然，我们的库、我们的工具可能很多地方是很好，让你不用去思考某些细节。所以，我们的研发很多时候只是在那里调节一些老外的参数而已，却很少想着去真正理解它，然后再此基础上改进甚至否定。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　工程两个字很多时候给人一些误解，认为对于某些问题我们只要反复的去试就行了，可实际上是，如果有深入的理论指导，很可能事半功倍，何止事半功倍。有时候想，是什么让人浮躁，是我们的收入使然，还是千变万化而又快速取代的信息技术？或许一切都不是原罪，而只有自己的心。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我一向觉得，数学很重要，我们的软件工程师大多数数学学的太少，即便有的学了一些，可是依然不想着得其髓。再回到之前的概率论，搞AI的确是需要概率论这样的数学基础的，但是概率论真的很容易吗？我看不见得，当年我们学的时候，感觉是很难的，那一大堆的证明很头疼啊，比如有多少种极限的方式可以得到正太分布？甚至于建立概率空间的Sigma代数都不是那么平易近人。当然，你会反驳，我们是工程师，我们只需要知道怎么使用嘛那么复杂的概率论底层我们凭什么要深入了解。是的，我们甚至可能只需要知道条件概率怎么算，知道贝叶斯公式就OK了。可是，永远不要忘了，如果你站在更高的地方，你的思路会变得更广阔。所有上了大学接触到高等数学的学生可能都不会再觉得高中数学过于困难，那就是因为你上到了一个新的台阶。不需要每个人都像数学系那样深度的去学数学，可是，还是需要深入的想一想。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　我还是建议每个人从数学的角度去看看编译原理，或许可以看到一个不一样的世界，我也希望每个人都可以尝试着用lisp去勾画，好好理解理解lisp的思想，如果所有都是为了实用而实用，思想会禁锢。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　一直遇到一些浮躁的刚毕业大学生，甚至工作了有一定年份的人也有类似的想法。但我的思维可能还是那么古板，也许真是我多想了，不是人们浮躁了，而是世界变的快。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 14:10:00 +0000</pubDate>
<dc:creator>窗户</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Colin-Cai/p/7881317.html</dc:identifier>
</item>
<item>
<title>javascript + sql编写SQL客户端工具tabris - 鱼东东</title>
<link>http://www.cnblogs.com/yudongdong/p/8169117.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yudongdong/p/8169117.html</guid>
<description>&lt;p&gt;祝大家2018新年快乐，&lt;/p&gt;
&lt;p&gt;前不久发现了一个创意的脚本&lt;span&gt;JtSQL(java编写)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;JtSQL 特点：&lt;br/&gt;*.结合了JS、SQL、模板理念；&lt;br/&gt;*.保持了JS和SQL的语法高亮（利于DBA审核）；&lt;br/&gt;*.方便统一管理、部署、运行&lt;br/&gt;*.像存储过程一样，提供当前上下文及变量支持；&lt;br/&gt;*.像SQL客户端工具一样，即时编写即时运行；&lt;br/&gt;*.像定制统计程序一样，提供过程和逻辑控制能力；&lt;br/&gt;*.服务端运行（&lt;strong&gt;别误会成客户端运行啊&lt;/strong&gt;...） &lt;/span&gt;&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;file:///E:/YoudaoNote/qq8F90F3E63DCFB745A2A18EC0F03387D4/64fda01fe65e4d36ac2b08184187aab0/clipboard.png&quot; alt=&quot;&quot; data-attr-org-src-id=&quot;4F1CB25A6ED24ABF8249C009ADF54756&quot; data-media-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;确实在工作中总会遇到这样的问题&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;经常去拉sql，有时候一句sql执行搞不定 就得分多次sql，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;写sql写的心累。把JavaScript 和 sql 结合起来确实很赞。能解决一直困扰的问题&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;以这个为创意点我也搞了一个工具 我命名为tabris脚本工具&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;(ps：大家有建议尽管提)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;特色：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 包含JtSQL的所有特性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt; 利用微软的 ClearScript V8 engine&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ClearScript很强大可以做到c# 与 JavaScript 互通&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3 把功能模块化 目前已实现的3个重要的模块&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1. 执行http请求处理模块&lt;/p&gt;
&lt;p&gt;2. 日志输出处理模块&lt;/p&gt;
&lt;p&gt;3. 执行sql处理模块.&lt;/p&gt;
&lt;p&gt;4. js代码智能提示tabris模块&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101215613378-2095050303.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;file:///E:/YoudaoNote/qq8F90F3E63DCFB745A2A18EC0F03387D4/ef76e6d5fc56420882f4128466e3669e/clipboard.png&quot; alt=&quot;&quot; data-attr-org-src-id=&quot;D589D31E81834AE0BC9353ACDB94DA2A&quot; data-media-type=&quot;image&quot;/&gt;&lt;/div&gt;
&lt;p&gt;以后想用其他的功能都可以扩展其他模块&lt;/p&gt;

&lt;p&gt;&lt;span&gt;4. 代码编写采用CodeMirror ，写js代码智能提示&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;下面来一个动图感受下吧&lt;/p&gt;
&lt;p&gt;以以下场景为示例&lt;/p&gt;

&lt;div&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101221720799-1021696522.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;


&lt;div&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101215652174-99143725.gif&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;div readability=&quot;13.5&quot;&gt; 
&lt;p&gt;封装的sql log http 三大组件 在编辑器上的方法能代码智能提示 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101222428065-117973960.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101222439424-1850513926.png&quot; alt=&quot;&quot;/&gt;
&lt;img src=&quot;https://images2017.cnblogs.com/blog/472365/201801/472365-20180101222449799-141522633.png&quot; alt=&quot;&quot;/&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;DB处理器&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; db = &lt;span&gt;this&lt;/span&gt;.tabris.create('SQL'&lt;span&gt;, {
  name:&lt;/span&gt;'testorm'&lt;span&gt;,
  type:&lt;/span&gt;'mysql'&lt;span&gt;
});

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;http处理器&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; http = &lt;span&gt;this&lt;/span&gt;.tabris.create('HTTP'&lt;span&gt;, {
  method:&lt;/span&gt;'GET'&lt;span&gt;
});

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;log处理器&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; log = &lt;span&gt;this&lt;/span&gt;.tabris.create('LOG'&lt;span&gt;, {
  trace:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
});

db.&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;('delete from child_district'&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从district表里面获取所有城市的Code&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; get_district_sql = &quot;select Code from district&quot;&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; district_code_list =&lt;span&gt; db.query(get_district_sql);

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; index = 0; index &amp;lt; district_code_list.length; index++&lt;span&gt;) {
    getChildDistrictAndInsertToDb(district_code_list[index].Code);
}


&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;远程获取&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; getChildDistrictAndInsertToDb(parentCode){
  log.info(parentCode);
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; re =&lt;span&gt; http.getJson({
    url:&lt;/span&gt;'https://fuwu.sf-express.com/service/address/newAddr/getNewSubAddress?parentCode=' +&lt;span&gt; parentCode
  });
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!re.subAddressList || !re.subAddressList.length) &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; index = 0; index &amp;lt; re.subAddressList.length; index++&lt;span&gt;) {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; child =&lt;span&gt; re.subAddressList[index];
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; insertSql = &quot;insert into child_district (Name,Code,DataChange_LastTime) VALUES('&quot;+ child.distCnName +&quot;','&quot;+ child.distCode +&quot;',now())&quot;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; insertResult =&lt;span&gt; db.insert(insertSql)
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(insertResult!=1&lt;span&gt;){
      log.error(child.distCnName &lt;/span&gt;+ '插入db失败!'&lt;span&gt;);
    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
      log.info(child.distCnName &lt;/span&gt;+ '插入db成功!'&lt;span&gt;)
    }
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://files.cnblogs.com/files/yudongdong/Tabris.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;客户端下载&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 14:07:00 +0000</pubDate>
<dc:creator>鱼东东</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yudongdong/p/8169117.html</dc:identifier>
</item>
<item>
<title>2017总结：沉淀、反思、前行 - 赵孤鸿</title>
<link>http://www.cnblogs.com/zhaoguhong/p/8168987.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhaoguhong/p/8168987.html</guid>
<description>&lt;p&gt;2017如果非要概括一下的话，我想应该是沉淀，反思，前行&lt;/p&gt;
&lt;h3 id=&quot;关于技术&quot;&gt;关于技术&lt;/h3&gt;
&lt;p&gt;犹记得2016时的自己，初入java江湖，年少轻狂，自认为自己已经登堂入室，编程江湖任我驰骋。现在想想实在可笑，自己当时不过是一个连ssh api都没完全搞懂的不入门码农。&lt;/p&gt;
&lt;p&gt;2017的自己不在盲目追求新兴的技术，更注重内功。尝试着去阅读一些jdk源码，spring源码。虽然很多仍旧看不懂。但时不时会有一种豁然开朗的感觉。对于项目中用到的技术，在使用的同时，常常去想一下为什么，尽量做到知其然并知其所以然。&lt;/p&gt;
&lt;p&gt;当然这一年也学习了不少新知识，虽然工作中未必用到，但仍会去学习。学习号称颠覆Java应用开发的Spring Boot，新的持久化方式spring data jpa, 学习现在流行mvvm前端框架vue,并且对于日常工作中的重复劳动，做了个&lt;a href=&quot;https://github.com/zhaoguhong/blogadmin&quot;&gt;小工具&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;对于学习中遇到的问题，我一直有记笔记的习惯。17年也尝试去写博客，真到写的时候才发现，写博客和记笔记完全是两个不同概念。写博客更多的是梳理总结自己知识，还要保证其准确性，以免给别人引起误导。于是乎，17年零零散散的也没写几篇。新的一年要坚持写博客，写有质量的博客。&lt;/p&gt;
&lt;h3 id=&quot;关于读书&quot;&gt;关于读书&lt;/h3&gt;
&lt;p&gt;我算不得一个爱读书的人，但现在却越来越喜欢读书的感觉。因为看书能使我静心，这种感觉真的很好。但我又是一个有松鼠症的人，这一年也买了一些技术书，但很多并未认真看，除了放在书桌上证明自己是一个所谓的“爱学习”的人之外，并没有任何作用。&lt;/p&gt;
&lt;p&gt;不过这一年非技术书籍到是读了不少。看阮一峰老师的《前方的路》和《未来世界的幸存者》，被阮老师渊博的知识和对知识的求知欲深深折服；看吴军博士的《浪潮之巅》，感受it行业的风云变幻，跌宕起伏。看安意如的《人生若只如初见》和《陌上花开》，让我这个诗词白痴对中国的诗词文化也产生了浓厚的兴趣；看东野圭吾的《解忧杂货店》，让我明白人生征途的地图一直在自己手中。书中未必有黄金屋，也未必有颜如玉，但读书可以提高一个人独立思考的能力，看事情的格局。法国思想家帕斯卡尔有一句名言:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;人是一根会思考的芦苇&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;懂得思考的人生才更有趣。&lt;/p&gt;
&lt;h3 id=&quot;关于坚持&quot;&gt;关于坚持&lt;/h3&gt;
&lt;p&gt;有时每天坚持一件事真的是很难的事，但一旦养成习惯，一切似乎又会变得很简单。古人云：&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;苟有恒,何必三更眠五更起&lt;br/&gt;最无益,莫过一日暴十日寒&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在养成了每天晚上看书的习惯，不看一会总感觉少点啥。就如同每天晚上一点睡觉的坏习惯一样，睡的早反而睡不着。&lt;/p&gt;
&lt;h3 id=&quot;关于努力&quot;&gt;关于努力&lt;/h3&gt;
&lt;p&gt;有时认为自己已经很努力只是别人看不到而已。但仔细想想，都是自己再麻痹自己而已。想想自己，上班敲代码的同时总是穿插着聊天，听歌等事情。没有专注度，何谈效率。公司架构师经常会在群里面分享一些it知识，而且很多都是在休息日。想想自己休息日在家做什么，才发现只是自己认为自己很努力，自己感动自己而已。新的一年，要更专注，注重效率，注重结果，而不是所谓的努力程度。&lt;/p&gt;
&lt;h3 id=&quot;关于岁月&quot;&gt;关于岁月&lt;/h3&gt;
&lt;p&gt;最近几天大家发都在晒自己的18岁，我看了看自己18岁的照片，又看了看现在的自己，蓦然有一种恍如隔世的感觉。曾经的青葱少年，现在整个人完全像气球一样膨胀起来，似乎已经成为了中年胖大叔。岁月不是把杀猪刀，岁月是把猪饲料。&lt;/p&gt;
&lt;h3 id=&quot;展望2018&quot;&gt;展望2018&lt;/h3&gt;
&lt;p&gt;新的一年要坚持自己的一些好习惯，改掉坏习惯。每天晚上至少读书一个小时，十二点之前睡觉，每周至少去健身房两次。或许再也回不去18岁时候的追风少年，但人生的征途其实才刚刚启程，愿我，不忘初心，愿我，勇敢前行。&lt;/p&gt;
&lt;p&gt;在网上看到这样一句话，很喜欢&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;后来许多人问我一个人夜晚踟蹰路上的心情，我想起的却不是孤单和路长，而是波澜壮阔的海和天空中闪耀的星光。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Mon, 01 Jan 2018 13:23:00 +0000</pubDate>
<dc:creator>赵孤鸿</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhaoguhong/p/8168987.html</dc:identifier>
</item>
<item>
<title>博客园app for xamarin android - 张林-布莱恩特</title>
<link>http://www.cnblogs.com/zhangmumu/p/8146725.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhangmumu/p/8146725.html</guid>
<description>&lt;h3&gt;碎碎念回顾2017&lt;/h3&gt;
&lt;p&gt;到了年底，坐在转椅上，望着窗外的雾霾......从16年6月走出校门，已经做了1年半的码农，成长不少，但总觉得进步得不够明显，虽然工资比刚来的时候涨了不少，但是还是觉得自己不够努力。也不知道是老板给的压力太少，还是自己给自己的目标定的太短。&lt;/p&gt;
&lt;p&gt;打开qq企业邮箱，找到去年给老大发的年度总结和计划，十分惭愧，去年的计划几乎只完成了50%。&lt;/p&gt;
&lt;p&gt;1.多线程编程理解和运用不够熟练；&lt;/p&gt;
&lt;p&gt;2.javascript还是停留在万金油jquery上；&lt;/p&gt;
&lt;p&gt;3.signalr的聊天室也没搞完成；&lt;/p&gt;
&lt;p&gt;4.计划了很久用xamarin android写个博客园也是拖了好久才完工。&lt;/p&gt;
&lt;p&gt;5.前端自适应还是停留在bootstrap上的基础，拿着标签就干。&lt;/p&gt;
&lt;p&gt;6.设计模式也还没有深入学习&lt;/p&gt;
&lt;p&gt;7.android进阶的东西也还没有看&lt;/p&gt;
&lt;p&gt;8.收藏夹的文章快大半年了，都没仔细学习，可能这就是“松鼠症”吧&lt;/p&gt;
&lt;p&gt;9.说要学习英语，学习英语的app倒是下载4个，每天最多也就打开一次，没办法英语基础还是很差！&lt;/p&gt;
&lt;h3&gt;2018年的计划&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;前端自适应的学习&lt;/li&gt;
&lt;li&gt;javascript面向对象编程&lt;/li&gt;
&lt;li&gt;每天学习英语30分钟（可能感觉要黄）&lt;/li&gt;
&lt;li&gt;完善自己的个人项目&lt;/li&gt;
&lt;li&gt;c#设计模式的深入学习&lt;/li&gt;
&lt;li&gt;webpack的掌握&lt;/li&gt;
&lt;li&gt;维护个人博客（网站未做，服务器先行，买了阿里云的服务器两年多，没发挥作用）&lt;/li&gt;
&lt;li&gt;oath2.0的学习&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;strong&gt;吐槽一波csdn&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;好久没写博客了，差不多快三个月了。这是我第一次在博客园里写文章，以前都是csdn，自从csdn改版了之后就没有在csdn里写文章，新版的csdn博客，已经不适合技术文章，适合广告。还有就是csdn的下载现在都要C币了，以前都是积分。无可厚非的赚钱方式，但我不答应，以后不在csdn写文章了。&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;博客园app for xamarin android&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; 接触xmaarin android一年半，一直有计划写了个博客园的APP（感谢博客园官方提供api），今天终于完工了（虽然会有未知的bug和已经知道的bug）。&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;使用的主要库&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;http网络请求库：restsharp&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;图片加载：ImageLoader&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;第三方分享：Umeng分享&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;自动更新：讯飞AutoUpdate&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;本地存储的数据库：sqlite数据库，第三方sqlite-net&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;图片放大：PhotoViewBinding&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;列表展示：RecyclerView&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;json解析：Newtonsoft.json&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;主要功能包括：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;博客：查看首页博客、查看推荐博客、查看博客评论&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;资讯：查看最新新闻、查看本周热门、查看推荐新闻、查看知识库、查看资讯评论、添加删除资讯评论&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;动态(闪存)：查看最新动态、新回应、我的关注的人的动态、我的动态、删除评论动态、发布动态&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;问答：查看最新问答、高分问答、待解决问答、已解决问答、我的提问，发布删除问答，添加问答回答，评论问答回答......&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;搜索：搜索博客、新闻、问答、知识库&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;个人：登录、注销、收藏、设置&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;主要截图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 首页：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201712/1220420-20171230002014195-1041875831.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;资讯：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201712/1220420-20171230002107320-113006570.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;动态（闪存）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201801/1220420-20180101180518174-2094274813.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;问答：&lt;/p&gt;
&lt;p&gt;:&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201712/1220420-20171230002147085-1008874526.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201712/1220420-20171230002321867-1667806420.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我的博客：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201712/1220420-20171230002427257-1219380454.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可能会有未知的bug，希望能得到反馈，帮助我不断完善，代码暂时就先不公开了，app下载扫码即可&lt;/p&gt;
&lt;p&gt;下载地址：https://files.cnblogs.com/files/zhangmumu/cnblogs.apk&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1220420/201801/1220420-20180101211135596-359566730.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt; 作者：张林-布莱恩特&lt;/p&gt;
&lt;p&gt;标题&lt;span class=&quot;hljs-symbol&quot;&gt;:博客园app for xamarin android&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;原文地址：http://www.cnblogs.com/zhangmumu/p/8146725.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;&lt;span class=&quot;hljs-regexp&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;转载随意注明出处&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Mon, 01 Jan 2018 13:15:00 +0000</pubDate>
<dc:creator>张林-布莱恩特</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhangmumu/p/8146725.html</dc:identifier>
</item>
<item>
<title>那些年追过的......写过的技术博客 - bakari</title>
<link>http://www.cnblogs.com/bakari/p/8167686.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bakari/p/8167686.html</guid>
<description>&lt;p&gt;大概从 2012 年开始，那会还在读大三，看了很多大牛用博客记录分享自己的学习经历，顿时心血来潮，于是自己也开始写，这一写就是 5 年，中间断断续续，但好在一直在坚持。&lt;/p&gt;
&lt;p&gt;趁着这个新年之际，总结一下过往写的这些文章，正好也可以回顾一下这些年都学了些啥，也分享给有需要的朋友。&lt;/p&gt;
&lt;p&gt;这不总结还不知道，一总结还挺佩服曾经牛逼努力的自己，自我感觉确实输出了一些有技术深度的文章。&lt;/p&gt;
&lt;h2 id=&quot;云计算&quot;&gt;云计算&lt;/h2&gt;
&lt;p&gt;这个方向是工作后确定的，没有太多经验，还只是个初学者，目前也是一边学一边记录下来，为此我还开了个公众号「aCloudDeveloper」，用来记录并分享这个学习过程，从 去年 10 月份开始到现在，差不多 3 个月的时间，坚持周更，主要输出以下几篇文章，还有一些可以关注我的公众号查看。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/7857967.html&quot;&gt;虚拟化技术总览&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/7858029.html&quot;&gt;Qemu 简述&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/8167539.html&quot;&gt;KVM 初探&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/7966671.html&quot;&gt;CPU 虚拟化&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/7966707.html&quot;&gt;内存虚拟化&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/8037105.html&quot;&gt;网络虚拟化&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/8097439.html&quot;&gt;从 Bridge 到 OVS，探索虚拟交换机&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/8097478.html&quot;&gt;OVS 总体架构、源码结构及数据流程全面解析&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;算法&quot;&gt;算法&lt;/h2&gt;
&lt;h3 id=&quot;经典排序&quot;&gt;经典排序&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633453.html&quot;&gt;VC库中快排函数的详解&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633545.html&quot;&gt;经典排序之 快速排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633552.html&quot;&gt;经典排序之 选择排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633636.html&quot;&gt;经典排序之 插入排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633672.html&quot;&gt;经典排序之 冒泡排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633692.html&quot;&gt;经典排序之 堆排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/11/2633710.html&quot;&gt;经典排序之 归并排序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;算法导论&quot;&gt;算法导论&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4799163.html&quot;&gt;算法导论第二章小试牛刀——各种排序总结&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4809684.html&quot;&gt;算法导论第四章分治策略实例解析（一）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4811065.html&quot;&gt;算法导论第四章分治策略剖根问底（二）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4823461.html&quot;&gt;算法导论第六章堆排序（一）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4823753.html&quot;&gt;算法导论第六章优先队列（二）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4839109.html&quot;&gt;算法导论第七章快速排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4845016.html&quot;&gt;算法导论第八章线性时间排序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4852452.html&quot;&gt;算法导论第九章中位数和顺序统计量（选择问题）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4856141.html&quot;&gt;算法导论2-9章补充几道题——逆序、中位数等问题&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4861576.html&quot;&gt;算法导论第十章 栈队列和链表&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4884076.html&quot;&gt;算法导论第十一章 散列表&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4892558.html&quot;&gt;算法导论第十二章 二叉搜索树&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4900895.html&quot;&gt;算法导论第十三章 红黑树&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4912117.html&quot;&gt;算法导论第十四章 数据结构的扩张&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4905473.html&quot;&gt;AVL树探秘&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5062725.html&quot;&gt;算法导论第十五章 动态规划&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5482594.html&quot;&gt;算法导论第十八章 B树&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5486841.html&quot;&gt;算法导论第十九章 斐波那契堆&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5490858.html&quot;&gt;算法导论之探秘堆结构&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/02/2620826.html&quot;&gt;全排列（含递归和非递归的解法）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/09/09/2677155.html&quot;&gt;旋转字符串算法由浅入深&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4013812.html&quot;&gt;用O(1)的时间复杂度删除单链表中的某个节点&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5349383.html&quot;&gt;漫谈递归转非递归&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630960.html&quot;&gt;BF算法和KMP算法在string 之 strchr函数和strstr函数中的应用&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/4013812.html&quot;&gt;用O(1)的时间复杂度删除单链表中的某个节点&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;
&lt;p&gt;学 Linux 不深入到内核总感觉哪里不对劲，一直都想把这块硬骨头啃下，2018 年立个 flag，多少要啃一点。&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5520860.html&quot;&gt;Linux探秘之用户态与内核态&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5532810.html&quot;&gt;Linux探秘之I/O效率&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5528266.html&quot;&gt;UNIX环境高级编程笔记之文件I/O&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5532307.html&quot;&gt;UNIX环境高级编程笔记之标准I/O库&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5536001.html&quot;&gt;UNIX环境高级编程笔记之进程环境&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5538271.html&quot;&gt;UNIX环境高级编程笔记之进程控制&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5541954.html&quot;&gt;UNIX环境高级编程笔记之线程&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/5561025.html&quot;&gt;UNIX环境高级编程笔记之高级I/O&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;编程技巧&quot;&gt;编程技巧&lt;/h2&gt;
&lt;h3 id=&quot;cc-高阶技巧&quot;&gt;C/C++ 高阶技巧&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/10/2631851.html&quot;&gt;指向函数的指针&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/12/2635369.html&quot;&gt;十个例子让你完全搞懂 C++ 的虚函数（不懂来找我）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/27/2658215.html&quot;&gt;防御性编程&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/27/2658956.html&quot;&gt;数据对齐详解&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/28/2659889.html&quot;&gt;右左法则解决复杂声明&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/09/07/2674772.html&quot;&gt;一招教你写通用的交换程序&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/05/2623643.html&quot;&gt;C++中引用详解&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;自己动手写-string-函数&quot;&gt;自己动手写 string 函数&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/string%E5%BA%93%E5%87%BD%E6%95%B0.html&quot;&gt;string 之 strlen函数&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630800.html&quot;&gt;string 之 strcpy函数&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630809.html&quot;&gt;string 之 strcat 函数&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630815.html&quot;&gt;string 之 strcmp函数&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630960.html&quot;&gt;string 之 strchr函数 和 strstr函数（BF算法和KMP算法的应用）&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630981.html&quot;&gt;string 之 strrev函数&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/08/09/2630993.html&quot;&gt;string 之 memcpy函数 和 memset函数&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;大神经验&quot;&gt;大神经验&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/10/18/2730308.html&quot;&gt;编译器大神心法传授——防御性编程相关&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/10/18/2730308.html&quot;&gt;编译器大神心法传授——内存对齐相关&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/10/26/2741860.html&quot;&gt;编译器大神心法传授——sizeof 详情&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/archive/2012/11/02/2751980.html&quot;&gt;编译器大神心法传授——函数参数传递&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;java-类&quot;&gt;Java 类&lt;/h3&gt;
&lt;p&gt;平时不怎么用 Java ，因此也就写了 3 篇，其中一篇却意外获得了目前为止最高的推荐，这是万万没有想到的，既然大家这么喜欢，我也贴出来吧。&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3562244.html&quot;&gt;Java中Properties类的操作&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/category/554671.html&quot;&gt;Java 对 CSV 文件的操作&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3561207.html&quot;&gt;Java 项目UML反向工程转化工具&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;刷题&quot;&gt;刷题&lt;/h3&gt;
&lt;p&gt;题大大小小刷了不少，但是都没怎么记，有兴趣可以看看 LeetCode。&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/category/554848.html&quot;&gt;LeetCode 题解&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/tag/OJ/&quot;&gt;百炼 OJ&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;工具&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3668442.html&quot;&gt;在word 2010中采用EndNote X7插入引用&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3341490.html&quot;&gt;6个免费的C++图形和游戏库&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3335200.html&quot;&gt;8个免费实用的C++GUI库&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/p/3562503.html&quot;&gt;（转）全球15个顶级技术类博客&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/bakari/category/812137.html&quot;&gt;网络仿真工具——the one&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好了，真正有价值的就这些了，其他的都是一些笔记之类的，就不放上来了，有兴趣的可以到每一个分类和标签里看看有没有你感兴趣的。&lt;/p&gt;
&lt;p&gt;最后，别忘了关注我的公众号「aCloudDeveloper」，以后更多的干货都会发在上面，敬请期待。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/431521/201801/431521-20180101165522221-331133942.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 13:12:00 +0000</pubDate>
<dc:creator>bakari</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bakari/p/8167686.html</dc:identifier>
</item>
<item>
<title>我的 2017 年 - xkfx</title>
<link>http://www.cnblogs.com/xkxf/p/8158363.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xkxf/p/8158363.html</guid>
<description>&lt;p&gt;2017 年，不能说没有收获，但是整体而言仍然非常惨淡，其中个人因素占了绝大部分。&lt;/p&gt;
&lt;p&gt;2017 年，还是有好多东西没有想清楚，没有好好做事，脑子经常非常乱。&lt;/p&gt;
&lt;p&gt;2017 年，坏习惯依然没有完全改掉，但是感觉。。自己在慢慢变好？&lt;/p&gt;

&lt;p&gt;2017 年，养成了一个小习惯，每晚睡前回忆一下当天做的事情。&lt;/p&gt;
&lt;p&gt;就像睡前回忆一样，写写今年到底做了啥（年前回忆？ ：p）&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;   &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#a1&quot;&gt;&lt;span&gt;年末校园篇&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;      &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#a2&quot;&gt;&lt;span&gt;暑期实习篇&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;       &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#a3&quot;&gt;&lt;span&gt;年初校园篇&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span&gt;&lt;span&gt;     &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#a4&quot;&gt;&lt;span&gt;后记&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;h3&gt;&lt;span&gt;2017 年，年末（大二开学至今。）学习与生活 ※ &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#b2&quot;&gt;技术&lt;/a&gt; ※ &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#b3&quot;&gt;其它&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201712/1042431-20171231223719632-766516483.png&quot; alt=&quot;&quot; width=&quot;594&quot; height=&quot;334&quot;/&gt;&lt;/p&gt;
&lt;p&gt;大二开学初，我的注意力主要放在这学期要对付的几门计算机必修课上（操作系统、计算机网络、数据结构），虽然对于这几门课的重要性深信不疑（因为前辈经常提），但是我没有应付这种理论性很强的科目的经验，加之对学校教学质量的严重怀疑，自身意愿和课程安排的严重冲突，这段时间过得很辛苦，饶了不少弯路，可以说是“身心俱疲”。这一状况在我掌握了某些“应试技巧”后有了很大的改善，&lt;strong&gt;认识到自己没办法同时兼顾那么多事情&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于&lt;a href=&quot;https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&quot; target=&quot;_blank&quot;&gt;某线代教学视频&lt;/a&gt;，我对数学的印象也有很大的反转。&lt;/p&gt;
&lt;p&gt;在学习方式上，仍然是主要以自学为主，偶尔听课，在成绩上绝不勉强，底线是“不挂科”。受到学霸的启发以及对某篇文章（作者是阮一峰，关于工作效率的，然而他写的文章太多了，原文没找到！）的印象，尝试了新的、以前没亲自用过的学习方法，私自把它称作“死磕法”，集中精力，连续好几天只做一件事情，感觉效果不错。&lt;/p&gt;
&lt;p&gt;其他方面。很长一段时间，因为皮肤上的一些原因，吃了不少苦头（日均十二个胶囊），生活方式相较以往变化很大，饮食受限非常严重！不过现在已经习惯了。&lt;/p&gt;
&lt;p&gt;由于认知问题，加之各方的刺激，我渡过了心理上非常艰难、焦虑的一段时期（很短暂）。&lt;/p&gt;
&lt;p&gt;近期，对自己的位置、状态有了全新的认识。察觉到由于环境因素，我对于优秀、努力的标准已经降到非常低了，即便是一天下来做的事情寥寥无几，仍无丝毫愧疚感。大一刚入学时，由于惯性相对刻苦，对自己的要求还比较高，经过一年的洗涤，我心中的标准悄无声息地降低了，表现上就是：&lt;strong&gt;明明做的事情比以前少了很多，但是却收获了同等的自我满足。&lt;/strong&gt;得益于长期以来的思考、与人交流，还有偶然看到的一篇&lt;a href=&quot;http://zhihu.com/question/37672919/answer/73645420&quot; target=&quot;_blank&quot;&gt;文章&lt;/a&gt;。自我感觉各方面开始步入正轨，不论是学习还是生活。&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;技术&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;因为精力以及自身的懈怠，过去两个月实在没有真正能够说出口的长进。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在计算机网络大实验的驱动下，我真正开始使用 git &amp;amp; GitHub（虽然仅仅只接触了冰山一角），同时开始缓慢、断续地阅读《重构》，并尝试写更专业的单元测试。&lt;/p&gt;
&lt;p&gt;从零开始构建一个软件给了我不少体会，其一是渐渐感受到了代码中的乐趣，其二是对于软件的构建有不少新的看法（当然，这些看法对于前辈而言可能太过 naive ！），但我还是忍不住想扯一下：作为一个新手程序员，我第一次体会到架构的重要性，写代码时始终盘旋在脑子里的就是这&lt;strong&gt;“架构”&lt;/strong&gt;两个字，&lt;strong&gt;架构&lt;/strong&gt;决定了一个软件的上限，而&lt;strong&gt;打磨&lt;/strong&gt;决定了实际的成果。这恰如界面中的&lt;strong&gt;布局&lt;/strong&gt;和&lt;strong&gt;组件&lt;/strong&gt;，首先要有一个好的布局，然后再慢慢更新组件。当发现写代码已经很艰难的时候就要即时去考虑改变软件的&lt;strong&gt;架构&lt;/strong&gt;，架构就是对象与对象间的关系，每个对象职责、分工应该是很清楚的，要不然代码写到一定程度就会进行不下去。对于大一点的软件来说，MVC 仅仅是局部。另外，大概是对数学印象的改变，机器学习近期被我列为长期的、课余学习对象。&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;span&gt;其它&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;在操作系统老师的极力推荐下，买了《未来简史》，然而也和其它几本买来的小说一起“束之高阁”了。翻的稍微多一点的是一本鸡汤《精进》，偶尔看一下感觉对思维上还是有启发的。&lt;/p&gt;

&lt;h3&gt;2017 年 年中（暑假）生活 ※ &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#c2&quot;&gt;实习&lt;/a&gt; ※ &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#c3&quot;&gt;实习之外&lt;/a&gt; ※ &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/8158363.html#c4&quot;&gt;随想&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201712/1042431-20171231224131179-1855758623.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; “老板，钱少没关系，我就是想学点东西 ~ ” 真正面试的时候我可一点都不轻松（从投递一份&lt;strong&gt;一点都不像样&lt;/strong&gt;的简历，到接到第一个电话，到最后面试），不过我全程在表达的大概就是这个意思，&lt;strong&gt;虽然我这个也不会，那个也不会，但还是希望您能收留我。：p&lt;/strong&gt; 可以说是非常厚脸皮了。&lt;/p&gt;
&lt;p&gt;就这样在 2017 年暑假，开始了我人生中的第一份实习，说是实习倒不如说是我厚着脸皮要来的&lt;strong&gt;“学习机会”&lt;/strong&gt;。因为客观上来说，我完全达不到实习生的标准。&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;&lt;span&gt;生活 &lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;实习前后，有两件我觉得有必要记录的事情。&lt;/p&gt;
&lt;p&gt;第一件，因为一些原因没能留校。（和学校制度有关，但是个人原因占绝大多数）&lt;/p&gt;
&lt;p&gt;第二件，在校外租房支付了意想不到的水电费。&lt;/p&gt;
&lt;p&gt;自认为都是由于个人&lt;strong&gt;“社会经验”不足&lt;/strong&gt;造成的，这两件事情彻底把我脑海中的“老实”变为了一个贬义词。&lt;/p&gt;
&lt;p&gt;老实算是优点还是缺点？ - 陈彤的回答 - 知乎 &lt;a href=&quot;https://www.zhihu.com/question/19844343/answer/18236791&quot; target=&quot;_blank&quot;&gt;https://www.zhihu.com/question/19844343/answer/18236791&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;老实其背后最根源的原因还是胆小——没自信——逃避——自我压抑。
老实人多是无胆之人，所以也是无趣之人。
&lt;strong&gt;老实人逃避独立思考&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;顺从、盲从、急于做出回应和附和。&lt;/strong&gt;老实的人从不积极去思考对错、因果、人性、感受；解决方案；规则、规律；其他方法途径、更优方案；书呆子有时候看起来老实，因为他们相信书本上简单明确的道理，不想思考这个纷繁复杂的现实；他们也极易相信别人、父母告诉他们的经验，并且执行下去，看起来呆板没主见。
面对有竞争的顺境，老实人逃避有为，害怕做多错多，&lt;strong&gt;总是期待是金子自己会发光&lt;/strong&gt;，宁愿不做避免麻烦，宁愿一声不吭也不想让老板注意到自己，宁愿牺牲自己的利益耗费在没价值没收获的位置上，也不会违反规章制度，也不想显得自己特殊，也不会找便宜处理的方法，实际上没人有心思注意到你，实际上越老实、越不重要；老实人很少做出有创造性、独特价值的实践活动和产品，他们大多时间耗费在被安排做杂事和谁都能做但谁都不愿意做的差事上。
面对对抗的逆境，老实人逃避障碍，不想惹麻烦，所以对不公和无礼以及占便宜的人逆来顺受，不会找方法找突破口，完全没有生而为人的气场；老实人生怕得罪人，所以一味客气忍让，但是心眼也小，只会自己在家里辗转反侧；老实人没自信，总是把自己挤压到很小很小，对任何人、任何事都一视同仁，不分缓急，不看情势，不分立场。
&lt;strong&gt;老实人逃避社交和互动，不是不想，是没做好社交的能力。&lt;/strong&gt;所以在人群中过于拘束，不懂得表现的分寸，太礼貌，太客气，因为他们认为自己没有能力回报。
老实人逃避交流沟通，总是期望一句话就解决问题，最怕谈判和沟通，也怕担任领导和指挥的角色，但是往往适得其反麻烦缠身自食其果；老实人不想麻烦别人，因为他们不知道怎么麻烦别人是恰当的。
&lt;strong&gt;老实人并不一定是善良、没有欲望的人，也不一定和谦逊、低调、严谨、大智若愚、体恤这些美好的词联系在一起，他们也想争取利益，他们也想获得成功，但是他们缺少胆量和自信心，习惯了思维懒惰，逃避困难和自我压抑，所以他们无法让自己得到成长，也没有办法获得更多的资源。
老实人最需要做的，就是变得胆大心细，释放自己。&lt;/strong&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; 非常刻意地贴一篇文章提醒自己。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;实习期间的平日生活。还算是“马马虎虎”吧，相比学校的日子可以说是相当惨淡，但还是有一些乐趣的：&lt;/p&gt;
&lt;p&gt;1、骑共享单车上下班。我车被偷了啊！！！上下班能看到特别多同龄人，估计因为这一带是高新区，在高峰期共享单车经常不 够 用，所以就导致了一个结果，不提前上班的话就骑 不到 单车，有一次我手机 不知道 出了什么 问题，扫了一下居然没反应，结果 旁边 一个妹子扫了一下就开走了 ，还回头朝我笑了 一下，感受到 。。&lt;/p&gt;
&lt;p&gt;2、连续一个月中午在公司吃外卖。最开始邻座的小哥 带我到&lt;strong&gt;旁边的村落&lt;/strong&gt;吃午饭（公司偏僻），由于 感到 不合胃口又远，就开始点外卖。在学校里我是 从不点外卖的，吃几天觉得还好，然后一直到现在 我看到任何 外卖 都 感觉是毒药。另外，公司 90% 员工中午都是这么吃的。&lt;/p&gt;
&lt;p&gt;3、原计划我是打算在下班后补补基础的，然后每天下班回来都是处于 瘫痪的 状态。随身带了一本&lt;strong&gt;《Spring in Action》&lt;/strong&gt;，看了不少，但是能亲自用的内容却很少。另外，&lt;span&gt;看剧&lt;/span&gt;貌似是下班后唯一能说出名字的业余活动，那叫啥，当时在热播的、赵丽颖演的《楚。。。&lt;/p&gt;

&lt;p&gt;在租住的地方洗衣服特别不方便。不对，不仅是洗衣服，各方面都超不方便！！！ &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一次发现 学校的食堂好实惠！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;住在宿舍是真的舒服！！！所以 2018 年要更珍惜在学校的生活！&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;实习&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;终于扯到这里了。&lt;/p&gt;
&lt;p&gt;上班第一天，技术头头问我的第一句话是：&lt;strong&gt;“多线程熟吗？”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二句话是：&lt;strong&gt;“ SSM 熟吗？”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后我就很尴尬、很不好意思地连续给出了两个否定回答，（别问我是怎么混进去的！！！）因为面试前，我有在网上看到一个实习的最低标准：&lt;strong&gt;至少熟悉一种 Web 开发框架。&lt;/strong&gt;然后不知啥原因，我就开始学 SSH 了，额，事实上在面试前我仍在学习 SSH ，而且直至面试也完全和&lt;strong&gt;“熟”&lt;/strong&gt;字沾不上边。&lt;strong&gt;这里是饶了一个弯路的，我本应该直接去学 SSM ，&lt;/strong&gt;可惜那时也没人指导，自己找信息也不是很积极。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【第一个星期】 &lt;/strong&gt;我感觉就是换了个环境自学，偶尔还刷刷教学视频神马的，有两个当时看的、私自认为特别值得推荐的视屏（当然对象是小白），都是来自 imooc 的：&lt;/p&gt;
&lt;p&gt;1、关于 MyBatis 的：&lt;a href=&quot;http://www.imooc.com/view/260&quot; target=&quot;_blank&quot;&gt;通过自动回复机器人学Mybatis---加强版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、关于 SSM ：&lt;a href=&quot;http://www.imooc.com/view/587&quot; target=&quot;_blank&quot;&gt;Java高并发&lt;span class=&quot;highlight&quot;&gt;秒杀API之业务分析与DAO层&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总之是上面那两个系列的。很多人说看视频不好，但是我觉得有些黑科技、小习惯真的不是看书可以学到的。还有一个和&lt;span&gt;宅宿舍自学&lt;/span&gt;不同的地方是：不懂的地方可以很方便地去问，并且师兄丢了一个以前的一个 SSM 项目给我阅读。我还记得刚拿到项目时的心情，卧槽为啥那么多 ，卧槽。。（总之就是第一次看到那么多代码的心情，第一个面临的问题是：&lt;strong&gt;&lt;span&gt;如何在自己的电脑上把项目跑起来。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【第二周】 &lt;/strong&gt;开始做一个微信相关的东东，第一次被老板安排任务 我真的是非常非常&lt;span&gt;&lt;strong&gt;紧张&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;老板说非常简单，让老手来弄&lt;strong&gt;半天&lt;/strong&gt;就好了，给我&lt;strong&gt;三天时间&lt;/strong&gt;， 我居然还留了证据 好骚。。 --&amp;gt; &lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/xkxf/p/7172996.html&quot;&gt;实习一周的记录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后我就开始&lt;span&gt;&lt;strong&gt;紧张地&lt;/strong&gt;&lt;/span&gt;问前辈，回想下我当时为啥这么&lt;strong&gt;&lt;span&gt;紧张&lt;/span&gt;&lt;/strong&gt;，其一是因为&lt;span&gt;第一次做事情&lt;/span&gt;怕搞砸，其二是因为我根本没把&lt;strong&gt;要做什么搞清楚&lt;/strong&gt;【也就是&lt;strong&gt;需求&lt;/strong&gt;】，这东西在我眼里就是一个无底洞。经过一些折腾之后的结果是：直接把原始（别人的、非常久远的）代码拿来改，最后还缺一个&lt;span&gt;短信验证模块&lt;/span&gt;我开始问负责的人。。。结果咋滴！。。那人一副&lt;strong&gt;摸不着头脑的&lt;/strong&gt;模样，看来真的是一个非常不重要的项目啊，然后我作为当事人却非常&lt;span&gt;着急&lt;/span&gt;，我犹豫要不要直接问老板，等到我真去问的时候，出现了另一件很匪夷所思、意想不到的事情。结局是我的&lt;span&gt;心情非常复杂&lt;/span&gt;。。最后老板那边轻描淡写就过去了。实习期间都应该有这么个考验期，然后我明白了一个被人明白烂的道理：&lt;strong&gt;很多事情看上去很难、或者很高端，事实上真去做的时候也就是那么回事儿。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【第三周】&lt;/strong&gt;开始跟团，参与某个网站的开发，统一用 Eclipse ，（我之前一直在用 IDEA ，上班前特意花了几天时间熟悉 Eclipse）&lt;/p&gt;
&lt;p&gt;作为个人，日常主要是这三件事：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;临时学习不懂的东西&lt;/li&gt;
&lt;li&gt;写代码，负责写一些简单的 CRUD 和 js，下班前提交到码云。&lt;/li&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;ps. 邻座老王还会偷刷微博。。&lt;/p&gt;
&lt;p&gt;这周就是&lt;span&gt;&lt;strong&gt;中规中矩&lt;/strong&gt;&lt;/span&gt;吧，因为整个框架都是别人（叫主程？）打好的，而我们这些实习生就是做一些修补工作，严重感到我写的 js 要比 Java 多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【第四周】&lt;/strong&gt;开始渐渐没啥事做，对各种事情也没什么太多新鲜感，然后自我感觉就像是一个&lt;strong&gt;&lt;span&gt;皮球&lt;/span&gt;&lt;/strong&gt;，大家大都专注于自己的事情，感觉也很没存在感。。。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实习末&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【第五周】&lt;/strong&gt;又该交房租了，这地方显然不宜久住。我也算不准什么时候走。索性偷偷搬回了宿舍，偷偷办了门卡。因为白天都在公司，我也很懒得、不好意思拜托别人。宿舍有水没有电。然后就这样住了&lt;span&gt;最痛苦&lt;/span&gt;的两天。。。这样一来，上班的路程确实远了好多。之后我确确实实发烧了，也觉得自己心神上有点透支，没有犹豫太多就以此为借口&lt;span&gt;逃&lt;/span&gt;了，临时买了动车票，给家里打了个电话，当天就回家了，坐公交时真的感觉自己&lt;span&gt;濒死&lt;/span&gt;了。。一回到家 瞬间感觉痊愈。。 大概这就是&lt;span&gt;心病，&lt;/span&gt;之后就是学车 &amp;amp; 家里 宅。。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这个时候发现 工作时负荷确实有点大，倒不是说项目压力，或者每天真要做特别多事情，只是 一天那么长时间，光坐在电脑面前就特别累了。。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每天一到下午真的就是那种 高中上英语课的 游离感。&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;随想&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;整体而言的收获，&lt;/p&gt;
&lt;p&gt;1、增加了社会经验，好歹也打了一波杂。&lt;/p&gt;
&lt;p&gt;2、了解了一个团队的分工合作方式&lt;/p&gt;
&lt;p&gt;3、体会到了程序员确实是一份透支生命的差事。（程序员中的大多数？）&lt;/p&gt;
&lt;p&gt;4、出于项目需要，学了特别多乱七八糟的东西。&lt;/p&gt;
&lt;p&gt;客观来讲：能在这个时间点体验到这些东西我觉得还是值得的，但是明年（2018）我可能会选择自己老实待家里学习，（如果没办法进好一点的公司打杂的话。。&lt;/p&gt;
&lt;p&gt;然后我现在回首去看在公司的学习经历，真切感到&lt;strong&gt;“学得很多、很快”&lt;/strong&gt;就是一种错觉，大多数东西都是即拿即用，捡起来用一下就扔掉，每天也几乎是重复的劳作（不太靠脑子？），而且这些活还必须有人来做，这种日子体验一下是可以，长期来说不行。这大概就是 最底层的程序员吧。（这个底层不是那个底层，你懂的！）&lt;/p&gt;
&lt;p&gt;公司里的人，多数还是不错的，仿佛有一种“程序员的单纯”吧。就都干起活来很专注，除了偷刷微博的邻座老王！有几个大四毕业的实习生，代码写得和我竟然也差不太多，然后各位男同胞的代码啊，普遍丑陋不堪，参差不齐，比较典型的、印象比较深的就是，数据访问对象有人写 Dao ，有人写 DAO （我是后者！）这个锅也不知道应该谁来背。。。&lt;/p&gt;

&lt;h3&gt; 2017 年 年初&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201712/1042431-20171231224023351-857502442.png&quot; alt=&quot;&quot; width=&quot;312&quot; height=&quot;318&quot;/&gt;&lt;/p&gt;
&lt;p&gt;也就是大一下学期。越往前写，记忆确实是越来越模糊了（其实是不想写了 😅）。所以就简单地记录一下：&lt;/p&gt;
&lt;p&gt;还是延续了 2016 年末的节奏，还是那个刚上大学的我。脑子里想的还是尽可能多做点事情，好扳回一局。。因为高考太惨了。。&lt;/p&gt;
&lt;p&gt;沿用了 2016 年的“多线程学习方法”。深入反思后醒悟，这种学习方式不仅看上去上很蠢，而且实效也不好😅当然这个结果和我求量不求质有关。&lt;/p&gt;
&lt;p&gt;唯一欣慰的是学习的总体过程出乎意料的稳，怎么说呢，即便今天再忙，我也会水掉今天的几个指标。详细可以看下前段时间写的 &lt;a href=&quot;http://www.cnblogs.com/xkxf/p/7608622.html&quot;&gt; 开博近一年的感想 by 程序员小白&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;就这样脑袋很简单的水掉了上半年吧，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总体上这段时间学习方式很僵硬、很死板。。&lt;span&gt;&lt;strong&gt;看上去做的事情还算多其实啥也没做&lt;/strong&gt;&lt;/span&gt;，有一些自己的想法但主要还是被学校的课程牵着走，非常客观的说，学校的教学质量和教材方面真的非常落伍，真的是那种不上课反而更好，虽然说是我活该。。&lt;/p&gt;
&lt;p&gt;如果让我再来一次，我应该会放聪明点，积极收集历年试卷应付考试，然后果断自学。。&lt;/p&gt;
&lt;p&gt;要说思想上有啥进步：开始有意识的了解一些 AI 方面的知识，&lt;strong&gt;逐渐意识到生活从来就不会按照你设想的那样走。。。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;12 月 31 日&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201712/1042431-20171231224336085-2131908285.png&quot; alt=&quot;&quot; width=&quot;630&quot; height=&quot;354&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上午，写了一篇博文没发出去，感觉良好。&lt;/p&gt;
&lt;p&gt;下午，订做的 zf 宝商家收款码到了，立刻开始了一场发财梦。。额 我寻思要不要发出来一下。&lt;/p&gt;
&lt;p&gt;晚饭回来，如你所见，&lt;a class=&quot;titlelnk&quot; href=&quot;https://www.cnblogs.com/yjlblog/p/8157414.html&quot; target=&quot;_blank&quot;&gt;【博客美化】新年啦，给自己博客加个雪花效果吧~&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看到首页一大波 2018 2017 ，旋即想蹭一波热度，为毛 我觉得 博客园 跨年的氛围 比 朋友圈、QQ 空间还浓厚！！！&lt;/p&gt;
&lt;p&gt;然后写博客写到凌晨。&lt;/p&gt;

&lt;p&gt;其实还是有很多没提到的，&lt;/p&gt;
&lt;p&gt;例如说，发现这个冬天最值得看的《宝石之国》。&lt;/p&gt;
&lt;p&gt;2017 年，对阶级的认识更深了&lt;/p&gt;
&lt;p&gt;2017 年，有了一个无话不说的，呃。。网友（男）&lt;/p&gt;
&lt;p&gt;2017 年，渐渐看到了代码之外更大的世界。。（卧槽，我好 。 。。矫情？）&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;全剧终&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;啊！！。。我真的是把 2017 年所有的回忆， 2018 年所有的闲话都说完了。&lt;/p&gt;

&lt;p&gt;还是不要脸的发上来了。&lt;/p&gt;
&lt;p&gt;各位看官觉得还可以的话，就给我刷个红包呗。。。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180101201530315-1961029393.jpg&quot; alt=&quot;&quot; width=&quot;208&quot; height=&quot;243&quot;/&gt;  &lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180101201604456-549315233.jpg&quot; alt=&quot;&quot; width=&quot;222&quot; height=&quot;244&quot;/&gt;&lt;/p&gt;
&lt;p&gt;万一有人还没领呢? 对吧？。。打钱的时候切记手不要抖，多打、误打不退！&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201712/1042431-20171231205229273-4440305.png&quot; alt=&quot;&quot; width=&quot;151&quot; height=&quot;157&quot;/&gt;&lt;/p&gt;




&lt;h4&gt;&lt;span&gt;后记&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;其实 我一边写。 。一边看了几位大神的 年终总结&lt;/p&gt;
&lt;p&gt;还是 感觉  今年一定要 六个字形容的话。。。那就是&lt;strong&gt;“失败而又充实”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;差点惭愧的 想 一下把 写的东西全部删掉。。。&lt;/p&gt;
&lt;p&gt;大家都那么努力 。。我却还在写这些东东。。。  &lt;/p&gt;
&lt;p&gt;。 。。&lt;/p&gt;
&lt;p&gt;当然 最后因为不忍心也没删掉。。&lt;/p&gt;
&lt;p&gt;想想 万一  2018 年、2019年 还在写代码的话，也可以对比一下。。是吧。。&lt;/p&gt;
&lt;p&gt;继续写下去感觉还是很值得的，毕竟我都忘记 2016 年以前的我在干啥了。。。&lt;/p&gt;
&lt;p&gt;然后，我想 什么时候技术文章能扯那么多就好了。明年一定会实现！（逃 。&lt;/p&gt;

&lt;p&gt;ps. 有任何问题或者建设性的意见都可以在底下留言哦 ~ &lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 13:05:00 +0000</pubDate>
<dc:creator>xkfx</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xkxf/p/8158363.html</dc:identifier>
</item>
<item>
<title>webpack 理解 - stone-lyl</title>
<link>http://www.cnblogs.com/stone-lyl/p/8168680.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stone-lyl/p/8168680.html</guid>
<description>&lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#关于此文&quot;&gt;关于此文&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#在学习webpack之前我们先去了解它的作用&quot;&gt;在学习webpack之前，我们先去了解它的作用&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#它与其他其他前端工具gulpgrunt有什么差别呢&quot;&gt;它与其他其他前端工具（gulp，grunt）有什么差别呢&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#安装&quot;&gt;安装&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#webpack.config.js-配置结果&quot;&gt;webpack.config.js 配置结果&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#webpack-开始简单配置&quot;&gt;webpack 开始简单配置&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#文件结构&quot;&gt;文件结构&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#demo地址&quot;&gt;demo地址&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#参考连接&quot;&gt;参考连接&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;关于此文&quot;&gt;关于此文&lt;/h3&gt;
&lt;p&gt;本文是笔者初学webpack后的一个简单总结和重新思考的过程。文章中加入了更多的认识和理解，关于配置就比较简陋了。希望能帮助到大家，有误的地方也请多多指正 (^^ゞ 。最后，祝大家元旦快乐ヾ(≧▽≦*)o&lt;/p&gt;
&lt;h3 id=&quot;在学习webpack之前我们先去了解它的作用&quot;&gt;在学习webpack之前，我们先去了解它的作用&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;如webpack官网所示，它分析你的项目结构将其打包成适合浏览器加载的模块。但值得注意的是，webpack并不会在浏览器内加载解释器，所以它属于一个预编译模块的方案。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/mq0pcu936kdshjhmkhgn4dci/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-27.6kB&quot;/&gt;&lt;/li&gt;
&lt;li&gt;在打包前我们也需要做一些转换。这些转换主要在&lt;code&gt;loader&lt;/code&gt;中进行（列如将&lt;code&gt;scss&lt;/code&gt;转换成&lt;code&gt;css&lt;/code&gt;）。同时，在webpack中有各种各样的功能，例如：模块热加载，这就需要&lt;code&gt;plugin&lt;/code&gt;了。也因为这两个部分，webpack 变得丰富而复杂了。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;它与其他其他前端工具gulpgrunt有什么差别呢&quot;&gt;它与其他其他前端工具（gulp，grunt）有什么差别呢&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;gulp/grunt&lt;/code&gt;&lt;/strong&gt;: 他们是一个中能优化前端流程的工具，他们也可以转换 &lt;strong&gt;&lt;code&gt;scss&lt;/code&gt;&lt;/strong&gt;,&lt;code&gt;less&lt;/code&gt;，实现自动刷新页面的功能。&lt;br/&gt;&lt;strong&gt;&lt;code&gt;webpack&lt;/code&gt;&lt;/strong&gt;: 它则属于一个预编译模块方案（模块打包工具），我们现在的前端代码开始分模块进行构建，则会用到&lt;code&gt;import &quot;./a.js&quot;;&lt;/code&gt; 、&lt;code&gt;require (&quot;a.js&quot;);&lt;/code&gt; 等方法。但是浏览器是不认识这样的方法。这事，&lt;code&gt;webpack&lt;/code&gt; 就出现了，它采用预编译的方式，在代码加载到页面前，把这些模块引用的方式转换成浏览器可以识别的js代码。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;创建package.json&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm init&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装webpack依赖&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// 安装到项目目录
npm i -D webpack&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;webpack.config.js-配置结果&quot;&gt;webpack.config.js 配置结果&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;// __dirname 是node.js一个全局变量，指向当前执行的脚本所在文件目录。
const webpack = require('webpack');
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
    entry: path.resolve(__dirname, 'app/main.js'), // 唯一入口文件
    output: {
        path: path.resolve(__dirname, 'build'), // 打包后文件存放的位置
        filename: 'js/[name].js', // 打包后输出文件的文件名
    },
    devServer: {
        contentBase: path.resolve(__dirname, 'build'),  // 服务器所加载的页面目录
        inline: true,
        port: 2333,
        hot: true,
    },
    module: {
        loaders: [
            {
                test: /\.css$/,
                use: [
                    { loader: 'style-loader' },
                    {
                        loader: 'css-loader',
                        options: {
                            modules: true, // 指定启用css modules
                        }
                    },
                    {
                        loader: 'postcss-loader',
                        options: {
                            plugins: [require('autoprefixer')],  // 为css在不同浏览器中添加前缀
                            browser: ['last 5 versions']        // 浏览器最新的五个版本。
                        }
                    },
                ]
            },
            {
                test: /\.less$/,
                use: [
                    { loader: 'style-loader' },
                    {
                        loader: 'css-loader',
                        options: {
                            modules: true, // 指定启用css modules
                        }
                    },
                    {
                        loader: 'postcss-loader',
                        options: {
                            plugins: [require('autoprefixer')],  // 为css在不同浏览器中添加前缀
                            browser: ['last 5 versions']        // 浏览器最新的五个版本。
                        }
                    },
                    { loader: 'less-loader' },
                ]
            },
            {
                test: /\.js$/,
                loader: 'babel-loader',
                include: '/app',
                exclude: /node_modules/,
                query: { presets: ['latest'] }
            }
        ]
    },
    plugins: [
        new HtmlWebpackPlugin({
            template: path.join(__dirname, 'index.html'),      // 被编译的HTML文件路径 
            filename: path.resolve(__dirname, 'build/index.html'),  // 编译后的HTML文件存放路径
            inject: 'body',      // 编译后的js被插入HTML的body中。
            title: 'webpack is great!', //可以通过模板引入HTML文件中。
        }),
        new webpack.HotModuleReplacementPlugin(),
    ],
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面是我们常见的webpack文件，这里我们先通过 entry, output, loader(上面代码中的module模块), plugins对webpack进行讲解。&lt;br/&gt;&lt;strong&gt;entry&lt;/strong&gt;: 入口文件，告诉webpack文件入口在哪里。可用三种方式表示，字符串，数组，对象。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;entry: path.resolve(__dirname, '/app/main.js'), // 唯一入口文件&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;output&lt;/strong&gt;: 只能有一个配置文件。需要两个基本的配置： a filename, path&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;output: {
        path: path.resolve(__dirname, 'build'), // 打包后文件存放的位置
        filename: 'js/[name]-[chunkhash].js', // 打包后输出文件的文件名
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;chunkhash:不同模块文件，生成不同的打包文件，具有独特的标志，在修改a.js文件后，只对a.js进行重新打包。 除了chunkhash以外， 一般出口文件为：'bunld.js', '[name].js]', '[name]-[hash].js'。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/cwnn4w8alnvb7qetib1j5ern/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-27.6kB&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;publicPath&lt;/strong&gt;&lt;br/&gt;在打包后的js标签中添加前缀。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; output: {
        path:　path.resolve(__dirname, 'build'),
        filename: 'js/[name]-[chunkhash].js',   // 为每一个生成的js,带上hash
        publicPath: 'http://cdn.com/'   // 在打包后的js标签中添加前缀。
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;效果：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/o8v2hrbimrq3exitavpfjo8c/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-47.5kB&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用上述的cdn或者hash的方式: 生成模式下更新内嵌css,html文件里url值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;loader&lt;/strong&gt;： 资源转换器。（所有的资源都是模块，例如less通过loader可转换成css）。 test:正则。 loader:编译方法。&lt;br/&gt;&lt;strong&gt;plugin&lt;/strong&gt;： 做loader无法做到的功能，以对象形式引入。例如模块热加载。&lt;/p&gt;
&lt;h3 id=&quot;webpack-开始简单配置&quot;&gt;webpack 开始简单配置&lt;/h3&gt;
&lt;p&gt;我们这里写一个简单的demo。&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;只讲解webpack中loader, plugin 中一两个常用的配置，方便大家理解配置的意义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们的目录结构：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/5zgbku7ba3xqzcu3e1w7nnvs/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-13.6kB&quot;/&gt;&lt;/p&gt;
&lt;p&gt;index.html:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt;
    &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&amp;gt;
    &amp;lt;title&amp;gt;webpack demo1&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id=&quot;app&quot;&amp;gt;
        hello, webpack !
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;main.js:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;const app = document.getElementById('app');
app.innerText = &quot;change app text!&quot;;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;webpack.config.js&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// __dirname 是node.js一个全局变量，指向当前执行的脚本所在文件目录。
const webpack = require('webpack');
const path = require('path');

module.exports = {
    entry: path.resolve(__dirname, 'app/main.js'), // 唯一入口文件
    output: {
        path: path.resolve(__dirname, 'build'), // 打包后文件存放的位置
        filename: 'js/[name]-[chunkhash].js', // 打包后输出文件的文件名
    },
    module: {
    },
    plugins: [
    ],
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们可以看到，我们并没有在index.html 中插入js。所以打开index.html效果如下：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/l6tygnft7cu9pc8a6d9as0io/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-1.8kB&quot;/&gt;&lt;br/&gt;现在我要达到js可以自动插入html的效果。&lt;/p&gt;
&lt;h4 id=&quot;在webpack中配置html文件&quot;&gt;在webpack中配置html文件&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;安装插件&lt;/strong&gt;： &lt;code&gt;npm install -D html-webpack-plugin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;htmlWebpackPlugin的相关配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;plugins: [
        new HtmlWebpackPlugin({
            template: path.join(__dirname, 'index.html'),      // 被编译的HTML文件路径 
            filename: path.resolve(__dirname, 'build/index.html'),  // 编译后的HTML文件存放路径
            inject: 'body',      // 编译后的js被插入HTML的body中。
            title: 'webpack is great!' //可以通过模板引入HTML文件中。
        }),
    ],&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后我们运行webpack，我们需要在控制台输入：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;webpack --config webpack.config.js --progress --colors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在运行webpack.config.js，（--progress）显示它的打包模块的进度：..%。&lt;br/&gt;如果报错 无法识别webpack 请全局安装webpack。&lt;br/&gt;运行后我们控制台表现为：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/1pxaqq2ezh1me89eb7a4sgb3/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-28kB&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;asset: 打包生成的文件&lt;br/&gt;size:文件大小&lt;br/&gt;Chunks:打包的分块&lt;br/&gt;Chunk Names:打包的块名称。&lt;/li&gt;
&lt;li&gt;打包成功的各个模块。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;然后我们发现 build 文件夹新增了几个文件。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/q9r2o8c9rw1ltka0mde4wnd5/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-5.2kB&quot;/&gt;&lt;br/&gt;我们打开其中index.html 会发现js已经被插入其中了。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/9ikgp6taikjadumc4l7vlyr3/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-8.1kB&quot;/&gt;&lt;br/&gt;点击build中的index.html 我们会发现页面已经发生了改变。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/3xctc14hr2w2m42c62pr703h/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-0.7kB&quot;/&gt;&lt;br/&gt;我们文件插入成功了！&lt;/p&gt;
&lt;p&gt;最后，在&lt;code&gt;package.json&lt;/code&gt;中配置运行方式。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/zutjuojbdqzza2huei980dfk/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-7.3kB&quot;/&gt;&lt;br/&gt;以后我们只需要在控制台输入：&lt;code&gt;npm run webpack&lt;/code&gt;即可。&lt;/p&gt;
&lt;h4 id=&quot;csslesssass-的处理&quot;&gt;css/less/sass 的处理&lt;/h4&gt;
&lt;p&gt;安装: &lt;code&gt;npm i -D style-loader css-loader postcss-loader autoprefixer&lt;/code&gt;&lt;br/&gt;作用：&lt;br/&gt;css-loader: 处理css文件中的url()等&lt;br/&gt;style-loader:将css样式插入html。&lt;br/&gt;postcss-loader: 灰常的强大，一个后处理器，有很多插件 如：autoprefixer 为一些css属性在不同浏览器上的引用，加上对应的前缀。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;以下面的代码为例，loader的执行顺序为&lt;code&gt;postcss-loader css-loader style-loader&lt;/code&gt; ，loader顺序和他们执行的功能是有关的，如果打乱可能会报错。&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;    module: {
        loaders: [
            {
                test: /\.css$/,
                use: [
                    { loader: 'style-loader' },
                    {
                        loader: 'css-loader',
                        options: {
                            modules: true, // 指定启用css modules
                        }
                    },
                    {
                        loader: 'postcss-loader',
                        options: {
                            plugins: [require('autoprefixer')],  // 为css在不同浏览器中添加前缀。
                            browser: ['last 5 versions']        // 浏览器最新的五个版本。
                        }
                    },
                ]
            },
        ]
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt; loader: 'style-loader!css-loader!postcss-loader'
loaders: ['style-loader', 'css-loader',  'postcss-loader']  // 数组处理从右到左。
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;webpack3.0以后推荐使用第一种方式，我们在main.js 文件中引入的 css: &lt;code&gt;import &quot;./style.css&quot;&lt;/code&gt;。&lt;br/&gt;现在我们看执行后的效果。&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/pmdptaxoh5h1dqcbij111hjp/image_1c2eprhag15hmvu7umla5c1qh09.png&quot; alt=&quot;image_1c2eprhag15hmvu7umla5c1qh09.png-38.2kB&quot;/&gt;&lt;br/&gt;css样式被插入html中了！U•ェ•*U&lt;/p&gt;
&lt;p&gt;如果我们使用的是less 或者 sass只需要添加如下操作。&lt;/p&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;npm i -D less-loader less&lt;br/&gt;npm i -D sass-loader sass&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;webpack.config.js中：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;修改 test:
test: /\.less$/,
在use后面添加一个对应的loader 即可。
{   loader: 'less-loader'   },&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;&lt;li&gt;最后记得修改对应的文件后缀。&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;使用babel-loader-转换es&quot;&gt;使用babel-loader 转换ES&lt;/h4&gt;
&lt;p&gt;我们修改main.js&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;import &quot;./style.less&quot;;
const app = document.getElementById('app');
app.innerText = &quot;change app text!&quot;;
let changeText = () =&amp;gt; {
    return 'function change text!!###!';
}
app.innerText = changeText();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;同时我们也发现了，每次运行&lt;code&gt;npm run webpack&lt;/code&gt; 都会打包出新的带有hash的main.js。&lt;br/&gt;可以配置&lt;code&gt;clean-webpack-plugin&lt;/code&gt; 来清除，但这里我们简单的修改：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    output: {
        path: path.resolve(__dirname, 'build'), // 打包后文件存放的位置
        filename: 'js/[name].js', // 打包后输出文件的文件名
    },&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;babel转换：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;npm install -D babel-loader babel-core babel-preset-latest&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt; loaders: [
            {
                test: /\.js$/,      // 正则匹配loader对象
                loader:'babel-loader',  
                include: '/src',    // 使用babel-loader 转换的目录
                exclude: /node_modules/,  //排除的目录
                query: { presets: ['latest'] }  //使用的版本控制。
            }
        ]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后打开build中的index文件：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/aq6r276tahhe8x42hzhh1uge/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-9.8kB&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;自动刷新-模块热加载&quot;&gt;自动刷新+ 模块热加载&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;安装： &lt;code&gt;npm i -D webpack-dev-server&lt;/code&gt;，webpack-dev-server是一个小型的Node.js Express服务器。&lt;/li&gt;
&lt;li&gt;我们在output 后面添加一项。&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt; devServer: {
        contentBase: path.resolve(__dirname, 'build'),  // 服务器所加载的页面目录
        inline: true,   
        port: 2333,
        hot: true,  //这需要配合Hot Module Replacement实现模块热加载。
    },&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;&lt;li&gt;在plugins中添加一个配置项，热模块替换(Hot Module Replacement)只替换更新的部分,而不是页面重载。&lt;br/&gt;它是webapck 自带的内容，所以不需要安装：&lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后我们需要在scripts中添加配置项：　&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/yyl3hsazhavdhjq6c94m7jwa/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-8.7kB&quot;/&gt;&lt;br/&gt;然后我们在控制台输入　npm run server 时，就可以在本地起一个服务了，效果如下：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/e5zc14tyqi3xyu9dxe08s64u/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-6.4kB&quot;/&gt;&lt;br/&gt;如果不想每次启服务的时候打开页面可以修改scripts为：&lt;br/&gt;&lt;code&gt;&quot;server&quot;: &quot;webpack-dev-server --config webpack.config.js&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;文件结构&quot;&gt;文件结构&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;目录结构&lt;/strong&gt;：&lt;br/&gt;&lt;img src=&quot;http://static.zybuluo.com/Jacqueline/7tgtukal7pxb0310u9lu24i2/%E5%9B%BE%E7%89%87.png&quot; alt=&quot;图片.png-18.4kB&quot;/&gt;&lt;br/&gt;&lt;strong&gt;package.json&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; &quot;scripts&quot;: {
    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;amp;&amp;amp; exit 1&quot;,
    &quot;webpack&quot;: &quot;webpack --config webpack.config.js --progress --colors&quot;,
    &quot;server&quot;: &quot;webpack-dev-server --open&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;autoprefixer&quot;: &quot;^7.2.3&quot;,
    &quot;babel-core&quot;: &quot;^6.26.0&quot;,
    &quot;babel-loader&quot;: &quot;^7.1.2&quot;,
    &quot;babel-preset-latest&quot;: &quot;^6.24.1&quot;,
    &quot;css-loader&quot;: &quot;^0.28.7&quot;,
    &quot;html-webpack-plugin&quot;: &quot;^2.30.1&quot;,
    &quot;less&quot;: &quot;^2.7.3&quot;,
    &quot;less-loader&quot;: &quot;^4.0.5&quot;,
    &quot;postcss-loader&quot;: &quot;^2.0.9&quot;,
    &quot;style-loader&quot;: &quot;^0.19.1&quot;,
    &quot;webpack&quot;: &quot;^3.10.0&quot;,
    &quot;webpack-dev-server&quot;: &quot;^2.9.7&quot;
  },&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;:&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/stone-lyl/p/8168680.html#webpackconfigjs-配置结果&quot;&gt;webpack.config.js 配置结果&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;demo地址&quot;&gt;demo地址&lt;/h3&gt;
&lt;p&gt;点击跳转： &lt;a href=&quot;https://github.com/stone-lyl/Plugin/tree/master/webpack-demo1&quot;&gt;webpack-demo1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考连接&quot;&gt;参考连接&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://webpack.js.org&quot; class=&quot;uri&quot;&gt;https://webpack.js.org&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.zhihu.com/question/37020798/answer/71621266&quot; class=&quot;uri&quot;&gt;https://www.zhihu.com/question/37020798/answer/71621266&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.imooc.com/learn/802&quot; class=&quot;uri&quot;&gt;https://www.imooc.com/learn/802&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 01 Jan 2018 12:28:00 +0000</pubDate>
<dc:creator>stone-lyl</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stone-lyl/p/8168680.html</dc:identifier>
</item>
</channel>
</rss>