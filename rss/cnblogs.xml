<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>织云 Metis：看腾讯怎么做智能运维 - 腾讯云+社区</title>
<link>http://www.cnblogs.com/qcloud1001/p/8980637.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qcloud1001/p/8980637.html</guid>
<description>&lt;div class=&quot;image-block&quot;&gt;&lt;strong&gt;&lt;strong&gt;欢迎大家前往&lt;a href=&quot;https://cloud.tencent.com/developer/?fromSource=waitui&quot;&gt;腾讯云+社区&lt;/a&gt;，获取更多腾讯海量技术实践干货哦~&lt;/strong&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;div class=&quot;image-block&quot;&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/1642104/9uraz0kdo2.png?imageView2/0/w/1620&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;作为企业智能运维门户，业界早已关注织云的智能运维体系。我们很荣幸地宣布织云 Metis 智能运维体系正式发布。自此，织云家族已发布：织云企业版，织云社区版（Lite），织云 Metis 智能运维。&lt;a href=&quot;https://cloud.tencent.com/developer/article/1099166&quot; target=&quot;_blank&quot;&gt;企业版和社区版区别请戳&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Metis 是腾讯内部落地实践的智能运维场景的集合，具备多种核心能力，如智能监控、智能分析、智能决策等。这些核心能力已在多元化、多样化的运维场景中得到落地实践。Metis 是从腾讯QQ、Qzone 等海量业务的一体化运维体系中孵化产生的，是织云 AIOps 的最佳实践。&lt;/p&gt;

&lt;h2&gt;业务高质量保障&lt;/h2&gt;
&lt;p&gt;利用机器学习技术，进行异常检测、故障定位、瓶颈分析等，可在无人工干预下，智能地保障业务高质量运行。例如时间序列异常检测、DLP 生死指标监控、多维下钻、关联分析、ROOT 根源分析等场景都是Metis在质量保障方面的典型应用。&lt;/p&gt;
&lt;h2&gt;运维效率提升&lt;/h2&gt;
&lt;p&gt;利用自然语言处理、机器学习技术，深挖智能问答、智能变更、智能决策，显著地提升运维人员的效率。例如智能客服机器人、舆情监控、智能负载均衡、数据库调参、极限调度等场景都是 Metis 在提升运维效率上的典型应用。&lt;/p&gt;
&lt;h2&gt;成本优化管理&lt;/h2&gt;
&lt;p&gt;利用大数据智能分析技术，进行资源（设备、带宽、存储）管理，可迅速分析资源使用的明细，并通过横向大数据对比挖掘可优化点。织云团队在 GOPS2018 全球运维大会--腾讯运维体系专场分享的&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyNjgwNTU5NQ==&amp;amp;mid=2247484083&amp;amp;idx=1&amp;amp;sn=0638027b19ed1a7b1e812bae978c536c&amp;amp;chksm=e86b9087df1c1991eee41267b57aed47ca6804e7e64fa9d26601c2698bc882dcdfc8b599ecab&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;《十亿元背后的价值》&lt;/a&gt;中概括了Metis成本管理挖掘的众多优化项。&lt;/p&gt;

&lt;h2&gt;智能分析决策， 取代繁琐重复的人工诊断&lt;/h2&gt;
&lt;p&gt;在日常运维过程中，运维人员积累了大量的人工经验，同时大部分故障都是重复的、需人工定位的。重复性的分析会损耗人力，而且人工确认存在滞后性。织云Metis可以把丰富的运维经验固化下来，对常见问题实现分钟级内自动诊断，可直接给出故障定位的结果信息。&lt;/p&gt;
&lt;ul class=&quot;ul-level-0&quot;&gt;&lt;li&gt;对于已知的故障：织云 Metis 能够综合故障数据和人工经验自动提取故障特征，以故障特征库的形式，自动匹配定位故障；&lt;/li&gt;
&lt;li&gt;对于未知场景：织云 Metis 可根据故障特征推算出可能的原因，并在人工确认后加入故障特征库。&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;智能精准预测，取代人工粗略预估&lt;/h2&gt;
&lt;p&gt;为了保障产品的正常运营，容量预留过多或过少都会存在一些问题。而传统的基于运维经验容量预测手段不是十分有效，织云 Metis 根据业务目标的需求，结合服务数据，整合业务运维人员的业务经验，建立精准容量规划模型，从而精确预测各个业务的容量，让资源使用率达到最优。&lt;/p&gt;

&lt;p&gt;时间序列异常检测是 Metis 组成部分之一，承载了海量业务的监控告警功能。其优越性体现在三点：&lt;/p&gt;
&lt;h2&gt;无阈值智能判决&lt;/h2&gt;
&lt;p&gt;运维人员无需设置告警阈值，检测模型可对数据异常智能判决，直观告诉大家检测结果是正常还是异常；&lt;/p&gt;
&lt;h2&gt;通用检测模型&lt;/h2&gt;
&lt;p&gt;智能检测的模型由海量的业务样本数据训练而成，适合复用在时间序列类数据的检测中；&lt;/p&gt;
&lt;h2&gt;可成长业务反馈&lt;/h2&gt;
&lt;p&gt;实践过程中也会遇到较个性的业务场景，这里支持用户标注反馈检测结果，异常检测系统可以自动化地根据用户反馈信息进行进阶学习、优化模型，加强对业务的理解，变得越来越懂业务。&lt;/p&gt;

&lt;div class=&quot;image-block&quot;&gt;&lt;img src=&quot;https://ask.qcloudimg.com/draft/1642104/s97r5gdjfh.png?imageView2/0/w/1620&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;织云 Metis--时间序列异常检测诚邀您体验智能运维场景。&lt;/p&gt;


&lt;div class=&quot;image-block&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问答&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相关阅读&lt;/strong&gt;&lt;/p&gt;



&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;image-block&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;col-article-title&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;col-article-title&quot;&gt;&lt;strong&gt;此文已由作者授权腾讯云+社区发布，原文链接：https://cloud.tencent.com/developer/article/1114222?fromSource=waitui&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;col-article-title&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1112679/201803/1112679-20180330104936874-1573429539.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 02 May 2018 07:42:00 +0000</pubDate>
<dc:creator>腾讯云+社区</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qcloud1001/p/8980637.html</dc:identifier>
</item>
<item>
<title>Salesforce Lightning开发学习（一）Hello World开发实践 - Ricardo.M.Lu</title>
<link>http://www.cnblogs.com/luqinghua/p/8979893.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/luqinghua/p/8979893.html</guid>
<description>&lt;p&gt;一：什么是Lightning Component framework&lt;/p&gt;
&lt;p&gt;Lightning Component framework 简称Lightning，是Salesforce封装的一个前端框架，开发lightning Component能同时兼容Salesforce网页端与手机端的显示。lightning针对classic来说，界面更加优雅，用户体验也更加友好。&lt;/p&gt;
&lt;p&gt;二：Lightning开发前的准备工作&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;注册开发org&lt;/li&gt;
&lt;li&gt;设置自己的自定义域名&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;　　  如果你已经拥有了自己开发的ORG可以跳过这一步。打开  &lt;strong&gt;&lt;a title=&quot;Salesforce开发注册&quot; href=&quot;https://developer.salesforce.com/signup?d=70130000000td6N&quot; target=&quot;_blank&quot;&gt;https://developer.salesforce.com/signup?d=70130000000td6N&lt;/a&gt; &lt;/strong&gt;链接，用邮箱注册成功后，使用 &lt;a title=&quot;Salesforce登陆&quot; href=&quot;https://login.salesforce.com/&quot; target=&quot;_blank&quot;&gt;https://login.salesforce.com&lt;/a&gt;进行登陆，即可进入Salesforce的classic界面；&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　  点击：设置→域管理→My Domain&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502140041974-1367707014.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 如果不设置自定义域名，在后面编写代码时会遇到这样的错误提示：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Lightning components require My Domain. Please contact your system administrator for more information.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果在设置了自定义域名后还能遇到这个错误提示，原因可能是Sales force在当前浏览器还没有“切换”出来，所以可以如下设置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502150237982-376835746.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;强制使用新的域名登陆系统，后面操作就正常了，然后再把强制禁用从&lt;a title=&quot;Salesforce登陆&quot; href=&quot;https://login.salesforce.com/&quot; target=&quot;_blank&quot;&gt; https://login.salesforce.com&lt;/a&gt;登陆的选择去掉。&lt;/p&gt;
&lt;p&gt;三：Hello World&lt;/p&gt;
&lt;p&gt;　　做好了Lightning开发的准备工作，接下来完成lightning的组件的Hello World开发&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502150749791-1612506854.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　切换为Lightning Experence，可以看到Lightning的操作界面，相对classic的页面要漂亮优雅很多。然后选择打开Developer Consoles,这是Salesforce官方提供的可以开发的一个环境，云平台，无需安装任何插件即可编辑代码，虽然可以使用Eclipse，Sublime之类的开发工具，不过以控制台开发可以保证大家的环境是一致的。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502151733381-523621873.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;em&gt;&lt;strong&gt;File→New→Lightning Component&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502151952860-1502875910.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &amp;lt;aura:component &amp;gt;
&lt;span&gt;2&lt;/span&gt;     &amp;lt;p&amp;gt;Hello Lightning!&amp;lt;/p&amp;gt;
&lt;span&gt;3&lt;/span&gt; &amp;lt;/aura:component&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lightning开发的每一个元素组成就是一个Component（组件），就像俄罗斯方块一样通过不同的组件拼接成一个满足要求的页面效果。其设计思想如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/hy4kyit2a/image/upload/f_auto,fl_lossy,q_70/doc/trailhead/en-uscf5c2edd2d49c4cbe50aa13c0c5fcc6b.gif&quot; alt=&quot;Salesforce lightning设计思想&quot; width=&quot;800&quot; height=&quot;600&quot;/&gt;&lt;/p&gt;
&lt;p&gt;component开发完成后，我们要预览组件效果，但是Lightning是不支持直接预览组件的，所以，我们要创建一个application（应用程序）将helloWorld组件装起来&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502153502451-25126990.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;File→New→Lightning Application，输入 MyTest_App&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &amp;lt;aura:application &amp;gt;
&lt;span&gt;2&lt;/span&gt;     &amp;lt;c:helloWorld/&amp;gt;
&lt;span&gt;3&lt;/span&gt; &amp;lt;/aura:application&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存后，点击左侧的预览按钮&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502153738536-428539362.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浏览器会打开一个页面，显示“Hello World”信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1114778/201805/1114778-20180502153859249-2023435614.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;end，也许写完Hello World后还有很多不理解的地方，比如为什么要这样去写标签，又应该怎么去设置页面的样式，不过不要急，今天的内容就到这里，欲知后事如何，且看下回&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 07:41:00 +0000</pubDate>
<dc:creator>Ricardo.M.Lu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/luqinghua/p/8979893.html</dc:identifier>
</item>
<item>
<title>【图片版】学习CSS网格布局 - 毛三十</title>
<link>http://www.cnblogs.com/ifat3/p/8980220.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ifat3/p/8980220.html</guid>
<description>&lt;h2 id=&quot;简言&quot;&gt;简言&lt;/h2&gt;
&lt;p&gt;CSS网格布局（Grid）是一套二维的页面布局系统，它的出现将完全颠覆页面布局的传统方式。传统的CSS页面布局 一直不够理想。包括table布局、浮动、定位及内联块等方式，从本质上都是Hack的方式，并且遗漏了一些重要的功能（比如：垂直居中）。Flexbox的出现部分解决了上述问题，但Flex布局是为了解决简单的一维布局，适用于页面局部布局。而Grid天然就是为了解决复杂的二维布局而出现的，适用页面的整体布局。在实际工作中，Grid和Flexbox不但不矛盾，而且还能很好的结合使用。做为WEB程序员，我们在页面布局问题上都付出过努力，也将不断探索新的方案。而Grid是第一个专门为布局问题而生的CSS模块，我们有理由对Grid充满期待。&lt;/p&gt;
&lt;p&gt;本文包括18个小节，62个实例，完整阅读需要时间20分钟以上。&lt;/p&gt;
&lt;p&gt;为了获得最佳的阅体验，可以访问如下格式的教程：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://topic.42du.cn/grid&quot;&gt;学习CSS网格&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格容器&quot;&gt;1 网格容器&lt;/h2&gt;
&lt;p&gt;将属性 &lt;code&gt;display&lt;/code&gt; 值设为 &lt;code&gt;grid&lt;/code&gt; 或 &lt;code&gt;inline-grid&lt;/code&gt; 就创建了一个网格容器，所有容器直接子结点自动成为网格项目。&lt;/p&gt;
&lt;h3 id=&quot;例1&quot;&gt;1.1 例1&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格项目按行排列，网格项目占用整个容器的宽度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/container-1.jpg&quot; alt=&quot;网格容器演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/122&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例2&quot;&gt;1.1 例2&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; inline-grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格项目按行排列，网格项目宽度由自身宽度决定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/container-2.jpg&quot; alt=&quot;网格容器演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/123&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;显示网格&quot;&gt;2 显示网格&lt;/h2&gt;
&lt;p&gt;属性&lt;code&gt;grid-template-rows&lt;/code&gt;和&lt;code&gt;grid-template-columns&lt;/code&gt;用于显示定义网格，分别用于定义行轨道和列轨道。&lt;/p&gt;
&lt;h3 id=&quot;例3&quot;&gt;2.1 例3&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;；
｝&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;grid-template-rows&lt;/code&gt;用于定义行的尺寸，即轨道尺寸。轨道尺寸可以是任何非负的长度值（px，%，em，等）&lt;/p&gt;
&lt;p&gt;网格项目1的行高是50px，网格项目2的行高是100px。&lt;/p&gt;
&lt;p&gt;因为只定义了两个行高，网格项目3和4的行高取决于其本身的高度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/explicit-1.jpg&quot; alt=&quot;显示网格演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/124&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例4&quot;&gt;2.2 例4&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;90px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;120px&lt;/span&gt;；
｝&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;类似于行的定义，属性&lt;code&gt;grid-template-columns&lt;/code&gt;用于定义列的尺寸。&lt;/p&gt;
&lt;p&gt;因为定义中只有三列，所以项目4，5，6排在新的一行; 并因为它们位于第1，2，3列的轨道上，所以其宽度等于定义中第1，2，3列轨道的宽度。&lt;/p&gt;
&lt;p&gt;网格项目的第1列，第2列，第3列的宽度分别是 90px, 50px 和 120px 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/explicit-2.jpg&quot; alt=&quot;显示网格演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/125&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例5&quot;&gt;2.3 例5&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;fr；
｝&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;单位&lt;code&gt;fr&lt;/code&gt;用于表示轨道尺寸配额，表示按配额比例分配可用空间。&lt;/p&gt;
&lt;p&gt;本例中，项目1占 1/4 宽度，项目2占 1/4 宽度，项目3占 1/2 宽度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/explicit-3.jpg&quot; alt=&quot;显示网格演示3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/126&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例6&quot;&gt;2.4 例6&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;3rem&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;25%&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;fr；
｝&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;单位&lt;code&gt;fr&lt;/code&gt;和其它长度单位混合使用时，&lt;code&gt;fr&lt;/code&gt;的计算基于其它单位分配后的剩余空间。&lt;/p&gt;
&lt;p&gt;本例中，&lt;code&gt;1fr = (容器宽度 - 3rem - 容器宽度的25%) / 3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/explicit-4.jpg&quot; alt=&quot;显示网格演示4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/127&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;轨道的最小最大尺寸设置&quot;&gt;3 轨道的最小最大尺寸设置&lt;/h2&gt;
&lt;p&gt;函数&lt;code&gt;minmax()&lt;/code&gt;用于定义轨道最小/最大边界值。&lt;/p&gt;
&lt;h3 id=&quot;例7&quot;&gt;3.1 例7&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    minmax(&lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;auto&lt;/span&gt;)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; minmax(&lt;span class=&quot;dt&quot;&gt;auto&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;50%&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;3em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数&lt;code&gt;minmax()&lt;/code&gt;接收两个参数：第一个参数表示最小轨道尺寸，第二个参数表示最大轨道尺寸。长度值可以是auto，表示轨道尺寸可以根据内容大小进行伸长或收缩。&lt;/p&gt;
&lt;p&gt;本例中，第一行最小高度设置成100px，但是最大高度设置成&lt;code&gt;auto&lt;/code&gt;，表示行高可以根据内容伸长超过100px。&lt;/p&gt;
&lt;p&gt;本例中，第一列宽度的最大值设置成50%，表示其宽度不能超过整个容器宽度的50%。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/mimmax-1.jpg&quot; alt=&quot;轨道的最小最大尺寸设置演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/128&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;重复的网格轨道&quot;&gt;4 重复的网格轨道&lt;/h2&gt;
&lt;p&gt;函数&lt;code&gt;repeat()&lt;/code&gt;用来定义重复的网格轨道，尤其适用于有多个相同项目的情况下。&lt;/p&gt;
&lt;h3 id=&quot;例8&quot;&gt;4.1 例8&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数&lt;code&gt;repeat()&lt;/code&gt;接收两个参数：第一个参数表示重复的次数，第二个参数表示轨道尺寸。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/repeat-1.jpg&quot; alt=&quot;重复的网格轨道演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/129&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例9&quot;&gt;4.2 例9&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr) &lt;span class=&quot;dt&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数&lt;code&gt;repeat()&lt;/code&gt;可以用在轨道定义列表当中。&lt;/p&gt;
&lt;p&gt;本例中，第1列和第5列的宽度是30px。函数&lt;code&gt;repeat()&lt;/code&gt;创建了中间3列，每一列宽度都是&lt;code&gt;1fr&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/repeat-2.jpg&quot; alt=&quot;重复的网格轨道演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/130&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;定义网格间隙&quot;&gt;5 定义网格间隙&lt;/h2&gt;
&lt;p&gt;属性&lt;code&gt;grid-column-gap&lt;/code&gt; 和 &lt;code&gt;grid-row-gap&lt;/code&gt;用于定义网格间隙。&lt;/p&gt;
&lt;p&gt;网格间隙只创建在行列之间，项目与边界之间无间隙。&lt;/p&gt;
&lt;h3 id=&quot;例10&quot;&gt;5.1 例10&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-gap:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-gap:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;5rem&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;间隙尺寸可以是任何非负的长度值（px，%，em等）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/gap-1.jpg&quot; alt=&quot;定义网格间隙演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/131&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例11&quot;&gt;5.2 例11&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-gap:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;grid-gap&lt;/code&gt;是&lt;code&gt;grid-row-gap&lt;/code&gt;和&lt;code&gt;grid-column-gap&lt;/code&gt;的简写形式。&lt;/p&gt;
&lt;p&gt;第一个值表示行间隙，第二个值表示列间隙。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/gap-2.jpg&quot; alt=&quot;定义网格间隙演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/132&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例12&quot;&gt;5.3 例12&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-gap:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2rem&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如只有一个值，则其即表示行间隙，也表示列间隙。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/gap-3.jpg&quot; alt=&quot;定义网格间隙演示3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/133&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用网格线编号定位项目&quot;&gt;6 用网格线编号定位项目&lt;/h2&gt;
&lt;p&gt;网格线本质上是用来表示网格轨道的开始和结束。&lt;/p&gt;
&lt;p&gt;每一条网格线编号都以1开始，以1为步长向前编号，其中包括行列两组网格线。&lt;/p&gt;
&lt;h3 id=&quot;例13&quot;&gt;6.1 例13&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个3行2列的网格，即在行上有4条网格线，在列上有3条网格线。项目1利用网格线编号定位在第2行第2列的位置上。&lt;/p&gt;
&lt;p&gt;本例中，项目只跨越一行一列，则&lt;code&gt;grid-row-end&lt;/code&gt;和&lt;code&gt;grid-column-end&lt;/code&gt;的定义可以省略。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/line-number-1.jpg&quot; alt=&quot;用网格线编号定位项目演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/134&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例14&quot;&gt;6.2 例14&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;grid-row&lt;/code&gt; 是 &lt;code&gt;grid-row-start&lt;/code&gt; 和 &lt;code&gt;grid-row-end&lt;/code&gt;的简写形式。&lt;/p&gt;
&lt;p&gt;属性&lt;code&gt;grid-column&lt;/code&gt; 是 &lt;code&gt;grid-column-start&lt;/code&gt; 和 &lt;code&gt;grid-column-end&lt;/code&gt;的简写形式。&lt;/p&gt;
&lt;p&gt;如果只指定一个值，它表示 &lt;code&gt;grid-row/column-start&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果两个值都指定，第一个表示 &lt;code&gt;grid-row/column-start&lt;/code&gt; ，第二个值表示&lt;code&gt;grid-row/column-end&lt;/code&gt;。而且你必须用斜杠（/）分隔这两个值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/line-number-2.jpg&quot; alt=&quot;用网格线编号定位项目演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/135&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例15&quot;&gt;6.3 例15&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-area:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;grid-area&lt;/code&gt; 是 &lt;code&gt;grid-row-start&lt;/code&gt;, &lt;code&gt;grid-column-start&lt;/code&gt;, &lt;code&gt;grid-row-end&lt;/code&gt; 和 &lt;code&gt;grid-column-end&lt;/code&gt;的简写形式。&lt;/p&gt;
&lt;p&gt;如果四个值都指定，则第一个表示 &lt;code&gt;grid-row-start&lt;/code&gt;, 第二个表示 &lt;code&gt;grid-column-start&lt;/code&gt;, 第三个表示 &lt;code&gt;grid-row-end&lt;/code&gt; ,第四个表示 &lt;code&gt;grid-column-end&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/line-number-3.jpg&quot; alt=&quot;用网格线编号定位项目演示3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/136&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格项目跨越行列&quot;&gt;7 网格项目跨越行列&lt;/h2&gt;
&lt;p&gt;网格项目默认都占用一行和一列，但可以使用前一节中定位项目的属性来指定项目跨越多行或多列。&lt;/p&gt;
&lt;h3 id=&quot;例16&quot;&gt;7.1 例16&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt;   &lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过&lt;code&gt;grid-column-start&lt;/code&gt;和&lt;code&gt;grid-column-end&lt;/code&gt;属性值的设置，使该网格项目跨越多列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/span-1.jpg&quot; alt=&quot;网格项目跨越行列演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/137&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例17&quot;&gt;7.2 例17&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt;   &lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过&lt;code&gt;grid-row-start&lt;/code&gt;和&lt;code&gt;grid-row-end&lt;/code&gt;属性值的设置，使该网格项目跨越多行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/span-2.jpg&quot; alt=&quot;网格项目跨越行列演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/138&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例18&quot;&gt;7.3 例18&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;简写属性 &lt;code&gt;grid-row&lt;/code&gt; 和 &lt;code&gt;grid-column&lt;/code&gt; 即能用来定位项目，也能用来使项目跨越多个行列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/span-3.jpg&quot; alt=&quot;网格项目跨越行列演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/139&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例19&quot;&gt;7.4 例19&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / span &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; span &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键字 &lt;code&gt;span&lt;/code&gt; 用来指定跨越行或列的数量。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/span-4.jpg&quot; alt=&quot;网格项目跨越行列演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/140&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格线命名&quot;&gt;8 网格线命名&lt;/h2&gt;
&lt;p&gt;当利用属性&lt;code&gt;grid-template-rows&lt;/code&gt; 和 &lt;code&gt;grid-template-columns&lt;/code&gt;定义网格时，可以同时定义网格线的名称。网格线名称可以用于定位网格项目。&lt;/p&gt;
&lt;h3 id=&quot;例20&quot;&gt;8.1 例20&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    [row-1-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [row-2-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [row-2-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; [col-1-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-2-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-3-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-3-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用属性&lt;code&gt;grid-template-rows&lt;/code&gt; 和 &lt;code&gt;grid-template-columns&lt;/code&gt;定义网格，同时定义网格线名称。&lt;/p&gt;
&lt;p&gt;为避免混淆，网格线名称应避免使用规范中的关键字（&lt;code&gt;span&lt;/code&gt;等）。&lt;/p&gt;
&lt;p&gt;定义网格线名称的方法是要将其放在中括号内（&lt;code&gt;[name-of-line]&lt;/code&gt;），并要和网格轨道相对应。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/line-name-1.jpg&quot; alt=&quot;网格线命名演示1&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例21&quot;&gt;8.2 例21&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    [row-start row-1-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [row-1-end row-2-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [row-2-end row-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; [col-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-2-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-3-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;｝&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以给同一网格线定义多个名称，方法就是在中括号内用空格将多个名称分开。&lt;/p&gt;
&lt;p&gt;每一个网格线名都可以被引用，以用来定位网格项目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/line-name-2.jpg&quot; alt=&quot;网格线命名演示2&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;用网格线名定位项目&quot;&gt;9 用网格线名定位项目&lt;/h2&gt;
&lt;p&gt;利用命名的网格线，可以很方便地进行项目定位。&lt;/p&gt;
&lt;h3 id=&quot;例22&quot;&gt;9.1 例22&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt;    row-2-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt;      row-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; col-2-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt;   col-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;引用网格线名称不用加中括号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/p-by-name-1.jpg&quot; alt=&quot;用网格线名定位项目演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/141&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例23&quot;&gt;9.2 例23&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt;    row-2-start / row-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; col-2-start / col-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;简写属性&lt;code&gt;grid-row&lt;/code&gt; 和 &lt;code&gt;grid-column&lt;/code&gt;也可以利用网格线名称来定位项目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/p-by-name-2.jpg&quot; alt=&quot;用网格线名定位项目演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/142&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用同名网格线命名和定位项目&quot;&gt;10 用同名网格线命名和定位项目&lt;/h2&gt;
&lt;p&gt;函数&lt;code&gt;repeat()&lt;/code&gt;可以定义同名网格线。这节省了给每条网格都命名的时间。&lt;/p&gt;
&lt;h3 id=&quot;例24&quot;&gt;10.1 例24&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;, [row-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [row-end])&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;, [col-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [col-end])&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数&lt;code&gt;repeat()&lt;/code&gt;可以用来定义同名网格线。 这样多个网格线拥有相同的名字。&lt;/p&gt;
&lt;p&gt;同名网格线会被分配一个位置编号，做为其唯一标识。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/p-same-name-1.jpg&quot; alt=&quot;用同名网格线命名和定位项目演示1&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例25&quot;&gt;10.2 例25&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt;    row-start &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; / row-end &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; col-start / col-start &lt;span class=&quot;dt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用同名网格线来定位项目时，应注意在网格线名称和编号之间有一个空格。&lt;/p&gt;
&lt;p&gt;本例中，项目1的行定位开始于第2条名称是&lt;code&gt;row-start&lt;/code&gt;的网格线，结束于第3条名称是&lt;code&gt;row-end&lt;/code&gt;的网格线；列定位开始于第1条名称是&lt;code&gt;col-start&lt;/code&gt;的网格线，结束于第3条名称是&lt;code&gt;col-start&lt;/code&gt;的网格线。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/p-same-name-2.jpg&quot; alt=&quot;用同名网格线命名和定位项目演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/143&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用网格区域命名和定位项目&quot;&gt;11 用网格区域命名和定位项目&lt;/h2&gt;
&lt;p&gt;如同网格线命名，可以用属性&lt;code&gt;grid-template-areas&lt;/code&gt;给网格区域命名。网格区域名称可以用来定位网格项目。&lt;/p&gt;
&lt;h3 id=&quot;例26&quot;&gt;11.1 例26&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-areas:&lt;/span&gt;   &lt;span class=&quot;st&quot;&gt;&quot;header header&quot;&lt;/span&gt;
                        &lt;span class=&quot;st&quot;&gt;&quot;content sidebar&quot;&lt;/span&gt;
                        &lt;span class=&quot;st&quot;&gt;&quot;footer footer&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;150px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一组区域名称要放在单引号或双引号内，每一个名称之间以空格分隔。&lt;/p&gt;
&lt;p&gt;每一组名称定义一行，每一个名称定义一列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/area-1.jpg&quot; alt=&quot;用网格区域命名和定位项目演示1&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例27&quot;&gt;11.2 例27&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;header &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt; header&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt; header&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; header&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt; header&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格区域名称可以用在属性&lt;code&gt;grid-row-start&lt;/code&gt;, &lt;code&gt;grid-row-end&lt;/code&gt;, &lt;code&gt;grid-column-start&lt;/code&gt;, 和 &lt;code&gt;grid-column-end&lt;/code&gt;的值中，用来定位项目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/area-2.jpg&quot; alt=&quot;用网格区域命名和定位项目演示2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例28&quot;&gt;11.3 例28&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;footer &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row:&lt;/span&gt; footer&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column:&lt;/span&gt; footer&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格区域名称也可以用于简写属性&lt;code&gt;grid-row&lt;/code&gt; 和 &lt;code&gt;grid-column&lt;/code&gt;的值中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/area-3.jpg&quot; alt=&quot;用网格区域命名和定位项目演示3&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例29&quot;&gt;11.4 例29&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;aside &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-area:&lt;/span&gt; sidebar&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格区域名称也可以用于简写属性&lt;code&gt;grid-area&lt;/code&gt;的值中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/area-4.jpg&quot; alt=&quot;用网格区域命名和定位项目演示4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/144&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;隐式网格&quot;&gt;12 隐式网格&lt;/h2&gt;
&lt;p&gt;隐式网格用来在显式网格之外定位项目。有时在显示网格中没有足够的空间，或者是要在显示网格之外定位项目就要用到隐式网格。这时可以把这些项目放置在隐式网格中。&lt;/p&gt;
&lt;p&gt;隐式网格可以通过属性 &lt;code&gt;grid-auto-rows&lt;/code&gt;, &lt;code&gt;grid-auto-columns&lt;/code&gt;, 和 &lt;code&gt;grid-auto-flow&lt;/code&gt; 来定义。&lt;/p&gt;
&lt;h3 id=&quot;例30&quot;&gt;12.1 例30&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;70px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-auto-rows:&lt;/span&gt;        &lt;span class=&quot;dt&quot;&gt;140px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，只定一个行轨道，因此项目 1 和 2 高 70px 。&lt;/p&gt;
&lt;p&gt;第2行轨道有隐式网格自动创建并为项目 3 和 4 分配了空间。 属性&lt;code&gt;grid-auto-rows&lt;/code&gt; 定义了隐式网格的行轨道尺寸，即项目3和4的高度是 140px 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-1.jpg&quot; alt=&quot;隐式网格演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/145&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例31&quot;&gt;12.2 例31&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-auto-flow:&lt;/span&gt; row&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;缺省的网格布局方向是行的方向（&lt;code&gt;row&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-2.jpg&quot; alt=&quot;隐式网格演示2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例32&quot;&gt;12.3 例32&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-auto-flow:&lt;/span&gt; column&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;网格的布局方向可以定义为列的方向（column）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-3.jpg&quot; alt=&quot;隐式网格演示3&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例33&quot;&gt;12.4 例33&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-auto-flow:&lt;/span&gt;        column&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-auto-columns:&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，我们只定义了两个列轨道的尺寸30px 和 60px。&lt;/p&gt;
&lt;p&gt;隐式网格中自动创建其它列并给项目3，4，5分配空间；分配的空间尺寸是通过属性 &lt;code&gt;grid-auto-columns&lt;/code&gt;定义的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-4.jpg&quot; alt=&quot;隐式网格演示4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/146&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;隐式命名的网格区域&quot;&gt;13 隐式命名的网格区域&lt;/h2&gt;
&lt;p&gt;网格线名称可以任意指定，但分配以 &lt;code&gt;-start&lt;/code&gt; 和 &lt;code&gt;-end&lt;/code&gt; 结尾的名字有额外的益处，这样隐式地创建了具名网格区域，该名称可以用于项目定位。&lt;/p&gt;
&lt;h3 id=&quot;例34&quot;&gt;13.1 例34&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    [outer-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [inner-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [inner-end] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [outer-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; [outer-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [inner-start] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [inner-end] &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr [outer-end]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，行和列都有名为&lt;code&gt;inner-start&lt;/code&gt; 和 &lt;code&gt;inner-end&lt;/code&gt;的网格线，它们隐式地给网格区域分派了名称（&lt;code&gt;inner&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;item1 &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-area:&lt;/span&gt; inner&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样我们就能够直接使用网格区域名来定位，而不需要再用网格线来定位项目了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-area-1.jpg&quot; alt=&quot;隐式命名的网格区域演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/147&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;隐式命名的网格线&quot;&gt;14 隐式命名的网格线&lt;/h2&gt;
&lt;p&gt;隐式命名网格线和隐式命名的网格区域的工作原理刚好相反。&lt;/p&gt;
&lt;h3 id=&quot;例35&quot;&gt;14.1 例35&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-areas:&lt;/span&gt;   &lt;span class=&quot;st&quot;&gt;&quot;header header&quot;&lt;/span&gt;
                        &lt;span class=&quot;st&quot;&gt;&quot;content sidebar&quot;&lt;/span&gt;
                        &lt;span class=&quot;st&quot;&gt;&quot;footer footer&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt;    &lt;span class=&quot;dt&quot;&gt;80px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义网格区域时隐式的命名了网格线的名称。这些网格线的名称是基于区域名加上&lt;code&gt;-start&lt;/code&gt; 或 &lt;code&gt;-end&lt;/code&gt;后缀组成的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-line-1.jpg&quot; alt=&quot;隐式命名的网格线演示1&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;例36&quot;&gt;14.2 例36&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;item1 &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt;    header-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt;      content-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; footer-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt;   sidebar-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，header是通过隐式网格线名称进行定位的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/implicit-line-2.jpg&quot; alt=&quot;隐式命名的网格线演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/148&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;层叠网格项目&quot;&gt;15 层叠网格项目&lt;/h2&gt;
&lt;p&gt;通过项目定位可以使多个项目层叠在一起，属性&lt;code&gt;z-index&lt;/code&gt;可以改变层叠项目的层次。&lt;/p&gt;
&lt;h3 id=&quot;例37&quot;&gt;15.1 例37&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item-1&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;.item-2&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt;  &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt; span &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item-1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;z-index:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item-2&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，项目1 和 2 行定位开始于第1条行网格线，并跨越两列。&lt;/p&gt;
&lt;p&gt;两个项目都是用网格线编号进行定位。项目1起始于第1条列网格线，项目2起始于第2条列网格线，这使得两个项目在第一行中间列发生层叠。&lt;/p&gt;
&lt;p&gt;缺省情况下，项目2将层叠于项目1之上；然而，给项目1设置属性&lt;code&gt;z-index: 1&lt;/code&gt;就使得项目1层叠于项目2之上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/layer-1.jpg&quot; alt=&quot;层叠网格项目演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/149&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例38&quot;&gt;15.2 例38&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.overlay&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-start:&lt;/span&gt;    header-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-row-end:&lt;/span&gt;      content-end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-start:&lt;/span&gt; content-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-column-end:&lt;/span&gt;   sidebar-start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;z-index:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本例中，利用在 &lt;code&gt;grid-template-areas&lt;/code&gt; 定义中的隐式网格线名称，定位了一个网格项目（&lt;code&gt;overlay&lt;/code&gt;），并将层叠于上层。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/layer-2.jpg&quot; alt=&quot;层叠网格项目演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/150&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格项目的对齐方式&quot;&gt;16 网格项目的对齐方式&lt;/h2&gt;
&lt;p&gt;CSS的 &lt;a href=&quot;https://drafts.csswg.org/css-align/&quot;&gt;盒模型对齐模块&lt;/a&gt; 补充了CSS网格的内容，网格项目可以按行或列的轴线方向实现多种对齐方式。&lt;/p&gt;
&lt;p&gt;属性&lt;code&gt;justify-items&lt;/code&gt; 和 &lt;code&gt;justify-self&lt;/code&gt; 以行轴为参照对齐项目，属性&lt;code&gt;align-items&lt;/code&gt; 和 &lt;code&gt;align-self&lt;/code&gt; 以列轴为参照对齐项目。&lt;/p&gt;
&lt;p&gt;属性&lt;code&gt;justify-items&lt;/code&gt; 和 &lt;code&gt;align-items&lt;/code&gt; 是网格容器的属性，并支持如下这些值：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;auto&lt;/li&gt;
&lt;li&gt;normal&lt;/li&gt;
&lt;li&gt;start&lt;/li&gt;
&lt;li&gt;end&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;stretch&lt;/li&gt;
&lt;li&gt;baseline&lt;/li&gt;
&lt;li&gt;first baseline&lt;/li&gt;
&lt;li&gt;last baseline&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;例39&quot;&gt;16.1 例39&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;80px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr &lt;span class=&quot;dt&quot;&gt;1&lt;/span&gt;fr&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-areas:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;content content&quot;&lt;/span&gt;
                       &lt;span class=&quot;st&quot;&gt;&quot;content content&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;grid-area:&lt;/span&gt; content &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-items:&lt;/span&gt; start
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行的轴线起点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-1.jpg&quot; alt=&quot;网格项目的对齐方式演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/151&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例40&quot;&gt;16.2 例40&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-items:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行的轴线中点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-2.jpg&quot; alt=&quot;网格项目的对齐方式演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/152&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例41&quot;&gt;16.3 例41&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-items:&lt;/span&gt; end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行的轴线终点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-3.jpg&quot; alt=&quot;网格项目的对齐方式演示3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/153&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例42&quot;&gt;16.4 例42&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-items:&lt;/span&gt; stretch&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行的轴线方向延伸并填满整个区域。&lt;code&gt;stretch&lt;/code&gt;是缺省值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-4.jpg&quot; alt=&quot;网格项目的对齐方式演示4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/154&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例43&quot;&gt;16.5 例43&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-items:&lt;/span&gt; start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列的轴线起点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-5.jpg&quot; alt=&quot;网格项目的对齐方式演示5&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/155&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例44&quot;&gt;16.6 例44&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-items:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列的轴线中点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-6.jpg&quot; alt=&quot;网格项目的对齐方式演示6&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/156&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例45&quot;&gt;16.7 例45&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-items:&lt;/span&gt; end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列的轴线终点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-7.jpg&quot; alt=&quot;网格项目的对齐方式演示7&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/157&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例46&quot;&gt;16.8 例46&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid  &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-items:&lt;/span&gt; stretch&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列的轴线方向延伸并填满整个区域。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-8.jpg&quot; alt=&quot;网格项目的对齐方式演示8&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/158&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例47&quot;&gt;16.9 例47&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;grid &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-items:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-items:&lt;/span&gt;   &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;项目定位于行轴和列轴线的中间位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-9.jpg&quot; alt=&quot;网格项目的对齐方式演示9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/159&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格项目的对齐方式2&quot;&gt;17 网格项目的对齐方式2&lt;/h2&gt;
&lt;p&gt;项目可以用属性align-self 和 justify-self定义自己的对齐方式，并支持如下这些属性值：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;auto&lt;/li&gt;
&lt;li&gt;normal&lt;/li&gt;
&lt;li&gt;start&lt;/li&gt;
&lt;li&gt;end&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;stretch&lt;/li&gt;
&lt;li&gt;baseline&lt;/li&gt;
&lt;li&gt;first baseline&lt;/li&gt;
&lt;li&gt;last baseline&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;例48&quot;&gt;17.1 例48&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;justify-self:&lt;/span&gt; start &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item2&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;justify-self:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;justify-self:&lt;/span&gt; end &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;justify-self&lt;/code&gt; 在行的轴线方向定义对齐方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-10.jpg&quot; alt=&quot;网格项目的对齐方式演示10&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/160&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例49&quot;&gt;17.2 例49&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;align-self:&lt;/span&gt; start &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item2&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;align-self:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;fl&quot;&gt;.item3&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;align-self:&lt;/span&gt; end &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;属性&lt;code&gt;align-self&lt;/code&gt; 在列的轴线方向定义对齐方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-11.jpg&quot; alt=&quot;网格项目的对齐方式演示11&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/161&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例50&quot;&gt;17.3 例50&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.item1&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-self:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;
    align-self:   &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;项目1定位在行的轴线和列的轴线的中间位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-i-12.jpg&quot; alt=&quot;网格项目的对齐方式演示12&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/162&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网格轨道的对齐方式&quot;&gt;18 网格轨道的对齐方式&lt;/h2&gt;
&lt;p&gt;在网格容器中，网格轨道延轴线方向有多种对齐方式。&lt;/p&gt;
&lt;p&gt;属性&lt;code&gt;align-content&lt;/code&gt;用于定义网格轨道延着行的轴线的对齐方式，而属性&lt;code&gt;justify-content&lt;/code&gt;用于定义网格轨道沿着列的轴线的对齐方式。并分别支持如下属性：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;normal&lt;/li&gt;
&lt;li&gt;start&lt;/li&gt;
&lt;li&gt;end&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;stretch&lt;/li&gt;
&lt;li&gt;space-around&lt;/li&gt;
&lt;li&gt;space-between&lt;/li&gt;
&lt;li&gt;space-evenly&lt;/li&gt;
&lt;li&gt;baseline&lt;/li&gt;
&lt;li&gt;first baseline&lt;/li&gt;
&lt;li&gt;last baseline&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;例51&quot;&gt;18.1 例51&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-columns:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;45px&lt;/span&gt;)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-template-rows:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;repeat&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;45px&lt;/span&gt;)&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;grid-gap:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0.5em&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列的轨道在行的轴线起点处对齐。&lt;code&gt;start&lt;/code&gt; 是缺省值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-1.jpg&quot; alt=&quot;网格轨道的对齐方式演示1&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/163&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例52&quot;&gt;18.2 例52&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列的轨道在行的轴线终点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-2.jpg&quot; alt=&quot;网格轨道的对齐方式演示2&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/164&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例53&quot;&gt;18.3 例53&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列的轨道在行的轴线中间处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-3.jpg&quot; alt=&quot;网格轨道的对齐方式演示3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/165&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例54&quot;&gt;18.4 例54&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; space-around&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在每一列的两侧平均分配额外空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-4.jpg&quot; alt=&quot;网格轨道的对齐方式演示4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/166&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例55&quot;&gt;18.5 例55&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; space-between&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列与列之间平均分配额外的空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-5.jpg&quot; alt=&quot;网格轨道的对齐方式演示5&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/167&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例56&quot;&gt;18.6 例56&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;justify-content:&lt;/span&gt; space-evenly&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在列与列之间及列与边界之间平均分配额外空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-6.jpg&quot; alt=&quot;网格轨道的对齐方式演示6&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/168&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例57&quot;&gt;18.7 例57&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; start&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;行的轨道在列的轴线起点处对齐，属性&lt;code&gt;start&lt;/code&gt;是缺省值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-7.jpg&quot; alt=&quot;网格轨道的对齐方式演示7&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/169&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例58&quot;&gt;18.8 例58&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; end&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;行的轨道在列的轴线终点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-8.jpg&quot; alt=&quot;网格轨道的对齐方式演示8&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/170&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例59&quot;&gt;18.9 例59&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;行的轨道在列的轴线中点处对齐。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-9.jpg&quot; alt=&quot;网格轨道的对齐方式演示9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/171&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例60&quot;&gt;18.10 例60&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; space-around&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每一行的两侧平均分配额外空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-10.jpg&quot; alt=&quot;网格轨道的对齐方式演示10&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/172&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例61&quot;&gt;18.11 例61&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; space-between&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行与行之间平均分配额外空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-11.jpg&quot; alt=&quot;网格轨道的对齐方式演示11&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/173&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;例62&quot;&gt;18.12 例62&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;&lt;span class=&quot;fl&quot;&gt;.grid&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;align-content:&lt;/span&gt; space-evenly&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在行与行之间及行与边界之间平均分配额外空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.42du.cn/up/grid/align-t-12.jpg&quot; alt=&quot;网格轨道的对齐方式演示12&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.42du.cn/run/174&quot;&gt;演示程序&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;
&lt;p&gt;本教程相对全面地介绍了网格的相关内容，但这并不是一个完整的技术文档。想更全面的学习相关内容，推荐访问 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout&quot;&gt;Mozilla开发者网络&lt;/a&gt; 和 &lt;a href=&quot;https://www.w3.org/TR/css3-grid-layout/&quot;&gt;W3C&lt;/a&gt; 的网格文档。&lt;/p&gt;
&lt;p&gt;由于能力有限，翻译中难免错误较多，还请大家多多谅解！&lt;/p&gt;
&lt;p&gt;十分感谢原文作者&lt;a href=&quot;https://twitter.com/jonsuh&quot;&gt;Jonathan Suh&lt;/a&gt;在本文排版设计，示例制作，文字编辑等方面卓越的工作。&lt;/p&gt;
&lt;p&gt;为了获得最佳的阅体验，请访问如下排版的教程：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://topic.42du.cn/grid&quot;&gt;学习CSS网格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://learncssgrid.com/&quot;&gt;英文原版&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 06:47:00 +0000</pubDate>
<dc:creator>毛三十</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ifat3/p/8980220.html</dc:identifier>
</item>
<item>
<title>【省带宽、压成本专题】深入解析 H.265 编码模式，带你了解 Apple 全面推进 H.265 的原因 - 又拍云</title>
<link>http://www.cnblogs.com/upyun/p/8980205.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/upyun/p/8980205.html</guid>
<description>&lt;p&gt;过去几年，又拍云一直在点播、直播等视频应用方面潜心钻研，取得了不俗的成果。我们结合点播、直播、短视频等业务中的用户场景，推出了“省带宽、压成本”系列文章，从编码技术、网络架构等角度出发，结合又拍云的产品成果，向大家介绍节省流量，降低带宽成本的妙招。&lt;/p&gt;
&lt;p&gt;本文《深入解析 H.265 编码模式，带你了解 Apple 全面推进 H.265 的原因》，是“省带宽、压成本”系列文章的第2篇。从视频网站所遇到的问题出发，深入解析 H.265 视频编码。&lt;/p&gt;
&lt;p&gt;往期回顾：&lt;/p&gt;
&lt;p&gt;第一篇：《&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/292/5.html&quot; target=&quot;_blank&quot;&gt;节省50%以上的流量成本，从产品架构看PCDN的节流能力&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;第二篇：《深入解析 H.265 编码模式，带你了解 Apple 全面推进 H.265 的原因》&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;今天我们聊聊视频编码。视频文件亘古以来存在一个矛盾：高清画质和视频体积的冲突，相同编码标准下，视频更高清，视频体积更大。因此，应用更先进的视频编码标准，降低视频体积，可以大幅降低网站的流量消耗。&lt;/p&gt;
&lt;p&gt;目前应用最广泛的视频编码标准是 H.264。H.264 在低码率下的视频画质十分模糊；同时 H.264 对 2K、4K 视频的支持较差：以 H.264 的压缩率，一部4K电影的体积会超过 100G，甚至可以达到 150G、200G，这对想要抢占高清片源的视频平台来说几乎是致命的打击。&lt;/p&gt;
&lt;p&gt;既要高清，又要视频体积小——这靠 H.264 明显是不可能了，而新的编码格式 H.265 就能满足这个要求。同样是 110 分钟的 4K 视频，用 H.265 编码进行压缩，体积可以降低 50%，相较于 H.264 的 100G-200G 而言，每一部 4K 视频都能节约大量的流量带宽成本。&lt;/p&gt;
&lt;p&gt;H.265 是国际上公认的下一代视频编码标准则，国内外对 H.265 的支持越来越多，国内不仅有爱奇艺、搜狐、腾讯等头部视频网站开始支持 H.265 视频点播，各大字幕组也开始尝试使用 H.265 标准压制视频。&lt;/p&gt;
&lt;h2 id=&quot;sectionh265&quot;&gt;H.265：新一代视频编码技术&lt;/h2&gt;
&lt;p&gt;H.265 视频编码技术是于 2013 年定稿发布了下一代视频压缩标准，命名为 HEVC(High Efficiency Video Coding)，分别被 ITU-T 和 ISO/IEC 采纳成为国际标准，即 H.265 视频压缩标准。H.265 在现有的视频编码标准 H.264 基础上，进一步提高压缩效率、提高鲁棒性（Robustness 抗变换性）和错误恢复能力、减少实时的时延、减少信道获取时间和随机接入时延、降低复杂度，以达到最优化设置。&lt;/p&gt;
&lt;p&gt;H.265 能在有限带宽下传输更高质量的网络视频，只需 H.264 编码的一半带宽即可传输相同质量的视频。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 视频压缩率更出众，与 H.264 相比压缩效率提升 1 倍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;H.265 全新的编码方式有效提升了视频压缩率，仅需原先的一半带宽即可播放相同质量的视频。众所周知，视频编码的码率是可以灵活控制的，以相同的视频质量为基准，H.265 编码技术相比 H.264 编码技术能够在视频容量减少 39% 到 74%，并且还能获得比 H.264 视频更好的信噪比（PSNR）效果。——拿“体积比你小，质量比你好”来形容 H.265 相比 H.264 的巨大优势，并没有显得过分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/80097-a1f50aeb652bb81a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;△ H.264、H.265 压缩率对比&quot;/&gt;&lt;/p&gt;
&lt;p&gt;△ H.264、H.265 压缩率对比&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.视频传输流量省 50%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IEEE 出版的 Circuits and Systems for Video Technology，其中有 Comparison of the Coding Efﬁciency of Video Coding Standards—Including High Efﬁciency Video Coding 一文，以 9 段影片进行测试 H.265 的编码表现，所得到的结果相当另人满意，即便在表现最差的样本中，节省的流量接近 30%，平均起来也达到 49.3% 的佳绩。&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/80097-2803f3dc998a909c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;△ H.265 与 H.264 流量比较&quot;/&gt;&lt;/p&gt;
&lt;p&gt;△ H.265 与 H.264 流量比较&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.支持蓝光 4K&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;H.265 编码技术有着惊人的压缩率，加上灵活的宏块像素技术，这对于 Ultra HD 4K/8K 超高清分辨率极为重要，2015 年春季正式出台的蓝光 4K（3840×2160）标准采用了 H.265/HEVC 编码标准，H.265 编码技术能够大幅降低蓝光 4K 光盘的容量需求。&lt;/p&gt;
&lt;h2 id=&quot;sectionh265-1&quot;&gt;H.265 压缩原理&lt;/h2&gt;
&lt;p&gt;更大的宏块和变换块：相对于 H.264 的 4×4、8×8、16×16 宏块类型，H.265 引入了 32×32、64×64 甚至 128×128 的宏块，目的在于减少高清数字视频的宏块个数，减少用于描述宏块内容的参数信息，同时整形变换块大小也相应扩大，用于减少 H.264 中变换相邻块问的相似系数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/80097-67b401945b74bdae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;△ H.264 与 H.265 对比图 &quot;/&gt;&lt;/p&gt;
&lt;p&gt;△ H.264 与 H.265 对比图&lt;/p&gt;

&lt;p&gt;新的 MV（运动矢量）预测方式：区别于 H.264 基于空间域的运动矢量预测方式，H.265 扩充更加多的方向进行帧内预测，同时将预测块的集合由原来的空间域扩展到时间域及空时混合域，通过率失真准则计算后选择最佳的预测块。使用该方法，在基本模式下测试，在与H.264 相同质量的情况下，得到平均为 6.1% 的压缩增益，复杂图像的压缩增益甚至能提高到 20%。&lt;/p&gt;
&lt;p&gt;并行化设计：当前芯片架构已经从单核性能逐渐往多核并行方向发展，H.265 引入了Entropyslice、WPP 等并行运算思路，使用并行度更高的编码算法，更有利于 H.265 在GPU/DSP/FPGA/ASIC 等并行化程度非常高的 CPU 中快速高效的实现产业化。&lt;/p&gt;
&lt;p&gt;Tile 划分机制：它使得以往的 slice、帧或 GOP 为单位的粗粒度数据并行机制更加适合于同构多核处理器上的并行实现。Dependentslice 和 WPP 机制解决了以往 H.264 等编码技术中熵编码环节无法并行实现的问题，使得整个编解码过程中 DCT、运动估计、运动补偿、熵编码等任务模块的划分更加均衡，显著提高并行加速比。&lt;/p&gt;
&lt;h2 id=&quot;sectionh265-2&quot;&gt;开启 H.265 自适应&lt;/h2&gt;
&lt;p&gt;与 H.264 相比，H.265 不仅更符合未来高清影片发展的趋势，而且同等画质下可以为带来更高效的视频压缩效率，有效节省流量消耗。&lt;/p&gt;
&lt;p&gt;为了让用户使用到更先进的产品，又拍云一直在 H.265 的实用性与便捷性方面钻研，2017 年 5 月便推出了 H.265 视频自适应解决方案。又拍云 H.265 视频自适应方案集成了视频上传、视频存储、视频编码（转码）、视频分发适配、视频解码等功能。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;视频上传转码：用户将 H.264 编码视频上传到又拍云的服务器，又拍云将其同步转为 H.265 编码的视频；&lt;/li&gt;
&lt;li&gt;视频异步转码：针对已存储在又拍云服务器上的 H.264 编码的视频，通过又拍云异步转码服务，可转为 H.265 视频存储，同时保留 H.264 视频副本；&lt;/li&gt;
&lt;li&gt;H.265自适应：又拍云 CDN 网络支持 H.265自适应功能，能够根据客户终端播放器发起的 UA 请求头 （ Accept-Encoding: h265 ），智能识别终端播放器是否支持H.265，并判断当前请求的资源是否存在 H.265 编码的文件。如果播放器支持且拥有 H.265 编码的视频，则返回 H.265 视频，否则返回原始视频，从而实现 CDN 平台的 H.265 智能适配。H.265 自适应支持又拍云存储和又拍云 CDN 两种使用场景。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/292/1.html&quot; target=&quot;_blank&quot;&gt;【省带宽、压成本专题】从产品架构来看PCDN如何节流50%​&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/155/2.html&quot; target=&quot;_blank&quot;&gt;深度解析 H.265 视频解决方案&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 06:46:00 +0000</pubDate>
<dc:creator>又拍云</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/upyun/p/8980205.html</dc:identifier>
</item>
<item>
<title>C# PDF Page操作——设置页面切换按钮 - E-iceblue</title>
<link>http://www.cnblogs.com/Yesi/p/8979938.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Yesi/p/8979938.html</guid>
<description>&lt;p&gt;在以下示例中，将介绍在PDF文档页面设置页面切换按钮的方法。示例中将页面切换按钮的添加分为了两种情况，一种是设置按钮跳转到首页、下页、上页或者最后一页，另一种是设置按钮跳转到指定页面。两种方法适应不同的程序设计需要，可自行选择合适的添加方法。&lt;/p&gt;

&lt;p&gt;这里的代码示例需要使用类库&lt;a href=&quot;https://www.e-iceblue.cn/Introduce/Spire-PDF-NET.html&quot;&gt;Spire.PDF for .NET&lt;/a&gt;，版本4.0 。在使用该类库时，在项目程序中引用Spire.Pdf.dll即可（dll文件在安装路径下的Bin文件中获取）。&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/706090/201805/706090-20180502140629343-418403655.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;1.跳转至特定页（首页、下一页、上一页、最后一页）&lt;/h2&gt;
&lt;p&gt;【C#】&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Actions;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Fields;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Graphics;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Drawing;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; ButtonToAppointedPage_PDF
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实例化PdfDocument类，加载PDF测试F文档&lt;/span&gt;
            PdfDocument doc = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfDocument();
            doc.LoadFromFile(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sample.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;允许添加Form&lt;/span&gt;
            doc.AllowCreateForm = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取文档最后一页&lt;/span&gt;
            PdfPageBase lastPage = doc.Pages[doc.Pages.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;];

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在页面指定位置添加指定大小的按钮&lt;/span&gt;
            PdfButtonField button = &lt;span&gt;new&lt;/span&gt; PdfButtonField(lastPage, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Click To Back &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            button.Bounds &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; RectangleF(lastPage.ActualSize.Width - &lt;span&gt;150&lt;/span&gt;, lastPage.ActualSize.Height - &lt;span&gt;400&lt;/span&gt;, &lt;span&gt;60&lt;/span&gt;, &lt;span&gt;20&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮边框颜色&lt;/span&gt;
            button.BorderStyle =&lt;span&gt; PdfBorderStyle.Solid;
            button.BorderColor &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfRGBColor(Color.White);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮背景色&lt;/span&gt;
            button.BackColor =&lt;span&gt; Color.Azure;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮提示语       &lt;/span&gt;
            button.ToolTip = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;To the first page&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮文字字体和颜色      &lt;/span&gt;
            PdfTrueTypeFont trueTypeFont = &lt;span&gt;new&lt;/span&gt; PdfTrueTypeFont(&lt;span&gt;new&lt;/span&gt; Font(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Avant Garde&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, 9f), &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            button.Font &lt;/span&gt;=&lt;span&gt; trueTypeFont;
            button.ForeColor &lt;/span&gt;=&lt;span&gt; Color.Black;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建PdfNamedAction实例，在传入的参数中选择上一页、下一页、首页或最后一页&lt;/span&gt;
            PdfNamedAction namedAction = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfNamedAction(PdfActionDestination.FirstPage);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;应用动作&lt;/span&gt;
            button.Actions.MouseDown =&lt;span&gt; namedAction;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加按钮到文档&lt;/span&gt;
&lt;span&gt;            doc.Form.Fields.Add(button);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存并打开PDF文档&lt;/span&gt;
            doc.SaveToFile(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;result.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, FileFormat.PDF);
            System.Diagnostics.Process.Start(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;result.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS：这里的PdfNameAction类支持四种按钮跳转动作&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/706090/201805/706090-20180502140711755-594094692.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加效果（截图）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/706090/201805/706090-20180502140726102-917959452.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击文中的按钮时，即可跳转至按钮指向的页面。&lt;/p&gt;

&lt;h2&gt;2.跳转至指定页面&lt;/h2&gt;
&lt;p&gt;【C#】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Actions;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Fields;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.General;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Spire.Pdf.Graphics;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Drawing;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Buttom2
{
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Program
    {
        &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实例化PdfDocument类，加载PDF文档&lt;/span&gt;
            PdfDocument doc = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfDocument();
            doc.LoadFromFile(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;sample.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;允许添加Form&lt;/span&gt;
            doc.AllowCreateForm = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取最后一页&lt;/span&gt;
            PdfPageBase lastPage = doc.Pages[doc.Pages.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;];

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在页面指定位置添加按钮&lt;/span&gt;
            PdfButtonField button = &lt;span&gt;new&lt;/span&gt; PdfButtonField(lastPage, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Back&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            button.Bounds &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; RectangleF(lastPage.ActualSize.Width - &lt;span&gt;150&lt;/span&gt;, lastPage.ActualSize.Height - &lt;span&gt;700&lt;/span&gt;, &lt;span&gt;50&lt;/span&gt;, &lt;span&gt;20&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮边框颜色&lt;/span&gt;
            button.BorderStyle =&lt;span&gt; PdfBorderStyle.Solid;
            button.BorderColor &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfRGBColor(Color.Transparent);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮背景色&lt;/span&gt;
            button.BackColor =&lt;span&gt; Color.WhiteSmoke;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮提示语       &lt;/span&gt;
            button.ToolTip = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Click and back to the third page&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置按钮文字字体和颜色      &lt;/span&gt;
            PdfTrueTypeFont trueTypeFont = &lt;span&gt;new&lt;/span&gt; PdfTrueTypeFont(&lt;span&gt;new&lt;/span&gt; Font(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Avant Garde&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, 9f), &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            button.Font &lt;/span&gt;=&lt;span&gt; trueTypeFont;
            button.ForeColor &lt;/span&gt;=&lt;span&gt; Color.Black;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实例化PdfDestination对象，传入指定页码到第3页&lt;/span&gt;
            PdfDestination destination = &lt;span&gt;new&lt;/span&gt; PdfDestination(doc.Pages[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;]);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建go to动作&lt;/span&gt;
            PdfGoToAction goToAction = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PdfGoToAction(destination);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;应用动作&lt;/span&gt;
            button.Actions.MouseDown =&lt;span&gt; goToAction;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加按钮到文档&lt;/span&gt;
&lt;span&gt;            doc.Form.Fields.Add(button);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存并打开PDF文档&lt;/span&gt;
            doc.SaveToFile(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;result.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, FileFormat.PDF);
            System.Diagnostics.Process.Start(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;result.pdf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加效果（截图）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/706090/201805/706090-20180502140844457-298945352.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;点击按钮，即可跳转至指定的文档第3页。&lt;/p&gt;

&lt;p&gt;关于添加PDF页面跳转按钮的方法，本文介绍到这里，希望文中的代码能给各位开发者提供一定参考价值。&lt;/p&gt;
&lt;p&gt;如需转载，请注明出处。&lt;/p&gt;
&lt;p&gt;感谢阅读！&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 06:12:00 +0000</pubDate>
<dc:creator>E-iceblue</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Yesi/p/8979938.html</dc:identifier>
</item>
<item>
<title>Android开发 PopupWindow弹窗调用第三方地图(百度，高德)实现导航功能 - 丁先森</title>
<link>http://www.cnblogs.com/dingxiansen/p/8979631.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dingxiansen/p/8979631.html</guid>
<description>&lt;p&gt;博客描述：后台返回地点的经纬度在地图上进行描点，点击导航弹出PopupWindow进行选择地图操作，如果手机中没有安装地图，提示没有，否则传值调起地图进行导航操作&lt;/p&gt;
&lt;p&gt;看一下实现的效果，没图说再多都白搭&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1058389/201805/1058389-20180502114611470-1837900141.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这里在打开第三方的时候可以不用传当前位置的经纬度，当你打开App时默认为当前位置为起点，只设置终点经纬度就可以，文档上也都有说明，&lt;/p&gt;
&lt;p&gt;如果你有定位获取的经纬度，也可以拼接上，注意不要拼接错，还要注意的百度和高德地图使用的经纬度不能用同一个，需要转换，百度地图获&lt;/p&gt;
&lt;p&gt;取到的经纬度需要通过方法处理成高德地图可以使用的，反之同理。&lt;/p&gt;
&lt;p&gt;另外附上文档地址：&lt;/p&gt;
&lt;p&gt;　　百度地图：&lt;a href=&quot;http://lbsyun.baidu.com/index.php?title=uri/api/android&quot; target=&quot;_blank&quot;&gt;http://lbsyun.baidu.com/index.php?title=uri/api/android&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　高德地图：&lt;a href=&quot;http://lbs.amap.com/api/amap-mobile/guide/android/route&quot; target=&quot;_blank&quot;&gt;http://lbs.amap.com/api/amap-mobile/guide/android/route&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;腾讯地图后续有时间就添加上。&lt;/p&gt;
&lt;p&gt;看完效果图再看具体的实现方法&lt;/p&gt;
&lt;p&gt;先看实现PopupWindow的实现&lt;/p&gt;
&lt;p&gt;PopupWindow的布局文件&lt;/p&gt;
&lt;p&gt;map_navgation_sheet.xml&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1058389/201805/1058389-20180502114847855-1321742151.png&quot; alt=&quot;&quot; width=&quot;196&quot; height=&quot;276&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;LinearLayout &lt;/span&gt;&lt;span&gt;xmlns:android&lt;/span&gt;&lt;span&gt;=&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;span&gt;
    android:layout_width&lt;/span&gt;&lt;span&gt;=&quot;match_parent&quot;&lt;/span&gt;&lt;span&gt;
    android:layout_height&lt;/span&gt;&lt;span&gt;=&quot;wrap_content&quot;&lt;/span&gt;&lt;span&gt;
    android:fitsSystemWindows&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;
    android:orientation&lt;/span&gt;&lt;span&gt;=&quot;vertical&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextView
        &lt;/span&gt;&lt;span&gt;android:id&lt;/span&gt;&lt;span&gt;=&quot;@+id/baidu_btn&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_width&lt;/span&gt;&lt;span&gt;=&quot;match_parent&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_height&lt;/span&gt;&lt;span&gt;=&quot;wrap_content&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginLeft&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginRight&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginTop&lt;/span&gt;&lt;span&gt;=&quot;35px&quot;&lt;/span&gt;&lt;span&gt;
        android:background&lt;/span&gt;&lt;span&gt;=&quot;@drawable/shape_map_navagation_sheet_bg&quot;&lt;/span&gt;&lt;span&gt;
        android:gravity&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;
        android:text&lt;/span&gt;&lt;span&gt;=&quot;百度地图&quot;&lt;/span&gt;&lt;span&gt;
        android:textColor&lt;/span&gt;&lt;span&gt;=&quot;#224E8F&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;View
         android:layout_width=&quot;match_parent&quot;
         android:layout_height=&quot;1px&quot;
         android:background=&quot;#cdcdcd&quot; /&amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextView
        &lt;/span&gt;&lt;span&gt;android:id&lt;/span&gt;&lt;span&gt;=&quot;@+id/gaode_btn&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_width&lt;/span&gt;&lt;span&gt;=&quot;match_parent&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_height&lt;/span&gt;&lt;span&gt;=&quot;wrap_content&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginLeft&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginRight&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginTop&lt;/span&gt;&lt;span&gt;=&quot;10px&quot;&lt;/span&gt;&lt;span&gt;
        android:background&lt;/span&gt;&lt;span&gt;=&quot;@drawable/shape_map_navagation_sheet_bg&quot;&lt;/span&gt;&lt;span&gt;
        android:gravity&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;
        android:text&lt;/span&gt;&lt;span&gt;=&quot;高德地图&quot;&lt;/span&gt;&lt;span&gt;
        android:textColor&lt;/span&gt;&lt;span&gt;=&quot;#224E8F&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;  &amp;lt;View
          android:layout_width=&quot;match_parent&quot;
          android:layout_height=&quot;1px&quot;
          android:background=&quot;#cdcdcd&quot; /&amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextView
        &lt;/span&gt;&lt;span&gt;android:id&lt;/span&gt;&lt;span&gt;=&quot;@+id/tencent_btn&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_width&lt;/span&gt;&lt;span&gt;=&quot;match_parent&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_height&lt;/span&gt;&lt;span&gt;=&quot;wrap_content&quot;&lt;/span&gt;&lt;span&gt;
        android:gravity&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;
        android:paddingBottom&lt;/span&gt;&lt;span&gt;=&quot;30px&quot;&lt;/span&gt;&lt;span&gt;
        android:paddingTop&lt;/span&gt;&lt;span&gt;=&quot;30px&quot;&lt;/span&gt;&lt;span&gt;
        android:text&lt;/span&gt;&lt;span&gt;=&quot;腾讯地图&quot;&lt;/span&gt;&lt;span&gt;
        android:visibility&lt;/span&gt;&lt;span&gt;=&quot;gone&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;


    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;&amp;lt;View
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;1px&quot;
        android:background=&quot;#cdcdcd&quot; /&amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
        android:paddingBottom=&quot;30px&quot;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;TextView
        &lt;/span&gt;&lt;span&gt;android:id&lt;/span&gt;&lt;span&gt;=&quot;@+id/cancel_btn2&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_width&lt;/span&gt;&lt;span&gt;=&quot;match_parent&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_height&lt;/span&gt;&lt;span&gt;=&quot;wrap_content&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginBottom&lt;/span&gt;&lt;span&gt;=&quot;40px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginLeft&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginRight&lt;/span&gt;&lt;span&gt;=&quot;20px&quot;&lt;/span&gt;&lt;span&gt;
        android:layout_marginTop&lt;/span&gt;&lt;span&gt;=&quot;15px&quot;&lt;/span&gt;&lt;span&gt;
        android:background&lt;/span&gt;&lt;span&gt;=&quot;@drawable/shape_map_navagation_sheet_bg&quot;&lt;/span&gt;&lt;span&gt;
        android:gravity&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;
        android:text&lt;/span&gt;&lt;span&gt;=&quot;取消&quot;&lt;/span&gt;&lt;span&gt;
        android:textColor&lt;/span&gt;&lt;span&gt;=&quot;#224E8F&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;LinearLayout&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PopupWindow弹出方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
 @RequiresApi(api =&lt;span&gt; Build.VERSION_CODES.KITKAT)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; dhPopupView() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 构建一个popupwindow的布局
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        View popupView = ShopDetailsMap.this.getLayoutInflater().inflate(R.layout.map_navagation_sheet, null);&lt;/span&gt;
        View popupView = getLayoutInflater().inflate(R.layout.map_navagation_sheet, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        Point position = getNavigationBarSize(mContext);&lt;/span&gt;
&lt;span&gt;
        TextView baidu_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.baidu_btn);
        TextView gaode_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.gaode_btn);
        TextView tencent_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.tencent_btn);
        TextView cancel_btn2 &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.cancel_btn2);

        baidu_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        gaode_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        tencent_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        cancel_btn2.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 创建PopupWindow对象，指定宽度和高度
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window = new PopupWindow(popupView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);&lt;/span&gt;
        window = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PopupWindow();

        window.setContentView(popupView);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置宽高&lt;/span&gt;
&lt;span&gt;        window.setWidth(ViewGroup.LayoutParams.MATCH_PARENT);
        window.setHeight(ViewGroup.LayoutParams.WRAP_CONTENT);


        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置动画
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.setAnimationStyle(R.style.popup_window_anim);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置背景颜色&lt;/span&gt;
        window.setBackgroundDrawable(&lt;span&gt;new&lt;/span&gt; ColorDrawable(Color.parseColor(&quot;#88323232&quot;&lt;span&gt;)));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置可以获取焦点&lt;/span&gt;
        window.setFocusable(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置可以触摸弹出框以外的区域&lt;/span&gt;
        window.setOutsideTouchable(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ：更新popupwindow的状态&lt;/span&gt;
&lt;span&gt;        window.update();
        window.setClippingEnabled(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        int windowPos[] = calculatePopWindowPos(view, windowContentViewRoot);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAtLocation(popupView,Gravity.BOTTOM,);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAsDropDown(popupView, Gravity.BOTTOM, 0, 0);&lt;/span&gt;
        Rect rect = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect();
        getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; winHeight =&lt;span&gt; getWindow().getDecorView().getHeight();
        window.showAtLocation(popupView, Gravity.BOTTOM &lt;/span&gt;| Gravity.CENTER_HORIZONTAL, 0, winHeight -&lt;span&gt; rect.bottom);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAsDropDown(btnPopup, 0, 20);&lt;/span&gt;
      &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;  if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.KITKAT) {
//            window.showAsDropDown(this.getWindow().getDecorView(), Gravity.BOTTOM, 0, 0);
        }&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;检测是否安装了第三方应用&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;检测应用是否安装&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isAvilible(Context context, String packageName) {
        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; PackageManager packageManager = context.getPackageManager();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取packagemanager&lt;/span&gt;
        List&amp;lt;PackageInfo&amp;gt; pinfo = packageManager.getInstalledPackages(0);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取所有已安装程序的包信息&lt;/span&gt;
        List&amp;lt;String&amp;gt; pName = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于存储所有已安装程序的包名
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从pinfo中将包名字逐一取出，压入pName list中&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (pinfo != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; pinfo.size(); i++&lt;span&gt;) {
                String pn &lt;/span&gt;=&lt;span&gt; pinfo.get(i).packageName;
                pName.add(pn);
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; pName.contains(packageName);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断pName中是否有目标程序的包名，有TRUE，没有FALSE&lt;/span&gt;
    }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;调用百度地图方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;百度地图&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; baiduMap() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isAvilible(&lt;span&gt;this&lt;/span&gt;, &quot;com.baidu.BaiduMap&quot;)) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;传入指定应用包名&lt;/span&gt;
            Intent il = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent();
            il.setData(Uri.parse(&lt;/span&gt;&quot;baidumap://map/direction?destination=&quot; + lng + &quot;,&quot; + lat + &quot;&amp;amp;mode=driving&quot;&lt;span&gt;));
            startActivity(il);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;未安装
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;market为路径，id为包名
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示手机上所有的market商店&lt;/span&gt;
            Toast.makeText(&lt;span&gt;this&lt;/span&gt;, &quot;您尚未安装百度地图&quot;&lt;span&gt;, Toast.LENGTH_LONG).show();
　　　　　　&lt;/span&gt;&lt;span&gt;//&lt;span&gt;显示手机上所有的market商店&lt;span&gt;&lt;span&gt;
            Uri uri = Uri.parse(&quot;market://details?id=com.baidu.BaiduMap&quot;&lt;span&gt;);
            intent = &lt;span&gt;new&lt;span&gt; Intent(Intent.ACTION_VIEW, uri);
            startActivity(intent);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;} window.dismiss(); }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;调用高德地图方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;高德地图&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; gaodeMap() {

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isAvilible(&lt;span&gt;this&lt;/span&gt;, &quot;com.autonavi.minimap&quot;)) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;传入指定应用包名&lt;/span&gt;
            Intent intent = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent();
            intent.setAction(Intent.ACTION_VIEW);
            intent.addCategory(Intent.CATEGORY_DEFAULT);
            intent.setPackage(&lt;/span&gt;&quot;com.autonavi.minimap&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                intent = Intent.getIntent(&quot;amapuri:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;route/plan/?sid=BGVIS1&amp;amp;slat=39.92848272&amp;amp;slon=116.39560823&amp;amp;sname=A&amp;amp;did=BGVIS2&amp;amp;dlat=39.98848272&amp;amp;dlon=116.47560823&amp;amp;dname=B&amp;amp;dev=0&amp;amp;t=0&quot;);&lt;/span&gt;
                intent = Intent.getIntent(&quot;amapuri://route/plan/?dlat=&quot; + lng + &quot;&amp;amp;dlon=&quot; + lat + &quot;&amp;amp;d&amp;amp;dev=0&amp;amp;t=0&quot;&lt;span&gt;);
                startActivity(intent);
            } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (URISyntaxException e) {
                e.printStackTrace();
            }
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;未安装
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;market为路径，id为包名
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示手机上所有的market商店&lt;/span&gt;
            Toast.makeText(&lt;span&gt;this&lt;/span&gt;, &quot;您尚未安装高德地图&quot;&lt;span&gt;, Toast.LENGTH_LONG).show();
            Uri uri &lt;/span&gt;= Uri.parse(&quot;market://details?id=com.autonavi.minimap&quot;&lt;span&gt;);
            intent &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent(Intent.ACTION_VIEW, uri);
            startActivity(intent);
        }
        window.dismiss();
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：代码中的lat和lng是后台传递过来的经纬度，百度和高德使用的时候注意放置的位置。&lt;/p&gt;
&lt;p&gt;下面贴总的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;113&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Created by dingchao on 2018/3/12.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.content.Context;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.content.Intent;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.content.pm.PackageInfo;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.content.pm.PackageManager;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.graphics.Color;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.graphics.Rect;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.graphics.drawable.ColorDrawable;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.net.Uri;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.os.Build;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.os.Bundle;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.support.annotation.Nullable;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.support.annotation.RequiresApi;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.view.Gravity;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.view.View;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.view.ViewGroup;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.widget.ImageView;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.widget.PopupWindow;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.widget.TextView;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.widget.Toast;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; android.widget.ZoomControls;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.SDKInitializer;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.BaiduMap;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.BitmapDescriptor;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.BitmapDescriptorFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.InfoWindow;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.MapStatusUpdate;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.MapStatusUpdateFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.MapView;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.MarkerOptions;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.map.OverlayOptions;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.baidu.mapapi.model.LatLng;&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.net.URISyntaxException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 商铺详情查看地图的时候显示
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ShopDetailsMap &lt;span&gt;extends&lt;/span&gt; BaseActivity &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; View.OnClickListener {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; MapView mMapView = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; BaiduMap mBaiduMap = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BitmapDescriptor bitmapDescriptor;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ImageView iv_map_return;

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Intent intent;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String lat;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String lng;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String shopName;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String shopAddress;
    PopupWindow window;

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;定位&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

    @RequiresApi(api &lt;/span&gt;=&lt;span&gt; Build.VERSION_CODES.KITKAT)
    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onCreate(@Nullable Bundle savedInstanceState) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onCreate(savedInstanceState);
        intent &lt;/span&gt;=&lt;span&gt; getIntent();
        lat &lt;/span&gt;= intent.getStringExtra(&quot;lat&quot;&lt;span&gt;);
        lng &lt;/span&gt;= intent.getStringExtra(&quot;lng&quot;&lt;span&gt;);
        shopName &lt;/span&gt;= intent.getStringExtra(&quot;shopName&quot;&lt;span&gt;);
        shopAddress &lt;/span&gt;= intent.getStringExtra(&quot;shopAddress&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在使用SDK各组件之前初始化context信息，传入ApplicationContext
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注意该方法要再setContentView方法之前实现&lt;/span&gt;
&lt;span&gt;        SDKInitializer.initialize(getApplicationContext());
        setContentView(R.layout.shop_details_map);


        iv_map_return &lt;/span&gt;=&lt;span&gt; (ImageView) findViewById(R.id.iv_map_return);
        iv_map_return.setOnClickListener(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; View.OnClickListener() {
            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onClick(View view) {
                finish();
            }
        });




        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;显示信息&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;infowindow中的布局&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;TextView tv = new TextView(ShopDetailsMap.this);
        tv.setBackgroundResource(R.mipmap.maptextbg);
        tv.setPadding(20, 10, 20, 20);
        tv.setTextColor(android.graphics.Color.WHITE);
        tv.setText(&quot;商铺名称&quot; + &quot;\n&quot; + &quot;北京市北京南站附近&quot;);
        tv.setGravity(Gravity.LEFT);&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

        View view1 &lt;/span&gt;= ViewGroup.inflate(ShopDetailsMap.&lt;span&gt;this&lt;/span&gt;, R.layout.activity_shop_detail_map, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
        TextView textView1 &lt;/span&gt;=&lt;span&gt; view1.findViewById(R.id.tv_shop_details_map_text1);
        TextView textView2 &lt;/span&gt;=&lt;span&gt; view1.findViewById(R.id.tv_shop_details_map_text2);

        textView1.setText(shopName);
        textView2.setText(shopAddress);


&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        bitmapDescriptor = BitmapDescriptorFactory.fromView(tv);&lt;/span&gt;
        bitmapDescriptor =&lt;span&gt; BitmapDescriptorFactory.fromView(view1);


        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示infowindow，-47是偏移量，使infowindow向上偏移，不会挡住marker
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取地图控件引用&lt;/span&gt;
        mMapView =&lt;span&gt; (MapView) findViewById(R.id.bmapView);
        LatLng llText &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; LatLng(Double.parseDouble(lng), Double.parseDouble(lat));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        InfoWindow infoWindow = new InfoWindow(bitmapDescriptor, llText, -47, null);&lt;/span&gt;&lt;span&gt;////&lt;/span&gt;&lt;span&gt;不可触发点击&lt;/span&gt;
        InfoWindow infoWindow = &lt;span&gt;new&lt;/span&gt; InfoWindow(bitmapDescriptor, llText, -47, &lt;span&gt;new&lt;/span&gt; InfoWindow.OnInfoWindowClickListener() {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可触发点击&lt;/span&gt;
&lt;span&gt;            @Override
            &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onInfoWindowClick() {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                Toast.makeText(ShopDetailsMap.this, &quot;被点击&quot;, Toast.LENGTH_SHORT).show();&lt;/span&gt;
&lt;span&gt;                dhPopupView();
            }
        });

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在地图上添加该文字对象并显示
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取地图控件引用*/&lt;/span&gt;
        mMapView =&lt;span&gt; (MapView) findViewById(R.id.bmapView);
        mBaiduMap &lt;/span&gt;=&lt;span&gt; mMapView.getMap();
        mBaiduMap.showInfoWindow(infoWindow);
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;这里重点讲解zoomBy后面的那个浮点型变量
            大家知道百度地图一共有{&quot;10米&quot;,&quot;20米&quot;,&quot;50米&quot;,&quot;100米&quot;,&quot;200米&quot;,&quot;500米&quot;,&quot;1千米&quot;,&quot;2千米&quot;,&quot;5千米&quot;,
            &quot;10千米&quot;,&quot;20千米&quot;,&quot;25千米&quot;,&quot;50千米&quot;,&quot;100千米&quot;,&quot;200千米&quot;,&quot;500千米&quot;,&quot;1000千米&quot;,&quot;2000千米&quot;}&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        MapStatusUpdate mapStatusUpdate &lt;/span&gt;= MapStatusUpdateFactory.zoomBy(3&lt;span&gt;);
        mBaiduMap.setMapStatus(MapStatusUpdateFactory.newLatLng(llText));&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置定位的位置在屏幕的中间位置&lt;/span&gt;
&lt;span&gt;        mBaiduMap.animateMapStatus(mapStatusUpdate);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;构建Marker图标，设置位置圆点&lt;/span&gt;
        BitmapDescriptor bitmap =&lt;span&gt; BitmapDescriptorFactory
                .fromResource(R.mipmap.mapdian);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;构建MarkerOption，用于在地图上添加Marker&lt;/span&gt;
&lt;span&gt;
        OverlayOptions option &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MarkerOptions()
                .position(llText)
                .icon(bitmap);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 隐藏logo&lt;/span&gt;
        View child = mMapView.getChildAt(1&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (child != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (child &lt;span&gt;instanceof&lt;/span&gt; ImageView || child &lt;span&gt;instanceof&lt;/span&gt;&lt;span&gt; ZoomControls)) {
            child.setVisibility(View.INVISIBLE);
        }
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在地图上添加Marker，并显示&lt;/span&gt;
&lt;span&gt;        mBaiduMap.addOverlay(option);


&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        mBaiduMap.addOverlay(option);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        mBaiduMap.addOverlay(textOption);&lt;/span&gt;
&lt;span&gt;    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;    @RequiresApi(api = Build.VERSION_CODES.KITKAT)&lt;/span&gt;
    @RequiresApi(api =&lt;span&gt; Build.VERSION_CODES.KITKAT)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; dhPopupView() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 构建一个popupwindow的布局
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        View popupView = ShopDetailsMap.this.getLayoutInflater().inflate(R.layout.map_navagation_sheet, null);&lt;/span&gt;
        View popupView = getLayoutInflater().inflate(R.layout.map_navagation_sheet, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        Point position = getNavigationBarSize(mContext);&lt;/span&gt;
&lt;span&gt;
        TextView baidu_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.baidu_btn);
        TextView gaode_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.gaode_btn);
        TextView tencent_btn &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.tencent_btn);
        TextView cancel_btn2 &lt;/span&gt;=&lt;span&gt; popupView.findViewById(R.id.cancel_btn2);

        baidu_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        gaode_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        tencent_btn.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        cancel_btn2.setOnClickListener(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 创建PopupWindow对象，指定宽度和高度
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window = new PopupWindow(popupView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);&lt;/span&gt;
        window = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PopupWindow();

        window.setContentView(popupView);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置宽高&lt;/span&gt;
&lt;span&gt;        window.setWidth(ViewGroup.LayoutParams.MATCH_PARENT);
        window.setHeight(ViewGroup.LayoutParams.WRAP_CONTENT);


        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置动画
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.setAnimationStyle(R.style.popup_window_anim);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置背景颜色&lt;/span&gt;
        window.setBackgroundDrawable(&lt;span&gt;new&lt;/span&gt; ColorDrawable(Color.parseColor(&quot;#88323232&quot;&lt;span&gt;)));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置可以获取焦点&lt;/span&gt;
        window.setFocusable(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; : 2016/5/17 设置可以触摸弹出框以外的区域&lt;/span&gt;
        window.setOutsideTouchable(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ：更新popupwindow的状态&lt;/span&gt;
&lt;span&gt;        window.update();
        window.setClippingEnabled(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        int windowPos[] = calculatePopWindowPos(view, windowContentViewRoot);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAtLocation(popupView,Gravity.BOTTOM,);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAsDropDown(popupView, Gravity.BOTTOM, 0, 0);&lt;/span&gt;
        Rect rect = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Rect();
        getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; winHeight =&lt;span&gt; getWindow().getDecorView().getHeight();
        window.showAtLocation(popupView, Gravity.BOTTOM &lt;/span&gt;| Gravity.CENTER_HORIZONTAL, 0, winHeight -&lt;span&gt; rect.bottom);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        window.showAsDropDown(btnPopup, 0, 20);&lt;/span&gt;
      &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;  if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.KITKAT) {
//            window.showAsDropDown(this.getWindow().getDecorView(), Gravity.BOTTOM, 0, 0);
        }&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    }


    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;百度地图&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; baiduMap() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isAvilible(&lt;span&gt;this&lt;/span&gt;, &quot;com.baidu.BaiduMap&quot;)) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;传入指定应用包名&lt;/span&gt;
            Intent il = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent();
            il.setData(Uri.parse(&lt;/span&gt;&quot;baidumap://map/direction?destination=&quot; + lng + &quot;,&quot; + lat + &quot;&amp;amp;mode=driving&quot;&lt;span&gt;));
            startActivity(il);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;未安装
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;market为路径，id为包名
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示手机上所有的market商店&lt;/span&gt;
            Toast.makeText(&lt;span&gt;this&lt;/span&gt;, &quot;您尚未安装百度地图&quot;&lt;span&gt;, Toast.LENGTH_LONG).show();
            Uri uri &lt;/span&gt;= Uri.parse(&quot;market://details?id=com.baidu.BaiduMap&quot;&lt;span&gt;);
            intent &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent(Intent.ACTION_VIEW, uri);
            startActivity(intent);
        }
        window.dismiss();
    }


    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;高德地图&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; gaodeMap() {

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isAvilible(&lt;span&gt;this&lt;/span&gt;, &quot;com.autonavi.minimap&quot;)) {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;传入指定应用包名&lt;/span&gt;
            Intent intent = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent();
            intent.setAction(Intent.ACTION_VIEW);
            intent.addCategory(Intent.CATEGORY_DEFAULT);
            intent.setPackage(&lt;/span&gt;&quot;com.autonavi.minimap&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                intent = Intent.getIntent(&quot;amapuri:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;route/plan/?sid=BGVIS1&amp;amp;slat=39.92848272&amp;amp;slon=116.39560823&amp;amp;sname=A&amp;amp;did=BGVIS2&amp;amp;dlat=39.98848272&amp;amp;dlon=116.47560823&amp;amp;dname=B&amp;amp;dev=0&amp;amp;t=0&quot;);&lt;/span&gt;
                intent = Intent.getIntent(&quot;amapuri://route/plan/?dlat=&quot; + lng + &quot;&amp;amp;dlon=&quot; + lat + &quot;&amp;amp;d&amp;amp;dev=0&amp;amp;t=0&quot;&lt;span&gt;);
                startActivity(intent);
            } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (URISyntaxException e) {
                e.printStackTrace();
            }
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; {&lt;span&gt;//&lt;/span&gt;&lt;span&gt;未安装
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;market为路径，id为包名
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示手机上所有的market商店&lt;/span&gt;
            Toast.makeText(&lt;span&gt;this&lt;/span&gt;, &quot;您尚未安装高德地图&quot;&lt;span&gt;, Toast.LENGTH_LONG).show();
            Uri uri &lt;/span&gt;= Uri.parse(&quot;market://details?id=com.autonavi.minimap&quot;&lt;span&gt;);
            intent &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Intent(Intent.ACTION_VIEW, uri);
            startActivity(intent);
        }
        window.dismiss();
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;检测应用是否安装&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isAvilible(Context context, String packageName) {
        &lt;/span&gt;&lt;span&gt;final&lt;/span&gt; PackageManager packageManager = context.getPackageManager();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取packagemanager&lt;/span&gt;
        List&amp;lt;PackageInfo&amp;gt; pinfo = packageManager.getInstalledPackages(0);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取所有已安装程序的包信息&lt;/span&gt;
        List&amp;lt;String&amp;gt; pName = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于存储所有已安装程序的包名
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从pinfo中将包名字逐一取出，压入pName list中&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (pinfo != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; pinfo.size(); i++&lt;span&gt;) {
                String pn &lt;/span&gt;=&lt;span&gt; pinfo.get(i).packageName;
                pName.add(pn);
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; pName.contains(packageName);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断pName中是否有目标程序的包名，有TRUE，没有FALSE&lt;/span&gt;
&lt;span&gt;    }


    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onClick(View view) {
        &lt;/span&gt;&lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (view.getId()) {
            &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; baidu_btn:
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                Toast.makeText(this, &quot;baidu&quot;, Toast.LENGTH_SHORT).show();&lt;/span&gt;
&lt;span&gt;                baiduMap();
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; R.id.gaode_btn:
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                Toast.makeText(this, &quot;gaode&quot;, Toast.LENGTH_SHORT).show();&lt;/span&gt;
&lt;span&gt;                gaodeMap();
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; R.id.tencent_btn:
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                Toast.makeText(this, &quot;tengxun&quot;, Toast.LENGTH_SHORT).show();&lt;/span&gt;
                &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;case&lt;/span&gt;&lt;span&gt; R.id.cancel_btn2:
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                Toast.makeText(this, &quot;quxiao&quot;, Toast.LENGTH_SHORT).show();&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt; (window != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                    window.dismiss();
                }
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        }
    }


    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onDestroy() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onDestroy();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在activity执行onDestroy时执行mMapView.onDestroy()，实现地图生命周期管理&lt;/span&gt;
&lt;span&gt;        mMapView.onDestroy();
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onResume() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onResume();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在activity执行onResume时执行mMapView. onResume ()，实现地图生命周期管理&lt;/span&gt;
&lt;span&gt;        mMapView.onResume();
    }

    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onPause() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.onPause();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在activity执行onPause时执行mMapView. onPause ()，实现地图生命周期管理&lt;/span&gt;
&lt;span&gt;        mMapView.onPause();
    }


    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 启动百度App进行导航
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; address 目的地
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; lat     必填 纬度
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; lon     必填 经度
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; goToBaiduActivity(Context context, String address, &lt;span&gt;double&lt;/span&gt; lat, &lt;span&gt;double&lt;/span&gt;&lt;span&gt; lon) {
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt;[] doubles =&lt;span&gt; gcj02_To_Bd09(lat, lon);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;启动路径规划页面&lt;/span&gt;
        Intent naviIntent = &lt;span&gt;new&lt;/span&gt; Intent(&quot;android.intent.action.VIEW&quot;, android.net.Uri.parse(&quot;baidumap://map/direction?origin=&quot; + doubles[0] + &quot;,&quot; + doubles[1] + &quot;&amp;amp;destination=&quot; + address + &quot;&amp;amp;mode=driving&quot;&lt;span&gt;));
        context.startActivity(naviIntent);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换算法 将 GCJ-02 坐标转换成 BD-09 坐标
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; lat
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; lon
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;double&lt;/span&gt;[] gcj02_To_Bd09(&lt;span&gt;double&lt;/span&gt; lat, &lt;span&gt;double&lt;/span&gt;&lt;span&gt; lon) {
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; x = lon, y =&lt;span&gt; lat;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        double z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);&lt;/span&gt;
        &lt;span&gt;double&lt;/span&gt; z = Math.sqrt(x * x + y * y) + 0.00002&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;        double theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);&lt;/span&gt;
        &lt;span&gt;double&lt;/span&gt; theta = Math.atan2(y, x) + 0.000003&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; tempLat = z * Math.sin(theta) + 0.006&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; tempLon = z * Math.cos(theta) + 0.0065&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt;[] gps =&lt;span&gt; {tempLat, tempLon};
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; gps;
    }


}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;以上就是使用uri调用第三方地图的所有代码，如果有不理解的或者代码有问题欢迎发送到我的邮箱：　　dingchao7323@qq.com&lt;/p&gt;

</description>
<pubDate>Wed, 02 May 2018 04:29:00 +0000</pubDate>
<dc:creator>丁先森</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dingxiansen/p/8979631.html</dc:identifier>
</item>
<item>
<title>Spring Kafka和Spring Boot整合实现消息发送与消费简单案例 - guan_yan_guan</title>
<link>http://www.cnblogs.com/guanzhyan/p/8979050.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/guanzhyan/p/8979050.html</guid>
<description>
&lt;p&gt;本文主要分享下Spring Boot和Spring Kafka如何配置整合，实现发送和接收来自Spring Kafka的消息。&lt;/p&gt;
&lt;p&gt;先前我已经分享了Kafka的基本介绍与集群环境搭建方法。关于Kafka的介绍请阅读&lt;a title=&quot;Apache Kafka简介与安装&quot; href=&quot;http://www.cnblogs.com/guanzhyan/p/8920758.html&quot; target=&quot;_blank&quot;&gt;Apache Kafka简介与安装(一)&lt;/a&gt;，关于Kafka安装请阅读&lt;a title=&quot;Kafka在Windows环境上安装与运行&quot; href=&quot;http://www.cnblogs.com/guanzhyan/p/8920915.html&quot; target=&quot;_blank&quot;&gt;Apache Kafka安装&lt;/a&gt;，关于Kafka集群环境搭建请阅读&lt;a title=&quot;window环境搭建zookeeper,kafka集群&quot; href=&quot;http://www.cnblogs.com/guanzhyan/p/8974143.html&quot; target=&quot;_blank&quot;&gt;Apache Kafka集群环境搭建&lt;/a&gt; 。这里关于服务器环境搭建不在赘述。&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Spring Kafka整合Spring Boot创建生产者客户端案例&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;postTitle&quot;&gt;创建一个kafka-producer-master的maven工程。整个项目结构如下：&lt;/p&gt;
&lt;p class=&quot;postTitle&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502105223046-1459131937.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;&lt;strong&gt;Maven的依赖&lt;/strong&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;com.gzh.kafka.producer&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;producer&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;

    &amp;lt;name&amp;gt;kafka-producer-master&amp;lt;/name&amp;gt;
    &amp;lt;description&amp;gt;demo project &lt;span&gt;for&lt;/span&gt; kafka producer&amp;lt;/description&amp;gt;

    &amp;lt;parent&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.5.9.RELEASE&amp;lt;/version&amp;gt;
        &amp;lt;relativePath/&amp;gt; &amp;lt;!-- lookup parent from repository --&amp;gt;
    &amp;lt;/parent&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
        &amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt;
        &amp;lt;spring-kafka.version&amp;gt;2.1.5.RELEASE&amp;lt;/spring-kafka.version&amp;gt;
        &amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/org.springframework.kafka/spring-kafka --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-kafka&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring-kafka.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/org.springframework.kafka/spring-kafka-test --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-kafka-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring-kafka.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;springfox-swagger2&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.8.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;springfox-swagger-ui&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.8.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

&amp;lt;/project&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; &lt;strong&gt;使用application.properties配置应用程序&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;当然，根据个人喜好，你也可以使用application.yml属性文件重写配置。Spring Boot会尝试根据pom.xml文件中指定的依赖关系自动配置应用程序，并设置合理的默认值。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
server.port=8000&lt;span&gt;
spring.application.name&lt;/span&gt;=kafka-&lt;span&gt;producer
#kafka configuration
spring.kafka.producer.bootstrap&lt;/span&gt;-servers=192.168.1.130:9092,192.168.1.101:9093,192.168.1.101:9094&lt;span&gt;
spring.kafka.producer.key&lt;/span&gt;-serializer=&lt;span&gt;org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value&lt;/span&gt;-serializer=&lt;span&gt;org.apache.kafka.common.serialization.StringSerializer
#topic
kafka.app.topic.foo&lt;/span&gt;=test20180430
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上面的配置中，我给生产者分配的端口号是8000，服务器有3台，采用先前&lt;a title=&quot;window环境搭建zookeeper,kafka集群&quot; href=&quot;http://www.cnblogs.com/guanzhyan/p/8974143.html&quot; target=&quot;_blank&quot;&gt;window环境搭建zookeeper,kafka集群&lt;/a&gt; 中配置的服务器。想了解关于kafka生产者相关的更多配置的话，可以阅读关于&lt;a title=&quot;Spring Boot Kafka Properties&quot; href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html&quot; target=&quot;_blank&quot;&gt;Spring Boot Kafka Properties&lt;/a&gt;的配置信息。&lt;/p&gt;
&lt;h3&gt;使用Spring Boot发送Spring Kafka消息&lt;/h3&gt;
&lt;p&gt;SpringKafka提供了使用Producer的KafkaTemplate类发送消息，并提供将数据发送到Kafka主题的高级操作。 提供异步和同步方法，异步方法返回Future。Spring Boot根据application.properties属性文件中配置的属性自动配置并初始化KafkaTemplate。为了方便测试发送消息，使用了Spring的定时任务，在类上使用@EnableScheduling 注解开启定时任务，通过@Scheduled注解指定发送消息规则。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.producer.component;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Value;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.kafka.core.KafkaTemplate;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.kafka.support.SendResult;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.scheduling.annotation.EnableScheduling;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.scheduling.annotation.Scheduled;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Component;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.util.concurrent.ListenableFuture;

@Component
@EnableScheduling
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaMessageProducer {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger LOG = LoggerFactory.getLogger(KafkaMessageProducer.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; KafkaTemplate&amp;lt;String, String&amp;gt;&lt;span&gt; kafkaTemplate;

    @Value(&lt;/span&gt;&quot;${kafka.app.topic.foo}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String topic;

    @Scheduled(cron &lt;/span&gt;= &quot;00/5 * * * * ?&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; send() {
        String message &lt;/span&gt;= &quot;Hello World---&quot; +&lt;span&gt; System.currentTimeMillis();
        LOG.info(&lt;/span&gt;&quot;topic=&quot;+topic+&quot;,message=&quot;+&lt;span&gt;message);
        ListenableFuture&lt;/span&gt;&amp;lt;SendResult&amp;lt;String, String&amp;gt;&amp;gt; future =&lt;span&gt; kafkaTemplate.send(topic, message);
        future.addCallback(success &lt;/span&gt;-&amp;gt; LOG.info(&quot;KafkaMessageProducer 发送消息成功！&quot;&lt;span&gt;),
                fail &lt;/span&gt;-&amp;gt; LOG.error(&quot;KafkaMessageProducer 发送消息失败！&quot;&lt;span&gt;));
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;创建消息生产者启动类&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.producer;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.SpringApplication;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.autoconfigure.SpringBootApplication;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.context.properties.EnableConfigurationProperties;

@SpringBootApplication
@EnableConfigurationProperties
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaProducerApplication{
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        SpringApplication.run(KafkaProducerApplication.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;, args);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，Spring Boot整合Spring Kafka消息生产者应用已经整合完毕。启动zookeeper、kafka各个服务器。启动生产者应用，查看消息生产者应用控制台日志，如下图说明整合OK。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502113041579-1958915689.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 当然在创建消息生产者类时，我们可以更加灵活，可以不使用定时任务，通过界面请求的方式，发送我们想要发送的内容。简单案例如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;消息发送者类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.producer.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Value;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.kafka.core.KafkaTemplate;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.kafka.support.SendResult;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.util.concurrent.ListenableFuture;

@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaMessageSendService {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger LOG = LoggerFactory.getLogger(KafkaMessageSendService.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
    
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; KafkaTemplate&amp;lt;String, String&amp;gt;&lt;span&gt; kafkaTemplate;
    
    @Value(&lt;/span&gt;&quot;${kafka.app.topic.foo}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String topic;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; send(String message){
        LOG.info(&lt;/span&gt;&quot;topic=&quot;+topic+&quot;,message=&quot;+&lt;span&gt;message);
        ListenableFuture&lt;/span&gt;&amp;lt;SendResult&amp;lt;String, String&amp;gt;&amp;gt; future =&lt;span&gt; kafkaTemplate.send(topic, message);
        future.addCallback(success &lt;/span&gt;-&amp;gt; LOG.info(&quot;KafkaMessageProducer 发送消息成功！&quot;&lt;span&gt;),
                fail &lt;/span&gt;-&amp;gt; LOG.error(&quot;KafkaMessageProducer 发送消息失败！&quot;&lt;span&gt;));
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;界面请求处理controller类&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.producer.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.http.MediaType;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMethod;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestParam;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RestController;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.gzh.kafka.producer.service.KafkaMessageSendService;

@RestController
@RequestMapping(value&lt;/span&gt;=&quot;send&quot;,produces=&lt;span&gt;MediaType.APPLICATION_JSON_UTF8_VALUE)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaMessageSendController {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; KafkaMessageSendService kafkaMessageSendService;
    
    @RequestMapping(value&lt;/span&gt;=&quot;/sendMessage&quot;,method=&lt;span&gt;RequestMethod.POST)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; String send(@RequestParam(required=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;) String message){
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            kafkaMessageSendService.send(message);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;send failed.&quot;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; message;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;通过Swagger访问测试Controller服务请求&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502114404182-438841631.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt; &lt;strong&gt;Spring Kafka整合Spring Boot创建消费者客户端案例：&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;创建一个kafka-consumer-master的maven工程。整个项目结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502114803050-479928953.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;Maven的依赖&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;com.gzh.kafka.consumer&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;consumer&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;

    &amp;lt;name&amp;gt;kafka-consumer-master&amp;lt;/name&amp;gt;
    &amp;lt;description&amp;gt;demo project &lt;span&gt;for&lt;/span&gt; kafka consumer&amp;lt;/description&amp;gt;

    &amp;lt;parent&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.5.9.RELEASE&amp;lt;/version&amp;gt;
        &amp;lt;relativePath/&amp;gt; &amp;lt;!-- lookup parent from repository --&amp;gt;
    &amp;lt;/parent&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
        &amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt;
        &amp;lt;spring-kafka.version&amp;gt;1.3.4.RELEASE&amp;lt;/spring-kafka.version&amp;gt;
        &amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/org.springframework.kafka/spring-kafka --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-kafka&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring-kafka.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;!-- https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;mvnrepository.com/artifact/org.springframework.kafka/spring-kafka-test --&amp;gt;&lt;/span&gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.kafka&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-kafka-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring-kafka.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;


&amp;lt;/project&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意，这是使用Spring-Kafka时一定要注意版本问题，否则会报各种奇葩错误。Spring官方网站上给出了&lt;a title=&quot;https://projects.spring.io/spring-kafka/&quot; href=&quot;https://projects.spring.io/spring-kafka/&quot; target=&quot;_blank&quot;&gt;SpringKafka和kafka-client版本&lt;/a&gt;（它的版本号要和kafka服务器的版本保持一致）的对应关系：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502115733441-1922502634.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;使用application.properties配置应用程序&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Spring Boot会尝试根据pom.xml文件中指定的依赖关系自动配置应用程序，并设置合理的默认值。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
server.port=8001&lt;span&gt;
spring.application.name&lt;/span&gt;=kafka-&lt;span&gt;consumer

#kafka configuration
#指定消息被消费之后自动提交偏移量，以便下次继续消费
spring.kafka.consumer.enable&lt;/span&gt;-auto-commit=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
#指定消息组
spring.kafka.consumer.group&lt;/span&gt;-id=&lt;span&gt;guan
#指定kafka服务器地址
spring.kafka.consumer.bootstrap&lt;/span&gt;-servers=192.168.1.130:9092,192.168.1.101:9093,192.168.1.101:9094&lt;span&gt;
#指定从最近地方开始消费(earliest)
spring.kafka.consumer.auto&lt;/span&gt;-offset-reset=&lt;span&gt;latest

spring.kafka.consumer.key&lt;/span&gt;-deserializer=&lt;span&gt;org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value&lt;/span&gt;-deserializer=&lt;span&gt;org.apache.kafka.common.serialization.StringDeserializer
#topic
kafka.app.topic.foo&lt;/span&gt;=test20180430
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上面的配置中，我给生产者分配的端口号是8000，服务器有3台，采用先前&lt;a title=&quot;window环境搭建zookeeper,kafka集群&quot; href=&quot;http://www.cnblogs.com/guanzhyan/p/8974143.html&quot; target=&quot;_blank&quot;&gt;window环境搭建zookeeper,kafka集群&lt;/a&gt; 中配置的服务器。想了解关于kafka生产者相关的更多配置的话，可以阅读关于&lt;a title=&quot;Spring Boot Kafka Properties&quot; href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html&quot; target=&quot;_blank&quot;&gt;Spring Boot Kafka Properties&lt;/a&gt;的配置信息。&lt;/p&gt;
&lt;h3&gt;使用Spring Boot消费Spring Kafka消息&lt;/h3&gt;
&lt;p&gt;通过使用@KafkaListener来注解一个方法Spring Kafka会自动创建一个消息监听器容器。使用该注解，并指定要消费的topic（也可以指定消费组以及分区号，支持正则表达式匹配），这样，消费者一旦启动，就会监听kafka服务器上的topic，实时进行消费消息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.consumer.service;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.kafka.annotation.KafkaListener;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.messaging.MessageHeaders;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.messaging.handler.annotation.Headers;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.messaging.handler.annotation.Payload;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Component;


@Component
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaMessageConsumer {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger LOG = LoggerFactory.getLogger(KafkaMessageConsumer.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
    
    @KafkaListener(topics&lt;/span&gt;={&quot;${kafka.app.topic.foo}&quot;&lt;span&gt;})
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; receive(@Payload String message, @Headers MessageHeaders headers){
        LOG.info(&lt;/span&gt;&quot;KafkaMessageConsumer 接收到消息：&quot;+&lt;span&gt;message);
        headers.keySet().forEach(key&lt;/span&gt;-&amp;gt;LOG.info(&quot;{}: {}&quot;&lt;span&gt;,key,headers.get(key)));
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;创建消息消费者启动类&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.gzh.kafka.consumer;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.SpringApplication;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.autoconfigure.SpringBootApplication;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.context.properties.EnableConfigurationProperties;

@SpringBootApplication
@EnableConfigurationProperties
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; KafkaConsumerApplication {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        SpringApplication.run(KafkaConsumerApplication.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;, args);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;消费者应用已经完成，接下来让我们验证Spring Kafka消息发送和接收效果。先依次启动zookeeper、kafka服务器，然后在启动生产者(kafka-producer-master)应用，再启动消费者(kafka-consumer-master)应用，然后观察生产者和消费者启动类日志：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502120719391-657238523.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/497836/201805/497836-20180502120814889-479970542.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 02 May 2018 04:11:00 +0000</pubDate>
<dc:creator>guan_yan_guan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/guanzhyan/p/8979050.html</dc:identifier>
</item>
<item>
<title>DDD实战进阶第一波(八)：开发一般业务的大健康行业直销系统（实现经销商上下文领域层之POCO模型） - 曹剑</title>
<link>http://www.cnblogs.com/malaoko/p/8979429.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/malaoko/p/8979429.html</guid>
<description>&lt;p&gt;从这篇文章开始，我们开始介绍大健康行业直销系统领域层的实现。&lt;/p&gt;
&lt;p&gt;先简单讲下业务方面的需求：直销系统会有一个顶级的经销商，经销商的基本信息中包括经销商的名字、联系人(因为在平台购买产品后，会寄送给联系人)、总的电子币（电子币是由经销商支付产生，&lt;/p&gt;
&lt;p&gt;购买产品后会扣减电子币）、总的奖金币（系统周期性根据经销商购买的东西来确定奖金币，奖金币可以购买东西，也可以提现）、总PV（经销商购买时，会根据购买产品的PV进行累加）、卡的类型（根据经销商初次的电子币确定卡的类型）、子经销商个数（子经销商的注册由父经销商进行，父经销商的直接子经销商不超过2个）、级别（根据周期消费总额确定经销商级别）；另外经销商有个层级结构，&lt;/p&gt;
&lt;p&gt;最后系统当然还要对应经销商的登录信息，默认系统会有个登陆密码；经销商在注册子经销商时，会从自己扣除一部分电子币附加到子经销商上。&lt;/p&gt;
&lt;p&gt;从整个需求的理解并通过对DDD理解来看，我们会有两个聚合，分别是经销商聚合（包括经销商、联系人、层级）和登陆聚合。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/56104/201805/56104-20180502112320884-1451078124.png&quot; alt=&quot;&quot; width=&quot;595&quot; height=&quot;312&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.经销商聚合根：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Dealers:IAggregationRoot
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Dealers() { }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Code { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        [Key]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Tel { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;decimal&lt;/span&gt; TotalEleMoney { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;decimal&lt;/span&gt; JiangJInMoney { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;decimal&lt;/span&gt; TotalPV { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; CardType CardType { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Level Level { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; SubCount { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Contact&amp;gt; Contacts { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; DealerTree DealerTree { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt; CardType : &lt;span&gt;int&lt;/span&gt;&lt;span&gt;
    {
        普通会员&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
        银卡会员&lt;/span&gt;=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
        金卡会员&lt;/span&gt;=&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt; Level : &lt;span&gt;int&lt;/span&gt;&lt;span&gt;
    {
        片区经理&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
        省区经理&lt;/span&gt;=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;,
        大区经理&lt;/span&gt;=&lt;span&gt;3&lt;/span&gt;&lt;span&gt;,
        董事&lt;/span&gt;=&lt;span&gt;4&lt;/span&gt;&lt;span&gt;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.联系人值对象：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Contact : IValueObject
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Contact() { }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ContactName { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; ContactTel { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Province { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; City { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Zero { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Street { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; IsDefaultContact IsDefault { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }&lt;/span&gt;&lt;span&gt;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt; IsDefaultContact : &lt;span&gt;int&lt;/span&gt;&lt;span&gt;
    {
        默认&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
        非默认&lt;/span&gt;=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.层次结构值对象：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; DealerTree : IValueObject
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; DealerTree() { }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid DealerId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid? ParentDealerId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Layer { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从经销商聚合大家可以看到，在创建一个经销商时，除了有经销商的基本信息外，还必须同时创建联系人与层次结构，这样一个经销商才是完整的，而且经销商也引用到了联系人与层次结构。&lt;/p&gt;
&lt;p&gt;4.登录聚合根：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Login : IAggregationRoot
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Login() { }
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;代表登录的电话号码&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Code { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Password { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid DealerId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        [Key]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid Id { &lt;span&gt;get&lt;/span&gt; ; &lt;span&gt;set&lt;/span&gt;&lt;span&gt; ; }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.处理经销商界限上下文与数据访问上下文的映射&lt;/p&gt;
&lt;p&gt;关于如何讲经销商界限上下文映射到数据访问上下文，请参考产品上下文的相关实现，这里就不再累述了。&lt;/p&gt;
&lt;p&gt;下一篇文章开始讲经销商上下文仓储的实现，因为在注册子经销商的领域逻辑中，会通过仓储去判断当前经销商是否子经销商个数超过2个。&lt;/p&gt;
&lt;p&gt;QQ讨论群：&lt;span lang=&quot;EN-US&quot;&gt;309287205&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;DDD实战进阶视频请关注微信公众号：&lt;img src=&quot;https://images2018.cnblogs.com/blog/56104/201805/56104-20180502113226097-1323446519.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 02 May 2018 03:59:00 +0000</pubDate>
<dc:creator>曹剑</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/malaoko/p/8979429.html</dc:identifier>
</item>
<item>
<title>Unity脚本编程之——协程（Coroutine） - 果子鲤鱼</title>
<link>http://www.cnblogs.com/gozili/p/8979181.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gozili/p/8979181.html</guid>
<description>&lt;p&gt;本文翻译自Unity官方文档：https://docs.unity3d.com/Manual/Coroutines.html&lt;/p&gt;
&lt;p&gt;专有名词：&lt;/p&gt;
&lt;p&gt;Coroutine 　　协程&lt;/p&gt;
&lt;p&gt;Alpha 　　不透明度&lt;/p&gt;
&lt;p&gt;当你调用一个函数时，它会在返回之前一直运行到结束。这实际上意味着在一个函数中发生的任何行为都必须在一个帧更新中发生；函数调用不能用于包含过程动画或事件序列。例如，考虑逐步减少对象的alpha（不透明度）值的任务，直到它也变得完全不可见。&lt;/p&gt;
&lt;div readability=&quot;13&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; Fade() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;float&lt;/span&gt; f = 1f; f &amp;gt;= &lt;span&gt;0&lt;/span&gt;; f -= &lt;span&gt;0.1f&lt;/span&gt;&lt;span&gt;) {
        Color c &lt;/span&gt;=&lt;span&gt; renderer.material.color;
        c.a &lt;/span&gt;=&lt;span&gt; f;
        renderer.material.color &lt;/span&gt;=&lt;span&gt; c;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正如你所看到的实际情况那样，Fade()函数不会有你所期望的效果。为了让渐变变得可见，必须通过一系列帧更新来减少alpha值，以显示正在渲染的中间值。但是，该函数将在单个更新中全部执行了，中间值将永远不会被看到，对象将立即消失。&lt;/p&gt;
&lt;div readability=&quot;9.5&quot;&gt;
&lt;p&gt;可以通过向Update()函数添加代码来处理类似的情况，该函数基于逐帧执行渐变。然而，使用Coroutine来完成这类任务通常更加方便。&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;Coroutine就像这样一个函数，它具有暂停执行和将控制权返回Unity的功能，但在接下来的帧中继续执行。在C#中，Coroutine是这样声明的：&lt;/p&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;IEnumerator Fade() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;float&lt;/span&gt; f = 1f; f &amp;gt;= &lt;span&gt;0&lt;/span&gt;; f -= &lt;span&gt;0.1f&lt;/span&gt;&lt;span&gt;) {
        Color c &lt;/span&gt;=&lt;span&gt; renderer.material.color;
        c.a &lt;/span&gt;=&lt;span&gt; f;
        renderer.material.color &lt;/span&gt;=&lt;span&gt; c;
        &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它本质是一个函数，它使用返回类型为IEnumerator声明，并且包含在主体的某个地方的yield return语句。yield return那一行是执行暂停的点，并将返回到接下来的帧中。你需要通过StarCoroutine设置协程的运行。&lt;/p&gt;
&lt;div readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;void&lt;/span&gt;&lt;span&gt; Update() {
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (Input.GetKeyDown(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)) {
        StartCoroutine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Fade&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在UnityScript中，事情稍微简单一些。任何包含yield语句的函数都被理解为协程（Coroutine），而IEumerator返回类型不需要显式声明。&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Fade() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; f = 1.0; f &amp;gt;= 0; f -= 0.1&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; c =&lt;span&gt; renderer.material.color;
        c.a &lt;/span&gt;=&lt;span&gt; f;
        renderer.material.color &lt;/span&gt;=&lt;span&gt; c;
        yield;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样，可以在UnityScript中启动协程（Coroutine），只需当成一个普通的正常函数调用就可以了。&lt;/p&gt;
&lt;div readability=&quot;13&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Update() {
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (Input.GetKeyDown(&quot;f&quot;&lt;span&gt;)) {
        Fade();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你会注意到，在Fade()函数中，循环计数器在协程（Coroutine）的声明周期中保持其正确的值。事实上，任何变量或参数都将在yield之间得到正确的保留。&lt;/p&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span&gt;默认情况下，在yield之后，在这一帧中会恢复一个协程（Coroutine），但是也可以使用WaitForSeconds来引入时间延迟。在UnityScript中是这样的：&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; Fade() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; f = 1.0; f &amp;gt;= 0; f -= 0.1&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; c =&lt;span&gt; renderer.material.color;
        c.a &lt;/span&gt;=&lt;span&gt; f;
        renderer.material.color &lt;/span&gt;=&lt;span&gt; c;
        yield WaitForSeconds(&lt;/span&gt;0.1&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这可以作为一种实现一段时间内的类似传播效果的方式，但同时也是一种有用的优化。游戏中的许多任务需要定期进行，最明显的方法是将它们包含在Update函数中。但是，这个函数通常每秒会被调用多次。当一项任务不需要频繁地重复时，你可以把它放入一个协程（Coroutine），以定期更新，但不是每一帧都更新。一个例子可能是警告玩家是否敌人在附近。一般的UnityScript代码看起来像这样子：&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; ProximityCheck() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; enemies.Length; i++&lt;span&gt;) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (Vector3.Distance(transform.position, enemies[i].transform.position) &amp;lt;&lt;span&gt; dangerDistance) {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }
    }
    
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果有很多敌人，然后调用这个函数，每一帧都会引入一个显著的开销。但是，你可以用协程（Coroutine）每隔十分之一秒来调用它：&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;IEnumerator DoCheck() {
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(;;) {
        ProximityCheck;
        yield &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WaitForSeconds(.1f);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这将大大减少检查的次数，而不会对游戏性产生任何明显的影响。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;注意：当一个MonoBehaviour被禁用（disable）时，协程（Coroutine）并没有停止，但是只有当它被完全摧毁（destroyed）时才会停止。你可以使用MonoBehaviour.StopCoroutine和MonoBehaviour.StopAllCoroutines来停止协程（Coroutine）的执行。当Monobehaviour被摧毁时（destroyed），协程也会停止。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 02 May 2018 02:48:00 +0000</pubDate>
<dc:creator>果子鲤鱼</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gozili/p/8979181.html</dc:identifier>
</item>
<item>
<title>国内外云服务现状及发展探讨 - Mars小歪</title>
<link>http://www.cnblogs.com/zjh0301/p/8979149.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zjh0301/p/8979149.html</guid>
<description>&lt;p&gt;&lt;span&gt;一    &lt;/span&gt;&lt;strong&gt;云计算的起源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任何东西都不可能是凭空出现的，云计算的出现与许许多多相关领域的技术发展密不可分，其中不得不提的是分时系统，这是人工智能之父麦卡锡1958年在MIT任职时提出的将计算机的批处理方式改造成为能同时允许数十甚至上百用户使用的分时方式的建议，提出了把计算能力作为一种像水和电一样的公共事业提供给用户（这在天价的大型机时代，是计算机普及化的貌似唯一出路）。当然由于英特网的是在1969年之后才出现的，所以当时还不能想象坐在家里使用大型机的资源，当时想到的是多套外设终端分时共用服务端资源，也就是一台大型机接多套外设。&lt;/p&gt;
&lt;p&gt;说分时系统的提出意义重大是因为后来出现的虚拟化、云计算等都有分时系统的概念和影子。&lt;/p&gt;
&lt;p&gt;云计算的第一个里程碑是，1999年Salesforce.com提出的通过一个网站向企业提供企业级的应用的概念，推出通过互联网交付的 CRM 产品（Salesforce专门做CRM软件，现在也还很牛）。&lt;/p&gt;
&lt;p&gt;另一个重要进展是2002年&lt;a href=&quot;https://www.baidu.com/s?wd=%E4%BA%9A%E9%A9%AC%E9%80%8A&amp;amp;from=1012015a&amp;amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Y4uhD4uyu-uA79nAcvPWu-0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHn3n1mLnjmz&quot;&gt;亚马逊&lt;/a&gt;(Amazon)提供一组包括存储空间，&lt;a href=&quot;https://www.baidu.com/s?wd=%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B&amp;amp;from=1012015a&amp;amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Y4uhD4uyu-uA79nAcvPWu-0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHn3n1mLnjmz&quot;&gt;计算能力&lt;/a&gt;甚至人工智能等资源服务的Web Service。 2005年&lt;a href=&quot;https://www.baidu.com/s?wd=%E4%BA%9A%E9%A9%AC%E9%80%8A&amp;amp;from=1012015a&amp;amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Y4uhD4uyu-uA79nAcvPWu-0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHn3n1mLnjmz&quot;&gt;亚马逊&lt;/a&gt;又提出了弹性计算云(Elastic Compute Cloud)，也称&lt;a href=&quot;https://www.baidu.com/s?wd=%E4%BA%9A%E9%A9%AC%E9%80%8A&amp;amp;from=1012015a&amp;amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Y4uhD4uyu-uA79nAcvPWu-0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHn3n1mLnjmz&quot;&gt;亚马逊&lt;/a&gt; EC2，的Web Service，允许小企业和私人租用亚马逊的计算机来运行他们自己的应用。&lt;/p&gt;
&lt;p&gt;2006年8月9日，Google首席执行官埃里克·施密特（Eric Schmidt）在搜索引擎大会（SES San Jose 2006）首次提出“云计算”（Cloud Computing）的概念。&lt;/p&gt;
&lt;p&gt;至此，Cloud Computing这个名字逐渐被业界接受和推广。&lt;/p&gt;

&lt;p&gt;全球公有云服务市场方面，根据Gartner 2017年的调研，亚马逊云（AWS）和微软云（Azure）是公有云市场两大主要玩家，分别占47.1%和10%的市场份额，紧跟其后的是谷歌云（3.95%）和IBM Softlayer（2.77%）。&lt;/p&gt;
&lt;p&gt;国内公有云服务市场，根据IDC数据显示，阿里云 2017 年上半年 IaaS 营收 5 亿美元，占据 47.6% 中国市场份额 ; 腾讯云位居第二，营收约 1 亿美元左右，份额为 9.6%; 金山云位居第三，营收 6839 万美元，份额 6.5%; 中国电信位居第四，营收 6254 万美元，份额 6%;Ucloud 营收 5774 万美元，排名第五，份额 5.5%。&lt;/p&gt;
&lt;p&gt;在对全球及国内云服务市场进行比较后，我们发现了许多惊人的类似之处，首先全球云服务老大亚马逊占到全球云服务市场的近47.1%，而国内老大阿里云占到了国内云服务市场的47.6%；同时，两位老大的市场占有率都有了明显提升，亚马逊从16年的44.2%提升了近3个百分点，而阿里云在国内云服务市场的份额更是在16年的基础上增加了7个百分点左右。从数据上看，近来来虽然云服务厂商如雨后春笋般涌现，但是，云服务的市场份额逐渐向行业巨头集中的趋势依然明显。在可见的将来，云服务市场一超多强的局面将会加剧，同时很大一部分缺乏特色、规模、技术、资金等优势的云服务商将会出局。   &lt;/p&gt;
&lt;p&gt;这种趋势从市场的角度出发来看，其实在情理之中的。云的出现，对于客户来说，只管使用资源，而不再接触底层运维，虽然这降低了客户的运维压力和信息化基础投入，但是，黑盒子似的交付方式也让很多客户对于自己的信息系统及相关业务数据存在一定的担忧，在各大云服务商把自己的服务吹得天花乱坠的时候，很多客户可能面临选择困难，这是客户往往只能从品牌、服务规模和市场占有率来确认云服务的等级。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1384442/201805/1384442-20180502104144077-1597338243.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;通过对全球云服务市场和国内云服务市场的对比，我们可以清楚的发现两者有着明显的差异。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全球云服务细分市场份额占比：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1384442/201805/1384442-20180502104159984-1967166049.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;国内云服务细分市场占比（借用智研咨询的数据）：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1384442/201805/1384442-20180502104211965-838070477.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;对比国内外云服务市场的数据，我们发现在全球市场SaaS的市场份额一直大于IaaS市场份额，特别是在云服务的起步阶段。而国内市场，一直是IaaS市场占据了大部分的市场份额。&lt;/p&gt;
&lt;p&gt;从这里，我们可以看出国内外客户在使用云服务市场时的主要驱动力还是存在差异，总体来说，云服务市场在国外起步较早，整个云生态相对较为完善，一些在市场上非常具有话语权的软件公司介入云服务市场较早，所以很早就推出了相应的SaaS服务，且国外市场标准性、流程性的应用接受度相对较多，这也为SaaS服务的推广提供了先决条件。而国内市场方面，由于很多软件应用系统的开发商在市场上的话语权不如很多国外同行，且其SaaS服务起步较晚，目前还很难形成规模。同时，由于国内市场对于软件应用系统的定制化需求千差万别，很难套用同一套流程及标准，太多的个性化需求限制了SaaS服务的快速发展。但在可见的未来，以很多对数据安全性要求不敏感，流程基本趋同的应用系统SaaS市场将由于成本的优势而快速发展。&lt;/p&gt;

&lt;p&gt;在分析前说个题外话曾经有个空调厂商在一个细分的空调市场占有率达到50-60%，这时他的营销策略就放在了推广该细分技术上，当时作为吃瓜群众的我非常吃惊，在业界大佬没有充分进入该市场竞争时，他的主要精力不是放在扩大自身技术优势和壁垒、形成相关行业标准上，果然，在该细分技术概念炒热后，随着各业界主力厂商的涉足，该厂商的该细分市场占比急剧萎缩。在笔者看来，在没有拥有绝对优势的面前，市场占比远远比市场整体蛋糕大小要重要得多。&lt;/p&gt;
&lt;p&gt;在云服务市场的竞争中，以上事情依然具有相当的借鉴意义。笔者认为以亚马逊、阿里等为代表的云服务商领导品牌应该在技术领先性、云服务事实标准等方面大力推进，这个优先级应该高于云服务的市场接受度推广，争取在社会大众普遍认同云服务形式前，扩大自己的技术、服务优势，加大自身在云服务行业的话语权。以国内市场为例，虽然目前阿里云一家独大，但是在以华为为代表的云服务挑战者面前，阿里应该给予充分警惕。虽然在个人、互联网企业等市场，阿里云的优势将在很长的时间内持续。但是，如果在将来大企业普遍接受云服务形式的时候，传统厂商的营销渠道、营销能力的优势将会得到极大展现，到时谁能笑到最后还未可知。&lt;/p&gt;
&lt;p&gt;而对于一些小型的云服务商，随着云服务市场的竞争日趋激烈，缺乏自身特色云服务商的日子将会越来越艰难。对于，小型的云服务商一定要找准自身定位。&lt;/p&gt;
&lt;p&gt;比如，如果你的目标客户是一些对安全看重的公司，那么，你是不是可以主打安全的概念呢。以笔者对云服务市场目前主流云服务厂商的了解，基本没有一家能够给客户给予非常专业及肯定的安全建议，这可能也出于自身避责和担心客户过度关注安全问题而放弃上云的考虑，但是对于安全关注型客户，本人还是觉得让客户清晰认识安全形势，包括在自营机房面临的安全威胁，是非常必要的。那同时这里就延伸出一个问题，如果一个非常关注安全的企业上云，如果按照目前各云服务商的安全提供体系，安全服务成本可能会出现远超客户预期的情况。这时，我们的云服务商是否可以提出一篮子的打包解决方案呢。&lt;/p&gt;
&lt;p&gt;那对于有的云服务商，在规模、实力、安全等方面的都没有的明显的优势，这时可否把服务做成自己的特色呢？对于市场上很多大企业而已，服务的不可控往往难以接受，对于某个业务系统来说不是说完全不能中断，但如果中断之后，处理的过程不可控对于大企业的运维部门将会面临着更大压力和风险。所以，对于这部分的企业，云服务商介入其日常运维，且让其更大程度的让其参与其自身系统云上故障处理，往往可能更容易被接受。&lt;/p&gt;

&lt;p&gt;云服务作为下一轮信息化形势将会越来越多的被企业、政府、个人所接受，在未来几年内，云服务变得和移动支付一样普遍也不是不可能的事情。&lt;/p&gt;

</description>
<pubDate>Wed, 02 May 2018 02:43:00 +0000</pubDate>
<dc:creator>Mars小歪</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zjh0301/p/8979149.html</dc:identifier>
</item>
</channel>
</rss>