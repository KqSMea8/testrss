<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Python socket - 再见紫罗兰</title>
<link>http://www.cnblogs.com/linxiyue/p/8265006.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/linxiyue/p/8265006.html</guid>
<description>&lt;p&gt;Python的网络编程主要支持两种网络协议：TCP和UDP。这两种协议都通过叫Socket的编程抽象进行处理。Socket起源于Unix，是类似于文件的存在，可以像文件一样进行I/O、打开、关闭等操作，最主要的是它可以实现网络上不同主机的进程间通信，所以基本上Socket是任何一种网络通讯中最基础的内容。&lt;/p&gt;
&lt;p&gt;Python中建立一个套接字很简单：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import socket
s = socket.socket(family, type)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;地址族&lt;/h3&gt;
&lt;p&gt;family为地址族，该族指定要使用的网络协议，主要使用的有：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AF_INET：IPv4协议(TCP，UDP)&lt;/li&gt;
&lt;li&gt;AF_INET6：IPv6协议(TCP，UDP)&lt;/li&gt;
&lt;li&gt;AF_UNIX：UNIX域协议，用于同一台机器的进程间通讯&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;套接字类型&lt;/h3&gt;
&lt;p&gt;type为套接字类型，指定给定的协议组中使用的通信类型：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;SOCK_STREAM：用于TCP&lt;/li&gt;
&lt;li&gt;SOCK_DGRAM：用于UDP&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;TCP和UDP都是基于Client/Server的编程模型，所以Socket编程也分为客户端和服务器端，以TCP为例：&lt;/p&gt;
&lt;h3&gt;TCP客户端编程&lt;/h3&gt;
&lt;p&gt;要获取远程主机的ip地址，可以使用socket标准库提供的gethostbyname()方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; import socket
&amp;gt;&amp;gt;&amp;gt; socket.gethostbyname('www.baidu.com')
'115.239.211.112'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;socket套接字实例s可用于客户端的方法有以下几个：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;s.connect(addr)：连接服务器端套接字。addr格式取决于地址族，对于IPv4来说，是一个包含ip地址与端口的元组，(host, port)。连接失败会报socket.error错误。&lt;/li&gt;
&lt;li&gt;s.sendall(string)：尝试发送所有数据，成功则返回None，失败则报异常。&lt;/li&gt;
&lt;li&gt;s.recv(bufsize)：接收数据，bufsize指定接收的最大数据量。&lt;/li&gt;
&lt;li&gt;s.close()：关闭套接字&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;OK，现在可以用socket向远程主机发送一个HTTP GET请求了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #建立套接字
host = 'www.baidu.com'
port = 80
ip = socket.gethostbyname(host)  #获取ip
s.connect((ip, port))  #建立连接
message = 'GET / HTTP/1.1\r\n\r\n'
s.sendall(message)  #发送GET请求
r = s.recv(4096)    #接收数据
print r
s.close()    #关闭套接字
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
HTTP/1.1 302 Moved Temporarily
Date: Wed, 10 Jan 2018 18:56:45 GMT
Content-Type: text/html
Content-Length: 225
Connection: Keep-Alive
Location: http://www.baidu.com/search/error.html
Server: BWS/1.1
X-UA-Compatible: IE=Edge,chrome=1
BDPAGETYPE: 3
Set-Cookie: BDSVRTM=0; path=/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面我们可以实现自己的服务器。&lt;/p&gt;
&lt;h3&gt;TCP服务器端编程&lt;/h3&gt;
&lt;p&gt;Socket实例与服务器端编程有关的方法有以下几个：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;s.bind(addr)：addr也是(host, port)形式的元组，将套接字绑定到特定的地址和端口上。空字符串表示任意地址，'broadcast'可以用做发送广播信息。&lt;/li&gt;
&lt;li&gt;s.listen(backlog)：开始监听连接，backlog为最大挂起连接次数。&lt;/li&gt;
&lt;li&gt;s.accept：返回元组(conn，addr)，conn为新的套接字，可以用来发送和接收数据。addr是客户端的套接字地址。&lt;/li&gt;
&lt;li&gt;s.recv()、s.sendall()和s.close()与客户端同。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;现在写一个将客户端发送来的信息发送回去的服务器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket
import sys
 
HOST = ''   
PORT = 8088

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(5)
print '开始监听'
conn, addr = s.accept()
print 'Connected with ' + addr[0] + ':' + str(addr[1])
data = conn.recv(1024)
conn.sendall(data)
conn.close()
s.close()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; 
开始监听
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务器开始监听连接了。修改一下刚才写的客户端程序：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = 'localhost'
port = 8088
s.connect((host, port))  #建立连接
message = 'GET / HTTP/1.1\r\n\r\n'
s.sendall(message)  #发送GET请求
r = s.recv(4096)    #接收数据
print r
s.close()    #关闭套接字
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行，连接本地的服务器，服务器端输出：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; 
开始监听
Connected with 127.0.0.1:60933
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;连接成功。客户端输出：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; 
GET / HTTP/1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发送的消息被返回了。&lt;/p&gt;
&lt;p&gt;这就是一个最简单的服务器了。上述服务器只能处理一次连接，这显然不是我们想看到的，保持一直运行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket
import sys
 
HOST = ''   
PORT = 8088

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(5)
print '开始监听'
while True:
    conn, addr = s.accept()
    print 'Connected with ' + addr[0] + ':' + str(addr[1])
    data = conn.recv(1024)
    conn.sendall(data)
    conn.close()
s.close()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在就可以使用客户端无限连接了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; 
开始监听
Connected with 127.0.0.1:61240
Connected with 127.0.0.1:61242
Connected with 127.0.0.1:61245
Connected with 127.0.0.1:61250
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;服务器端多线程处理连接&lt;/h3&gt;
&lt;p&gt;现在服务器端虽然可以处理无限多个连接，但只能一个一个的处理，后面的客户端连接只能等待前面的连接完成才能发送数据。要同时处理多个连接，可以使用多线程。服务器端接收到新的连接后，开启一个线程处理新连接，主线程去建立下一个连接。&lt;/p&gt;
&lt;p&gt;服务器端：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;40&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket
import threading

HOST = ''   
PORT = 8088

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(5)
print '开始监听'

def runThread(conn):
    data = conn.recv(1024)
    print data
    conn.sendall(data)
    conn.close()

while True:
    conn, addr = s.accept()
    print 'Connected with ' + addr[0] + ':' + str(addr[1])
    t = threading.Thread(target=runThread, args=(conn,))
    t.daemon = True
    t.start()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端启动多个连接：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket
import time
import threading

def run():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    host = 'localhost'
    port = 8088
    s.connect((host, port)) 
    message = 'GET / HTTP/1.1\r\n\r\n'
    s.sendall(message) 
    print s.recv(4096)    
    s.close()

                
if __name__ == '__main__':
    for i in xrange(4):
        t = threading.Thread(target=run)
        t.start()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
开始监听
Connected with 127.0.0.1:61772
GET / HTTP/1.1

Connected with 127.0.0.1:61773
GET / HTTP/1.1

Connected with 127.0.0.1:61774
GET / HTTP/1.1

Connected with 127.0.0.1:61775
GET / HTTP/1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;UDP编程&lt;/h3&gt;
&lt;p&gt;UDP与TCP的不同之处在于UDP是不用建立连接的。&lt;/p&gt;
&lt;p&gt;在此需要使用s.recvfrom()与s.sendto()方法，前者与s.recv()相同，但返回(data, addr)的元组，addr为数据发送端的套接字地址，后者发送数据时需要加入要发送的远程地址。&lt;/p&gt;
&lt;p&gt;服务器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind(('', 10000))
while True:
    data, addr = s.recvfrom(1024)
    print '接收到%s的连接'%str(addr)
    s.sendto(data, addr)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# -*- coding: utf-8 -*-
import socket

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.sendto('Hello World', ('localhost', 10000))
r, addr = s.recvfrom(1024)
print r
s.close()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; 
接收到('127.0.0.1', 64112)的连接
&amp;gt;&amp;gt;&amp;gt; 
Hello World
&lt;/pre&gt;&lt;/div&gt;



</description>
<pubDate>Sat, 13 Jan 2018 19:47:00 +0000</pubDate>
<dc:creator>再见紫罗兰</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/linxiyue/p/8265006.html</dc:identifier>
</item>
<item>
<title>工程之殇 - 轩脉刃</title>
<link>http://www.cnblogs.com/yjf512/p/8281261.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yjf512/p/8281261.html</guid>
<description>&lt;p&gt;今天晚上的心路历程好让人泄气。&lt;/p&gt;
&lt;p&gt;继续揣摩laravel项目中ValidationException的设计，看到里面的status，觉得好奇怪，为什么是叫status，不是直接把code设置一下呢？然后想想，好像也对，code是异常的代码，而status是http response的代码，两个不应该混为一谈。&lt;/p&gt;
&lt;p&gt;接下来我想看下既然ValidationException没有设置code，那laravel中是怎么做到在渲染的时候把http response statuscode 设置为status的。然后就看到了render里面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/136188/201801/136188-20180114023603332-2117032120.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一次看到这个代码，恶心坏了，这个分支的结构，真是太恶心了。然而琢磨了几个小时之后，直到写这篇文章的时候，我有种错觉，我已经把这坨shi吃下去了...&lt;/p&gt;
&lt;p&gt;首先我想着是不是能优化下这个函数，是不是能把这里的渲染逻辑放到exception中呢？嗯，好像很完美。但是想想，不对啊。。。我定义一个异常的时候还需要定义好它的渲染方式，定义好它的json输出，html输出？明显不好。。。好，我只能接受在一个大类handler.php里面统一作处理。&lt;/p&gt;
&lt;p&gt;其次我想，是不是可以再定义一个基类，让所有的类继承这个类。这里几个类最好的可能就是HttpResponse了。然后其他两个都继承这个类？然后在这个基类里面写一些逻辑？不对啊。。。不管你这个基类是什么，它还是一个异常，不应该在这个异常里面做这么复杂的事情啊。同上。而且，都继承这个类，子类里面也要有各种实现。。。不妥不妥。&lt;/p&gt;
&lt;p&gt;好，那么我整理下handler类可好，封装一个函数，把所有的异常都进行遍历可好。但是这个方法可能就是二维的了，request是否json，和异常类型，两个纬度。那么，又是一个很恶心的函数。&lt;/p&gt;
&lt;p&gt;呵呵，总而言之，好像没有最优美的解决方案了。遂放弃优化这块。&lt;/p&gt;
&lt;p&gt;想想，这个明显是作者的设计不足。设计不够有扩展性。我又详细看了下laravel的异常，几个很大的问题：&lt;/p&gt;
&lt;p&gt;1 异常继承随便继承，没有收口，以后要做统一处理，只能一个个遍历处理。有的继承Exception，有的继承Sysforny的Exception，有的继承Responseable接口。。。各种混乱。&lt;/p&gt;
&lt;p&gt;2 输出格式没有统一。各种不同的异常需要不同的输出格式，再加上是否调试模式，这里已经有好几个分支了。没有考虑过统一的格式过滤。&lt;/p&gt;
&lt;p&gt;哎，优雅的laravel内部还是很多问题的。这个地方，不是很优雅。但是，只能说，介于历史包袱，它只能做到这样了。&lt;/p&gt;
&lt;p&gt;于是我想到我们平时的业务工程，不就是和这种项目一样么，越来越久之后，背上承重的壳，也就这么痛苦不堪了。so，这就是工程之殇。&lt;/p&gt;
&lt;p&gt;于是，我只能啥都不改，悻悻地上床睡觉。又是一个胡思乱想晚上。&lt;/p&gt;
</description>
<pubDate>Sat, 13 Jan 2018 18:37:00 +0000</pubDate>
<dc:creator>轩脉刃</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yjf512/p/8281261.html</dc:identifier>
</item>
<item>
<title>Linux 笔记 #03# 在 Debian远程服务器上运行 Java socket程序 - xkfx</title>
<link>http://www.cnblogs.com/xkxf/p/8280878.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xkxf/p/8280878.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我&lt;/span&gt;试图做什么&lt;/strong&gt;&lt;/span&gt;：把我的破代码放到服务器上运行，并成功与客户端进行 &lt;code&gt;socket通信&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;预备环境：&lt;/strong&gt;&lt;/span&gt;刚安装好 MySQL 和 JVM 的 Linux远程服务器（&lt;code&gt;Debian 8&lt;/code&gt;）一台。&lt;/p&gt;
&lt;p&gt;主要有如下几个步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;将编译好的代码打包成可执行的 &lt;code&gt;jar包&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;在 Debian 上&lt;code&gt;用 JDBC 连接 MySQL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;socket客户端进程&lt;/code&gt;连接 &lt;code&gt;socket服务端进程&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1、将编译好的代码打包成可执行的 jar包 &lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180114011524394-1285450320.png&quot; alt=&quot;&quot; width=&quot;456&quot; height=&quot;104&quot;/&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.jetbrains.com/help/idea/packaging-a-module-into-a-jar-file.html&quot; target=&quot;_blank&quot;&gt;[IntelliJ IDEA 2017.3 Help] Packaging a Module into a JAR File&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置 &lt;code&gt;Artifacts&lt;/code&gt; 有两个关键点，把程序入口写入 &lt;code&gt;MANIFEST.MF&lt;/code&gt; 以及把编译后的代码添加进去（一定要包括依赖包，要不然丢服务器上跑会出现 &lt;code&gt;ClassNotFoundException&lt;/code&gt;），这样才能创建可运行的 jar包。实测有效：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180114001308144-1946622963.png&quot; alt=&quot;&quot; width=&quot;518&quot; height=&quot;126&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;2、在 &lt;code&gt;Debian&lt;/code&gt; 上用 JDBC 连接 MySQL&lt;/h3&gt;
&lt;p&gt;首先，需要在 Debian 上导入相关的数据库，把预先准备的 &lt;code&gt;.sql 脚本&lt;/code&gt;通过 &lt;code&gt;Xftp&lt;/code&gt; 传到服务器上，传输好后执行如下操作：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;readlink&lt;/span&gt; -&lt;span&gt;f schema.sql # 取得 schema.sql 的绝对路径并复制它！
mysql &lt;/span&gt;-u root -&lt;span&gt;p
source &lt;/span&gt;/root/schema.sql # 导入数据
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 通过 &lt;code&gt;&lt;span class=&quot;pln&quot;&gt;netstat &lt;span class=&quot;pun&quot;&gt;-&lt;span class=&quot;pln&quot;&gt;tln&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt; 确认 MySQL 确实在监听 3306 端口：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
Proto Recv-Q Send-&lt;span&gt;Q Local Address           Foreign Address         State      
tcp        &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;      &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt;              &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:*&lt;span&gt;               LISTEN     
&lt;strong&gt;tcp        &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;0&lt;/span&gt;      &lt;span&gt;0&lt;/span&gt; &lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;3306&lt;/span&gt;          &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:*               LISTEN &lt;/strong&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 把 jar包传送到服务器（在这之前，&lt;strong&gt;请确认数据库密码是正确的！&lt;/strong&gt;），并尝试启动它：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
java -jar main.jar
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError:&lt;/span&gt; chatroom/main/ServerTest : Unsupported major.minor version 52.0&lt;span&gt;
    at java.lang.ClassLoader.defineClass1(Native Method)
    at java.lang.ClassLoader.defineClass(ClassLoader.java:&lt;/span&gt;803&lt;span&gt;)
    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:&lt;/span&gt;142&lt;span&gt;)
    at java.net.URLClassLoader.defineClass(URLClassLoader.java:&lt;/span&gt;449&lt;span&gt;)
    at java.net.URLClassLoader.access$&lt;/span&gt;100(URLClassLoader.java:71&lt;span&gt;)
    at java.net.URLClassLoader$&lt;/span&gt;1.run(URLClassLoader.java:361&lt;span&gt;)
    at java.net.URLClassLoader$&lt;/span&gt;1.run(URLClassLoader.java:355&lt;span&gt;)
    at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（试求一下此时我的心理阴影面积）&lt;/p&gt;
&lt;p&gt; 这个时候昨天写的笔记就起作用了 &lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/xkxf/p/8277582.html&quot;&gt;Linux 笔记 #02# Installing MySQL &amp;amp; Installing the Default JRE/JDK&lt;/a&gt; ，找到原来的教程安装另外一个版本的 &lt;code&gt;JDK&lt;/code&gt;（&lt;span&gt;早知道这样一开始就该安装 &lt;code&gt;Oracle JDK8&lt;/code&gt;！&lt;/span&gt;）&lt;/p&gt;

&lt;h3&gt;3、&lt;code&gt;socket客户端进程&lt;/code&gt;连接 &lt;code&gt;socket服务端进程&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;大功告成图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180114015814707-1224539086.png&quot; alt=&quot;&quot; width=&quot;456&quot; height=&quot;244&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1042431/201801/1042431-20180114015933222-1178195033.png&quot; alt=&quot;&quot; width=&quot;343&quot; height=&quot;133&quot;/&gt;&lt;/p&gt;
&lt;p&gt;刚开始连了好久连不上，然后谷歌了很久&lt;code&gt;“如何打开 debian xxx 端口”&lt;/code&gt;，最后才想起是没有添加阿里云的&lt;code&gt;“安全组规则”&lt;/code&gt;，具体操作可以参考这个：&lt;a id=&quot;cb_post_title_url&quot; href=&quot;http://www.cnblogs.com/wxjnew/p/6962023.html&quot; target=&quot;_blank&quot;&gt;阿里云服务器Tomcat无法从外部访问&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 13 Jan 2018 18:21:00 +0000</pubDate>
<dc:creator>xkfx</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xkxf/p/8280878.html</dc:identifier>
</item>
<item>
<title>Python爬虫下载美女图片（不同网站不同方法） - Vrapile</title>
<link>http://www.cnblogs.com/Vrapile/p/8280996.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Vrapile/p/8280996.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; time() {
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; a = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date().getTime();
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; parseInt(a / 1000&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; microtime(b) {
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; a = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date().getTime();
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; c = parseInt(a / 1000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; b ? (a / 1000) : (a - (c * 1000)) / 1000 + &quot; &quot; +&lt;span&gt; c
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; chr(a) {
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; String.fromCharCode(a)
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; ord(a) {
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; a.charCodeAt()
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5(a) {
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; hex_md5(a)
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; base64_encode(a) {
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; btoa(a)
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; base64_decode(a) {
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; atob(a)
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; } (&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(g) {
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; o(u, z) {
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; w = (u &amp;amp; 65535) + (z &amp;amp; 65535&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;         v = (u &amp;gt;&amp;gt; 16) + (z &amp;gt;&amp;gt; 16) + (w &amp;gt;&amp;gt; 16&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; (v &amp;lt;&amp;lt; 16) | (w &amp;amp; 65535&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; s(u, v) {
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; (u &amp;lt;&amp;lt; v) | (u &amp;gt;&amp;gt;&amp;gt; (32 -&lt;span&gt; v))
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; c(A, w, v, u, z, y) {
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; o(s(o(o(w, A), o(u, y)), z), v)
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; b(w, v, B, A, u, z, y) {
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; c((v &amp;amp; B) | ((~v) &amp;amp;&lt;span&gt; A), w, v, u, z, y)
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; i(w, v, B, A, u, z, y) {
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; c((v &amp;amp; A) | (B &amp;amp; (~&lt;span&gt;A)), w, v, u, z, y)
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; n(w, v, B, A, u, z, y) {
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; c(v ^ B ^&lt;span&gt; A, w, v, u, z, y)
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; a(w, v, B, A, u, z, y) {
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; c(B ^ (v | (~&lt;span&gt;A)), w, v, u, z, y)
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; d(F, A) {
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;         F[A &amp;gt;&amp;gt; 5] |= 128 &amp;lt;&amp;lt; (A % 32&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;         F[(((A + 64) &amp;gt;&amp;gt;&amp;gt; 9) &amp;lt;&amp;lt; 4) + 14] =&lt;span&gt; A;
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; w, z, y, v, u, E = 1732584193&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;         D = -271733879&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;         C = -1732584194&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;         B = 271733878&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (w = 0; w &amp;lt; F.length; w += 16&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;             z =&lt;span&gt; E;
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;             y =&lt;span&gt; D;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;             v =&lt;span&gt; C;
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;             u =&lt;span&gt; B;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;             E = b(E, D, C, B, F[w], 7, -680876936&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;             B = b(B, E, D, C, F[w + 1], 12, -389564586&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;             C = b(C, B, E, D, F[w + 2], 17, 606105819&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;             D = b(D, C, B, E, F[w + 3], 22, -1044525330&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;             E = b(E, D, C, B, F[w + 4], 7, -176418897&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;             B = b(B, E, D, C, F[w + 5], 12, 1200080426&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;             C = b(C, B, E, D, F[w + 6], 17, -1473231341&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;             D = b(D, C, B, E, F[w + 7], 22, -45705983&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;             E = b(E, D, C, B, F[w + 8], 7, 1770035416&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;             B = b(B, E, D, C, F[w + 9], 12, -1958414417&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;             C = b(C, B, E, D, F[w + 10], 17, -42063&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;             D = b(D, C, B, E, F[w + 11], 22, -1990404162&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;             E = b(E, D, C, B, F[w + 12], 7, 1804603682&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;             B = b(B, E, D, C, F[w + 13], 12, -40341101&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;             C = b(C, B, E, D, F[w + 14], 17, -1502002290&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;             D = b(D, C, B, E, F[w + 15], 22, 1236535329&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;             E = i(E, D, C, B, F[w + 1], 5, -165796510&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;             B = i(B, E, D, C, F[w + 6], 9, -1069501632&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;             C = i(C, B, E, D, F[w + 11], 14, 643717713&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;             D = i(D, C, B, E, F[w], 20, -373897302&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;             E = i(E, D, C, B, F[w + 5], 5, -701558691&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;             B = i(B, E, D, C, F[w + 10], 9, 38016083&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;             C = i(C, B, E, D, F[w + 15], 14, -660478335&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;             D = i(D, C, B, E, F[w + 4], 20, -405537848&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;             E = i(E, D, C, B, F[w + 9], 5, 568446438&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;             B = i(B, E, D, C, F[w + 14], 9, -1019803690&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;             C = i(C, B, E, D, F[w + 3], 14, -187363961&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;             D = i(D, C, B, E, F[w + 8], 20, 1163531501&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;             E = i(E, D, C, B, F[w + 13], 5, -1444681467&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;             B = i(B, E, D, C, F[w + 2], 9, -51403784&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;             C = i(C, B, E, D, F[w + 7], 14, 1735328473&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;             D = i(D, C, B, E, F[w + 12], 20, -1926607734&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;             E = n(E, D, C, B, F[w + 5], 4, -378558&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;             B = n(B, E, D, C, F[w + 8], 11, -2022574463&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt;             C = n(C, B, E, D, F[w + 11], 16, 1839030562&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;             D = n(D, C, B, E, F[w + 14], 23, -35309556&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;             E = n(E, D, C, B, F[w + 1], 4, -1530992060&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;             B = n(B, E, D, C, F[w + 4], 11, 1272893353&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;             C = n(C, B, E, D, F[w + 7], 16, -155497632&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;             D = n(D, C, B, E, F[w + 10], 23, -1094730640&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;             E = n(E, D, C, B, F[w + 13], 4, 681279174&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;             B = n(B, E, D, C, F[w], 11, -358537222&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;             C = n(C, B, E, D, F[w + 3], 16, -722521979&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;             D = n(D, C, B, E, F[w + 6], 23, 76029189&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;             E = n(E, D, C, B, F[w + 9], 4, -640364487&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;             B = n(B, E, D, C, F[w + 12], 11, -421815835&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;             C = n(C, B, E, D, F[w + 15], 16, 530742520&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;             D = n(D, C, B, E, F[w + 2], 23, -995338651&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;             E = a(E, D, C, B, F[w], 6, -198630844&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;             B = a(B, E, D, C, F[w + 7], 10, 1126891415&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;             C = a(C, B, E, D, F[w + 14], 15, -1416354905&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;             D = a(D, C, B, E, F[w + 5], 21, -57434055&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;             E = a(E, D, C, B, F[w + 12], 6, 1700485571&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;             B = a(B, E, D, C, F[w + 3], 10, -1894986606&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;             C = a(C, B, E, D, F[w + 10], 15, -1051523&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;             D = a(D, C, B, E, F[w + 1], 21, -2054922799&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;             E = a(E, D, C, B, F[w + 8], 6, 1873313359&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;             B = a(B, E, D, C, F[w + 15], 10, -30611744&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt;             C = a(C, B, E, D, F[w + 6], 15, -1560198380&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;             D = a(D, C, B, E, F[w + 13], 21, 1309151649&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;             E = a(E, D, C, B, F[w + 4], 6, -145523070&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;             B = a(B, E, D, C, F[w + 11], 10, -1120210379&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;             C = a(C, B, E, D, F[w + 2], 15, 718787259&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;             D = a(D, C, B, E, F[w + 9], 21, -343485551&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;             E =&lt;span&gt; o(E, z);
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;             D =&lt;span&gt; o(D, y);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;             C =&lt;span&gt; o(C, v);
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;             B =&lt;span&gt; o(B, u)
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; [E, D, C, B]
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; p(v) {
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; w, u = &quot;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (w = 0; w &amp;lt; v.length * 32; w += 8&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt;             u += String.fromCharCode((v[w &amp;gt;&amp;gt; 5] &amp;gt;&amp;gt;&amp;gt; (w % 32)) &amp;amp; 255&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; u
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; j(v) {
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; w, u =&lt;span&gt; [];
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;         u[(v.length &amp;gt;&amp;gt; 2) - 1] =&lt;span&gt; undefined;
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (w = 0; w &amp;lt; u.length; w += 1&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;             u[w] = 0
&lt;span&gt;143&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (w = 0; w &amp;lt; v.length * 8; w += 8&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;             u[w &amp;gt;&amp;gt; 5] |= (v.charCodeAt(w / 8) &amp;amp; 255) &amp;lt;&amp;lt; (w % 32&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; u
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; k(u) {
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; p(d(j(u), u.length * 8&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; e(w, z) {
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; v, y =&lt;span&gt; j(w),
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt;         u =&lt;span&gt; [],
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;         x =&lt;span&gt; [],
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; &lt;span&gt;        A;
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;         u[15] = x[15] =&lt;span&gt; undefined;
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (y.length &amp;gt; 16&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;             y = d(y, w.length * 8&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (v = 0; v &amp;lt; 16; v += 1&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt;             u[v] = y[v] ^ 909522486&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;             x[v] = y[v] ^ 1549556828
&lt;span&gt;164&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt;         A = d(u.concat(j(z)), 512 + z.length * 8&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; p(d(x.concat(A), 512 + 128&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; t(w) {
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; z = &quot;0123456789abcdef&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt;         v = &quot;&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt; &lt;span&gt;        u, y;
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (y = 0; y &amp;lt; w.length; y += 1&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt;             u =&lt;span&gt; w.charCodeAt(y);
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt;             v += z.charAt((u &amp;gt;&amp;gt;&amp;gt; 4) &amp;amp; 15) + z.charAt(u &amp;amp; 15&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; v
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; m(u) {
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; unescape(encodeURIComponent(u))
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; q(u) {
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; k(m(u))
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; l(u) {
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; t(q(u))
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; h(u, v) {
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; e(m(u), m(v))
&lt;/span&gt;&lt;span&gt;189&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;190&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; r(u, v) {
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; t(h(u, v))
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; f(v, w, u) {
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;w) {
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;u) {
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; l(v)
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;198&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; q(v)
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;u) {
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; r(w, v)
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;203&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; h(w, v)
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;typeof&lt;/span&gt; define === &quot;function&quot; &amp;amp;&amp;amp;&lt;span&gt; define.amd) {
&lt;/span&gt;&lt;span&gt;206&lt;/span&gt;         define(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; f
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt; &lt;span&gt;        })
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt;         g.md5 =&lt;span&gt; f
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt; } (&lt;span&gt;this&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt; 
&lt;span&gt;214&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5(source) {
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; safe_add(x, y) {
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; lsw = (x &amp;amp; 65535) + (y &amp;amp; 65535&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt;         msw = (x &amp;gt;&amp;gt; 16) + (y &amp;gt;&amp;gt; 16) + (lsw &amp;gt;&amp;gt; 16&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; msw &amp;lt;&amp;lt; 16 | lsw &amp;amp; 65535
&lt;span&gt;219&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;220&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; bit_rol(num, cnt) {
&lt;/span&gt;&lt;span&gt;221&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; num &amp;lt;&amp;lt; cnt | num &amp;gt;&amp;gt;&amp;gt; 32 -&lt;span&gt; cnt
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5_cmn(q, a, b, x, s, t) {
&lt;/span&gt;&lt;span&gt;224&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5_ff(a, b, c, d, x, s, t) {
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; md5_cmn(b &amp;amp; c | ~b &amp;amp;&lt;span&gt; d, a, b, x, s, t)
&lt;/span&gt;&lt;span&gt;228&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5_gg(a, b, c, d, x, s, t) {
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; md5_cmn(b &amp;amp; d | c &amp;amp; ~&lt;span&gt;d, a, b, x, s, t)
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;232&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5_hh(a, b, c, d, x, s, t) {
&lt;/span&gt;&lt;span&gt;233&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; md5_cmn(b ^ c ^&lt;span&gt; d, a, b, x, s, t)
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; md5_ii(a, b, c, d, x, s, t) {
&lt;/span&gt;&lt;span&gt;236&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; md5_cmn(c ^ (b | ~&lt;span&gt;d), a, b, x, s, t)
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; binl_md5(x, len) {
&lt;/span&gt;&lt;span&gt;239&lt;/span&gt;         x[len &amp;gt;&amp;gt; 5] |= 128 &amp;lt;&amp;lt; len % 32&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;240&lt;/span&gt;         x[(len + 64 &amp;gt;&amp;gt;&amp;gt; 9 &amp;lt;&amp;lt; 4) + 14] =&lt;span&gt; len;
&lt;/span&gt;&lt;span&gt;241&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; i, olda, oldb, oldc, oldd, a = 1732584193&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;242&lt;/span&gt;         b = -271733879&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;243&lt;/span&gt;         c = -1732584194&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;244&lt;/span&gt;         d = 271733878&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; x.length; i += 16&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;246&lt;/span&gt;             olda =&lt;span&gt; a;
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt;             oldb =&lt;span&gt; b;
&lt;/span&gt;&lt;span&gt;248&lt;/span&gt;             oldc =&lt;span&gt; c;
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt;             oldd =&lt;span&gt; d;
&lt;/span&gt;&lt;span&gt;250&lt;/span&gt;             a = md5_ff(a, b, c, d, x[i], 7, -680876936&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt;             d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;252&lt;/span&gt;             c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;253&lt;/span&gt;             b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt;             a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;255&lt;/span&gt;             d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;256&lt;/span&gt;             c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;257&lt;/span&gt;             b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt;             a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;259&lt;/span&gt;             d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;260&lt;/span&gt;             c = md5_ff(c, d, a, b, x[i + 10], 17, -42063&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt;             b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;262&lt;/span&gt;             a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt;             d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;264&lt;/span&gt;             c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;265&lt;/span&gt;             b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;266&lt;/span&gt;             a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;267&lt;/span&gt;             d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;268&lt;/span&gt;             c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;269&lt;/span&gt;             b = md5_gg(b, c, d, a, x[i], 20, -373897302&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;270&lt;/span&gt;             a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;271&lt;/span&gt;             d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;272&lt;/span&gt;             c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;273&lt;/span&gt;             b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;274&lt;/span&gt;             a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;275&lt;/span&gt;             d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;276&lt;/span&gt;             c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;277&lt;/span&gt;             b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;278&lt;/span&gt;             a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;279&lt;/span&gt;             d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;280&lt;/span&gt;             c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;281&lt;/span&gt;             b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;282&lt;/span&gt;             a = md5_hh(a, b, c, d, x[i + 5], 4, -378558&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;283&lt;/span&gt;             d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;284&lt;/span&gt;             c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;285&lt;/span&gt;             b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;286&lt;/span&gt;             a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;287&lt;/span&gt;             d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;288&lt;/span&gt;             c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;289&lt;/span&gt;             b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;290&lt;/span&gt;             a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;291&lt;/span&gt;             d = md5_hh(d, a, b, c, x[i], 11, -358537222&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;292&lt;/span&gt;             c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;293&lt;/span&gt;             b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;294&lt;/span&gt;             a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;295&lt;/span&gt;             d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;296&lt;/span&gt;             c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;297&lt;/span&gt;             b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;298&lt;/span&gt;             a = md5_ii(a, b, c, d, x[i], 6, -198630844&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;299&lt;/span&gt;             d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;300&lt;/span&gt;             c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;301&lt;/span&gt;             b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;302&lt;/span&gt;             a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;303&lt;/span&gt;             d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;304&lt;/span&gt;             c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;305&lt;/span&gt;             b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;306&lt;/span&gt;             a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;307&lt;/span&gt;             d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;308&lt;/span&gt;             c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;309&lt;/span&gt;             b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;310&lt;/span&gt;             a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;311&lt;/span&gt;             d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;312&lt;/span&gt;             c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;313&lt;/span&gt;             b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;314&lt;/span&gt;             a =&lt;span&gt; safe_add(a, olda);
&lt;/span&gt;&lt;span&gt;315&lt;/span&gt;             b =&lt;span&gt; safe_add(b, oldb);
&lt;/span&gt;&lt;span&gt;316&lt;/span&gt;             c =&lt;span&gt; safe_add(c, oldc);
&lt;/span&gt;&lt;span&gt;317&lt;/span&gt;             d =&lt;span&gt; safe_add(d, oldd)
&lt;/span&gt;&lt;span&gt;318&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;319&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; [a, b, c, d]
&lt;/span&gt;&lt;span&gt;320&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;321&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; binl2rstr(input) {
&lt;/span&gt;&lt;span&gt;322&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; i, output = &quot;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;323&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; input.length * 32; i += 8) output += String.fromCharCode(input[i &amp;gt;&amp;gt; 5] &amp;gt;&amp;gt;&amp;gt; i % 32 &amp;amp; 255&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;324&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; output
&lt;/span&gt;&lt;span&gt;325&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;326&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; rstr2binl(input) {
&lt;/span&gt;&lt;span&gt;327&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; i, output =&lt;span&gt; [];
&lt;/span&gt;&lt;span&gt;328&lt;/span&gt;         output[(input.length &amp;gt;&amp;gt; 2) - 1] =&lt;span&gt; undefined;
&lt;/span&gt;&lt;span&gt;329&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; output.length; i += 1) output[i] = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;330&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; input.length * 8; i += 8) output[i &amp;gt;&amp;gt; 5] |= (input.charCodeAt(i / 8) &amp;amp; 255) &amp;lt;&amp;lt; i % 32&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;331&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; output
&lt;/span&gt;&lt;span&gt;332&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;333&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; rstr_md5(s) {
&lt;/span&gt;&lt;span&gt;334&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; binl2rstr(binl_md5(rstr2binl(s), s.length * 8&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;335&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;336&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; rstr_hmac_md5(key, data) {
&lt;/span&gt;&lt;span&gt;337&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; i, bkey =&lt;span&gt; rstr2binl(key),
&lt;/span&gt;&lt;span&gt;338&lt;/span&gt;         ipad =&lt;span&gt; [],
&lt;/span&gt;&lt;span&gt;339&lt;/span&gt;         opad =&lt;span&gt; [],
&lt;/span&gt;&lt;span&gt;340&lt;/span&gt; &lt;span&gt;        hash;
&lt;/span&gt;&lt;span&gt;341&lt;/span&gt;         ipad[15] = opad[15] =&lt;span&gt; undefined;
&lt;/span&gt;&lt;span&gt;342&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (bkey.length &amp;gt; 16) bkey = binl_md5(bkey, key.length * 8&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;343&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; 16; i += 1&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;344&lt;/span&gt;             ipad[i] = bkey[i] ^ 909522486&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;345&lt;/span&gt;             opad[i] = bkey[i] ^ 1549556828
&lt;span&gt;346&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;347&lt;/span&gt;         hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;348&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; binl2rstr(binl_md5(opad.concat(hash), 512 + 128&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;349&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;350&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; rstr2hex(input) {
&lt;/span&gt;&lt;span&gt;351&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; hex_tab = &quot;0123456789abcdef&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;352&lt;/span&gt;         output = &quot;&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;353&lt;/span&gt; &lt;span&gt;        x, i;
&lt;/span&gt;&lt;span&gt;354&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (i = 0; i &amp;lt; input.length; i += 1&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;355&lt;/span&gt;             x =&lt;span&gt; input.charCodeAt(i);
&lt;/span&gt;&lt;span&gt;356&lt;/span&gt;             output += hex_tab.charAt(x &amp;gt;&amp;gt;&amp;gt; 4 &amp;amp; 15) + hex_tab.charAt(x &amp;amp; 15&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;357&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;358&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; output
&lt;/span&gt;&lt;span&gt;359&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;360&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; str2rstr_utf8(input) {
&lt;/span&gt;&lt;span&gt;361&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; unescape(encodeURIComponent(input))
&lt;/span&gt;&lt;span&gt;362&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;363&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; raw_md5(s) {
&lt;/span&gt;&lt;span&gt;364&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; rstr_md5(str2rstr_utf8(s))
&lt;/span&gt;&lt;span&gt;365&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;366&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; hex_md5(s) {
&lt;/span&gt;&lt;span&gt;367&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; rstr2hex(raw_md5(s))
&lt;/span&gt;&lt;span&gt;368&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;369&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; raw_hmac_md5(k, d) {
&lt;/span&gt;&lt;span&gt;370&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))
&lt;/span&gt;&lt;span&gt;371&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;372&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; hex_hmac_md5(k, d) {
&lt;/span&gt;&lt;span&gt;373&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; rstr2hex(raw_hmac_md5(k, d))
&lt;/span&gt;&lt;span&gt;374&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;375&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; hex_md5(source)
&lt;/span&gt;&lt;span&gt;376&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;377&lt;/span&gt; 
&lt;span&gt;378&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; OOXX(m, r, d) {
&lt;/span&gt;&lt;span&gt;379&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; e = &quot;DECODE&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;380&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; r = r ? r: &quot;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;381&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; d = d ? d: 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;382&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; q = 4&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;383&lt;/span&gt;     r =&lt;span&gt; md5(r);
&lt;/span&gt;&lt;span&gt;384&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; o = md5(r.substr(0, 16&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;385&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; n = md5(r.substr(16, 16&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;386&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (q) {
&lt;/span&gt;&lt;span&gt;387&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (e == &quot;DECODE&quot;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;388&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; l = m.substr(0&lt;span&gt;, q)
&lt;/span&gt;&lt;span&gt;389&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;390&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;391&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; l = &quot;&quot;
&lt;span&gt;392&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;393&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; c = o + md5(o +&lt;span&gt; l);
&lt;/span&gt;&lt;span&gt;394&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; k;
&lt;/span&gt;&lt;span&gt;395&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (e == &quot;DECODE&quot;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;396&lt;/span&gt;         m =&lt;span&gt; m.substr(q);
&lt;/span&gt;&lt;span&gt;397&lt;/span&gt;         k =&lt;span&gt; base64_decode(m)
&lt;/span&gt;&lt;span&gt;398&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;399&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; h = &lt;span&gt;new&lt;/span&gt; Array(256&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;400&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; g = 0; g &amp;lt; 256; g++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;401&lt;/span&gt;         h[g] =&lt;span&gt; g
&lt;/span&gt;&lt;span&gt;402&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;403&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; b = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Array();
&lt;/span&gt;&lt;span&gt;404&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; g = 0; g &amp;lt; 256; g++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;405&lt;/span&gt;         b[g] = c.charCodeAt(g %&lt;span&gt; c.length)
&lt;/span&gt;&lt;span&gt;406&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;407&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; f = g = 0; g &amp;lt; 256; g++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;408&lt;/span&gt;         f = (f + h[g] + b[g]) % 256&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;409&lt;/span&gt;         tmp =&lt;span&gt; h[g];
&lt;/span&gt;&lt;span&gt;410&lt;/span&gt;         h[g] =&lt;span&gt; h[f];
&lt;/span&gt;&lt;span&gt;411&lt;/span&gt;         h[f] =&lt;span&gt; tmp
&lt;/span&gt;&lt;span&gt;412&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;413&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; t = &quot;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;414&lt;/span&gt;     k = k.split(&quot;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;415&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; p = f = g = 0; g &amp;lt; k.length; g++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;416&lt;/span&gt;         p = (p + 1) % 256&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;417&lt;/span&gt;         f = (f + h[p]) % 256&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;418&lt;/span&gt;         tmp =&lt;span&gt; h[p];
&lt;/span&gt;&lt;span&gt;419&lt;/span&gt;         h[p] =&lt;span&gt; h[f];
&lt;/span&gt;&lt;span&gt;420&lt;/span&gt;         h[f] =&lt;span&gt; tmp;
&lt;/span&gt;&lt;span&gt;421&lt;/span&gt;         t += chr(ord(k[g]) ^ (h[(h[p] + h[f]) % 256&lt;span&gt;]))
&lt;/span&gt;&lt;span&gt;422&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;423&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (e == &quot;DECODE&quot;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;424&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; ((t.substr(0, 10) == 0 || t.substr(0, 10) - time() &amp;gt; 0) &amp;amp;&amp;amp; t.substr(10, 16) == md5(t.substr(26) + n).substr(0, 16&lt;span&gt;)) {
&lt;/span&gt;&lt;span&gt;425&lt;/span&gt;             t = t.substr(26&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;426&lt;/span&gt;         } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;427&lt;/span&gt;             t = &quot;&quot;
&lt;span&gt;428&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;429&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;430&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; t
&lt;/span&gt;&lt;span&gt;431&lt;/span&gt; };
&lt;/pre&gt;</description>
<pubDate>Sat, 13 Jan 2018 17:07:00 +0000</pubDate>
<dc:creator>Vrapile</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Vrapile/p/8280996.html</dc:identifier>
</item>
<item>
<title>通用后台管理系统UI模板-AdminLTE简介及构造动态菜单栏 - xdxxdx</title>
<link>http://www.cnblogs.com/roy-blog/p/8280933.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/roy-blog/p/8280933.html</guid>
<description>&lt;p&gt;AdminLTE是一款基于bootstrap的后台管理系统的通用模板UI，它的样式美观且较为符合大多数后台管理系统的需求，典型的上|左右|下的布局形式。并且提供了一整套我们开发的时候可能用到的UI样式，比如表格，表单，图表，日历等。非常适合像我这样对样式编排不太擅长的后端开发者。有了它，我们可以不用自己去写很多复杂的html，css。而把更多时间和精力留在后台的开发上。&lt;/p&gt;
&lt;p&gt;话不多说，接下来我简要的介绍一下这款模板UI框架的用法。&lt;/p&gt;
&lt;p&gt;官网：&lt;a title=&quot;https://adminlte.io/&quot; href=&quot;https://adminlte.io/&quot; target=&quot;_blank&quot;&gt;https://adminlte.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该款框架是免费的，可以直接在官网下载，下载下来的文件大概有50多兆，包含了所有的html,css,js，还有很多的demo。可供我们随时查阅学习。&lt;/p&gt;
&lt;p&gt;先来看看整体的UI的风格吧，是不是挺炫酷的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/998564/201801/998564-20180113215052457-1738862642.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以说几乎所有的后台需要用到的样式都可以从中寻找得到。&lt;/p&gt;
&lt;p&gt;由于全套的UI都是静态数据，所以本篇文章着重介绍一下如何&lt;strong&gt;动态构造左侧的菜单栏&lt;/strong&gt;。这应该也是大家比较关心的问题。&lt;/p&gt;
&lt;p&gt;所谓的动态就是指的是从数据库或者文件，或者内存中取到的数据。&lt;/p&gt;
&lt;p&gt;本人习惯将菜单的数据写成一个静态的js文件，放在项目的js目录中，这样做的好处是不必每次都去从数据库请求，减少IO操作造成的性能和时间损失，当然你也可以从数据库去请求，甚至把菜单数据放入到redis等内存数据库。各类方法都不影响我们前端代码的编写，因为传递的数据格式都是json.&lt;/p&gt;
&lt;p&gt;1.将菜单数据写入一个json文件，代码如下。该文件的路径为webapp/static/json/menu.json。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[{&lt;br/&gt;&quot;menuId&quot;:&quot;1&quot;,&lt;br/&gt;&quot;name&quot;: &quot;基本信息&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;#&quot;,&lt;br/&gt;&quot;child&quot;: []&lt;br/&gt;},{&lt;br/&gt;&quot;menuId&quot;:&quot;2&quot;,&lt;br/&gt;&quot;name&quot;: &quot;会员管理&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;#&quot;,&lt;br/&gt;&quot;child&quot;: [{&lt;br/&gt;&quot;menuId&quot;:&quot;3&quot;,&lt;br/&gt;&quot;pMenuId&quot;:&quot;2&quot;,&lt;br/&gt;&quot;name&quot;: &quot;会员概览&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;user/home&quot;&lt;br/&gt;},{&lt;br/&gt;&quot;menuId&quot;:&quot;4&quot;,&lt;br/&gt;&quot;pMenuId&quot;:&quot;2&quot;,&lt;br/&gt;&quot;name&quot;: &quot;添加会员&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;user/add&quot;&lt;br/&gt;}] &lt;br/&gt;},{&lt;br/&gt;&quot;menuId&quot;:&quot;5&quot;,&lt;br/&gt;&quot;name&quot;: &quot;销售管理&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;#&quot;,&lt;br/&gt;&quot;child&quot;: [{&lt;br/&gt;&quot;menuId&quot;:&quot;5&quot;,&lt;br/&gt;&quot;pMenuId&quot;:&quot;6&quot;,&lt;br/&gt;&quot;name&quot;: &quot;销售返佣&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;post/home&quot;&lt;br/&gt;},{&lt;br/&gt;&quot;menuId&quot;:&quot;5&quot;,&lt;br/&gt;&quot;pMenuId&quot;:&quot;7&quot;,&lt;br/&gt;&quot;name&quot;: &quot;销售报表&quot;,&lt;br/&gt;&quot;controller&quot;:&quot;post/add&quot;&lt;br/&gt;}]&lt;br/&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至于如何写入到文件，我们可以在每次修改菜单以后，先获取菜单的json数据，然后调用如下代码来将菜单的json数据写入文件。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; generateMenuJson(String jsonStr) {
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            File f &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; File(ServletActionContext.getServletContext()
                    .getRealPath(&lt;/span&gt;&quot;/static/json&quot;) + &quot;/menu.json&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;f.exists()) {
                f.createNewFile();
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 定义编码&lt;/span&gt;
            OutputStreamWriter write = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; OutputStreamWriter(
                    &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; FileOutputStream(f), &quot;UTF-8&quot;&lt;span&gt;);
            BufferedWriter writer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; BufferedWriter(write);
            writer.write(jsonStr);
            writer.close();
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            e.printStackTrace();
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.前台ajax获取json数据，并且动态构造出html元素及样式。&lt;/p&gt;
&lt;p&gt;主要是用了jQuery ajax异步获取数据，还有就是jquery的append（）方法，代码没有什么高深的，只是拼接的时候要很认真。一个取巧的方法是去下载下来的html源码中复制一些关键的代码，避免写错。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; $(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    $.ajax({
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         type: 'get'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         url:'static/json/menu.json'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         dataType:'json'&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         success:&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; menu=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; html=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; childLen=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; child=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; json=&lt;span&gt;data;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            console.log(json);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; json){
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 menu=&lt;span&gt;json[i];
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这里默认展开第一个主菜单&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(i==0&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                     html=$('&amp;lt;li menu-id=&quot;'+i+'&quot; class=&quot;active treeview &quot;&amp;gt;&amp;lt;li&amp;gt;'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     html=$('&amp;lt;li menu-id=&quot;'+i+'&quot; class=&quot;treeview &quot;&amp;gt;&amp;lt;li&amp;gt;'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 $(&quot;.sidebar .sidebar-menu&quot;&lt;span&gt;).append(html);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;                 html=$('&amp;lt;a href=&quot;'+menu.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-dashboard&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span&amp;gt;'+menu.name+'&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;pull-right-container&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-angle-left pull-right&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;ul menuUL-id=&quot;'+i+'&quot; class=&quot;treeview-menu&quot;&amp;gt;&amp;lt;/ul&amp;gt;'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 $('[menu-id=&quot;'+i+'&quot;]'&lt;span&gt;).append(html);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;继续遍历二级菜单&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;                 childLen=&lt;span&gt;menu.child.length;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                 &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; j &lt;span&gt;in&lt;/span&gt;&lt;span&gt; menu.child){
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;                     child=&lt;span&gt;menu.child[j];
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这里默认设置第一个子菜单为选中状态&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt;(j==0&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;                             html=$('&amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;'+child.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-circle-o&quot;&amp;gt;&amp;lt;/i&amp;gt;'+child.name+'&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                     }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;                             html=$('&amp;lt;li&amp;gt;&amp;lt;a href=&quot;'+child.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-circle-o&quot;&amp;gt;&amp;lt;/i&amp;gt;'+child.name+'&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                    }            
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;                     $('[menuUL-id=&quot;'+i+'&quot;]'&lt;span&gt;).append(html);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     
&lt;span&gt;39&lt;/span&gt; &lt;span&gt;});
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相信大家对照demo中的html源码，可以很容易的理解上述代码。我们把原来的左侧菜单的静态html注释掉，引入上述的js文件。看看效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/998564/201801/998564-20180113222554191-935451839.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样基本实现了菜单显示的效果。但是还有一个缺点，&lt;strong&gt;就是菜单不能根据页面动态变换样式，比如我们在会员概览页面，此时展开的是会员管理，选中的是会员概览。而当我们到了销售管理的时候，我们又希望此时菜单能展开销售管理主菜单并选中相应的子菜单。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要实现这个功能，我们需要在上述的js代码中传入当前访问的链接的菜单id，以及其父级菜单id(如果是最上层的菜单，则其父菜单为自己）。然后根据这两个参数来进行菜单是否展开即是否选中的判断。具体步骤如下。&lt;/p&gt;
&lt;p&gt;1.菜单实体如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.wonyen.entity;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TMenu {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; menuId;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;菜单编号&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; pMenuId;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;父菜单编号&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; String name;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;菜单名称&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; String controller;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;菜单对应的controller&lt;/span&gt;
  &lt;span&gt;  &lt;span&gt;public &lt;span&gt;int&lt;/span&gt;&lt;/span&gt; getMenuId() {&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; menuId;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;public &lt;span&gt;void&lt;/span&gt;&lt;/span&gt; setMenuId(int menuId) {&lt;br/&gt;&lt;span&gt;this&lt;/span&gt;.menuId = menuId;&lt;br/&gt;}
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getpMenuId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pMenuId;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setpMenuId(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; pMenuId) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.pMenuId =&lt;span&gt; pMenuId;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getController() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; controller;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setController(String controller) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.controller =&lt;span&gt; controller;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.获取当前菜单对象，并传入到前台。以会员概览页面为例，代码如下。第8行获取了当前的菜单对象，第9行将其传入到ModelAndView对象中，我们就可以在转发的jsp页面中拿到这个menu对象了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;     @RequestMapping(&quot;partnerHome&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView partnerHome(ParamModel pm) {
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         ModelAndView mv = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;back/partner/PartnerList&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         mv.addObject(&quot;pm&quot;&lt;span&gt;, pm);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         List&amp;lt;TPartnerLevel&amp;gt; partnerLevelList =&lt;span&gt; partnerLevelService
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;                .getPartnerLevelList();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         mv.addObject(&quot;partnerLevelList&quot;&lt;span&gt;, partnerLevelList);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         TMenu menu=menuService.getMenuByController(&quot;partnerHome&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取当前的菜单信息&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         mv.addObject(&quot;menu&quot;&lt;span&gt;, menu);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mv;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.在每个页面body加入两个属性，menu_id和p_menu_id.如下所示。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;hold-transition skin-red sidebar-mini&quot;&lt;/span&gt;&lt;span&gt; menu_id&lt;/span&gt;&lt;span&gt;=&quot;${menu.menuId}&quot;&lt;/span&gt;&lt;span&gt; p_menu_id&lt;/span&gt;&lt;span&gt;=&quot;${menu.pMenuId}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.重新改写原来js代码，让其支持根据当前页面来变换选中的菜单。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
$(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; () {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; menu_id=$('body').attr('menu_id');&lt;span&gt;//&lt;/span&gt;&lt;span&gt;菜单id&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; p_menu_id=$('body').attr('p_menu_id');&lt;span&gt;//&lt;/span&gt;&lt;span&gt;父级菜单id&lt;/span&gt;
&lt;span&gt;    $.ajax({
        type: &lt;/span&gt;'get'&lt;span&gt;,
        url:&lt;/span&gt;'static/json/menu.json'&lt;span&gt;,
        dataType:&lt;/span&gt;'json'&lt;span&gt;,
        success:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; menu=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; html=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; childLen=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; child=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; json=&lt;span&gt;data;
            console.log(json);
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; json){
                menu&lt;/span&gt;=&lt;span&gt;json[i];
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果父菜单是该菜单，就展开&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt;(menu.menuId==&lt;span&gt;p_menu_id){
                    html&lt;/span&gt;=$('&amp;lt;li menu-id=&quot;'+i+'&quot; class=&quot;active treeview &quot;&amp;gt;&amp;lt;li&amp;gt;'&lt;span&gt;);
                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                    html&lt;/span&gt;=$('&amp;lt;li menu-id=&quot;'+i+'&quot; class=&quot;treeview &quot;&amp;gt;&amp;lt;li&amp;gt;'&lt;span&gt;);
                }
                $(&lt;/span&gt;&quot;.sidebar .sidebar-menu&quot;&lt;span&gt;).append(html);
                html&lt;/span&gt;=$('&amp;lt;a href=&quot;'+menu.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-dashboard&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;span&amp;gt;'+menu.name+'&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;pull-right-container&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-angle-left pull-right&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;ul menuUL-id=&quot;'+i+'&quot; class=&quot;treeview-menu&quot;&amp;gt;&amp;lt;/ul&amp;gt;'&lt;span&gt;);
                $(&lt;/span&gt;'[menu-id=&quot;'+i+'&quot;]'&lt;span&gt;).append(html);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;继续遍历二级菜单&lt;/span&gt;
                childLen=&lt;span&gt;menu.child.length;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; j &lt;span&gt;in&lt;/span&gt;&lt;span&gt; menu.child){
                    child&lt;/span&gt;=&lt;span&gt;menu.child[j];
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果子菜单是该菜单，则设为active选中&lt;/span&gt;
                    &lt;span&gt;if&lt;/span&gt;(child.menuId==&lt;span&gt;menu_id){
                            html&lt;/span&gt;=$('&amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;'+child.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-circle-o&quot;&amp;gt;&amp;lt;/i&amp;gt;'+child.name+'&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;'&lt;span&gt;);
                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                            html&lt;/span&gt;=$('&amp;lt;li&amp;gt;&amp;lt;a href=&quot;'+child.controller+'&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-circle-o&quot;&amp;gt;&amp;lt;/i&amp;gt;'+child.name+'&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;'&lt;span&gt;);
                    }            
                    $(&lt;/span&gt;'[menuUL-id=&quot;'+i+'&quot;]'&lt;span&gt;).append(html);
                }
            }
        }
    
});
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;经过上述步骤以后，我们就可以得到更为合理的左侧菜单了。来看看效果吧。&lt;/p&gt;
&lt;p&gt;--会员概览页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/998564/201801/998564-20180114000342972-1923272088.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;---会员添加页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/998564/201801/998564-20180114000512176-1424497235.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看，已经实现了我们想要的效果。如果你也正在寻找一个后台的UI,赶紧试试吧。&lt;/p&gt;
</description>
<pubDate>Sat, 13 Jan 2018 16:07:00 +0000</pubDate>
<dc:creator>xdxxdx</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/roy-blog/p/8280933.html</dc:identifier>
</item>
<item>
<title>python 浅析类方法与静态方法 - 战争热诚</title>
<link>http://www.cnblogs.com/wj-1314/p/8278126.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wj-1314/p/8278126.html</guid>
<description>&lt;h3&gt;类方法，静态方法的定义&lt;/h3&gt;
&lt;p&gt;        Python 是双面向的,既可以面向函数编程,也可以面向对象编程,所谓面向函数就是单独一个. py 文件,里面没有类,全是一些函数,调用的时候导入模块,通过模块名.函数名()即可调用,完全不需要类,那么你可能会问,那要类还有什么毛用? 类就是用来面向对象编程啦,类可以有自己的属性,类可以创建很多实例,每个实例可以有不同的属性,这也就保存了很多私有的数据,总之都有存在的必要.&lt;/p&gt;
&lt;p&gt;面向对象程序设计中，类方法和静态方法是经常用到的术语，逻辑上将：类方法只能由类名调用，静态方法可以由类名或者对象名调用。在python 语法中，类有三种方法，分别是实例方法，静态方法，类方法&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
class Foo(object):
    '''类三种方法语法形式'''
    &lt;br/&gt;def instance_method(self):
        print(&quot;是类{}的实例方法，只能被实例对象调用&quot;.format(Foo))
&lt;br/&gt;　　
    @staticmethod
    def static_method():
        print(&quot;是静态方法&quot;)
&lt;br/&gt;　　
    @classmethod
    def class_method(cls):
        print(&quot;是类方法&quot;)

foo = Foo()
foo.instance_method()
foo.class_method()
foo.static_method()
print(&quot;---------------&quot;)
Foo.static_method()
Foo.class_method()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可以看出：&lt;/p&gt;
&lt;p&gt;       实例方法只能被实例对象调用，静态方法(由@staticmethod装饰的方法)、类方法(由@classmethod装饰的方法)，可以被类或类的实例对象调用。&lt;br/&gt;   实例方法，第一个参数必须要默认传实例对象，一般习惯用self。对象方法中有self参数，类方法有cls参数，静态方法是不需要这些附加参数（在c++中，是没有类这个概念）&lt;/p&gt;
&lt;div readability=&quot;63&quot;&gt;
&lt;p&gt;静态函数（@staticmethod）:即静态方法，静态方法是一类特殊的方法，有时候你可能需要填写一个属于这个类的方法，但是这些代码完全不会使用到实例对象本身。它主要处理这个类的逻辑关联，如验证数据；而且对参数没有要求。&lt;/p&gt;
&lt;p&gt;类方法（@classmethod）：即类方法，类方法不是绑定到对象上，而是绑定在类上的方法，它更关注于从类中调用方法，而不是从实例中调用方法，如构造重载；&lt;/p&gt;
&lt;p&gt;成员函数：实例的方法，只能通过实例进行调用；第一个参数必须要默认传类，一般习惯用cls。&lt;/p&gt;
&lt;h3&gt;类方法与静态方法说明&lt;/h3&gt;
&lt;p&gt;1：self表示为类型为类的object，而cls表示为类也就是class&lt;/p&gt;
&lt;p&gt;2：在定义普通方法的时候，需要的是参数self,也就是把类的实例作为参数传递给方法，如果不写self的时候，会发现报错TypeError错误，表示传递的参数多了，其实也就是调用方法的时候，将实例作为参数传递了，在使用普通方法的时候，使用的是实例来调用方法，不能使用类来调用方法，没有实例，那么方法将无法调用。&lt;/p&gt;
&lt;p&gt;3：在定义静态方法的时候，和模块中的方法没有什么不同，最大的不同就是在于静态方法在类的命名空间之间，而且在声明静态方法的时候，使用的标记为@staticmethod，表示为静态方法，在叼你用静态方法的时候，可以使用类名或者是实例名来进行调用，一般使用类名来调用&lt;/p&gt;
&lt;p&gt;4：静态方法主要是用来放一些方法的，方法的逻辑属于类，但是有何类本身没有什么交互，从而形成了静态方法，主要是让静态方法放在此类的名称空间之内，从而能够更加有组织性。&lt;/p&gt;
&lt;p&gt;5：在定义类方法的时候，传递的参数为cls.表示为类，此写法也可以变，但是一般写为cls。类的方法调用可以使用类，也可以使用实例，一般情况使用的是类。&lt;/p&gt;
&lt;p&gt;6：在重载调用父类方法的时候，最好是使用super来进行调用父类的方法。静态方法主要用来存放逻辑性的代码，基本在静态方法中，不会涉及到类的方法和类的参数。类方法是在传递参数的时候，传递的是类的参数，参数是必须在cls中进行隐身穿&lt;/p&gt;
&lt;p&gt;7：python中实现静态方法和类方法都是依赖python的修饰器来实现的。静态方法是staticmethod，类方法是classmethod。&lt;/p&gt;
&lt;h3&gt; 静态方法，类方法的使用区别&lt;/h3&gt;
&lt;p&gt;1：类方法用在模拟java定义多个构造函数的情况&lt;/p&gt;
&lt;p&gt;由于python类中只能有一个初始化方法，不能按照不同的情况初始化类，举例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
class book(object):

    def __init__(self,title):
        self.title = title

    @classmethod
    def creat(cls,title):
        book = cls(title=title)
        return book

book1=book(&quot;python&quot;)
book2 = book.creat(&quot;python is my work&quot;)
print(book1)
print(book2)
print(book1.title)
print(book2.title)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　2：类中静态方法方法调用静态方法的情况&lt;/p&gt;
&lt;p&gt;下面的代码，静态方法调用另一个静态方法，如果改用类方法调用静态方法，可以让cls代替类，（让代码看起来精简一些，也防止类名修改了，不用在类定义中修改原来的类名）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
class foo(object):
    x =1
    u =1

    @staticmethod
    def average(*mixes):
        return sum(mixes)/len(mixes)

    @staticmethod
    def static_method():
        return foo.average(foo.x,foo.u)

    @classmethod
    def class_method(cls):
        return cls.average(cls.x,cls.u)

a = foo()
print(a.static_method())
print(a.class_method())
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Sat, 13 Jan 2018 16:03:00 +0000</pubDate>
<dc:creator>战争热诚</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wj-1314/p/8278126.html</dc:identifier>
</item>
<item>
<title>编写内核驱动加载工具 - iBinary</title>
<link>http://www.cnblogs.com/iBinary/p/8280912.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/iBinary/p/8280912.html</guid>
<description>&lt;h2&gt;一丶加载内核驱动的常用API介绍.&lt;/h2&gt;
&lt;p&gt;加载内核驱动,使用我们的ring3下的API即可完成.&lt;/p&gt;
&lt;p&gt;API分别是:&lt;/p&gt;
&lt;p&gt;OpenSCManager  打开设备(服务)管理器&lt;/p&gt;
&lt;p&gt;CreateService　　创建服务(或者设备,根据参数不同而不同)&lt;/p&gt;
&lt;p&gt;OpenService　　   打开设备或者服务.&lt;/p&gt;
&lt;p&gt;StartService           启动服务,启动设备.&lt;/p&gt;
&lt;p&gt;ControlService       控制设备或者服务的状态.&lt;/p&gt;
&lt;p&gt;CloseServiceHandle 关闭服务或者设备的句柄&lt;/p&gt;
&lt;h3&gt;参数介绍:&lt;/h3&gt;
&lt;h4&gt;1.打开设备管理器&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SC_HANDLE OpenSCManager(
  LPCTSTR lpMachineName,   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 机器名称.可以制定计算机,如不指定,给NULL则是打开自己.&lt;/span&gt;
  LPCTSTR lpDatabaseName,  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打开设备管理器数据库的名称,如果为NULL则使用默认的.&lt;/span&gt;
  DWORD dwDesiredAccess    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打开的权限.&lt;/span&gt;
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回值:&lt;/p&gt;
&lt;p&gt;　　成功: 返回设备管理器的句柄&lt;/p&gt;
&lt;p&gt;　　失败: 返回NULL&lt;/p&gt;

&lt;h4&gt;2.创建设备或者服务.&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
SC_HANDLE CreateService( &lt;br/&gt;SC_HANDLE hSCManager,       &lt;span&gt;//设备管理器句柄,通过OpenScManger返回&lt;/span&gt;
  LPCTSTR lpServiceName,      &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备启动的名称&lt;/span&gt;
  LPCTSTR lpDisplayName,      &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者的显示名称&lt;/span&gt;
  DWORD dwDesiredAccess,      &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 访问服务或者设备的权限&lt;/span&gt;
  DWORD dwServiceType,        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建的服务或者设备的类型,如果是内核驱动,则通过这里给&lt;/span&gt;
  DWORD dwStartType,          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备何时启动&lt;/span&gt;
  DWORD dwErrorControl,       &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备如果启动出错,则指定一下应用程序应该怎么做,(重启,或者重新长还是.)&lt;/span&gt;
  LPCTSTR lpBinaryPathName,   &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备的文件路径,必须给.&lt;/span&gt;
  LPCTSTR lpLoadOrderGroup,   &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备排租.&lt;/span&gt;
  LPDWORD lpdwTagId,          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 可以通过注册表来启动服务.&lt;/span&gt;
  LPCTSTR lpDependencies,     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; array of dependency names&lt;/span&gt;
  LPCTSTR lpServiceStartName, &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务的启动名称. &lt;/span&gt;
  LPCTSTR lpPassword          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 密码;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回值:&lt;/p&gt;
&lt;p&gt;　　成功: 返回创建服务或者设备的句柄.&lt;/p&gt;
&lt;p&gt;　　失败: 返回NULL&lt;/p&gt;
&lt;h4&gt;3.打开服务或者设备.&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SC_HANDLE OpenService(
  SC_HANDLE hSCManager,  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设备管理器的句柄,通过OpenScManger返回.&lt;/span&gt;
  LPCTSTR lpServiceName, &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备的名称.&lt;/span&gt;
  DWORD dwDesiredAccess  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 打开服务或者设备的权限.&lt;/span&gt;
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回值:&lt;/p&gt;
&lt;p&gt;　　成功: 返回服务或者设备的句柄.&lt;/p&gt;
&lt;p&gt;　　失败: 返回NULL&lt;/p&gt;
&lt;h4&gt;4.启动服务或者设备.&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;BOOL StartService(
  SC_HANDLE hService,            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备句柄&lt;/span&gt;
  DWORD dwNumServiceArgs,        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 二维数组的个数.&lt;/span&gt;
  LPCTSTR* lpServiceArgVectors   &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 二维数组.其中每组存储一个服务名称.如果是内核驱动则都给NULL即可.&lt;/span&gt;
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回值:&lt;/p&gt;
&lt;p&gt;　　成功: 返回非零值&lt;/p&gt;
&lt;p&gt;　　失败: 返回零值.&lt;/p&gt;
&lt;h4&gt;5.控制服务或者设备.&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;BOOL ControlService(
  SC_HANDLE hService,               &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备句柄,通过OpenService或者CreateService返回.&lt;/span&gt;
  DWORD dwControl,                  &lt;span&gt;//控制代码. 如果给SERVICE_CONTROL_PAUSE那么服务就会暂停&lt;/span&gt;
  LPSERVICE_STATUS lpServiceStatus  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务的状态.是一个结构体,操作系统帮你填好.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结构体:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
typedef &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; _SERVICE_STATUS { 
  DWORD dwServiceType; 　　　　//服务的类型
  DWORD dwCurrentState; 　　　//服务的当前状态,暂停状态还是停止状态....
  DWORD dwControlsAccepted;    //服务的控制码.
  DWORD dwWin32ExitCode; 　　　//服务错误或者停止返回的错误驮
  DWORD dwServiceSpecificExitCode; //服务启动的是否返回的错误代码.
  DWORD dwCheckPoint; 　　　　　//服务开启的是否的用于统计的次数.到达100则启动完成.一般进度条使用
  DWORD dwWaitHint; 
} SERVICE_STATUS, &lt;/span&gt;*LPSERVICE_STATUS//给定一个期望值.时间.然后按照时间一点一点的启动.
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;6.关闭服务句柄.&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;BOOL CloseServiceHandle(
  SC_HANDLE hSCObject   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 服务或者设备的句柄&lt;/span&gt;
);
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;二丶详细代码&lt;/h2&gt;
&lt;p&gt;上面是简单的API介绍.下面则贴出完整的代码.&lt;/p&gt;
&lt;p&gt;请注意我这里使用的是MFC编写的. 但是其每个函数不会互相依赖.如果你是拷贝代码.则之间诶拷贝过去就可以使用.&lt;/p&gt;
&lt;h3&gt;1.安装内核驱动代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
 m_CreateService =&lt;span&gt; CreateService(
        m_ScHand, 
        服务或者设备名称,   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;例如: MySystem.sys&lt;/span&gt;
&lt;span&gt;        服务或者设备的名称,
        SC_MANAGER_ALL_ACCESS,
        SERVICE_KERNEL_DRIVER,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;安装的属性,我这里给的是内核的.所以安装的是内核.&lt;/span&gt;
&lt;span&gt;        SERVICE_DEMAND_START,
        SERVICE_ERROR_SEVERE,
        m_EdtPathName,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_CreateService ==&lt;span&gt; NULL)
    {
        ::CloseServiceHandle(m_CreateService);
        ::CloseServiceHandle(m_ScHand);
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry Install Drive Fail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), NULL);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }
    ::CloseServiceHandle(m_CreateService);
    ::CloseServiceHandle(m_ScHand);
    ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;InStall Drive Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), NULL);
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.卸载代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;51&quot;&gt;
&lt;pre&gt;
     m_ScHand =&lt;span&gt; OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_ScHand ==&lt;span&gt; NULL)
    {
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry OpenScManger Fail\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), MB_ICONEXCLAMATION);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;open Service&lt;/span&gt;
    m_CreateService = OpenService(m_ScHand, m_ServiceName, SERVICE_STOP |&lt;span&gt; DELETE);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_CreateService ==&lt;span&gt; NULL)
    {
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry Install Drive Fail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), NULL);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }
    BOOL bRet &lt;/span&gt;=&lt;span&gt; FALSE;
          bRet &lt;/span&gt;=&lt;span&gt; DeleteService(m_CreateService);
         &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;bRet)
         {
             ::CloseServiceHandle(m_CreateService);
             ::CloseServiceHandle(m_ScHand);
             ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry UnInstall Drive Fail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), NULL);
             &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
         }
        

  
     DeleteService(m_CreateService);
    ::CloseServiceHandle(m_CreateService);
    ::CloseServiceHandle(m_ScHand);
    ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UnInstall Drive Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), NULL);
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.启动内核驱动的代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
　　m_ScHand =&lt;span&gt; NULL;
    m_CreateService &lt;/span&gt;=&lt;span&gt; NULL;
    m_ScHand &lt;/span&gt;=&lt;span&gt; OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_ScHand ==&lt;span&gt; NULL)
    {
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry OpenScManger Fail\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), MB_ICONEXCLAMATION);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;open Service&lt;/span&gt;
    m_CreateService =&lt;span&gt; OpenService(m_ScHand, m_ServiceName, SERVICE_START);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_CreateService ==&lt;span&gt; NULL)
    {
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry Start Drive Fail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), NULL);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }

    UpdateData(TRUE);
    BOOL bRet &lt;/span&gt;= StartService(m_CreateService,&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,NULL); //重要的地方.

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (bRet ==&lt;span&gt; NULL)
    {
        ::CloseServiceHandle(m_CreateService);
        ::CloseServiceHandle(m_ScHand);
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sorry Start Service Fail\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), IDOK);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }

    ::CloseServiceHandle(m_CreateService);
    ::CloseServiceHandle(m_ScHand);
    ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Start Service Sucess\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), IDOK);
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4..暂停内核驱动.&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
m_ScHand =&lt;span&gt; NULL;
    m_CreateService &lt;/span&gt;=&lt;span&gt; NULL;
    UpdateData(TRUE);
    m_ScHand &lt;/span&gt;=&lt;span&gt; OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);  
    SERVICE_STATUS svcsta &lt;/span&gt;= { &lt;span&gt;0&lt;/span&gt;&lt;span&gt; };  
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (m_ScHand !=&lt;span&gt; NULL){  
        SC_HANDLE hService &lt;/span&gt;=&lt;span&gt; OpenService(m_ScHand, m_ServiceName, SERVICE_STOP);  
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (hService !=&lt;span&gt; NULL)
        {  
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (ControlService(m_CreateService, SERVICE_CONTROL_STOP, &amp;amp;&lt;span&gt;svcsta))  
            {  
                CloseServiceHandle(m_CreateService);  
                CloseServiceHandle(m_ScHand);  
                ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Stop Service Sucess\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Sucess&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), IDOK);
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ;  
            }  
            CloseServiceHandle(m_CreateService);  
            CloseServiceHandle(m_ScHand);  
            ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Stop Service Fail\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), IDOK);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ;  
        }  
        CloseServiceHandle(m_ScHand);  
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ;  
    }  
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; 
    {
        ::MessageBox(NULL, TEXT(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; Stop Service Fail\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;), TEXT(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Fail&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;), IDOK);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ;  
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;完整的工程代码资料下载:&lt;/p&gt;
&lt;p&gt;　　链接：&lt;a href=&quot;https://pan.baidu.com/s/1kWoHJZD&quot; target=&quot;_blank&quot;&gt;https://pan.baidu.com/s/1kWoHJZD&lt;/a&gt; 密码：osy7&lt;/p&gt;

&lt;p&gt;原创不易,转载请注明出处.&lt;/p&gt;
</description>
<pubDate>Sat, 13 Jan 2018 15:55:00 +0000</pubDate>
<dc:creator>iBinary</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/iBinary/p/8280912.html</dc:identifier>
</item>
<item>
<title>chrome调试工具高级不完整使用指南（实战二） - 谢灿勇</title>
<link>http://www.cnblogs.com/st-leslie/p/8271347.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/st-leslie/p/8271347.html</guid>
<description>&lt;h2&gt;3.3 给页面添加测试脚本&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;在现实的工作中，我们往往会遇到一些问题在线上就会触发然后本地就触发不了的问题。或者是，要给某个元素写一个测试脚本。这个时候如果是浏览器有提供一个添加脚本的功能的话，那么我们的整个操作就方便多了。具体操作如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113154410097-1761856932.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 我们先来给自己定一个需求，我们要在博客园的tab面板上面添加一个弹窗，弹窗的内容为1&lt;/p&gt;
&lt;p&gt;这个时候的操作如下：首先先把面板切换到Sources，然后再右侧中选中Snippets，接着点击New snippet来，添加的脚本如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
$(&quot;.post_nav_block&quot;).on(&quot;click&quot;,&quot;li&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    alert(&lt;/span&gt;1&lt;span&gt;);
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;[观察netWork中的加载，我们发现博客园使用了jquery，所以我们可以使用jquery的绑定事件，对于不存在jquery引入的网站，我们不能这样使用]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;编写之后保存我们发现点击之后没有反应，其实这个脚本编写之后是需要运行才能够使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113155547457-1979380160.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;右击选择run,只要不触发页面刷新，新加入的脚本是不会停止的，如果触发刷新就会停止脚本的运行，但是脚本还是存在。即使你关闭了浏览器，下一次打开还是存在这个脚本，除非你删除了这个脚本。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113160135238-1327847656.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;3.4  经典的断点调试&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;相信很多前端人员都应该挺熟悉断点调试的吧，不熟悉也没有关系，我们来整理一下。首先我们自己编写如下的一段测试代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;html&amp;gt;
    &amp;lt;script&amp;gt;
        &lt;span&gt;var&lt;/span&gt; a=1&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; b=2&lt;span&gt;;
        console.log(b);
        console.log(a);
    &lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;断点如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113210302347-1674004547.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果我们要在断点3调到断点5，不经过断点4的话，我们可以使用左侧的按钮&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113210440285-1327863027.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果要分别一次进行下去，只需要按下F10&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果有函数的话，要运行到函数内部，可以使用F11&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;其中&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113211319504-1378107046.gif&quot; alt=&quot;&quot;/&gt;是用来开启和关闭断点，当关闭断点后，所有的断点都会失效&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;选中变量，右击菜单选择Add selected text to watches把变量添加到右侧的watch面板，这样可以监控一个变量的当前情况。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;重新编写一段测试代码：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &amp;lt;script&amp;gt;&lt;span&gt;
        test1();
        &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; test1(){
            test2();
        }
        &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; test2(){
            test3(&lt;/span&gt;&quot;this is test&quot;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; test3(params) {
            console.log(params);
        }
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; a=1&lt;span&gt;;
        alert(a);
    &lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;span&gt;然后在test3下面的console.log语句中打断点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们看下右侧的栈调用面板如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113222309832-433792169.gif&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;p&gt;&lt;span&gt;从而我们可以快速的定位到函数的栈调用情况&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;3.5 查看chrome插件的代码&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;chrome中的source提供了一种可以查看插件代码的功能，选中右侧中的Content scripts就可以看到了，如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/728493/201801/728493-20180113232132910-769112595.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;具体的代码就可以将文件夹直接展开就可以了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;source模块的用法大致上也就是这些了。下一节将讲一讲chrome对性能分析上面的利用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/st-leslie/p/8196493.html%20&quot; target=&quot;_blank&quot;&gt; chrome调试工具高级不完整使用指南（基础篇）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/st-leslie/p/8244559.html&quot; target=&quot;_blank&quot;&gt; chrome调试工具高级不完整使用指南（优化篇）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/st-leslie/p/8261319.html&quot; target=&quot;_blank&quot;&gt; chrome调试工具高级不完整使用指南（实战一）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/st-leslie/p/8271347.html&quot; target=&quot;_blank&quot;&gt; chrome调试工具高级不完整使用指南（实战二）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; chrome调试工具高级不完整使用指南（实战三）&lt;/p&gt;

</description>
<pubDate>Sat, 13 Jan 2018 15:24:00 +0000</pubDate>
<dc:creator>谢灿勇</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/st-leslie/p/8271347.html</dc:identifier>
</item>
<item>
<title>CSS选择器：伪类（图文详解） - 生命壹号</title>
<link>http://www.cnblogs.com/smyhvae/p/8280814.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/smyhvae/p/8280814.html</guid>
<description>&lt;blockquote readability=&quot;5.375&quot;&gt;
&lt;p&gt;本文最初发表于&lt;a href=&quot;http://www.cnblogs.com/smyhvae/p/8280814.html&quot;&gt;博客园&lt;/a&gt;，并在&lt;a href=&quot;https://github.com/smyhvae/Web&quot;&gt;GitHub&lt;/a&gt;上持续更新&lt;strong&gt;前端的系列文章&lt;/strong&gt;。欢迎在GitHub上关注我，一起入门和进阶前端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是正文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;伪类伪类选择器&quot;&gt;伪类（伪类选择器）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;伪类&lt;/strong&gt;：同一个标签，根据其&lt;strong&gt;不同的种状态，有不同的样式&lt;/strong&gt;。这就叫做“伪类”。伪类用冒号来表示。&lt;/p&gt;
&lt;p&gt;比如div是属于box类，这一点很明确，就是属于box类。但是a属于什么类？不明确。因为需要看用户点击前是什么状态，点击后是什么状态。所以，就叫做“伪类”。&lt;/p&gt;
&lt;h3 id=&quot;静态伪类和动态伪类&quot;&gt;静态伪类和动态伪类&lt;/h3&gt;
&lt;p&gt;伪类选择器分为两种。&lt;/p&gt;
&lt;p&gt;（1）&lt;strong&gt;静态伪类&lt;/strong&gt;：只能用于&lt;strong&gt;超链接&lt;/strong&gt;的样式。如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;:link&lt;/code&gt; 超链接点击之前&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:visited&lt;/code&gt; 链接被访问过之后&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;PS：以上两种样式，只能用于超链接。&lt;/p&gt;
&lt;p&gt;（2）&lt;strong&gt;动态伪类&lt;/strong&gt;：针对&lt;strong&gt;所有标签&lt;/strong&gt;都适用的样式。如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;:hover&lt;/code&gt; “悬停”：鼠标放到标签上的时候&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:active&lt;/code&gt; “激活”： 鼠标点击标签，但是不松手时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:focus&lt;/code&gt; 是某个标签获得焦点时的样式（比如某个输入框获得焦点）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;PS：以上三种样式，只能用于超链接。&lt;/p&gt;
&lt;h2 id=&quot;超链接a标签&quot;&gt;超链接a标签&lt;/h2&gt;
&lt;h3 id=&quot;超链接的四种状态&quot;&gt;超链接的四种状态&lt;/h3&gt;
&lt;p&gt;a标签有4种伪类（即对应四种状态），要求背诵。如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;:link&lt;/code&gt; “链接”：超链接点击之前&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:visited&lt;/code&gt; “访问过的”：链接被访问过之后&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:hover&lt;/code&gt; “悬停”：鼠标放到标签上的时候&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:active&lt;/code&gt; “激活”： 鼠标点击标签，但是不松手时。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;对应的代码如下：（不带注释）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;        a&lt;span class=&quot;dv&quot;&gt;:link&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        a&lt;span class=&quot;dv&quot;&gt;:visited&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;orange&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        a&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        a&lt;span class=&quot;dv&quot;&gt;:active&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对应的代码如下：（带注释）&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;       /*让超链接点击之前是红色*/
        a:link{
            color:red;
        }

        /*让超链接点击之后是绿色*/
        a:visited{
            color:orange;
        }
        /*鼠标悬停，放到标签上的时候*/
        a:hover{
            color:green;
        }
        /*鼠标点击链接，但是不松手的时候*/
        a:active{
            color:black;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;记住，在css中，这四种状态&lt;strong&gt;必须按照固定的顺序写&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;a:&lt;strong&gt;l&lt;/strong&gt;ink 、a:visited 、a:hover 、a:active&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果不按照顺序，那么将失效。“爱恨准则”：love hate。必须先爱，后恨。&lt;/p&gt;
&lt;p&gt;看一下这四种状态的动图效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20180113_2239.gif&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;超链接的美化&quot;&gt;超链接的美化&lt;/h3&gt;
&lt;p&gt;问：既然&lt;code&gt;a{}&lt;/code&gt;定义了超链的属性，和&lt;code&gt;a:link{}&lt;/code&gt;定义了超链点击之前的属性，那这两个有啥区别呢？&lt;/p&gt;
&lt;p&gt;答：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;a{}&lt;/code&gt;和&lt;code&gt;a:link{}&lt;/code&gt;的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;a{}&lt;/code&gt;定义的样式针对所有的超链接(包括锚点)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a:link{}&lt;/code&gt;定义的样式针对所有写了href属性的超链接(不包括锚点)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;超链接a标签在使用的时候，比较难。因为不仅仅要控制a这个盒子，也要控制它的伪类。&lt;/p&gt;
&lt;p&gt;我们一定要将a标签写在前面，将&lt;code&gt;:link、:visited、:hover、:active&lt;/code&gt;这些伪类写在后面。&lt;/p&gt;
&lt;p&gt;举个例子。如果效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/20170810_2235.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了实现上面这个效果，完整版代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; xmlns=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; xml:lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; http-equiv=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/html;charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;style&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        *&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;padding:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;960px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;/*去掉小圆点*/&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;list-style:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;float:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;/*让内容水平居中*/&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;text-align:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;/*让行高等于nav的高度，就可以保证内容垂直居中*/&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;line-height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;/*两个伪类的属性，可以用逗号隔开*/&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:link&lt;/span&gt; , &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:visited&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;text-decoration:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;purple&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; orange&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; class=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;nav&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;网站栏目&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上方代码中，我们发现，当我们在定义&lt;code&gt;a:link&lt;/code&gt;和 &lt;code&gt;a:visited&lt;/code&gt;这两个伪类的时候，如果它们的属性相同，我们其实可以写在一起，用逗号隔开就好，摘抄如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;/*两个伪类的属性，可以用逗号隔开*/&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:link&lt;/span&gt; , &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:visited&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;text-decoration:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;purple&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; orange&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上方代码所示，最标准的写法，就是把link、visited、hover这三个伪类都要写。但是前端开发工程师在大量的实践中，发现不写link、visited也挺兼容。写法是：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;a:link、a:visited都是可以省略的，简写在a标签里面。也就是说，a标签涵盖了link、visited的状态（前提是都具有了相同的属性）。写法如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode css&quot;&gt;
&lt;code class=&quot;sourceCode css&quot;&gt;        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;display:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;120px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;text-decoration:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;purple&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;fl&quot;&gt;.nav&lt;/span&gt; ul li a&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt; orange&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然了，在写&lt;code&gt;a:link&lt;/code&gt;、&lt;code&gt;a:visited&lt;/code&gt;这两个伪类的时候，要么同时写，要么同时不写。如果只写&lt;code&gt;a&lt;/code&gt;属性和&lt;code&gt;a:link&lt;/code&gt;属性，不规范。&lt;/p&gt;
&lt;h2 id=&quot;动态伪类举例&quot;&gt;动态伪类举例&lt;/h2&gt;
&lt;p&gt;我们在第一段中描述过，下面这三种动态伪类，针对所有标签都适用。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;:hover&lt;/code&gt; “悬停”：鼠标放到标签上的时候&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:active&lt;/code&gt; “激活”： 鼠标点击标签，但是不松手时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:focus&lt;/code&gt; 是某个标签获得焦点时的样式（比如某个输入框获得焦点）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们不妨来举下例子。&lt;/p&gt;
&lt;p&gt;举例1：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;  &lt;span class=&quot;kw&quot;&gt;&amp;lt;style&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    伪类选择器：动态伪类&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;  */&lt;/span&gt;

   &lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    让文本框获取焦点时：&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    边框：#FF6F3D这种橙色&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    文字：绿色&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    背景色：#6a6a6a这种灰色&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
    input&lt;span class=&quot;dv&quot;&gt;:focus&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#FF6F3D&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;background-color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;#6a6a6a&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    鼠标放在标签上时显示蓝色&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    */&lt;/span&gt;
    label&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    点击标签鼠标没有松开时显示红色&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    */&lt;/span&gt;
    label&lt;span class=&quot;dv&quot;&gt;:active&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;color:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sby7r.com1.z0.glb.clouddn.com/2015-10-03-css-02.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;利用这个&lt;code&gt;hover&lt;/code&gt;属性，我们同样对表格做一个样式的设置：&lt;br/&gt;表格举例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;er&quot;&gt;&amp;lt;&lt;/span&gt;!doctype html&amp;gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;Generator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;EditPlus®&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;Author&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;Keywords&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;Description&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; content=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;style&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*整个表格的样式*/&lt;/span&gt;
    table&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;/*border-collapse属性：对表格的线进行折叠*/&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;border-collapse:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;collapse&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*鼠标悬停时，让当前行显示#868686这种灰色*/&lt;/span&gt;
    table tr&lt;span class=&quot;dv&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#868686&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;/*每个单元格的样式*/&lt;/span&gt;
    table td&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sby7r.com1.z0.glb.clouddn.com/2015-10-03-css-04.gif&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;我的公众号&quot;&gt;我的公众号&lt;/h2&gt;
&lt;p&gt;想学习&lt;span&gt;&lt;strong&gt;代码之外的软技能&lt;/strong&gt;&lt;/span&gt;？不妨关注我的微信公众号：&lt;strong&gt;生命团队&lt;/strong&gt;（id：&lt;code&gt;vitateam&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.smyhvae.com/2016040102.jpg&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 13 Jan 2018 14:58:00 +0000</pubDate>
<dc:creator>生命壹号</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/smyhvae/p/8280814.html</dc:identifier>
</item>
<item>
<title>redux入门指南 - Grewer</title>
<link>http://www.cnblogs.com/Grewer/p/8280639.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Grewer/p/8280639.html</guid>
<description>&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;前言:大概一个月没有写博客了,这两天正好是周末,就写点东西来梳理下之前几个月的所写与所得;&lt;br/&gt;两个月前,学习了一下 redux ,还是一点难度的,花了我一天的时间来搞明白他,&lt;br/&gt;但是都没怎么记录,今天这篇博客就是用一个demo来介绍 redux , react-redux , react-thunk 的简单用法;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先就是下载,使用命令:&lt;br/&gt;&lt;code&gt;npm install --save redux react-redux react-thunk&lt;/code&gt;&lt;br/&gt;下好后 &lt;code&gt;npm start&lt;/code&gt; 启动;&lt;/p&gt;
&lt;p&gt;文件夹列表如下:&lt;br/&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1182844/201801/1182844-20180113224532472-2045955414.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;redux 的最关键的函数就是 dispatch !&lt;br/&gt;而 dispatch 的本质是什么呢?&lt;br/&gt;dispatch 接受的是一个对象,这个对象至少有一个是键值是用来判断类型的,其余的可以是任意的;&lt;br/&gt;而他(其实也就是 reducer 函数)他本身有一个 state ,用来存储初始值,根据接受到的对象中的类型键值来判断对于当前值的不同操作,&lt;br/&gt;而且他必须返回修改后的 state;&lt;/p&gt;
&lt;p&gt;现在我们创建好文件后修改 src/index.js::&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; createStore&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;applyMiddleware&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; thunk &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'redux-thunk'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; Provider &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-redux'&lt;/span&gt; 
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; calcul &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'./redux/reducer'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; store &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;createStore&lt;/span&gt;(calcul&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;applyMiddleware&lt;/span&gt;(thunk))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;ReactDOM&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Provider store&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;store&lt;span class=&quot;op&quot;&gt;}&amp;gt;&amp;lt;&lt;/span&gt;App /&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Provider&amp;gt;, document.getElementById&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;'root'&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上部的代码中除了 reactDOM.render 是修改的,其他都是新添加的;&lt;br/&gt;这里我们是引用了 redux, redux-thunk, react-redux模块和一个 reducer 文件;&lt;br/&gt;讲一下 createStore 的作用,他在官方文档中的释义是这样的:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;创建一个 Redux store 来以存放应用中所有的 state。&lt;br/&gt;应用中应有且仅有一个 store。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实这只是一个声明赋值,而如果你不用中间件(thunk)可以这样写:&lt;br/&gt;&lt;code&gt;let store = createStore(calcul);&lt;/code&gt;&lt;br/&gt;一下子简单了很多;&lt;br/&gt;而 Provider 这个html的标签就是将 redux 的值和函数,传递给整个项目;&lt;/p&gt;
&lt;p&gt;上面说到了 create那我们先创建 reducer/index.js:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; combineReducers &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; countReducer &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (state &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; action) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;action&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;type&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'INCREMENT'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; state &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;action&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'DECREMENT'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; state &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;action&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; state&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; calcul &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;combineReducers&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    countReducer
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; calcul&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;combineReducers 是一个语法糖:他的作用就是将多个reducer函数合并成一个对象;&lt;br/&gt;上面的 countReducer 就是一个reducer函数了,就像我上面所说的,action就是接受的那个对象,&lt;br/&gt;而state就是他自带的初始值,通过switch操作,根据 action.type 的值来进行不同的操作,&lt;br/&gt;但是也是最重要的就是必须有返回值;&lt;/p&gt;
&lt;p&gt;接下来是修改src/App.js:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;connect&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-redux'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; Calculation &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'./components/calculation'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; App &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;dispatch&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;countNum&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;App&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Calculation getValue&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;countNum&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; dispatch&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;dispatch&lt;span class=&quot;op&quot;&gt;}&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Calculation&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;      &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
    )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;showData&lt;/span&gt;(state) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;countNum&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;countReducer&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;connect&lt;/span&gt;(showData)(App)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;connect 函数是来自 react-redux 的,他是一个非常重要的函数,&lt;br/&gt;在最下面一行代码中:&lt;code&gt;connect(showData)(App);&lt;/code&gt;&lt;br/&gt;第一个接受的是一个对象,在 showData 中, state 就是所有 reducer 的初始值;&lt;br/&gt;通过这个函数将当前的组件与 redux 中的数值挂钩,他返回的是当期组件所需要的 reducer 的值(你也可以对值进行filter),&lt;br/&gt;而第二个接受对象呢,就是当前组件了;&lt;br/&gt;可以看到,我们还引用了一个名为 Calculation 的组件,他接收了来自 redux 的 dispatch , countNum 这两个参数(函数);&lt;/p&gt;
&lt;p&gt;在下一个文件是 src/components/calculation.js:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;DECREMENT&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;middleINCRENT&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'../redux/action'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Count &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;constructor&lt;/span&gt;(props) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;(props)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;changeVal&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    input &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (e)&lt;span class=&quot;op&quot;&gt;=&amp;gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;changeVal&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;target&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;dispatch&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;getValue&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt; is calculation
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;op&quot;&gt;&amp;gt;{&lt;/span&gt;getValue&lt;span class=&quot;op&quot;&gt;}&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;            &amp;lt;input type=&quot;text&quot; onChange={this.input} value={this.state.changeVal} /&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;button onClick&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&quot;at&quot;&gt;dispatch&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;middleINCRENT&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;changeVal&lt;/span&gt;)))&lt;span class=&quot;op&quot;&gt;}&amp;gt;+&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;            &amp;lt;button onClick={&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt; =&amp;gt; &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;DECREMENT&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;this.state.changeVal&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;}&amp;gt;-&amp;lt;/button&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个文件引用了文件:src/redux/action/index.js里的 DECREMENT , middleINCRENT 两个函数;&lt;br/&gt;其中 middleINCRENT 便是添加了中间件的 action 函数;&lt;br/&gt;这个组件的作用是什么呢:就是根据 input 里的值,来改变 redux 里的 countReducer 的初始值,靠着点击按钮来触发;&lt;br/&gt;dispatch 我先不说,先说下 DECREMENT , middleINCRENT ,而这就不得不提到下面这个文件:&lt;/p&gt;
&lt;p&gt;src/redux/action/index.js:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;INCREMENT&lt;/span&gt;(data)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'INCREMENT'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        data
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;middleINCRENT&lt;/span&gt;(data) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (dispatch&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; getState) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; currentValue &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;getState&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;currentValue&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;countReducer&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;200&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;dispatch&lt;/span&gt;(&lt;span class=&quot;at&quot;&gt;INCREMENT&lt;/span&gt;(data))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;DECREMENT&lt;/span&gt;(data) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'DECREMENT'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        data
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在你们知道中间件的作用了么?他就是在提交值的时候,对值进行统一的判断和修改,&lt;br/&gt;我们看这个文件里的 INCREMENT 和 DECREMENT 函数,这两个 函数返回的值就是我最开始所说的, dispatch 所接收的值,&lt;br/&gt;可以看到 type 即是判断的类型了,而 data 呢,就是组件 caculation.js 里的 input 的值;&lt;/p&gt;
&lt;p&gt;现在看中间件 middleINCRENT 这个函数,他是返回一个函数,而这个函数可以接受到两个参数,一个呢是 dispatch 函数,而另外一个呢是当前的 reducer 函数的值;&lt;/p&gt;
&lt;p&gt;通过学习这个组件, redux 的基本流程可以掌握了,当然实际项目中并不会这么简单,但是原理就是这样;&lt;/p&gt;
&lt;p&gt;最后我将这个 demo 放在了GitHub:&lt;a href=&quot;https://github.com/Grewer/reduxDemo&quot; class=&quot;uri&quot;&gt;https://github.com/Grewer/reduxDemo&lt;/a&gt;&lt;br/&gt;如果帮到了你,还请推荐或者 star;&lt;/p&gt;
&lt;p&gt;完;&lt;/p&gt;
</description>
<pubDate>Sat, 13 Jan 2018 14:47:00 +0000</pubDate>
<dc:creator>Grewer</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Grewer/p/8280639.html</dc:identifier>
</item>
</channel>
</rss>