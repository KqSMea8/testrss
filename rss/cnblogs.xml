<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>PV &amp; PVC - 每天5分钟玩转 Docker 容器技术（150） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/8705515.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/8705515.html</guid>
<description>&lt;p&gt;&lt;span&gt;Volume 提供了非常好的数据持久化方案，不过在可管理性上还有不足。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;拿前面 AWS EBS 的例子来说，要使用 Volume，Pod 必须事先知道如下信息：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;-1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;当前 Volume 来自 AWS EBS。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;EBS Volume 已经提前创建，并且知道确切的 volume-id。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;Pod 通常是由应用的开发人员维护，而 Volume 则通常是由存储系统的管理员维护。开发人员要获得上面的信息：&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;-2&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;span&gt;要么询问管理员。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;要么自己就是管理员。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;span&gt;这样就带来一个管理上的问题：应用开发人员和系统管理员的职责耦合在一起了。如果系统规模较小或者对于开发环境这样的情况还可以接受。但当集群规模变大，特别是对于生成环境，考虑到效率和安全性，这就成了必须要解决的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Kubernetes 给出的解决方案是 PersistentVolume 和 PersistentVolumeClaim。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PersistentVolume (PV) 是外部存储系统中的一块存储空间，由管理员创建和维护。与 Volume 一样，PV 具有持久性，生命周期独立于 Pod。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PersistentVolumeClaim (PVC) 是对 PV 的申请 (Claim)。PVC 通常由普通用户创建和维护。需要为 Pod 分配存储资源时，用户可以创建一个 PVC，指明存储资源的容量大小和访问模式（比如只读）等信息，Kubernetes 会查找并提供满足条件的 PV。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有了 PersistentVolumeClaim，用户只需要告诉 Kubernetes 需要什么样的存储资源，而不必关心真正的空间从哪里分配，如何访问等底层细节信息。这些 Storage Provider 的底层信息交给管理员来处理，只有管理员才应该关心创建 PersistentVolume 的细节信息。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;Kubernetes 支持多种类型的 PersistentVolume，比如 AWS EBS、Ceph、NFS 等，完整列表请参考 &lt;/span&gt;&lt;a title=&quot;This link will take you away from steemit.com&quot; href=&quot;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下节我们用 NFS 来体会 PersistentVolume 的使用方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;书籍：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.《每天5分钟玩转Kubernetes》&lt;br/&gt;&lt;a href=&quot;https://item.jd.com/26225745440.html&quot;&gt;https://item.jd.com/26225745440.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.《每天5分钟玩转Docker容器技术》&lt;br/&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot;&gt;https://item.jd.com/16936307278.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;3.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img title=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; src=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 03 Apr 2018 21:37:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/8705515.html</dc:identifier>
</item>
<item>
<title>一 曲面的创建（包含3部分）----2曲面的样式，3曲面的相关操作 - 沙漠骆驼whlkx</title>
<link>http://www.cnblogs.com/whlkx/p/8714398.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/whlkx/p/8714398.html</guid>
<description>&lt;p&gt;&lt;strong&gt;本篇主要包括三个部分，1 如何创建曲面，2曲面样式，3曲面的相关操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本节中，我们将继续学习：2曲面的样式，3曲面的相关操作。 &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;曲面样式&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在这里先大概介绍一下（后面篇节中会有专门介绍），在civil3d中的对象（比如曲面surface，点cocopoint，路线alignment等等）的显示信息一般都包含两种，一个就是对象自身的显示样式，一个是标签的显示样式，如下图点样式和点标签样式：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404001942975-1843002642.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;civil3d这样做的好处是：对象样式的作用是用来控制对象的显示效果（比如颜色、大小、形状类型等），标签样式用来提取并显示对象的信息（比如高程、面积、长度等），两个互不干扰，并且可以相互组合，以不同的方式进行显示对象及对象的相关信息。&lt;/p&gt;
&lt;p&gt;当运用熟练之后，你就发现civil3d的样式是多么的强大。&lt;/p&gt;
&lt;p&gt;下面我们看一下曲面样式和曲面标签都有哪些（提示：要安装适用于中国的本地化包，安装后会提供一个.dwt的模板文件，里面提供了一些常用的样式和标签样式，链接：https://knowledge.autodesk.com/support/autocad-civil-3d/downloads/caas/downloads/content/civil-3d-country-kits-for-china.html）&lt;/p&gt;
&lt;p&gt; 选择曲面对象，右键选择[曲面特性...] 后就可以选择曲面样式，点击确定后，曲面就会以预定的显示样式进行显示。如下图，当前显示样式为显示边界及等高线，等高距为2米。读者可以试试其他的显示样式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404004337165-1293503049.png&quot; alt=&quot;&quot; width=&quot;787&quot; height=&quot;629&quot;/&gt;        &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404005034452-2103884693.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当曲面样式显示为：边界、三角网时，在三维浏览时如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404005452821-695638458.png&quot; alt=&quot;&quot;/&gt;              &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404005606865-1469999708.png&quot; alt=&quot;&quot; width=&quot;664&quot; height=&quot;415&quot;/&gt;&lt;/p&gt;
&lt;p&gt;细心的你可能已经发现了一些问题，没错，是的，曲面确实有问题，在曲面中出现了几个异常点，原因是测量提供的高程点数据有问题。那么我们如何解决类似的问题呢？最直接的办法就是修正原始数据，再重新生成曲面。那么有没有快速简洁的方法呢，答案是有的。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt; &lt;strong&gt;下面就介绍一些有关曲面的常用操作&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;  a 排除异常高程点   操作方法见下图：&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404010143976-311411502.png&quot; alt=&quot;&quot; width=&quot;452&quot; height=&quot;482&quot;/&gt;     &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404010445509-2029351060.png&quot; alt=&quot;&quot; width=&quot;545&quot; height=&quot;434&quot;/&gt;  &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404010522925-1390016808.png&quot; alt=&quot;&quot; width=&quot;623&quot; height=&quot;356&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这个操作过程中，civil3d会自动过滤掉小于给定的高程值，也就是小于该高程值的高程点都将不会参与曲面的创建。&lt;/p&gt;
&lt;p&gt; b  获取曲面高程区间的面积值（二维或三维都可以），操作方法如下：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404012440859-2059670797.png&quot; alt=&quot;&quot; width=&quot;511&quot; height=&quot;470&quot;/&gt;    &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404011753994-304227308.png&quot; alt=&quot;&quot; width=&quot;415&quot; height=&quot;472&quot;/&gt;   &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404011844064-374408430.png&quot; alt=&quot;&quot; width=&quot;437&quot; height=&quot;465&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404011927453-886283347.png&quot; alt=&quot;&quot; width=&quot;429&quot; height=&quot;520&quot;/&gt;  &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404012042041-1943099239.png&quot; alt=&quot;&quot; width=&quot;665&quot; height=&quot;518&quot;/&gt;    &lt;/p&gt;
&lt;p&gt; 然后：按下左图操作后，根据命令行提示进行最后操作，最后见下右图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404012700111-2003155617.png&quot; alt=&quot;&quot;/&gt;       &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404012912798-359056991.png&quot; alt=&quot;&quot; width=&quot;371&quot; height=&quot;373&quot;/&gt;&lt;/p&gt;

&lt;p&gt; c 提取曲面的等高线，高程点等数据&lt;/p&gt;
&lt;p&gt;如果提取等高线，那就将曲面的显示样式改为等高线，如果提取高程点，那就把曲面中的点显示出来（右键曲面-编辑曲面样式，找到显示选项卡，将点的可见性打开即可）&lt;/p&gt;
&lt;p&gt;选择曲面对象，这时菜单选项卡会自动出现一个新的有关曲面的选项卡如下图，有关曲面的操作都会罗列进去，方便用户进行操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404013613628-1187032387.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404013726536-651256899.png&quot; alt=&quot;&quot;/&gt;           &lt;img src=&quot;https://images2018.cnblogs.com/blog/708913/201804/708913-20180404013850707-938618226.png&quot; alt=&quot;&quot; width=&quot;619&quot; height=&quot;385&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击确定即可提取相应的对象，注意，这里提取出来的对象（点，边界，等高线）就是属于CAD的东西了。&lt;/p&gt;
&lt;p&gt; 讲到这里，曲面有关的一般常用操作就讲完了，在后续的篇节中还会将一些其它的有关操作。&lt;/p&gt;

</description>
<pubDate>Tue, 03 Apr 2018 17:45:00 +0000</pubDate>
<dc:creator>沙漠骆驼whlkx</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/whlkx/p/8714398.html</dc:identifier>
</item>
<item>
<title>open-falcon - 姚红</title>
<link>http://www.cnblogs.com/yaohong/p/8713723.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yaohong/p/8713723.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;一、环境准备&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;操作系统：centos7（minimal，www.centos.org下载的包是CentOS-7-x86_64-Minimal-1611.iso）&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;1.1 更换阿里yum（个人习惯）&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;     步骤：&lt;/p&gt;
&lt;p&gt;     1）下载wget                   &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
yum install -y wget
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      2）备份默认的yum&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
mv /etc/yum.repos.d /etc/yum.repos.d.backup
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      3）设置新的yum目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
mkdir /etc/yum.repos.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      4）下载阿里yum配置到该目录中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;       5）重建缓存&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
yum clean all
yum makecache
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;       6）升级所有包（改变软件设置和系统设置，系统版本内核都升级，故需要几分钟耐心等待）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
yum update -y
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;1.2 安装vim（个人习惯）&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
yum install -y vim
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.3 安装git&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
yum install -y git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;安装结束后安全起见，确认是否满足官方要求的Git &amp;gt;= 1.7.5&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
git version
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;1.4 安装go语言环境&lt;/strong&gt;（因为官方yum和阿里yum都没有go的安装包，故只能通过fedora的epel仓库来安装）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
yum install -y epel-release&lt;br/&gt;yum install golang -y
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;安装结束后安全起见，确认是否满足官方要求的Go &amp;gt;= 1.6&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
go version
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.5 安装redis&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;由于部署go时已经安装了epel，故直接执行下面的安装命令（如果没有装epel，会提示No package redis available，也就是没有安装包可用，因为官方yum和阿里yum都没有redis，故只能通过fedora的epel仓库来安装）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
yum install redis -y
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动redis&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
systemctl start redis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置redis开机启动 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
systemctl enable redis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用下面的语句查看redis是否开启&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
systemctl status redis
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.6 安装mysql&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;      步骤：&lt;/p&gt;
&lt;p&gt;      1）下载repo源&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      2）安装该rpm包（安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
rpm -ivh mysql-community-release-el7-5.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      3）安装mysql&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
yum install mysql-server -y
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      4）启动mysql&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
systemctl start mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用下面的语句查看mysql是否开启&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
systemctl status mysql
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.7 设置环境变量GOROOT和GOPATH&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
export GOROOT=/usr/lib/golang
export GOPATH=/home
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.8 将open-falcon的源码从github上get下来&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;      步骤：&lt;/p&gt;
&lt;p&gt;      1）创建GOPATH下的一个本地的路径&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
mkdir -p $GOPATH/src/github.com/open-falcon
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      2）进入该路径&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd $GOPATH/src/github.com/open-falcon
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;      3）将源码get到本地&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
git clone https://github.com/open-falcon/falcon-plus.git
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;1.9 初始化数据库&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre&gt;
cd $GOPATH/src/github.com/open-falcon/falcon-plus/scripts/mysql/db_schema/
mysql -h 127.0.0.1 -u root -p &amp;lt; 1_uic-db-schema.sql
mysql -h 127.0.0.1 -u root -p &amp;lt; 2_portal-db-schema.sql
mysql -h 127.0.0.1 -u root -p &amp;lt; 3_dashboard-db-schema.sql
mysql -h 127.0.0.1 -u root -p &amp;lt; 4_graph-db-schema.sql
mysql -h 127.0.0.1 -u root -p &amp;lt; 5_alarms-db-schema.sql
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt; 再运行“mysql -h..................”时会提示“Enter password”，如果mysql的root没有设置密码，回车即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718112853755-1990101916.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;1.10 编译源码并打包&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;       步骤：&lt;/p&gt;
&lt;p&gt;       1）进入本地源码路径下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd $GOPATH/src/github.com/open-falcon/falcon-plus/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;       2）使用go get获取rrdtool工具包（make过程卡壳的一个点） &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
go get github.com/open-falcon/rrdlite
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这一步是官方教程没有提到的内容，如果不获取该工具包make的时候会报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718113903552-1599468671.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;       3）编译所有模块&lt;/p&gt;

&lt;p&gt;       4）打包&lt;/p&gt;

&lt;p&gt; 在$GOPATH/src/github.com/open-falcon/falcon-plus/目录下就多了刚才的压缩包“open-falcon-v0.2.0.tar.gz”。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;1.11 官方提供的安装包&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;https://book.open-falcon.org/zh_0_2/quick_install/prepare.html中官方有提供编译包，如果编译过程不顺利可以直接下载编译包。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2&gt;&lt;strong&gt;二、部署后端&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;2.1 创建工作目录&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
export WORKSPACE=/home/work
mkdir -p $WORKSPACE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2.2 解压二进制包（包名根据实际进行修改） &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于我是根据本教程编译源码获得的压缩包，故需要切换到“$GOPATH/src/github.com/open-falcon/falcon-plus/”路径下。&lt;/p&gt;
&lt;p&gt;包名由于make pack的时候就是open-falcon-v0.2.0.tar.gz，具体根据实际情况（17/12/6再部署时发现官方已有0.2.1）。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
cd $GOPATH/src/github.com/open-falcon/falcon-plus/
&lt;/pre&gt;
&lt;pre&gt;
tar -xzvf open-falcon-v0.2.0.tar.gz -C $WORKSPACE
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;2.3 修改配置文件cfg.json&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;猜测部分模块依赖连接数据库，因为如果不修改配置文件，aggregator模块会出现无法启动，graph、hbs、nodata、api、alarm模块会出现开启不报错但是状态为开启失败的情况。（个人认为这块的设计值得作为open-falcon优化的一个点，连接本机mysql如果失败是可以收到错误提示的，第一时间有报错提示总比什么都不显示或显示开启但实际开启失败强，如果别人服务都不知道怎么开起来，系统功能再强大有多少人硬着头皮部署下去而不是选择换个系统试试呢）&lt;/p&gt;

&lt;p&gt;如果需要每个模块都能正常启动，需要将上面模块的cfg.json的数据库信息进行修改。根据本教程的配置，需要修改配置文件所在的目录： &lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr&gt;&lt;td&gt;模块&lt;/td&gt;
&lt;td&gt;配置文件所在路径&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;aggregator   &lt;/td&gt;
&lt;td&gt;/home/work/aggregator/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;graph&lt;/td&gt;
&lt;td&gt;/home/work/graph/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;hbs&lt;/td&gt;
&lt;td&gt;/home/work/hbs/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;nodata&lt;/td&gt;
&lt;td&gt;/home/work/nodata/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;api&lt;/td&gt;
&lt;td&gt;/home/work/api/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;alarm&lt;/td&gt;
&lt;td&gt;/home/work/alarm/config/cfg.json&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;1）修改aggregator的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/aggregator/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718140412380-720726490.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。&lt;/p&gt;

&lt;p&gt;2）修改graph的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/graph/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718153713177-211659277.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。&lt;/p&gt;

&lt;p&gt;3）修改hbs的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/hbs/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718153813927-125773577.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。&lt;/p&gt;

&lt;p&gt;4）修改nodata的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/nodata/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718153928615-377732649.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。&lt;/p&gt;

&lt;p&gt;5）修改api的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/api/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718154141708-511410520.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。&lt;/p&gt;

&lt;p&gt;6）修改alarm的配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
vim /home/work/alarm/config/cfg.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2015.cnblogs.com/blog/901201/201707/901201-20170718154317224-1818573808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;mysql的root密码为空，则去掉“password”，若不为空，则用root密码替换“password”。 &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;2.4 启动后端模块&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd $WORKSPACE
./open-falcon start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用下面的命令检查各个模块的启动情况&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
./open-falcon check
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多命令的用法（命令的例子是启动agent模块）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-bash&quot;/&gt;./open-falcon start agent
&lt;/pre&gt;
&lt;pre&gt;
&lt;br/&gt;./open-falcon check&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;        falcon-graph         UP           53007&lt;br/&gt;falcon-hbs         UP           &lt;span class=&quot;hljs-number&quot;&gt;53014
        falcon-judge         UP           &lt;span class=&quot;hljs-number&quot;&gt;53020
     falcon-transfer         UP           &lt;span class=&quot;hljs-number&quot;&gt;53026
       falcon-nodata         UP           &lt;span class=&quot;hljs-number&quot;&gt;53032
   falcon-aggregator         UP           &lt;span class=&quot;hljs-number&quot;&gt;53038
        falcon-agent         UP           &lt;span class=&quot;hljs-number&quot;&gt;53044
      falcon-gateway         UP           &lt;span class=&quot;hljs-number&quot;&gt;53050
          falcon-api         UP           &lt;span class=&quot;hljs-number&quot;&gt;53056
        falcon-alarm         UP           &lt;span class=&quot;hljs-number&quot;&gt;53063

For debugging , You can check &lt;span class=&quot;hljs-variable&quot;&gt;$WorkDir/&lt;span class=&quot;hljs-variable&quot;&gt;$moduleName/&lt;span class=&quot;hljs-built_in&quot;&gt;log/logs/xxx.log&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;hr/&gt;
&lt;h2&gt;&lt;strong&gt;三、部署前端&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;3.1 创建工作目录&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
export FRONTSPACE=/home/front/open-falcon&lt;br/&gt;mkdir -p $FRONTSPACE
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;3.2 获取前端代码&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd $FRONTSPACE&lt;br/&gt;git clone https://github.com/open-falcon/dashboard.git
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
 
&lt;/pre&gt;
&lt;h3&gt;&lt;strong&gt;3.3 安装依赖包&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre readability=&quot;5&quot;&gt;
yum install -y python-virtualenv
yum install -y python-devel
yum install -y openldap-devel
yum install -y mysql-devel
yum groupinstall &quot;Development tools&quot; -y

cd $FRONTSPACE/dashboard/&lt;br/&gt;virtualenv ./env&lt;p&gt;./env/bin/pip install -r pip_requirements.txt
&lt;/p&gt;&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;3.4 修改配置&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;根据本次记录的配置，dashboard的配置文件在/home/front/open-falcon/dashboard/rrd/config.py，需要根据实际情况对内部配置进行修改。&lt;/p&gt;
&lt;p&gt;由于前端后台搭在一台虚拟机里，且暂时不接入LDAP，且数据库root的密码为空，故先不修改配置文件。&lt;/p&gt;
&lt;p&gt; &lt;em id=&quot;__mceDel&quot;&gt; &lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;3.5 开启8081端口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;1）防火墙添加8081端口永久开放&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
firewall-cmd --add-port=8081/tcp --permanent
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2）重新载入防火墙配置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
firewall-cmd --reload
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;3.6 在生产环境启动&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
bash control start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于虚拟机ip配置为192.168.3.1，故在浏览器中输入192.168.3.1:8081后跳转。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;3.7 以开发者模式启动&lt;em id=&quot;__mceDel&quot;&gt; &lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
./env/bin/python wsgi.py
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Tue, 03 Apr 2018 16:55:00 +0000</pubDate>
<dc:creator>姚红</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yaohong/p/8713723.html</dc:identifier>
</item>
<item>
<title>Python习题（第一课） - WoLykos</title>
<link>http://www.cnblogs.com/WoLykos/p/8711926.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/WoLykos/p/8711926.html</guid>
<description>&lt;p&gt;　　想了想其他的太简单了，还是不放了，剩三题吧。&lt;/p&gt;

&lt;p&gt;　　编写一个程序，对任给的正整数N (N≤100)，寻找所有的四元组(a, b, c, d)，使得a^3= b^3 + c^3 + d^3，其中a,b,c,d 大于 1, 小于等于N。&lt;/p&gt;
&lt;p&gt;　　输入一个正整数N (N≤100)，输出 每行输出一个完美立方。输出格式为： Cube = a, Triple = (b,c,d) 其中a,b,c,d所在位置分别用实际求出四元组值代入。 &lt;br/&gt;　　请按照a的值，从小到大依次输出。当两个完美立方 等式中a的值相同，则b值小的优先输出，仍相同则c值小的优先输出，再相同则d值小的先输出。 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
n =&lt;span&gt; int(input())
cube =&lt;span&gt; [0]
for i in range(2, n+1&lt;span&gt;):
　　cube.append(i**3&lt;span&gt;)
for a in range(3&lt;span&gt;,n):
　　for b in range(0,a-2&lt;span&gt;):
　　　　if cube[a] &amp;lt; (cube[b] + cube[b+1] + cube[b+2&lt;span&gt;]):
　　　　　　break
　　for c in range(b+1,a-1&lt;span&gt;):
　　　　if cube[a] &amp;lt; (cube[b] + cube[c] + cube[c+1&lt;span&gt;]):
　　　　　　break
　　for d in range(c+1&lt;span&gt;,a):
　　　　if cube[a] == (cube[b] + cube[c] +&lt;span&gt; cube[d]):
　　　　　　print(&quot;Cube = %d,Tripe = (%d,%d,%d)&quot; %(a+1,b+1,c+1,d+1))&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　汇率为：1美元=6.78人民币。&lt;/p&gt;
&lt;p&gt;　　输入格式为：USD10，输出格式为：RMB67.8（注意中间没有是空格的）。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
str1=&lt;span&gt;input()
import&lt;span&gt; re
num=int(''.join(re.findall('\d+'&lt;span&gt;,str1)))
if 'RMB' in&lt;span&gt; str1:
    print('USD','%.2f' %(num/6.78),sep=''&lt;span&gt;)
elif 'USD' in&lt;span&gt; str1:
    print('RMB','%.2f' %(num*6.78),sep='')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　输入一串字母，将它们都加3，如果超过122（z的ASCII值）就减掉26。&lt;/p&gt;
&lt;p&gt;　　比如 ‘xyz’ 会变成 ‘abc’ 。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
original=&lt;span&gt;input()
cipher=''
for i in&lt;span&gt; original:
    a=&lt;span&gt;ord(i)
    if 97&amp;lt;=a&amp;lt;=119&lt;span&gt;:
        cipher+=chr(a+3&lt;span&gt;)
    elif 120&amp;lt;=a&amp;lt;=122&lt;span&gt;:
        cipher+=chr(a+3-26&lt;span&gt;)
    else&lt;span&gt;:
        cipher+=&lt;span&gt;i
print(cipher) &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 03 Apr 2018 15:53:00 +0000</pubDate>
<dc:creator>WoLykos</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/WoLykos/p/8711926.html</dc:identifier>
</item>
<item>
<title>1000个乱序正整数（每个数都小于1000）中找出10个最大数问题（最高效，不服来战） - 黄增松</title>
<link>http://www.cnblogs.com/huangzs/p/8711915.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huangzs/p/8711915.html</guid>
<description>&lt;p&gt;一、以空间换时间（最高效）&lt;/p&gt;
&lt;p&gt;1.声明一个数组a[0]-a[999]&lt;/p&gt;
&lt;p&gt;2.for循环这1000个数，将数组中下标与相对应的数相同的设置为1，否则设置为0.&lt;/p&gt;
&lt;p&gt;（例如，这1000个数中，某个数是555，就把a[555]=1）&lt;/p&gt;
&lt;p&gt;3.数组逆向循环，找出10个=1的数，把数组下标打印出来&lt;/p&gt;
&lt;p&gt;N&amp;lt;时间复杂度&amp;lt;2N（N=1000）&lt;/p&gt;
&lt;p&gt;二、冒泡排序&lt;/p&gt;
&lt;p&gt;遍历一次冒出一个最大数，需要遍历10次&lt;/p&gt;
&lt;p&gt;时间复杂度=10N（N=1000）&lt;/p&gt;

</description>
<pubDate>Tue, 03 Apr 2018 15:50:00 +0000</pubDate>
<dc:creator>黄增松</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huangzs/p/8711915.html</dc:identifier>
</item>
<item>
<title>2018年奇虎360春招笔试题--玫瑰花 - 郭耀华</title>
<link>http://www.cnblogs.com/guoyaohua/p/8711911.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/guoyaohua/p/8711911.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180403232642687-985164628.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180403232649221-1142855560.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这道题，第一感觉想用排列组合做，但是想了好久，没想到解决办法（刚刚考试的时候没有答出来）。后来想了一下应该使用动态规划来做。&lt;/p&gt;
&lt;p&gt;我们首先分析一下情况：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.当K&amp;gt;N的时候，countSum = 0；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.当K=N的时候，countSum = N！（N的阶乘）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3.当K&amp;gt;N的时候，就要通过最优子结构来进行分析了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;前两点易知，下面主要分析第三点。&lt;/p&gt;
&lt;p&gt;设F(k,n)为n个位置，k种玫瑰的结果，则　&lt;span&gt;&lt;strong&gt;F(k,n) = k*(F(k,n-1)+F(k-1,n-1))&lt;/strong&gt;&lt;/span&gt;，分析：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;情况一：n-1个空缺已经放置了k种花，则新的位置放置任何一种花都可以，此时结果总数为&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;k*F(k,n-1)；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;情况二：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;n-1个空缺已经放置了k-1种花&lt;span&gt;&lt;strong&gt;&lt;strong&gt;（注意！有k种选择！）&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;，则新的位置固定需要放置剩下的那一种花，此时结果总数为&lt;/span&gt;&lt;strong&gt;k*&lt;/strong&gt;&lt;strong&gt;F(k-1,n-1)；&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;总数 = 情况一 + 情况二&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Rose {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        System.out.println(roseSum(&lt;/span&gt;2,3&lt;span&gt;));
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; roseSum(&lt;span&gt;int&lt;/span&gt; k,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(k&amp;gt;n) &lt;span&gt;return&lt;/span&gt; 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(k ==&lt;span&gt; n){
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; count = 1&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 0;i&amp;lt;n;i++&lt;span&gt;)
                count&lt;/span&gt;*=&lt;span&gt;i;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; count;
        }
        &lt;/span&gt;&lt;span&gt;long&lt;/span&gt;[][] DP = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt;[k][n];
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 0 ;i&amp;lt;n;i++&lt;span&gt;)
            DP[&lt;/span&gt;0][i] = 1&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 1;i&amp;lt;k;i++&lt;span&gt;)
            DP[i][&lt;/span&gt;0] = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 1;i&amp;lt;k;i++&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j = 1;j&amp;lt;n;j++&lt;span&gt;)
                DP[i][j] &lt;/span&gt;= (i+1)*(DP[i][j-1]+DP[i-1][j-1&lt;span&gt;]);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; DP[k-1][n-1]%772235&lt;span&gt;;        
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;不过此代码虽然是使用动态规划解决，但是空间复杂度为O(N*K)，并不是最优，还可继续优化。&lt;/p&gt;
&lt;p&gt;优化代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Rose {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        System.out.println(roseSum(&lt;/span&gt;2,3&lt;span&gt;));
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; roseSum(&lt;span&gt;int&lt;/span&gt; k,&lt;span&gt;int&lt;/span&gt;&lt;span&gt; n){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(k &amp;gt; n) &lt;span&gt;return&lt;/span&gt; 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(k ==&lt;span&gt; n){
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; count = 1&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 0;i&amp;lt;n;i++&lt;span&gt;)
                count&lt;/span&gt;*=&lt;span&gt;i;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; count;
        }
        &lt;/span&gt;&lt;span&gt;long&lt;/span&gt;[][] DP = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;[2&lt;span&gt;][n];
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 0 ;i&amp;lt;n;i++&lt;span&gt;)
            DP[&lt;/span&gt;0][i] = 1&lt;span&gt;;
        DP[&lt;/span&gt;1][0] = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = 1;i&amp;lt;k;i++&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j = 1;j&amp;lt;n;j++&lt;span&gt;)
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;((i&amp;amp;1)==1){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;此时i是奇数&lt;/span&gt;
                    DP[1][j] = (i+1)*(DP[1][j-1]+DP[0][j-1&lt;span&gt;]);
                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                    DP[&lt;/span&gt;0][j] = (i+1)*(DP[0][j-1]+DP[1][j-1&lt;span&gt;]);
                }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; DP[(k-1)&amp;amp;1][n-1]%772235&lt;span&gt;;        
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这回的空间复杂度为O(N)。&lt;/p&gt;

&lt;p&gt;自己想出来的，不一定准确，没经过大量试验，如有错误，请各位朋友指出，谢谢~&lt;/p&gt;
</description>
<pubDate>Tue, 03 Apr 2018 15:48:00 +0000</pubDate>
<dc:creator>郭耀华</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/guoyaohua/p/8711911.html</dc:identifier>
</item>
<item>
<title>R语言基础2 - nommy</title>
<link>http://www.cnblogs.com/ahxh2000/p/8711894.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ahxh2000/p/8711894.html</guid>
<description>&lt;p&gt;&lt;br/&gt;----------------------------------R语言学习与科研应用，科研作图，数据统计挖掘分析，群：719954246--------------------------&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;通常，在使用任何编程语言进行编程时，您需要使用各种变量来存储各种信息。 变量只是保留值的存储位置。 这意味着，当你创建一个变量，你必须在内存中保留一些空间来存储它们。&lt;br/&gt;您可能想存储各种数据类型的信息，如字符，宽字符，整数，浮点，双浮点，布尔等。基于变量的数据类型，操作系统分配内存并决定什么可以存储在保留内存中。&lt;br/&gt;与其他编程语言（如C中的C和java）相反，变量不会声明为某种数据类型。 变量分配有R对象，R对象的数据类型变为变量的数据类型。尽管有很多类型的R对象，但经常使用的是：&lt;br/&gt;向量&lt;br/&gt;矩阵&lt;br/&gt;数组&lt;br/&gt;因子&lt;br/&gt;数据帧&lt;br/&gt;列表&lt;/p&gt;
&lt;p&gt;（1）基本数据类型&lt;/p&gt;
&lt;p&gt;这些对象中最简单的是向量对象，并且这些向量有六种数据类型，也称为六类向量。 其他R对象建立在原子向量之上。&lt;br/&gt;数据类型 例 校验&lt;br/&gt;Logical（逻辑型） TRUE, FALSE&lt;br/&gt;v &amp;lt;- TRUE&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;logical&quot;&lt;br/&gt;Numeric（数字） 12.3，5，999&lt;br/&gt;v &amp;lt;- 23.5&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;numeric&quot;&lt;br/&gt;Integer（整型） 2L，34L，0L&lt;br/&gt;v &amp;lt;- 2L&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;integer&quot;&lt;br/&gt;Complex（复合型） 3 + 2i&lt;br/&gt;v &amp;lt;- 2+5i&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;complex&quot;&lt;br/&gt;Character（字符） 'a' , '&quot;good&quot;, &quot;TRUE&quot;, '23.4'&lt;br/&gt;v &amp;lt;- &quot;TRUE&quot;&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;character&quot;&lt;br/&gt;Raw（原型） &quot;Hello&quot; 被存储为 48 65 6c 6c 6f&lt;br/&gt;v &amp;lt;- charToRaw(&quot;Hello&quot;)&lt;br/&gt;print(class(v))&lt;br/&gt;它产生以下结果 -&lt;br/&gt;[1] &quot;raw&quot;&lt;br/&gt;在R编程中，非常基本的数据类型是称为向量的R对象，其保存如上所示的不同类的元素。 请注意，在R中，类的数量不仅限于上述六种类型。 例如，我们可以使用许多原子向量并创建一个数组，其类将成为数组。&lt;/p&gt;
&lt;p&gt;（2）Vectors 向量&lt;/p&gt;
&lt;p&gt;当你想用多个元素创建向量时，你应该使用c()函数，这意味着将元素组合成一个向量。&lt;br/&gt;# Create a vector.&lt;br/&gt;apple &amp;lt;- c('red','green',&quot;yellow&quot;)&lt;br/&gt;print(apple)&lt;/p&gt;
&lt;p&gt;# Get the class of the vector.&lt;br/&gt;print(class(apple))&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;[1] &quot;red&quot; &quot;green&quot; &quot;yellow&quot;&lt;br/&gt;[1] &quot;character&quot;&lt;/p&gt;
&lt;p&gt;（3）Lists 列表&lt;/p&gt;
&lt;p&gt;列表是一个R对象，它可以在其中包含许多不同类型的元素，如向量，函数甚至其中的另一个列表。&lt;br/&gt;# Create a list.&lt;br/&gt;list1 &amp;lt;- list(c(2,5,3),21.3,sin)&lt;/p&gt;
&lt;p&gt;# Print the list.&lt;br/&gt;print(list1)&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;[[1]]&lt;br/&gt;[1] 2 5 3&lt;/p&gt;
&lt;p&gt;[[2]]&lt;br/&gt;[1] 21.3&lt;/p&gt;
&lt;p&gt;[[3]]&lt;br/&gt;function (x) .Primitive(&quot;sin&quot;)&lt;/p&gt;
&lt;p&gt;（4）Matrices 矩阵&lt;/p&gt;
&lt;p&gt;矩阵是二维矩形数据集。 它可以使用矩阵函数的向量输入创建。&lt;br/&gt;# Create a matrix.&lt;br/&gt;M = matrix( c('a','a','b','c','b','a'), nrow = 2, ncol = 3, byrow = TRUE)&lt;br/&gt;print(M)&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;[,1] [,2] [,3]&lt;br/&gt;[1,] &quot;a&quot; &quot;a&quot; &quot;b&quot;&lt;br/&gt;[2,] &quot;c&quot; &quot;b&quot; &quot;a&quot;&lt;/p&gt;

&lt;p&gt;（5）Arrays 数组&lt;/p&gt;
&lt;p&gt;虽然矩阵被限制为二维，但阵列可以具有任何数量的维度。 数组函数使用一个dim属性创建所需的维数。 在下面的例子中，我们创建了一个包含两个元素的数组，每个元素为3x3个矩阵。&lt;br/&gt;# Create an array.&lt;br/&gt;a &amp;lt;- array(c('green','yellow'),dim = c(3,3,2))&lt;br/&gt;print(a)&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;, , 1&lt;/p&gt;
&lt;p&gt;[,1] [,2] [,3]&lt;br/&gt;[1,] &quot;green&quot; &quot;yellow&quot; &quot;green&quot;&lt;br/&gt;[2,] &quot;yellow&quot; &quot;green&quot; &quot;yellow&quot;&lt;br/&gt;[3,] &quot;green&quot; &quot;yellow&quot; &quot;green&quot;&lt;/p&gt;
&lt;p&gt;, , 2&lt;/p&gt;
&lt;p&gt;[,1] [,2] [,3]&lt;br/&gt;[1,] &quot;yellow&quot; &quot;green&quot; &quot;yellow&quot;&lt;br/&gt;[2,] &quot;green&quot; &quot;yellow&quot; &quot;green&quot;&lt;br/&gt;[3,] &quot;yellow&quot; &quot;green&quot; &quot;yellow&quot;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;（6）Factors 因子&lt;/p&gt;
&lt;p&gt;因子是使用向量创建的r对象。 它将向量与向量中元素的不同值一起存储为标签。 标签总是字符，不管它在输入向量中是数字还是字符或布尔等。 它们在统计建模中非常有用。&lt;br/&gt;使用factor()函数创建因子。nlevels函数给出级别计数。&lt;br/&gt;# Create a vector.&lt;br/&gt;apple_colors &amp;lt;- c('green','green','yellow','red','red','red','green')&lt;/p&gt;
&lt;p&gt;# Create a factor object.&lt;br/&gt;factor_apple &amp;lt;- factor(apple_colors)&lt;/p&gt;
&lt;p&gt;# Print the factor.&lt;br/&gt;print(factor_apple)&lt;br/&gt;print(nlevels(factor_apple))&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;[1] green green yellow red red red yellow green&lt;br/&gt;Levels: green red yellow&lt;br/&gt;# applying the nlevels function we can know the number of distinct values&lt;br/&gt;[1] 3&lt;/p&gt;
&lt;p&gt;（7）Data Frames 数据帧&lt;/p&gt;
&lt;p&gt;数据帧是表格数据对象&lt;br/&gt;使用data.frame()函数创建数据帧。&lt;br/&gt;# Create the data frame.&lt;br/&gt;BMI &amp;lt;- data.frame(&lt;br/&gt;gender = c(&quot;Male&quot;, &quot;Male&quot;,&quot;Female&quot;),&lt;br/&gt;height = c(152, 171.5, 165),&lt;br/&gt;weight = c(81,93, 78),&lt;br/&gt;Age = c(42,38,26)&lt;br/&gt;)&lt;br/&gt;print(BMI)&lt;br/&gt;当我们执行上面的代码，它产生以下结果&lt;br/&gt;gender height weight Age&lt;br/&gt;1 Male 152.0 81 42&lt;br/&gt;2 Male 171.5 93 38&lt;br/&gt;3 Female 165.0 78 26&lt;/p&gt;
&lt;p&gt;----------------------------------R语言学习与科研应用，科研作图，数据统计挖掘分析，群：719954246--------------------------&lt;/p&gt;
</description>
<pubDate>Tue, 03 Apr 2018 15:44:00 +0000</pubDate>
<dc:creator>nommy</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ahxh2000/p/8711894.html</dc:identifier>
</item>
<item>
<title>OpenCASCADE Trihedron Law - opencascade</title>
<link>http://www.cnblogs.com/opencascade/p/OpenCASCADE_Trihedron_Law.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/opencascade/p/OpenCASCADE_Trihedron_Law.html</guid>
<description>&lt;h3 align=&quot;center&quot;&gt;OpenCASCADE Trihedron Law&lt;/h3&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;mailto:eryar@163.com&quot;&gt;eryar@163.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract.&lt;/strong&gt; In differential geometry the Frenet-Serret formulas describe the kinematic properties of a particle moving along a continuous, differentiable curve in 3d space, or the geometric properties of the curve itself irrespective of any motion. More specifically, the formulas describe the derivatives of the so-called Tangent, Normal and Binormal unit vectors in terms of each other. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Words.&lt;/strong&gt; Frenet-Serret Frame, TNB frame, Trihedron Law&lt;/p&gt;
&lt;h3&gt;1. Introduction&lt;/h3&gt;
&lt;p&gt;参数曲线上的局部坐标系，也称为标架Frame，OpenCASCADE中叫Trihedron。这个局部坐标系随着曲线上点的运动而运动，所以也称为活动坐标系。活动坐标系中各坐标轴的选取：&lt;/p&gt;
&lt;p&gt;l T是参数曲线的切线方向；&lt;/p&gt;
&lt;p&gt;l N是曲线的主法线方向，或称主法矢；主法矢总是指向曲线凹入的方向；&lt;/p&gt;
&lt;p&gt;l B是副法矢；当T 和N确定后，通过叉乘即得到B。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231056179-1545258741.png&quot;&gt;&lt;img title=&quot;wps_clip_image-12476&quot; src=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231056563-298102125.png&quot; alt=&quot;wps_clip_image-12476&quot; width=&quot;266&quot; height=&quot;360&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Figure 1. T, N, B frame of a curve (from wiki)&lt;/p&gt;
&lt;p&gt;定义一个活动标架有什么作用呢？把这个问题先保留一下。本文先介绍OpenCASCADE中的标架规则Trihedron Law。&lt;/p&gt;
&lt;h3&gt;2.Trihedron Law&lt;/h3&gt;
&lt;p&gt;在OpenCASCADE中，类GeomFill_TrihedronLaw定义了曲线活动标架。其类图如下所示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231056921-441957296.png&quot;&gt;&lt;img title=&quot;wps_clip_image-18899&quot; src=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231057274-12923035.png&quot; alt=&quot;wps_clip_image-18899&quot; width=&quot;556&quot; height=&quot;359&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Figure 2. Trihedron Law define Trihedron along a Curve&lt;/p&gt;
&lt;p&gt;从基类GeomFill_TrihedronLaw派生出了各种标架，如：&lt;/p&gt;
&lt;p&gt;l GeomFill_Fixed：固定的活动动标架，即标架沿着曲线移动时，标架的三个方向是固定的；&lt;/p&gt;
&lt;p&gt;l GeomFill_Frenet： Frenet标架；&lt;/p&gt;
&lt;p&gt;l GeomFill_Darboux ：Darboux标架；&lt;/p&gt;
&lt;p&gt;l GeomFill_ConstantBiNormal：副法矢固定的标架；&lt;/p&gt;
&lt;h3&gt;3. Code Demo&lt;/h3&gt;
&lt;p&gt;下面通过示例代码来显示出曲线上的Frenet标架，GeomFill_TrihedronLaw子类的用法类似。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;75&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
Copyright(C) 2018 Shing Liu(eryar@163.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files(the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions :

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;


#include &lt;/span&gt;&amp;lt;TColgp_Array1OfPnt.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;math_BullardGenerator.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;GCPnts_UniformAbscissa.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GCPnts_UniformDeflection.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GCPnts_TangentialDeflection.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GCPnts_QuasiUniformDeflection.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;Geom_BSplineCurve.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;GeomAdaptor_HCurve.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;GeomAPI_PointsToBSpline.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;GeomFill_Fixed.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_Frenet.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_ConstantBiNormal.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_CorrectedFrenet.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_Darboux.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_DiscreteTrihedron.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_GuideTrihedronAC.hxx&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&amp;lt;GeomFill_GuideTrihedronPlan.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;BRepBuilderAPI_MakeEdge.hxx&amp;gt;&lt;span&gt;

#include &lt;/span&gt;&amp;lt;BRepTools.hxx&amp;gt;


&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKernel.lib&quot;)
&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKMath.lib&quot;)

&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKG2d.lib&quot;)
&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKG3d.lib&quot;)
&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKGeomBase.lib&quot;)
&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKGeomAlgo.lib&quot;)

&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKBRep.lib&quot;)
&lt;span&gt;#pragma&lt;/span&gt; comment(lib, &quot;TKTopAlgo.lib&quot;)


&lt;span&gt;void&lt;/span&gt;&lt;span&gt; test()
{
    TColgp_Array1OfPnt aPoints(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;&lt;span&gt;);
    math_BullardGenerator aBullardGenerator;
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Standard_Integer i = aPoints.Lower(); i &amp;lt;= aPoints.Upper(); ++&lt;span&gt;i)
    {
        Standard_Real aX &lt;/span&gt;= aBullardGenerator.NextReal() * &lt;span&gt;50.0&lt;/span&gt;&lt;span&gt;;
        Standard_Real aY &lt;/span&gt;= aBullardGenerator.NextReal() * &lt;span&gt;50.0&lt;/span&gt;&lt;span&gt;;
        Standard_Real aZ &lt;/span&gt;= aBullardGenerator.NextReal() * &lt;span&gt;50.0&lt;/span&gt;&lt;span&gt;;

        aPoints.SetValue(i, gp_Pnt(aX, aY, aZ));
    }

    GeomAPI_PointsToBSpline aBSplineFitter(aPoints);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;aBSplineFitter.IsDone())
    {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
    }

    std::ofstream aTclFile(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;d:/tcl/trihedron.tcl&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

    aTclFile &lt;/span&gt;&amp;lt;&amp;lt; std::&lt;span&gt;fixed&lt;/span&gt;&lt;span&gt;;
    aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vclear&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;

    Handle(Geom_BSplineCurve) aBSplineCurve &lt;/span&gt;=&lt;span&gt; aBSplineFitter.Curve();
    Handle(GeomAdaptor_HCurve) aCurveAdaptor &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; GeomAdaptor_HCurve(aBSplineCurve);

    BRepBuilderAPI_MakeEdge anEdgeMaker(aBSplineCurve);
    BRepTools::Write(anEdgeMaker, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;d:/edge.brep&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

    aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;restore &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;  &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; d:/edge.brep e&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
    aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;incmesh e &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 0.01&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
    aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vdisplay e &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;

    Handle(GeomFill_Frenet) aFrenet &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; GeomFill_Frenet();
    aFrenet&lt;/span&gt;-&amp;gt;&lt;span&gt;SetCurve(aCurveAdaptor);

    GCPnts_UniformAbscissa aPointSampler(aCurveAdaptor&lt;/span&gt;-&amp;gt;Curve(), &lt;span&gt;5.0&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Standard_Integer i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt;= aPointSampler.NbPoints(); ++&lt;span&gt;i)
    {
        Standard_Real aParam &lt;/span&gt;=&lt;span&gt; aPointSampler.Parameter(i);
        gp_Pnt aP &lt;/span&gt;= aCurveAdaptor-&amp;gt;&lt;span&gt;Value(aParam);

        gp_Vec aT;
        gp_Vec aN;
        gp_Vec aB;

        aFrenet&lt;/span&gt;-&amp;gt;&lt;span&gt;D0(aParam, aT, aN, aB);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; vtrihedron in opencascade draw 6.9.1&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;aTclFile &amp;lt;&amp;lt; &quot;vtrihedron vt&quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aP.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aP.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aP.Z() &amp;lt;&amp;lt; &quot; &quot;
                 &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aB.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aB.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aB.Z() &amp;lt;&amp;lt; &quot; &quot;
                 &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aT.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aT.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aT.Z() &amp;lt;&amp;lt; std::endl;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; vtrihedron in opencascade draw 7.1.0 has bug.&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;aTclFile &amp;lt;&amp;lt; &quot;vtrihedron vt&quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot; -origin &quot; &amp;lt;&amp;lt; aP.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aP.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aP.Z() &amp;lt;&amp;lt; &quot; &quot;
            &amp;lt;&amp;lt; &quot; -zaxis &quot; &amp;lt;&amp;lt; aB.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aB.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aB.Z() &amp;lt;&amp;lt; &quot; &quot;
            &amp;lt;&amp;lt; &quot; -xaxis &quot; &amp;lt;&amp;lt; aT.X() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aT.Y() &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; aT.Z() &amp;lt;&amp;lt; std::endl;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;

        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; vtrihedron in opencascade draw 7.2.0&lt;/span&gt;
        aTclFile &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vtrihedron vt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -origin &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aP.X() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aP.Y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aP.Z() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;
            &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -zaxis &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aB.X() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aB.Y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aB.Z() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;
            &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -xaxis &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aT.X() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aT.Y() &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; aT.Z() &amp;lt;&amp;lt;&lt;span&gt; std::endl;
        aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vtrihedron vt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -labels xaxis T 1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
        aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vtrihedron vt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -labels yaxis N 1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
        aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vtrihedron vt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; -labels zaxis B 1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;

        aTclFile &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vsize vt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; std::endl;
    }
}

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; main(&lt;span&gt;int&lt;/span&gt; argc, &lt;span&gt;char&lt;/span&gt;*&lt;span&gt; argv[])
{
    test();

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序通过拟合几个随机产生的点生成B样条曲线，再将曲线按弧长等距采样，将得到的参数计算出曲线上的点，及Frenet标架。再生成Draw脚本文件，最后将生成的Draw脚本文件trihedron.tcl加载到Draw Test Harness中显示结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231057670-1729003020.png&quot;&gt;&lt;img title=&quot;wps_clip_image-22393&quot; src=&quot;https://images2018.cnblogs.com/blog/534255/201804/534255-20180403231058024-1946295826.png&quot; alt=&quot;wps_clip_image-22393&quot; width=&quot;554&quot; height=&quot;457&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Figure 3. Frenet Frame&lt;/p&gt;
&lt;p&gt;由上图可知，局部坐标系的T方向为曲线的切线方向。主法向N总是指向曲线凹侧。&lt;/p&gt;
&lt;h3&gt;4. Conclusion&lt;/h3&gt;
&lt;p&gt;曲线的活动标架是《微分几何》中一个很基础的概念。有了曲线的活动标架，扫掠造型Sweep算法的实现有了一些思路。当给定一个轮廓线后，将轮廓线沿着路径曲线扫掠可以理解为将轮廓线变换到曲线的活动标架中。&lt;/p&gt;
&lt;p&gt;本文主要演示了Frenet活动标架的例子，读者可以将GeomFill_TrihedronLaw其他的子类表示的其他类型活动标架自己实现，加深理解。&lt;/p&gt;
&lt;h3&gt;5. References&lt;/h3&gt;
&lt;p&gt;1. 赵罡, 穆国旺, 王拉柱. 非均匀有理B样条. 清华大学出版社. 2010&lt;/p&gt;
&lt;p&gt;2. 陈维桓. 微分几何. 北京大学出版社. 2006&lt;/p&gt;
&lt;p&gt;3. 朱心雄. 自由曲线曲面造型技术. 科学出版社.  2000&lt;/p&gt;
</description>
<pubDate>Tue, 03 Apr 2018 15:11:00 +0000</pubDate>
<dc:creator>opencascade</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/opencascade/p/OpenCASCADE_Trihedron_Law.html</dc:identifier>
</item>
<item>
<title>OpenShift实战(一)：OpenShift高级安装 - 杜先生的博客</title>
<link>http://www.cnblogs.com/dukuan/p/8711717.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dukuan/p/8711717.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.1 服务器基本信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　本次安装采用一个master、5个node、3个etcd，node节点两块硬盘，60G磁盘用于docker storage，xxx改为自己的域名或主机名。&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;功能&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;IP&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;内存&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;磁盘&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;CPU&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;　　　　　　　　　　　　　　      master1.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Master节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.110&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;16G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;node1.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Node节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.112&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G/60G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;node2.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Node节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.113&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G/60G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;node3.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Node节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.116&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G/60G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;node4.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Node节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.114&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G/60G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;node5.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;Node节点&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.117&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;8G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G/60G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd1.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.109&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;2C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd2.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.111&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;2C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot; width=&quot;30%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd3.xxx.net&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;20%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;etcd&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;19%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;192.168.10.115&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;4G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;12%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;40G&lt;/p&gt;
&lt;/td&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;8%&quot;&gt;
&lt;p align=&quot;center&quot;&gt;2C&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.2 基本配置&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;hosts文件配置&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@openshift-master1 ~]# cat /etc/hosts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　192.168.10.110 master1.xxx.net&lt;/p&gt;
&lt;p&gt;　　192.168.10.112 node1.xxx.net&lt;/p&gt;
&lt;p&gt;　　192.168.10.113 node2.xxx.net &lt;/p&gt;
&lt;p&gt;　　192.168.10.116 node3.xxx.net &lt;/p&gt;
&lt;p&gt;　　192.168.10.114 node4.xxx.net&lt;/p&gt;
&lt;p&gt;　　192.168.10.117 node5.xxx.net &lt;/p&gt;
&lt;p&gt;　　192.168.10.109 etcd1.xxx.net&lt;/p&gt;
&lt;p&gt;　　192.168.10.111 etcd2.xxx.net&lt;/p&gt;
&lt;p&gt;　　192.168.10.115 etcd3.xxx.net&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;Master1节点&lt;/span&gt;&lt;/strong&gt;SSH互信&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@master1 ~]# ssh-keygen -t rsa&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Generating public/private rsa key pair.&lt;/p&gt;
&lt;p&gt;　　Enter file in which to save the key (/root/.ssh/id_rsa):&lt;/p&gt;
&lt;p&gt;　　Created directory '/root/.ssh'.&lt;/p&gt;
&lt;p&gt;　　Enter passphrase (empty for no passphrase):&lt;/p&gt;
&lt;p&gt;　　Enter same passphrase again:&lt;/p&gt;
&lt;p&gt;　　Your identification has been saved in /root/.ssh/id_rsa.&lt;/p&gt;
&lt;p&gt;　　Your public key has been saved in /root/.ssh/id_rsa.pub.&lt;/p&gt;
&lt;p&gt;　　The key fingerprint is:&lt;/p&gt;
&lt;p&gt;　　SHA256:yFOKV/QRdQoxQ12uW8v0UWmpLcrxDQo8VNyVEuRWHlE root@master1.xxx.net&lt;/p&gt;
&lt;p&gt;　　The key's randomart image is:&lt;/p&gt;
&lt;p&gt;　　+---[RSA 2048]----+&lt;/p&gt;
&lt;p&gt;　　|        ..X*++==E|&lt;/p&gt;
&lt;p&gt;　　|       . ..*o*o.+|&lt;/p&gt;
&lt;p&gt;　　|        o.. .oo=.|&lt;/p&gt;
&lt;p&gt;　　|     o =o   ..+ .|&lt;/p&gt;
&lt;p&gt;　　|    . * S+ ..+oo |&lt;/p&gt;
&lt;p&gt;　　|     . .  + ==+o.|&lt;/p&gt;
&lt;p&gt;　　|           +..o..|&lt;/p&gt;
&lt;p&gt;　　|                 |&lt;/p&gt;
&lt;p&gt;　　|                 |&lt;/p&gt;
&lt;p&gt;　　+----[SHA256]-----+&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;for i in `cat /etc/hosts | grep -v openshift | grep xxx.net | awk '{print $2}'`;do ssh-copy-id -i .ssh/id_rsa.pub $i;done&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;安装基本环境&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　yum install wget git net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct vim ntpdate httpd-tools -y&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;更改时区并同步时间&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　ntpdate cn.ntp.org.cn&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;yum update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　reboot&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　yum install docker-1.13.1 -y&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　备注：docker可安装docker-ce　&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;激活网络&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;nmcli con show&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　nmcli con up ens160&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　nmcli con mod ens160 connection.autoconnect yes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　systemctl restart NetworkManager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有Node节点&lt;/span&gt;&lt;/strong&gt;更改/etc/sysconfig/docker-storage-setup如下：&lt;/p&gt;
&lt;p&gt;　　DEVS=/dev/sdb&lt;/p&gt;
&lt;p&gt;　　VG=docker-vg    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有Node节点&lt;/span&gt;&lt;/strong&gt;执行docker-storage-setup&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@openshift-node1 ~]# docker-storage-setup  &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　 WARNING: Device for PV 28oz2p-ZKrx-gSc2-k6Tg-E49Y-MK4A-YcQq7h not found or rejected by a filter.&lt;/p&gt;
&lt;p&gt; 　　 WARNING: Device for PV 28oz2p-ZKrx-gSc2-k6Tg-E49Y-MK4A-YcQq7h not found or rejected by a filter.&lt;/p&gt;
&lt;p&gt;  　　INFO: Device node /dev/sdb1 exists.&lt;/p&gt;
&lt;p&gt; 　　 WARNING: Device for PV 28oz2p-ZKrx-gSc2-k6Tg-E49Y-MK4A-YcQq7h not found or rejected by a filter.&lt;/p&gt;
&lt;p&gt;  　　Physical volume &quot;/dev/sdb1&quot; successfully created.&lt;/p&gt;
&lt;p&gt;  　　WARNING: Device for PV 28oz2p-ZKrx-gSc2-k6Tg-E49Y-MK4A-YcQq7h not found or rejected by a filter.&lt;/p&gt;
&lt;p&gt;  　　Volume group &quot;docker-vg&quot; successfully created&lt;/p&gt;
&lt;p&gt;  　　WARNING: Device for PV 28oz2p-ZKrx-gSc2-k6Tg-E49Y-MK4A-YcQq7h not found or rejected by a filter.&lt;/p&gt;
&lt;p&gt;  　　Using default stripesize 64.00 KiB.&lt;/p&gt;
&lt;p&gt;  　　Rounding up size to full physical extent 84.00 MiB&lt;/p&gt;
&lt;p&gt;  　　Thin pool volume with chunk size 512.00 KiB can address at most 126.50 TiB of data.&lt;/p&gt;
&lt;p&gt;  　　Logical volume &quot;docker-pool&quot; created.&lt;/p&gt;
&lt;p&gt;  　　Logical volume docker-vg/docker-pool changed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;更改docker仓库地址&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;cat /etc/sysconfig/docker&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　# /etc/sysconfig/docker&lt;/p&gt;
&lt;p&gt;　　# Modify these options if you want to change the way the docker daemon runs&lt;/p&gt;
&lt;p&gt;　　# OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false'&lt;/p&gt;
&lt;p&gt;　　OPTIONS='--selinux-enabled --log-driver=journald --registry-mirror=https://docker.mirrors.ustc.edu.cn'&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;Master节点&lt;/span&gt;&lt;/strong&gt;更改epel源,并安装ansible&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;yum -y install &lt;a href=&quot;https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm&quot;&gt;https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　sed -i -e &quot;s/^enabled=1/enabled=0/&quot; /etc/yum.repos.d/epel.repo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　yum -y --enablerepo=epel install ansible pyOpenSSL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.3 etcd集群安装&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　安装etcd集群（按需安装，不与openshift在同一集群）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有节点&lt;/span&gt;&lt;/strong&gt;关闭firewalld&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@etcd1 ~]# systemctl stop firewalld&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　[root@etcd1 ~]# systemctl disable firewalld&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.&lt;/p&gt;
&lt;p&gt;　　Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.&lt;/p&gt;

&lt;p&gt;       &lt;span&gt;&lt;strong&gt;所有etcd节点&lt;/strong&gt;&lt;/span&gt;开启iptables&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@etcd1 ~]# systemctl start iptables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　[root@etcd1 ~]# systemctl enable iptables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Created symlink from /etc/systemd/system/basic.target.wants/iptables.service to /usr/lib/systemd/system/iptables.service&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;所有etcd节点&lt;/span&gt;&lt;/strong&gt;安装etcd，OpenShift高级安装模式无需自行配置etcd&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;yum install etcd -y&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.4 OpenShift高级安装&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　参考文档：&lt;/strong&gt;&lt;a href=&quot;https://docs.openshift.org/latest/install_config/install/advanced_install.html&quot;&gt;https://docs.openshift.org/latest/install_config/install/advanced_install.html&lt;/a&gt;　&lt;/p&gt;
&lt;p&gt;　　在&lt;span&gt;&lt;strong&gt;master1节点&lt;/strong&gt;&lt;/span&gt;上&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@master1 ~]# cat /etc/ansible/hosts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　# Create an OSEv3 group that contains the masters, nodes, and etcd groups&lt;/p&gt;
&lt;p&gt;　　[OSEv3:children]&lt;/p&gt;
&lt;p&gt;　　masters&lt;/p&gt;
&lt;p&gt;　　nodes&lt;/p&gt;
&lt;p&gt;　　etcd&lt;/p&gt;
&lt;p&gt;　　#lb&lt;/p&gt;
&lt;p&gt;　　# Set variables common for all OSEv3 hosts&lt;/p&gt;
&lt;p&gt;　　[OSEv3:vars]&lt;/p&gt;
&lt;p&gt;　　# SSH user, this user should allow ssh based auth without requiring a password&lt;/p&gt;
&lt;p&gt;　　ansible_ssh_user=root&lt;/p&gt;
&lt;p&gt;　　ansible_become=yes&lt;/p&gt;
&lt;p&gt;　　debug_level=2&lt;/p&gt;
&lt;p&gt;　　openshift_deployment_type=origin&lt;/p&gt;
&lt;p&gt;　　# If ansible_ssh_user is not root, ansible_become must be set to true&lt;/p&gt;
&lt;p&gt;　　#ansible_become=true&lt;/p&gt;
&lt;p&gt;　　openshift_repos_enable_testing=true&lt;/p&gt;
&lt;p&gt;　　openshift_enable_service_catalog=false&lt;/p&gt;
&lt;p&gt;　　template_service_broker_install=false&lt;/p&gt;
&lt;p&gt;　　# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider&lt;/p&gt;
&lt;p&gt;　　openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]&lt;/p&gt;
&lt;p&gt;　　openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability&lt;/p&gt;
&lt;p&gt;　　# config for metrics&lt;/p&gt;
&lt;p&gt;　　openshift_release=3.6.1&lt;/p&gt;
&lt;p&gt;　　openshift_clock_enabled=true&lt;/p&gt;
&lt;p&gt;　　#openshift_master_cluster_method=native&lt;/p&gt;
&lt;p&gt;　　#openshift_master_cluster_hostname=openshift.xxx.net&lt;/p&gt;
&lt;p&gt;　　#openshift_master_cluster_public_hostname=openshift.xxx.net&lt;/p&gt;
&lt;p&gt;　　#openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}&lt;/p&gt;
&lt;p&gt;　　# host group for masters&lt;/p&gt;
&lt;p&gt;　　[masters]&lt;/p&gt;
&lt;p&gt;　　master1.xxx.net&lt;/p&gt;
&lt;p&gt;　　#master2.xxx.net&lt;/p&gt;
&lt;p&gt;　　# host group for lb&lt;/p&gt;
&lt;p&gt;　　#[lb]&lt;/p&gt;
&lt;p&gt;　　#lb.xxx.net&lt;/p&gt;
&lt;p&gt;　　# host group for etcd&lt;/p&gt;
&lt;p&gt;　　[etcd]&lt;/p&gt;
&lt;p&gt;　　etcd3.xxx.net&lt;/p&gt;
&lt;p&gt;　　etcd5.xxx.net&lt;/p&gt;
&lt;p&gt;　　etcd4.xxx.net&lt;/p&gt;
&lt;p&gt;　　# host group for nodes, includes region info&lt;/p&gt;
&lt;p&gt;　　[nodes]&lt;/p&gt;
&lt;p&gt;　　master1.xxx.net&lt;/p&gt;
&lt;p&gt;　　#master2.xxx.net&lt;/p&gt;
&lt;p&gt;　　node1.xxx.net&lt;/p&gt;
&lt;p&gt;　　node2.xxx.net openshift_node_labels=&quot;{'region': 'infra', 'zone': 'default'}&quot;&lt;/p&gt;
&lt;p&gt;　　node3.xxx.net openshift_node_labels=&quot;{'region': 'infra', 'zone': 'default'}&quot;&lt;/p&gt;
&lt;p&gt;　　node4.xxx.net&lt;/p&gt;
&lt;p&gt;　　node5.xxx.net openshift_node_labels=&quot;{'region': 'infra', 'zone': 'default'}&quot;&lt;/p&gt;
&lt;p&gt;　　下载openshift-ansible：&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;wget &lt;a href=&quot;https://github.com/openshift/openshift-ansible/archive/openshift-ansible-3.6.173.0.104-1.tar.gz&quot;&gt;https://github.com/openshift/openshift-ansible/archive/openshift-ansible-3.6.173.0.104-1.tar.gz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　解压&lt;/p&gt;
&lt;p&gt;　　执行安装：&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;ansible-playbook -i /etc/ansible/hosts openshift-ansible-openshift-ansible-3.6.173.0.104-1/playbooks/byo/config.yml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　安装成功如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1095387/201804/1095387-20180403225534073-224429487.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.5 验证安装&lt;/strong&gt;　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;span&gt;Master1节点&lt;/span&gt;&lt;/strong&gt;上验证node&lt;/p&gt;
&lt;p&gt;　　[root@master1 ~]# oc get nodes&lt;/p&gt;
&lt;p&gt;　　NAME                        STATUS                     AGE       VERSION&lt;/p&gt;
&lt;p&gt;　　master1.xxx.net   Ready,SchedulingDisabled   38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　node1.xxx.net     Ready                      38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　node2.xxx.net     Ready                      38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　node3.xxx.net     Ready                      38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　node4.xxx.net     Ready                      38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　node5.xxx.net     Ready                      38m       v1.6.1+5115d708d7&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;&lt;strong&gt;Master1节点上&lt;/strong&gt;&lt;/span&gt;验证etcd&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@master1 ~]# yum install etcd -y&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　&lt;strong&gt;　[root@master1 ~]# etcdctl -C     https://etcd1.xxx.net:2379,https://etcd3.xxx.net:2379,https://etcd2.xxx.net:2379     --ca-file=/etc/origin/master/master.etcd-ca.crt     --cert-file=/etc/origin/master/master.etcd-client.crt     --key-file=/etc/origin/master/master.etcd-client.key cluster-health&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　member 17c82e7e21b639e7 is healthy: got healthy result from https://192.168.10.109:2379&lt;/p&gt;
&lt;p&gt;　　member 3bd39337b17b1a4e is healthy: got healthy result from https://192.168.10.111:2379&lt;/p&gt;
&lt;p&gt;　　member 62cacf31d21cfcd4 is healthy: got healthy result from https://192.168.10.115:2379&lt;/p&gt;
&lt;p&gt;　　cluster is healthy&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;[root@master1 ~]#&lt;/strong&gt; &lt;strong&gt;etcdctl -C     https://etcd1.xxx.net:2379,https://etcd3.xxx.net:2379,https://etcd2.xxx.net:2379     --ca-file=/etc/origin/master/master.etcd-ca.crt     --cert-file=/etc/origin/master/master.etcd-client.crt     --key-　　file=/etc/origin/master/master.etcd-client.key member list&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　17c82e7e21b639e7: name=etcd1.xxx.net peerURLs=https://192.168.10.109:2380 clientURLs=https://192.168.10.109:2379 isLeader=false&lt;/p&gt;
&lt;p&gt;　　3bd39337b17b1a4e: name=etcd2.xxx.net peerURLs=https://192.168.10.111:2380 clientURLs=https://192.168.10.111:2379 isLeader=false&lt;/p&gt;
&lt;p&gt;　　62cacf31d21cfcd4: name=etcd3.xxx.net peerURLs=https://192.168.10.115:2380 clientURLs=https://192.168.10.115:2379 isLeader=true&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.6 访问控制台&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;高级安装模式下会安装router(安装在infra节点上)、registry、console&lt;/p&gt;
&lt;p&gt;　　创建控制台账号&lt;span&gt;&lt;strong&gt;Master&lt;/strong&gt;&lt;/span&gt;节点&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;htpasswd -b /etc/origin/master/htpasswd dev dev2018&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　登录控制台：&lt;a href=&quot;https://master1.haixiangjinfu.net:8443/&quot;&gt;https://master1.xxx.net:8443&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　此地址需要解析到&lt;span&gt;&lt;strong&gt;master&lt;/strong&gt;&lt;/span&gt;主机上&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1095387/201804/1095387-20180403225948204-1580259138.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　搭建完成&lt;/p&gt;

</description>
<pubDate>Tue, 03 Apr 2018 15:01:00 +0000</pubDate>
<dc:creator>杜先生的博客</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dukuan/p/8711717.html</dc:identifier>
</item>
<item>
<title>surging教学视频资源汇总 - fanly11</title>
<link>http://www.cnblogs.com/fanliang11/p/8711689.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fanliang11/p/8711689.html</guid>
<description>&lt;h2&gt;surging是什么&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;span class=&quot;col-11 text-gray-dark mr-2&quot;&gt;surging 是一个分布式微服务框架,提供高性能RPC远程服务调用，采用Zookeeper、Consul作为surging服务的注册中心，集成了哈希，随机，轮询、压力最小优先作为负载均衡的算法，RPC集成采用的是netty框架，采用异步传输&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;surging的特色是什么&lt;/h2&gt;
&lt;hr/&gt;
&lt;ol&gt;&lt;li&gt;统一构建微服务；&lt;/li&gt;
&lt;li&gt;内置依赖注入，您可以自由组合依赖组件；&lt;/li&gt;
&lt;li&gt;内置服务注册中心；&lt;/li&gt;
&lt;li&gt;内置网关可以统一外部访问和管理；&lt;/li&gt;
&lt;li&gt;轻量级，高性能，模块化的RPC请求管道；&lt;/li&gt;
&lt;li&gt;构架于.NET Core上，能够在Windows，MacOS和Linux上构建和运行；&lt;/li&gt;
&lt;li&gt;简化繁琐的维护；&lt;/li&gt;
&lt;li&gt; 基于github平台的开源软件；&lt;/li&gt;
&lt;li&gt;支持负载均衡分流压力；&lt;/li&gt;
&lt;li&gt;支持基于哈希一致性的分布式缓存；&lt;/li&gt;
&lt;li&gt;支持发布/订阅交互&lt;/li&gt;
&lt;li&gt;支持日志组件&lt;/li&gt;
&lt;li&gt;作者持续不断的维护和更新完善；&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;开源地址&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dotnetcore/surging&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/surging&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;DEMO开源地址&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/billyang/SurgingDemo&quot; target=&quot;_blank&quot;&gt;https://github.com/billyang/SurgingDemo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt; &lt;/h2&gt;
&lt;h2&gt;视频大纲&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt;&lt;br/&gt;本课程主要从五个部分进行讲解：&lt;br/&gt;1.微服务入门篇&lt;br/&gt;2.surging基础入门&lt;br/&gt;3.surging 入门浅析&lt;br/&gt;4.surging 网关浅析&lt;br/&gt;5.深入剥析surging&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/192878/201804/192878-20180403225840308-49399596.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;微服务入门篇&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
&lt;h2&gt;surging 基础入门&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
&lt;h2&gt;surging 入门浅析&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
&lt;h2&gt;surging 网关浅析&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
&lt;h2&gt;深入剥析surging&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;敬请期待&lt;/p&gt;
</description>
<pubDate>Tue, 03 Apr 2018 14:56:00 +0000</pubDate>
<dc:creator>fanly11</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fanliang11/p/8711689.html</dc:identifier>
</item>
</channel>
</rss>