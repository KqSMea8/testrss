<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>一张表搞懂各种 Docker 监控方案 - 每天5分钟玩转 Docker 容器技术（86） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/7736176.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/7736176.html</guid>
<description>&lt;p&gt;&lt;span&gt;前面我们已经介绍了ps/top/stats、Sysdig、Weave Scope、cAdvisor 和 Prometheus 多种&lt;span&gt;容器监控&lt;/span&gt;工具和方案，是时候做一个比较了。下面将从五个方面来对比它们之间的优劣。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;部署容易度&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ps/top/stats 无疑是最容易使用的，它们是 Docker 自带的子命令，随时随地都可以用来快速了解容器的状态。其余几种也都能以容器的方式运行，总的来说都不算复杂。相对而言，Prometheus 涉及的组件比较多，搭建整个方案需要运行的容器数量也要多些，部署和管理的难道稍大。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据详细度&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;ps/top/stats 和 cAdvisor 能够监控容器基本的资源使用情况，Sysdig、Weave Scope 和 Prometheus 则能提供更丰富的数据。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;多 Host 监控&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Weave Scope 和 Prometheus 可以监控整个集群，而其余的工具只提供单个 Host 的监控能力。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;告警功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;只有 Prometheus 具备原生的告警功能。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;监控非容器资源&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Sysdig、Weave Scope 和 cAdvisor 可以监控到 Host 操作系统的状态， Prometheus 则可以通过 Exporter 支持应用级别的监控，比如监控 ceph、haproxy 等。&lt;/p&gt;
&lt;p&gt;四个方面的比较结果如下表所示。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171026-1508991507886028655.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171026-1508991507886028655.png&quot; alt=&quot;419.6.png&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;几点建议&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;6.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Docker ps/top/stats 最适合快速了解容器运行状态，从而判断是否需要进一步分析和排查。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Sysdig 提供了的丰富的分析和挖掘功能，是 Troubleshooting 的神器。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;cAdvisor 一般不会单独使用，通常作为其他监控工具的数据收集器，比如 Prometheus。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Weave Scope 流畅简洁的操控界面是其最大亮点，而且支持直接在 Web 界面上执行命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Prometheus 的数据模型和架构决定了它几乎具有无限的可能性。Prometheus 和 Weave Scope 都是优秀的容器监控方案。除此之外，Prometheus 还可以监控其他应用和系统，更为综合和全面。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;监控系统的选择，并不是一道单选题，应该根据需求和实际情况搭配组合，优势互补。除了这里介绍的 5 种工具和方案，监控领域还有很多选项，也都可以考虑。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;好了，容器监控这个主题就讨论完了，下一节我们开始学习日志管理。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;书籍：&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.《每天5分钟玩转Docker容器技术》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/16936307278.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Oct 2017 23:44:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/7736176.html</dc:identifier>
</item>
<item>
<title>ASP.NET Core 2.0 in Docker on Windows Container - 毕殿卿</title>
<link>http://www.cnblogs.com/bidianqing/p/7740541.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bidianqing/p/7740541.html</guid>
<description>&lt;p&gt;安装Docker for Windows &lt;a href=&quot;https://store.docker.com/editions/community/docker-ce-desktop-windows&quot; target=&quot;_blank&quot;&gt; https://store.docker.com/editions/community/docker-ce-desktop-windows&lt;/a&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171026233944883-1356018399.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;要想将一个ASP.NET Core 站点部署到Docker，首先项目必须添加Docker支持，说白了就是生成Dockerfile，有两种方式第一种是在新建项目的时候&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171026232955117-1660484249.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;还有一种方式就是通过项目右键→添加→Docker 支持&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171026233157211-1073858175.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 这是添加Docker 支持后生成的Dockerfile&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;FROM microsoft/aspnetcore:2.0
ARG source
WORKDIR /app
EXPOSE 80
COPY  ${source:-obj/Docker/publish} .
ENTRYPOINT [&quot;dotnet&quot;, &quot;WebApplication1.dll&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171026234351695-338955411.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;点击这个Docker按钮，如果你本地没有aspnetcore镜像会先拉取这个镜像，紧接着将Webapplication1这个Web应用程序Bulid成一个镜像（Image），这个时候通过命令查看有两个镜像（Image）webapplication1和microsoft/aspnetcore 还有一个正在运行的容器。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171026235535508-1502488257.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过inspect查看容器的详细信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docker inspect 6fce4391165a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要强调一点是上面的Dockerfile并不能直接拿到生成环境上用，而且一旦在VS里停止调试以后站点将会不能访问，我把刚才那个容器成为交互式容器不知道理解的对不对，先删除刚才的容器和镜像。&lt;/p&gt;
&lt;p&gt;先发布一下我们的应用程序，如果发布到文件系统默认应该是bin\Release\PublishOutpuy 这个路径我就不改了，点击发布。发布完成后将根目录下的Dockerfile拷贝到发布目录，并进行修改&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;FROM microsoft/aspnetcore:2.0
WORKDIR /app
EXPOSE 80
COPY  . .
ENTRYPOINT [&quot;dotnet&quot;, &quot;WebApplication1.dll&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用build命令手动创建镜像，在发布目录下打开命令行窗口，执行下面的命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;docker build -t webapp:dev .&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171027001141273-1382714599.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用webapp镜像创建两个容器&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171027001328148-1838612946.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171027001427117-1801299360.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/709424/201710/709424-20171027001520476-2122619398.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;两个实例已经跑起来了，想要运行更多的实例run一下就行了。&lt;/p&gt;
</description>
<pubDate>Thu, 26 Oct 2017 16:18:00 +0000</pubDate>
<dc:creator>毕殿卿</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bidianqing/p/7740541.html</dc:identifier>
</item>
<item>
<title>我推荐的 Java Web 学习路线 - l4y</title>
<link>http://www.cnblogs.com/xjshi/p/7740432.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xjshi/p/7740432.html</guid>
<description>&lt;p&gt;晚上在 V2 的 Java 的节点看到有人问 Java Web 书籍推荐。我这半年多的时间，也从别的方向开始转向 Java 服务端开发，所以，我来说下我的学习路线，帮助有需要的朋友把半只脚踏进 Spring 大门。&lt;/p&gt;
&lt;p&gt;本文所描述的路线，适合有其他面向对象语言编程经验，具备数据结构、算法、网络、数据库、设计模式、Linux 使用经验的人，如果你没有基础，这篇文章可能不适合你。&lt;/p&gt;
&lt;h2 id=&quot;工欲善其事必先利其器&quot;&gt;工欲善其事必先利其器&lt;/h2&gt;
&lt;p&gt;电脑系统推荐使用 *nix ，不论是 Linux 还是 macOS 都有强大的工具能让你学习的过程得心应手，Windows 系统也不是不可以，但 Windows 系统的终端个人很不喜欢。&lt;/p&gt;
&lt;p&gt;IDE 推荐 IntelliJ IDEA，使用 Eclipse 也是可以的，不过现在越来越多的人开始使用 IntelliJ IDEA。&lt;/p&gt;
&lt;p&gt;学习的过程中你会遇到各种各样的问题，无脑推荐 Google，鉴于目前国内的网络环境，你需要有利器能够访问 Google（比如 AT&amp;amp;T 漫游，误）。&lt;/p&gt;
&lt;h2 id=&quot;java-se&quot;&gt;Java SE&lt;/h2&gt;
&lt;p&gt;Java 基础有 &lt;em&gt;Java编程思想&lt;/em&gt;、&lt;em&gt;Java核心技术&lt;/em&gt;、&lt;em&gt;Head First Java&lt;/em&gt; 等，我选择的是 &lt;a href=&quot;https://book.douban.com/subject/2130190/&quot;&gt;Java编程思想（第4版）&lt;/a&gt;，第 22 章是讲 GUI 的，可以不看。&lt;/p&gt;
&lt;p&gt;现在你有 Java 基础了，但是现在 Java 发展到 1.9 的版本了，怎么办？&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Java编程思想（第4版）&lt;/em&gt; 基本覆盖了 1.5 版本的内容，1.6、1.7 版本的更新，可以通过网上查资料来学习。1.8 版本有比较大的更新，建议买本书系统学习，我使用的是 &lt;a href=&quot;https://book.douban.com/subject/26772632/&quot;&gt;Java 8 实战&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;好了，现在你会写 Java 代码了，但是 .java 文件如何成了 .class 文件，.class 文件长成什么样，又如何被加载到虚拟机中执行等等若干问题，难道你不好奇。这里推荐&lt;a href=&quot;https://book.douban.com/subject/24722612/&quot;&gt;深入理解Java虚拟机（第2版）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;随着时间流逝，你写了不少代码。但条条大路通罗马、再加上语言本身的语言负担，你或许会写出不那么优雅的代码，你需要前辈的经验来写清晰、健壮、高效的代码。&lt;a href=&quot;https://book.douban.com/subject/3360807/&quot;&gt;Effective Java&lt;/a&gt; 就是这么一本书。当然，还有&lt;em&gt;重构&lt;/em&gt;、&lt;em&gt;代码整洁之道&lt;/em&gt;这样的书，但这里只讨论 Java 。&lt;/p&gt;
&lt;h2 id=&quot;web&quot;&gt;Web&lt;/h2&gt;
&lt;p&gt;强烈不推荐上来直接上框架，你需要先了解 JSP、Servlet。这里我使用的是 &lt;a href=&quot;https://book.douban.com/subject/1942934/&quot;&gt;Head First Servlets &amp;amp; JSP&lt;/a&gt;，&lt;a href=&quot;https://book.douban.com/subject/1173876/&quot;&gt;Servlet与JSP核心编程&lt;/a&gt;这本书网上评价也不错。&lt;/p&gt;
&lt;p&gt;好了，现在来说企业中的框架该怎么学。最最最重要的是，学的过程中一定要动手。&lt;/p&gt;
&lt;p&gt;万事开头难。我最开始接触的时候，也是不知道如何开始框架的学习，在网络找了很多方法，浪费了不少时间，记住只有适合自己的才是最好的。在开始介绍前，再重复一遍，一动手尝试，二大胆猜测并验证。&lt;/p&gt;
&lt;h3 id=&quot;spring&quot;&gt;1. Spring&lt;/h3&gt;
&lt;p&gt;在我刚开始的时候，很多人推荐直接读&lt;a href=&quot;https://spring.io/&quot;&gt;官方文档&lt;/a&gt;，经过验证，这种方法不适合初学者，或者说不适合我。&lt;/p&gt;
&lt;p&gt;这里我使用的是&lt;a href=&quot;https://book.douban.com/subject/24714203/&quot;&gt;Spring实战&lt;/a&gt;，学 Spring 一定要理解&lt;strong&gt;依赖注入&lt;/strong&gt;（你说控制反转也行）和 &lt;strong&gt;AOP&lt;/strong&gt;，跟着这本书敲，书中关于配置的东西一定要看仔细、理解好，不然配错了，自己找起来可能很麻烦。&lt;/p&gt;
&lt;h3 id=&quot;spring-与-mybatisredis-等其他框架的整合&quot;&gt;2. Spring 与 MyBatis、Redis 等其他框架的整合。&lt;/h3&gt;
&lt;p&gt;MyBatis 推荐官方文档，然后找个 demo 做一下，自己再练习练习就可以了。&lt;/p&gt;
&lt;p&gt;与 Spring 整合的时候参考文档，可以很简单的完成。&lt;/p&gt;
&lt;p&gt;Redis 等其他框架的整合参考 Spring 实战，或者找资料都是可以的。&lt;/p&gt;
&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;
&lt;p&gt;要不要看视频这个事，我的观点是能不看就不看，但不要因噎废食。慕课网上有 &lt;a href=&quot;http://www.imooc.com/course/programdetail/pid/59&quot;&gt;SSM 框架的视频&lt;/a&gt;，对于这个路径，我的经验是直接跳过前两个，即&lt;em&gt;战斗伊始--Spring&lt;/em&gt;和&lt;em&gt;转战阵地--SpringMVC&lt;/em&gt;，这两部分看 &lt;em&gt;Spring实战&lt;/em&gt;就可以了，后边两个可以看看。&lt;/p&gt;
&lt;p&gt;注意，针对这个慕课网这个视频我这里解释的是上文的你都做了，且自己写的服务能够正常运行。&lt;/p&gt;
&lt;p&gt;刚接触框架配置很容易出错，出错的时候一定要耐心看输出的信息，有的很简单可能是手误，有的可能可能需要你对框架有些理解，所以 &lt;em&gt;Just Google It&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;手动倒入 jar 包费时费力，上 maven 啊。&lt;/p&gt;
&lt;p&gt;好了，你的服务跑起来了，你的半只脚已经进入了 Spring 的大门，请继续加油。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;我在 Github 上有一个基于 SSM（Spring、Spring MVC、MyBatis）的小项目，部分学习内容会在该项目中使用。&lt;/p&gt;
&lt;p&gt;该项目 Spring 相关配置，完全使用基于注解的方式。博主在刚接触各种配置的时候，绕了一些弯路。&lt;/p&gt;
&lt;p&gt;对于刚接触这些框架的朋友，该项目或许会有些许帮助。如果在理解该项目时或参考时遇到任何问题，欢迎通过你能找到的任何方式联系我，非常乐意共同学习。&lt;/p&gt;
&lt;p&gt;项目地址为：&lt;a href=&quot;https://github.com/XjShi/spittr&quot;&gt;spittr&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;文中提高了慕课网，如果你喜欢 xml 配置的方式，可参考另外一个项目 &lt;a href=&quot;https://github.com/XjShi/spittr&quot;&gt;seckill&lt;/a&gt; 。该项目是博主在慕课网上学习&lt;a href=&quot;http://www.imooc.com/u/2145618/courses?sort=publish&quot;&gt;该课程&lt;/a&gt;的源代码，项目中没有完全采用基于注解的方式，相比而言，该项目在配置方面更加老道。&lt;/p&gt;
&lt;p&gt;我写完了，如果你有什么不明白的可以发邮件给我。如果文中有不合适的地方，也请指正。我的邮箱地址是：&lt;a href=&quot;mailto:shixj.cs@foxmail.com&quot;&gt;shixj.cs@foxmail.com&lt;/a&gt;。&lt;/p&gt;
</description>
<pubDate>Thu, 26 Oct 2017 16:10:00 +0000</pubDate>
<dc:creator>l4y</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xjshi/p/7740432.html</dc:identifier>
</item>
<item>
<title>BandwagonHost搬瓦工VPS自建 - 存..</title>
<link>http://www.cnblogs.com/COIN/p/7740245.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/COIN/p/7740245.html</guid>
<description>&lt;p&gt;地址：&lt;a href=&quot;https://bwh1.net/aff.php?aff=18648&quot;&gt;https://bwh1.net/aff.php?aff=18648&lt;/a&gt; ，购买$2.99的就够用了（现在没有$2.99的了，最低是$4.99）&lt;/p&gt;
&lt;p&gt;步骤一：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222530414-462130685.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤二：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222644086-1948955402.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤三：选图中的选项，然后点 Add to Cart&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222849711-1720594777.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤四：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222937992-1237190140.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤五：填个人信息，地址可以随便填。 然后选Alipay是支付宝支付，勾上方框，最后点Complete Order&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222943023-1762007277.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;步骤六：就是支付，这里就不截图了。支付完就可以了。因为我在这个网站注册过了，没注册过应该还有一个注册的环节。支付完后会调到你的主页，如果没有点 Register。按下面流程进入他的控制界面&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026222949242-151724592.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223007648-1822363882.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223121836-1777325444.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤七：在控制台界面安装系统，点Reload后会重新安装系统，要等一会儿才能访问。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223136492-844949740.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;步骤八：安装系统完成后，你会收到一份邮件，里面有个密码&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223210226-631919453.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;步骤九：进入系统命令界面，输入 root，再输入你的密码，输密码的时候不会有内容，输完按回车就行了。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223226242-571161850.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;步骤十：安装程序，按下面的命令打，一个个安装完即可，最后一个命令会打开一个&lt;/p&gt;

&lt;p&gt;方法1：&lt;/p&gt;
&lt;p&gt;# yum install -y m2crypto python-setuptools&lt;/p&gt;
&lt;p&gt;# easy_install pip&lt;/p&gt;
&lt;p&gt;# pip install shadowsocks&lt;/p&gt;
&lt;p&gt;# vi /etc/shadowsocks.json&lt;/p&gt;



&lt;p&gt;写入配置如下&lt;/p&gt;

&lt;p&gt;配置防火墙并开启防火墙相应的端口(443为上面设置的端口)&lt;/p&gt;
&lt;p&gt;$ yum install -y firewalld&lt;/p&gt;
&lt;p&gt;$ systemctl start firewalld&lt;/p&gt;
&lt;p&gt;$ firewall-cmd --permanent --zone=public --add-port=443/tcp&lt;/p&gt;
&lt;p&gt;$ firewall-cmd --reload&lt;/p&gt;
&lt;p&gt;启动Shadowsocks，改为“-d stop”可停止&lt;/p&gt;
&lt;p&gt;$ ssserver -c /etc/shadowsocks.json -d start&lt;/p&gt;

&lt;p&gt;步骤十一：在本机安装客户端，百度云盘下载&lt;/p&gt;
&lt;p&gt;PC版：https://pan.baidu.com/s/1hslCkWc 密码: peky&lt;/p&gt;
&lt;p&gt;Android版：https://pan.baidu.com/s/1eRLXOjw 密码: ybis&lt;/p&gt;
&lt;p&gt;IOS：到App Store搜Shadowrocket下载&lt;/p&gt;
&lt;p&gt;然后按如下配置，输入你自己的服务器地址和密码就确定后，你的网络就可以访问Google等等等了.. 移动端配置内容差不多，配置好后多试几次，连通后等一会才能用。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/431345/201710/431345-20171026223724336-1462165553.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 26 Oct 2017 15:55:00 +0000</pubDate>
<dc:creator>存..</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/COIN/p/7740245.html</dc:identifier>
</item>
<item>
<title>(MariaDB)MySQL内置函数大全 - 骏马金龙</title>
<link>http://www.cnblogs.com/f-ck-need-u/p/7740235.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/f-ck-need-u/p/7740235.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;a&gt;&lt;span&gt;本文目录：&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1&quot;&gt;&lt;span&gt;1. 字符串函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.1&quot;&gt;&lt;span&gt;1.1 字符串连接函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.2&quot;&gt;&lt;span&gt;1.2 lower()、upper()、left()、right()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.3&quot;&gt;&lt;span&gt;1.3 填充函数lpad()和rpad()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.4&quot;&gt;&lt;span&gt;1.4 trim()、ltrim()、rtrim()及trim()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.5&quot;&gt;&lt;span&gt;1.5 字符串重复函数repeat()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.6&quot;&gt;&lt;span&gt;1.6 字符串替换函数replace()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.7&quot;&gt;&lt;span&gt;1.7 字符串插入替换函数insert()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.8&quot;&gt;&lt;span&gt;1.8 字符串提取substring()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.9&quot;&gt;&lt;span&gt;1.9 字符串比较函数strcmp()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.10&quot;&gt;&lt;span&gt;1.10 字符串长度函数length()和char_length()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.11&quot;&gt;&lt;span&gt;1.11 字符串位置函数locate()、position()和instr()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.12&quot;&gt;&lt;span&gt;1.12 字符串位置函数find_in_set()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.13&quot;&gt;&lt;span&gt;1.13 字符串位置函数field()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.14&quot;&gt;&lt;span&gt;1.14 指定位置的字符串函数elt()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog1.15&quot;&gt;&lt;span&gt;1.15 字符串反转函数reverse()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2&quot;&gt;&lt;span&gt;2. 数学函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.1&quot;&gt;&lt;span&gt;2.1 绝对值函数ABS()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.2&quot;&gt;&lt;span&gt;2.2 取模函数mod()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.3&quot;&gt;&lt;span&gt;2.3 四舍五入函数round()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.4&quot;&gt;&lt;span&gt;2.4 位数截断函数truncate()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.5&quot;&gt;&lt;span&gt;2.5 地板函数floor()和天花板函数ceiling()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.6&quot;&gt;&lt;span&gt;2.6 随机函数rand()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.7&quot;&gt;&lt;span&gt;2.7 最值函数least()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog2.8&quot;&gt;&lt;span&gt;2.8 最值函数greastest()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3&quot;&gt;&lt;span&gt;3. 日期时间函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.1&quot;&gt;&lt;span&gt;3.1 当前日期时间&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.2&quot;&gt;&lt;span&gt;3.2 week()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.3&quot;&gt;&lt;span&gt;3.3 year()、monthname()、quarter()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.4&quot;&gt;&lt;span&gt;3.4 hour()、minute()、second()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.5&quot;&gt;&lt;span&gt;3.5 extract()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.6&quot;&gt;&lt;span&gt;3.6 dayname()和dayofweek()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.7&quot;&gt;&lt;span&gt;3.7 日期时间格式化&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.8&quot;&gt;&lt;span&gt;3.8 日期时间计算&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.9&quot;&gt;&lt;span&gt;3.9 datediff()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog3.10&quot;&gt;&lt;span&gt;3.10 LAST_DAY()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog4&quot;&gt;&lt;span&gt;4. 流程控制之条件判断函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog4.1&quot;&gt;&lt;span&gt;4.1 if()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog4.2&quot;&gt;&lt;span&gt;4.2 ifnull()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog4.3&quot;&gt;&lt;span&gt;4.3 nullif()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog4.4&quot;&gt;&lt;span&gt;4.4 case语句&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog5&quot;&gt;&lt;span&gt;5. 类型转换函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html#blog6&quot;&gt;&lt;span&gt;6. 其它实用函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;MySQL/MariaDB的内置函数比较多，这里挑选一部分进行解释，完整的内置函数列表见&lt;span&gt;&lt;a href=&quot;https://mariadb.com/kb/en/library/function-and-operator-reference/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;官方手册&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。&lt;/p&gt;


&lt;p&gt;完整的内置字符串函数见&lt;span&gt;&lt;a href=&quot;https://mariadb.com/kb/en/string-functions/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;官方手册&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。&lt;/p&gt;

&lt;h2 id=&quot;1-1-&quot;&gt;1.1 字符串连接函数&lt;/h2&gt;
&lt;p&gt;有两个字符串连接函数：concat(s1,s2,s3,...,sN)和concat_ws(sep,s1,s2,s3,...,sN)。&lt;/p&gt;
&lt;p&gt;concat()将多个字符串连接起来形成一个长字符串。它会尝试&lt;strong&gt;将字符全部转换为字符型&lt;/strong&gt;，如果存在null，则直接返回null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------------+---------------+------------------+
| concat(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | concat(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) | concat(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) |
+-------------------+---------------+------------------+
| ab1               | &lt;span class=&quot;hljs-number&quot;&gt;123&lt;/span&gt;           | NULL             |
+-------------------+---------------+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;concat_ws(sep,s1,s2,...,sN)函数是concat()函数的特殊格式，它的第一个参数sep是用于连接s1,s2,...,sN的分隔符。分隔符可以是一个字符或一个字符串，只要合理即可。如果分隔符sep为null，则返回结果null，如果s1,s2,...,sN之间出现了null，则忽略null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;concat_ws&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;':'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'23'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'59'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'58'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;concat_ws&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'-'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'1st'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'2nd'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;concat_ws&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'XXX'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'wo'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'shi'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------------------------+----------------------------+-----------------------------+
| concat_ws(&lt;span class=&quot;hljs-string&quot;&gt;':'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'23'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'59'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'58'&lt;/span&gt;) | concat_ws(&lt;span class=&quot;hljs-string&quot;&gt;'-'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'1st'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'2nd'&lt;/span&gt;) | concat_ws(&lt;span class=&quot;hljs-string&quot;&gt;'XXX'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'wo'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'shi'&lt;/span&gt;) |
+-------------------------------+----------------------------+-----------------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;                      | &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;st-&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;nd                    | woXXXshi                    |
+-------------------------------+----------------------------+-----------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;concat_ws&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;':'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'23'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'59'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'58'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;concat_ws&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'1st'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'2nd'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+------------------------------------+-----------------------------+
| concat_ws(&lt;span class=&quot;hljs-string&quot;&gt;':'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'23'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'59'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'58'&lt;/span&gt;) | concat_ws(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'1st'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'2nd'&lt;/span&gt;) |
+------------------------------------+-----------------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt;                           | NULL                        |
+------------------------------------+-----------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于concat()遇到null时总会返回null，这种处理方式可能并非所期望的结果，因此可以采用concat_ws()的方式忽略null或者采用ifnull()的方式将null转换为空字符串。&lt;/p&gt;

&lt;h2 id=&quot;1-2-lower-string-upper-string-left-string-x-right-string-x-&quot;&gt;1.2 lower(string)、upper(string)、left(string,x)、right(string,x)&lt;/h2&gt;
&lt;p&gt;分别是变小写、变大写、从左取x长度字符、从右取x长度&lt;strong&gt;字符&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;upper&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'Malong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------+-----------------+------------------+-------------------+
| lower(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;) | upper(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;) | left(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) | right(&lt;span class=&quot;hljs-string&quot;&gt;'Malong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) |
+-----------------+-----------------+------------------+-------------------+
| malong          | MALONG          | MaL              | ong               |
+-----------------+-----------------+------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-3-&quot;&gt;1.3 填充函数&lt;/h2&gt;
&lt;p&gt;有两种：lpad(string,n,pad)和rpad(string,n,pad)。&lt;/p&gt;
&lt;p&gt;使用pad对string最左边和最右边进行填充，直到填充后总长度为n个字符。pad可以是一个字符串，如果是字符串则从左向右取直到符合长度为止。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;lpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;lpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;rpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------------+------------------------+-----------------------+
| lpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;) | lpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt;) | rpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;) |
+-----------------------+------------------------+-----------------------+
| xxxxMaLong            | xyxyMaLong             | MaLongxxxx            |
+-----------------------+------------------------+-----------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;长度n可以是小于或等于string字符串长度的值，此时lpad或者rpad的作用&lt;strong&gt;都是从左进行字符串截取而非填充&lt;/strong&gt;，直到长度为n。也就是说lpad和rpad函数最强约束条件是长度参数n。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;rpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;lpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;lpad&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+----------------------+----------------------+----------------------+
| rpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;) | lpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;) | lpad(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'x'&lt;/span&gt;) |
+----------------------+----------------------+----------------------+
| MaL                  | MaL                  |                      |
+----------------------+----------------------+----------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-4-trim-string-ltrim-string-rtrim-sting-trim-substring-from-string-&quot;&gt;1.4 trim(string)、ltrim(string)、rtrim(sting)及trim(substring from string)&lt;/h2&gt;
&lt;p&gt;分别用来消除string行首和行尾、行首、行尾的空格以及行首行尾指定的字符串。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;         函数                    作用
-----------------------         -------------------------------
      ltrim(&lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;)             删除行首空格
      rtrim(&lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;)             删除行尾空格
      trim(&lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;)              删除行首和行尾空格
trim(substring &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;)     删除行首和行尾的字符串substring
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(trim(&lt;span class=&quot;hljs-string&quot;&gt;' MaLong '&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; A,
              &lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ltrim(&lt;span class=&quot;hljs-string&quot;&gt;'MaLong '&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; B,
              &lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ltrim(&lt;span class=&quot;hljs-string&quot;&gt;' MaLong '&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; C,
              &lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(rtrim(&lt;span class=&quot;hljs-string&quot;&gt;' MaLong '&lt;/span&gt;)&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; D&lt;/span&gt;;
+---+---+---+---+
| A | B | C | D |
+---+---+---+---+
| &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; |
+---+---+---+---+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'xyxabxycdxyxy'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+---------------------------------+
| trim(&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'xyxabxycdxyxy'&lt;/span&gt;) |
+---------------------------------+
| xabxycd                         |
+---------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-5-repeat-string-x-&quot;&gt;1.5 重复字符串repeat(string,x)&lt;/h2&gt;
&lt;p&gt;将string重复x次。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(repeat(&lt;span class=&quot;hljs-string&quot;&gt;' '&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'0'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+----------------+-----------------------+---------------+
| repeat(&lt;span class=&quot;hljs-string&quot;&gt;'xy'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) | length(repeat(&lt;span class=&quot;hljs-string&quot;&gt;' '&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)) | repeat(&lt;span class=&quot;hljs-string&quot;&gt;'0'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) |
+----------------+-----------------------+---------------+
| xyxyxy         |                     &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;000&lt;/span&gt;           |
+----------------+-----------------------+---------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-6-replace-string-a-b-&quot;&gt;1.6 字符串替换函数replace(string,a,b)&lt;/h2&gt;
&lt;p&gt;使用字符串b替换字符串string中所有的字符串a。注意点是它们都可以是字符串。如果想要替换掉的字符串a不在string中，则不会进行替换。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'woshiMaLongShuai'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'s'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xxxx'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'woshiMaLongShuai'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ob'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xxxx'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+----------------------------------------+-----------------------------------------+
| replace(&lt;span class=&quot;hljs-string&quot;&gt;'woshiMaLongShuai'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'s'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xxxx'&lt;/span&gt;) | replace(&lt;span class=&quot;hljs-string&quot;&gt;'woshiMaLongShuai'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ob'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xxxx'&lt;/span&gt;) |
+----------------------------------------+-----------------------------------------+
| woxxxxhiMaLongShuai                    | woshiMaLongShuai                        |
+----------------------------------------+-----------------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-7-insert-string-p1-len-instead_string-&quot;&gt;1.7 字符串插入替换函数insert(string,p1,len,instead_string)&lt;/h2&gt;
&lt;p&gt;将string从位置p1开始,len个长度的字符替换为instead_string。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'woshimalongshuai'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'gao'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+--------------------------------------+
| insert(&lt;span class=&quot;hljs-string&quot;&gt;'woshimalongshuai'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'gao'&lt;/span&gt;) |
+--------------------------------------+
| woshigaolongshuai                    |
+--------------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-8-substring-string-x-y-&quot;&gt;1.8 字符串提取substring(string,x,y)&lt;/h2&gt;
&lt;p&gt;返回string中从x位置开始y个长度的字符串。如果给出的位置不存在，则无法提取所以返回空。如果给出的长度超出，则只提取允许范围内的字符串。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select substring(&lt;span class=&quot;hljs-string&quot;&gt;'MaLo'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; A,substring(&lt;span class=&quot;hljs-string&quot;&gt;'MaLo'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; B,substring(&lt;span class=&quot;hljs-string&quot;&gt;'MaLo'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; C,length(substring(&lt;span class=&quot;hljs-string&quot;&gt;'MaLo'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)) &lt;span class=&quot;hljs-keyword&quot;&gt;AS&lt;/span&gt; D;
+----+---+---+---+
| A  | B | C | D |
+----+---+---+---+
| Lo |   |   | &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; |
+----+---+---+---+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set (&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-9-strcmp-string1-string2-&quot;&gt;1.9 字符串比较函数strcmp(string1,string2)&lt;/h2&gt;
&lt;p&gt;比较string1和string2的ascii码大小，从前向后依次比较。strcmp认为大小写字母是等价的，所以它们相等。且存在null时，直接返回null。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果string1小于string2，返回-1。&lt;/li&gt;
&lt;li&gt;如果string1等于string2，返回0。&lt;/li&gt;
&lt;li&gt;如果string1大于string2，返回1。&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'A'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------+-----------------+-----------------+
| strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'A'&lt;/span&gt;) | strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;) |
+-----------------+-----------------+-----------------+
|              -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; |               &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; |               &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; |
+-----------------+-----------------+-----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;strcmp&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------------+-------------------+------------------+------------------+
| strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;) | strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;) | strcmp(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) | strcmp(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;) |
+-------------------+-------------------+------------------+------------------+
|                 &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; |                 &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; | NULL             | NULL             |
+-------------------+-------------------+------------------+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;关于字符串比较，另外两个函数least()和greatest()也能实现，这两个函数更多的用于取最值，特别是用于数值比较，所以在后文解释。&lt;/p&gt;

&lt;h2 id=&quot;1-10-length-string-char_length-string-&quot;&gt;1.10 字符串长度函数length(string)和char_length(string)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;length()返回字符串的字节数，注意不是字符数，char_length()返回的才是字符数&lt;/strong&gt;。在SQL Server中长度函数是len(string)，且返回的是字符数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'woshiyigeren'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'我'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+------------------------+--------------+
| length(&lt;span class=&quot;hljs-string&quot;&gt;'woshiyigeren'&lt;/span&gt;) | length(&lt;span class=&quot;hljs-string&quot;&gt;'我'&lt;/span&gt;) |
+------------------------+--------------+
|                     &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; |            &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; |
+------------------------+--------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;char_length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'woshiyigeren'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;char_length&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'我'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------------------+-------------------+
| char_length(&lt;span class=&quot;hljs-string&quot;&gt;'woshiyigeren'&lt;/span&gt;) | char_length(&lt;span class=&quot;hljs-string&quot;&gt;'我'&lt;/span&gt;) |
+-----------------------------+-------------------+
|                          &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; |                 &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; |
+-----------------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在SQL Server中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733013/201710/733013-20171026211131773-1866785564.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-11-locate-sub_str-string-position-sub_str-in-string-instr-str-sub_str-&quot;&gt;1.11 字符串位置函数locate(sub_str,string)、position(sub_str in string)和instr(str,sub_str)&lt;/h2&gt;
&lt;p&gt;这三个函数的作用相同，都是返回sub_str在string中的开始位置。和SQL Server中的charindex()函数功能类似。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;SELECT &lt;span class=&quot;hljs-title&quot;&gt;LOCATE&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;POSITION&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt; IN &lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;)&lt;/span&gt; ,&lt;span class=&quot;hljs-title&quot;&gt;INSTR&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+---------------------------+--------------------------------+--------------------------+
| LOCATE(&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;) | POSITION(&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt; IN &lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;) | INSTR(&lt;span class=&quot;hljs-string&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ball'&lt;/span&gt;) |
+---------------------------+--------------------------------+--------------------------+
|                         &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |                              &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |                        &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |
+---------------------------+--------------------------------+--------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-12-find_in_set-sub_string-str_set-&quot;&gt;1.12 字符串位置函数find_in_set(sub_string,str_set)&lt;/h2&gt;
&lt;p&gt;返回子串sub_string在str_set中的位置，其中str_set是一个由逗号隔开的多个字符串集合。如果找不到位置(sub_str不在str_set中或者str_set为空串)则返回0，如果任意一个为null，则返回null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'cd,ab,dc'&lt;/span&gt;),find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;''&lt;/span&gt;),find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(null,&lt;span class=&quot;hljs-string&quot;&gt;'ab,cd'&lt;/span&gt;);
+------------------------------+----------------------+---------------------------+
| find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'cd,ab,dc'&lt;/span&gt;) | find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;''&lt;/span&gt;) | find_&lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt;_&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;(null,&lt;span class=&quot;hljs-string&quot;&gt;'ab,cd'&lt;/span&gt;) |
+------------------------------+----------------------+---------------------------+
|                            &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; |                    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; | NULL                      |
+------------------------------+----------------------+---------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-13-field-s-str1-str2-strn-&quot;&gt;1.13 字符串位置函数field(s,str1,str2,...,strN)&lt;/h2&gt;
&lt;p&gt;返回字符串s在字符串集合str1,str2,...,strN中的位置。如果找不到或者字符串s为null，则返回0，因为null无法进行比较，也就是找不到。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'abc'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'1ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'cd'&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; col1,&lt;span class=&quot;hljs-title&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'cd'&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; col2&lt;/span&gt;;
+------+------+
| col1 | col2 |
+------+------+
|    &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; |    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; |
+------+------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-14-elt-n-str1-str2-strn-&quot;&gt;1.14 指定位置的字符串函数elt(n,str1,str2,...,strN)&lt;/h2&gt;
&lt;p&gt;elt表示从(数据)仓库中提取需要的东西。n是位置，n=1则返回str1，n=2则返回str2，依次类推。当n&amp;lt;1或者大于字符串的数量，则返回null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;elt&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;elt&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;elt&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;elt&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+--------------------+--------------------+----------------+-----------------+
| elt(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;) | elt(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;) | elt(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | elt(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) |
+--------------------+--------------------+----------------+-----------------+
| a                  | b                  | NULL           | NULL            |
+--------------------+--------------------+----------------+-----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;1-15-reverse-str-&quot;&gt;1.15 字符串反转函数reverse(str)&lt;/h2&gt;
&lt;p&gt;反转字符串str的字符顺序。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;reverse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'hello'&lt;/span&gt;);
+------------------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;reverse&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'hello'&lt;/span&gt;) |
+------------------+
| olleh            |
+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set (&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt; sec)
&lt;/code&gt;
&lt;/pre&gt;


&lt;p&gt;完整的内置数学函数见&lt;span&gt;&lt;a href=&quot;https://mariadb.com/kb/en/numeric-functions/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;官方手册&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。&lt;/p&gt;

&lt;h2 id=&quot;2-1-abs-x-&quot;&gt;2.1 绝对值函数ABS(x)&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;);
+----------+--------+-----------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;abs&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;) |
+----------+--------+-----------+
| &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;      |      &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;       |
+----------+--------+-----------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-2-mod-x-y-&quot;&gt;2.2 取模函数mod(x,y)&lt;/h2&gt;
&lt;p&gt;取x/y后的余数。支持小数和负数。如果除数为0或者除数被除数有一个为null，则返回null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;31.56&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;31.56&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------+--------------+---------------+-----------+----------+
| mod(&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;) | mod(&lt;span class=&quot;hljs-number&quot;&gt;31.56&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;) | mod(-&lt;span class=&quot;hljs-number&quot;&gt;31.56&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;) | mod(&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) | mod(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;) |
+-----------+--------------+---------------+-----------+----------+
|         &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;7.56&lt;/span&gt;         | -&lt;span class=&quot;hljs-number&quot;&gt;7.56&lt;/span&gt;         | NULL      |        &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; |
+-----------+--------------+---------------+-----------+----------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-3-round-x-y-&quot;&gt;2.3 四舍五入函数round(x,y)&lt;/h2&gt;
&lt;p&gt;返回值x含有y位小数的四舍五入后的结果，如果省略y，则默认y为0。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------+---------------+--------------+----------------+
| round(&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;) | round(&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | round(-&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;) | round(-&lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) |
+-------------+---------------+--------------+----------------+
| &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;           | &lt;span class=&quot;hljs-number&quot;&gt;3.2&lt;/span&gt;           | -&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;           | -&lt;span class=&quot;hljs-number&quot;&gt;3.2&lt;/span&gt;           |
+-------------+---------------+--------------+----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-4-truncate-x-y-&quot;&gt;2.4 位数截断函数truncate(x,y)&lt;/h2&gt;
&lt;p&gt;截断x的小数位数使得最终保留y个小数位。它的用法和round(x,y)几乎一样，只不过truncate是用来截断而不用来四舍五入。不能省略y但可以等于0，且y不能为负数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;truncate&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.156&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;truncate&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.156&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);
+-------------------+-------------------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;truncate&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.156&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;truncate&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.156&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) |
+-------------------+-------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;3.15&lt;/span&gt;              | &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;                 |
+-------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-5-floor-x-ceiling-x-&quot;&gt;2.5 地板函数floor(x)和天花板函数ceiling(x)&lt;/h2&gt;
&lt;p&gt;地板函数返回比x小的最大整数，天花板函数返回比x大的最小整数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;select &lt;span class=&quot;hljs-title&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(3.4)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(-3.4)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(3.4)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(-3.4)&lt;/span&gt;&lt;/span&gt;;
+------------+-------------+--------------+---------------+
| &lt;span class=&quot;hljs-built_in&quot;&gt;floor&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;3.4&lt;/span&gt;) | &lt;span class=&quot;hljs-built_in&quot;&gt;floor&lt;/span&gt;(-&lt;span class=&quot;hljs-number&quot;&gt;3.4&lt;/span&gt;) | ceiling(&lt;span class=&quot;hljs-number&quot;&gt;3.4&lt;/span&gt;) | ceiling(-&lt;span class=&quot;hljs-number&quot;&gt;3.4&lt;/span&gt;) |
+------------+-------------+--------------+---------------+
|          &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; |          -&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; |            &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; |            -&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; |
+------------+-------------+--------------+---------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-6-rand-&quot;&gt;2.6 随机函数rand()&lt;/h2&gt;
&lt;p&gt;每次随机返回一个0-1之间不包括0和1的数，且每次运行结果都不同。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;(),&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;();
+--------------------+----------------------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()             | &lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()               |
+--------------------+----------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;7380041170287915&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;0555433435&lt;/span&gt;88284534 |
+--------------------+----------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;若要取得0-100之间的数，可以使用100去乘随机值，但这样获得的函数还是不包含0和100这两个边界的。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;(),&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;(),&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;();
+------------------+-------------------+--------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()       | &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()        | &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()         |
+------------------+-------------------+--------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;22.5249471352668&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;96.80735235736458&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;16.461923454387044&lt;/span&gt; |
+------------------+-------------------+--------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;若要取整，则可以配合floor()或者ceiling()函数。但这样取得的是[0,99]或者[1,100]，而不能是[0,100]。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*rand()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; '[0,99]',&lt;span class=&quot;hljs-title&quot;&gt;ceiling&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;*rand()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; '[1,100]'&lt;/span&gt;;
+--------+---------+
| [&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;] | [&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;] |
+--------+---------+
|     &lt;span class=&quot;hljs-number&quot;&gt;90&lt;/span&gt; |      &lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; |
+--------+---------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果要想获得[0-100]这样包含边界的值，可以拓宽随机值。以下是两种方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; ceiling(&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;101&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),floor(&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;101&lt;/span&gt;);
+-----------------------+-------------------+
| ceiling(&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;101&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | floor(&lt;span class=&quot;hljs-keyword&quot;&gt;rand&lt;/span&gt;()*&lt;span class=&quot;hljs-number&quot;&gt;101&lt;/span&gt;) |
+-----------------------+-------------------+
|                    &lt;span class=&quot;hljs-number&quot;&gt;92&lt;/span&gt; |                &lt;span class=&quot;hljs-number&quot;&gt;55&lt;/span&gt; |
+-----------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-7-least-v1-v2-v3-vn-&quot;&gt;2.7 最值函数least(v1,v2,v3,…,vn)&lt;/h2&gt;
&lt;p&gt;从v1,v2,v3,…,vn中取出最小值。有以下几种情况：&lt;br/&gt;(1)当只有数值类型时，取数值最小的。且负数有效。&lt;br/&gt;(2)当只有字符串时，从第一个字符开始向后比较ascii码，小写字母小于大写字母。&lt;br/&gt;(3)数值和字符串比较，返回结果为0。若要比较，需要先将数字转换为字符串格式，且字符串类型的数字总是小于字母。&lt;br/&gt;(4)当n个成员之间存在null的时候，总是返回null，因为无法比较。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;least&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;least&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;least&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;least&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'999'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;least&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+----------------+----------------------+--------------+------------------+-------------------+
| least(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | least(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;) | least(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | least(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'999'&lt;/span&gt;) | least(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) |
+----------------+----------------------+--------------+------------------+-------------------+
|             -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; | ab                   | &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;            | &lt;span class=&quot;hljs-number&quot;&gt;999&lt;/span&gt;              | NULL              |
+----------------+----------------------+--------------+------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;2-8-greastest-v1-v2-v3-vn-&quot;&gt;2.8 最值函数greastest(v1,v2,v3,…,vn)&lt;/h2&gt;
&lt;p&gt;和least()函数相反，它取的是最大值。包括以下几种情况：&lt;br/&gt;(1)当只有数值类型时，取最大值。负值有效。&lt;br/&gt;(2)当只有字符串时，比较ascii码，大写字母大于小写字母。&lt;br/&gt;(3)当数字和字符串比较时，数字大于字符串，即返回数字中最大值。但是字符串类型的数字小于字母。这个least()不一样。&lt;br/&gt;(4)当存在null值时，返回null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;greatest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;,-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; A,
              &lt;span class=&quot;hljs-title&quot;&gt;greatest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'ab'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'ac'&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; B,
              &lt;span class=&quot;hljs-title&quot;&gt;greatest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; C,
              &lt;span class=&quot;hljs-title&quot;&gt;greatest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'999'&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; D,
              &lt;span class=&quot;hljs-title&quot;&gt;greatest&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; E&lt;/span&gt;;
+----+---+---+---+------+
| A  | B | C | D | E    |
+----+---+---+---+------+
| &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; | c | &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; | a | NULL |
+----+---+---+---+------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; warnings (&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)
&lt;/code&gt;
&lt;/pre&gt;


&lt;p&gt;有很多很多，&lt;span&gt;&lt;a href=&quot;https://mariadb.com/kb/en/library/day/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;官方手册：日期时间函数&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。以下挑几个介绍。&lt;/p&gt;

&lt;h2 id=&quot;3-1-&quot;&gt;3.1 当前日期时间&lt;/h2&gt;
&lt;p&gt;返回当前日期：curdate()、current_date()，它们是同义词；&lt;br/&gt;返回当前时间：curtime()、current_time()，它们是同义词；&lt;br/&gt;返回当前日期时间：now()、current_timestamp()、localtime()、localtimestamp、localtimestamp()、sysdate()，除了sysdate()，其余的都是now()的同义词。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-tag&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;curdate&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;current_date&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;current_timestamp&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;curtime&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;localtime&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;now&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;sysdate&lt;/span&gt;();
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/733013/201710/733013-20171026214632555-1761878100.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注意，now()和sysdate()是不同的。now()返回的是执行SQL语句那一刻的时间(如果now()是在存储过程或函数或触发器中，则now()返回的是这些程序开始调用执行的时刻)，而sysdate()返回的是实时更新的当前时间，即操作系统当前的时间。通过下面的例子就知道了：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-tag&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;NOW&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;SYSDATE&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;LOCALTIME&lt;/span&gt;(),
       &lt;span class=&quot;hljs-function&quot;&gt;SLEEP&lt;/span&gt;(2),
       &lt;span class=&quot;hljs-function&quot;&gt;NOW&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;SYSDATE&lt;/span&gt;(),&lt;span class=&quot;hljs-function&quot;&gt;LOCALTIME&lt;/span&gt;()\G
*************************** 1. row ***************************
              &lt;span class=&quot;hljs-function&quot;&gt;now&lt;/span&gt;()&lt;span class=&quot;hljs-value&quot;&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
&lt;span class=&quot;hljs-function&quot;&gt;current_timestamp&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
          &lt;span class=&quot;hljs-function&quot;&gt;sysdate&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
        &lt;span class=&quot;hljs-function&quot;&gt;localtime&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
           &lt;span class=&quot;hljs-function&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;): &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;
              &lt;span class=&quot;hljs-function&quot;&gt;now&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
&lt;span class=&quot;hljs-function&quot;&gt;current_timestamp&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
          &lt;span class=&quot;hljs-function&quot;&gt;sysdate&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;    # 注意此处sleep &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;秒后的时间
        &lt;span class=&quot;hljs-function&quot;&gt;localtime&lt;/span&gt;(): &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row in set (&lt;span class=&quot;hljs-number&quot;&gt;2.00&lt;/span&gt; sec)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到，sleep(2)后，sysdate()返回的比其他的函数晚了两秒，而其他的函数返回的和sleep(2)之前的时间是一样的，且都是开始执行语句的时间。&lt;/p&gt;

&lt;h2 id=&quot;3-2-week-date-&quot;&gt;3.2 week(DATE)&lt;/h2&gt;
&lt;p&gt;返回给定日期在当年是第几周。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;week&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;)&lt;/span&gt;;
+-------------+
| week(now()) |
+-------------+
|          &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; |
+-------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-3-year-date-monthname-date-day-date-quarter-date-&quot;&gt;3.3 year(DATE)、monthname(DATE)、day(DATE)、quarter(DATE)&lt;/h2&gt;
&lt;p&gt;返回所给日期的年份、月份、月中天(所以day()的同义词是dayofmonth()函数)以及季度，不过返回的月份是英文全名。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;monthname&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;)&lt;/span&gt;;
+-------------+------------------+
| year(now()) | monthname(now()) |
+-------------+------------------+
|        &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt; | March            |
+-------------+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-4-hour-time-minute-time-second-time-&quot;&gt;3.4 hour(TIME)、minute(TIME)、second(TIME)&lt;/h2&gt;
&lt;p&gt;返回给定时间值的小时、分钟、秒部分。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;)&lt;/span&gt;;
+---------------------+-------------+---------------+---------------+
| now()               | hour(now()) | minute(now()) | second(now()) |
+---------------------+-------------+---------------+---------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt; |          &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt; |            &lt;span class=&quot;hljs-number&quot;&gt;21&lt;/span&gt; |            &lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt; |
+---------------------+-------------+---------------+---------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;


&lt;p&gt;从给定的DATETIME中提取秒(second)、分(minute)、时(hour)、日(day)、月(month)、周(week)、年(year)，还支持季度(quarter)提取。和SQL Server中的datepart()函数一样的功能。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(year &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; year_part,
              &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(month &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; month_part,
              &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(day &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; day_part,
              &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(week &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; week_part&lt;/span&gt;;
+-----------+------------+----------+-----------+
| year_part | month_part | day_part | week_part |
+-----------+------------+----------+-----------+
|      &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt; |         &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt; |       &lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; |        &lt;span class=&quot;hljs-number&quot;&gt;42&lt;/span&gt; |
+-----------+------------+----------+-----------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(hour &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; hour_part,
              &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(minute &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; minute_part,
              &lt;span class=&quot;hljs-title&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(second &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; now()&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; second_part&lt;/span&gt;;
+---------------------+-----------+-------------+-------------+
| now()               | hour_part | minute_part | second_part |
+---------------------+-----------+-------------+-------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;04&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; |         &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; |          &lt;span class=&quot;hljs-number&quot;&gt;34&lt;/span&gt; |          &lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt; |
+---------------------+-----------+-------------+-------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-6-dayname-date-dayofweek-date-&quot;&gt;3.6 dayname(DATE)和dayofweek(DATE)&lt;/h2&gt;
&lt;p&gt;dayname返回给定日期是星期几，返回的周日期name的都是英文全名。而dayofweek返回的是数字代表的星期几，1表示周日，7表示周六。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;dayname&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20131111&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;dayofweek&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'20131111'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------------+-----------------------+
| dayname(&lt;span class=&quot;hljs-number&quot;&gt;20131111&lt;/span&gt;) | dayofweek(&lt;span class=&quot;hljs-string&quot;&gt;'20131111'&lt;/span&gt;) |
+-------------------+-----------------------+
| Monday            |                     &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; |
+-------------------+-----------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-7-&quot;&gt;3.7 日期时间格式化&lt;/h2&gt;
&lt;p&gt;日期格式化：date_format(date,fmt)&lt;br/&gt;时间格式化：time_format(time,fmt)&lt;/p&gt;
&lt;p&gt;其中fmt为日期时间的描述格式，使用%开头进行描述，例如%Y表示4位数字的年份，%m表示2位数字的月份等，更多的格式见官方手册&lt;span&gt;&lt;a href=&quot;https://mariadb.com/kb/en/library/date_format/#description&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;fmt&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;date_format&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'20131012'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'%Y-%m-%d'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+------------------------------------+
| date_format(&lt;span class=&quot;hljs-string&quot;&gt;'20131012'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'%Y-%m-%d'&lt;/span&gt;) |
+------------------------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2013&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;                         |
+------------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-8-&quot;&gt;3.8 日期时间计算&lt;/h2&gt;
&lt;p&gt;增加日期：DATE_ADD(date,interval expr unit)，ADDDATE(date,interval expr unit)，它们是同义词；&lt;br/&gt;减去日期：DATE_SUB(date,interval expr unit)，SUBDATE(date,interval expr unit)，它们是同义词；&lt;/p&gt;
&lt;p&gt;在给定日期date基础上加或减去某种格式表达的日期时间。interval是关键字，expr是用来给定加减多少时间的表达式，unit是expr要表达的日期类型，见下图。其中expr的描述方式和unit是对应的。&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Unit&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr&gt;&lt;td&gt;MICROSECOND&lt;/td&gt;
&lt;td&gt;Microseconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SECOND&lt;/td&gt;
&lt;td&gt;Seconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MINUTE&lt;/td&gt;
&lt;td&gt;Minutes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HOUR&lt;/td&gt;
&lt;td&gt;Hours&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DAY&lt;/td&gt;
&lt;td&gt;Days&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;WEEK&lt;/td&gt;
&lt;td&gt;Weeks&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MONTH&lt;/td&gt;
&lt;td&gt;Months&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QUARTER&lt;/td&gt;
&lt;td&gt;Quarters&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;YEAR&lt;/td&gt;
&lt;td&gt;Years&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SECOND_MICROSECOND&lt;/td&gt;
&lt;td&gt;Seconds.Microseconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;MINUTE_MICROSECOND&lt;/td&gt;
&lt;td&gt;Minutes.Seconds.Microseconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MINUTE_SECOND&lt;/td&gt;
&lt;td&gt;Minutes.Seconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;HOUR_MICROSECOND&lt;/td&gt;
&lt;td&gt;Hours.Minutes.Seconds.Microseconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HOUR_SECOND&lt;/td&gt;
&lt;td&gt;Hours.Minutes.Seconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;HOUR_MINUTE&lt;/td&gt;
&lt;td&gt;Hours.Minutes&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;DAY_MICROSECOND&lt;/td&gt;
&lt;td&gt;Days Hours.Minutes.Seconds.Microseconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;DAY_SECOND&lt;/td&gt;
&lt;td&gt;Days Hours.Minutes.Seconds&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DAY_MINUTE&lt;/td&gt;
&lt;td&gt;Days Hours.Minutes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DAY_HOUR&lt;/td&gt;
&lt;td&gt;Days Hours&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;YEAR_MONTH&lt;/td&gt;
&lt;td&gt;Years-Months&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;例如year_month单元，从上表中得出它的格式是&quot;years month&quot;表示计算year部分和month部分的间隔。expr中year和month之间使用任意分隔符都可以，例如&quot;1_2&quot;、&quot;1!2&quot;、&quot;1-2&quot;和&quot;1 2&quot;都是允许的。如果使用day_minute单元，它的意义是&quot;days hours.minutes&quot;，那么expr中就需要给定3个值，这3个值从前向后分别代表日、时、分，中间可以用任意分隔符分隔，例如'3-2-1'表示3天2小时1分钟。&lt;/p&gt;
&lt;p&gt;expr的前面可以加上&quot;+&quot;和&quot;-&quot;，分别表示加和减，不写时默认为&quot;+&quot;，所以date_add和date_sub之间通过正负符号是可以等价的。&lt;/p&gt;
&lt;p&gt;以下是示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,
              &lt;span class=&quot;hljs-title&quot;&gt;date_add&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;,interval 31 day) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; add31days,
              &lt;span class=&quot;hljs-title&quot;&gt;date_add&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;,interval '1_2' year_month) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; add1year2month&lt;/span&gt;;
+---------------------+---------------------+---------------------+
| now()               | add31days           | add1year2month      |
+---------------------+---------------------+---------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;2018&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;11&lt;/span&gt; |
+---------------------+---------------------+---------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上述例子中使用了上面的第二列表示在当前日期内加上31天后的时间，第三列表示在当前日期基础上加上1年又2个月之后的时间。&lt;/p&gt;
&lt;p&gt;如果date_add中expr使用的是负数，则表示减。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select now(),
              date_add(now(),interval &lt;span class=&quot;hljs-string&quot;&gt;'-31'&lt;/span&gt; day) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; jian31days,
              date_add(now(),interval &lt;span class=&quot;hljs-string&quot;&gt;'-1_2'&lt;/span&gt; year_month) &lt;span class=&quot;hljs-keyword&quot;&gt;as&lt;/span&gt; jian1year2month;
+---------------------+---------------------+---------------------+
| now()               | jian31days          | jian1year2month     |
+---------------------+---------------------+---------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;09&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt; | &lt;span class=&quot;hljs-number&quot;&gt;2016&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;58&lt;/span&gt; |
+---------------------+---------------------+---------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; set (&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面第二列表示在当前日期上减去31天后的时间，第三列表示在当前日期基础上减去1年又2个月之后的时间。&lt;/p&gt;

&lt;h2 id=&quot;3-9-datediff-expr1-expr2-&quot;&gt;3.9 datediff(expr1,expr2)&lt;/h2&gt;
&lt;p&gt;expr1和expr2之间的天数差，是expr1减去expr2。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;datediff&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;,'2018-01-01')&lt;/span&gt;;
+---------------------+------------------------------+
| now()               | datediff(now(),&lt;span class=&quot;hljs-string&quot;&gt;'2018-01-01'&lt;/span&gt;) |
+---------------------+------------------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;57&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;06&lt;/span&gt; |                         -&lt;span class=&quot;hljs-number&quot;&gt;284&lt;/span&gt; |
+---------------------+------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;3-10-last_day-datetime-&quot;&gt;3.10 LAST_DAY(datetime)&lt;/h2&gt;
&lt;p&gt;返回给定日期所在月的最后一天。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;last_day&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(now()&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;last_day&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'2016-02-03'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------+------------------------+
| last_day(now()) | last_day(&lt;span class=&quot;hljs-string&quot;&gt;'2016-02-03'&lt;/span&gt;) |
+-----------------+------------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;03&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;31&lt;/span&gt;      | &lt;span class=&quot;hljs-number&quot;&gt;2016&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;02&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;29&lt;/span&gt;             |
+-----------------+------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;


&lt;p&gt;在MySQL/MariaDB中主要有if、ifnull和case语句进行条件判断。其中if语句和SQL Server中的if相差较大。&lt;/p&gt;

&lt;h2 id=&quot;4-1-if-expr-true_value-false_value-&quot;&gt;4.1 if(expr,true_value,false_value)&lt;/h2&gt;
&lt;p&gt;if函数用来判断expr是否为真，如果为真，则返回true_value，否则返回false_value。这和&lt;a href=&quot;https://mariadb.com/kb/en/library/if/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;if语句&lt;/span&gt;&lt;/a&gt;是不一样的。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-----------------+-----------------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&amp;gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) |
+-----------------+-----------------+
| b               | a               |
+-----------------+-----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;expr判断是否为真的依据是expr的结果&lt;strong&gt;非0且非null&lt;/strong&gt;。所以也可以直接使用数字表示真假，但不能使用字母表示真假。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; select &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'2'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;);
+----------------+---------------+------------------+-----------------+-----------------+
| &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;99&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'2'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'c'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) |
+----------------+---------------+------------------+-----------------+-----------------+
| a              | b             | b                | a               | b               |
+----------------+---------------+------------------+-----------------+-----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; set, &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; warning (&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;4-2-ifnull-value1-value2-&quot;&gt;4.2 ifnull(value1,value2)&lt;/h2&gt;
&lt;p&gt;如果value1不为空则返回value1，否则返回value2。总之就是给定一个非null值。允许value2为null。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ifnull&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ifnull&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ifnull&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ifnull&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;ifnull&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+---------------+-----------------+------------------+------------------+-------------------+
| ifnull(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;) | ifnull(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'b'&lt;/span&gt;) | ifnull(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;) | ifnull(&lt;span class=&quot;hljs-string&quot;&gt;'a'&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) | ifnull(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;) |
+---------------+-----------------+------------------+------------------+-------------------+
| &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;             | a               | a                | a                | NULL              |
+---------------+-----------------+------------------+------------------+-------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;MySQL中的ifnull函数基本等价于SQL Server中的isnull()函数，跟SQL Server中的nullif函数相差非常大。且MySQL中的ifnull只能从两个参数中取一个非空值，而SQL Server中的coalesce()函数可以从多个参数中选第一个非空值。&lt;/p&gt;

&lt;h2 id=&quot;4-3-nullif-expr1-expr2-&quot;&gt;4.3 nullif(expr1,expr2)&lt;/h2&gt;
&lt;p&gt;如果expr1等于expr2，则返回null，否则返回expr1。也就是说，两者不相等时取前者，否则取NULL。如果expr1和expr2任意一个为null，则直接返回null。这等价于：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-reserved&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;when&lt;/span&gt; expr1 = expr2 || expr1 &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; || expr2 &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt; 
&lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; expr1
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;nullif&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;nullif&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;nullif&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;   
+-------------+-------------+----------------+
| nullif(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) | nullif(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) | nullif(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) |
+-------------+-------------+----------------+
|        NULL |           &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; | NULL           |
+-------------+-------------+----------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;h2 id=&quot;4-4-case-&quot;&gt;4.4 case语句&lt;/h2&gt;
&lt;p&gt;和SQL Server中的case语法差不多。也是两种格式:&lt;code&gt;case when ...then...else...end&lt;/code&gt;和&lt;code&gt;case ...when...then...else...end&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
CASE WHEN express_1 THEN value_1 
     WHEN express_2 THEN value_2 
    … 

ELSE value_n   
&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;;&lt;/span&gt;

CASE express WHEN value1 THEN value_1 
             WHEN value2 THEN value_2 
             ... 
ELSE value_n   
&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt;;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意，如果采用&lt;code&gt;CASE...WHEN&lt;/code&gt;的写法格式，则express只能与value进行等同性检查。例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  StudentID, 
        &lt;span class=&quot;hljs-keyword&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; Mark &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'不及格'&lt;/span&gt; 
             &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; Mark &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; Mark &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'及格'&lt;/span&gt; 
             &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; Mark &amp;gt;= &lt;span class=&quot;hljs-number&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;AND&lt;/span&gt; Mark &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'良好'&lt;/span&gt; 
             &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'优秀'&lt;/span&gt; 
        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; 
&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    Tscore;&lt;/span&gt;


&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt;  StudentID , 
        &lt;span class=&quot;hljs-keyword&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FLOOR&lt;/span&gt;(Mark / &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) 
          &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'不及格'&lt;/span&gt; 
          &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'及格'&lt;/span&gt; 
          &lt;span class=&quot;hljs-keyword&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'良好'&lt;/span&gt; 
          &lt;span class=&quot;hljs-keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;'优秀'&lt;/span&gt; 
        &lt;span class=&quot;hljs-keyword&quot;&gt;END&lt;/span&gt; 
&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt;    Tscore;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中格式二为&lt;code&gt;case ... when&lt;/code&gt;的格式，它的when部分的值都只能和floor(mark/10)做等于号比较，这是等同性检查。而格式一的写法就灵活的多，既可以做等号比较，也能做大于号或其他方式的比较。&lt;/p&gt;


&lt;p&gt;类型转换函数用来转换数据类型。在MySQL/MariaDB中可以转换的类型有以下几种：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;二进制: &lt;span class=&quot;hljs-tag&quot;&gt;BINARY&lt;/span&gt;&lt;span class=&quot;hljs-attr_selector&quot;&gt;[(N)]&lt;/span&gt; 
字符型: &lt;span class=&quot;hljs-tag&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;hljs-attr_selector&quot;&gt;[(N)]&lt;/span&gt; 
日期 : &lt;span class=&quot;hljs-tag&quot;&gt;DATE&lt;/span&gt; 
时间: &lt;span class=&quot;hljs-tag&quot;&gt;TIME&lt;/span&gt; 
日期时间型 : &lt;span class=&quot;hljs-tag&quot;&gt;DATETIME&lt;/span&gt;
浮点数 : &lt;span class=&quot;hljs-tag&quot;&gt;DECIMAL&lt;/span&gt; 
整数 : &lt;span class=&quot;hljs-tag&quot;&gt;SIGNED&lt;/span&gt; 
无符号整数 : &lt;span class=&quot;hljs-tag&quot;&gt;UNSIGNED&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中convert()有两种语法：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-function&quot;&gt;CONVERT&lt;/span&gt;(expr,type), &lt;span class=&quot;hljs-function&quot;&gt;CONVERT&lt;/span&gt;(expr USING transcoding_name)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;后者用于不同字符集之间转换数据。&lt;/p&gt;
&lt;p&gt;在转换数据类型时，cast和convert的功能基本是一样的，只是写法不同。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;SELECT &lt;span class=&quot;hljs-title&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'3.35'&lt;/span&gt; AS signed)&lt;/span&gt;&lt;/span&gt;;
+------------------------+
| CAST(&lt;span class=&quot;hljs-string&quot;&gt;'3.35'&lt;/span&gt; AS signed) |
+------------------------+
|                      &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; |
+------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;

mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;SELECT  &lt;span class=&quot;hljs-title&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; AS CHAR(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;),&lt;span class=&quot;hljs-title&quot;&gt;CONVERT&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'2013-8-9 12:12:12'&lt;/span&gt;,TIME)&lt;/span&gt;&lt;/span&gt;;
+----------------------+-----------------------------------+
| CAST(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;AS &lt;span class=&quot;hljs-title&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;) | &lt;span class=&quot;hljs-title&quot;&gt;CONVERT&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'2013-8-9 12:12:12'&lt;/span&gt;,TIME)&lt;/span&gt; |
+----------------------+-----------------------------------+
| 10                   | 12:12:12                          |
+----------------------+-----------------------------------+
1 row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;带有using的convert函数用来转换字符集。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;SELECT  &lt;span class=&quot;hljs-title&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'string'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(CONVERT(&lt;span class=&quot;hljs-string&quot;&gt;'string'&lt;/span&gt; USING latin1)&lt;/span&gt;)&lt;/span&gt;;
+-------------------+-----------------------------------------+
| CHARSET(&lt;span class=&quot;hljs-string&quot;&gt;'string'&lt;/span&gt;) | CHARSET(CONVERT(&lt;span class=&quot;hljs-string&quot;&gt;'string'&lt;/span&gt; USING latin1)) |
+-------------------+-----------------------------------------+
| utf8mb4           | latin1                                  |
+-------------------+-----------------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;


&lt;ul readability=&quot;35&quot;&gt;&lt;li readability=&quot;5&quot;&gt;(1). sleep(N)&lt;br/&gt;延迟N秒后执行后面的语句。特殊点在于sleep()函数可以用于select的选择列表。
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; a,&lt;span class=&quot;hljs-keyword&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;),a &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; t;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
注意上面的语句中，是先查询a，再阻塞2秒，之后再查询a，而不是先阻塞后再查询两次a或查询两次a后再阻塞。也就是说，对于mysql/mariadb来说，select的选择列表之间是有先后顺序的，不像sql server，选择列之间是完全平行等价的。可以通过下面的例子来验证：
&lt;pre&gt;
&lt;code&gt;&lt;span class=&quot;hljs-operator&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;sysdate&lt;/span&gt;(),&lt;span class=&quot;hljs-keyword&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;),&lt;span class=&quot;hljs-keyword&quot;&gt;sysdate&lt;/span&gt;();&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;(2). 返回当前数据库名database()&lt;/li&gt;
&lt;li&gt;(3). 返回当前数据库版本version()&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;(4). 返回当前登录用户名user()&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;
+------------+-----------+--------------------+
| database() | version() | user()             |
+------------+-----------+--------------------+
| test       | &lt;span class=&quot;hljs-number&quot;&gt;5.6&lt;/span&gt;.35    | root@&lt;span class=&quot;hljs-number&quot;&gt;192.168&lt;/span&gt;.100.1 |
+------------+-----------+--------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;(5). 返回加密字符串password(str)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;(6). 返回字符串的MD5值md5(str)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'abc'&lt;/span&gt;)&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'abc'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
+-------------------------------------------+----------------------------------+
| password(&lt;span class=&quot;hljs-string&quot;&gt;'abc'&lt;/span&gt;)                           | md5(&lt;span class=&quot;hljs-string&quot;&gt;'abc'&lt;/span&gt;)                       |
+-------------------------------------------+----------------------------------+
| *&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;D3CED9BEC10A777AEC23CCC353A8C08A633045E | &lt;span class=&quot;hljs-number&quot;&gt;900150983&lt;/span&gt;cd24fb0d6963f7d28e17f72 |
+-------------------------------------------+----------------------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;47&quot;&gt;
&lt;p&gt;(7). last_insert_id()函数&lt;br/&gt;LAST_INSERT_ID()返回最后一个INSERT或UPDATE为AUTO_INCREMENT列设置的第一个发生的值。该函数值不是基于表的，这一点和SQL Server是不同的，也就是说，对a表插入的最后一个值是10，再对b表插入的最后一个值是15，那么函数返回的将是15。并且last_insert_id的值和一次插入一条记录还是一次批量插入的方式有关。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;create table &lt;span class=&quot;hljs-title&quot;&gt;test10&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(id &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; primary key auto_increment,name &lt;span class=&quot;hljs-keyword&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;;
&lt;span class=&quot;hljs-preprocessor&quot;&gt;# 一次插入一条记录。&lt;/span&gt;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test10 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'gaoxiaofang'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test10 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'malongshuai'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test10 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'longshuai'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test10 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xiaofang'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; test10;
+----+-------------+
| id | name        |
+----+-------------+
|  &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; | gaoxiaofang |
|  &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; | malongshuai |
|  &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; | longshuai   |
|  &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; | xiaofang    |
+----+-------------+
&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; rows &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;查看last_insert_id的值，结果将是4。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;last_insert_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;
+------------------+
| last_insert_id() |
+------------------+
|                &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; |
+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;一次插入多条记录，并查看last_insert_id()的值。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; insert into &lt;span class=&quot;hljs-built_in&quot;&gt;test&lt;/span&gt;10 values(null,&lt;span class=&quot;hljs-string&quot;&gt;'tun\'&lt;/span&gt;er&lt;span class=&quot;hljs-string&quot;&gt;'),(null,'&lt;/span&gt;woniu&lt;span class=&quot;hljs-string&quot;&gt;'),(null,'&lt;/span&gt;wugui&lt;span class=&quot;hljs-string&quot;&gt;');
mysql&amp;gt; select *,last_insert_id() from test10;
+----+-------------+------------------+
| id | name        | last_insert_id() |
+----+-------------+------------------+
|  1 | gaoxiaofang |                5 |
|  2 | malongshuai |                5 |
|  3 | longshuai   |                5 |
|  4 | xiaofang    |                5 |
|  5 | tun'&lt;/span&gt;er      |                &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |
|  &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt; | woniu       |                &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |
|  &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; | wugui       |                &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt; |
+----+-------------+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt; rows &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以发现这里last_insert_id的值不是7而是5，这是因为批量插入的时候last_insert_id的值将会是批量中的第一条记录的自增列值。 且last_insert_id的值和表是无关的，只和会话环境有关。例如再向另外一个表插入后，last_insert_id的值将变为另一个值。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;create table &lt;span class=&quot;hljs-title&quot;&gt;test11&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(id &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; primary key auto_increment,name &lt;span class=&quot;hljs-keyword&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test11 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'gaoxiaofang'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test11 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'malongshuai'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test11 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'longshuai'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;insert &lt;span class=&quot;hljs-keyword&quot;&gt;into&lt;/span&gt; test11 &lt;span class=&quot;hljs-title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'xiaofang'&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;
mysql&amp;gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;last_insert_id&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;
+------------------+
| last_insert_id() |
+------------------+
|                &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; |
+------------------+
&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; row &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以发现它又变回了4。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;更多关于auto_increment计算相关内容见&lt;span&gt;&lt;a title=&quot;Mysql/MariaDB自增列&quot; href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7592501.html#blog1.3&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Mysql/MariaDB自增列&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7048359.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到Linux系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7048359.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7576137.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到网站架构系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7576137.html&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7586194.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;回到数据库系列文章大纲：http://www.cnblogs.com/f-ck-need-u/p/7586194.html&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.cnblogs.com/f-ck-need-u/p/7740235.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;转载请注明出处：http://www.cnblogs.com/f-ck-need-u/p/7740235.html&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;注：若您觉得这篇文章还不错请点击右下角推荐，您的支持能激发作者更大的写作热情，非常感谢！&lt;/span&gt;&lt;/h3&gt;
</description>
<pubDate>Thu, 26 Oct 2017 15:52:00 +0000</pubDate>
<dc:creator>骏马金龙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/f-ck-need-u/p/7740235.html</dc:identifier>
</item>
<item>
<title>做你自己的大牛 - 虫师</title>
<link>http://www.cnblogs.com/fnng/p/7740211.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fnng/p/7740211.html</guid>
<description>&lt;p&gt;我有个习惯，从来不叫教自动化技术的帮人为“学生”，而是叫“同学”。学生的话表示我跟他们不是同一个level的，而同学的话表示咱们都是一个level的。当然，这不是纯粹套近乎，也不是我故意放低姿态，而是，有很多问题我并不比他们强。&lt;/p&gt;

&lt;p&gt;比如，前几天我就被鄙视了，原因是最近出不去，有一个同学问我怎么才能出去，我说我这几天也出不去，后来，那位同学不知哪里习得奇技淫巧出去了，我说，那你帮我下载个新版的selenium-sever吧！下完，我说再帮我下个最新的chromedriver 吧！他就不耐烦了。结果就是我就被鄙视了呗！&lt;/p&gt;

&lt;p&gt;我加了几个Selenium群，偶尔想起来了，会在里面冒个泡，马上会有人跳出来说，虫师，我是你的“粉丝”，我一般会骂回去“粉你妹去！”。你有问题我们交流问题，我有时间就鸟你，没时间（实际上是不会）就不鸟你！休想拿“粉丝”来绑架我，再说，我也不是靠脸吃饭的。&lt;/p&gt;

&lt;p&gt;我想这主要和我们从小受到的教育有关吧！当你学习成绩不好的时候，父母就会拿你和隔壁老王家的孩子比，当你学习成绩还不错的时候，父母就会说：“怎么没考满分？”“就这点成绩，尾巴不要翘的老高了！”，所以，我们骨子里是谦卑的，或者还有那么一点点自卑。总觉得做得不好，不如别人！&lt;/p&gt;

&lt;p&gt;前几天，看了陈皓（酷壳博主）的视频参访，其实，在我看来，不管从年龄和技术上，咱和人家都差得远着呢！他有一句话，给我印象很深，大概是被恭维，像他这么有天赋写代码的人少有，他说我也不认为自己写代码特别有天分。这是在故意谦虚么？我不觉得；难道你们想用一个“天分”来抹杀一个人的所有努力？&lt;/p&gt;

&lt;p&gt;他的技术实力背后是多少个日日夜夜坐在电脑面前换来的！天份固然重要，更重要的是兴趣与坚持。我不知道你们的晚上都用来干嘛了？从我2012来到深圳这个城市，差不多就保持了晚上（周一到周五）学习的习惯。所以，我是很讨厌加班的。你一个餐补才几个钱？我需要时间为自己加班，难道你希望看到我靠明年的那点加薪来提升自己的收入？那何时才能追赶上深圳的房价？&lt;/p&gt;

&lt;p&gt;我最近关注了一个公众号，他的每篇文章下面总有一个小“迷妹”留言：大牛，虽然我也不懂你在说什么，但是我会努力的。给你打赏几块钱，虽然，我挣的也不多！我心想，这人完了，这和追星有什么区别。如果有人在我的公众号下这么留言，我一定会骂回去！当然，我们也不需要打赏，你留着这点钱多买两本技术书看看吧！比看我扯淡强多了。&lt;/p&gt;

&lt;p&gt;我刚做测试时就觉得自己挺牛X的，看那些个测试大牛，觉得你丫不就是比我多干两年嘛。当我到了你这个工龄，也许比你更牛X，当然，背后是不断的学习更多的技术。虽然，后来发现许多人确实比我聪明有天分，那又怎样，还不是被我的坚持甩在了身后。所以，粉那些个技术大牛对自己一点毛用都没有。&lt;/p&gt;

&lt;p&gt;所以，你需要做自己的大牛！&lt;/p&gt;
</description>
<pubDate>Thu, 26 Oct 2017 15:39:00 +0000</pubDate>
<dc:creator>虫师</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fnng/p/7740211.html</dc:identifier>
</item>
<item>
<title>就怕别人说我努力，因为我从来没有让自己感动过 - legenecy</title>
<link>http://www.cnblogs.com/lnzcode/p/7740210.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lnzcode/p/7740210.html</guid>
<description>&lt;p&gt;    你只是在别人的眼中很努力，但是对于你自己，你更要严格要求自己。不为什么，只是为了自己的人生没有白活。&lt;/p&gt;
&lt;p&gt;   为了内心更强大，让自己需要什么，就去行动，因为行动是最好的策略。&lt;/p&gt;
&lt;p&gt;早上起来，为了自己的早餐和午餐，精心起来的准备，不管有多累，即使也被叫醒，只要能听到闹钟，很困难从床上起来。&lt;/p&gt;
&lt;p&gt;今早 炒了米饭，有鸭蛋（老家养的鸭子下蛋的），卷心菜，红萝卜。放了调味料 酱油，盐，鸡精。特意百度，主要注意火候。&lt;/p&gt;
&lt;p&gt;加上一份鲜美的干贝冬瓜汤，甘甜可口。&lt;/p&gt;
&lt;p&gt;平时会为了多注意研究美食，比如大酱汤，增味汤。&lt;/p&gt;
&lt;p&gt;七点半左右，开始为了证书，多做题。&lt;/p&gt;
&lt;p&gt;到公司不到九点开始读下英语，虽然没有读书声，但是听。&lt;/p&gt;
&lt;p&gt;在工作时间，用双屏的屏幕，核对数据，开始更改数据的算法。&lt;/p&gt;
&lt;p&gt;中午边吃饭边看TED的视频 主要看些流行的价值观。&lt;/p&gt;
&lt;p&gt;下午继续努力工作，一口气没有分心做到4点多，其中还是有喝水和上厕所。&lt;/p&gt;
&lt;p&gt;晚饭在食堂的喝粥，加会班就回来开始继续苦不堪言的做题和刷题。不为什么努力。因为我不知道是不是能否考上。&lt;/p&gt;
&lt;p&gt;在晚点继续加班，周末都是要留时间陪宝宝。&lt;/p&gt;
&lt;p&gt;与各位共勉，加油。美好的一天即将过去，即将迎来新的一天。&lt;/p&gt;

</description>
<pubDate>Thu, 26 Oct 2017 15:38:00 +0000</pubDate>
<dc:creator>legenecy</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lnzcode/p/7740210.html</dc:identifier>
</item>
<item>
<title>ELK系列~对fluentd参数的理解 - 张占岭</title>
<link>http://www.cnblogs.com/lori/p/7740143.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lori/p/7740143.html</guid>
<description>&lt;p&gt;&lt;span&gt;这段时候一直在研究ELK框架，主要集成在对fluentd和nxlog的研究上，国内文章不多，主要看了一下官方的API，配合自己的理解，总结了一下，希望可以帮到刚入行的朋友们！&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;78zfxy1508990303881&quot;&gt;&lt;span&gt;&lt;span&gt;Fluentd（日志收集与过滤,server）&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Fluentd&lt;span&gt;是一个免费，而且完全开源的日志管理工具，简化了日志的收集、处理、和存储，你可以不需要在维护编写特殊的日志处理脚本。Fluentd&lt;span&gt;的性能已经在各领域得到了证明：目前最大的用户从5000+&lt;span&gt;服务器收集日志，每天5TB&lt;span&gt;的数据量，在高峰时间处理50,000&lt;span&gt;条信息每秒。它可以在客户端和服务端分别部署，客户端收集日志输出到服务端。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;31&quot;&gt;&lt;span&gt;fluentd的工作由它的配置文件决定，我们可以设置它的类型，格式，端口，绑定主机，tag标签等。&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    @type tcp
    tag pilipa
    format none
    port 24224
    bind 0.0.0.0
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter &lt;/span&gt;&lt;span&gt;docker.**&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    type parser
    format json
    time_format %Y-%m-%dT%H:%M:%S.%L%Z
    key_name log
    reserve_data true
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;match &lt;/span&gt;&lt;span&gt;**&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    @type stdout
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;match&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ROOT&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Source节点&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;source主要是配置一个TCP，格式为所有，端口为默认的24224，绑定主机为自己IP的服务，它对应的客户端就要是TCP的，我们的nxlog就是这种协议的，架构上说就是一个c/s结构，由nxlog负责把数据发到fluentd上面。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;filter节点&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;filter就是过滤规则，当source.tag复合filter的规则时，就执行这个filter进行过滤行为&lt;br/&gt;match是fluentd收到数据后的处理， @type stdout是指在控制台输出，而我们生产环境把它输出到了elasticsearch上面（ @type elasticsearch），处理的格式是json，如果在进行parser.json失败后，数据就不会正常的写入指定的数据表了，当然你可以把异常的数据存储到elasticsearch的其它表里。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;自己在实践中总结的地方：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;source里类型为@tcp类型时，它的tag是很重要的，我们的程序需要提供这个tag，当然如果你指定了端口，那这个tag就是当前端口的，而filter要根据这个tag去匹配自己，比如windows的tag，它会找以windows开头的fitler。&lt;br/&gt;filter里的key_name，对应客户端发送消息时的主属性名称，有的是log，有的是message，有的是msg，像nxlog这种客户端它在使用tcp时key)name是message，下面说几种情况：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1 匹配了filter但没有找到key_name会有下面提示&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/118538/201710/118538-20171026231453726-1384480152.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2 没有任务key_name,会在结尾出现\r符号，我们需要去自己在output里过滤它，否则json转换失败&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/118538/201710/118538-20171026231602461-1433240756.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 3 找到了对应的key_name&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;http://images2017.cnblogs.com/blog/118538/201710/118538-20171026231541101-45221997.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;4 fluentd.conf配置注意点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/118538/201710/118538-20171026231334805-1644784197.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;感谢各位的阅读！&lt;/p&gt;
&lt;p&gt;希望本文章可以帮您快速的解决问题！&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 26 Oct 2017 15:18:00 +0000</pubDate>
<dc:creator>张占岭</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lori/p/7740143.html</dc:identifier>
</item>
<item>
<title>本地连接 vmware服务器 - 王守昌</title>
<link>http://www.cnblogs.com/wangshouchang/p/7740141.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wangshouchang/p/7740141.html</guid>
<description>&lt;p&gt;在本机中装载虚拟机，安装redhat.需要调试使用redhat可以与Windows进行通讯。 &lt;/p&gt;
&lt;p&gt;分为多步，在此前提下，默认你已经安装好且可以vm 和虚拟机&lt;/p&gt;
&lt;p&gt;1：点击虚拟机&amp;gt;设置&amp;gt;添加网络适配器（添加一个或多个网卡）&amp;gt;选择自定义（U）：特定虚拟网络（VMnet8（NAT模式）refer pic1）&amp;gt;点击“确定” &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602135504653&quot; alt=&quot;这里写图片描述&quot;/&gt; &lt;br/&gt;2：编辑虚拟网络：编辑&amp;gt;虚拟网络编辑器&amp;gt;(默认有vnet0)添加vnet8&amp;gt;配置IP地址如图refer pic2(此处vnet8 的IP地址相当Linux操作系统的DNS地址) &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602140334678&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;3：查看vnet8 的IP地址 &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602140645618&quot; alt=&quot;这里写图片描述&quot;/&gt; &lt;br/&gt;4：根据vnet8的ＩＰ地址设置Linux操作系统的地址，两个IP地址在同一网段，并且与虚拟机的vnet8在同一网段。 &lt;/p&gt;
&lt;p&gt;&amp;gt;重启网卡systemctl restart network&amp;gt;ifconfig 查看地址是否设置成功。 &lt;/p&gt;
&lt;p&gt;5：关闭Linux的防火墙：systemctl stop firewalld &lt;br/&gt;6: 关闭Windows的防火墙&amp;gt;启动防火墙策略 &lt;br/&gt;Windows防火墙 –&amp;gt; 高级设置 –&amp;gt; 入站规则 –&amp;gt; 在列表里找到“文件和打印机共享(回显请求 - ICMPv4-In)” –&amp;gt; 右击选择启用规则，并在其属性里设置为‘允许连接’–&amp;gt; 确定。 &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602143137504&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;7：从 Linux ping windows &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602143326957&quot; alt=&quot;这里写图片描述&quot;/&gt; &lt;br/&gt;8：从 Windows ping Linux &lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://img.blog.csdn.net/20150602143442709&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Oct 2017 15:17:00 +0000</pubDate>
<dc:creator>王守昌</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wangshouchang/p/7740141.html</dc:identifier>
</item>
<item>
<title>Cocos 2d-X Lua 游戏添加苹果内购(二) OC和Lua交互代码详解 - Zxiao..旭</title>
<link>http://www.cnblogs.com/taoxu/p/7729693.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/taoxu/p/7729693.html</guid>
<description>&lt;p&gt;这是第二篇&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;      &lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/taoxu/p/7725660.html&quot;&gt;Cocos 2d-X Lua 游戏添加苹果内购(一) 图文详解准备流程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;      这是前面的第一篇，详细的说明了怎样添加内购项目以及填写银行信息提交以及沙盒测试员的添加使用以及需要我们注意的东西，结果，被移除首页了！前面第一篇的内容是这篇的基础，前面那些不弄好，下面的商品信息你是请求不到的，这点需要大家特别注意...有需要前面提到的内容的孩子可以点击链接进去自己看看！！&lt;/p&gt;
&lt;p&gt;      这篇就具体的总结我们Lua和OC交互的内容以及内购具体的代码以及结果的测试说明：&lt;/p&gt;

&lt;p&gt;内购部分OC的代码实现&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;      先自己总结一下整个支付的流程，下面的代码部分我们也就按照这个支付流程来解读：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/739006/201710/739006-20171025174034223-1009499202.png&quot; alt=&quot;&quot; width=&quot;560&quot; height=&quot;654&quot;/&gt;&lt;/p&gt;

&lt;p&gt;最开始你首先要做的就是给你的项目添加： StoreKit.framework 框架  &lt;/p&gt;
&lt;p&gt;以及在你需要写支付的类中导入： #import &amp;lt;StoreKit/StoreKit.h&amp;gt;&lt;/p&gt;
&lt;p&gt;并且你还得遵守 &amp;lt;SKPaymentTransactionObserver,SKProductsRequestDelegate &amp;gt; 两个协议，后面会实现他们相应的代理方法。&lt;/p&gt;

&lt;p&gt;接下来你初始化了你支付类需要你初始化的东西之后，就开始判断用户有没有禁止了苹果支付，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
// 在这里先判断是否可以调用支付
-(void)isPay{
    
    // 判断用户是否禁止了苹果支付
    if ([SKPaymentQueue canMakePayments]) {
        
        // 1.获取产品信息列表
        [self requestProductData:PRODUCTID];
        
    }else{
        
        self.alertTitle   = @&quot;充值失败&quot;;
        self.alertMessage = @&quot;您禁止了支付权限!&quot;;
            
#if __IPHONE_OS_VERSION_MAX_ALLOWED &amp;gt;= __IPHONE_8_0
        // 不能进行支付进行提示
        [self.viewController presentViewController:self.alertController animated:YES completion:nil];
#else
        [self.viewController.view addSubview:self.alertView];
#endif
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;按照我们最开始时候的流程，接下来就需要我们去创建 SKProductsRequest 向苹果服务器请求商品的信息，具体的代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
- (void)requestProductData:(NSString *)productId{
    
    NSArray * productArray = [[NSArray alloc]initWithObjects:productId, nil];
    NSSet   * productSet = [NSSet setWithArray:productArray];
    
    // 创建支付请求
    SKProductsRequest * productRequest = [[SKProductsRequest alloc]initWithProductIdentifiers:productSet];
    productRequest.delegate = self;
    [productRequest start];
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注意： 上面代码中的 productId 就是我们刚开始在开发者后台创建新的内购产品时候的产品ID，要是不理解的强烈建议先看第一篇文章，得知道什么是产品ID。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;41&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
#pragma mark -- SKRequestDelegate
// 下面的方法会接收苹果服务器返回的商品的产品信息
// Sent immediately before -requestDidFinish:
- (void)productsRequest:(SKProductsRequest *)request didReceiveResponse:(SKProductsResponse *)response {
    
    // 接收商品的信息
    NSArray * productInfo = response.products;
    if (productInfo.count ==0) {
        
        NSLog(@&quot;接收到的商品的信息为空！&quot;);
        return;
    }else{
        // 打印出商品信息  以下的信息全都是在你开发者账号下面添加了内购项目中填写
        for (SKProduct *pro in productInfo) {
                    
             NSLog(@&quot;显示名称：%@&quot;, [pro localizedTitle]);
             NSLog(@&quot;描述：%@&quot;, [pro localizedDescription]);
             NSLog(@&quot;你设置的价格单位：%@&quot;, [pro price]);              // 注意这里的单位，是用你在内购项目里面设置的定价
             NSLog(@&quot;单位：%@&quot;, [pro.priceLocale objectForKey:NSLocaleCurrencySymbol]);
             NSLog(@&quot;CNY：%@&quot;, [pro.priceLocale objectForKey:NSLocaleCurrencyCode]);
             NSLog(@&quot;测试商品ID：%@&quot;, [pro productIdentifier]);
        }
    }
        
     
    // SKProduct对象包含了在App Store上注册的商品的本地化信息。
    SKProduct *storeProduct = nil;
    for (SKProduct * pro in productInfo) {
            
        if ([pro.productIdentifier isEqualToString:PRODUCTID]) {
                
            storeProduct = pro;
        }
    }
    
    //创建一个支付对象，并放到队列中
    self.skMutablePayment = [SKMutablePayment paymentWithProduct:storeProduct];

    //设置购买的数量 具体的交易金额就是这里的  数量 * 开发者账号定价
    if (self.payParments != 0) {
        //开始调用支付    
        self.skMutablePayment.quantity = self.payParments;
        [[SKPaymentQueue defaultQueue] addPayment:self.skMutablePayment];
                
        // 开始一个内购监听
        [self startObserver];
                
    }else{
        NSLog(@&quot;没有设置购买的数量！！&quot;);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这一步就走到我们接收到了商品的信息，接下来要做的事按照前面给的流程图，就需要我们开启一个内购的监听。再给大家看到你请求到的商品的基本信息，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/739006/201710/739006-20171025180653941-782837936.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;具体的上面的内容是什么，大家可以对比上面的输出的时候循环里面我加了它们各自的信息。&lt;/p&gt;
&lt;p&gt;可以看到我们现在是添加了一个监控，开始监控和结束监控的代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
- (void)startObserver {
    if (!self.isObserver) {
            
        [[SKPaymentQueue defaultQueue] addTransactionObserver:self];
        NSLog(@&quot;开始监听 ------ 内购&quot;);
        self.isObserver = YES;
    }
}

- (void)stopObserver {
    if (self.isObserver) {
            
        [[SKPaymentQueue defaultQueue] removeTransactionObserver:self];
        NSLog(@&quot;移除监听 ------ 内购&quot;);
        self.isObserver = NO;
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面我们就开启了监听，也开始了支付，中间的怎样使用沙盒测试账号进行购买的测试，以及过程中需要注意的事项我们已经总结过了，可以看前面的文章。&lt;/p&gt;
&lt;p&gt;等支付完成之后，我们就可以收到来自苹果支付结果的回调了，具体的回调处理下面的代码中有详细的注释： &lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
#pragma mark -- SKPaymentTransactionObserver
//&amp;lt;SKPaymentTransactionObserver&amp;gt;千万不要忘记绑定，代码如下：
//监听购买结果
//[[SKPaymentQueue defaultQueue] addTransactionObserver:self];
- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray&amp;lt;SKPaymentTransaction *&amp;gt; *)transactions
{
    
    SKPaymentTransaction *transaction = transactions.lastObject;
    switch (transaction.transactionState) {
                    
        // 购买成功
        case SKPaymentTransactionStatePurchased: {
                
            NSData *data = [NSData dataWithContentsOfFile:[[[NSBundle mainBundle] appStoreReceiptURL] path]];
            // 刚才交易的内购的清单
            NSString *receipt = [data base64EncodedStringWithOptions:0];
            NSLog(@&quot;刚才交易的内购的清单:%@&quot;,receipt);
            
            // 对交易结果进行二次验证
            [self verifyPruchase];
        }
            break;
        
        // 交易失败
        case SKPaymentTransactionStateFailed: {
                
            NSLog(@&quot;交易失败&quot;);
            // 交易失败也要回调服务端
            // 将交易从交易队列中删除
            [[SKPaymentQueue defaultQueue] finishTransaction:transaction];
        }
            break;
                    
        case SKPaymentTransactionStateRestored: {
                
            NSLog(@&quot;这是你已经购买过该商品！&quot;);
            [[SKPaymentQueue defaultQueue] finishTransaction:transaction];
        }
            break;
        case SKPaymentTransactionStatePurchasing: {
                
            NSLog(@&quot;商品添加进列表&quot;);
        }
            break;
        default: {
                
            NSLog(@&quot;这是什么情况啊？&quot;);
        }
            break;
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下来在按照流程走的话就到二次验证支付结果的，其实我觉得这个过程放在移动端问题也不大，整个过程走Https,也没有什么关键的数据怕数问题，不像支付宝和微信支付签名的过程一样那么重要，不过需要注意的是验证这个结果得地址是分开的，也就是在开发测试阶段和上线阶段的地址是不同的，发送网络POST请求，对购买凭据进行验证：&lt;/p&gt;
&lt;p&gt;测试验证地址:&lt;a href=&quot;https://sandbox.itunes.apple.com/verifyReceipt&quot;&gt;https://sandbox.itunes.apple.com/verifyReceipt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;正式验证地址:&lt;a href=&quot;https://buy.itunes.apple.com/verifyReceipt&quot;&gt;https://buy.itunes.apple.com/verifyReceipt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面是具体的支付结果的验证代码：&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;40&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
#pragma mark 验证购买凭据
- (void)verifyPruchase {
    
    // 验证凭据，获取到苹果返回的交易凭据
    // appStoreReceiptURL iOS7.0增加的，购买交易完成后，会将凭据存放在该地址
    NSURL *receiptURL = [[NSBundle mainBundle] appStoreReceiptURL];
    // 从沙盒中获取到购买凭据
    NSData *receiptData = [NSData dataWithContentsOfURL:receiptURL];
    
    // 发送网络POST请求，对购买凭据进行验证
    //测试验证地址:https://sandbox.itunes.apple.com/verifyReceipt
    //正式验证地址:https://buy.itunes.apple.com/verifyReceipt
    NSURL *url = [NSURL URLWithString:@&quot;https://sandbox.itunes.apple.com/verifyReceipt&quot;];
    NSMutableURLRequest *urlRequest =
    [NSMutableURLRequest requestWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:10.0f];
    urlRequest.HTTPMethod = @&quot;POST&quot;;
    NSString *encodeStr   = [receiptData base64EncodedStringWithOptions:NSDataBase64EncodingEndLineWithLineFeed];
    NSString *payload     = [NSString stringWithFormat:@&quot;{\&quot;receipt-data\&quot; : \&quot;%@\&quot;}&quot;, encodeStr];
    NSData   *payloadData = [payload dataUsingEncoding:NSUTF8StringEncoding];
    urlRequest.HTTPBody   = payloadData;
    
    // 提交验证请求，并获得官方的验证JSON结果 iOS9后更改了另外的一个方法
    NSData *result = [NSURLConnection sendSynchronousRequest:urlRequest returningResponse:nil error:nil];
    
    // 官方验证结果为空
    if (result == nil) {
        
        NSLog(@&quot;交易验证失败&quot;);
        return;
    }
    
    // 二次验证返回，在这里给服务端返回验证结果
    NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:result options:NSJSONReadingAllowFragments error:nil];
    if (dict != nil) {
        
        // 比对字典中以下信息基本上可以保证数据安全
        // bundle_id , application_version , product_id , transaction_id
        NSLog(@&quot;验证成功！购买的商品的信息是：%@&quot;, dict);
            
        // 在这里回调Lua文件支付的结果
        NSDictionary * receipt = dict[@&quot;receipt&quot;];
        // 在连续的交易中，会有多笔交易产生
        NSArray * in_app  = receipt[@&quot;in_app&quot;];
            
        if (in_app.count !=0) {
                    
            for (NSDictionary * dic in in_app) {
                    
                    // 订单号回调Lua
                    NSString * transaction_id = dic[@&quot;transaction_id&quot;];
                    [self toLuaFunc:self.handlerID backMsg:[transaction_id UTF8String]];
            }       
        }
    }else{
    
            // 交易不成功，回调Lua
            NSString * transaction_id = @&quot; &quot;;
            [self toLuaFunc:self.handlerID backMsg:[transaction_id UTF8String]];
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样整个支付其实已经算是完成了的，看的仔细的朋友应该看到请求到回调结果之后我们OC回调Lua了，在这里成功之后我们是回调了Lua，在Lua俩面利用Socket向服务器去发送一个支付的确定的结果，下面我们说说Lua和OC的相互调用。&lt;/p&gt;

&lt;p&gt;Lua 调用 OC&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;      下面是自己在做的一个Lua文件和OC交互的一个大概的示意图，如下：&lt;/p&gt;
&lt;p&gt;     &lt;img src=&quot;http://images2017.cnblogs.com/blog/739006/201710/739006-20171025232516207-1234576415.png&quot; alt=&quot;&quot; width=&quot;513&quot; height=&quot;498&quot;/&gt;&lt;/p&gt;
&lt;p&gt;      通过上面的一个示意图，在对比下面的代码，我们一句句的分析一下整个流程：&lt;/p&gt;
&lt;p&gt;      首先是第一步： Lua 文件调用 Bridge_ios  着重看一下下面几句代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;40&quot;&gt;
&lt;pre class=&quot;brush:cpp;gutter:true;&quot;&gt;
-- 点击跳转到苹果支付界面
function Bridge_ios.presentApplePayWithParams(payParam, callback)
    
    --quantity 价格   callback回调
    local params = {quantity = payParam, scriptHandler = callback}
    local ok,ret = luaoc.callStaticMethod(BRIDGE_CLASS,&quot;presentApplePayController&quot;,params)
    if not ok then
        -- 返回值
        print(&quot;luaj error:&quot;..ret)   
    end
end
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;其实直接调用OC的就是  luaoc.callStaticMethod 这个方法，这个方法解释一下：&lt;/p&gt;
&lt;p&gt;      1、luaoc    local luaoc = require &quot;cocos.cocos2d.luaoc&quot;   这个Lua引入就像OC 的#import 一样！&lt;/p&gt;
&lt;p&gt;      2、BRIDGE_CLASS  这个表示你和OC的那个类进行交互。&lt;/p&gt;
&lt;p&gt;      3、&quot;presentApplePayController&quot; 接下来的这个参数，就是你OC类里面写的类方法！&lt;/p&gt;
&lt;p&gt;      4、params 顾名思义就是参数的意思，Lua 这里传过去的是以 表 的形式，相信懂Lua 的你也清楚，什么是表！ &lt;/p&gt;
&lt;p&gt; 再说说这个参数：看这一句    local params = {quantity = payParam, scriptHandler = callback}&lt;/p&gt;
&lt;p&gt;       我们把参数写成了表的形式，用OC理解牛把它当成一个字典！quantity 是键  payParam 就是你要传的值  ， scriptHandler 是键，callback是值，只不过它是函数，OC需要回调的函数，具体的用法我们下面说回调的时候再说。&lt;/p&gt;
&lt;p&gt;      在上面的调用中：BRIDGE_CLASS 就是 AppController。&lt;/p&gt;

&lt;p&gt; OC 回调 Lua &lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;      前面说完了Lua 调用OC，下面接着说说 OC是怎样回调Lua 的，具体的根据下面的代码解释：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:cpp;gutter:true;&quot;&gt;
// Lua 回调函数
- (void) toLuaFunc: (int)funC backMsg:(std::string)msg{
#if CC_ENABLE_SCRIPT_BINDING
        int handler = funC;
        if (-1 != handler)
        {
                auto sc = cocos2d::Director::getInstance()-&amp;gt;getScheduler();
                sc-&amp;gt;performFunctionInCocosThread([handler, msg](){
                        
                    cocos2d::LuaBridge::pushLuaFunctionById(handler);
                    cocos2d::LuaStack *stack = cocos2d::LuaBridge::getStack();
                    stack-&amp;gt;pushString(msg.c_str());
                    stack-&amp;gt;executeFunction(1);
                    cocos2d::LuaBridge::releaseLuaFunctionById(handler);
              });
                
        }
#endif
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后我们一句一句的解释一下上面这个OC回调Lua的过程：&lt;/p&gt;
&lt;p&gt;LuaBridge::pushLuaFunctionById(handlerID); //压入需要调用的方法id（假设方法为XG）&lt;/p&gt;
&lt;p&gt;LuaStack *stack = LuaBridge::getStack(); //获取lua栈&lt;/p&gt;
&lt;p&gt;stack-&amp;gt;pushString(&quot;oc call lua method...&quot;); //将需要通过方法XG传递给lua的参数压入lua栈,这里也就是设置OC回调给Lua的参数&lt;/p&gt;
&lt;p&gt;stack-&amp;gt;executeFunction(1); //根据压入的方法id调用方法XG，并把XG方法参数传递给lua代码&lt;/p&gt;
&lt;p&gt;LuaBridge::releaseLuaFunctionById(handlerID); //最后记得释放一下function&lt;/p&gt;

&lt;p&gt;上面的这整个过程，再结合我们第一篇文章写得苹果内购的图文详解流程，基本上一个完整的游戏添加内购的过程就算是结束了，要是有什么问题可以在我的主页找我的QQ或者下面留言给我！！&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/taoxu/p/7725660.html&quot;&gt;Cocos 2d-X Lua 游戏添加苹果内购(一) 图文详解准备流程&lt;/a&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 26 Oct 2017 15:13:00 +0000</pubDate>
<dc:creator>Zxiao..旭</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/taoxu/p/7729693.html</dc:identifier>
</item>
</channel>
</rss>