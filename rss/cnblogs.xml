<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Javaweb项目开发的前后端解耦的必要性 - 濒临小浣熊</title>
<link>http://www.cnblogs.com/xiaoxiaole/p/7783482.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaoxiaole/p/7783482.html</guid>
<description>
&lt;p&gt;&lt;span&gt;&lt;strong&gt;使用jsp的痛点：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.jsp上动态资源和静态资源全部耦合在一起，服务器压力大，因为服务器会收到各种静态资源的http请求，动态代码的等等，除非你使用nginx。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;万一你的java代码出现了bug，你的页面是显示不出来的，直接蹦到了5xx页面，用户体验极差。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;(现在javaWeb项目业界的标准是nginx+tomcat，动静分离，请求先到nginx，所有的静态资源请求全部交给nginx，动态资源全部给tomcat，此外nginx还可以玩负载均衡。ps：即使你依然使用jsp，也可以这么玩的，&lt;/strong&gt;nginx据说单实例http并发高达5w，这个优势要用上，tomcat的各种参数优化完http并发能上2000？还有不要把tomcat暴露给外网，一旦被黑客破解了之后，你配置文件里所有的信息，以及你的代码都会玩完，class文件怎么了？class文件可以反编译，把nginx暴露给外网，只开放80和443端口，nginx调用tomcat全部都是内网ip，及时被黑客破解，他能拿到的也是一些静态资源，你是安全的。&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;2.前端工程师做好html后，需要由后端的java工程师来将html修改成jsp页面，包括各种文件的路径，出错率较高（因为页面中经常会出现大量的js代码），&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;页面中耦合了标签，java表达式，js代码，html代码，特别乱，修改问题时需要双方协同开发，效率低下。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.jsp必须要在支持java的web服务器里运行（例如tomcat/resin/jboss/weblogic等），性能提不上来。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;4.第一次请求jsp，必须要在web服务器中编译成servlet，第一次运行会较慢。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;5.每次请求jsp都是访问servlet再用输出流输出的html页面，效率没有直接使用html高（&lt;/strong&gt;记住是每次哟~~~内存哟，IO哟&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;6.如果在生产环境中，发现了前端的bug，让前端工程师来调试bug，这个时候的页面已经很混乱了，呵呵，他会遇到很多痛点。&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;7.如果jsp中的内容很多，页面响应会很慢，因为是同步加载。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;---------------------------------------------------&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于上述的一些痛点，我们应该把整个项目的开发权重往前移，实现前后端真正的解耦！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;以前后端java程序猿的权重很大，什么UI，前端，都只是附属，现在需要改变。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;前端不仅仅是css，js那么简单，前端在使用了一些框架和工具之后，是可以变成前端项目的，在项目层面拆开，前端也需要有MVC框架，也需要编译，打包，部署，是很复杂的，越是大型互联网公司，前端项目越是工程化的项目，包括前端项目的版本管理，运维，水都是很深的。这就是我在开篇中说的，术业有专攻！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;你要玩，就要玩到极致，要不就别玩！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;---------------------------------------------------&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;以前老的方式是：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;1.客户端请求&lt;br/&gt;2.服务端的servlet或controller接收请求（路由规则由后端制定，整个项目开发的权重大部分在后端）&lt;br/&gt;3.调用service,dao代码完成业务逻辑&lt;br/&gt;4.返回jsp&lt;br/&gt;5.jsp展现一些动态的代码&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;strong&gt;新的方式是：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;1.浏览器发送请求&lt;br/&gt;2.直接到达html页面（路由规则由前端制定，整个项目开发的权重前移）&lt;br/&gt;3.html页面负责调用服务端接口产生数据（通过ajax等等，后台返回json格式数据）&lt;br/&gt;4.填充html，展现动态效果，&lt;/strong&gt;在页面上进行解析并操作DOM。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（有兴趣的童鞋可以访问一下阿里巴巴等大型网站，然后按一下F12，监控一下你刷新一次页面，他的http是怎么玩的，如果是像首页这种页面就是纯的html，如果是其他的动态页面，大多数是单独请求后台数据，使用json传输数据，而不是一个大而全的http请求把整个页面包括动+静全部返回过来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以前有人跟我提过，可以将jsp做动态页面静态化，可以呀，你的数据库里有1000w条数据，你静态化1000w个html吗？请问您这1000w个html放在哪里？不管放在哪里，都是问题。还有如果页面变更了，怎么办？重新再生成1000w个html页面吗？？？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可以考虑一个html页面然后调用后端接口，热点数据查询的时候直接使用分布式缓存，不走数据库了。以后你的项目玩大了，都是基于云的架构，这块水太深了，我也正在学习中，数据库是有性能瓶颈的，因为有事务，有锁，有连接数等等。）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;总结一下新的方式的请求步骤：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;大量并发浏览器请求---&amp;gt;web服务器集群(nginx)---&amp;gt;应用服务器集群(tomcat)---&amp;gt;文件/数据库/缓存/消息队列服务器集群&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;同时又可以玩分模块，还可以按业务拆成一个个的小集群，把核心的业务封装成一个业务中心，玩远程业务调用，玩rpc，玩soa，使用springboot+docker玩微服务，这样才是一个弹性的分布式架构。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;---------------------------------------------------&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;这样做的好处是：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;1.可以实现真正的前后端解耦，前端服务器使用nginx。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;前端服务器放的是css，js，图片等等一系列静态资源（甚至你还可以css，js，图片等资源放到特定的文件服务器，例如阿里云的oss，并使用cdn加速），前端服务器负责控制页面引用，跳转，调用后端的接口，后端服务器使用tomcat（把tomcat想象成一个数据提供者，这里也叫应用服务器），加快整体响应速度。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;（这里需要使用一些前端工程化的框架比如nodejs，react，router，react，redux，webpack）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;2.发现bug，可以快速定位是谁的问题，不会出现互相踢皮球的现象。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;页面逻辑，跳转错误，&lt;/strong&gt;浏览器兼容性问题，脚本错误，页面样式等问题，&lt;strong&gt;全部由前端工程师来负责。&lt;/strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;接口数据出错，数据没有提交成功，应答超时等问题，全部由后端工程师来解决。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;双方互不干扰，前端与后端是相亲相爱的一家人。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;3.在大并发情况下，我可以同时水平扩展前后端服务器，比如淘宝的一个首页就需要2000+台前端服务器做集群来抗住日均多少亿+的日均pv。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;（去参加阿里的技术峰会，听他们说他们的web容器都是自己写的，就算他单实例抗10万http并发，2000台是2亿http并发，你没有看错，确实是并发http，并且他们还可以根据大数据来预知洪峰来无限拓展，他们的大数据都是实时采集，实时分析以及使用的，正所谓由IT时代变为DT时代，很恐怖，就一个首页。。。）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;4.减少后端服务器的并发压力，除了接口以外的其他所有http请求全部转移到前端nginx上。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;5.即使后端服务暂时超时或者宕机了，前端页面也会正常访问，只不过数据刷不出来而已。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;6.也许你也需要有微信相关的轻应用，那样你的接口完全可以共用，如果也有app相关的服务，那么只要通过一些代码重构，也可以大量复用接口，提升效率。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;7.页面显示的东西再多也不怕，因为是异步加载。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;---------------------------------------------------&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.在开需求会议的时候，前后端工程师必须全部参加，并且需要制定好接口文档，后端工程师要写好测试用例，不要让前端工程师充当你的组专职测试，推荐使用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;chrome的插件postman，service层的测试用例拿junit写。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;2.上述的接口并不是java里的interface，说白了调用接口就是调用你controler里的方法。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.加重了前端团队的工作量，减轻了后端团队的工作量，提高了性能和可扩展性，可维护性。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.我们需要一些前端的框架来解决类似于页面嵌套，分页，页面跳转控制等功能。（上面提到的那些前端框架）。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.如果你的项目很小，或者是一个单纯的内网项目，那你大可放心，不用任何架构而言，但是如果你的项目是外网项目，呵呵哒。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;6.以前还有人在使用类似于velocity/freemarker等模板框架来生成静态页面，现在这种做法也被淘汰掉了。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;7.这篇文章主要的目的是说jsp在大型外网java web项目中被淘汰掉，可没说jsp可以完全不学，对于一些学生朋友来说，jsp/servlet等相关的java web基础还是要掌握牢的，不然你以为springmvc这种框架是基于什么来写的？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;8.如果页面上有一些权限等等相关的校验，那么这些相关的数据也可以通过ajax从接口里拿。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 07:27:00 +0000</pubDate>
<dc:creator>濒临小浣熊</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiaoxiaole/p/7783482.html</dc:identifier>
</item>
<item>
<title>缕清思路，继续前行 - leiyu0918</title>
<link>http://www.cnblogs.com/yourancao520/p/7783457.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yourancao520/p/7783457.html</guid>
<description>&lt;p&gt;      从大学毕业到现在已经快10个年头了。发现自己到了三十而立之年。回想过去的几年职业发展，没有太多出彩，引以为豪的事情。虽然工作上兢兢业业，&lt;/p&gt;
&lt;p&gt;每天的工作也很充实（应该说是劳累），每年也都有相应的成长，但是感觉太过于缓慢。个人感觉原因应该是分两方面，&lt;/p&gt;
&lt;p&gt;首先是个人原因，没有一个较为明确的职业发展规划，没有一个很好的定位，导致精力过于分散（其实自己也挺懒的，主观能动性较差）;&lt;/p&gt;
&lt;p&gt;其次是环境原因，可能自己身处的工作环境有一定的关系，身边的人或事情会多多少少的影响到自己。&lt;/p&gt;
&lt;p&gt;目前在现单位已工作6年之多，几个一起并肩作战的朋友也都离开的现公司，时间久了，看懂了很多事情，自己也遇到的职业的瓶颈期，不知道自己该往哪一块去发展。犹豫过，纠结过，迷茫过....&lt;/p&gt;
&lt;p&gt;好在和一个朋友交流过几次，他的一番话点出了问题的本质原因，帮我在迷途中缕清了前进的方面。作为一名程序猿，表达能力欠缺，不能用很华丽词语表示我的感谢之意，但还是非常感谢我的这位朋友。&lt;/p&gt;

&lt;p&gt;最后总结一下朋友给的建议，希望能对其他的人有所帮助。&lt;/p&gt;
&lt;p&gt;1.个人从内在开始改变和重新定位了，被周围环境认可是早晚的事;比如:你想搞网络安全 那就先个人修为搞好 然后参加外面各种比赛啊&lt;/p&gt;
&lt;p&gt;  认证啊之类的东西 或者开博 或者github上做点成绩 名气慢慢起来了 由外向内攻 公司看到这些 自然认可你 部门也会乐于给优秀人才分配资源;&lt;/p&gt;
&lt;p&gt;2. 知行合一，身体力行；&lt;/p&gt;
&lt;p&gt;3. 能把认为对的观点进行彻底消化，融进自己的知识体系和思维方式，才会真的形成能力 ；&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 07:20:00 +0000</pubDate>
<dc:creator>leiyu0918</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yourancao520/p/7783457.html</dc:identifier>
</item>
<item>
<title>如何用java创建一个jdbc程序 - yjl博客</title>
<link>http://www.cnblogs.com/yjlblog/p/7783381.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yjlblog/p/7783381.html</guid>
<description>&lt;h2 id=&quot;第一个jdbc程序&quot;&gt;第一个jdbc程序&lt;/h2&gt;
&lt;h3 id=&quot;jdbc简介&quot;&gt;JDBC简介&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Java数据库连接(Java Database Connectivity，JDBC)，是一种用于执行SQL语句的Java API，它由一组用Java编程语言编写的类和接口组成。&lt;/li&gt;
&lt;li&gt;JDBC为数据库开发人员提供了一个标准的API，使他们能够用纯Java API来编写数据库应用程序。&lt;/li&gt;
&lt;li&gt;使用JDBC编写的程序能够自动地将SQL语句传送给相应的数据库管理系统。&lt;/li&gt;
&lt;li&gt;JDBC扩展了Java的功能，由于Java语言本身的特点，使得JDBC具有简单、健壮、安全、可移植、获取方便等优势。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;jdbc-api&quot;&gt;JDBC API&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;DriverManager&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;数据库驱动管理类，用于加载和卸载各种驱动程序，并建立于数据库的连接&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;Connection&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;此接口用于连接数据库&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;Statement&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;此接口用于执行SQL语句并将数据检索到ResultSet中&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;ResultSet&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;结果集接口，提供检索SQL语句返回数据的各种方法&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;PreparedStatement&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;此接口用于执行预编译的SQL语句&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;CallableStatement&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;此接口用于执行SQL存储过程的语句&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;jdbc结构&quot;&gt;JDBC结构&lt;/h3&gt;
&lt;p&gt;1.JDBC API是Java开发工具包(JDK)的组成部份：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JDBC驱动程序管理器&lt;/li&gt;
&lt;li&gt;JDBC驱动程序测试工具包&lt;/li&gt;
&lt;li&gt;JDBC-ODBC桥&lt;br/&gt;2.JDBC驱动程序管理器是JDBC体系结构的支柱，其主要作用是把Java应用程序连接到正确的JDBC驱动程序上。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;3.JDBC驱动程序测试工具包为JDBC驱动程序的运行提供一定的可信度，只有通过JDBC驱动程序测试包的驱动程序才被认为是符合JDBC标准的。&lt;/p&gt;
&lt;p&gt;4.JDBC-ODBC桥使ODBC驱动程序可被用作JDBC驱动程序。其目标是为方便实现访问某些不常见的DBMS，它的实现为JDBC的快速发展提供了一条途径。&lt;/p&gt;
&lt;h3 id=&quot;分析jdbc开发步骤&quot;&gt;分析JDBC开发步骤&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用JDBC访问数据库的基本步骤一般如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;加载JDBC驱动程序&lt;/li&gt;
&lt;li&gt;创建数据库连接&lt;/li&gt;
&lt;li&gt;创建Statement对象&lt;/li&gt;
&lt;li&gt;执行SQL语句&lt;/li&gt;
&lt;li&gt;处理返回结果&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭创建的对象&lt;/p&gt;
&lt;h3 id=&quot;开发第一个jdbc程序&quot;&gt;开发第一个JDBC程序&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;package com.wfu.ch09;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Test1 {
    public static void main(String[] args) {
        try {
            Class.forName(&quot;com.mysql.jdbc.Driver&quot;);//里面的名字一定不要写错，这个也是导入的
            //forName(String className) 返回与带有给定字符串名的类或接口相关联的 Class 对象。
            Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/k-user&quot;,&quot;root&quot;,&quot;123456&quot;);//试图建立到给定数据库 URL 的连接。
            Statement stmt=conn.createStatement(); //创建一个 Statement 对象来将 SQL 语句发送到数据库。

//          String insertsql=&quot;insert into k_user(userno,username,pwd) values('1002','张三','123')&quot;;
//          int x=stmt.executeUpdate(insertsql); //executeUpdate 返回一个int 型的数据 括号里面是一个字符串数据类型，详细内容看文档

            //(1) 对于 SQL 数据操作语言 (DML) 语句，返回行计数
            //(2) 对于不返回任何内容的 SQL 语句，返回 0

//          if(x&amp;gt;0){
//              System.out.println(&quot;插入成功！&quot;);
//          }
//          String updateSql=&quot;update k_user set pwd='123456' where userno='1002'&quot;;
//          int x=stmt.executeUpdate(updateSql);
//          if(x&amp;gt;0){
//              System.out.println(&quot;更新成功！&quot;);
//          }
            String deleteSql=&quot;delete from k_user where userno='1002'&quot;;
            int x=stmt.executeUpdate(deleteSql);
            if(x&amp;gt;0){
                System.out.println(&quot;删除成功！&quot;);
            }
            String sql=&quot;select * from k_user&quot;;
            ResultSet rs=stmt.executeQuery(sql);
            while(rs.next()){
                for(int i=1;i&amp;lt;=13;i++){
                    System.out.print(rs.getString(i)+&quot;  &quot;);
                }
                System.out.println();
            }
            rs.close();
            stmt.close();
            conn.close();
        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }               
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;package com.wfu.ch09;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Test2 {
    public static void main(String[] args) {
        try {
            // step1：加载JDBC驱动程序
            Class.forName(&quot;com.mysql.jdbc.Driver&quot;);
            // step2:建立数据库的连接
            Connection conn = DriverManager.getConnection(
                    &quot;jdbc:mysql://localhost:3306/stock11&quot;, &quot;root&quot;, &quot;123&quot;);
//          // step3:创建Statement对象
            Statement st = conn.createStatement();
            //step4:执行SQL语句
            String selectSql=&quot;select * from k_user&quot;;
            //step5：处理结果集
            ResultSet rs=st.executeQuery(selectSql);
            while(rs.next()){
                for(int i=1;i&amp;lt;=13;i++){
                    System.out.print(rs.getString(i)+&quot;  &quot;);
                }
                System.out.println();
//              String x=rs.getString(&quot;hometown&quot;);
//              System.out.println(x);
            }
            //step6：关闭创建的对象
            //关闭结果集
            rs.close();
            //关闭statement对象
            st.close();
            //关闭连接
            conn.close();


            // step4： 执行SQL语句
////            String insertSql = &quot;insert into k_user(userno,username,pwd) values('1001','tom','123')&quot;;
//          int x = st.executeUpdate(insertSql);
//          if(x&amp;gt;0){
//              System.out.println(&quot;插入成功！&quot;);
//          }
//          String updateSql=&quot;update k_user set pwd='123456' where userno='1001'&quot;;
//          int x=st.executeUpdate(updateSql);
//          if(x&amp;gt;0){
//              System.out.println(&quot;更新成功！&quot;);
//          }
//          String deleteSql=&quot;delete from k_user where userno='1001'&quot;;
//          int x=st.executeUpdate(deleteSql);
//          if(x&amp;gt;0){
//              System.out.println(&quot;删除成功！&quot;);
//          }
            //

        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;各个语句说明&quot;&gt;各个语句说明&lt;/h3&gt;
&lt;h4 id=&quot;加载jdbc驱动程序&quot;&gt;加载JDBC驱动程序&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;加载驱动程序的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Class.forName(&quot;DriverName&quot;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中DriverName是要加载的JDBC驱动程序名称。驱动程序名称根据数据库厂商提供的JDBC驱动程序的种类来确定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;加载MySQL数据库驱动程序的方法为：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Class.forName(&quot;com.mysql.jdbc.Driver&quot;);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加载Oracle数据库驱动程序的方法为：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;加载Oracle数据库驱动程序的方法为：&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;创建数据库连接-1&quot;&gt;创建数据库连接-1&lt;/h4&gt;
&lt;p&gt;DriverManager类是JDBC的管理层，作用于用户和驱动程序之间，跟踪可用的驱动程序，并在数据库和相应驱动程序之间建立连接。该类负责加载、注册JDBC驱动程序，管理应用程序和已注册的驱动程序的连接。&lt;br/&gt;&lt;strong&gt;DriverManager的常用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;7&quot;&gt;&lt;td align=&quot;center&quot;&gt;Static connection getConnection(String url, String user, String password)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;用于建立到指定数据库 URL 的连接。其中url为 提供了一种标识数据库位置的方法，user为用户名，password为密码&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td align=&quot;center&quot;&gt;static Driver getDriver(String url)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;用于返回能够打开url所指定的数据库的驱动程序&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;使用DriverManager类的getConnection()创建一个数据库连接：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Connection conn = DriverManager.getConnection(String url,String user,String password);&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;创建数据库连接-2&quot;&gt;创建数据库连接-2&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;URL提供了一种标识数据库位置的方法，可以使相应的驱动程序能够识别该数据库并与它建立连接。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JDBC URL由三个部分组成:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbc : &amp;lt; subprotocol&amp;gt; : &amp;lt; subname&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;可以根据子协议的改变而变化。&lt;br/&gt;是子协议，指数据库连接的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;创建数据库连接-3&quot;&gt;创建数据库连接-3&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;对于MySQL驱动的连结的URL是：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbc:mysql://serverName:port/instance
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;mysql为子协议名称&lt;/li&gt;
&lt;li&gt;serverName为MySQL数据库服务器名称，可以是一个域名，也可以是IP地址&lt;/li&gt;
&lt;li&gt;port为MySQL数据库的端口号，默认为3306&lt;/li&gt;
&lt;li&gt;instance是数据库的实例名&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Connection conn = DriverManager.getConnection(
        &quot;jdbc:mysql://localhost:3306/haier&quot;, &quot;root&quot;, &quot;123&quot;);

&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;创建sql-语句&quot;&gt;创建SQL 语句&lt;/h4&gt;
&lt;p&gt;创建完连接之后，可以通过此连接向目标数据库发送SQL语句。在发送SQL语句之前，须创建一个Statement类的对象，该对象负责将SQL语句发送给数据库。如果SQL语句运行后产生结果集，Statement对象会将结果集封装成ResultSet对象并返回。&lt;/p&gt;
&lt;p&gt;通过调用Connection接口的createStatement方法来创建Statement对象，如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Statement smt = conn.createStatement();&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;执行sql语句&quot;&gt;执行SQL语句&lt;/h4&gt;
&lt;p&gt;在Statement接口中有两个非常重要的方法，分别是executeUpdate方法和executeQuery方法。使用executeUpdate方法可以执行插入、修改和删除等操作的SQL语句， executeUpdate方法的返回值是一个int类型数值，表示更新数据表的行数。使用 executeQuery方法可以执行数据库查询操作的SQL语句，他的返回值是实现ResultSet接口的对象，在其中保存从数据库中查询出来的数据。&lt;br/&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int row=stmt.executeUpdate(sql);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;写到这，对于sql命令的展开没有进行详细的说明，在上面的例子中的代码中有很多注释，都有了详细的说明，对于如何写一个jdbc 程序也有了步骤说明，而且都是一个接着一个的，包括声明的对象类型，还有一个注意的地方就是在最后关闭程序的时候，也是有顺序的，对于有依赖关系的语句都是依次关闭的，在程序的代码中也是有说明的。&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 06:53:00 +0000</pubDate>
<dc:creator>yjl博客</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yjlblog/p/7783381.html</dc:identifier>
</item>
<item>
<title>Linux学习（十五）LVM - 阮文武</title>
<link>http://www.cnblogs.com/doubilaile/p/7783123.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/doubilaile/p/7783123.html</guid>
<description>&lt;h2&gt;一、前言&lt;/h2&gt;
&lt;p&gt;LVM，逻辑卷管理工具，它的作用是提供一种灵活的磁盘管理办法。通常我们的某个分区用完了，想要扩容，很麻烦。但是用lvm就可以很方便的扩容，收缩。&lt;/p&gt;
&lt;p&gt;看它的原理图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/771120/201711/771120-20171104103845982-1947449242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;它的原理大致是：首先将磁盘做成物理卷，然后物理卷再组成卷组，卷组下面再划分逻辑卷。&lt;/p&gt;
&lt;h2&gt;二、实现一个lvm&lt;/h2&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;h3&gt;2.1 做物理卷。&lt;/h3&gt;
&lt;p&gt;首先看看我们的磁盘/dev/sdb的分区情况：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# fdisk -l /dev/&lt;span&gt;sdb

磁盘 &lt;/span&gt;/dev/sdb：&lt;span&gt;4294&lt;/span&gt; MB, &lt;span&gt;4294967296&lt;/span&gt; 字节，&lt;span&gt;8388608&lt;/span&gt;&lt;span&gt; 个扇区
Units &lt;/span&gt;= 扇区 of &lt;span&gt;1&lt;/span&gt; * &lt;span&gt;512&lt;/span&gt; = &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
扇区大小(逻辑&lt;/span&gt;/物理)：&lt;span&gt;512&lt;/span&gt; 字节 / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; 字节
I&lt;/span&gt;/O 大小(最小/最佳)：&lt;span&gt;512&lt;/span&gt; 字节 / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; 字节
磁盘标签类型：dos
磁盘标识符：&lt;/span&gt;&lt;span&gt;0x2f45f776&lt;/span&gt;&lt;span&gt;

   设备 Boot      Start         End      Blocks   Id  System
&lt;/span&gt;/dev/sdb1            &lt;span&gt;2048&lt;/span&gt;     &lt;span&gt;2099199&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;&lt;span&gt;  Linux
&lt;/span&gt;/dev/sdb2         &lt;span&gt;6293504&lt;/span&gt;     &lt;span&gt;7931903&lt;/span&gt;      &lt;span&gt;819200&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;&lt;span&gt;  Linux
&lt;/span&gt;/dev/sdb3         &lt;span&gt;2099200&lt;/span&gt;     &lt;span&gt;6293503&lt;/span&gt;     &lt;span&gt;2097152&lt;/span&gt;    &lt;span&gt;5&lt;/span&gt;&lt;span&gt;  Extended
&lt;/span&gt;/dev/sdb5         &lt;span&gt;2101248&lt;/span&gt;     &lt;span&gt;4198399&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;&lt;span&gt;  Linux
&lt;/span&gt;/dev/sdb6         &lt;span&gt;4200448&lt;/span&gt;     &lt;span&gt;5838847&lt;/span&gt;      &lt;span&gt;819200&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;  Linux
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来，我们把sdb1，sdb2，sdb5的分区id修改为8e：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# fdisk /dev/&lt;span&gt;sdb
欢迎使用 fdisk (util&lt;/span&gt;-linux &lt;span&gt;2.23&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)。

更改将停留在内存中，直到您决定将更改写入磁盘。
使用写入命令前请三思。


命令(输入 m 获取帮助)：t
分区号 (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;,&lt;span&gt;6&lt;/span&gt;，默认 &lt;span&gt;6&lt;/span&gt;)：&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Hex 代码(输入 L 列出所有代码)：8e
已将分区“Linux”的类型更改为“Linux LVM”

命令(输入 m 获取帮助)：t
分区号 (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;,&lt;span&gt;6&lt;/span&gt;，默认 &lt;span&gt;6&lt;/span&gt;)：&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
Hex 代码(输入 L 列出所有代码)：8e
已将分区“Linux”的类型更改为“Linux LVM”

命令(输入 m 获取帮助)：t
分区号 (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;,&lt;span&gt;6&lt;/span&gt;，默认 &lt;span&gt;6&lt;/span&gt;)：&lt;span&gt;5&lt;/span&gt;&lt;span&gt;
Hex 代码(输入 L 列出所有代码)：8e
已将分区“Linux”的类型更改为“Linux LVM”

命令(输入 m 获取帮助)：p

磁盘 &lt;/span&gt;/dev/sdb：&lt;span&gt;4294&lt;/span&gt; MB, &lt;span&gt;4294967296&lt;/span&gt; 字节，&lt;span&gt;8388608&lt;/span&gt;&lt;span&gt; 个扇区
Units &lt;/span&gt;= 扇区 of &lt;span&gt;1&lt;/span&gt; * &lt;span&gt;512&lt;/span&gt; = &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
扇区大小(逻辑&lt;/span&gt;/物理)：&lt;span&gt;512&lt;/span&gt; 字节 / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; 字节
I&lt;/span&gt;/O 大小(最小/最佳)：&lt;span&gt;512&lt;/span&gt; 字节 / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; 字节
磁盘标签类型：dos
磁盘标识符：&lt;/span&gt;&lt;span&gt;0x2f45f776&lt;/span&gt;&lt;span&gt;

   设备 Boot      Start         End      Blocks   Id  System
&lt;/span&gt;/dev/sdb1            &lt;span&gt;2048&lt;/span&gt;     &lt;span&gt;2099199&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;&lt;span&gt;   8e  Linux LVM
&lt;/span&gt;/dev/sdb2         &lt;span&gt;6293504&lt;/span&gt;     &lt;span&gt;7931903&lt;/span&gt;      &lt;span&gt;819200&lt;/span&gt;&lt;span&gt;   8e  Linux LVM
&lt;/span&gt;/dev/sdb3         &lt;span&gt;2099200&lt;/span&gt;     &lt;span&gt;6293503&lt;/span&gt;     &lt;span&gt;2097152&lt;/span&gt;    &lt;span&gt;5&lt;/span&gt;&lt;span&gt;  Extended
&lt;/span&gt;/dev/sdb5         &lt;span&gt;2101248&lt;/span&gt;     &lt;span&gt;4198399&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;&lt;span&gt;   8e  Linux LVM
&lt;/span&gt;/dev/sdb6         &lt;span&gt;4200448&lt;/span&gt;     &lt;span&gt;5838847&lt;/span&gt;      &lt;span&gt;819200&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;&lt;span&gt;  Linux

Partition table entries are not &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; disk order
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果是新创建的分区，找不到的话，使用partprobe命令刷新一下。&lt;/p&gt;
&lt;p&gt;运行pvcreate命令，创建物理卷(physical volum)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# pvs
&lt;/span&gt;-&lt;span&gt;bash: pvs: 未找到命令
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# pvdisplay
&lt;/span&gt;-bash: pvdisplay: 未找到命令
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发现这些命令都没有的话，那么就需要安装lvm2：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# yum install lvm2
已加载插件：fastestmirror
&lt;/span&gt;&lt;span&gt;base&lt;/span&gt;                                                                                    | &lt;span&gt;3.6&lt;/span&gt; kB  &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt;     
extras                                                                                  &lt;/span&gt;| &lt;span&gt;3.4&lt;/span&gt; kB  &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt;     
updates                                                                                 &lt;/span&gt;| &lt;span&gt;3.4&lt;/span&gt; kB  &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt;     
(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt;): extras/&lt;span&gt;7&lt;/span&gt;/x86_64/primary_db                                                       | &lt;span&gt;129&lt;/span&gt; kB  &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt;     
(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;/&lt;span&gt;2&lt;/span&gt;): updates/&lt;span&gt;7&lt;/span&gt;/x86_64/primary_db  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装好之后，就可以使用pvcreate命令了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# pvcreate /dev/&lt;span&gt;sdb1
WARNING: ext2 signature detected on &lt;/span&gt;/dev/sdb1 at offset &lt;span&gt;1080&lt;/span&gt;. Wipe it? [y/&lt;span&gt;n]: y
  Wiping ext2 signature on &lt;/span&gt;/dev/&lt;span&gt;sdb1.
  Physical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully created.
[root@ruanwenwu02 &lt;/span&gt;~]# pvcreate /dev/&lt;span&gt;sdb2
  Physical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully created.
[root@ruanwenwu02 &lt;/span&gt;~]# pvcreate /dev/&lt;span&gt;sdb5
  Physical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; successfully created.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行pvs或者pvdisplay命令能查看当前的物理卷：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# pvs
  PV         VG Fmt  Attr PSize   PFree  
  &lt;/span&gt;/dev/sdb1     lvm2 ---    &lt;span&gt;1&lt;/span&gt;.00g   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.00g
  &lt;/span&gt;/dev/sdb2     lvm2 ---  &lt;span&gt;800.00m&lt;/span&gt; &lt;span&gt;800.00m&lt;/span&gt;
  /dev/sdb5     lvm2 ---    &lt;span&gt;1&lt;/span&gt;.00g   &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.00g
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# pvdisplay
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; a &lt;span&gt;new&lt;/span&gt; physical volume of &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;800.00 MiB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
  --- NEW Physical volume ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb2
  VG Name               
  PV Size               &lt;/span&gt;&lt;span&gt;800.00&lt;/span&gt;&lt;span&gt; MiB
  Allocatable           NO
  PE Size               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Total PE              &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Free PE               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Allocated PE          &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  PV UUID               FS2sy9&lt;/span&gt;-BTxn-XzCz-6ZBH-fL04-r1mB-&lt;span&gt;p2EH91
   
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; a &lt;span&gt;new&lt;/span&gt; physical volume of &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.00 GiB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
  --- NEW Physical volume ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb5
  VG Name               
  PV Size               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt; GiB
  Allocatable           NO
  PE Size               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Total PE              &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Free PE               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Allocated PE          &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  PV UUID               6iKVQF&lt;/span&gt;-W01Z-1aMF-m1af-jmhX-Ff7c-&lt;span&gt;r5QHcD
   
  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; a &lt;span&gt;new&lt;/span&gt; physical volume of &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.00 GiB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
  --- NEW Physical volume ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb1
  VG Name               
  PV Size               &lt;/span&gt;&lt;span&gt;1.00&lt;/span&gt;&lt;span&gt; GiB
  Allocatable           NO
  PE Size               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Total PE              &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Free PE               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Allocated PE          &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  PV UUID               lttH1f&lt;/span&gt;-3tce-mEpF-2ULq-nqmL-15SI-2ImIxc
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.2 创建卷组&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# vgcreate vg1 /dev/&lt;span&gt;sdb
sdb   sdb1  sdb2  sdb3  sdb5  sdb6  
[root@ruanwenwu02 &lt;/span&gt;~]# vgcreate vg1 /dev/sdb1 /dev/&lt;span&gt;sdb2
  Volume group &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vg1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully created
[root@ruanwenwu02 &lt;/span&gt;~]# vgcreate vg2 /dev/&lt;span&gt;sdb5
  Volume group &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vg2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully created
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# vgs
  VG  #PV #LV #SN Attr   VSize    VFree   
  vg1   &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n-    &lt;span&gt;1&lt;/span&gt;.77g    &lt;span&gt;1&lt;/span&gt;&lt;span&gt;.77g
  vg2   &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n- &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# vgdisplay
  &lt;/span&gt;--- Volume group ---&lt;span&gt;
  VG Name               vg2
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;255&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;0&lt;/span&gt; / &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  VG UUID               aDXygA&lt;/span&gt;-rltJ-JWCQ-Nbvb-JML9-W3Hf-&lt;span&gt;cVjG63
   
  &lt;/span&gt;--- Volume group ---&lt;span&gt;
  VG Name               vg1
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1.77&lt;/span&gt;&lt;span&gt; GiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;454&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;0&lt;/span&gt; / &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;454&lt;/span&gt; / &lt;span&gt;1.77&lt;/span&gt;&lt;span&gt; GiB
  VG UUID               qxqwsD&lt;/span&gt;-oNGT-8ltJ-1Itj-IZfO-0rui-Yxvhh7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用vgs或者vgdisplay可以看到卷组。&lt;/p&gt;
&lt;h3&gt;2.3 创建逻辑卷&lt;/h3&gt;
&lt;p&gt;现在我们创建了两个卷组，一个是vg1的1.7G，一个是vg2的1G。接下来我们创建逻辑卷：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# lvcreate -L 200M -&lt;span&gt;n lv1 vg1
  Logical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;lv1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; created.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建的逻辑需要被格式化之后才可以使用：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# mke2fs -t ext4 /dev/vg1/&lt;span&gt;lv1 
mke2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
文件系统标签&lt;/span&gt;=&lt;span&gt;
OS type: Linux
块大小&lt;/span&gt;=&lt;span&gt;1024&lt;/span&gt; (log=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
分块大小&lt;/span&gt;=&lt;span&gt;1024&lt;/span&gt; (log=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
Stride&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt; blocks, Stripe width=&lt;span&gt;0&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;51200&lt;/span&gt; inodes, &lt;span&gt;204800&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;10240&lt;/span&gt; blocks (&lt;span&gt;5.00&lt;/span&gt;%) reserved &lt;span&gt;for&lt;/span&gt;&lt;span&gt; the super user
第一个数据块&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Maximum filesystem blocks&lt;/span&gt;=&lt;span&gt;33816576&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;&lt;span&gt; block groups
&lt;/span&gt;&lt;span&gt;8192&lt;/span&gt; blocks per group, &lt;span&gt;8192&lt;/span&gt;&lt;span&gt; fragments per group
&lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;&lt;span&gt; inodes per group
Superblock backups stored on blocks: 
        &lt;/span&gt;&lt;span&gt;8193&lt;/span&gt;, &lt;span&gt;24577&lt;/span&gt;, &lt;span&gt;40961&lt;/span&gt;, &lt;span&gt;57345&lt;/span&gt;, &lt;span&gt;73729&lt;/span&gt;&lt;span&gt;

Allocating group tables: 完成                            
正在写入inode表: 完成                            
Creating journal (&lt;/span&gt;&lt;span&gt;4096&lt;/span&gt;&lt;span&gt; blocks): 完成
Writing superblocks and filesystem accounting information: 完成 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们采用的ext4的文件系统格式化的，使用xfs的文件系统格式化也是可以的。&lt;/p&gt;
&lt;p&gt;我们把格式化完成之后/dev/vg1/lv1挂载到/mnt目录下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# mkdir /mnt/&lt;span&gt;vg1
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/lv1 /mnt/vg1/&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1  190M  &lt;span&gt;1.6M&lt;/span&gt;  175M    &lt;span&gt;1&lt;/span&gt;% /mnt/&lt;span&gt;vg1
[root@ruanwenwu02 &lt;/span&gt;~]# cat /etc/passwd &amp;gt;&amp;gt; /mnt/vg1/&lt;span&gt;passwd
[root@ruanwenwu02 &lt;/span&gt;~]# cat !&lt;span&gt;$
cat &lt;/span&gt;/mnt/vg1/&lt;span&gt;passwd
root:x:&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;:root:/root:/bin/&lt;span&gt;bash
bin:x:&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;:&lt;span&gt;1&lt;/span&gt;:bin:/bin:/sbin/&lt;span&gt;nologin
daemon:x:&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;:&lt;span&gt;2&lt;/span&gt;:daemon:/sbin:/sbin/&lt;span&gt;nologin
adm:x:&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;:&lt;span&gt;4&lt;/span&gt;:adm:/&lt;span&gt;var&lt;/span&gt;/adm:/sbin/&lt;span&gt;nologin
lp:x:&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;:&lt;span&gt;7&lt;/span&gt;:lp:/&lt;span&gt;var&lt;/span&gt;/spool/lpd:/sbin/&lt;span&gt;nologin
sync:x:&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;:sync:/sbin:/bin/&lt;span&gt;sync
shutdown:x:&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;:shutdown:/sbin:/sbin/&lt;span&gt;shutdown
halt:x:&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;:halt:/sbin:/sbin/&lt;span&gt;halt
mail:x:&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;12&lt;/span&gt;:mail:/&lt;span&gt;var&lt;/span&gt;/spool/mail:/sbin/&lt;span&gt;nologin
&lt;/span&gt;&lt;span&gt;operator&lt;/span&gt;:x:&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;:&lt;span&gt;operator&lt;/span&gt;:/root:/sbin/&lt;span&gt;nologin
games:x:&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;:&lt;span&gt;100&lt;/span&gt;:games:/usr/games:/sbin/&lt;span&gt;nologin
ftp:x:&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;:&lt;span&gt;50&lt;/span&gt;:FTP User:/&lt;span&gt;var&lt;/span&gt;/ftp:/sbin/&lt;span&gt;nologin
nobody:x:&lt;/span&gt;&lt;span&gt;99&lt;/span&gt;:&lt;span&gt;99&lt;/span&gt;:Nobody:/:/sbin/&lt;span&gt;nologin
systemd&lt;/span&gt;-bus-proxy:x:&lt;span&gt;999&lt;/span&gt;:&lt;span&gt;997&lt;/span&gt;:systemd Bus Proxy:/:/sbin/&lt;span&gt;nologin
systemd&lt;/span&gt;-network:x:&lt;span&gt;192&lt;/span&gt;:&lt;span&gt;192&lt;/span&gt;:systemd Network Management:/:/sbin/&lt;span&gt;nologin
dbus:x:&lt;/span&gt;&lt;span&gt;81&lt;/span&gt;:&lt;span&gt;81&lt;/span&gt;:System message bus:/:/sbin/&lt;span&gt;nologin
polkitd:x:&lt;/span&gt;&lt;span&gt;998&lt;/span&gt;:&lt;span&gt;996&lt;/span&gt;:User &lt;span&gt;for&lt;/span&gt; polkitd:/:/sbin/&lt;span&gt;nologin
tss:x:&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;:&lt;span&gt;59&lt;/span&gt;:Account used by the trousers package to sandbox the tcsd daemon:/dev/&lt;span&gt;null&lt;/span&gt;:/sbin/&lt;span&gt;nologin
postfix:x:&lt;/span&gt;&lt;span&gt;89&lt;/span&gt;:&lt;span&gt;89&lt;/span&gt;::/&lt;span&gt;var&lt;/span&gt;/spool/postfix:/sbin/&lt;span&gt;nologin
sshd:x:&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;:&lt;span&gt;74&lt;/span&gt;:Privilege-separated SSH:/&lt;span&gt;var&lt;/span&gt;/empty/sshd:/sbin/&lt;span&gt;nologin
ruanwenwu:x:&lt;/span&gt;&lt;span&gt;1000&lt;/span&gt;:&lt;span&gt;1000&lt;/span&gt;::/home/ruanwenwu:/bin/bash
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里，我们的逻辑卷创建也结束了。&lt;/p&gt;
&lt;p&gt;如果，我们要删除一个物理卷怎么操作呢？&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# pvremove /dev/&lt;span&gt;sdb2
  PV &lt;/span&gt;/dev/sdb2 &lt;span&gt;is&lt;/span&gt;&lt;span&gt; used by VG vg1 so please use vgreduce first.
  (If you are certain you need pvremove, then confirm by &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; --&lt;span&gt;force twice.)
  &lt;/span&gt;/dev/&lt;span&gt;sdb2: physical volume label not removed.
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# man vdreduce
没有 vdreduce 的手册页条目
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# man vgreduce
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# man vgreduce
[root@ruanwenwu02 &lt;/span&gt;~]# vgreduce vg1 /dev/&lt;span&gt;sdb2
  Removed &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; volume group &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vg1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# vgs
  VG  #PV #LV #SN Attr   VSize    VFree   
  vg1   &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n- &lt;span&gt;1020.00m&lt;/span&gt;  &lt;span&gt;820.00m&lt;/span&gt;&lt;span&gt;
  vg2   &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n- &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# pvs
  PV         VG  Fmt  Attr PSize    PFree   
  &lt;/span&gt;/dev/sdb1  vg1 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt;  &lt;span&gt;820.00m&lt;/span&gt;
  /dev/sdb2      lvm2 ---   &lt;span&gt;800.00m&lt;/span&gt;  &lt;span&gt;800.00m&lt;/span&gt;
  /dev/sdb5  vg2 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# pvremove /dev/&lt;span&gt;sdb2
  Labels on physical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully wiped.
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# pvs
  PV         VG  Fmt  Attr PSize    PFree   
  &lt;/span&gt;/dev/sdb1  vg1 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt;  &lt;span&gt;820.00m&lt;/span&gt;
  /dev/sdb5  vg2 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码里碰到一个问题。如果一个物理卷已经被加入一个卷组里，需要使用vgreduce命令把这个物理卷从卷组里删除，然后再运行pvremove命令。&lt;/p&gt;
&lt;p&gt;除了删除物理卷之外，逻辑卷也是可以删除的，使用命令lvremove /dev/vg1/lv1。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-ao---- &lt;span&gt;200.00m&lt;/span&gt;&lt;span&gt;                                                    
[root@ruanwenwu02 &lt;/span&gt;~]# lvremove /dev/vg1/&lt;span&gt;lv1
  Logical volume vg1&lt;/span&gt;/lv1 contains a filesystem &lt;span&gt;in&lt;/span&gt;&lt;span&gt; use.
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# pwd
&lt;/span&gt;/&lt;span&gt;root
[root@ruanwenwu02 &lt;/span&gt;~]# rm -rf /dev/vg1/lv1&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 ~]# !lv
lvremove /dev/vg1/lv1
  Logical volume vg1/lv1 contains a filesystem in use.
[root@ruanwenwu02 ~]# umount /dev/vg1/lv1
[root@ruanwenwu02 ~]# !lv
lvremove /dev/vg1/lv1
Do you really want to remove active logical volume vg1/lv1? [y/n]: y
  Logical volume &quot;lv1&quot; successfully removed
[root@ruanwenwu02 ~]# lvs
[root@ruanwenwu02 ~]# pvs
  PV         VG  Fmt  Attr PSize    PFree   
  /dev/sdb1  vg1 lvm2 a--  1020.00m 1020.00m
  /dev/sdb5  vg2 lvm2 a--  1020.00m 1020.00m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在我们再次将逻辑卷加回来：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# history|&lt;span&gt;grep lvcreate
  &lt;/span&gt;&lt;span&gt;235&lt;/span&gt;  lvcreate -L 200M -&lt;span&gt;n lv1 vg1
  &lt;/span&gt;&lt;span&gt;273&lt;/span&gt;  history|&lt;span&gt;lvcreate
  &lt;/span&gt;&lt;span&gt;274&lt;/span&gt;  history|&lt;span&gt;grep lvcreate
[root@ruanwenwu02 &lt;/span&gt;~]# lvcreate -L 200M -&lt;span&gt;n lv1 vg1
WARNING: ext4 signature detected on &lt;/span&gt;/dev/vg1/lv1 at offset &lt;span&gt;1080&lt;/span&gt;. Wipe it? [y/&lt;span&gt;n]: y
  Wiping ext4 signature on &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1.
  Logical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;lv1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; created.
[root@ruanwenwu02 &lt;/span&gt;~]# mke2fs -t ext4 /dev/vg1/&lt;span&gt;lv1
mke2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
文件系统标签&lt;/span&gt;=&lt;span&gt;
OS type: Linux
块大小&lt;/span&gt;=&lt;span&gt;1024&lt;/span&gt; (log=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
分块大小&lt;/span&gt;=&lt;span&gt;1024&lt;/span&gt; (log=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
Stride&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt; blocks, Stripe width=&lt;span&gt;0&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;51200&lt;/span&gt; inodes, &lt;span&gt;204800&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;10240&lt;/span&gt; blocks (&lt;span&gt;5.00&lt;/span&gt;%) reserved &lt;span&gt;for&lt;/span&gt;&lt;span&gt; the super user
第一个数据块&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Maximum filesystem blocks&lt;/span&gt;=&lt;span&gt;33816576&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;&lt;span&gt; block groups
&lt;/span&gt;&lt;span&gt;8192&lt;/span&gt; blocks per group, &lt;span&gt;8192&lt;/span&gt;&lt;span&gt; fragments per group
&lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;&lt;span&gt; inodes per group
Superblock backups stored on blocks: 
        &lt;/span&gt;&lt;span&gt;8193&lt;/span&gt;, &lt;span&gt;24577&lt;/span&gt;, &lt;span&gt;40961&lt;/span&gt;, &lt;span&gt;57345&lt;/span&gt;, &lt;span&gt;73729&lt;/span&gt;&lt;span&gt;

Allocating group tables: 完成                            
正在写入inode表: 完成                            
Creating journal (&lt;/span&gt;&lt;span&gt;4096&lt;/span&gt;&lt;span&gt; blocks): 完成
Writing superblocks and filesystem accounting information: 完成 

[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-a----- &lt;span&gt;200.00m&lt;/span&gt;&lt;span&gt;                                                    
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/lv1 /mnt/vg1/&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1  190M  &lt;span&gt;1.6M&lt;/span&gt;  175M    &lt;span&gt;1&lt;/span&gt;% /mnt/vg1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里，我们的LVM基本上做完了。我们来梳理一下我们现有有了那些东西：&lt;/p&gt;
&lt;p&gt;物理卷：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# pvs
  PV         VG  Fmt  Attr PSize    PFree   
  &lt;/span&gt;/dev/sdb1  vg1 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt;  &lt;span&gt;820.00m&lt;/span&gt;
  /dev/sdb5  vg2 lvm2 a--  &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;卷组：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# vgs
  VG  #PV #LV #SN Attr   VSize    VFree   
  vg1   &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;1&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n- &lt;span&gt;1020.00m&lt;/span&gt;  &lt;span&gt;820.00m&lt;/span&gt;&lt;span&gt;
  vg2   &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt; wz--n- &lt;span&gt;1020.00m&lt;/span&gt; &lt;span&gt;1020.00m&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;物理卷：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-ao---- &lt;span&gt;200.00m&lt;/span&gt;            
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;三、接下来讲如何扩容。&lt;/p&gt;
&lt;p&gt;（先以ext4文件系统举例）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-ao---- &lt;span&gt;200.00m&lt;/span&gt;&lt;span&gt;                                                    
[root@ruanwenwu02 &lt;/span&gt;~]# lvresize -L 300M /dev/vg1/&lt;span&gt;lv1 
  Size of logical volume vg1&lt;/span&gt;/lv1 changed &lt;span&gt;from&lt;/span&gt; &lt;span&gt;200.00&lt;/span&gt; MiB (&lt;span&gt;50&lt;/span&gt; extents) to &lt;span&gt;300.00&lt;/span&gt; MiB (&lt;span&gt;75&lt;/span&gt;&lt;span&gt; extents).
  Logical volume vg1&lt;/span&gt;/&lt;span&gt;lv1 successfully resized.
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1  190M  &lt;span&gt;1.6M&lt;/span&gt;  175M    &lt;span&gt;1&lt;/span&gt;% /mnt/&lt;span&gt;vg1
[root@ruanwenwu02 &lt;/span&gt;~]# e2fsck -f /dev/vg1/&lt;span&gt;lv1
e2fsck &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;/dev/vg1/lv1 &lt;span&gt;is&lt;/span&gt;&lt;span&gt; mounted.
e2fsck: 无法继续, 中止.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这说明ext4文件系统扩容的话需要先umount：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# lvresize -L 300M /dev/vg1/&lt;span&gt;lv1 
  Size of logical volume vg1&lt;/span&gt;/lv1 changed &lt;span&gt;from&lt;/span&gt; &lt;span&gt;200.00&lt;/span&gt; MiB (&lt;span&gt;50&lt;/span&gt; extents) to &lt;span&gt;300.00&lt;/span&gt; MiB (&lt;span&gt;75&lt;/span&gt;&lt;span&gt; extents).
  Logical volume vg1&lt;/span&gt;/&lt;span&gt;lv1 successfully resized.
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1  190M  &lt;span&gt;1.6M&lt;/span&gt;  175M    &lt;span&gt;1&lt;/span&gt;% /mnt/&lt;span&gt;vg1
[root@ruanwenwu02 &lt;/span&gt;~]# e2fsck -f /dev/vg1/&lt;span&gt;lv1
e2fsck &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;/dev/vg1/lv1 &lt;span&gt;is&lt;/span&gt;&lt;span&gt; mounted.
e2fsck: 无法继续, 中止.

[root@ruanwenwu02 &lt;/span&gt;~]# umount /dev/vg1/&lt;span&gt;lv1
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统        容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3        18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs        479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs           489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs           489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs           489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1       197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs            98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# lvresize -L 300M /dev/vg1/&lt;span&gt;lv1
  New size (&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; extents) matches existing size (&lt;span&gt;75&lt;/span&gt;&lt;span&gt; extents).
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统        容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3        18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs        479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs           489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs           489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs           489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1       197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs            98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/&lt;span&gt;lv1
mount: 在 &lt;/span&gt;/etc/fstab 中找不到 /dev/vg1/&lt;span&gt;lv1
[root@ruanwenwu02 &lt;/span&gt;~]# e2fsck /dev/vg1/&lt;span&gt;lv1
e2fsck &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;/dev/vg1/lv1: clean, &lt;span&gt;11&lt;/span&gt;/&lt;span&gt;51200&lt;/span&gt; files, &lt;span&gt;12115&lt;/span&gt;/&lt;span&gt;204800&lt;/span&gt;&lt;span&gt; blocks
[root@ruanwenwu02 &lt;/span&gt;~]# resize2fs /dev/vg1/&lt;span&gt;lv1
resize2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
请先运行 &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;e2fsck -f /dev/vg1/lv1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.

[root@ruanwenwu02 &lt;/span&gt;~]# resize2fs -f /dev/vg1/&lt;span&gt;lv1
resize2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
Resizing the filesystem on &lt;/span&gt;/dev/vg1/lv1 to &lt;span&gt;307200&lt;/span&gt;&lt;span&gt; (1k) blocks.
The filesystem on &lt;/span&gt;/dev/vg1/lv1 &lt;span&gt;is&lt;/span&gt; now &lt;span&gt;307200&lt;/span&gt; blocks &lt;span&gt;long&lt;/span&gt;&lt;span&gt;.

[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-a----- &lt;span&gt;300.00m&lt;/span&gt;&lt;span&gt;                                                    
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/&lt;span&gt;lv1
mount: 在 &lt;/span&gt;/etc/fstab 中找不到 /dev/vg1/&lt;span&gt;lv1
[root@ruanwenwu02 &lt;/span&gt;~]# e2fsck -f /dev/vg1/&lt;span&gt;lv1
e2fsck &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
第一步: 检查inode,块,和大小
第二步: 检查目录结构
第3步: 检查目录连接性
Pass &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;: Checking reference counts
第5步: 检查簇概要信息
&lt;/span&gt;/dev/vg1/lv1: &lt;span&gt;11&lt;/span&gt;/&lt;span&gt;77824&lt;/span&gt; files (&lt;span&gt;0.0&lt;/span&gt;% non-contiguous), &lt;span&gt;15987&lt;/span&gt;/&lt;span&gt;307200&lt;/span&gt;&lt;span&gt; blocks
[root@ruanwenwu02 &lt;/span&gt;~]# lvresize /dev/vg1/&lt;span&gt;lv1
  No command with matching syntax recognised.  Run &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;lvresize --help&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;for&lt;/span&gt;&lt;span&gt; more information.
[root@ruanwenwu02 &lt;/span&gt;~]# resize2fs /dev/vg1/&lt;span&gt;lv1
resize2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
The filesystem &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; already &lt;span&gt;307200&lt;/span&gt; blocks &lt;span&gt;long&lt;/span&gt;.  Nothing to &lt;span&gt;do&lt;/span&gt;!&lt;span&gt;

[root@ruanwenwu02 &lt;/span&gt;~]# ls -ld /dev/vg1/&lt;span&gt;lv1
lrwxrwxrwx. &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; root root &lt;span&gt;7&lt;/span&gt; 11月  &lt;span&gt;4&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;42&lt;/span&gt; /dev/vg1/lv1 -&amp;gt; ../dm-&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/lv1 /mnt/vg1/&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1  287M  &lt;span&gt;2.1M&lt;/span&gt;  266M    &lt;span&gt;1&lt;/span&gt;% /mnt/vg1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总结一下步骤：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 lvresize -L 300M  /dev/vg1/&lt;span&gt;lv1  重新设置卷大小

 e2fsck &lt;/span&gt;-f /dev/vg1/&lt;span&gt;lv1 检查磁盘错误  (ext4执行)

 resize2fs &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1 更新逻辑卷信息(ext4执行)

 xfs_growfs &lt;/span&gt;/dev/vg1/lv1  xfs文件系统需要执行
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里扩容就成功了。&lt;/p&gt;
&lt;p&gt;四、缩容&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;缩减逻辑卷（xfs不支持）
 先umount

 e2fsck &lt;/span&gt;-f /dev/vg1/&lt;span&gt;lv1 检查磁盘错误（ext）

 resize2fs &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1 100M 更新逻辑卷信息（ext）

 lvresize &lt;/span&gt;-L 100M  /dev/vg1/lv1  重新设置卷大小
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实验：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# umount /dev/vg1/&lt;span&gt;lv1
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# lvs
  LV   VG  Attr       LSize   Pool Origin Data&lt;/span&gt;%  Meta%  Move Log Cpy%&lt;span&gt;Sync Convert
  lv1  vg1 &lt;/span&gt;-wi-a----- &lt;span&gt;100.00m&lt;/span&gt;&lt;span&gt;                                                    
[root@ruanwenwu02 &lt;/span&gt;~]# e2fsck -f /dev/vg1/&lt;span&gt;lv1
e2fsck &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
第一步: 检查inode,块,和大小
第二步: 检查目录结构
第3步: 检查目录连接性
Pass &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;: Checking reference counts
第5步: 检查簇概要信息
&lt;/span&gt;/dev/vg1/lv1: &lt;span&gt;11&lt;/span&gt;/&lt;span&gt;25688&lt;/span&gt; files (&lt;span&gt;9.1&lt;/span&gt;% non-contiguous), &lt;span&gt;8896&lt;/span&gt;/&lt;span&gt;102400&lt;/span&gt;&lt;span&gt; blocks
[root@ruanwenwu02 &lt;/span&gt;~]# resize2fs /dev/vg1/&lt;span&gt;lv1 100M
resize2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
The filesystem &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; already &lt;span&gt;102400&lt;/span&gt; blocks &lt;span&gt;long&lt;/span&gt;.  Nothing to &lt;span&gt;do&lt;/span&gt;!&lt;span&gt;

[root@ruanwenwu02 &lt;/span&gt;~]# resize2fs /dev/vg1/&lt;span&gt;lv1 50M
resize2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
Resizing the filesystem on &lt;/span&gt;/dev/vg1/lv1 to &lt;span&gt;51200&lt;/span&gt;&lt;span&gt; (1k) blocks.
The filesystem on &lt;/span&gt;/dev/vg1/lv1 &lt;span&gt;is&lt;/span&gt; now &lt;span&gt;51200&lt;/span&gt; blocks &lt;span&gt;long&lt;/span&gt;&lt;span&gt;.

[root@ruanwenwu02 &lt;/span&gt;~]# lvresize -L 50M /dev/vg1/&lt;span&gt;lv1
  Rounding size to boundary between physical extents: &lt;/span&gt;&lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB.
  WARNING: Reducing active logical volume to &lt;/span&gt;&lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB.
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce vg1&lt;/span&gt;/lv1? [y/&lt;span&gt;n]: y
  Size of logical volume vg1&lt;/span&gt;/lv1 changed &lt;span&gt;from&lt;/span&gt; &lt;span&gt;100.00&lt;/span&gt; MiB (&lt;span&gt;25&lt;/span&gt; extents) to &lt;span&gt;52.00&lt;/span&gt; MiB (&lt;span&gt;13&lt;/span&gt;&lt;span&gt; extents).
  Logical volume vg1&lt;/span&gt;/&lt;span&gt;lv1 successfully resized.
[root@ruanwenwu02 &lt;/span&gt;~]# mount /dev/vg1/lv1 /mnt/vg1/&lt;span&gt;
[root@ruanwenwu02 &lt;/span&gt;~]# df -&lt;span&gt;h
文件系统             容量  已用  可用 已用&lt;/span&gt;%&lt;span&gt; 挂载点
&lt;/span&gt;/dev/sda3             18G  &lt;span&gt;1&lt;/span&gt;.4G   17G    &lt;span&gt;8&lt;/span&gt;% /&lt;span&gt;
devtmpfs             479M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  479M    &lt;span&gt;0&lt;/span&gt;% /&lt;span&gt;dev
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
tmpfs                489M  &lt;/span&gt;&lt;span&gt;6.8M&lt;/span&gt;  482M    &lt;span&gt;2&lt;/span&gt;% /&lt;span&gt;run
tmpfs                489M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  489M    &lt;span&gt;0&lt;/span&gt;% /sys/fs/&lt;span&gt;cgroup
&lt;/span&gt;/dev/sda1            197M  109M   88M   &lt;span&gt;56&lt;/span&gt;% /&lt;span&gt;boot
tmpfs                 98M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;   98M    &lt;span&gt;0&lt;/span&gt;% /run/user/&lt;span&gt;0&lt;/span&gt;
/dev/mapper/vg1-lv1   45M  &lt;span&gt;1.1M&lt;/span&gt;   40M    &lt;span&gt;3&lt;/span&gt;% /mnt/vg1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;五、扩展卷组&lt;/h2&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
fdisk /dev/sdb  新增/dev/&lt;span&gt;sdb5(逻辑分区8e)  2G

 pvcreate &lt;/span&gt;/dev/&lt;span&gt;sdb5

 vgextend vg1 &lt;/span&gt;/dev/&lt;span&gt;sdb5

 lvresize &lt;/span&gt;-L 100M  /dev/vg1/lv1  重新设置卷大小
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先创建一个分区，创建物理分区，将物理分区添加到卷组，然后重新分配卷大小。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# fdisk /dev/&lt;span&gt;sdb
欢迎使用 fdisk (util&lt;/span&gt;-linux &lt;span&gt;2.23&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)。

更改将停留在内存中，直到您决定将更改写入磁盘。
使用写入命令前请三思。


命令(输入 m 获取帮助)：t
分区号 (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;,&lt;span&gt;6&lt;/span&gt;，默认 &lt;span&gt;6&lt;/span&gt;)：&lt;span&gt;6&lt;/span&gt;&lt;span&gt;
Hex 代码(输入 L 列出所有代码)：8e
已将分区“Linux”的类型更改为“Linux LVM”

命令(输入 m 获取帮助)：q

[root@ruanwenwu02 &lt;/span&gt;~]# pvcreate /dev/&lt;span&gt;sdb6
WARNING: ext4 signature detected on &lt;/span&gt;/dev/sdb6 at offset &lt;span&gt;1080&lt;/span&gt;. Wipe it? [y/&lt;span&gt;n]: y
  Wiping ext4 signature on &lt;/span&gt;/dev/&lt;span&gt;sdb6.
  Physical volume &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/dev/sdb6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully created.
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# vgex
vgexport  vgextend  
[root@ruanwenwu02 &lt;/span&gt;~&lt;span&gt;]# vgex
vgexport  vgextend  
[root@ruanwenwu02 &lt;/span&gt;~]# vgextend vg1 /dev/&lt;span&gt;sdb6
  Volume group &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vg1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; successfully extended
[root@ruanwenwu02 &lt;/span&gt;~]# vgdisplay -&lt;span&gt;v
  &lt;/span&gt;--- Volume group ---&lt;span&gt;
  VG Name               vg2
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;255&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;0&lt;/span&gt; / &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  VG UUID               aDXygA&lt;/span&gt;-rltJ-JWCQ-Nbvb-JML9-W3Hf-&lt;span&gt;cVjG63
   
  &lt;/span&gt;--- Physical volumes ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb5     
  PV UUID               6iKVQF&lt;/span&gt;-W01Z-1aMF-m1af-jmhX-Ff7c-&lt;span&gt;r5QHcD
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;255&lt;/span&gt;
   
  --- Volume group ---&lt;span&gt;
  VG Name               vg1
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;9&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1.77&lt;/span&gt;&lt;span&gt; GiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;454&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;13&lt;/span&gt; / &lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;441&lt;/span&gt; / &lt;span&gt;1.72&lt;/span&gt;&lt;span&gt; GiB
  VG UUID               qxqwsD&lt;/span&gt;-oNGT-8ltJ-1Itj-IZfO-0rui-&lt;span&gt;Yxvhh7
   
  &lt;/span&gt;--- Logical volume ---&lt;span&gt;
  LV Path                &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1
  LV Name                lv1
  VG Name                vg1
  LV UUID                x6wfyb&lt;/span&gt;-ZMDC-eGmK-8TRH-cVX5-JZB2-&lt;span&gt;u0ZYID
  LV Write Access        read&lt;/span&gt;/&lt;span&gt;write
  LV Creation host, time ruanwenwu02, &lt;/span&gt;&lt;span&gt;2017&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;52&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; +&lt;span&gt;0800&lt;/span&gt;&lt;span&gt;
  LV Status              available
  # open                 &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  LV Size                &lt;/span&gt;&lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB
  Current LE             &lt;/span&gt;&lt;span&gt;13&lt;/span&gt;&lt;span&gt;
  Segments               &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Allocation             inherit
  Read ahead sectors     auto
  &lt;/span&gt;- currently &lt;span&gt;set&lt;/span&gt; to     &lt;span&gt;8192&lt;/span&gt;&lt;span&gt;
  Block device           &lt;/span&gt;&lt;span&gt;253&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;
   
  --- Physical volumes ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb1     
  PV UUID               lttH1f&lt;/span&gt;-3tce-mEpF-2ULq-nqmL-15SI-&lt;span&gt;2ImIxc
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;242&lt;/span&gt;&lt;span&gt;
   
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb6     
  PV UUID               QsRgrb&lt;/span&gt;-3vmW-Jte1-o5Qv-JvgZ-oNnO-&lt;span&gt;MJkOoG
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;199&lt;/span&gt; / &lt;span&gt;199&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;六、命令整理：&lt;/h2&gt;
&lt;p&gt;6.1 fdisk diskname -&amp;gt; t -&amp;gt;8e&lt;/p&gt;
&lt;p&gt;修改磁盘分区为lvm类型。&lt;/p&gt;
&lt;p&gt;6.2 pvcreate partionname&lt;/p&gt;
&lt;p&gt;创建物理分区&lt;/p&gt;
&lt;p&gt;6.4 pvremove &lt;/p&gt;
&lt;p&gt;删除物理分区&lt;/p&gt;
&lt;p&gt;6.3 vgcreate vg1 /dev/sdb1 /dev/sdb2&lt;/p&gt;
&lt;p&gt;创建卷组&lt;/p&gt;
&lt;p&gt;6.4 vgremove&lt;/p&gt;
&lt;p&gt;移除卷组&lt;/p&gt;
&lt;p&gt;6.5 lvcreate -L 200M -n lv1 vg1&lt;/p&gt;
&lt;p&gt;创建逻辑卷&lt;/p&gt;
&lt;p&gt;6.6 lvresize -L 300M /dev/vg1/lv1&lt;/p&gt;
&lt;p&gt;扩容逻辑卷大小&lt;/p&gt;
&lt;p&gt;6.7 扩容之后的操作 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 e2fsck -f /dev/vg1/&lt;span&gt;lv1 检查磁盘错误  (ext4执行)

 resize2fs &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1 更新逻辑卷信息(ext4执行)

 xfs_growfs &lt;/span&gt;/dev/vg1/lv1  xfs文件系统需要执行
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6.8 缩容操作&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;先umount

 e2fsck &lt;/span&gt;-f /dev/vg1/&lt;span&gt;lv1 检查磁盘错误（ext）

 resize2fs &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1 100M 更新逻辑卷信息（ext）

 lvresize &lt;/span&gt;-L 100M  /dev/vg1/lv1  重新设置卷大小
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6.9 列出卷组的详细信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
[root@ruanwenwu02 ~]# vgdisplay -&lt;span&gt;v
  &lt;/span&gt;--- Volume group ---&lt;span&gt;
  VG Name               vg2
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;255&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;0&lt;/span&gt; / &lt;span&gt;0&lt;/span&gt;&lt;span&gt;   
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;1020.00&lt;/span&gt;&lt;span&gt; MiB
  VG UUID               aDXygA&lt;/span&gt;-rltJ-JWCQ-Nbvb-JML9-W3Hf-&lt;span&gt;cVjG63
   
  &lt;/span&gt;--- Physical volumes ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb5     
  PV UUID               6iKVQF&lt;/span&gt;-W01Z-1aMF-m1af-jmhX-Ff7c-&lt;span&gt;r5QHcD
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;255&lt;/span&gt;
   
  --- Volume group ---&lt;span&gt;
  VG Name               vg1
  System ID             
  Format                lvm2
  Metadata Areas        &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Metadata Sequence No  &lt;/span&gt;&lt;span&gt;9&lt;/span&gt;&lt;span&gt;
  VG Access             read&lt;/span&gt;/&lt;span&gt;write
  VG Status             resizable
  MAX LV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur LV                &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Open LV               &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Max PV                &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
  Cur PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  Act PV                &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  VG Size               &lt;/span&gt;&lt;span&gt;1.77&lt;/span&gt;&lt;span&gt; GiB
  PE Size               &lt;/span&gt;&lt;span&gt;4.00&lt;/span&gt;&lt;span&gt; MiB
  Total PE              &lt;/span&gt;&lt;span&gt;454&lt;/span&gt;&lt;span&gt;
  Alloc PE &lt;/span&gt;/ Size       &lt;span&gt;13&lt;/span&gt; / &lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB
  Free  PE &lt;/span&gt;/ Size       &lt;span&gt;441&lt;/span&gt; / &lt;span&gt;1.72&lt;/span&gt;&lt;span&gt; GiB
  VG UUID               qxqwsD&lt;/span&gt;-oNGT-8ltJ-1Itj-IZfO-0rui-&lt;span&gt;Yxvhh7
   
  &lt;/span&gt;--- Logical volume ---&lt;span&gt;
  LV Path                &lt;/span&gt;/dev/vg1/&lt;span&gt;lv1
  LV Name                lv1
  VG Name                vg1
  LV UUID                x6wfyb&lt;/span&gt;-ZMDC-eGmK-8TRH-cVX5-JZB2-&lt;span&gt;u0ZYID
  LV Write Access        read&lt;/span&gt;/&lt;span&gt;write
  LV Creation host, time ruanwenwu02, &lt;/span&gt;&lt;span&gt;2017&lt;/span&gt;-&lt;span&gt;11&lt;/span&gt;-&lt;span&gt;04&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;52&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt; +&lt;span&gt;0800&lt;/span&gt;&lt;span&gt;
  LV Status              available
  # open                 &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  LV Size                &lt;/span&gt;&lt;span&gt;52.00&lt;/span&gt;&lt;span&gt; MiB
  Current LE             &lt;/span&gt;&lt;span&gt;13&lt;/span&gt;&lt;span&gt;
  Segments               &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
  Allocation             inherit
  Read ahead sectors     auto
  &lt;/span&gt;- currently &lt;span&gt;set&lt;/span&gt; to     &lt;span&gt;8192&lt;/span&gt;&lt;span&gt;
  Block device           &lt;/span&gt;&lt;span&gt;253&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;
   
  --- Physical volumes ---&lt;span&gt;
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb1     
  PV UUID               lttH1f&lt;/span&gt;-3tce-mEpF-2ULq-nqmL-15SI-&lt;span&gt;2ImIxc
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;255&lt;/span&gt; / &lt;span&gt;242&lt;/span&gt;&lt;span&gt;
   
  PV Name               &lt;/span&gt;/dev/&lt;span&gt;sdb6     
  PV UUID               QsRgrb&lt;/span&gt;-3vmW-Jte1-o5Qv-JvgZ-oNnO-&lt;span&gt;MJkOoG
  PV Status             allocatable
  Total PE &lt;/span&gt;/ Free PE    &lt;span&gt;199&lt;/span&gt; / &lt;span&gt;199&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;七、总结&lt;/p&gt;
&lt;p&gt;LVM的命令还是比较多的，有机会多看看多练练吧。&lt;/p&gt;

&lt;p&gt;&lt;img id=&quot;uploading_image_35244&quot; src=&quot;https://common.cnblogs.com/images/loading.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 05:29:00 +0000</pubDate>
<dc:creator>阮文武</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/doubilaile/p/7783123.html</dc:identifier>
</item>
<item>
<title>Java 链表常见考题总结 - AltErNatiVe</title>
<link>http://www.cnblogs.com/alternative/p/7783079.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/alternative/p/7783079.html</guid>
<description>&lt;p&gt;首先定义自定义结点类，存储节点信息：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Node {

    Node next&lt;/span&gt;=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; data;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Node(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; data){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.data=&lt;span&gt;data;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;获取链表长度：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; length() {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; length=0&lt;span&gt;;
        Node temp&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            length&lt;/span&gt;++&lt;span&gt;;
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; length;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;打印链表：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; printMyList(){
        Node temp&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            System.out.print(temp.data);
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(temp!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
                System.out.print(&lt;/span&gt;&quot;--&amp;gt;&quot;&lt;span&gt;);
            }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                System.out.println();
            }
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;向链表中插入数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; addNode(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; d){
        Node node&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Node(d);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(head==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            head&lt;/span&gt;=&lt;span&gt;node;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        Node temp&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
        temp.next&lt;/span&gt;=&lt;span&gt;node;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;向链表中插入结点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addNode(Node node){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(head==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            head&lt;/span&gt;=&lt;span&gt;node;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        Node temp&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
        temp.next&lt;/span&gt;=&lt;span&gt;node;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在链表尾部添加另一个链表：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt;  addList(MyLinkedList list,MyLinkedList afterlist) {
        Node thishead &lt;/span&gt;=&lt;span&gt; list.head;
        Node addhead  &lt;/span&gt;=&lt;span&gt; afterlist.head;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(thishead==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            thishead&lt;/span&gt;=&lt;span&gt;addhead;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        Node temp&lt;/span&gt;=&lt;span&gt;thishead;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
        temp.next&lt;/span&gt;=&lt;span&gt;addhead;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从链表中删除指定位置的数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; deleteNode(&lt;span&gt;int&lt;/span&gt; index){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;index:删除的元素的位置&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(index&amp;lt;1||index&amp;gt;&lt;span&gt;length()){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(index==1&lt;span&gt;){
            head&lt;/span&gt;=&lt;span&gt;head.next;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; i=2&lt;span&gt;;
        Node preNode&lt;/span&gt;=&lt;span&gt;head;
        Node curNode&lt;/span&gt;=&lt;span&gt;preNode.next;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(curNode!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(i==&lt;span&gt;index){
                preNode.next&lt;/span&gt;=&lt;span&gt;curNode.next;
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
            preNode&lt;/span&gt;=&lt;span&gt;curNode;
            curNode&lt;/span&gt;=&lt;span&gt;curNode.next;
            i&lt;/span&gt;++&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对链表进行排序，返回排序后的头结点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Node orderList(){
        Node nextNode&lt;/span&gt;=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; temp=0&lt;span&gt;;
        Node headNode&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(headNode.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            nextNode&lt;/span&gt;=&lt;span&gt;headNode.next;
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(nextNode!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(headNode.data&amp;gt;&lt;span&gt;nextNode.data){
                    temp&lt;/span&gt;=&lt;span&gt;nextNode.data;
                    nextNode.data&lt;/span&gt;=&lt;span&gt;headNode.data;
                    headNode.data&lt;/span&gt;=&lt;span&gt;temp;
                }
                nextNode&lt;/span&gt;=&lt;span&gt;nextNode.next;
            }
            headNode&lt;/span&gt;=&lt;span&gt;headNode.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; head;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从链表中删除重复数据 第一种方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteRepetition1(){
        Hashtable&lt;/span&gt;&amp;lt;Integer, Integer&amp;gt;hashtable=&lt;span&gt;new&lt;/span&gt; Hashtable&amp;lt;&amp;gt;&lt;span&gt;();
        Node temp&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        Node pre&lt;/span&gt;=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(hashtable.containsKey(temp.data))
            {
                pre.next&lt;/span&gt;=&lt;span&gt;temp.next;
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                hashtable.put(temp.data, &lt;/span&gt;1&lt;span&gt;);
                pre&lt;/span&gt;=&lt;span&gt;temp;
            }
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从链表中删除重复数据 第二种方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteRepetition2(){
        Node temp&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(temp!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            Node i&lt;/span&gt;=&lt;span&gt;temp;
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(i.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(temp.data==&lt;span&gt;i.next.data)
                {
                    i.next&lt;/span&gt;=&lt;span&gt;i.next.next;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    i&lt;/span&gt;=&lt;span&gt;i.next;
                }
            }
            temp&lt;/span&gt;=&lt;span&gt;temp.next;
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;找出单链表中的倒数第k个元素：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; Node findLastElem(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; k){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(k&amp;lt;1&lt;span&gt;){
            System.out.println(&lt;/span&gt;&quot;k不合法&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(head==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            System.out.println(&lt;/span&gt;&quot;链表不包含元素&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
        Node p1&lt;/span&gt;=&lt;span&gt;head;
        Node p2&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=0;i&amp;lt;k-1;i++&lt;span&gt;){
            p2&lt;/span&gt;=&lt;span&gt;p2.next;
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(p2.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            p1&lt;/span&gt;=&lt;span&gt;p1.next;
            p2&lt;/span&gt;=&lt;span&gt;p2.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; p1;
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;链表反转：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; reversal(){
        Node pReversalHead&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        Node pNode&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        Node pPrev&lt;/span&gt;=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(pNode!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            Node pNext&lt;/span&gt;=&lt;span&gt;pNode.next;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pNext==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                pReversalHead&lt;/span&gt;=&lt;span&gt;pNode;
            }
            pNode.next&lt;/span&gt;=&lt;span&gt;pPrev;
            pPrev&lt;/span&gt;=&lt;span&gt;pNode;
            pNode&lt;/span&gt;=&lt;span&gt;pNext;
        }
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.head=&lt;span&gt;pReversalHead;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;不反转链表，倒序输出链表元素：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; printReversalList(Node pHead){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pHead.next==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            System.out.print(pHead.data);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pHead.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            printReversalList(pHead.next);
            System.out.print(&lt;/span&gt;&quot;--&amp;gt;&quot;+&lt;span&gt;pHead.data);
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;寻找单链表中间节点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Node searchMidNode(){
        Node pNode&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        Node qNode&lt;/span&gt;=&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(pNode!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;pNode.next!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;pNode.next.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            pNode&lt;/span&gt;=&lt;span&gt;pNode.next.next;
            qNode&lt;/span&gt;=&lt;span&gt;qNode.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; qNode;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;判断一个链表是否有环：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isHaveLoop(){
        Node fast&lt;/span&gt;=&lt;span&gt;head;
        Node slow&lt;/span&gt;=&lt;span&gt;head;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fast==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(fast!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;fast.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            fast&lt;/span&gt;=&lt;span&gt;fast.next.next;
            slow&lt;/span&gt;=&lt;span&gt;slow.next;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fast==&lt;span&gt;slow){
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;寻找环入口：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Node getLoopStart(MyLinkedList list){
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在链表头和相遇点分别设置一个指针，每次各走一步，两个指针必定相遇，且第一个相遇点为环入口&lt;/span&gt;
        Node slow=&lt;span&gt;list.head;
        Node fast&lt;/span&gt;=&lt;span&gt;list.head;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(slow.next!=&lt;span&gt;null&lt;/span&gt;&amp;amp;&amp;amp;fast.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            slow&lt;/span&gt;=&lt;span&gt;slow.next;
            fast&lt;/span&gt;=&lt;span&gt;fast.next.next;
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(slow==&lt;span&gt;fast){
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            }
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(slow!=&lt;span&gt;fast){
            slow&lt;/span&gt;=&lt;span&gt;slow.next;
            fast&lt;/span&gt;=&lt;span&gt;fast.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; slow;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在不知道头指针的情况下删除指定节点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; deleteNode(Node node){
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;此方法不能删除链表最后一个节点，因为无法使其前驱结点的next指向null;&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(node==&lt;span&gt;null&lt;/span&gt;||node.next==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
        node.data&lt;/span&gt;=&lt;span&gt;node.next.data;
        node.next&lt;/span&gt;=&lt;span&gt;node.next.next;
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;判断两个链表是否相交：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isIntersect(MyLinkedList list,MyLinkedList list2){
        Node head1&lt;/span&gt;=&lt;span&gt;list.head;
        Node head2&lt;/span&gt;=&lt;span&gt;list2.head;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(head1==&lt;span&gt;null&lt;/span&gt;||head2==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(head1.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            head1&lt;/span&gt;=&lt;span&gt;head1.next;
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(head2.next!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            head2&lt;/span&gt;=&lt;span&gt;head2.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; head1==&lt;span&gt;head2;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;寻找两个链表相交的第一个节点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Node getFirstMeetNode(MyLinkedList list,MyLinkedList list2){
        Node head1&lt;/span&gt;=&lt;span&gt;list.head;
        Node head2&lt;/span&gt;=&lt;span&gt;list2.head;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isIntersect(list, list2)==&lt;span&gt;false&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
        Node t1&lt;/span&gt;=&lt;span&gt;head1;
        Node t2&lt;/span&gt;=&lt;span&gt;head2;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(list.length()&amp;gt;&lt;span&gt;list2.length()){
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; d=list.length()-&lt;span&gt;list2.length();
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(d!=0&lt;span&gt;){
                t1&lt;/span&gt;=&lt;span&gt;t1.next;
                d&lt;/span&gt;--&lt;span&gt;;
            }
        }
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; d=list2.length()-&lt;span&gt;list.length();
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(d!=0&lt;span&gt;){
                t2&lt;/span&gt;=&lt;span&gt;t2.next;
                d&lt;/span&gt;--&lt;span&gt;;
            }
        }
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(t1!=&lt;span&gt;t2){
            t1&lt;/span&gt;=&lt;span&gt;t1.next;
            t2&lt;/span&gt;=&lt;span&gt;t2.next;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; t1;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sat, 04 Nov 2017 05:07:00 +0000</pubDate>
<dc:creator>AltErNatiVe</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/alternative/p/7783079.html</dc:identifier>
</item>
<item>
<title>Spring读书笔记——bean创建（下） - JackieZheng</title>
<link>http://www.cnblogs.com/bigdataZJ/p/SpringSource4.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bigdataZJ/p/SpringSource4.html</guid>
<description>&lt;p&gt;有关Spring加载bean系列，今天这是最后一篇了，主要接上篇对于从Spring容器中获取Bean的一些细节实现的补充。&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;《Spring读书笔记——bean加载》——Spring如何加载消化一个xml配置文件&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;《Spring读书笔记——bean解析》——Spring如何将xml文件的各种标签转换为BeanDefinition并注册到Spring容器下&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;《Spring读书笔记——bean创建（上）》——概述Spring如何从容器中取出需要的那个Bean&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;从缓存中加载单例&quot;&gt;从缓存中加载单例&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;protected Object getSingleton(String beanName, boolean allowEarlyReference) {
   Object singletonObject = this.singletonObjects.get(beanName);
   if (singletonObject == null &amp;amp;&amp;amp; isSingletonCurrentlyInCreation(beanName)) {
      synchronized (this.singletonObjects) {
         singletonObject = this.earlySingletonObjects.get(beanName);
         if (singletonObject == null &amp;amp;&amp;amp; allowEarlyReference) {
            ObjectFactory singletonFactory = this.singletonFactories.get(beanName);
            if (singletonFactory != null) {
               singletonObject = singletonFactory.getObject();
               this.earlySingletonObjects.put(beanName, singletonObject);
               this.singletonFactories.remove(beanName);
            }
         }
      }
   }
   return (singletonObject != NULL_OBJECT ? singletonObject : null);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在看这段代码之前，我们先了解下Spring对于单例bean出现循环依赖的解决方法。如果出现上面我们介绍的A-&amp;gt;B-&amp;gt;C-&amp;gt;A的情况，那是不是说Spring就无能为力了，显然Spring没有那么弱。那么Spring是怎么做的？&lt;br/&gt;鉴于单例bean的循环依赖问题，Spring创建bean的原则是不等bean创建完成就会将bean的ObjectFactory提前曝光加入到缓存中，一旦有某个bean创建时需要依赖这个bean了，那么就可以直接使用ObjectFactory。&lt;br/&gt;简单说，创建bean的时候，就是打包快递发货，主管为了知道你今天要派发多少个包裹，为了节省大家时间以及以免统计漏掉的情况。你可以先拿出一个包裹箱子，上面写上要寄收件人、收货地址、联系方式等等，但是这时候还没有往里面打包真正的快递。&lt;br/&gt;这里曝光的bean就相当于这个快递箱子。&lt;/p&gt;
&lt;p&gt;好了，知道了这个原则之后，我们就好理解代码了。&lt;br/&gt;首先从singletonObjects中获取实例，取不到则从earlySingletonObjects中获取，仍然取不到，我们还可以到singletonFactories中获取相应的ObjectFactory，在调用这个ObjectFactory的getObject方法来创建bean。&lt;br/&gt;然后将其加入到earlySingletonObjects中，在将其从singletonFactories中删除。&lt;/p&gt;
&lt;p&gt;想必，你已经被这些用来存储和删除的集合搞疯了，没关系，我们来理一下：&lt;/p&gt;
&lt;ul readability=&quot;8&quot;&gt;&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;singletonObjects&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/** Cache of singleton objects: bean name --&amp;gt; bean instance */
private final Map&amp;lt;String, Object&amp;gt; singletonObjects = new ConcurrentHashMap&amp;lt;String, Object&amp;gt;(64);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;用于保存BeanName和创建bean实例之间的关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;singletonFactories:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/** Cache of singleton factories: bean name --&amp;gt; ObjectFactory */
private final Map&amp;lt;String, ObjectFactory&amp;gt; singletonFactories = new HashMap&amp;lt;String, ObjectFactory&amp;gt;(16);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;用于保存BeanName和创建bean的工厂之间的关系&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;earlySingletonObjects:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/** Cache of early singleton objects: bean name --&amp;gt; bean instance */
private final Map&amp;lt;String, Object&amp;gt; earlySingletonObjects = new HashMap&amp;lt;String, Object&amp;gt;(16);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;用于保存BeanName和创建bean的工厂之间的关系，与singletonObjects的区别是当一个bean被放入这个集合后，可以用于其他bean做循环依赖检查&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;bean实例化&quot;&gt;bean实例化&lt;/h3&gt;
&lt;p&gt;我们从缓存中拿到bean之后，就需要根据bean的不同类型做不同的处理，返回相应的bean，实现这个功能的就是getObjectForBeanInstance方法&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;protected Object getObjectForBeanInstance(
            Object beanInstance, String name, String beanName, RootBeanDefinition mbd) {

        // Don't let calling code try to dereference the factory if the bean isn't a factory.
        if (BeanFactoryUtils.isFactoryDereference(name) &amp;amp;&amp;amp; !(beanInstance instanceof FactoryBean)) {
            throw new BeanIsNotAFactoryException(transformedBeanName(name), beanInstance.getClass());
        }

        // Now we have the bean instance, which may be a normal bean or a FactoryBean.
        // If it's a FactoryBean, we use it to create a bean instance, unless the
        // caller actually wants a reference to the factory.
        if (!(beanInstance instanceof FactoryBean) || BeanFactoryUtils.isFactoryDereference(name)) {
            return beanInstance;
        }

        Object object = null;
        if (mbd == null) {
            object = getCachedObjectForFactoryBean(beanName);
        }
        if (object == null) {
            // Return bean instance from factory.
            FactoryBean&amp;lt;?&amp;gt; factory = (FactoryBean&amp;lt;?&amp;gt;) beanInstance;
            // Caches object obtained from FactoryBean if it is a singleton.
            if (mbd == null &amp;amp;&amp;amp; containsBeanDefinition(beanName)) {
                mbd = getMergedLocalBeanDefinition(beanName);
            }
            boolean synthetic = (mbd != null &amp;amp;&amp;amp; mbd.isSynthetic());
            object = getObjectFromFactoryBean(factory, beanName, !synthetic);
        }
        return object;
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;ul readability=&quot;7.5&quot;&gt;&lt;li&gt;首先检测指定的beanName是否是工厂bean相关，如果既不是工厂bean又是以&quot;&amp;amp;&quot;开头，则校验失败，抛出异常&lt;/li&gt;
&lt;li&gt;如果这个bean不是工厂Bean（FactoryBean），那么就直接返回bean实例&lt;/li&gt;
&lt;li readability=&quot;18&quot;&gt;
&lt;p&gt;剩下代码就是处理FactoryBean，我们顺着这样的顺序依次来到getObjectForBeanInstance-&amp;gt;getObjectFromFactoryBean-&amp;gt;doGetObjectFromFactoryBean&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;private Object doGetObjectFromFactoryBean(
        final FactoryBean factory, final String beanName, final boolean shouldPostProcess)
        throws BeanCreationException {

    Object object;
    try {
        if (System.getSecurityManager() != null) {
            AccessControlContext acc = getAccessControlContext();
            try {
                object = AccessController.doPrivileged(new PrivilegedExceptionAction&amp;lt;Object&amp;gt;() {
                    public Object run() throws Exception {
                            return factory.getObject();
                        }
                    }, acc);
            }
            catch (PrivilegedActionException pae) {
                throw pae.getException();
            }
        }
        else {
            object = factory.getObject();
        }
    }
    catch (FactoryBeanNotInitializedException ex) {
        throw new BeanCurrentlyInCreationException(beanName, ex.toString());
    }
    catch (Throwable ex) {
        throw new BeanCreationException(beanName, &quot;FactoryBean threw exception on object creation&quot;, ex);
    }


    // Do not accept a null value for a FactoryBean that's not fully
    // initialized yet: Many FactoryBeans just return null then.
    if (object == null &amp;amp;&amp;amp; isSingletonCurrentlyInCreation(beanName)) {
        throw new BeanCurrentlyInCreationException(
                beanName, &quot;FactoryBean which is currently in creation returned null from getObject&quot;);
    }

    if (object != null &amp;amp;&amp;amp; shouldPostProcess) {
        try {
            object = postProcessObjectFromFactoryBean(object, beanName);
        }
        catch (Throwable ex) {
            throw new BeanCreationException(beanName, &quot;Post-processing of the FactoryBean's object failed&quot;, ex);
        }
    }

    return object;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这么长的代码，如果嫌累，就只看factory.getObject()这行就好，这诠释了FactoryBean的加载时通过factory.getObject的方式获取到对应的bean实例的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;如何创建单例bean&quot;&gt;如何创建单例bean&lt;/h3&gt;
&lt;p&gt;在上篇的doGetBean方法中，如果从缓存中加载不到，那么我们就需要老老实实的从头开始加载bean了，对于单例bean的加载就都在这里实现了&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// Create bean instance.
            if (mbd.isSingleton()) {
                sharedInstance = getSingleton(beanName, new ObjectFactory&amp;lt;Object&amp;gt;() {
                    public Object getObject() throws BeansException {
                        try {
                            return createBean(beanName, mbd, args);
                        }
                        catch (BeansException ex) {
                            // Explicitly remove instance from singleton cache: It might have been put there
                            // eagerly by the creation process, to allow for circular reference resolution.
                            // Also remove any beans that received a temporary reference to the bean.
                            destroySingleton(beanName);
                            throw ex;
                        }
                    }
                });
                bean = getObjectForBeanInstance(sharedInstance, name, beanName, mbd);
            }&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;创建bean&quot;&gt;创建bean&lt;/h3&gt;
&lt;p&gt;我们从AbstractBeanFactory的createBean方法来到了AbstractAutowiredCapableBeanFactory的createbean方法，而真正的创建bean其实在doCreateBean方法中&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;protected Object doCreateBean(final String beanName, final RootBeanDefinition mbd, final Object[] args) {
   // Instantiate the bean.
   BeanWrapper instanceWrapper = null;
   if (mbd.isSingleton()) {
      instanceWrapper = this.factoryBeanInstanceCache.remove(beanName);
   }
   if (instanceWrapper == null) {
      instanceWrapper = createBeanInstance(beanName, mbd, args);
   }
   final Object bean = (instanceWrapper != null ? instanceWrapper.getWrappedInstance() : null);
   Class beanType = (instanceWrapper != null ? instanceWrapper.getWrappedClass() : null);

   // Allow post-processors to modify the merged bean definition.
   synchronized (mbd.postProcessingLock) {
      if (!mbd.postProcessed) {
         applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName);
         mbd.postProcessed = true;
      }
   }

   // Eagerly cache singletons to be able to resolve circular references
   // even when triggered by lifecycle interfaces like BeanFactoryAware.
   boolean earlySingletonExposure = (mbd.isSingleton() &amp;amp;&amp;amp; this.allowCircularReferences &amp;amp;&amp;amp;
         isSingletonCurrentlyInCreation(beanName));
   if (earlySingletonExposure) {
      if (logger.isDebugEnabled()) {
         logger.debug(&quot;Eagerly caching bean '&quot; + beanName +
               &quot;' to allow for resolving potential circular references&quot;);
      }
      addSingletonFactory(beanName, new ObjectFactory() {
         public Object getObject() throws BeansException {
            return getEarlyBeanReference(beanName, mbd, bean);
         }
      });
   }

   // Initialize the bean instance.
   Object exposedObject = bean;
   try {
      populateBean(beanName, mbd, instanceWrapper);
      if (exposedObject != null) {
         exposedObject = initializeBean(beanName, exposedObject, mbd);
      }
   }
   catch (Throwable ex) {
      if (ex instanceof BeanCreationException &amp;amp;&amp;amp; beanName.equals(((BeanCreationException) ex).getBeanName())) {
         throw (BeanCreationException) ex;
      }
      else {
         throw new BeanCreationException(mbd.getResourceDescription(), beanName, &quot;Initialization of bean failed&quot;, ex);
      }
   }

   if (earlySingletonExposure) {
      Object earlySingletonReference = getSingleton(beanName, false);
      if (earlySingletonReference != null) {
         if (exposedObject == bean) {
            exposedObject = earlySingletonReference;
         }
         else if (!this.allowRawInjectionDespiteWrapping &amp;amp;&amp;amp; hasDependentBean(beanName)) {
            String[] dependentBeans = getDependentBeans(beanName);
            Set&amp;lt;String&amp;gt; actualDependentBeans = new LinkedHashSet&amp;lt;String&amp;gt;(dependentBeans.length);
            for (String dependentBean : dependentBeans) {
               if (!removeSingletonIfCreatedForTypeCheckOnly(dependentBean)) {
                  actualDependentBeans.add(dependentBean);
               }
            }
            if (!actualDependentBeans.isEmpty()) {
               throw new BeanCurrentlyInCreationException(beanName,
                     &quot;Bean with name '&quot; + beanName + &quot;' has been injected into other beans [&quot; +
                     StringUtils.collectionToCommaDelimitedString(actualDependentBeans) +
                     &quot;] in its raw version as part of a circular reference, but has eventually been &quot; +
                     &quot;wrapped. This means that said other beans do not use the final version of the &quot; +
                     &quot;bean. This is often the result of over-eager type matching - consider using &quot; +
                     &quot;'getBeanNamesOfType' with the 'allowEagerInit' flag turned off, for example.&quot;);
            }
         }
      }
   }

   // Register bean as disposable.
   try {
      registerDisposableBeanIfNecessary(beanName, bean, mbd);
   }
   catch (BeanDefinitionValidationException ex) {
      throw new BeanCreationException(mbd.getResourceDescription(), beanName, &quot;Invalid destruction signature&quot;, ex);
   }

   return exposedObject;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;如果是单例Bean，那么首先是从factoryBeanInstanceCache中清除该beanName对应的记录&lt;/li&gt;
&lt;li&gt;实例化bean，将BeanDefinition转换为BeanWrapper对象&lt;/li&gt;
&lt;li&gt;bean合并后的处理&lt;/li&gt;
&lt;li&gt;解决循环依赖问题&lt;/li&gt;
&lt;li&gt;属性填充，将所有属性填充到bean的实例中&lt;br/&gt;这个方法，本身不算长，但是层层深入就会发现其下面包罗了创建bean的诸多繁杂的细节（这块自己看的也是云里雾里，就不往下延伸扩展了）。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;虽然对于Spring加载bean，我只写了四篇，但是其内部实现远比我表述的要复杂的多。&lt;br/&gt;看源码确实很煎熬，对于目前看不懂的地方要么多看几遍，要么先跳过。阅读代码的过程中要懂得取舍，对于非重点部分比如日志或者异常处理可以先忽略，沿着一条主线往下看，最主要是先弄懂代码的只要意图。&lt;br/&gt;Spring的bean加载代码量虽然巨大，但是思路还是比较清晰的，我们知道Spring如何加载xml然后解析xml，再到如何把xml的元素转为自己的BeanDefinition，最后又是如何取出对应的beanName然后返回一个bean实例供容器使用的。&lt;/p&gt;
&lt;p&gt;网上有一位大神用一张图就把整个过程画出来了&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/619240/201711/619240-20171104120752654-836873646.png&quot;/&gt;&lt;br/&gt;注：图片来源http://blog.csdn.net/zghwaicsdn/article/details/50910384&lt;br/&gt;​&lt;br/&gt;如果您觉得阅读本文对您有帮助，请点一下“&lt;strong&gt;推荐&lt;/strong&gt;”按钮，您的“&lt;strong&gt;推荐&lt;/strong&gt;”将是我最大的写作动力！如果您想持续关注我的文章，请扫描二维码，关注JackieZheng的微信公众号，我会将我的文章推送给您，并和您一起分享我日常阅读过的优质文章。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4459384-f166f03afb66b79f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 04:10:00 +0000</pubDate>
<dc:creator>JackieZheng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bigdataZJ/p/SpringSource4.html</dc:identifier>
</item>
<item>
<title>R学习笔记 第六篇：数据变换和清理 - 悦光阴</title>
<link>http://www.cnblogs.com/ljhdo/p/5180319.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ljhdo/p/5180319.html</guid>
<description>&lt;p&gt;在使用R的分组操作之前，首先要了解R语言包，包实质上是实现特定功能的，预先写好的代码库（library），R拥有大量的软件包，许多包都是由某一领域的专家编写的，但并不是所有的包都有很高的质量的，在使用包之前，最好导社区中了解其他网友的反馈。&lt;/p&gt;
&lt;p&gt;安装包，引用包和卸载包的命令分别是：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
install.packages(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;package-name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
library(package&lt;/span&gt;-name)&lt;br/&gt;remove.packages(&quot;package-name&quot;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数据分析的工作，80%的时间耗费在处理数据上，而数据处理的过程可以分为：分离-操作-结合（Split-Apply-Combine），也就是说，先将数据根据特定的字段分组，每个分组都是独立的；然后，对每个分组执行转换，最后把转换后的结果组合在一起，在数据处理中，经常需要循环访问数据，R语言是矢量化的，天生具有处理循环操作的优势。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一，分组聚合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在apply函数家族中，apply函数只能用于矩阵，lapply函数能够用于向量和列表（list），其工作原理是把一个函数应用于一个列表中的每个元素上，并且把结果作为列表返回；sapply处理列表，返回向量。mapply函数，把调用的函数应用到多个列表的每一个元素中。&lt;/p&gt;
&lt;p&gt;tapply函数用于分组聚合运算，在研究数据时，有时需要对数据按照特定的字段进行分组，然后统计各个分组的数据，这就是SQL语法中的分组聚合。在R语言中，可以通过三步实现：拆分-应用-合并（Split-Apply-Combine）&lt;/p&gt;
&lt;p&gt;例如，对玩家的游戏成绩进行统计和分析，创建示例数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;gt; players_scores=data.frame(
+     player=rep(c('Tom','Dick','Jim'),times=c(2,5,3)),
+     score=round(runif(10,1,100),-1)
+ )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;计算每个玩家的平均得分，首先对玩家分组，split函数的作用是按照特定的字段对数据框进行分组，第一个参数是数据框对象，第二个参数是分组字段，split函数返回的结果是列表对象。&lt;/p&gt;
&lt;p&gt;例如，split(score,player)函数的作用是按照player字段把数据框中的score拆分成一组，也就是说，player 相同的score是同一个分组，填充到同一个列表项中：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;gt; (scores_by_player=&lt;span&gt;with(players_scores,split(score,player)))
$Dick
[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;] &lt;span&gt;70&lt;/span&gt; &lt;span&gt;20&lt;/span&gt; &lt;span&gt;30&lt;/span&gt; &lt;span&gt;70&lt;/span&gt; &lt;span&gt;70&lt;/span&gt;&lt;span&gt;

$Jim
[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;] &lt;span&gt;80&lt;/span&gt; &lt;span&gt;90&lt;/span&gt; &lt;span&gt;50&lt;/span&gt;&lt;span&gt;

$Tom
[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;] &lt;span&gt;80&lt;/span&gt; &lt;span&gt;90&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二步是对每个分组计算平均分，利用lapply函数，把函数引用于列表的每个列表项中：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
list_mean_by_player=lapply(scores_by_player,mean)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第三步是把结果合并到单个向量中，也就是把列表转换成向量，&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;gt; unlist(list_mean_by_player)
    Dick      Jim      Tom 
52.00000 73.33333 85.00000 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在数据分析中，”拆分-应用-合并“ 显示十分繁琐，tapply函数一次完成所有的三个步骤，一气呵成：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
with(players_scores,tapply(score,player,mean))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tapply函数常用的参数共有三个，第一个参数是：数据框对象或向量，第二个参数是因子列表，也就是分组字段，第三个参数是指对单个分组应用的函数变量：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
tapply(X, INDEX, FUN = NULL, ...)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;by函数和aggregate函数是tapply函数的包装函数，功能相同，接口稍微不同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二，aggregate函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;aggregate函数把数据分离为单独的子集，为每一个子集计算聚合值，然后把聚合值结合（combine）在一起返回。aggregate函数第一个参数是：price~cut，这是formula对象，包括符号“ ~”，以及在符号“~”两侧的变量，左侧代表要计算聚合值的变量（聚合变量），右侧代表分组的变量，函数依据分组变量，把数据分离为多个单独的子集。第二个参数是操作的数据框，第三个参数是应用在符号“~”左侧的函数，例如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;gt;&lt;span&gt; library(ggplot2)
&lt;/span&gt;&amp;gt; data(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;diamonds&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;data函数的作用是加载指定的数据集，本例将加载ggplot2包中的diamonds数据集，这个数据集在下文直接引用。&lt;/p&gt;
&lt;p&gt;使用aggregate函数操作diamonds数据集，按照cut字段分组，函数mean的作用是为每个分组计算prince的平均值：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;gt; aggregate(price~cut,diamonds,mean)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;aggregate函数能够添加多余一个的分组变量，只需要在formula右侧添加变量，并用加号“+”隔离：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;gt; aggregate(price~cut+&lt;span&gt;color,diamonds,mean)
         cut color    price
&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       Fair     D &lt;span&gt;4291.061&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;       Good     D &lt;span&gt;3405.382&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;  Very Good     D &lt;span&gt;3470.467&lt;/span&gt;&lt;span&gt;
....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;aggregate函数能够添加多个聚合变量，只需要在formula左侧，使用函数cbind把两个变量组合起来：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;gt; aggregate(cbind(price,carat)~&lt;span&gt;cut,diamonds,mean)
        cut    price     carat
&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;      Fair &lt;span&gt;4358.758&lt;/span&gt; &lt;span&gt;1.0461366&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;      Good &lt;span&gt;3928.864&lt;/span&gt; &lt;span&gt;0.8491847&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; Very Good &lt;span&gt;3981.760&lt;/span&gt; &lt;span&gt;0.8063814&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;   Premium &lt;span&gt;4584.258&lt;/span&gt; &lt;span&gt;0.8919549&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;     Ideal &lt;span&gt;3457.542&lt;/span&gt; &lt;span&gt;0.7028370&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还可以在aggregate函数formular对象的两侧分别添加多个变量执行操作&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;gt; aggregate(cbind(price,carat)~cut+&lt;span&gt;color,diamonds,mean)
         cut color    price     carat
&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       Fair     D &lt;span&gt;4291.061&lt;/span&gt; &lt;span&gt;0.9201227&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;       Good     D &lt;span&gt;3405.382&lt;/span&gt; &lt;span&gt;0.7445166&lt;/span&gt;&lt;span&gt;
....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;三，plyr包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;plyr包基本上可以取代apply函数家族，plyr包核心函数的特点是：**ply，所有的函数名都由5个字符组成，且最后三个字符是ply，函数名的第一个字符代表输入值的类型，第二个字符代表输出值的类型。类型简写是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;d&lt;/strong&gt;：data.frame&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l&lt;/strong&gt;：list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt;：array，vector，matrix&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;r&lt;/strong&gt;：代表replicate&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_&lt;/strong&gt;：舍弃输出结果&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;plyr包的核心函数，使用起来十分方便，使用之前，需要加载和引用plyr包：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
install.packages(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;plyr&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
library(plyr)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1,ddply函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;plyr包中最常用的函数是ddply函数，函数的第一个参数是要操作的数据框，第二个参数是：要进行拆分的列的名称，第三个参数是要应用到每个元素上的函数。传递列时，无需引号，但是需要包含在.(col_name)的调用之后。&lt;/p&gt;
&lt;p&gt;使用colwise函数，使ddply函数把第三个参数引用于每一列，除了第二个参数指定的数据列之外，或者使用summarize函数对指定的列执行操作：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;gt; ddply(diamonds,.(color),summarize,avg_price=mean(price),avg_carat=&lt;span&gt;mean(carat))
  color avg_price avg_carat
&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;     D  &lt;span&gt;3169.954&lt;/span&gt; &lt;span&gt;0.6577948&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     E  &lt;span&gt;3076.752&lt;/span&gt; &lt;span&gt;0.6578667&lt;br/&gt;.....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2，each函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;each函数，能够使函数aggregate函数同时调用多个函数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&amp;gt; aggregate(cbind(price,carat)~cut+&lt;span&gt;color,diamonds,each(mean,sum))
         cut color   price.mean    price.sum   carat.mean    carat.sum
&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       Fair     D     &lt;span&gt;4291.061&lt;/span&gt;   &lt;span&gt;699443.000&lt;/span&gt;    &lt;span&gt;0.9201227&lt;/span&gt;  &lt;span&gt;149.9800000&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;       Good     D     &lt;span&gt;3405.382&lt;/span&gt;  &lt;span&gt;2254363.000&lt;/span&gt;    &lt;span&gt;0.7445166&lt;/span&gt;  &lt;span&gt;492.8700000&lt;/span&gt;&lt;span&gt;
......&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;三，dplyr包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt;包只能用于tibble类型的对象，用于对数据进行数据清理和转换，使用以下命令加载和引用dplyr包：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
install.packages(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dplyr&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
library(dplyr)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tibble 类型是dplyr包特有的对象类型（data frame tbl / tbl_df）。在利用&lt;code&gt;dplyr&lt;/code&gt;包处理数据之前，首先需要把数据框装载成tibble类型，可以调用 &lt;code&gt;tbl_df&lt;/code&gt;函数把数据框类型的数据装载成 tibble 类型的数据对象：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&amp;gt; df=tbl_df(diamonds)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1，投影函数（&lt;code&gt;select）&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从tibble变量中，选择特定的数据列显示，select函数的第一个参数是tibble变量：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;gt; &lt;span&gt;select&lt;/span&gt;(df,carat,cut,color)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2，筛选函数（&lt;code&gt;filter）&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从tibble变量中，按照特定的条件过滤数据：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&amp;gt; filter(df,color==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;E&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3，转换函数（mutate）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据tibble变量中的数据，应用指定的公式，派生新的数据列，或重写已经存在的数据列：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;gt; mutate(df,avg_ct=price/carat)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4，汇总函数（summarize）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对tibble变量执行聚合运算，如果tibble已经被分组，那么单独对每个分组进行聚合运算：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;gt; summarize(df,avg_prince=mean(price),avg_ct=mean(carat))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;5，分组函数（group_by）和移除分组(ungroup)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;被分组之后，tibble变量处于分组状态，可以使用ungroup函数，移除tibble变量的分组状态。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
group_by(df,color)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;6，管道操作符（%&amp;gt;%）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;管道操作符（%&amp;gt;%）用于把前一步操作的结果集（变量类型是tibble）传递到下一个函数中，赋值给函数的第一个参数中：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;gt; group_by(df,color) %&amp;gt;%&lt;span&gt; summarize(mean(price))
# A tibble: &lt;/span&gt;&lt;span&gt;7&lt;/span&gt; x &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
  color `mean(price)`
  &lt;/span&gt;&amp;lt;ord&amp;gt;         &amp;lt;dbl&amp;gt;
&lt;span&gt;1&lt;/span&gt;     D      &lt;span&gt;3169.954&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;     E      &lt;span&gt;3076.752&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;     F      &lt;span&gt;3724.886&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;     G      &lt;span&gt;3999.136&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;     H      &lt;span&gt;4486.669&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt;     I      &lt;span&gt;5091.875&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt;     J      &lt;span&gt;5323.818&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;7，排序函数（arrange）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;arrange对tibble变量进行排序，默认是按照字段的升序值排序，使用desc(field)，可以按照字段的降序值排序：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;gt; group_by(df,color) %&amp;gt;% summarize(avg_price=mean(price)) %&amp;gt;% arrange(desc(avg_price))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;参考文档：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/b2abad66cb01?from=timeline&amp;amp;isappinstalled=0&quot; target=&quot;_blank&quot;&gt;R语言滴水穿石系列文章（一）：dplyr-高效的数据变换与整理工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cran.rstudio.com/web/packages/dplyr/dplyr.pdf&quot; target=&quot;_blank&quot;&gt;dplyr Package&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 03:42:00 +0000</pubDate>
<dc:creator>悦光阴</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ljhdo/p/5180319.html</dc:identifier>
</item>
<item>
<title>【XML】xStream浅录 - Pinnsvin</title>
<link>http://www.cnblogs.com/pinnsvin/p/7782858.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pinnsvin/p/7782858.html</guid>
<description>&lt;p&gt;XStream可以用来转换对象-XML，或者XML-对象。&lt;br/&gt;官网地址：&lt;a href=&quot;http://x-stream.github.io/&quot; class=&quot;uri&quot;&gt;http://x-stream.github.io&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;小案例&quot;&gt;小案例：&lt;/h2&gt;
&lt;h3 id=&quot;实体类&quot;&gt;实体类&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FileVo.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package cn.pinnsvin.xml.vo;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.math.BigInteger;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.Date;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.List;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; FileVo {

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String owner;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date createDate;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date lastUpdateDate;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String authority;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; BigInteger size;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String title;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String content;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;FileVo [owner=&quot;&lt;/span&gt; + owner + &lt;span class=&quot;st&quot;&gt;&quot;, createDate=&quot;&lt;/span&gt; + createDate + &lt;span class=&quot;st&quot;&gt;&quot;, lastUpdateDate=&quot;&lt;/span&gt; + lastUpdateDate
                + &lt;span class=&quot;st&quot;&gt;&quot;, authority=&quot;&lt;/span&gt; + authority + &lt;span class=&quot;st&quot;&gt;&quot;, size=&quot;&lt;/span&gt; + size + &lt;span class=&quot;st&quot;&gt;&quot;, title=&quot;&lt;/span&gt; + title + &lt;span class=&quot;st&quot;&gt;&quot;, content=&quot;&lt;/span&gt; + content + &lt;span class=&quot;st&quot;&gt;&quot;]&quot;&lt;/span&gt;;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getOwner&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; owner;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setOwner&lt;/span&gt;(String owner) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;owner&lt;/span&gt; = owner;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;fu&quot;&gt;getCreateDate&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; createDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setCreateDate&lt;/span&gt;(Date createDate) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;createDate&lt;/span&gt; = createDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;fu&quot;&gt;getLastUpdateDate&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; lastUpdateDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setLastUpdateDate&lt;/span&gt;(Date lastUpdateDate) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;lastUpdateDate&lt;/span&gt; = lastUpdateDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getAuthority&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; authority;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setAuthority&lt;/span&gt;(String authority) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;authority&lt;/span&gt; = authority;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; BigInteger &lt;span class=&quot;fu&quot;&gt;getSize&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; size;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setSize&lt;/span&gt;(BigInteger size) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;size&lt;/span&gt; = size;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getTitle&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; title;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setTitle&lt;/span&gt;(String title) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;title&lt;/span&gt; = title;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getContent&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; content;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setContent&lt;/span&gt;(String content) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;content&lt;/span&gt; = content;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;FolderVo.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package cn.pinnsvin.xml.vo;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.math.BigInteger;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.Date;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.List;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; FolderVo {

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; List&amp;lt;FileVo&amp;gt; files;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; List&amp;lt;FolderVo&amp;gt; folders;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String owner;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date createDate;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date lastUpdateDate;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String authority;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; BigInteger allSize;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; BigInteger usedSize;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;FolderVo [files=&quot;&lt;/span&gt; + files + &lt;span class=&quot;st&quot;&gt;&quot;, folders=&quot;&lt;/span&gt; + folders + &lt;span class=&quot;st&quot;&gt;&quot;, owner=&quot;&lt;/span&gt; + owner + &lt;span class=&quot;st&quot;&gt;&quot;, createDate=&quot;&lt;/span&gt; + createDate
                + &lt;span class=&quot;st&quot;&gt;&quot;, lastUpdateDate=&quot;&lt;/span&gt; + lastUpdateDate + &lt;span class=&quot;st&quot;&gt;&quot;, authority=&quot;&lt;/span&gt; + authority + &lt;span class=&quot;st&quot;&gt;&quot;, allSize=&quot;&lt;/span&gt; + allSize
                + &lt;span class=&quot;st&quot;&gt;&quot;, usedSize=&quot;&lt;/span&gt; + usedSize + &lt;span class=&quot;st&quot;&gt;&quot;]&quot;&lt;/span&gt;;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; List&amp;lt;FileVo&amp;gt; &lt;span class=&quot;fu&quot;&gt;getFiles&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; files;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setFiles&lt;/span&gt;(List&amp;lt;FileVo&amp;gt; files) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;files&lt;/span&gt; = files;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; List&amp;lt;FolderVo&amp;gt; &lt;span class=&quot;fu&quot;&gt;getFolders&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; folders;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setFolders&lt;/span&gt;(List&amp;lt;FolderVo&amp;gt; folders) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;folders&lt;/span&gt; = folders;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getOwner&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; owner;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setOwner&lt;/span&gt;(String owner) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;owner&lt;/span&gt; = owner;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;fu&quot;&gt;getCreateDate&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; createDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setCreateDate&lt;/span&gt;(Date createDate) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;createDate&lt;/span&gt; = createDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Date &lt;span class=&quot;fu&quot;&gt;getLastUpdateDate&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; lastUpdateDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setLastUpdateDate&lt;/span&gt;(Date lastUpdateDate) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;lastUpdateDate&lt;/span&gt; = lastUpdateDate;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getAuthority&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; authority;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setAuthority&lt;/span&gt;(String authority) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;authority&lt;/span&gt; = authority;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; BigInteger &lt;span class=&quot;fu&quot;&gt;getAllSize&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; allSize;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setAllSize&lt;/span&gt;(BigInteger allSize) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;allSize&lt;/span&gt; = allSize;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; BigInteger &lt;span class=&quot;fu&quot;&gt;getUsedSize&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; usedSize;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUsedSize&lt;/span&gt;(BigInteger usedSize) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;usedSize&lt;/span&gt; = usedSize;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;工具类&quot;&gt;工具类&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;XStreamUtils.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package cn.pinnsvin.xml.utils;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.io.File;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.XStream;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.io.xml.DomDriver;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.vo.FileVo;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.vo.FolderVo;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; XStreamUtils {
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; XStream xStream;
    &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt;{
        &lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;();
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;(){
        xStream = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;XStream&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DomDriver&lt;/span&gt;());
        xStream.&lt;span class=&quot;fu&quot;&gt;registerConverter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; cn.&lt;span class=&quot;fu&quot;&gt;pinnsvin&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;xml&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;utils&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;DateConverter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;yyyyMMdd&quot;&lt;/span&gt;));
        &lt;span class=&quot;fu&quot;&gt;myAlias&lt;/span&gt;();
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;myAlias&lt;/span&gt;(){
        xStream.&lt;span class=&quot;fu&quot;&gt;alias&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;Folder&quot;&lt;/span&gt;, FolderVo.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
        xStream.&lt;span class=&quot;fu&quot;&gt;alias&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;File&quot;&lt;/span&gt;, FileVo.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;objectToXML&lt;/span&gt;(Object object){
        String xml = xStream.&lt;span class=&quot;fu&quot;&gt;toXML&lt;/span&gt;(object);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; xml;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; Object &lt;span class=&quot;fu&quot;&gt;xmlToObject&lt;/span&gt;(String xml){
        Object obj = xStream.&lt;span class=&quot;fu&quot;&gt;fromXML&lt;/span&gt;(xml);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; obj;
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; Object &lt;span class=&quot;fu&quot;&gt;xmlToObject&lt;/span&gt;(File file){
        Object obj = xStream.&lt;span class=&quot;fu&quot;&gt;fromXML&lt;/span&gt;(file);
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; obj;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;日期格式转换类&quot;&gt;日期格式转换类&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DateConverter.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package cn.pinnsvin.xml.utils;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.text.DateFormat;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.text.ParseException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.text.SimpleDateFormat;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.Date;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.converters.ConversionException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.converters.Converter;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.converters.MarshallingContext;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.converters.UnmarshallingContext;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.io.HierarchicalStreamReader;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import com.thoughtworks.xstream.io.HierarchicalStreamWriter;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; DateConverter &lt;span class=&quot;kw&quot;&gt;implements&lt;/span&gt; Converter{
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String format;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DateConverter&lt;/span&gt;(String format) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;();
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;.format&lt;/span&gt; = format;
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;canConvert&lt;/span&gt;(Class clazz) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; java.&lt;span class=&quot;fu&quot;&gt;util&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Date&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;isAssignableFrom&lt;/span&gt;(clazz);
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;marshal&lt;/span&gt;(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {
        java.&lt;span class=&quot;fu&quot;&gt;util&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Date&lt;/span&gt; date = (Date) source;
        DateFormat formatter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(format);
        writer.&lt;span class=&quot;fu&quot;&gt;setValue&lt;/span&gt;(formatter&lt;span class=&quot;fu&quot;&gt;.format&lt;/span&gt;(date));
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
     &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;fu&quot;&gt;unmarshal&lt;/span&gt;(HierarchicalStreamReader reader,
             UnmarshallingContext context) {
     java.&lt;span class=&quot;fu&quot;&gt;util&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Date&lt;/span&gt; date = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Date();
     DateFormat formatter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(format);
     &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
         date = formatter.&lt;span class=&quot;fu&quot;&gt;parse&lt;/span&gt;(reader.&lt;span class=&quot;fu&quot;&gt;getValue&lt;/span&gt;());
     } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (ParseException e) {
             &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ConversionException&lt;/span&gt;(e.&lt;span class=&quot;fu&quot;&gt;getMessage&lt;/span&gt;(), e);
     }
     &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; date;
}
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;调用&quot;&gt;调用&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package cn.pinnsvin;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.io.File;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.Date;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.text.DateFormat;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.text.ParseException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.text.SimpleDateFormat;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.ArrayList;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.util.List;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.utils.XStreamUtils;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.vo.FileVo;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.vo.FolderVo;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import cn.pinnsvin.xml.vo.MyDate;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Main {

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;main&lt;/span&gt;(String[] args) &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; ParseException {
        &lt;span class=&quot;fu&quot;&gt;getS&lt;/span&gt;();
    }
    
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getS&lt;/span&gt;() &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; ParseException{
            FolderVo folder = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;FolderVo&lt;/span&gt;();
            FileVo file = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;FileVo&lt;/span&gt;();
            FileVo file1 = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;FileVo&lt;/span&gt;();
            List&amp;lt;FileVo&amp;gt; files = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; ArrayList();
            file.&lt;span class=&quot;fu&quot;&gt;setAuthority&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;读写&quot;&lt;/span&gt;);
            file.&lt;span class=&quot;fu&quot;&gt;setContent&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;XStream可以用来转换对象-XML，或者XML-对象。&quot;&lt;/span&gt;);
            file.&lt;span class=&quot;fu&quot;&gt;setTitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;xml解析&quot;&lt;/span&gt;);
            file.&lt;span class=&quot;fu&quot;&gt;setCreateDate&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;st&quot;&gt;&quot;yyyyMMdd&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;parse&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;20161125&quot;&lt;/span&gt;));
            file1.&lt;span class=&quot;fu&quot;&gt;setAuthority&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;读&quot;&lt;/span&gt;);
            file1.&lt;span class=&quot;fu&quot;&gt;setContent&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;XStream可以用来转换对象-XML，或者XML-对象。&quot;&lt;/span&gt;);
            file1.&lt;span class=&quot;fu&quot;&gt;setTitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;xml解析之XStream&quot;&lt;/span&gt;);
            files.&lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;(file);
            files.&lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;(file1);
            folder.&lt;span class=&quot;fu&quot;&gt;setFiles&lt;/span&gt;(files);
            folder.&lt;span class=&quot;fu&quot;&gt;setAuthority&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;读写&quot;&lt;/span&gt;);
            folder.&lt;span class=&quot;fu&quot;&gt;setOwner&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;Pinnsvin&quot;&lt;/span&gt;);
            folder.&lt;span class=&quot;fu&quot;&gt;setCreateDate&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Date());
            
            XStreamUtils streamUtils = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;XStreamUtils&lt;/span&gt;();
            System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(streamUtils.&lt;span class=&quot;fu&quot;&gt;objectToXML&lt;/span&gt;(folder));
            FolderVo fd = (FolderVo)streamUtils.&lt;span class=&quot;fu&quot;&gt;xmlToObject&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;st&quot;&gt;&quot;D:&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;2.xml&quot;&lt;/span&gt;));
            System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(fd.&lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;());
            List&amp;lt;FileVo&amp;gt; fl = fd.&lt;span class=&quot;fu&quot;&gt;getFiles&lt;/span&gt;();
&lt;span class=&quot;co&quot;&gt;//          System.out.println(fl.toString()); &lt;/span&gt;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;输出&quot;&gt;输出&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;30&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;Folder&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;files&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;File&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;createDate&amp;gt;&lt;/span&gt;20161125&lt;span class=&quot;kw&quot;&gt;&amp;lt;/createDate&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;authority&amp;gt;&lt;/span&gt;读写&lt;span class=&quot;kw&quot;&gt;&amp;lt;/authority&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;xml解析&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;content&amp;gt;&lt;/span&gt;XStream可以用来转换对象-XML，或者XML-对象。&lt;span class=&quot;kw&quot;&gt;&amp;lt;/content&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/File&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;File&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;authority&amp;gt;&lt;/span&gt;读&lt;span class=&quot;kw&quot;&gt;&amp;lt;/authority&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;xml解析之XStream&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;&amp;lt;content&amp;gt;&lt;/span&gt;XStream可以用来转换对象-XML，或者XML-对象。&lt;span class=&quot;kw&quot;&gt;&amp;lt;/content&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/File&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/files&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;owner&amp;gt;&lt;/span&gt;Pinnsvin&lt;span class=&quot;kw&quot;&gt;&amp;lt;/owner&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;createDate&amp;gt;&lt;/span&gt;20171028&lt;span class=&quot;kw&quot;&gt;&amp;lt;/createDate&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;authority&amp;gt;&lt;/span&gt;读写&lt;span class=&quot;kw&quot;&gt;&amp;lt;/authority&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/Folder&amp;gt;&lt;/span&gt;
FolderVo [files=[FileVo [owner=null, createDate=Fri Nov 25 00:00:00 GMT+08:00 2016, lastUpdateDate=null, authority=读写, size=null, title=xml解析, content=XStream可以用来转换对象-XML，或者XML-对象。], FileVo [owner=null, createDate=null, lastUpdateDate=null, authority=读, size=null, title=xml解析之XStream, content=XStream可以用来转换对象-XML，或者XML-对象。]], folders=null, owner=Pinnsvin, createDate=Sat Oct 28 00:00:00 GMT+08:00 2017, lastUpdateDate=null, authority=读写, allSize=null, usedSize=null]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 04 Nov 2017 03:41:00 +0000</pubDate>
<dc:creator>Pinnsvin</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/pinnsvin/p/7782858.html</dc:identifier>
</item>
<item>
<title>什么是Echarts？Echarts如何使用？ - undeceive</title>
<link>http://www.cnblogs.com/undeceive/p/7782830.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/undeceive/p/7782830.html</guid>
<description>&lt;td valign=&quot;top&quot; width=&quot;70%&quot;&gt;
&lt;table align=&quot;center&quot; width=&quot;100%&quot; height=&quot;90&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; border=&quot;0&quot; bgcolor=&quot;white&quot; class=&quot;index&quot; readability=&quot;254.38748349081&quot;&gt;&lt;tr readability=&quot;508.77496698161&quot;&gt;&lt;td class=&quot;main&quot;&gt;
&lt;div id=&quot;post_detail&quot;&gt;
&lt;div class=&quot;block&quot;&gt;

&lt;div class=&quot;post&quot;&gt;
&lt;div class=&quot;postcontent&quot; readability=&quot;41&quot;&gt;
&lt;div id=&quot;cnblogs_post_body&quot; readability=&quot;311.5&quot;&gt;
&lt;center&gt;&lt;span&gt;&lt;strong&gt;什么是Echarts？&lt;/strong&gt;&lt;/span&gt;&lt;/center&gt;
&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;Echarts--&lt;strong&gt;商业级数据图表&lt;/strong&gt;&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;   商业级数据图表，它是一个纯JavaScript的图标库，兼容绝大部分的浏览器，底层依赖轻量级的canvas类库ZRender，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。创新的拖拽重计算、数据视图、值域漫游等特性大大增强了用户体验，赋予了用户对数据进行挖掘、整合的能力。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;Echarts支持的图表？&lt;span&gt;　&lt;/span&gt;&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;折线图（区域图）、柱状图（条状图）、散点图（气泡图）、K线图、饼图（环形图）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;雷达图（填充雷达图）、和弦图、力导向布局图、地图、仪表盘、漏斗图、事件河流图等12类图表&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;echarts和chart对比&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;echarts的优点：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;1.国人开发，文档全，便于开发和阅读文档。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;2.图表丰富，可以适用各种各样的功能。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;echarts的缺点：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;移动端使用略卡，毕竟是PC端的东西，移植到移动端肯定多多少少有些问题吧，或许跟自己水平也有一定的关系，哎怎么说呢。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;echarts不失为一款比较适合我们这种码农使用的框架。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;echarts就不贴代码了。毕竟文档很全。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;chart.js优点：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;1.轻量级，min版总大小50多k。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;2.移动端使用比较流畅，毕竟小。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;chart.js&lt;/strong&gt;缺点：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;1.功能欠缺比较多。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;2.中文文档奇缺。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;Echarts--必要文件导入&lt;span&gt;　&lt;/span&gt;&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 关键文件：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;js/echarts.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;Echarts--图表示例&lt;/h4&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;1&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;K线图&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;502&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 为ECharts准备一个具备大小（宽高）的Dom &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;main&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width: 800px;height:400px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 基于准备好的dom，初始化echarts实例&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; myChart &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; echarts.init(document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;main&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定图表的配置项和数据&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; option &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
                title: {
                    text: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;2013年上半年上证指数&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                },
                tooltip: {
                    trigger: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;axis&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    formatter: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(params) {
                        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; res &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].seriesName &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].name;
                        res &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;br/&amp;gt;  开盘 : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].value[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;  最高 : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].value[&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;];
                        res &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;br/&amp;gt;  收盘 : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].value[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;  最低 : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; params[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;].value[&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;];
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; res;
                    }
                },
                legend: {
                    data: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;上证指数&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
                },
                toolbox: {
                    show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    feature: {
                        mark: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        },
                        dataZoom: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        },
                        dataView: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            readOnly: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
                        },
                        magicType: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            type: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;line&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
                        },
                        restore: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        },
                        saveAsImage: {
                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        }
                    }
                },
                dataZoom: {
                    show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    realtime: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    start: &lt;/span&gt;&lt;span&gt;50&lt;/span&gt;&lt;span&gt;,
                    end: &lt;/span&gt;&lt;span&gt;100&lt;/span&gt;&lt;span&gt;
                },
                xAxis: [{
                    type: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;category&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    boundaryGap: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    axisTick: {
                        onGap: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
                    },
                    splitLine: {
                        show: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
                    },
                    data: [
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/24&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/25&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/28&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/29&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/30&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/1/31&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/4&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/18&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/19&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/20&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/21&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/22&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/25&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/26&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/27&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/2/28&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/4&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/11&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/12&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/13&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/14&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/15&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/18&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/19&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/20&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/21&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/22&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/25&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/26&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/27&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/28&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/3/29&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/3&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/9&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/10&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/11&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/12&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/15&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/16&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/17&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/18&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/19&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/22&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/23&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/24&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/25&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/4/26&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/3&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/9&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/10&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/13&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/14&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/15&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/16&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/17&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/20&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/21&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/22&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/23&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/24&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/27&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/28&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/29&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/30&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/5/31&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/3&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/4&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/7&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2013/6/13&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                    ]
                }],
                yAxis: [{
                    type: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    scale: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                    boundaryGap: [&lt;/span&gt;&lt;span&gt;0.01&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;0.01&lt;/span&gt;&lt;span&gt;]
                }],
                series: [{
                    name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;上证指数&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    type: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                    data: [ &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 开盘，收盘，最低，最高&lt;/span&gt;
&lt;span&gt;                        [&lt;/span&gt;&lt;span&gt;2320.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2302.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2287.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2362.94&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2300&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2291.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2288.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2308.38&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2295.35&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2346.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2295.35&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2346.92&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2347.22&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2358.98&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2337.35&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2363.8&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2360.75&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2382.48&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2347.89&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2383.76&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2383.43&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2385.42&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2371.23&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2391.82&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2377.41&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2419.02&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2369.57&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2421.15&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2425.92&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2428.15&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2417.58&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2440.38&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2411&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2433.13&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2403.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2437.42&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2432.68&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2434.48&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2427.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2441.73&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2430.69&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2418.53&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2394.22&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2433.89&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2416.62&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2432.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2414.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2443.03&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2441.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2421.56&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2415.43&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2444.8&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2420.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2382.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2373.53&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2427.07&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2383.49&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2397.18&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2370.61&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2397.94&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2378.82&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2325.95&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2309.17&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2378.82&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2322.94&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2314.16&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2308.76&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2330.88&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2320.62&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2325.82&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2315.01&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2338.78&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2313.74&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2293.34&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2289.89&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2340.71&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2297.77&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2313.22&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2292.03&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2324.63&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2322.32&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2365.59&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2308.92&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2366.16&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2364.54&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2359.51&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2330.86&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2369.65&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2332.08&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2273.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2259.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2333.54&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2274.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2326.31&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2270.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2328.14&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2333.61&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2347.18&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2321.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2351.44&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2340.44&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2324.29&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2304.27&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2352.02&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2326.42&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2318.61&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2314.59&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2333.67&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2314.68&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2310.59&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2296.58&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2320.96&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2309.16&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2286.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2264.83&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2333.29&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2282.17&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2263.97&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2253.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2286.33&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2255.77&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2270.28&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2253.31&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2276.22&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2269.31&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2278.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2250&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2312.08&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2267.29&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2240.02&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2239.21&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2276.05&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2244.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2257.43&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2232.02&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2261.31&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2257.74&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2317.37&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2257.42&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2317.86&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2318.21&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2324.24&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2311.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2330.81&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2321.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2328.28&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2314.97&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2332&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2334.74&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2326.72&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2319.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2344.89&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2318.58&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2297.67&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2281.12&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2319.99&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2299.38&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2301.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2289&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2323.48&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2273.55&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2236.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2232.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2273.55&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2238.49&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2236.62&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2228.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2246.87&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2229.46&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2234.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2227.31&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2243.95&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2234.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2227.74&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2220.44&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2253.42&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2232.69&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2225.29&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2217.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2241.34&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2196.24&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2211.59&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2180.67&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2212.59&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2215.47&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2225.77&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2215.47&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2234.73&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2224.93&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2226.13&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2212.56&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2233.04&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2236.98&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2219.55&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2217.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2242.48&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2218.09&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2206.78&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2204.44&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2226.26&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2199.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2181.94&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2177.39&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2204.99&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2169.63&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2194.85&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2165.78&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2196.43&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2195.03&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2193.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2178.47&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2197.51&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2181.82&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2197.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2175.44&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2206.03&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2201.12&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2244.64&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2200.58&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2250.11&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2236.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2242.17&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2232.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2245.12&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2242.62&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2184.54&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2182.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2242.62&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2187.35&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2218.32&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2184.11&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2226.12&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2213.19&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2199.31&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2191.85&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2224.63&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2203.89&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2177.91&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2173.86&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2210.58&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2170.78&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2174.12&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2161.14&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2179.65&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2179.05&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2205.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2179.05&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2222.81&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2212.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2231.17&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2212.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2236.07&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2227.86&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2235.57&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2219.44&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2240.26&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2242.39&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2246.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2235.42&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2255.21&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2246.96&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2232.97&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2221.38&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2247.86&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2228.82&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2246.83&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2225.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2247.67&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2247.68&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2241.92&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2231.36&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2250.85&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2238.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2217.01&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2205.87&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2239.93&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2217.09&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2224.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2213.58&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2225.19&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2221.34&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2251.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2210.77&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2252.87&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2249.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2282.87&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2248.41&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2288.09&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2286.33&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2299.99&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2281.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2309.39&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2297.11&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2305.11&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2290.12&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2305.3&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2303.75&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2302.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2292.43&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2314.18&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2293.81&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2275.67&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2274.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2304.95&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2281.45&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2288.53&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2270.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2292.59&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2286.66&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2293.08&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2283.94&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2301.7&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2293.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2321.32&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2281.47&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2322.1&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2323.54&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2324.02&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2321.17&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2334.33&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2316.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2317.75&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2310.49&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2325.72&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2320.74&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2300.59&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2299.37&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2325.53&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2300.21&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2299.25&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2294.11&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2313.43&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2297.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2272.42&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2264.76&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2297.1&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2270.71&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2270.93&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2260.87&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2276.86&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2264.43&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2242.11&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2240.07&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2266.69&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2242.26&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2210.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2205.07&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2250.63&lt;/span&gt;&lt;span&gt;],
                        [&lt;/span&gt;&lt;span&gt;2190.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2148.35&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2126.22&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;2190.1&lt;/span&gt;&lt;span&gt;]
                    ]
                }]
            };

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用刚指定的配置项和数据显示图表。&lt;/span&gt;
&lt;span&gt;            myChart.setOption(option);
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1214418/201711/1214418-20171104111327888-968448819.png&quot; alt=&quot;&quot; width=&quot;841&quot; height=&quot;382&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;2&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;饼图&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1214418/201711/1214418-20171104111613951-791909756.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;75&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 为ECharts准备一个具备大小（宽高）的Dom &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;main&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width: 800px;height:400px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 基于准备好的dom，初始化echarts实例&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; myChart &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; echarts.init(document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;main&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定图表的配置项和数据&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; option &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {
                title: {
                    text: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;某站点用户访问来源&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;主标题文本&lt;/span&gt;
&lt;span&gt;                    subtext: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;纯属虚构&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;副标题文本&lt;/span&gt;
&lt;span&gt;                    x: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题水平安放位置&lt;/span&gt;
&lt;span&gt;                },
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;                calculable: true,                        //是否启用拖拽重计算特性，默认关闭&lt;/span&gt;
&lt;span&gt;                series: [{                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据内容&lt;/span&gt;
&lt;span&gt;                    name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;访问来源&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;系列名称，如启用legend，该值将被legend.data索引相关&lt;/span&gt;
&lt;span&gt;                    type: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;pie&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图表类型，必要参数！&lt;/span&gt;
&lt;span&gt;                    radius: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;55%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;半径&lt;/span&gt;
&lt;span&gt;                    center: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;50%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;60%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;],                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;圆心坐标&lt;/span&gt;
&lt;span&gt;                    data: [{                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据&lt;/span&gt;
&lt;span&gt;                            value: &lt;/span&gt;&lt;span&gt;335&lt;/span&gt;&lt;span&gt;,
                            name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;直接访问&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;&lt;span&gt;310&lt;/span&gt;&lt;span&gt;,
                            name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;邮件营销&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;&lt;span&gt;234&lt;/span&gt;&lt;span&gt;,
                            name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;联盟广告&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;&lt;span&gt;135&lt;/span&gt;&lt;span&gt;,
                            name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;视频广告&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;&lt;span&gt;1548&lt;/span&gt;&lt;span&gt;,
                            name: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;搜索引擎&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        }
                    ]
                }],
                tooltip: {                         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;提示框，鼠标悬浮交互时的信息提示&lt;/span&gt;
&lt;span&gt;                    trigger: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;item&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;触发类型，默认数据触发，可选值有item和axis&lt;/span&gt;
&lt;span&gt;                    formatter: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{a} &amp;lt;br/&amp;gt;{b} : {c} ({d}%)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标指上时显示的数据  a（系列名称），b（类目值），c（数值）, d（占总体的百分比）&lt;/span&gt;
&lt;span&gt;                    backgroundColor: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;rgba(0,0,0,0.7)&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;提示背景颜色，默认为透明度为0.7的黑色&lt;/span&gt;
&lt;span&gt;
                },
                legend: {                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例，每个图表最多仅有一个图例。&lt;/span&gt;
&lt;span&gt;                    orient: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;vertical&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;布局方式，默认为水平布局，可选值有horizontal(竖直)和vertical(水平)&lt;/span&gt;
&lt;span&gt;                    x: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;left&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例水平安放位置，默认为全图居中。可选值有left、right、center&lt;/span&gt;
&lt;span&gt;                    data: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;直接访问&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;邮件营销&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;联盟广告&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;视频广告&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;搜索引擎&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
                },
                toolbox: {                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;工具箱，每个图表最多仅有一个工具箱。&lt;/span&gt;
&lt;span&gt;                    show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示策略，可选为：true（显示） | false（隐藏）&lt;/span&gt;
&lt;span&gt;                    feature: {                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;启用功能&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;                        mark: {                            //辅助线标志&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;                            show: true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;                        },&lt;/span&gt;
&lt;span&gt;                        dataView: {                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据视图&lt;/span&gt;
&lt;span&gt;                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            readOnly: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;readOnly 默认数据视图为只读，可指定readOnly为false打开编辑功能&lt;/span&gt;
&lt;span&gt;                        },
                        restore: {                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;还原，复位原始图表   右上角有还原图标&lt;/span&gt;
&lt;span&gt;                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        },
                        saveAsImage: {                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存图片（IE8-不支持），默认保存类型为png，可以改为jpeg&lt;/span&gt;
&lt;span&gt;                            show: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            type:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jpeg&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                            title : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;保存为图片&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
                        }
                    }
                }
            };

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用刚指定的配置项和数据显示图表。&lt;/span&gt;
&lt;span&gt;            myChart.setOption(option);
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;



&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;



&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;td width=&quot;10&quot;&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;
&lt;/td&gt;
</description>
<pubDate>Sat, 04 Nov 2017 03:22:00 +0000</pubDate>
<dc:creator>undeceive</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/undeceive/p/7782830.html</dc:identifier>
</item>
<item>
<title>一个比较实用的商业级图表Echarts - 榆木疙瘩ii</title>
<link>http://www.cnblogs.com/wuhao752718372/p/7782358.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuhao752718372/p/7782358.html</guid>
<description>&lt;blockquote readability=&quot;14.894684052156&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;  了解了解&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;                  &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　ECharts，缩写来自Enterprise Charts，商业级数据图表，一个纯Javascript的图表库，可以流畅的运行在PC和移动设备上，兼容当前绝大部分浏览器（IE6/7/8/9/10/11，chrome，firefox，Safari等），底层依赖轻量级的Canvas类库&lt;a href=&quot;http://ecomfe.github.io/zrender/&quot; target=&quot;_blank&quot;&gt;ZRender&lt;/a&gt;，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。创新的拖拽重计算、数据视图、值域漫游等特性大大增强了用户体验，赋予了用户对数据进行挖掘、整合的能力。&lt;/p&gt;
&lt;p&gt;　　支持折线图（区域图）、柱状图（条状图）、散点图（气泡图）、K线图、饼图（环形图）、雷达图（填充雷达图）、和弦图、力导向布局图、地图、仪表盘、漏斗图、事件河流图等12类图表，同时提供标题，详情气泡、图例、值域、数据区域、时间轴、工具箱等7个可交互组件，支持多图表、组件的联动和混搭展现。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、 &lt;span&gt;简单了解一下Echarts&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;1.1&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;Echarts的基本图表类型&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;图表库标准包含单图表类型的标准图表以及多图表类型混合的混搭图表&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1207274/201711/1207274-20171104100122920-524023012.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;1.2&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;Echarts中的常用名词解释&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;基本名词&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;13.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;chart&lt;/td&gt;
&lt;td&gt;是指一个完整的图表，如折线图，饼图等“基本”图表类型或由基本图表组合而成的“混搭”图表，可能包括坐标轴、图例等&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;axis&lt;/td&gt;
&lt;td&gt;直角坐标系中的一个坐标轴，坐标轴可分为类目型、数值型或时间型&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;xAxis&lt;/td&gt;
&lt;td&gt;直角坐标系中的横轴，通常并默认为类目型&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;yAxis&lt;/td&gt;
&lt;td&gt;直角坐标系中的纵轴，通常并默认为数值型&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;grid&lt;/td&gt;
&lt;td&gt;直角坐标系中除坐标轴外的绘图网格，用于定义直角系整体布局&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;legend&lt;/td&gt;
&lt;td&gt;图例，表述数据和图形的关联&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;dataRange&lt;/td&gt;
&lt;td&gt;值域选择，常用于展现地域数据时选择值域范围&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;dataZoom&lt;/td&gt;
&lt;td&gt;数据区域缩放，常用于展现大量数据时选择可视范围&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;roamController&lt;/td&gt;
&lt;td&gt;缩放漫游组件，搭配地图使用&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;toolbox&lt;/td&gt;
&lt;td&gt;辅助工具箱，辅助功能，如添加标线，框选缩放等&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;tooltip&lt;/td&gt;
&lt;td&gt;气泡提示框，常用于展现更详细的数据&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;timeline&lt;/td&gt;
&lt;td&gt;时间轴，常用于展现同一系列数据在时间维度上的多份数据&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;series&lt;/td&gt;
&lt;td&gt;数据系列，一个图表可能包含多个系列，每一个系列可能包含多个数据&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;图表名词&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;21&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;line&lt;/td&gt;
&lt;td&gt;折线图，堆积折线图，区域图，堆积区域图。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;bar&lt;/td&gt;
&lt;td&gt;柱形图（纵向），堆积柱形图，条形图（横向），堆积条形图。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;scatter&lt;/td&gt;
&lt;td&gt;散点图，气泡图。散点图至少需要横纵两个数据，更高维度数据加入时可以映射为颜色或大小，当映射到大小时则为气泡图&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;k&lt;/td&gt;
&lt;td&gt;K线图，蜡烛图。常用于展现股票交易数据。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;pie&lt;/td&gt;
&lt;td&gt;饼图，圆环图。饼图支持两种（半径、面积）南丁格尔玫瑰图模式。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;radar&lt;/td&gt;
&lt;td&gt;雷达图，填充雷达图。高维度数据展现的常用图表。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;chord&lt;/td&gt;
&lt;td&gt;和弦图。常用于展现关系数据，外层为圆环图，可体现数据占比关系，内层为各个扇形间相互连接的弦，可体现关系数据&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;force&lt;/td&gt;
&lt;td&gt;力导布局图。常用于展现复杂关系网络聚类布局。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;map&lt;/td&gt;
&lt;td&gt;地图。内置世界地图、中国及中国34个省市自治区地图数据、可通过标准GeoJson扩展地图类型。支持svg扩展类地图应用，如室内地图、运动场、物件构造等。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;heatmap&lt;/td&gt;
&lt;td&gt;热力图。用于展现密度分布信息，支持与地图、百度地图插件联合使用。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;gauge&lt;/td&gt;
&lt;td&gt;仪表盘。用于展现关键指标数据，常见于BI类系统。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;funnel&lt;/td&gt;
&lt;td&gt;漏斗图。用于展现数据经过筛选、过滤等流程处理后发生的数据变化，常见于BI类系统。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;evnetRiver&lt;/td&gt;
&lt;td&gt;事件河流图。常用于展示具有时间属性的多个事件，以及事件随时间的演化。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;treemap&lt;/td&gt;
&lt;td&gt;矩形式树状结构图，简称：矩形树图。用于展示树形数据结构，优势是能最大限度展示节点的尺寸特征。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;venn&lt;/td&gt;
&lt;td&gt;韦恩图。用于展示集合以及它们的交集。&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;tree&lt;/td&gt;
&lt;td&gt;树图。用于展示树形数据结构各节点的层级关系&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;wordCloud&lt;/td&gt;
&lt;td&gt;词云。词云是关键词的视觉化描述，用于汇总用户生成的标签或一个网站的文字内容&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、 引入Echarts&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;引入Echarts的方式有很多：&lt;/p&gt;
&lt;p&gt;1、模块化包引入&lt;/p&gt;
&lt;p&gt;2、模块化单文件引入&lt;/p&gt;
&lt;p&gt;3、标签式单文件引入&lt;/p&gt;
&lt;p&gt;这里我们就着重介绍一下第三种方式，也是最简单，我认为比较好用的一种！！&lt;/p&gt;
&lt;p&gt;ECharts 3 开始不再强制使用 AMD 的方式按需引入，代码里也不再内置 AMD 加载器。因此引入方式简单了很多，只需要像普通的 JavaScript 库一样用 script 标签引入。路径结果如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;body&amp;gt; 
&lt;span&gt; 2&lt;/span&gt;     &amp;lt;div id=&quot;main&quot; style=&quot;height:400px;&quot;&amp;gt;&amp;lt;/div&amp;gt;       //为 ECharts 准备一个具备高宽的 DOM 容器。
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    ...
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &amp;lt;script src=&quot;js/echarts.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;script&amp;gt;
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; myChart = echarts.init(document.getElementById('main'&lt;span&gt;));　　//基于准备好的dom，初始化echarts实例
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; option =&lt;span&gt; {　　　　　　　　　　　
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            ...　　　　　　　　　　　　//指定图表的配置项和数据　　
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        myChart.setOption(option);　　　　　//使用刚指定的配置项和数据显示图表。　　　　　　　&lt;br/&gt;&lt;/span&gt;11 &amp;lt;/script&amp;gt; &lt;br/&gt;&lt;span&gt;12&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三、 具体小实例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;由于Echarts中的属性很多，接下来我就通过两个小李子给大家介绍一下其中的基本属性的使用吧~~~&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;3.1&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;实例一：柱状图&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 基于准备好的dom，初始化echarts实例&lt;/span&gt;
               &lt;span&gt;var&lt;/span&gt; myChart = echarts.init(document.getElementById('main'&lt;span&gt;));
               &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定图表的配置项和数据&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; option =&lt;span&gt; {
                title: {                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题，每个图表最多仅有一个标题控件，每个标题控件可设主副标题。&lt;/span&gt;
                    text: 'ECharts 入门示例',        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;主标题文本&lt;/span&gt;
                    subtext:'该图表纯属虚构',        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;副标题文本&lt;/span&gt;
                    x:'left',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题水平安放位置，默认为left。可选值有left、right、center&lt;/span&gt;
                    y:'top',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题垂直安放位置，默认为top。可选值有top、bottom、center&lt;/span&gt;
                    textAlign:'left',            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题水平对齐方式，默认根据x设置自动调整。可选值有left、right、center&lt;/span&gt;
                    backgroundColor:'rgba(0,0,0,0)',        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题背景颜色，默认透明&lt;/span&gt;
                    textStyle:{                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;主标题文本样式&lt;/span&gt;
                        fontSize: 18&lt;span&gt;,
                        fontWeight: &lt;/span&gt;'bolder'&lt;span&gt;,
                        color: &lt;/span&gt;'#333'&lt;span&gt;
                    },
                    subtextStyle:{
                        color: &lt;/span&gt;'#aaa'            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;副标题文本样式&lt;/span&gt;
&lt;span&gt;                    }
                },
                tooltip: {},                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;提示框，鼠标悬浮交互时的信息提示。&lt;/span&gt;
                legend: {                        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例，每个图表最多仅有一个图例。&lt;/span&gt;
                    data:['销量'],                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例内容数组&lt;/span&gt;
                    x:'center',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例水平安放位置，默认为全图居中。可选值有left、right、center&lt;/span&gt;
                    y:'top',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例垂直安放位置，默认为top。可选值有top、bottom、center&lt;/span&gt;
&lt;span&gt;                },
                xAxis: {                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;直角坐标系中横轴数组&lt;/span&gt;
                    data: [&quot;衬衫&quot;,&quot;羊毛衫&quot;,&quot;雪纺衫&quot;,&quot;裤子&quot;,&quot;高跟鞋&quot;,&quot;袜子&quot;&lt;span&gt;]
                },
                yAxis: {},                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;直角坐标系中纵轴数组&lt;/span&gt;
                series: [{                        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据内容&lt;/span&gt;
                    name: '销量',                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;系列名称，如启用legend，该值将被legend.data索引相关&lt;/span&gt;
                    type: 'bar',                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图表类型，必要参数！如为空或不支持类型，则该系列数据不被显示。可选值为line(折线图)，bar(柱状图)，scatter(散点图)&lt;/span&gt;
                    data: [5, 20, 36, 10, 10, 20]    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据&lt;/span&gt;
&lt;span&gt;                }]
            };
    
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用刚指定的配置项和数据显示图表。&lt;/span&gt;
&lt;span&gt;            myChart.setOption(option);
        &lt;/span&gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1207274/201711/1207274-20171104110253435-739684988.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;3.2&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;饼图&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;73&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
        &amp;lt;title&amp;gt;ECharts&amp;lt;/title&amp;gt;
        &amp;lt;!-- 引入 echarts.js --&amp;gt;
        &amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/echarts.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;

    &amp;lt;body&amp;gt;
        &amp;lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&amp;gt;
        &amp;lt;div id=&quot;main&quot; style=&quot;width: 800px;height:400px;&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 基于准备好的dom，初始化echarts实例&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; myChart = echarts.init(document.getElementById('main'&lt;span&gt;));

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定图表的配置项和数据&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; option =&lt;span&gt; {
                title: {
                    text: &lt;/span&gt;'某站点用户访问来源',        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;主标题文本&lt;/span&gt;
                    subtext: '纯属虚构',            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;副标题文本&lt;/span&gt;
                    x: 'center'                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;标题水平安放位置&lt;/span&gt;
&lt;span&gt;                },&lt;/span&gt;
                series: [{                                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据内容&lt;/span&gt;
                    name: '访问来源',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;系列名称，如启用legend，该值将被legend.data索引相关&lt;/span&gt;
                    type: 'pie',                        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图表类型，必要参数！&lt;/span&gt;
                    radius: '55%',                        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;半径&lt;/span&gt;
                    center: ['50%', '60%'],                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;圆心坐标&lt;/span&gt;
                    data: [{                            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据&lt;/span&gt;
                            value: 335&lt;span&gt;,
                            name: &lt;/span&gt;'直接访问'&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;310&lt;span&gt;,
                            name: &lt;/span&gt;'邮件营销'&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;234&lt;span&gt;,
                            name: &lt;/span&gt;'联盟广告'&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;135&lt;span&gt;,
                            name: &lt;/span&gt;'视频广告'&lt;span&gt;
                        },
                        {
                            value: &lt;/span&gt;1548&lt;span&gt;,
                            name: &lt;/span&gt;'搜索引擎'&lt;span&gt;
                        }
                    ]
                }],
                tooltip: {                         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;提示框，鼠标悬浮交互时的信息提示&lt;/span&gt;
                    trigger: 'item',            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;触发类型，默认数据触发，可选值有item和axis&lt;/span&gt;
                    formatter: &quot;{a} &amp;lt;br/&amp;gt;{b} : {c} ({d}%)&quot;,    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标指上时显示的数据  a（系列名称），b（类目值），c（数值）, d（占总体的百分比）&lt;/span&gt;
                    backgroundColor: 'rgba(0,0,0,0.7)'    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;提示背景颜色，默认为透明度为0.7的黑色&lt;/span&gt;&lt;span&gt;
                },
                legend: {                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例，每个图表最多仅有一个图例。&lt;/span&gt;
                    orient: 'vertical',                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;布局方式，默认为水平布局，可选值有horizontal(竖直)和vertical(水平)&lt;/span&gt;
                    x: 'left',                            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图例水平安放位置，默认为全图居中。可选值有left、right、center&lt;/span&gt;
                    data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎'&lt;span&gt;]
                },
                toolbox: {                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;工具箱，每个图表最多仅有一个工具箱。&lt;/span&gt;
                    show: &lt;span&gt;true&lt;/span&gt;,                            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示策略，可选为：true（显示） | false（隐藏）&lt;/span&gt;
                    feature: {                            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;启用功能&lt;/span&gt;
                        dataView: {                        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据视图&lt;/span&gt;
                            show: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            readOnly: &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;readOnly 默认数据视图为只读，可指定readOnly为false打开编辑功能&lt;/span&gt;
&lt;span&gt;                        },
                        restore: {                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;还原，复位原始图表   右上角有还原图标&lt;/span&gt;
                            show: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                        },
                        saveAsImage: {                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存图片（IE8-不支持），默认保存类型为png，可以改为jpeg&lt;/span&gt;
                            show: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                            type:&lt;/span&gt;'jpeg'&lt;span&gt;,
                            title : &lt;/span&gt;'保存为图片'&lt;span&gt;
                        }
                    }
                }
            };

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用刚指定的配置项和数据显示图表。&lt;/span&gt;
&lt;span&gt;            myChart.setOption(option);
        &lt;/span&gt;&amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 运行效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1207274/201711/1207274-20171104110320779-1035071237.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;四、 给大家介绍一下其他的制作图表的框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;4.1&lt;/span&gt;MSChart&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;这个是Visual Studio里的自带控件，使用比较简单，不过数据这块需要在后台绑定。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;4.2&lt;/span&gt;ichart.js&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;是一款基于HTML5的图形库。使用纯javascript语言, 利用HTML5的canvas标签绘制各式图形。 支持饼图、环形图、折线图、面积图、柱形图、条形图等。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;4.3&lt;/span&gt;Chart.js&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;也是一款基于HTML5的图形库和ichartjs整体类似。不过Chart.js的教程文档没有ichartjs的详细。不过感觉在对于移动的适配上感觉比ichartjs要好一点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;优点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　1.轻量级，min版总大小50多k。&lt;br/&gt;　　2.移动端使用比较流畅，毕竟小。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;p&gt;　　1.功能欠缺比较多。&lt;/p&gt;
&lt;p&gt;　　2.中文文档奇缺。&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;4.3&lt;/span&gt;&lt;span&gt;Echarts.js&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;使用这个库的原因主要有三点，一个是因为这个库是百度的项目，而且一直有更新，目前最新的是EChart 3；第二个是这个库的项目文档比较详细，每个点都说明的比较清楚，而且是中文的，理解比较容易；第三点是这个库支持的图形很丰富，并且可以直接切换图形，使用起来很方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;优点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;1&lt;/span&gt;.国人开发，文档全，便于开发和阅读文档。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2.图表丰富，可以适用各种各样的功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;缺点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　移动端使用略卡，毕竟是PC端的东西，移植到移动端肯定多多少少有些问题吧，或许跟自己水平也有一定的关系，哎怎么说呢。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;
&lt;h4 class=&quot;135brush&quot;&gt;今天就给大家分享到这啦，有什么不明白的或者是对这篇博客有什么意见的，欢迎大家留言~~~谢谢大家！！！&lt;/h4&gt;
&lt;/p&gt;
</description>
<pubDate>Sat, 04 Nov 2017 03:18:00 +0000</pubDate>
<dc:creator>榆木疙瘩ii</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuhao752718372/p/7782358.html</dc:identifier>
</item>
</channel>
</rss>