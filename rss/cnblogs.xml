<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>CentOS 7搭建LAMP环境（一） - kMacro</title>
<link>http://www.cnblogs.com/zkh101/p/7623073.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zkh101/p/7623073.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/5266042-93f8d4c177f01aea?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;CentOS是Linux发行版之一，它是来自于Red Hat Enterprise Linux依照开放源代码规定释出的源代码所编译而成。由于出自同样的源代码，因此有些要求高度稳定性的服务器以CentOS替代商业版的Red Hat Enterprise Linux使用。两者的不同，在于CentOS并不包含封闭源代码软件。&lt;br/&gt;CentOS 7的安装在这里不进行介绍(可自行谷歌)，这篇文章主要介绍CentOS 7 最小化安装下LAMP环境的配置以及常见问题的解决方案。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;一-配置网络&quot;&gt;一、 配置网络&lt;/h2&gt;
&lt;p&gt;安装完CentOS7后第一件事情就是配置服务器网络，可以使用ifconfig命令查看当前网络信息，但CentOS7最小化默认是不提供该命令的，我们可以执行以下命令安装ifconfig工具。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum install –y net-tools        //完成后就可以使用ifconfig命令了&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在配置网络，注意需要root用户才能修改配置文件。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# cd /etc/sysconfig/network-scripts/
# cp ./ifcfg-enp0s3 ./ifcfg-enp0s3.bak   //修改配置文件前进行备份
# vi ifcfg-enp0s3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后根据需要进行修改，这里采用默认配置（如果“ONBOOT”为“no”，将其改为“ye”，这样在下次启动服务器时就会自动打开网络服务），配置完成后保存，重启网络服务。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# service network restart&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;二-更新和升级centos&quot;&gt;二、 更新和升级CentOS&lt;/h2&gt;
&lt;p&gt;定期的更新升级，安装已有软件的最新版本以及系统安装升级，可以让你的服务器更安全稳定。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum –y update &amp;amp;&amp;amp; yum –y upgrade&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;三-修改ssh配置&quot;&gt;三、 修改ssh配置&lt;/h2&gt;
&lt;p&gt;CentOS 7 默认允许任何帐号透过ssh登入，为了不让root帐号被黑客暴力入侵，我们必须禁用root 帐号的ssh功能，事实上root也没必要使用ssh登入服务器，因为只要使用su (当然需要输入root的密码) 普通帐号便可以拥有root权限。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# vi /etc/ssh/ssh_config&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将“#Protocol 1,2”改为“Protocol 2”，“#PermitRootLogin yes”改为“PermitRootLogin no”，添加“AllowUsers 你的普通账户名”，然后保存，重启ssh服务。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# vi systemctl restart sshd.service&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;四-安装apache-http服务器&quot;&gt;四、 安装Apache HTTP服务器&lt;/h2&gt;
&lt;p&gt;httpd是Apache服务器的主程序，被设计为一个独立运行的后台进程，它会建立一个处理请求的子进程或线程的池。接下来安装httpd。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum –y install httpd&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;完成后开启httpd服务，并且让其在重启系统时自启动。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# systemctl start httpd.service
# systemctl enable httpd.service&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接着配置防火墙允许服务器被外部访问&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# firewall-cmd --permanent --add-service=http --add-port=80/tcp
    //apache默认为80端口，如果你修改了默认端口，这里要改为相应端口号
# firewall-cmd –reload
# systemctl restart httpd.service&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;五-安装php&quot;&gt;五、 安装PHP&lt;/h2&gt;
&lt;p&gt;PHP是一种通用开源脚本语言，使用广泛，主要适用于Web开发领域。Linux操作系统下安装PHP非常简单，只需执行一下命令即可。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum –y install php
# systemctl restart httpd.service&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;六-安装mariadb数据库&quot;&gt;六、 安装MariaDB数据库&lt;/h2&gt;
&lt;p&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。MariaDB的目的是完全兼容MySQL，包括API和命令行，是目前最受关注的MySQL数据库衍生版，也被视为开源数据库MySQL的替代品。在CentOS7下安装MariaDB，如下所示：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum –y install mariadb-server mariadb
# systemctl start mariadb.service
# systemctl enable mariadb.service
#firewall-cmd --add-service=mysql       //允许MariaDB被远程访问&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;安装完成后记得修改数据库密码。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# set password for 'root'@'localhost' =password('密码');
# systemctl restart mariadb.service&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;七-安装phpmyadmin&quot;&gt;七、 安装phpMyAdmin&lt;/h2&gt;
&lt;p&gt;phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，让管理者可用Web接口管理MySQL数据库。安装方式如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# yum –y install phpmyadmin&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;八总结&quot;&gt;八、总结&lt;/h2&gt;
&lt;p&gt;到此，CentOS 7 + LAMP环境就搭建完成了，可以将你的PHP网站部署到“/var/www/html”下，这样一台最基本的WEB服务器就搭建好了。当然，部署网站过程中可能会遇到一些问题，比如不能上传文件、上传文件类型大小限制等问题，以及要如何高效便捷地管理你的远程服务器，将在下一篇文章给大家介绍。&lt;/p&gt;
&lt;blockquote readability=&quot;2.7127659574468&quot;&gt;
&lt;p&gt;本文为作者&lt;a href=&quot;http://www.jianshu.com/u/7c65dc20fdaa&quot;&gt;kMacro&lt;/a&gt;原创，转载请注明来源：&lt;a href=&quot;http://www.jianshu.com/p/fabe5842c0e1&quot; class=&quot;uri&quot;&gt;http://www.jianshu.com/p/fabe5842c0e1&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Mon, 02 Oct 2017 17:02:00 +0000</pubDate>
<dc:creator>kMacro</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zkh101/p/7623073.html</dc:identifier>
</item>
<item>
<title>机器学习数学基础之矩阵论（一） - tanv</title>
<link>http://www.cnblogs.com/tan-v/p/7623054.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tan-v/p/7623054.html</guid>
<description>&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一、向量运算&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;     &lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;假设&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;x, y&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002441474-343749606.png&quot;&gt;&lt;img title=&quot;clip_image001[10]_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002441786-512186277.png&quot; alt=&quot;clip_image001[10]_thumb&quot; width=&quot;13&quot; height=&quot;13&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;R&lt;/span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;即&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;x&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;=(x&lt;/span&gt;&lt;sub&gt;&lt;span&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;, x&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;),&lt;strong&gt;y&lt;/strong&gt;=(y&lt;/span&gt;&lt;sub&gt;&lt;span&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;,y&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;     1.&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;加法：&lt;span lang=&quot;EN-US&quot;&gt;𝒙&lt;span lang=&quot;EN-US&quot;&gt;+&lt;span lang=&quot;EN-US&quot;&gt;𝒚 &lt;span lang=&quot;EN-US&quot;&gt;= (&lt;span lang=&quot;EN-US&quot;&gt;𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;+&lt;span lang=&quot;EN-US&quot;&gt;𝑦&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;span lang=&quot;EN-US&quot;&gt;𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;+&lt;span lang=&quot;EN-US&quot;&gt;𝑦&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;     2.&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;数乘：&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;𝑎𝒙 &lt;span lang=&quot;EN-US&quot;&gt;= (&lt;span lang=&quot;EN-US&quot;&gt;𝑎𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;span lang=&quot;EN-US&quot;&gt;𝑎𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;     3.&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;内积：&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;𝒙𝒚 &lt;span lang=&quot;EN-US&quot;&gt;= &lt;span lang=&quot;EN-US&quot;&gt;𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;𝑦&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;+ &lt;span lang=&quot;EN-US&quot;&gt;𝑥&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;𝑦&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;二、矩阵&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;何为线性？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;数乘和加法统称为线性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵的定义：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;由&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;×&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/em&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;个数&lt;span lang=&quot;EN-US&quot;&gt;𝑎&lt;sub&gt;𝑖𝑗&lt;/sub&gt;(𝑖&lt;span lang=&quot;EN-US&quot;&gt;=1,2,..,&lt;span lang=&quot;EN-US&quot;&gt;𝑚&lt;span lang=&quot;EN-US&quot;&gt;; &lt;span lang=&quot;EN-US&quot;&gt;𝑗&lt;span lang=&quot;EN-US&quot;&gt;=1,2,…,&lt;span lang=&quot;EN-US&quot;&gt;𝑛)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;排成的&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;行、&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/em&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;列的数表&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002442021-1901609047.png&quot;&gt;&lt;img title=&quot;clip_image002[12]_thumb[2]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002442224-962387151.png&quot; alt=&quot;clip_image002[12]_thumb[2]&quot; width=&quot;238&quot; height=&quot;83&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;称为&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;列矩阵，简称&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;×&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/em&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;矩阵，常用大写字母表示，记作&lt;span lang=&quot;EN-US&quot;&gt;𝐴&lt;span&gt;、&lt;span lang=&quot;EN-US&quot;&gt;𝐴&lt;sub&gt;𝑚&lt;/sub&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;×&lt;span lang=&quot;EN-US&quot;&gt;𝑛&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;或者&lt;span lang=&quot;EN-US&quot;&gt;(&lt;span lang=&quot;EN-US&quot;&gt;𝑎&lt;sub&gt;𝑖𝑗&lt;/sub&gt;)𝑚&lt;span lang=&quot;EN-US&quot;&gt;×&lt;span lang=&quot;EN-US&quot;&gt;𝑛&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其中&lt;span lang=&quot;EN-US&quot;&gt;𝑎&lt;sub&gt;𝑖𝑗&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;为矩阵第&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;i&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;行、第&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span lang=&quot;EN-US&quot;&gt;j&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;列的元素。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;．矩阵的作用：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;统一表示线性方程和线性变换，方便处理线性方程和线性变换的问题。研究矩阵的算法和性质，即研究了线性方程和线性变换的性质。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵的本质：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵是线性方程组系数的一种简化表示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;矩阵，英文单词：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;matrix&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，母体的意思，说明矩阵就是线性方程的母体，即主体部分。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;5.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;特殊的矩阵&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）方阵：行数和列数都等于&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的矩阵，记作&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）单位矩阵：对角线上元素为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，其余为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的方阵，记作&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;I&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;E&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）对角矩阵：只有对角线上有元素，其余为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的方阵，简称对角阵，记作&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;          A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=&lt;strong&gt;diag&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(a&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;,a&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;,…a&lt;sub&gt;n&lt;/sub&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;Λ&lt;/span&gt;&lt;/strong&gt; &lt;span lang=&quot;EN-US&quot;&gt;=&lt;strong&gt;diag&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;λ&lt;/span&gt;&lt;sub&gt;&lt;span&gt;1&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;,λ&lt;/span&gt;&lt;sub&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;,…,λ&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）零矩阵：元素全为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的矩阵，记作&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;×n&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）三角矩阵：只有对角线以上&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;下&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;有元素，其余为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的矩阵，称为上&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;下&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三角矩阵。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵和向量的关系：向量包含与矩阵，向量是矩阵的一部分。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;元行向量可以看成&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;列的矩阵。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;元列向量可以看成&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;列的矩阵。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;列的矩阵可以表示为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;元行向量构成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;列的矩阵可以表示为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;列&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;元列向量构成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;二、矩阵的基本运算&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵相等：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;如果两个矩阵的行数和列数相等，并且对应的每个元素都相等，则这两个矩阵相等，记作&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Ｂ&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　注意：不同阶数的矩阵是不同等的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;２&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵加法：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002442427-1174589849.png&quot;&gt;&lt;img title=&quot;clip_image003[10]_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002442646-309360569.png&quot; alt=&quot;clip_image003[10]_thumb&quot; width=&quot;296&quot; height=&quot;35&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;   &lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002442880-565458697.png&quot;&gt;&lt;img title=&quot;clip_image004[10]_thumb[1]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002443099-611091077.png&quot; alt=&quot;clip_image004[10]_thumb[1]&quot; width=&quot;423&quot; height=&quot;38&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002443302-1467132065.png&quot;&gt;&lt;img title=&quot;clip_image005[10]_thumb[1]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002443583-958259089.png&quot; alt=&quot;clip_image005[10]_thumb[1]&quot; width=&quot;389&quot; height=&quot;68&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（１）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;具有相同行数和列数的矩阵才能相加。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（２）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵的加法是２个同型矩阵对应位置上的元素相加。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（３）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵没有减法，矩阵相减通过矩阵加上一个负矩阵来实现，等于２个同型矩阵对应位置上的元素相减。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（４）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵加法的运算规律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;１）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;结合律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;A + ( B + C ) = ( A + B ) + C&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;２）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;交换律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;A + B = B + A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;３）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;零矩阵运算：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A + O = A&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A + ( - A ) = O&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;３&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵数乘运算&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;设&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;为实数，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;= ( a&lt;/span&gt;&lt;sub&gt;&lt;span&gt;ij&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为矩阵，称矩阵&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为数与矩阵的乘积，简称数乘运算，记为kA&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;= (ka&lt;sub&gt;ij&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（１）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;运算规律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;1 &lt;strong&gt;A&lt;/strong&gt; = &lt;strong&gt;A&lt;/strong&gt; ,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( k + l ) &lt;strong&gt;A&lt;/strong&gt; = k&lt;strong&gt;A&lt;/strong&gt; + l&lt;strong&gt;A&lt;/strong&gt; ,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;3）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;k (&lt;strong&gt;A&lt;/strong&gt; + &lt;strong&gt;B&lt;/strong&gt; ) = k&lt;strong&gt;A&lt;/strong&gt; + k&lt;strong&gt;B&lt;/strong&gt; ,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;4）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;k ( l&lt;strong&gt;A&lt;/strong&gt; ) = ( kl ) &lt;strong&gt;A&lt;/strong&gt; ,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;矩阵与矩阵的乘法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）为什么矩阵相乘不能像矩阵加法和数乘一样对应位置元素进行运算即可？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用方程组来解释：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;矩阵加法和数乘对应的就是线性系统之间的加法和数乘。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;两个矩阵间对应位置元素相乘没有意义，并且相乘之后线性系统等号不再成立。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（２）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵相乘定义：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;设&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;= ( a&lt;/span&gt;&lt;sub&gt;&lt;span&gt;ij&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;)&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;sub&gt;s&lt;/sub&gt; , &lt;strong&gt;B&lt;/strong&gt; = ( b&lt;/span&gt;&lt;sub&gt;&lt;span&gt;ij&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;)&lt;sub&gt;s&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span&gt;&lt;span&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;sub&gt;n&lt;/sub&gt; ,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;那么规定矩阵&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;C&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;= ( c&lt;/span&gt;&lt;sub&gt;&lt;span&gt;ij&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;)&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;×&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002443818-1097270377.jpg&quot;&gt;&lt;img title=&quot;clip_image007[10]_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002444083-1170869928.jpg&quot; alt=&quot;clip_image007[10]_thumb&quot; width=&quot;698&quot; height=&quot;57&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;称为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;与&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的乘积，或&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;左乘&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;strong&gt;B&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;右乘&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，记为&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;C&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;= &lt;strong&gt;AB&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;即：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;     乘积矩阵的第&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行第&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;列的元素&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;左矩阵的第&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行向量与右矩阵的第&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;列向量做内积。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;只有当左矩阵的列数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;右矩阵的行数时，两个矩阵才能相乘，C&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;×n&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;= A&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;mxs&lt;/span&gt;&lt;/sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;sub&gt;sxn&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;矩阵乘法不满足交换律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;AB&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;不一定等于&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;BA&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;3）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;两个非零矩阵的乘积可能是零矩阵。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（３）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;运算规律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;结合律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( &lt;strong&gt;AB&lt;/strong&gt; )&lt;strong&gt;C&lt;/strong&gt; = &lt;strong&gt;A&lt;/strong&gt;( &lt;strong&gt;BC&lt;/strong&gt; );&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;分配律：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( &lt;strong&gt;B&lt;/strong&gt; + &lt;strong&gt;C&lt;/strong&gt; ) = &lt;strong&gt;AB&lt;/strong&gt; + &lt;strong&gt;AC&lt;/strong&gt;, ( &lt;strong&gt;B&lt;/strong&gt; + &lt;strong&gt;C&lt;/strong&gt; ) &lt;strong&gt;A&lt;/strong&gt; = &lt;strong&gt;BA&lt;/strong&gt; + &lt;strong&gt;CA&lt;/strong&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;3）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;k ( &lt;strong&gt;AB&lt;/strong&gt; )= ( k&lt;strong&gt;A&lt;/strong&gt; ) &lt;strong&gt;B&lt;/strong&gt; (&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其中&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;k&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;为实数&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;4）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;单位矩阵满足交换律：I&lt;sub&gt;n&lt;/sub&gt;A&lt;sub&gt;n&lt;/sub&gt;=A&lt;sub&gt;n&lt;/sub&gt;I&lt;sub&gt;n&lt;/sub&gt;=A&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（４）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从本质上来讲：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;矩阵是一个线性变换，矩阵乘法就是一个复合，就是求复合函数的变换。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;5.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵的转置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002444333-1376350196.png&quot;&gt;&lt;img title=&quot;clip_image008_thumb[2]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002444536-1560860046.png&quot; alt=&quot;clip_image008_thumb[2]&quot; width=&quot;455&quot; height=&quot;111&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;为矩阵&lt;/span&gt; &lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;的转置，记作&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;a&lt;sub&gt;ij&lt;/sub&gt;&lt;sup&gt;T&lt;/sup&gt;= a&lt;sub&gt;ji&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，即，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;把行向量变成了列向量。（形式变了，但是本质没有变，只是为了便于计算）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;运算规律：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（１）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;(&lt;/span&gt; &lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;)&lt;/span&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=&lt;/span&gt; &lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（２）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( &lt;strong&gt;A&lt;/strong&gt; + &lt;strong&gt;B&lt;/strong&gt; )&lt;/span&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=&lt;/span&gt; &lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;+&lt;/span&gt; &lt;strong&gt;&lt;span&gt;B&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（３）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( k &lt;strong&gt;A&lt;/strong&gt; )&lt;/span&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;= k&lt;/span&gt; &lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（４）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;( &lt;strong&gt;AB&lt;/strong&gt; )&lt;/span&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=&lt;/span&gt; &lt;strong&gt;&lt;span&gt;B&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;sup&gt;&lt;span&gt;T&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;方阵的行列式&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;行列式英文单词&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;determine&lt;/span&gt;&lt;span&gt;，意思是决定因子，说明它将决定矩阵的一些性质（决定线性方程组是否有唯一解），行列式记作：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;det(&lt;strong&gt;A&lt;/strong&gt;)&lt;/span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;|&lt;strong&gt;A&lt;/strong&gt;|.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（１）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行列式的性质&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;1）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;只有方阵才可以定义行列式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;2）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;如果&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是对角阵或者三角阵，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;|&lt;strong&gt;A&lt;/strong&gt;|&lt;/span&gt;&lt;span&gt;为对角线的乘积，比如&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;|&lt;/span&gt;&lt;strong&gt;&lt;span&gt;I&lt;/span&gt;&lt;/strong&gt;&lt;sub&gt;&lt;span&gt;n&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;|=1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;3）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;|kA&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=k&lt;sup&gt;n&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;|A&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;4）&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;AB&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;BA&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;不一定相等，但是&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;|AB&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;|&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=|BA&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;|&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=|A&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;||B|&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（２）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;行列式的应用：克莱默&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(Cramer)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;法则：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;如果线性方程组&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002444755-1136980932.png&quot;&gt;&lt;img title=&quot;clip_image009_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002445005-2125323465.png&quot; alt=&quot;clip_image009_thumb&quot; width=&quot;344&quot; height=&quot;119&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;的系数矩阵的行列式不等于零，即&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002445208-1891721523.png&quot;&gt;&lt;img title=&quot;clip_image010_thumb[2]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002445458-156112676.png&quot; alt=&quot;clip_image010_thumb[2]&quot; width=&quot;263&quot; height=&quot;141&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;则线性方程组&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(1)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;有唯一解。其解为：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002445677-1465073677.png&quot;&gt;&lt;img title=&quot;clip_image011_thumb[3]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002445849-841002150.png&quot; alt=&quot;clip_image011_thumb[3]&quot; width=&quot;358&quot; height=&quot;54&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;其中&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002446036-481152275.png&quot;&gt;&lt;img title=&quot;clip_image012_thumb[2]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002446271-562054534.png&quot; alt=&quot;clip_image012_thumb[2]&quot; width=&quot;352&quot; height=&quot;136&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;即&lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;D&lt;/span&gt;&lt;/strong&gt;&lt;sub&gt;&lt;span lang=&quot;EN-US&quot;&gt;j&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;是把系数矩阵行列式&lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;D&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;中的第&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;j&lt;/span&gt;&lt;span&gt;列的元素替换成方程组右端的常数项的列向量，所得到的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;阶行列式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;7.&lt;/span&gt;&lt;span&gt;矩阵的逆&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;-1&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）逆矩阵的定义&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt; &lt;span&gt;设&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;span&gt;阶方阵，如果有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;span&gt;阶方阵&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，使得&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;AB = BA = I&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt; &lt;span&gt;则称&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;为可逆矩阵，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;的逆阵，记作&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;B=A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;-1&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;只要&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;AB = I&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，必然有&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;BA =I&lt;sub&gt;n&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）逆矩阵的性质&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(A&lt;/span&gt;&lt;sup&gt;&lt;span lang=&quot;EN-US&quot;&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=A&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;(kA)&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=(1/k)A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;(k&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;≠&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;0)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;B&lt;/span&gt; &lt;span&gt;均是同阶可逆阵，则&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;(AB)&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;=B&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;span&gt;）转置和逆可交换，即&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;(A&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;span&gt;)&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;=(A&lt;sup&gt;T&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;sup&gt;&lt;span&gt;−1&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;8.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵的秩&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;秩，英文单词&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;rank&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，意思是阶，等级的意思，说明秩就是矩阵的阶数。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（１）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵的初等行（列）变换：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;对换两行（列）的位置；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span&gt;）将常数&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;k (k&lt;/span&gt;&lt;span&gt;≠&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0)&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;乘以某行（列）向量；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span&gt;）将某行（列）的元素乘上&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;倍加到另一个行（列）上&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;经过初等变换之后，矩阵变了但是其代表的线性系统没有变。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（２）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;秩的定义：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;对于任一矩阵&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，经过初等变换可以把它变成&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002446505-1069216390.png&quot;&gt;&lt;img title=&quot;clip_image013_thumb[1]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002446755-1231366476.png&quot; alt=&quot;clip_image013_thumb[1]&quot; width=&quot;151&quot; height=&quot;64&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;这里，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;r&lt;/span&gt; &lt;span&gt;是由&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt; &lt;span&gt;唯一决定的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt; &lt;span&gt;这个&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;r&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;称为矩阵的秩&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（３）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;秩的求法：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;只用初等行&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;列&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;span&gt;变换把矩阵&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;化为阶梯矩阵，阶梯矩阵中不为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;span&gt;向量的行&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;列&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;span&gt;数为矩阵&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的秩。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（４）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;行秩、列秩&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;用行变换得到的秩称为行秩；用列变换得到的秩称为列秩；行秩&lt;/span&gt; &lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;列秩&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（５）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;秩的本质：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;矩阵在其等价的线性变换&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;初等变换&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;中，本质（无法被消去）的部分，即&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;可认为秩是线性方程组有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;r&lt;/span&gt;&lt;span&gt;个未知变量&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;列秩&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;span&gt;或&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;r&lt;/span&gt;&lt;span&gt;个方程&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span&gt;行秩&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。（于是决定着方程组是否有唯一解）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（６）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;秩的性质&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span&gt;）零矩阵的秩是&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span&gt;）如果A&lt;sub&gt;m&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;sub&gt;&lt;span&gt;&lt;span&gt;×n&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;,&lt;/span&gt; &lt;span&gt;则&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;R(A)&lt;/span&gt; &lt;span&gt;≤&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;m, R(A)&lt;/span&gt; &lt;span&gt;≤&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n, 0&lt;/span&gt; &lt;span&gt;≤&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;R(A)&lt;/span&gt; &lt;span&gt;≤&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;min { m , n }&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span&gt;）r&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(AB)&lt;/span&gt;&lt;span&gt;≤&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;{r(A), r (B)}&lt;span&gt; &lt;/span&gt; (&lt;/span&gt;&lt;span&gt;越相乘秩可能越小&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;span&gt;）如果&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;可逆，那么r&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;(B)=r(AB)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;5)&lt;/span&gt; &lt;span&gt;如果&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;是&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;阶方阵，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002447021-2062003424.png&quot;&gt;&lt;img title=&quot;clip_image014_thumb[4]&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002447255-156705244.png&quot; alt=&quot;clip_image014_thumb[4]&quot; width=&quot;259&quot; height=&quot;71&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;的行列式不等于零，说明线性方程组有唯一解，说明线性方程组的系数矩阵&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;满秩，说明&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;可逆。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;9.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;矩阵的迹&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span&gt;）定义：方阵&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;A&lt;/span&gt;&lt;span&gt;的对角线之和，称为迹，记作&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;tr(A),&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;即&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoListParagraph&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002447458-413320476.png&quot;&gt;&lt;img title=&quot;clip_image015_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002447646-389549945.png&quot; alt=&quot;clip_image015_thumb&quot; width=&quot;190&quot; height=&quot;81&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;）运算性质&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;  &lt;/span&gt; 1&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;span&gt;矩阵的迹&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;该矩阵的特征值之和&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span&gt;       &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002447911-1574867775.png&quot;&gt;&lt;img title=&quot;clip_image016_thumb&quot; src=&quot;http://images2017.cnblogs.com/blog/718363/201710/718363-20171003002448130-1317096401.png&quot; alt=&quot;clip_image016_thumb&quot; width=&quot;160&quot; height=&quot;37&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;   &lt;/span&gt; 2&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;tr(AB) = tr(BA)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; align=&quot;justify&quot;&gt;&lt;span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;        - tany 2017年10月2日于杭州&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 16:48:00 +0000</pubDate>
<dc:creator>tanv</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tan-v/p/7623054.html</dc:identifier>
</item>
<item>
<title>元素宽高未知，如何让它水平且垂直居中的六种方法！！！ - 萝卜爱吃青菜</title>
<link>http://www.cnblogs.com/hjj2ldq/p/7623042.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hjj2ldq/p/7623042.html</guid>
<description>&lt;p&gt;这类问题是面试中经常出现的css问题。那么你会吗？会的话，你能想出几种解决方案呢？我这里大致列举六个方法！&lt;/p&gt;
&lt;p&gt;1.弹性盒模型flex布局&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .wrap&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; flex&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        justify-content&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;主轴居中对齐&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        align-items&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;交叉轴即y方向剧中对齐&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.利用伪类来对齐&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .wrap&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .wrap:after&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        content&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; ''&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;width:0;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.利用空span，原理与上面的类似&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .wrap&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    span&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.利用表格的特性：单元表格的内容默认垂直居中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt; &amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;br/&gt;&lt;em id=&quot;__mceDel&quot;&gt;    .wrap&lt;span&gt;{&lt;/span&gt;&lt;/em&gt;  width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;　　　　 border-collapse: collapse;&lt;br/&gt;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;margin: 0 auto;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;或者&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.将块标签转换成表格属性，display:table-cell&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .wrap&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; table-cell&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        text-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; center&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; inline-block&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        vertical-align&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; middle&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6.利用相对定位和transform&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    .wrap&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 500px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;display: table-cell;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;text-align: center;&lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
    .box&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 333px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; blue&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;//不脱离文档流，left,top移动父级的百分之五十&lt;/span&gt;&lt;span&gt;
        left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 50%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        -webkit-transform&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; translateX(-50%) translateY(-50%)//即使未知元素自身宽高，自动计算后x,y轴移动元素自身宽高的负百分之五十
    &lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;box&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总结：span和伪类对齐方法主要是利用了空内容将基线定在了父级元素的中间位置，然后用inline-block结合vertical-align:middle. table的2种方法则是利用了表格的自带属性，弹性盒模型的话就不用多说了，强大的爱不释手，&lt;/p&gt;
&lt;p&gt;transform和相对定位结合处理的话，因为要依据父级宽高所以用相对定位，用绝对定位的话会一层层找到顶级，transform再根据自身宽高负方向移动半个宽高。&lt;/p&gt;
&lt;p&gt;关于基线对准问题可参考张鑫旭老师的博客，写的非常详细，可自行百度。&lt;/p&gt;
&lt;p&gt;关于弹性盒模型的参数介绍可查看文档或者是阮一峰老师的博客。&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 16:15:00 +0000</pubDate>
<dc:creator>萝卜爱吃青菜</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hjj2ldq/p/7623042.html</dc:identifier>
</item>
<item>
<title>算法的复杂度学习笔记 - 小陈博客</title>
<link>http://www.cnblogs.com/smallchen/p/algorithm-complexity.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/smallchen/p/algorithm-complexity.html</guid>
<description>&lt;p&gt;同一个问题可以用不同的算法实现，而算法是有优劣之分的。我们经常需要对算法进行分析，以便于选择合适的算法和改进算法。&lt;/p&gt;
&lt;p&gt;通常我们从两个维度来描述算法的优劣：程序代码的执行时间和代码占用的内存空间。两者分别叫做算法的时间复杂度和算法的空间复杂度，合称算法的复杂度。&lt;/p&gt;
&lt;p&gt;时间复杂度和空间复杂度可以反映出算法的效率。&lt;/p&gt;
&lt;h3 id=&quot;时间复杂度&quot;&gt;时间复杂度&lt;/h3&gt;
&lt;p&gt;时间复杂度用来衡量算法的执行时间，用 O 表示。&lt;/p&gt;
&lt;p&gt;事实上，代码执行时所耗费的时间，只有在机器上运行后才能知道，从理论上是不能算出来的。为了方便，我们用执行到的语句数量来表示执行的时间。语句执行次数越多，代码所耗费的时间越长。&lt;/p&gt;
&lt;p&gt;举些栗子。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;isEven&lt;/span&gt;(num) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; isEven &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; num &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; isEven
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个判断一个数是否为偶数的函数，运行时执行到了两条语句，它的时间复杂度为 O(2)。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sum&lt;/span&gt;(arr) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; total &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        total &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; arr[i]
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; total
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个求和的函数，它的时间复杂度取决于参数数组的大小。算法的执行时间往往取决于要处理的数据的大小，通常我们把要处理的数据的大小叫做问题的规模，用 n 表示。在这个示例中，n 就是数组的长度。&lt;/p&gt;
&lt;p&gt;所以，这个求和算法的复杂度为 O(3n + 3)。&lt;/p&gt;
&lt;p&gt;说实话，计算这个复杂度还挺麻烦的。很多时候，我们不需要计算得那么精确，我们只需要知道算法的大致时间就好了。对于计算机来说，多执行几条命令在时间上效率并没有提高多少。&lt;/p&gt;
&lt;p&gt;为了方便计算和比较不同的时间复杂度，我们需要对结果去掉低阶项，去掉常数项，去掉高阶项的常参。这话涉及到多项式的知识，可能比较难理解，可以看下面示例。&lt;/p&gt;
&lt;pre class=&quot;text&quot;&gt;
&lt;code&gt;O(3) = O(99999) = O(1)
O(2n + 4) = O(n + 999) = O(n)
O(2n^2) = O(3n^2 + 8) = O(8n^2 + 4n + 7) = O(n^2)
O(n^3 + 2n^2) = O(n^3)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样的话，计算时间复杂度就方便很多了。&lt;/p&gt;
&lt;p&gt;如果一个算法的时间复杂度是个常数，即随着问题的规模（n）的增大，它的时间复杂度不变，那么算法的时间复杂度为 O(1)。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; sum &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    sum &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; sum
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如这个求 &lt;code&gt;1 + 2 + 3 + ... + 100&lt;/code&gt; 的算法，它的时间复杂度是 O(1)。因为它的时间复杂度是个常数，大概 300 多，我们不需要知道具体的值是多少。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sort&lt;/span&gt;(arr) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; out &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; out &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; out&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; out &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (arr[j] &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; arr[j &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; tmp &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; arr[j]
                arr[j] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; arr[j &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
                arr[j &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; tmp
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; arr
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是冒泡排序法，用到了二重循环，每重循环的次数大概为 n（arr.length），因此它的时间复杂度为 O(n^2)。&lt;/p&gt;
&lt;p&gt;一个简单的判断时间复杂度的方法就是，如果算法中只用到了一重循环，并且循环的次数大致为 n，那么算法的时间复杂度为 O(n)；如果算法中用到了二重循环，每重循环的次数大概为 n，因此它的时间复杂度为 O(n^2)；以此类推。&lt;/p&gt;
&lt;p&gt;我们再来看一个函数。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;find&lt;/span&gt;(arr&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; num) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (arr[i] &lt;span class=&quot;op&quot;&gt;===&lt;/span&gt; num) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是一个判断数组中是否存在一个目标数的函数。它的执行时间更是不确定的。如果要查找的数在数组的第一个，那么它只需要执行几条语句能完成了。如果目标数是数组的最后一个，或者在数组中不存在，那么要执行的时间就很久了。通常我们在讨论算法的时间复杂度时，指的是在最坏的情况下，算法的时间复杂度。因此，这个算法的时间复杂度是 O(n)。&lt;/p&gt;
&lt;p&gt;我们再来看一个例子：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt; n&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(i)
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这个示例中，&lt;code&gt;i&lt;/code&gt; 是指数增长的，我们假设执行的次数为 m，那么 &lt;code&gt;2^m = n&lt;/code&gt;，即 &lt;code&gt;m = logx2(n)&lt;/code&gt;。因此，时间复杂度为 log2(n)。&lt;/p&gt;
&lt;h3 id=&quot;常见的时间复杂度&quot;&gt;常见的时间复杂度&lt;/h3&gt;
&lt;p&gt;常见的时间复杂度有下面这些（按数量级递增排列）：&lt;/p&gt;
&lt;p&gt;常数阶O(1) -&amp;gt; 对数阶O(log2n) -&amp;gt; 线性阶O(n) -&amp;gt; 线性对数阶O(nlog2n) -&amp;gt; 平方阶O(n^2) -&amp;gt; 立方阶O(n^3) -&amp;gt; k次方阶O(n^k) -&amp;gt; 指数阶O(2^n)。&lt;/p&gt;
&lt;h2 id=&quot;空间复杂度&quot;&gt;空间复杂度&lt;/h2&gt;
&lt;p&gt;空间复杂度用来表示算法的执行时所需存储空间的度量。&lt;/p&gt;
&lt;p&gt;计算的方法和时间复杂度类似，这里不再赘述。&lt;/p&gt;
&lt;p&gt;比如上面的冒泡排序法，空间复杂度为 O(1)。&lt;/p&gt;
&lt;h2 id=&quot;应用&quot;&gt;应用&lt;/h2&gt;
&lt;p&gt;前面说过，我们经常对算法进行分析，以便于选择合适的算法和改进算法。&lt;/p&gt;
&lt;p&gt;在改进算法方面，如果程序注重运行时间，有时我们会选择牺牲空间复杂度的方式来换取算法的时间复杂度。&lt;/p&gt;
&lt;p&gt;比如 LeetCode 的第一道算法题（有兴趣自行百度 LeetCode Two Sum），一般情况下我们采用双重循环来做，时间复杂度为 O(n)，这样的话代码的执行时间就会超出限制的时间。所以只好采用一重循环 + Map 的思路来做。这是一个典型的“以空间换时间的”的例子。&lt;/p&gt;
&lt;p&gt;熟悉算法复杂度的概念，也可以帮助我们选择适合的算法。&lt;/p&gt;
&lt;p&gt;比如我们知道了冒泡排序法的平均时间复杂度为 O(n^2)，空间复杂度为 O(1)，快速排序法是的平均时间复杂度为 O(log2(n))，空间复杂度为 O(1)。那么很显然，当数据量比较大的时候，快速排序法明显会比冒泡排序法更加高效。&lt;/p&gt;
&lt;p&gt;当然，算法复杂度并不是衡量算法时唯一考虑的因素。很多时候，我们还需要考虑算法是否容易实现、代码可读性等等。&lt;/p&gt;
&lt;p&gt;就以上面的排序算法来说。快速排序算法不是稳定的，而冒泡排序是稳定的算法，稳定性也是选择排序算法考虑的因素之一。&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 16:01:00 +0000</pubDate>
<dc:creator>小陈博客</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/smallchen/p/algorithm-complexity.html</dc:identifier>
</item>
<item>
<title>vue学习心得 - 不止前端</title>
<link>http://www.cnblogs.com/buzhiqianduan/p/7620102.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/buzhiqianduan/p/7620102.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;使用vue框架有一段时间了，这里总结一下心得，主要为新人提供学习vue一些经验方法和项目中一些解决思路。&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;文中谨代表个人观点，如有错误，欢迎指正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;环境搭建&lt;/h2&gt;
&lt;p&gt;假设你已经通读vue官方文档（文档都没读一遍（至少），那不建议动手撸码），在大致了解vue是什么东西，有什么用，核心概念之后我们就可以开始着手学习vue。首先搭建环境。&lt;/p&gt;
&lt;p&gt;学习vue，我的建议是通过官手脚手架起步。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;Installation

$ npm install -g vue-cli

&amp;gt;&amp;gt;Usage

$ vue init &amp;lt;template-name&amp;gt; &amp;lt;project-name&amp;gt;

&amp;gt;&amp;gt;&amp;gt;&amp;gt;Example:

$ vue init webpack my-project
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;根据需要安装插件yes or no,一直回车，脚手架就生成了。接下来剖析脚手架结构。&lt;/p&gt;
&lt;h2 id=&quot;脚手架结构剖析&quot;&gt;脚手架结构剖析&lt;/h2&gt;
&lt;p&gt;再开始写项目之前，我们需要弄清什么地方写什么代码。&lt;/p&gt;
&lt;h3 id=&quot;build文件夹&quot;&gt;build文件夹&lt;/h3&gt;
&lt;p&gt;webpack配置文件。此处配置webpack规则。整个项目是通过webpack支持的。比如你要使用less，你需要在webapck规则里使用less。&lt;/p&gt;
&lt;h3 id=&quot;src-文件夹&quot;&gt;src 文件夹&lt;/h3&gt;
&lt;p&gt;撸码的地方～基本你所有的代码都在这一块完成。&lt;/p&gt;
&lt;p id=&quot;assets文件夹&quot;&gt;assets文件夹&lt;/p&gt;
&lt;p&gt;存放web中引用的图片 媒体资源。&lt;/p&gt;
&lt;p id=&quot;components文件夹&quot;&gt;components文件夹&lt;/p&gt;
&lt;p&gt;主要存放可复用组件，你可以在任意页面中复用这些组件。&lt;/p&gt;
&lt;p id=&quot;router文件夹&quot;&gt;router文件夹&lt;/p&gt;
&lt;p&gt;index.js 路由配置文件。在此处配置各个页面的跳转引用关系。&lt;/p&gt;
&lt;p id=&quot;app.vue&quot;&gt;APP.vue&lt;/p&gt;
&lt;p&gt;这里看一看做页面的根部。我们可以在这个页面进行一些css reset 操作。&lt;/p&gt;
&lt;p id=&quot;main.js&quot;&gt;main.js&lt;/p&gt;
&lt;p&gt;根逻辑，页面加载首先会加载这份js文件。&lt;/p&gt;
&lt;h3 id=&quot;static文件夹&quot;&gt;static文件夹&lt;/h3&gt;
&lt;p&gt;主要存放外部引用资源。比如xxx.min.js&lt;/p&gt;
&lt;h3 id=&quot;index.html&quot;&gt;index.html&lt;/h3&gt;
&lt;p&gt;vue是spa应用，所以只有一个入口，也就是index文件，这里我们进行一些不可更改资源（比如某某库）的引用，和html页面meta 、title之类的设定。&lt;/p&gt;
&lt;h2 id=&quot;vue核心概念&quot;&gt;vue核心概念&lt;/h2&gt;
&lt;p&gt;vue的核心概念是‘数据驱动’，假如我们需要切换view层，我们应该修改的是数据。下面我会分享一些我自己在学习vue中收获的一些实例，大家自行感受。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;实例展示的是方法论，概念性一样的东西，不要被例子局限，要将思维扩散出去。知识点学习还是看官方文档为主。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;vue如何处理dom显示样式切换动态样式&quot;&gt;vue如何处理dom显示，样式切换，动态样式&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-ad237443fb85f3bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;实例&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;watch-和-computed的-简析&quot;&gt;watch 和 computed的 简析&lt;/h2&gt;
&lt;p&gt;vue提供了2个动态监测data的函数，一个是watch，一个是computed。&lt;/p&gt;
&lt;p&gt;watch： 主要监测已经存在的data，处理data变化后的钩子&lt;/p&gt;
&lt;p&gt;computed： 处理一个已存在的data，返回一个data&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-64b0e2ebf78ac93a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;实例&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;vuex 是一个比较好的例子，可以用来学习监测，什么时候用什么方法去处理这些变化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;v-for-列表渲染机制&quot;&gt;v-for 列表渲染机制&lt;/h2&gt;
&lt;p&gt;v-for 是我认为vue中一个非常非常强大的指令，所有规律性动态数据的展示，都可以用for指令来完成。&lt;br/&gt;v-for是非常强大，可以追踪循环体内任意一个值的变化，针对变化来单独渲染。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;v－for 建议仔细阅读官方文档，而不是通读。在项目中，我们应该养成习惯。对于可变化的，规律性数据都采用for指令渲染。 我之所以又把for指令写了一遍，是因为我在开始写vue时，根本就没有活用for指令的简便和强大，还是古老的ul li 循环，繁杂的事件绑定委托。估计人类本性对一个东西还不太了解的时候会习惯性的用自己熟悉的方式去操作的原因。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-6d9204e4278534c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;嵌套数据展示和灵活操作&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;vue中引入组件以及父子组件的数据交互&quot;&gt;vue中引入组件以及父子组件的数据交互&lt;/h2&gt;
&lt;p&gt;关于组件，任意vue文件你都可以看做一个组件。 在项目中我们一般使用的应该都是单文件组件，单文件组件与页面结构无异，是具有完整功能的一个模块。比如一个评论框，你就可以剥离成一个组件，在任意页面文件中引入这个组件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-000a1a5d1aa54545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;父组件（页面）&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-7b9abe7e834883eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;子组件&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;vue过滤器&quot;&gt;vue过滤器&lt;/h2&gt;
&lt;p&gt;在有一些业务场景需要对数据进行一些转换，比如后端图片地址的前缀匹配，这个时候filters就派上大用场了。看个例子感受一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-cc92acbac86dc286.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;过滤器的使用&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;vue路由&quot;&gt;vue路由&lt;/h2&gt;
&lt;p&gt;路由对于spa应用的重要性不言而喻，整个应用的页面关系都是通过路由定义的。我们先来看看一个路由文件大致是什么样子&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-0b6bae81fbda8c8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;vue路由&quot;/&gt;&lt;/p&gt;
&lt;p&gt;vue 使用history模式，我们就可以去使用history的API，需要在路由配置中启用。默认hash模式，history模式也是一般应用的常用模式。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//切换当前地址，同 history.replaceState
 this.$router.replace({name: 'list'})  
//向history推入一级，同history.push
 this.$router.push({name: 'list'})  
//添加参数
 this.$router.push({name: 'list', query: {setting: 'setting'}})

//监测路由变化
watch:{
      '$route': function () {
       //处理事件
      }
    },


》》》》可以在页面任意处打印this.$route查看路由对象

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;vue的路由配置相对来说，是比较简单的，阅读一遍router文档，就可以快速上手。&lt;/p&gt;
&lt;blockquote readability=&quot;6.6543209876543&quot;&gt;
&lt;p&gt;路由是非常重要的一块，在动手开始写你的vue项目之前，你非常有必要通读一遍路由文档。而不是碰到问题再去解决。嵌套路由，动态路由会对你的开发起到非常有用的帮助。&lt;a href=&quot;https://router.vuejs.org/zh-cn/installation.html&quot;&gt;官方路由&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;可监测的全局变量vuex&quot;&gt;可监测的全局变量——vuex&lt;/h2&gt;
&lt;p&gt;项目开发中，往往我们会有一些全局变量，但是正常全局变量，vue是不能监测的，这个时候vuex就派上用场了。 &lt;a href=&quot;https://vuex.vuejs.org/zh-cn/intro.html&quot;&gt;vuex官方文档&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm install vuex --save

／／安装好vuex后，我们先新建一个store文件夹，存放vuex相关文件，如下图所示
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; index.js

import Vue from 'vue'
import Vuex from 'vuex'
import modulesApp from './modules/app'  //引入一个app模块
Vue.use(Vuex)

let store = new Vuex.Store({
  strict: process.env.NODE_ENV !== 'production',
  modules: {
    app: modulesApp
  }
})

export default store

———————————————— 分割线——————————————————

&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;app.js    //这里是个我的示例结构，可以查阅文档选择自己喜欢的书写方式

let state = {
  height: document.documentElement.scrollHeight + 'px',
  total: 1,
  list: [],

};

let getters = {};

let mutations = {
  height: state =&amp;gt; state.height = document.documentElement.scrollHeight + 'px',
  totalChange (state, total) {
    state.total = total
  },
  listChange (state, list) {
    state.list = list
  },


};

let actions = {};

export default {
  state,
  getters,
  mutations,
  actions
}

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3765249-bc0af16b6933ec28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;vuex&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何开始写第一个demo项目&quot;&gt;如何开始写第一个demo项目&lt;/h2&gt;
&lt;p&gt;看完以上内容，想必大家对vue都有了进一步的了解。在通读官方文档后，我们对vue都有一个大致的了解，这样其实对于新手而言还是没有方向去写一个demo出来的，我们往往想写个漂亮的demo，但这样就必须花大量时间去写html和css，这点博主深有体会，看了2遍文档后还是不知道怎么去入手写个demo练手。这里博主有个建议就是：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;专注于vue本身，而不是花过多的时间去写html，css。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上我们已经搭建了一个vue开发环境，接下来就是找一款心仪的UI组件库，博主这里推荐&lt;a href=&quot;https://www.iviewui.com/components/form&quot;&gt;iview&lt;/a&gt;，个人感觉非常漂亮。然后就是构思你的demo要写什么，好了，拖组件搭UI，开始写真正写项目代码把，把更多时间花在vue学习之上。&lt;/p&gt;
&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;
&lt;p&gt;写到这里也就告一段落了。通过项目去学习vue，在这个过程碰到问题解决问题，就是一个效率的学习方法。&lt;br/&gt;以后回过头来看，“自己以前这个demo写的这么垃圾？” 就说明你又进步了。入门第一步，框架用的好，用的熟练，当表面已经无法满足我们的时候，OK ，深入框架的时机到了。可以开始研究vue是怎么实现数据绑定，怎么实现数据响应式这些更深层的技术原理了。&lt;/p&gt;
&lt;p&gt;博主打算对vue-cli进行二次开发，封装一些有用的命令。敬请期待！前段路坎坷，共勉～&lt;br/&gt;如果觉得本文对你有所帮助，就star一下吧～大传送之术！ &lt;a href=&quot;https://github.com/xu455255849/myBlog&quot;&gt;我的博客Github&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 14:07:00 +0000</pubDate>
<dc:creator>不止前端</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/buzhiqianduan/p/7620102.html</dc:identifier>
</item>
<item>
<title>我的Spring学习记录（四） - 156庄威龙</title>
<link>http://www.cnblogs.com/lger/p/7622792.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lger/p/7622792.html</guid>
<description>&lt;p&gt;虽然Spring管理这我们的Bean很方便，但是，我们需要使用xml配置大量的Bean信息，告诉Spring我们要干嘛，这还是挺烦的，毕竟当我们的Bean随之增多的话，xml的各种配置会让人很头疼。&lt;br/&gt;所以我们需要一种东西来解决这个问题，这就是——注解，这次我们使用注解来将我们学过的所有东西重新做过一遍。&lt;/p&gt;
&lt;h3 id=&quot;了解注解&quot;&gt;&lt;strong&gt;1. 了解注解&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&quot;定义&quot;&gt;&lt;strong&gt;1.1 定义&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;注解是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。&lt;/p&gt;
&lt;h4 id=&quot;组成&quot;&gt;&lt;strong&gt;1.2 组成&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;元注解&lt;br/&gt;&lt;a href=&quot;mailto:包括@retention&quot;&gt;包括@Retention&lt;/a&gt;、@Target、@Document、@Inherited四种&lt;/li&gt;
&lt;li&gt;jdk注解&lt;br/&gt;&lt;a href=&quot;mailto:包括@override&quot;&gt;包括@Override&lt;/a&gt;、@Deprecated、@SuppressWarnings&lt;/li&gt;
&lt;li&gt;自定义注解&lt;br/&gt;自定义注解就是通过一定的规范，通过编写代码实现的&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;3.7661538461538&quot;&gt;
&lt;p&gt;这里有几篇博文可供大家参考，其实了解注解可以让自己使用Spring的注解时不会很诧异，所以了解一下还是有好处的&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/Qian123/p/5256084.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/Qian123/p/5256084.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.importnew.com/14479.html&quot; class=&quot;uri&quot;&gt;http://www.importnew.com/14479.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/yejg1212/p/3187362.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/yejg1212/p/3187362.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/lyy-2016/p/6288535.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/lyy-2016/p/6288535.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;加入maven依赖&quot;&gt;&lt;strong&gt;2. 加入maven依赖&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;这里的依赖于上篇博客的并没有什么不同之处，依赖主要如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;properties&amp;gt;
        &amp;lt;spring.version&amp;gt;4.3.10.RELEASE&amp;lt;/spring.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;commons-logging&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;commons-logging&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;


        &amp;lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;druid&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.0.31&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;


        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;5.1.44&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-core&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-context&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-beans&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-context-support&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-expression&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-aop&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-aspects&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-tx&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;RELEASE&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

    &amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;spring配置文件&quot;&gt;&lt;strong&gt;3. Spring配置文件&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;添加了相关的依赖后我们现在就要对Spring进行配置了，以下便是classpath下的applicationContext.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;
       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;&amp;gt;
        
    &amp;lt;!--开启aspect注解--&amp;gt;
    &amp;lt;aop:aspectj-autoproxy /&amp;gt;

    &amp;lt;!--加载db.properties配置文件--&amp;gt;
    &amp;lt;context:property-placeholder location=&quot;db.properties&quot;/&amp;gt;
    &amp;lt;!--扫描包下的所有类，遇到相关注解会进行一些注册工作--&amp;gt;
    &amp;lt;context:component-scan base-package=&quot;cn.lger&quot;/&amp;gt;

    &amp;lt;!--开启注解--&amp;gt;
    &amp;lt;context:annotation-config/&amp;gt;

    &amp;lt;!--配置DataSource--&amp;gt;
    &amp;lt;bean name=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&amp;gt;
        &amp;lt;!--以下是数据库连接的具体信息 通过表达式将db.properties的信息注入--&amp;gt;
        &amp;lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot;/&amp;gt;
        &amp;lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot;/&amp;gt;
        &amp;lt;property name=&quot;driverClassName&quot; value=&quot;${jdbc.driver}&quot;/&amp;gt;
        &amp;lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot;/&amp;gt;
    &amp;lt;/bean&amp;gt;

    &amp;lt;!--注册事务管理类--&amp;gt;
    &amp;lt;bean name=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&amp;gt;
        &amp;lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&amp;gt;
    &amp;lt;/bean&amp;gt;

    &amp;lt;!--开启事务注解 注解添加事务管理类映射--&amp;gt;
    &amp;lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&amp;gt;

&amp;lt;/beans&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;上面的配置文件当中跟之前有所不同的就是添加了context约束，还有利用context加载了&lt;code&gt;db.properties&lt;/code&gt;，这是有关数据库的相关配置，之前是直接在配置文件写入，现在进行了提取，然后利用了context进行加载。&lt;br/&gt;db.properties文件也是置于classpath下，具体内容是&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/spring_demo_1
jdbc.username=root
jdbc.password=root
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用注解装配bean&quot;&gt;&lt;strong&gt;4. 使用注解装配Bean&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;好，经过上面的折腾之后就可使用注解开发我们程序了，接下来进入主题。&lt;/p&gt;
&lt;p&gt;现在有一个场景，就是一个人拥有一只小狗叫旺财，如果参考之前的博客&lt;a href=&quot;http://blog.csdn.net/lger_pro/article/details/78061967&quot;&gt;我的Spring学习记录（二）&lt;/a&gt;就会发现我们需要配置的东西很多，现在我们用全新的方式来装配我们的Bean。现在我们给出实体，如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//这里为Man的超类，方便之后引申一些东西实现多态
public abstract class Human {
    public abstract String myNameIs();
}

//注册为Spring的Bean Bean的名字叫man
@Component(value = &quot;man&quot;)
public class Man extends Human{

    @Value(value = &quot;张三&quot;)
    private String name;

    //自动将Spring容器中Dog类型的Bean装配到dog
    @Autowired
    private Dog dog;

    public String getUsername() {
        return name;
    }

    public void setUsername(String username) {
        this.name = username;
    }

    public Dog getDog() {
        return dog;
    }

    public void setDog(Dog dog) {
        this.dog = dog;
    }

    public String myNameIs() {
        return name;
    }
    
    public void noFreeTime(){
        System.out.println(&quot;狗主人没有时间(public void noFreeTime())&quot;);
    }

    @Override
    public String toString() {
        return &quot;Man{&quot; +
                &quot;name='&quot; + name + '\'' +
                &quot;, dog=&quot; + dog +
                '}';
    }

}

&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;//注册为Spring的Bean
@Component(value = &quot;dog&quot;)
public class Dog {

    //注入值
    @Value(value = &quot;旺财&quot;)
    private String name;
    @Value(value = &quot;土狗&quot;)
    private String breed;
    @Value(value = &quot;公&quot;)
    private String sex;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getBreed() {
        return breed;
    }

    public void setBreed(String breed) {
        this.breed = breed;
    }

    public String getSex() {
        return sex;
    }

    public void setSex(String sex) {
        this.sex = sex;
    }

    @Override
    public String toString() {
        return &quot;Dog{&quot; +
                &quot;name='&quot; + name + '\'' +
                &quot;, breed='&quot; + breed + '\'' +
                &quot;, sex='&quot; + sex + '\'' +
                '}';
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;有了上面的准备工作之后，我们可以对我们的代码进行简单的测试了，我们现在不使用&lt;code&gt;ClassPathXmlApplicationContext&lt;/code&gt;来加载我们的Bean了，而是使用Spring test，同样的利用注解可以剩下很多事情，代码主要如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//junit运行的时候就会加载 SpringJUnit4ClassRunner,
//SpringJUnit4ClassRunner是Spring test提供的主要是方便测试    
@RunWith(SpringJUnit4ClassRunner.class)
//加载Spring 配置文件
@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)
public class TestWired {

    @Autowired
    private Man man;

    /**
     * 测试注解装配是否成功
     */
    @Test
    public void test01(){
        System.out.println(man);
    }

}

//打印结果：Man{username='张三', money=9600.0, dog=Dog{name='旺财', breed='土狗', sex='公'}}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用注解完成aop&quot;&gt;&lt;strong&gt;5. 使用注解完成AOP&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;现在我们的 &lt;code&gt;Man&lt;/code&gt;没有时间去看管我们的狗狗 &lt;code&gt;Dog&lt;/code&gt;了，迫切地需要找到一个帮忙照看狗狗的代理人 &lt;code&gt;Proxy&lt;/code&gt;，让他帮忙照看遛狗，&lt;code&gt;Proxy&lt;/code&gt;的代码实现如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Aspect
//这里必须注册为Spring的Bean，虽然有了Aspect
//但是需要Spring调用这个切面还是需要注册为Spring的组件
@Component
public class Proxy {

    @Pointcut(&quot;execution(* cn.lger.domain.Man.noFreeTime())&quot;)
    public void noFreeTime(){}

    @Before(value = &quot;noFreeTime()&quot;)
    public void before(){
        System.out.println(&quot;代理人去被代理人家里牵狗，然后遛狗&quot;);
    }

    @After(value = &quot;noFreeTime()&quot;)
    public void after(){
        System.out.println(&quot;代理人带狗狗回家&quot;);
    }


}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;看到了上面的代码之后想想我们之前使用xml配置切面是不是很简单了。&lt;br/&gt;接下来我们测试一下我们的AOP是否能够成功&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)
public class TestAspect {

    @Autowired
    private Man man;

    @Test
    public void test01(){
        man.noFreeTime();
    }

}
//打印结果: 代理人去被代理人家里牵狗，然后遛狗
//         狗主人没有时间(public void noFreeTime())
//         代理人带狗狗回家
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;通过以上的测试我们基本上可以知道，与我们之前使用xml配置的AOP并没有什么结果上的不同，成功。&lt;/p&gt;
&lt;h3 id=&quot;使用注解完成spring事务&quot;&gt;&lt;strong&gt;6. 使用注解完成Spring事务&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;好，通过AOP后我们接下来的就是利用AOP实现的Spring声明式事务&lt;br/&gt;首先这里有 &lt;code&gt;dao&lt;/code&gt;和 &lt;code&gt;service&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Component
public class TransferDao extends JdbcTemplate {

    /**
     * 将钱的数目转向当前user的账户
     * @param money money
     * @param username username
     */
    public void transferMoneyToOne(Float money, String username){
        this.update(&quot;UPDATE account SET money = money + (?) WHERE username = ?&quot;, money, username);
    }

    /**
     * 通过有参构造函数注入DataSource
     * @param dataSource dataSource
     */
    @Autowired
    public TransferDao(DataSource dataSource){
        //因为没用xml注入dataSource所以这里需要自己设置
        //调用超类的构造函数设置dataSource
        super(dataSource);
    }
    
}

@Component
public class TransferService {

    @Autowired
    private TransferDao dao;

    /**
     * 转账业务，这里为了方便直接写了张三转给了李四100块钱
     */
    @Transactional
    public void transferMoney(){
        dao.transferMoneyToOne((float) -100, &quot;张三&quot;);
//        int i = 1 / 0;//这里模仿转账过程中可能出现的异常，测试时可以去掉注释用于测试事务是否成功执行
        dao.transferMoneyToOne((float) 100, &quot;李四&quot;);
//        throw new RuntimeException(&quot;这里突然死机了&quot;);
    }

    public TransferDao getDao() {
        return dao;
    }

    public void setDao(TransferDao dao) {
        this.dao = dao;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;下面我们进行测试工作来看看代码是否能够成功执行事务性的操作&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(&quot;classpath:applicationContext.xml&quot;)
public class TestTransaction {

    @Autowired
    private TransferService transferService;

    /**
     * 测试转账事务
     */
    @Test
    public void test01(){
        transferService.transferMoney();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;经过我们的测试证明当没有出现异常的情况张三成功给了李四转账了，当我们去掉注释出现异常结果是转账不成功。注解式的Spring事务配置就先是这么多&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;strong&gt;7. 总结&lt;/strong&gt;&lt;/h3&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;注解替代我们的xml配置可以帮助我们节省下很多的开发步骤，提高我们的开发效率，但是注解也是有一定的缺陷的，比如有没有觉得我们好好的xml把所有的东西都放在一起看着就能够集中一点，而注解就是相对的分散，这样可能我们维护的时候就会在各个类直接的注解中转来转去。所以各有各的好处。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Spring的注解远远不止是这么多，比如装配我们的Bean的Autowired在某种情况下就会出错，比如我们多态的实现，有两个子类作为组件，那么它要注入哪个？？ 所以需要一个东西去辅助它，声明是哪一个Bean要被注入，除了Autowired装配还有Resource、Inject等；&lt;br/&gt;装配之外还有其他的注解都需要学习一下，但是这篇的长度就会很长很长了，所以我就没有详细的写明，我给出一些链接，希望给大家的学习节省一些时间，如果之后我闲着的时候我将会以这篇为导引，写多一些注解来一起学习&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;0.5748502994012&quot;&gt;
&lt;p&gt;Spring注解相关博文&lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/xyh820/article/details/7303330/&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/xyh820/article/details/7303330/&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/u010987379/article/details/52152795&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/u010987379/article/details/52152795&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/szlbm/p/5512931.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/szlbm/p/5512931.html&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/zheng0518/article/details/49206847&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/zheng0518/article/details/49206847&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/lindonglian/article/details/47043727&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/lindonglian/article/details/47043727&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/biehongli/p/6640406.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/biehongli/p/6640406.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上的代码可以在&lt;a href=&quot;https://github.com/Mr-Pro/spring-demo/tree/master/spring-annotation&quot;&gt;Github&lt;/a&gt;下载&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 14:05:00 +0000</pubDate>
<dc:creator>156庄威龙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lger/p/7622792.html</dc:identifier>
</item>
<item>
<title>Hadoop 2:Mapper和Reduce - 堅持╅信念★</title>
<link>http://www.cnblogs.com/lanston/p/hadoop_mapper_reduce.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lanston/p/hadoop_mapper_reduce.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Understanding and Practicing Hadoop Mapper and Reduce&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;1 Mapper过程&lt;/h2&gt;
&lt;p&gt;Hadoop将输入数据划分为等长的小数据块(默认为64MB)的过程叫做分片,并为每个分片构建一个Mappper任务,并由Mapper任务执行用户自定义的函数处理分片中的数据,mapper就是将这些数据中包含我们感兴趣或要处理的数据构成一个以键值存储的数据集,比如按年月分析NCDC每月最高温度信息(关于NCDC温度数据格式和说明,请参考官方说明文档&lt;a href=&quot;ftp://ftp.ncdc.noaa.gov/pub/data/gsod/readme.txt&quot;&gt;NCDC DATA Readme.txt&lt;/a&gt;);&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;STN--- WBAN   YEARMODA    TEMP       DEWP      SLP        STP       VISIB      WDSP     MXSPD   GUST    MAX     MIN   
484310 99999  19720101    69.1 18    50.8 18  1034.4 17  1007.0 17    7.0 18    6.6 18   19.0  999.9    79.3*   60.3* 
484310 99999  19720102    67.6 19    51.4 19  1032.3 19  1004.9 19    6.9 19    3.9 19    8.0  999.9    78.3*   58.3* 
484310 99999  19720103    72.6 14    52.8 14  1032.0 14  1004.9 14    7.0 14    4.1 14    8.9  999.9    81.3*   62.4* 
035623 99999  19720208    43.9 24    36.8 24  9999.9  0  9999.9  0    3.4 24    9.4 24   19.0  999.9    50.0*   37.4* 99.99  999.9  110000
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;YEARMODA记录年月日,TEMP记录当天温度,由于我们只对年月分析,Mapper后得到如下键值存储的数据集;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;(197201,[69.1,67.6,72.6])
(197202,[43.9])
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后发送到Reduce函数.由于分片处理,当数据量越大拥有的分片数量就越多,处理每个分片所需要的时间少于处理整个输入的时间,所以如果在同一个机架上并行处理每个分片,并且分片数据比较少,那整个处理过程将获得更好的负载均衡.但如果由于硬件故障或任务运行失败,hadoop会将任务重新分配到其它可能不在同一个机架或数据中心的节点运行,这会导致机架或数据中心之间的网络传输,从而降低Mapper的处理效率.所以同等比率数据,本地化处理效率比较占优势.&lt;/p&gt;
&lt;h2&gt;2 Reduce 过程&lt;/h2&gt;
&lt;p&gt;Reduce合并Mapper传递过来的键值数据,对数据进行排序和按照用户自定义函数进行计算,最后将输出写入到本地节点,再流式同步到其它节点;比如计算当月最高温度,上面的Mapper键值数据经过Reduce后计算出如下的结果;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;(197201,72.6)
(197202,43.9)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于数据合并操作可能涉及不同机架上的节点间传递数据到合并的节点,所以网络带宽经常会遭遇到瓶颈和莫名其妙的延迟,为了更好的监控和避免这些意外发生,2.x版本增强了在处理过程中reporter功能,开发时善用这个功能,能避免和及时发现一些问题发生.&lt;/p&gt;
&lt;h2&gt;3 MapReduce的开发&lt;/h2&gt;
&lt;p&gt;MapReduce的开发需要编写Mapper函数,Reduce函数和运行作业的函数,同样以上面的按年月分析NCDC中当月最高温度为了例来介绍.首先编写Mapper函数(完整的代码可以在&lt;a href=&quot;https://github.com/LanstonWu/MyHadoop&quot;&gt;github获取&lt;/a&gt;;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;import java.io.IOException;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapred.JobConf;
import org.apache.hadoop.mapred.JobContext;
import org.apache.hadoop.mapred.MapReduceBase;
import org.apache.hadoop.mapred.Mapper;
import org.apache.hadoop.mapred.OutputCollector;
import org.apache.hadoop.mapred.Reporter;
/***
 * 分析最高温度Mapper类
 * @author lanstonwu
 *
 */
public class TemperatureMapper extends MapReduceBase implements Mapper&amp;lt;LongWritable, Text, Text, DoubleWritable&amp;gt; {
    static enum MyCounters {
        NUM_RECORDS
    }
    private final double MISSING = 999.9;


    private String mapTaskId;
    private String inputFile;
    private int noRecords = 0;
    // 获取作业信息
    public void configure(JobConf job) {
        mapTaskId = job.get(JobContext.TASK_ATTEMPT_ID);
        inputFile = job.get(JobContext.MAP_INPUT_FILE);
    }

    public void map(LongWritable offset, Text input, OutputCollector&amp;lt;Text, DoubleWritable&amp;gt; output, Reporter reporter)
            throws IOException {
        String line = input.toString();//将输入转换为字符
        String yearStr = line.substring(14, 20), //截取年月字符
                tempStr = line.substring(25,30); // 截取温度字符
        double maxTemp = 0;

        ++noRecords;
        // Increment counters
        reporter.incrCounter(MyCounters.NUM_RECORDS, 1);

        // 更新作业状态信息
        if ((noRecords % 100) == 0) {
            reporter.setStatus(mapTaskId + &quot; processed &quot; + noRecords + &quot; from input-file: &quot; + inputFile);
        }
        if (!tempStr.matches(&quot;^([^A-Za-z]*?[A-Z][A-Za-z]*?)+.?&quot;)) {//匹配非字符情况时进行下面的操作
            maxTemp = Double.parseDouble(tempStr);
            if (maxTemp != MISSING)
                output.collect(new Text(yearStr), new DoubleWritable(maxTemp));
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;MapReduceBase是个虚拟类,为几种方法提供默认的无操作实现,在特殊的应用程序中可能需要覆盖其中的一些方法,目的是增强程序的扩展能力.&lt;br/&gt;Mapper是个接口,实现map函数,函数有四个参数,第一个LongWritable(键)表示输入文件offset,在开发中我们暂时用不到;第二Text(值)表示输入数据,第三个output表示输出,通过将结果写入该对象传递到reduce;第四个reporter表示对作业的当前状态处理.&lt;br/&gt;通过重写configure函数获取作业信息,用于在map函数中更新作业状态.&lt;br/&gt;map函数中首先将输入对象转换为字符,再通过substring截取分析的数据(年月和温度);然后更新进度更新作业状态,最后再对温度进行处理,由于温度数据是通过全年数据合并而来,合并前每个文件首行为字段列，合并是未进行处理，所以输入中会包含从其它文件合并而来的列名,所以这里进行正则匹配,当非字符时对温度进行转型为double,值不为999.99的情况下写出.然后再开发Reduce;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;import java.io.IOException;
import java.util.Iterator;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapred.MapReduceBase;
import org.apache.hadoop.mapred.OutputCollector;
import org.apache.hadoop.mapred.Reducer;
import org.apache.hadoop.mapred.Reporter;

public class TemperatureReduce extends MapReduceBase implements Reducer&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt; ,&lt;span class=&quot;attribute&quot;&gt;DoubleWritable&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;Text&lt;/span&gt; , &lt;span class=&quot;attribute&quot;&gt;DoubleWritable&lt;/span&gt;&amp;gt;&lt;/span&gt;{
    public void reduce(Text key, Iterator&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;DoubleWritable&lt;/span&gt;&amp;gt;&lt;/span&gt; values, OutputCollector&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Text,&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;DoubleWritable&lt;/span&gt;&amp;gt;&lt;/span&gt; output,Reporter reporter) throws IOException {
        double maxVal = 0; 
        while (values.hasNext()){
             maxVal=Double.max(Double.MIN_VALUE,values.next().get());
        }
        output.collect(key,new DoubleWritable(maxVal));
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Reduce 类实现Reducer的reduce函数,函数有4个参数,第一个key表示键,即从mapper函数output中传递过来的键;第二个values表示值,即mapper函数output中传递过来的value,第三个output表示输出,即结果输出;第四个reporter表示对作业状态的处理;&lt;br/&gt;reduce函数遍历key所对应的整个结果集,再通过对比最小的MIN_VALUE得出最大值;最后开发运行作业的类;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;import java.io.IOException;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.mapred.FileInputFormat;
import org.apache.hadoop.mapred.FileOutputFormat;
import org.apache.hadoop.mapred.JobClient;
import org.apache.hadoop.mapred.JobConf;
import org.apache.hadoop.io.Text;
import com.sywu.hadoop.mapper.TemperatureMapper;
import com.sywu.hadoop.reduce.TemperatureReduce;

public class TemperatureMain {
    public static void main(String[] args) {
        if (args.length != 2) {
            System.err.print(&quot;参数传入错误!使用示例: WordCount &amp;lt;输入路径&amp;gt; &amp;lt;结果输出路径&amp;gt;&quot;);
            System.exit(-1);
        }

        JobConf jobConf = new JobConf();
        jobConf.setJobName(&quot;TemperatureMapperReduce&quot;);
        jobConf.setJarByClass(TemperatureMain.class);
        jobConf.setMapperClass(TemperatureMapper.class);
        jobConf.setReducerClass(TemperatureReduce.class);
        // 设置输入路径
        FileInputFormat.addInputPath(jobConf, new Path(args[0]));
        // 设置输出路径
        FileOutputFormat.setOutputPath(jobConf, new Path(args[1]));
        // 设置键输出格式
        jobConf.setOutputKeyClass(Text.class);
        // 设置键值输出格式
        jobConf.setOutputValueClass(DoubleWritable.class);
        try {
            JobClient.runJob(jobConf);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于最终的MapReduce要打包成jar包在命令行调用,需要传递必要的输入参数,所以TemperatureMain类先对输入参数进行了判断,再通过JobConf设置job名称,setJarByClass表示在运行的hadoop环境中通过类名找到和调用jar文件(通过HADOOP_CLASSPATH或运行时设置jar);setMapperClass设置用于处理的Mapper类;setReducerClass设置用于处理的Reduce类;再通过FileInputFormat抽象类的静态方法设置输入输出路径;如果结果输出格式和默认格式不同,则需要通过setOutputKeyClass和setOutputValueClass定义,最后通过JobClient运行job.&lt;/p&gt;
&lt;h2&gt;4 运行MapReduce&lt;/h2&gt;
&lt;p&gt;将类打包成jar上传到hadoop服务器,调用hadoop命令运行MapReduce.比如分析1972年每月最高温度;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;hadoop jar /tmp/myhadoop-1.0-SNAPSHOT.jar com.sywu.hadoop.main.TemperatureMain /ncdc_year_gz/gsod_1972.gz /tmp/result/02
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;jar表示设置hadoop运行时调用的jar,也可以设置HADOOP_CLASSPATH变量实现;com.sywu.hadoop.main.TemperatureMain是执行的主类,如果类放置在包内,则必须包名和类型全路径表示;/ncdc_year_gz/gsod_1972.gz是输入文件,即TemperatureMain类所需的第一个参数,如果该参数是目录路径,则hadoop依次传入目录下的所有文件进行处理;/tmp/result/02是输出路径,即TemperatureMain类所需的第二个参数,reduce输出的结果会写入该目录下,在作业运行前该目录必须不存在,hadoop不允许覆盖已有的文件.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;17/10/02 18:44:00 INFO client.RMProxy: Connecting to ResourceManager at gp-sdw1/192.168.56.12:8032
17/10/02 18:44:01 INFO client.RMProxy: Connecting to ResourceManager at gp-sdw1/192.168.56.12:8032
17/10/02 18:44:02 WARN mapreduce.JobResourceUploader: Hadoop command-line option parsing not performed. Implement the Tool interface and execute your application with ToolRunner to remedy this.
17/10/02 18:44:03 INFO mapred.FileInputFormat: Total input paths to process : 1
17/10/02 18:44:04 INFO mapreduce.JobSubmitter: number of splits:1
17/10/02 18:44:05 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1506922345100_0016
17/10/02 18:44:06 INFO impl.YarnClientImpl: Submitted application application_1506922345100_0016
17/10/02 18:44:06 INFO mapreduce.Job: The url to track the job: http://gp-sdw1:8088/proxy/application_1506922345100_0016/
17/10/02 18:44:06 INFO mapreduce.Job: Running job: job_1506922345100_0016
17/10/02 18:44:31 INFO mapreduce.Job: Job job_1506922345100_0016 running in uber mode : false
17/10/02 18:44:31 INFO mapreduce.Job:  map 0% reduce 0%
17/10/02 18:44:48 INFO mapreduce.Job:  map 100% reduce 0%
17/10/02 18:45:04 INFO mapreduce.Job:  map 100% reduce 100%
17/10/02 18:45:08 INFO mapreduce.Job: Job job_1506922345100_0016 completed successfully
17/10/02 18:45:09 INFO mapreduce.Job: Counters: 50
    File System Counters
        FILE: Number of bytes read=3420746
        FILE: Number of bytes written=7078435
        FILE: Number of read operations=0
        FILE: Number of large read operations=0
        FILE: Number of write operations=0
        HDFS: Number of bytes read=4556912
        HDFS: Number of bytes written=148
        HDFS: Number of read operations=6
        HDFS: Number of large read operations=0
        HDFS: Number of write operations=2
    Job Counters 
        Launched map tasks=1
        Launched reduce tasks=1
        Data-local map tasks=1
        Total time spent by all maps in occupied slots (ms)=13755
        Total time spent by all reduces in occupied slots (ms)=13803
        Total time spent by all map tasks (ms)=13755
        Total time spent by all reduce tasks (ms)=13803
        Total vcore-milliseconds taken by all map tasks=13755
        Total vcore-milliseconds taken by all reduce tasks=13803
        Total megabyte-milliseconds taken by all map tasks=14085120
        Total megabyte-milliseconds taken by all reduce tasks=14134272
    Map-Reduce Framework
        Map input records=201807
        Map output records=201220
        Map output bytes=3018300
        Map output materialized bytes=3420746
        Input split bytes=97
        Combine input records=0
        Combine output records=0
        Reduce input groups=12
        Reduce shuffle bytes=3420746
        Reduce input records=201220
        Reduce output records=12
        Spilled Records=402440
        Shuffled Maps =1
        Failed Shuffles=0
        Merged Map outputs=1
        GC time elapsed (ms)=597
        CPU time spent (ms)=11880
        Physical memory (bytes) snapshot=453296128
        Virtual memory (bytes) snapshot=4201644032
        Total committed heap usage (bytes)=298319872
    Shuffle Errors
        BAD_ID=0
        CONNECTION=0
        IO_ERROR=0
        WRONG_LENGTH=0
        WRONG_MAP=0
        WRONG_REDUCE=0
    com.sywu.hadoop.mapper.TemperatureMapper$MyCounters
        NUM_RECORDS=201807
    File Input Format Counters 
        Bytes Read=4556815
    File Output Format Counters 
        Bytes Written=148
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;日志记录作业名,输入文件信息(Total input paths to process),分片信息(number of splits),跟踪作业运行情况的url(The url to track the job)通过这个URL可以查看到作业运行情况,如果在map和reduce函数中有开发reporter,实时的状态信息可以在这里查看到,如果hadoop未启用historyserver这些信息和url访问将在作业结束时丢失;其它的还有map和reduce完成比率和Counters信息.&lt;/p&gt;
&lt;h2&gt;5 查看结果&lt;/h2&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;$ hadoop fs -ls /tmp/result/02/ 
Found 2 items
-rw-r--r--   3 hadoop supergroup          0 2017-10-02 18:45 /tmp/result/02/_SUCCESS
-rw-r--r--   3 hadoop supergroup        148 2017-10-02 18:45 /tmp/result/02/part-00000
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于分析的年度数据量小,hadoop只对文件进行1个分片,分片一个map任务和1个reduce任务,所以也只有一个reduce写出.查询结果文件便可以看到分析结果.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;xml&quot;&gt;$ hadoop fs -cat /tmp/result/02/part-00000 
197201  96.3
197202  99.1
197203  91.6
197204  94.2
197205  92.1
197206  102.4
197207  106.8
197208  107.0
197209  98.0
197210  94.1
197211  98.8
197212  102.6
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;6 总结&lt;/h2&gt;
&lt;p&gt;开发MapReduce作业需要开发Mapper函数,Reduce函数,和运行MapReduce作业的类;Mapper函数实现对输入数据生成键值格式数据,并传递给Reduce函数;Reduce函数合并Mapper传递过来的结果,排序和计算后输出到HDFS.开发Mapper和Reduce函数建议继承MapReduceBase虚拟类,以增强程序可扩展性.2.x版本可以通过reporter更新作业的状态和进度信息.&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 13:20:00 +0000</pubDate>
<dc:creator>堅持╅信念★</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lanston/p/hadoop_mapper_reduce.html</dc:identifier>
</item>
<item>
<title>初学node.js有感三 - 精心出精品</title>
<link>http://www.cnblogs.com/zyrblog/p/7619899.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zyrblog/p/7619899.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;WebStorm下的node.js&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、回顾与继续&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;      在前面，我们知道了node.js的基本框架和思路，在这些原生环境下我们对node.js的设计思想有了比较深刻的认识，并且具有了编写大型程序的能力了，但是程序的代码可能会比较拉杂，因此，我们就需要用到现有的框架了，在我们的社会上，不需要造太多的轮子，而需要在更高层次上去设计‘车’，因此使用别人做好的模板去完成自己的业务是一个比较节省时间并且有创造性的事情，在node.js中我们有太多的&lt;span&gt;轮子&lt;/span&gt;，比如说express框架，为我们提供了封装好的很多做事情的接口，我们可以方便的进行组装和搭配，比如ejs、jade这些现有的模板引擎，为我们提供了很多可扩展的能力，在这个基础上我们可以最大限度的发挥自己的&lt;span&gt;创造性&lt;/span&gt;，去完成自己业务。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、Express框架&lt;br/&gt;&lt;span&gt;       Express框架是后台的Node框架，所以和jQuery、zepto、yui、bootstrap都不一个东西。Express在后台的受欢迎的程度，和jQuery一样，就是企业的事实上的标准。&lt;/span&gt;&lt;span&gt;原生Node开发，会发现有很多问题。比如：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;     呈递静态页面很不方便，需要处理每个HTTP请求，还要考虑304问题&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;     路由处理代码不直观清晰，需要写很多正则表达式和字符串函数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;     不能集中精力写业务，要考虑很多其他的东西&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;        Express的哲学是在你的想法和服务器之间充当薄薄的一层。这并不意味着他不够健壮，或者没有足够的有用特性，而是尽量少干预你，让你充分表达自己的思想，同时提供一些有用的东西。同样的，我们还是使用npm来安装该框架：&lt;span&gt;--save参数&lt;/span&gt;，表示自动修改package.json文件，&lt;span&gt;自动添加依赖项&lt;/span&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;&lt;span&gt;1&lt;/span&gt; npm install --save express&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;   用express框架写一个最简单的程序：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; express=require(&quot;express&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; app=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; express();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; app.get(&quot;/&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     res.send(&quot;success！&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;});
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; app.get(/\/student\/([\d]{10})/,&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (req,res) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     res.send(&quot;student info：&quot;+req.params[0&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;})
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; app.listen(3100);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;       在这里我们首先引用了该框架，其次通过new关键字创建了该对象，之后，我们对于首页的访问返回成功，对于路径名为‘/student/十位数字’的访问，我们通过正则表达式返回了相应的学号，在这里之所以可以使用req的&lt;span&gt;params[0]&lt;/span&gt;返回相应的数字，是因为我们在正则表达式中用（）对相应的地方进行了选中，同样的，我们还可以对更长的路径名进行这样的过滤，道理是一样的，同样的我们可以看到get方法可以对用户访问的路径进行解析，当然post主要是对表单进行处理的，另外在这里除了用正则表达式之外我们还可以使用  &lt;span&gt;:  &lt;/span&gt;来对我们想要表达的文字进行表示，比如这里我们就可以写为“/student/:id”，那么我们就可以得到id的值了，只要再使用正则表达式判断位数就可以了。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     app.get(&quot;/student/:id&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; id = req.params[&quot;id&quot;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; reg= /^[\d]{6}$/;   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;正则验证&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(reg.test(id)){
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;            res.send(id);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;             res.send(&quot;请检查格式&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;     });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      运行结果如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002114039818-1262558398.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;      在这里我们还可以使用use方法来暴露静态文件，也叫静态文件&lt;span&gt;伺服&lt;/span&gt;能力：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;&lt;span&gt;app.use(express.static(&quot;./public&quot;));&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      这样我们就可以在网址中输入public文件夹下的任何路径而不需要输入public，很好的隐藏了一些重要的内容、迷惑了黑客的视线。并且假如public文件夹下有一个a.html文件，我们可以直接用127.0.0.1:3100/a.html来访问，更强大的是如果public文件夹下有一个index.html文件，则直接输入127.0.0.1:3100即可以访问。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;   a、get用法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;         GET请求的参数在URL中，在原生Node中，需要使用url模块来识别参数字符串。在Express中，不需要使用url模块了。可以直接使用&lt;span&gt;req.query对象。&lt;/span&gt;&lt;br/&gt;     当用get请求访问一个网址的时候，做什么事情：&lt;br/&gt;     app.get(&quot;网址&quot;,function(req,res){&lt;br/&gt;      });&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;    这里的网址，&lt;span&gt;不分大小写&lt;/span&gt;，也就是说，路由是&lt;br/&gt;      app.get(&quot;/AAb&quot;,function(req,res){&lt;br/&gt;          res.send(&quot;你好&quot;);&lt;br/&gt;      });&lt;br/&gt;     实际上&lt;span&gt;小写&lt;/span&gt;的访问也行。&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;    所有的GET参数，? 后面的都已经被忽略。 锚点#也被忽略，路由到/a ， 实际&lt;span&gt;/a?id=2&amp;amp;sex=nan&lt;/span&gt; 也能被处理。&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     &lt;strong&gt;表单可以自己提交到自己上。&lt;br/&gt;        app.get(&quot;/&quot;,function(req,res){&lt;br/&gt;           res.render(&quot;form&quot;);&lt;br/&gt;        });&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;     适合进行 RESTful路由设计。简单说，就是一个路径，但是http method不同，对这个页面的使用也不同。&lt;br/&gt;     /student/345345&lt;br/&gt;       get       读取学生信息&lt;br/&gt;       add      添加学生信息&lt;br/&gt;       delete  删除学生信息&lt;br/&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;doctype html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;age&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;   b、post用法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;        POST请求在express中不能直接获得，必须使用body-parser模块。使用后，将可以用req.body得到参数。但是如果表单中含有文件上传，那么还是需要使用formidable模块。当用post访问一个网址的时候可以使用下面的格式：&lt;br/&gt;    app.post(&quot;网址&quot;,function(req,res){&lt;br/&gt;    });&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;   app.post(&quot;/&quot;,function(req,res){&lt;br/&gt;        //将数据添加进入数据库&lt;br/&gt;        res.send(&quot;成功&quot;);&lt;br/&gt;    });&lt;/strong&gt;&lt;br/&gt;    c、all的用法：&lt;br/&gt;     如果想处理这个网址的任何method的请求，那么写all&lt;br/&gt;      app.all(&quot;/&quot;,function(){&lt;br/&gt;      });&lt;br/&gt;&lt;span&gt;&lt;strong&gt;三、中间件&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;       我们输入的网址就像一个水流，中间件就像是过滤水流的大网，水流中的某些东西流经某一个地方被阻挡住的话就不会再向下面流去了，因此网的大小（中间件）的前后顺序非常重要，如果get、post回调函数中，没有next参数，那么就匹配上第一个路由，就不会往下匹配了。如果想往下匹配的话，那么需要写next()。&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     app.get(&quot;/&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res,next){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         console.log(&quot;1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;        next();
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     app.get(&quot;/&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         console.log(&quot;2&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;     });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;     让我们看一个例子，下面两个路由，感觉没有关系：&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     app.get(&quot;/:username/:id&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         console.log(&quot;1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         res.send(&quot;用户信息&quot; +&lt;span&gt; req.params.username);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     app.get(&quot;/admin/login&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         console.log(&quot;2&quot;&lt;span&gt;);        
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;             res.send(&quot;管理员登录&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      但是实际上冲突了，因为admin可以当做用户名 login可以当做id。&lt;br/&gt;      &lt;span&gt;解决方法1：交换位置。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;        也就是说，express中所有的路由（中间件）的顺序至关重要。&lt;br/&gt;        匹配上第一个，就不会往下匹配了。 具体的往上写，抽象的往下写。&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;      app.get(&quot;/admin/login&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         console.log(&quot;2&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         res.send(&quot;管理员登录&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;     });
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     app.get(&quot;/:username/:id&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         console.log(&quot;1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         res.send(&quot;用户信息&quot; +&lt;span&gt; req.params.username);
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;     解决方法2： 使用next()&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
    app.get(&quot;/:username/:id&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res,next){
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; username =&lt;span&gt; req.params.username;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;检索数据库，如果username不存在，那么next()&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(检索数据库){
            console.log(&lt;/span&gt;&quot;1&quot;&lt;span&gt;);
            res.send(&lt;/span&gt;&quot;用户信息&quot;&lt;span&gt;);
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
            next();
        }
    });
    
    app.get(&lt;/span&gt;&quot;/admin/login&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
        console.log(&lt;/span&gt;&quot;2&quot;&lt;span&gt;);
        res.send(&lt;/span&gt;&quot;管理员登录&quot;&lt;span&gt;);
    });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;           路由get、post这些东西，就是中间件，中间件讲究顺序，匹配上第一个之后，就不会往后匹配了。next函数才能够继续往后匹配。&lt;br/&gt;          app.use()也是一个中间件。与get、post不同的是，他的网址不是精确匹配的。而是能够有小文件夹拓展的。&lt;br/&gt;          比如网址：  http://127.0.0.1:3000/admin/aa/bb/cc/dd&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;     app.use(&quot;/admin&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;         res.write(req.originalUrl + &quot;\n&quot;);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    /admin/aa/bb/cc/dd&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt;         res.write(req.baseUrl + &quot;\n&quot;);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;   /admin&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt;         res.write(req.path + &quot;\n&quot;);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    /aa/bb/cc/dd&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;         res.end(&quot;你好&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      当不写路径的时候，实际上就相当于&quot;/&quot;，就是所有网址&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    app.use(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res,next){
        console.log(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
        next();
    });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;       app.use()就给了我们增加一些特定功能的便利场所。&lt;br/&gt;       大多数情况下，渲染内容用res.render()，将会根据views中的模板文件进行渲染。如果不想使用views文件夹，想自己设置文件夹名字，那么&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
app.set(&quot;views&quot;,&quot;aaaa&quot;);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;       如果想写一个快速测试页，当然可以使用res.send()。这个函数将根据内容，自动帮我们设置了Content-Type头部和200状态码。send()只能用一次，和end一样。和end不一样在于能够自动设置MIME类型。如果想使用不同的状态码，可以： &lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; res.status(404).send('Sorry, we cannot find that!');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;     如果想使用不同的Content-Type，可以： &lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
res.set('Content-Type', 'text/html');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;四、小小相册中的大大智慧&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;       讲了这么多理论性的东西，我们需要实战来检验自己的掌握程度，因此，在这里我们使用node.js为服务器，制作一个相册管理器，我们可以在上面上传相片，也可以查看不同文件夹中的相片，在这里我们使用MVC模型来进行项目的布局、设计和实现！&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;     程序的功能：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    1、B/S模式，使用node.js作为服务器，浏览器为客户端，可以远程访问，至少保持局域网内的可访问性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    2、具有图片的上传能力，可以将特定的图片上传到特定的文件夹中，对上传图片的大小有限制，上传的图片具有统一格式的命名。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    3、具有高效路由能力，可以通过静态路由功能找到相应文件夹下的图片并且显示出来。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    4、需要用到bootstrap、express框架、jQuery支持、ejs模板引擎、MVC等多种技术。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    首先让我们看一下工程的目录：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002192106740-863466994.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     其中node_modules中至少包含express、ejs、silly-datetime、formidable这些基本的模块。工程采用了MVC的模式，具有很强的可扩展性，在app.js是整个工程的配置和启动，在controller中是对app.js中的命令的一种解析和执行，对于不同的请求采用不同的方法进行响应，在models中是对数据的一种管理，比如读取文件的目录或者文件夹的目录等，并且返回这些数据给controller，而controller拿着这些数据交给views去渲染，并且显示相应的页面，可以说后端的呈递完全就是对数据的操作和显示，这些数据包括简单的数值、变量、对象、数组、字节流、字符流、多媒体数据等，而前端主要用来进行渲染和展现，在这里我们还是使用ejs模板引擎将得到的数据进行渲染和显示，并且使用了bootstrap技术和JQuery技术来增加美化程度，更快更好地完善我们的功能。uploads静态文件夹用来保存上传过来的图片，temp文件夹用来间接地呈递我们上传的图片，作为中转。public静态文件夹主要存放一下浏览器可以直接访问到的数据，比如css、HTML、图片、bootstrap等数据和文件，这就是文件的结构了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;   4.1、app.js文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; express=require(&quot;express&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; app=&lt;span&gt;express();
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; router=require(&quot;./controller/router.js&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;strong&gt;app.set(&quot;view engine&quot;,&quot;ejs&quot;&lt;span&gt;);
&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;strong&gt;&lt;span&gt; 6 app.use(express.static(&quot;./public&quot;));
 7 app.use(express.static(&quot;./uploads&quot;));
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; app.get(&quot;/&quot;&lt;span&gt;,router.showIndex);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11 app.get(&quot;/up&quot;,router.showUp);
12 app.post(&quot;/up&quot;,router.doPost);
&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;strong&gt;&lt;span&gt;14&lt;/span&gt; app.get(&quot;/:albumName&quot;&lt;span&gt;,router.showAlbum);
&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;strong&gt;&lt;span&gt;16&lt;/span&gt; app.use(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (req,res) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     res.render(&quot;err&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;});
&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;19&lt;/span&gt; app.listen(3100);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;         这是整个工程的指导文件，&lt;span&gt;对于每一个请求都将通过该文件进行分发和处理，可以说是核心枢纽&lt;/span&gt;，实现使用了ejs模板引擎，默认文件夹views为将要渲染的文件夹。其次暴露了两个文件夹作为静态文件夹，提供了对这两个文件夹下的所有文件的路由能力。然后对于首页访问命令，直接通过controller层进行细节的处理，通过MVC框架来呈现首页，然后是对于文件上传的两个界面，首先我们需要跳转到上传文件界面，这个时候使用get命令即可完成，并且返回填写信息界面，因此走了一遍MVC，其次是填写完表单需要提交的时候，我们需要使用post命令来提交表单，并且通过formidable来处理上传的图片信息。然后是对于图片文件夹的访问，我们对于不同的文件夹呈现不同的图片列表，最后是对于任意上面处理不了的信息，我们返回错误页面，当然也是通过ejs渲染之后来呈现。然后令程序监听3000以后的某个端口，避免冲突。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;   &lt;strong&gt;   4.2、controller下面的router.js文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; file=require(&quot;../models/file.js&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; formidable = require('formidable'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; sd = require(&quot;silly-datetime&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; path = require(&quot;path&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; fs=require(&quot;fs&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;首页信息&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; exports.showIndex=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     file.getAllAlbums(&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err,allAlbums) {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             res.render(&quot;err&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         res.render(&quot;index&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             {&quot;albums&quot;&lt;span&gt;:allAlbums}
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        );
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    })
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示图片列表&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; exports.showAlbum=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; albumName=&lt;span&gt;req.params.albumName;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     file.getAllImagesByAlbumname(albumName,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(err,imageArray){
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             res.render(&quot;err&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         res.render(&quot;album&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;                 &quot;albumName&quot;:albumName, &quot;images&quot;&lt;span&gt;:imageArray
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;        );
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示填写上传文件ejs&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; exports.showUp=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     file.getAllAlbums(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(err,albums)
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         res.render(&quot;up&quot;&lt;span&gt;, {
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;             &quot;allAlbums&quot;&lt;span&gt;: albums
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;提交上传的文件并处理，持久化&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt; exports.doPost=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(req,res){
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; form = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; formidable.IncomingForm();
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;     form.uploadDir = &quot;./temp/&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;     form.parse(req, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err, fields, files) {
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        console.log(fields);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;        console.log(files);
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; size=&lt;span&gt;parseInt(files.picture.size);
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; if(size&amp;gt;1024*1024)&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; {&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     res.send(&quot;图片尺寸应小于1M&quot;);&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     //删除图片&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     fs.unlink(files.picture.path);&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     console.log(&quot;删除成功！&quot;)&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     return;&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; }&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; ttt = sd.format(&lt;span&gt;new&lt;/span&gt; Date(), 'YYYYMMDDHHmmss'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; ran = parseInt(Math.random() * 89999 + 10000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; extname =&lt;span&gt; path.extname(files.picture.name);
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; oldpath = __dirname + &quot;/../&quot; +&lt;span&gt; files.picture.path;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; newpath = __dirname + &quot;/../uploads/&quot; +fields.folder+&quot;/&quot;+ ttt + ran +&lt;span&gt; extname;
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;        console.log(oldpath);
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;        console.log(newpath);
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;         fs.rename(oldpath, newpath, &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err) {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (err) {
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;                 &lt;span&gt;throw&lt;/span&gt; Error(&quot;改名失败&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;                 console.log(&quot;失败&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;             res.render(&quot;success&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;             console.log(&quot;成功&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;        这个文件可以说是&lt;span&gt;承上启下&lt;/span&gt;，首先分派一个任务交由models层来完成，得到相应的数据，然后拿着这些数据通过res.render()来渲染并且显示，并且暴露自己，可以让app.js访问到。在这里，我们需要注意异步编程的特点，一定要用callback函数来处理那些需要读写文件系统或者其他I/O设备的操作，不然将会出现异常和错误。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;   &lt;strong&gt;   4.3、models文件夹下面的file.js文件&lt;/strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; fs = require(&quot;fs&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回所有文件夹列表&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; exports.getAllAlbums=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(callback){
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     fs.readdir(&quot;./uploads&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err,files) {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             callback(&quot;读取文件夹失败！&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; allAlbums=&lt;span&gt;[];
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         (&lt;span&gt;function&lt;/span&gt;&lt;span&gt; iterator(i) {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(i==&lt;span&gt;files.length)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 callback (&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,allAlbums);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             fs.stat(&quot;./uploads/&quot;+files[i],&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err,stats) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                     callback(&quot;解析文件夹失败！&quot;+files[i],&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(stats.isDirectory())
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;                    allAlbums.push(files[i]);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                 iterator(i+1&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         })(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据文件夹的名字来找到该文件夹下的所有图片文件并且返回&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt; exports.getAllImagesByAlbumname =&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(albumname,callback){
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     fs.readdir(&quot;./uploads/&quot;+albumname,&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err,files) {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;             callback(&quot;读取文件夹失败！&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; allImages=&lt;span&gt;[];
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         (&lt;span&gt;function&lt;/span&gt;&lt;span&gt; iterator(i) {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(i==&lt;span&gt;files.length)
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;                 callback (&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,allImages);
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;                console.log(allImages);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             fs.stat(&quot;./uploads/&quot;+albumname+&quot;/&quot;+files[i],&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (err,stats) {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(err){
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;                     callback(&quot;解析文件失败&quot;+files[i],&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;                     &lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(stats.isFile())
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;                    allImages.push(files[i]);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;                 iterator(i+1&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;            });
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;         })(0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      其实我们仔细思考一下就能明白，对文件的数据进行读，我们只有这两种操作，一种是&lt;span&gt;&lt;span&gt;返回所有文件夹列表&lt;/span&gt;，另一种是&lt;span&gt;根据文件夹的名字来找到该文件夹下的所有图片文件并且返回&lt;/span&gt;，这两种操作就是完全精细的，适用于我们项目需求的&lt;span&gt;原子操作&lt;/span&gt;，可以用来复用。在这里我们使用了iterator来保证同步执行。值得注意的是，如果我们文件读取失败或者文件夹读取失败，会提示&lt;span&gt;isFile()&lt;/span&gt;或者&lt;span&gt;isDirectory()&lt;/span&gt;未定义，这个时候，我们需要做的就是仔细看一下文件或者文件夹是否因为路径的原因而没有读取成功。这点在编程中十分重要。还有crtl+alt+I（i），注意这个地方一定是I，而不是L,可以对我们选中的（crtl+A）代码进行整理，这些编程技巧十分重要！！！！！！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;  &lt;strong&gt;&lt;strong&gt;   4.4、views文件夹下面的ejs文件&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;      完成了这些我们就需要关注一下前端的实现了，在这里我们通过ejs来进行渲染，同样的，我们借鉴了bootstrap中的模板，在www.bootcss.com网站中我们可以清楚的找到属于我们的组件和实例，并且搭建最基本的前端界面，本程序就是从上面借鉴的！我们从这个网站中下载bootstrap，然后解压之后，放到我们的public文件夹下面去，然后在该网站中找到“起步”，从中下载最简单的使用代码，然后在“全局CSS样式”和“组件”中，我们根据自己的业务要求选择适合自己使用的控件进行布局，具体的细节这里就略去不提了，最重要的是bootstrap中对jQuery有依赖，因此我们需要从网上下载jQuery的函数库，就是一个文件而已，然后放到bootstrap文件夹中的js文件夹下，这样我们就完成了准备工作！！！！！！&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002200141458-269979471.png&quot; alt=&quot;&quot; width=&quot;772&quot; height=&quot;392&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002200222568-289490736.png&quot; alt=&quot;&quot; width=&quot;750&quot; height=&quot;420&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002200708911-113694538.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;      准备完成了之后，让我们看一下ejs代码，下面的是index.ejs的代码：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;zh-CN&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;
&lt;span&gt; 8&lt;/span&gt;     &amp;lt;title&amp;gt;小小相册&amp;lt;/title&amp;gt;
&lt;span&gt; 9&lt;/span&gt;     &amp;lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;span&gt;&lt;strong&gt;10     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
11         .row h4{
12             text-align:center;
13         }
14     &amp;lt;/style&amp;gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt;16&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &amp;lt;&lt;strong&gt;nav&lt;/strong&gt; class=&quot;navbar navbar-default&quot;&amp;gt;
&lt;span&gt;20&lt;/span&gt;     &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
&lt;span&gt;21&lt;/span&gt;         &amp;lt;!-- Brand and toggle get grouped &lt;span&gt;for&lt;/span&gt; better mobile display --&amp;gt;
&lt;span&gt;22&lt;/span&gt;         &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
&lt;span&gt;23&lt;/span&gt;             &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&amp;gt;
&lt;span&gt;24&lt;/span&gt;                 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt;25&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;26&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;27&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;28&lt;/span&gt;             &amp;lt;/button&amp;gt;
&lt;span&gt;29&lt;/span&gt;             &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;小小相册&amp;lt;/a&amp;gt;
&lt;span&gt;30&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;         &amp;lt;!-- Collect the nav links, forms, and other content &lt;span&gt;for&lt;/span&gt; toggling --&amp;gt;
&lt;span&gt;33&lt;/span&gt;         &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt;
&lt;span&gt;34&lt;/span&gt;             &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
&lt;span&gt;35&lt;/span&gt;                 &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;全部相册 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;36&lt;/span&gt;                &lt;span&gt;&lt;strong&gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/up&quot;&amp;gt;上传&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;             &amp;lt;/ul&amp;gt;
&lt;span&gt;38&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;39&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;40&lt;/span&gt; &amp;lt;/nav&amp;gt;
&lt;span&gt;41 &amp;lt;div class=&quot;container&quot;&amp;gt;
42     &amp;lt;div class=&quot;row&quot;&amp;gt;
43         &amp;lt;% for (var i=0;i&amp;lt;albums.length;i++){%&amp;gt;
44         &amp;lt;div class=&quot;col-xs-6 col-md-3&quot;&amp;gt;
45             &amp;lt;a href=&quot;&amp;lt;%=albums[i]%&amp;gt;&quot; class=&quot;thumbnail&quot;&amp;gt;
46                 &amp;lt;img src=&quot;images/folder.jpg&quot; alt=&quot;&quot;&amp;gt;
47             &amp;lt;/a&amp;gt;
48             &amp;lt;h4&amp;gt;&amp;lt;%=albums[i]%&amp;gt;&amp;lt;/h4&amp;gt;
49         &amp;lt;/div&amp;gt;
50         &amp;lt;%}%&amp;gt;
51     &amp;lt;/div&amp;gt;
52 &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt; 
&lt;span&gt;&lt;strong&gt;54 &amp;lt;script src=&quot;js/jquery-1.11.3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
55 &amp;lt;script src=&quot;js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;57&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;    同样的，其他的ejs文件渲染如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;  album.ejs:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_003b91e2-d799-497a-80ef-363cd04033ea&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_003b91e2-d799-497a-80ef-363cd04033ea&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_003b91e2-d799-497a-80ef-363cd04033ea&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;zh-CN&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;
&lt;span&gt; 8&lt;/span&gt;     &amp;lt;title&amp;gt;小小相册&amp;lt;/title&amp;gt;
&lt;span&gt; 9&lt;/span&gt;     &amp;lt;link href=&quot;/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;span&gt;10&lt;/span&gt;     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        .row h4{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             text-&lt;span&gt;align:center;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &amp;lt;/style&amp;gt;
&lt;span&gt;15&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt;16&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; &amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
&lt;span&gt;19&lt;/span&gt;     &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
&lt;span&gt;20&lt;/span&gt;         &amp;lt;!-- Brand and toggle get grouped &lt;span&gt;for&lt;/span&gt; better mobile display --&amp;gt;
&lt;span&gt;21&lt;/span&gt;         &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
&lt;span&gt;22&lt;/span&gt;             &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&amp;gt;
&lt;span&gt;23&lt;/span&gt;                 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt;24&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;25&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;26&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;27&lt;/span&gt;             &amp;lt;/button&amp;gt;
&lt;span&gt;28&lt;/span&gt;             &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;小小相册&amp;lt;/a&amp;gt;
&lt;span&gt;29&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt;         &amp;lt;!-- Collect the nav links, forms, and other content &lt;span&gt;for&lt;/span&gt; toggling --&amp;gt;
&lt;span&gt;32&lt;/span&gt;         &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt;
&lt;span&gt;33&lt;/span&gt;             &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
&lt;span&gt;34&lt;/span&gt;                 &amp;lt;li &amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;全部相册 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;35&lt;/span&gt;                 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/up&quot;&amp;gt;上传&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;36&lt;/span&gt;             &amp;lt;/ul&amp;gt;
&lt;span&gt;37&lt;/span&gt;         &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
&lt;span&gt;38&lt;/span&gt;     &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&lt;span&gt;39&lt;/span&gt; &amp;lt;/nav&amp;gt;
&lt;span&gt;40&lt;/span&gt; &amp;lt;ol class=&quot;breadcrumb&quot;&amp;gt;
&lt;span&gt;41&lt;/span&gt;     &amp;lt;li&amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;全部相册&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;42&lt;/span&gt;     &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;%=albumName%&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;43&lt;/span&gt; &amp;lt;/ol&amp;gt;
&lt;span&gt;44&lt;/span&gt; &amp;lt;div class=&quot;container&quot;&amp;gt;
&lt;span&gt;45&lt;/span&gt;     &amp;lt;div class=&quot;row&quot;&amp;gt;
&lt;span&gt;46&lt;/span&gt;         &amp;lt;% &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;images.length;i++){%&amp;gt;
&lt;span&gt;47&lt;/span&gt;         &amp;lt;div class=&quot;col-xs-6 col-md-3&quot;&amp;gt;
&lt;span&gt;48&lt;/span&gt;             &amp;lt;a href=&quot;#&quot; class=&quot;thumbnail&quot;&amp;gt;
&lt;span&gt;49&lt;/span&gt;                 &amp;lt;img src=&quot;&amp;lt;%=images[i]%&amp;gt;&quot; alt=&quot;&quot;&amp;gt;
&lt;span&gt;50&lt;/span&gt;             &amp;lt;/a&amp;gt;
&lt;span&gt;51&lt;/span&gt;             &amp;lt;h4&amp;gt;&amp;lt;%=images[i]%&amp;gt;&amp;lt;/h4&amp;gt;
&lt;span&gt;52&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;53&lt;/span&gt;         &amp;lt;%}%&amp;gt;
&lt;span&gt;54&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;55&lt;/span&gt; &amp;lt;/div&amp;gt;
&lt;span&gt;56&lt;/span&gt; &amp;lt;script src=&quot;/js/jquery-1.11.3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;57&lt;/span&gt; &amp;lt;script src=&quot;/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;58&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;59&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;   err.ejs:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_13b5a813-e2d7-426b-8e6b-2da0c8bbb03e&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_13b5a813-e2d7-426b-8e6b-2da0c8bbb03e&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_13b5a813-e2d7-426b-8e6b-2da0c8bbb03e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;zh-CN&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;
&lt;span&gt; 8&lt;/span&gt;     &amp;lt;title&amp;gt;小小相册&amp;lt;/title&amp;gt;
&lt;span&gt; 9&lt;/span&gt;     &amp;lt;link href=&quot;/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;span&gt;10&lt;/span&gt;     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        .row h4{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             text-&lt;span&gt;align:center;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &amp;lt;/style&amp;gt;
&lt;span&gt;15&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt;16&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
&lt;span&gt;20&lt;/span&gt;     &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
&lt;span&gt;21&lt;/span&gt;         &amp;lt;!-- Brand and toggle get grouped &lt;span&gt;for&lt;/span&gt; better mobile display --&amp;gt;
&lt;span&gt;22&lt;/span&gt;         &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
&lt;span&gt;23&lt;/span&gt;             &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&amp;gt;
&lt;span&gt;24&lt;/span&gt;                 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt;25&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;26&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;27&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;28&lt;/span&gt;             &amp;lt;/button&amp;gt;
&lt;span&gt;29&lt;/span&gt;             &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;小小相册&amp;lt;/a&amp;gt;
&lt;span&gt;30&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;         &amp;lt;!-- Collect the nav links, forms, and other content &lt;span&gt;for&lt;/span&gt; toggling --&amp;gt;
&lt;span&gt;33&lt;/span&gt;         &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt;
&lt;span&gt;34&lt;/span&gt;             &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
&lt;span&gt;35&lt;/span&gt;                 &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;全部相册 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;36&lt;/span&gt;                 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/up&quot;&amp;gt;上传&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;37&lt;/span&gt;             &amp;lt;/ul&amp;gt;
&lt;span&gt;38&lt;/span&gt;         &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
&lt;span&gt;39&lt;/span&gt;     &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&lt;span&gt;40&lt;/span&gt; &amp;lt;/nav&amp;gt;
&lt;span&gt;41&lt;/span&gt; &amp;lt;div class=&quot;container&quot;&amp;gt;
&lt;span&gt;42&lt;/span&gt;     &amp;lt;img src=&quot;/images/1.jpg&quot; alt=&quot;&quot;&amp;gt;
&lt;span&gt;43&lt;/span&gt; &amp;lt;/div&amp;gt;
&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt; &amp;lt;script src=&quot;/js/jquery-1.11.3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;46&lt;/span&gt; &amp;lt;script src=&quot;/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;47&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;48&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;err&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;   success.ejs:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_d7199766-80d3-49de-90be-5a804965c1ee&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d7199766-80d3-49de-90be-5a804965c1ee&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d7199766-80d3-49de-90be-5a804965c1ee&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;zh-CN&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;
&lt;span&gt; 8&lt;/span&gt;     &amp;lt;title&amp;gt;小小相册&amp;lt;/title&amp;gt;
&lt;span&gt; 9&lt;/span&gt;     &amp;lt;link href=&quot;/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;span&gt;10&lt;/span&gt;     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        .row h4{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             text-&lt;span&gt;align:center;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &amp;lt;/style&amp;gt;
&lt;span&gt;15&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt;16&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
&lt;span&gt;20&lt;/span&gt;     &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
&lt;span&gt;21&lt;/span&gt;         &amp;lt;!-- Brand and toggle get grouped &lt;span&gt;for&lt;/span&gt; better mobile display --&amp;gt;
&lt;span&gt;22&lt;/span&gt;         &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
&lt;span&gt;23&lt;/span&gt;             &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&amp;gt;
&lt;span&gt;24&lt;/span&gt;                 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt;25&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;26&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;27&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;28&lt;/span&gt;             &amp;lt;/button&amp;gt;
&lt;span&gt;29&lt;/span&gt;             &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;小小相册&amp;lt;/a&amp;gt;
&lt;span&gt;30&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;         &amp;lt;!-- Collect the nav links, forms, and other content &lt;span&gt;for&lt;/span&gt; toggling --&amp;gt;
&lt;span&gt;33&lt;/span&gt;         &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt;
&lt;span&gt;34&lt;/span&gt;             &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
&lt;span&gt;35&lt;/span&gt;                 &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;全部相册 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;36&lt;/span&gt;                 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/up&quot;&amp;gt;上传&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;37&lt;/span&gt;             &amp;lt;/ul&amp;gt;
&lt;span&gt;38&lt;/span&gt;         &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
&lt;span&gt;39&lt;/span&gt;     &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&lt;span&gt;40&lt;/span&gt; &amp;lt;/nav&amp;gt;
&lt;span&gt;41&lt;/span&gt; &amp;lt;div class=&quot;container&quot;&amp;gt;
&lt;span&gt;42&lt;/span&gt;     &amp;lt;img src=&quot;/images/2.jpg&quot; alt=&quot;&quot;&amp;gt;
&lt;span&gt;43&lt;/span&gt; &amp;lt;/div&amp;gt;
&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt; &amp;lt;script src=&quot;/js/jquery-1.11.3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;46&lt;/span&gt; &amp;lt;script src=&quot;/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;47&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;48&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;   up.ejs:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;zh-CN&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&amp;gt;
&lt;span&gt; 8&lt;/span&gt;     &amp;lt;title&amp;gt;小小相册&amp;lt;/title&amp;gt;
&lt;span&gt; 9&lt;/span&gt;     &amp;lt;link href=&quot;/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;span&gt;10&lt;/span&gt;     &amp;lt;style type=&quot;text/css&quot;&amp;gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        .row h4{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             text-&lt;span&gt;align:center;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &amp;lt;/style&amp;gt;
&lt;span&gt;15&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt;16&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; &amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
&lt;span&gt;19&lt;/span&gt;     &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
&lt;span&gt;20&lt;/span&gt;         &amp;lt;!-- Brand and toggle get grouped &lt;span&gt;for&lt;/span&gt; better mobile display --&amp;gt;
&lt;span&gt;21&lt;/span&gt;         &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
&lt;span&gt;22&lt;/span&gt;             &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&amp;gt;
&lt;span&gt;23&lt;/span&gt;                 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
&lt;span&gt;24&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;25&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;26&lt;/span&gt;                 &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
&lt;span&gt;27&lt;/span&gt;             &amp;lt;/button&amp;gt;
&lt;span&gt;28&lt;/span&gt;             &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;小小相册&amp;lt;/a&amp;gt;
&lt;span&gt;29&lt;/span&gt;         &amp;lt;/div&amp;gt;
&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt;         &amp;lt;!-- Collect the nav links, forms, and other content &lt;span&gt;for&lt;/span&gt; toggling --&amp;gt;
&lt;span&gt;32&lt;/span&gt;         &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt;
&lt;span&gt;33&lt;/span&gt;             &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
&lt;span&gt;34&lt;/span&gt;                 &amp;lt;li &amp;gt;&amp;lt;a href=&quot;../&quot;&amp;gt;全部相册 &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;35&lt;/span&gt;                 &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/up&quot;&amp;gt;上传&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;span&gt;36&lt;/span&gt;             &amp;lt;/ul&amp;gt;
&lt;span&gt;37&lt;/span&gt;         &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
&lt;span&gt;38&lt;/span&gt;     &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&lt;span&gt;39&lt;/span&gt; &amp;lt;/nav&amp;gt;
&lt;span&gt;40&lt;/span&gt; 
&lt;strong&gt;&lt;span&gt;41&lt;/span&gt; &amp;lt;div class=&quot;container&quot;&amp;gt;
&lt;span&gt;42&lt;/span&gt;     &amp;lt;div class=&quot;row&quot;&amp;gt;
&lt;span&gt;43&lt;/span&gt;         &amp;lt;form style=&quot;width:40%&quot;  method=&quot;post&quot; action=&quot;#&quot; enctype=&quot;multipart/form-data&quot;&amp;gt;
&lt;span&gt;44&lt;/span&gt;             &amp;lt;div class=&quot;form-group&quot;&amp;gt;
&lt;span&gt;45&lt;/span&gt;                 &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&quot;exampleInputEmail1&quot;&amp;gt;选择文件夹&amp;lt;/label&amp;gt;
&lt;span&gt;46                 &amp;lt;select class=&quot;form-control&quot;  name=&quot;folder&quot;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;                     &amp;lt;% &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;allAlbums.length;i++){%&amp;gt;
&lt;span&gt;48&lt;/span&gt;                     &amp;lt;option&amp;gt;&amp;lt;%=allAlbums[i]%&amp;gt;&amp;lt;/option&amp;gt;
&lt;span&gt;49&lt;/span&gt;                     &amp;lt;%}%&amp;gt;
&lt;span&gt;50&lt;/span&gt;                 &amp;lt;/select&amp;gt;
&lt;span&gt;51&lt;/span&gt;             &amp;lt;/div&amp;gt;
&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;             &amp;lt;div class=&quot;form-group&quot;&amp;gt;
&lt;span&gt;54&lt;/span&gt;                 &amp;lt;label &lt;span&gt;for&lt;/span&gt;=&quot;exampleInputFile&quot;  &amp;gt;选择图片&amp;lt;/label&amp;gt;
&lt;span&gt;55                 &amp;lt;input type=&quot;file&quot; id=&quot;exampleInputFile&quot; name=&quot;picture&quot;&amp;gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;                 &amp;lt;p class=&quot;help-block&quot;&amp;gt;Example block-level help text here.&amp;lt;/p&amp;gt;
&lt;span&gt;57&lt;/span&gt;             &amp;lt;/div&amp;gt;
&lt;span&gt;58&lt;/span&gt; 
&lt;span&gt;59&lt;/span&gt;             &amp;lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
&lt;span&gt;60&lt;/span&gt;         &amp;lt;/form&amp;gt;
&lt;span&gt;61&lt;/span&gt;     &amp;lt;/div&amp;gt;
&lt;span&gt;62&lt;/span&gt; &amp;lt;/div&amp;gt;&lt;/strong&gt;
&lt;span&gt;63&lt;/span&gt; &amp;lt;script src=&quot;/js/jquery-1.11.3.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;64&lt;/span&gt; &amp;lt;script src=&quot;/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;span&gt;65&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;66&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;        最后是我们的总依赖package.json，在这里我们对自己的工程进行布局和显示：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_d8216cfb-cc3d-4fee-b347-dff6729d7a2a&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d8216cfb-cc3d-4fee-b347-dff6729d7a2a&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d8216cfb-cc3d-4fee-b347-dff6729d7a2a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;  &quot;name&quot;: &quot;little-album&quot;,
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;  &quot;version&quot;: &quot;1.0.0&quot;,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;  &quot;description&quot;: &quot;&quot;,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;  &quot;main&quot;: &quot;app.js&quot;,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;  &quot;dependencies&quot;: {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    &quot;body-parser&quot;: &quot;^1.18.2&quot;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    &quot;ejs&quot;: &quot;^2.5.7&quot;,
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    &quot;express&quot;: &quot;^4.16.1&quot;,
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    &quot;formidable&quot;: &quot;^1.1.1&quot;,
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    &quot;silly-datetime&quot;: &quot;^0.1.2&quot;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;  },
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;  &quot;devDependencies&quot;: {},
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;  &quot;scripts&quot;: {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;amp;&amp;amp; exit 1&quot;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;  },
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;  &quot;author&quot;: &quot;&quot;,
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;  &quot;license&quot;: &quot;ISC&quot;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;        综上就是我们的程序了，算是一个demo，我们可以对其进行扩充，我们的架子已经搭好了，以后就是按着这样的套路来不断地增砖添瓦，并且对前端进行美工。让我们来看一下运行效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002201904802-241017786.png&quot; alt=&quot;&quot; width=&quot;722&quot; height=&quot;333&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202009380-583088019.png&quot; alt=&quot;&quot; width=&quot;599&quot; height=&quot;325&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202101880-1667697481.png&quot; alt=&quot;&quot; width=&quot;609&quot; height=&quot;386&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202135740-1129308690.png&quot; alt=&quot;&quot; width=&quot;589&quot; height=&quot;308&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202221052-114093911.png&quot; alt=&quot;&quot; width=&quot;443&quot; height=&quot;288&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202331411-1708869191.png&quot; alt=&quot;&quot; width=&quot;577&quot; height=&quot;341&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202442536-388863124.png&quot; alt=&quot;&quot; width=&quot;388&quot; height=&quot;295&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202521130-465319597.png&quot; alt=&quot;&quot; width=&quot;708&quot; height=&quot;296&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202758161-2006953502.png&quot; alt=&quot;&quot; width=&quot;502&quot; height=&quot;242&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202823443-1165302680.png&quot; alt=&quot;&quot; width=&quot;539&quot; height=&quot;137&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202839771-1980622330.png&quot; alt=&quot;&quot; width=&quot;396&quot; height=&quot;147&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1157683/201710/1157683-20171002202859083-749176913.png&quot; alt=&quot;&quot; width=&quot;426&quot; height=&quot;151&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;     由此可见程序完美执行了相应的任务，完成了相应的功能！！！！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    工程文件已经压缩并且放在百度云上，网址为：&lt;a title=&quot;工程源码&quot; target=&quot;_blank&quot;&gt;http://pan.baidu.com/s/1gfL7UM3&lt;/a&gt;， 密码为：z6qv！！！！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;六、总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;       这也是一篇比较耗时的文章，算是对自己能力的一种锤炼，花了自己一两天的时间去学习和整理，最后使用一个工程来讲自己的所学所思所说所讲都用在了实践中，从最简单的实践中，一步步的去粗取精，最后实现了一个文件资源管理器的部分功能，如果想做的话还可以继续进行，文件夹的创建、修改和删除、文件的增删改查、移动到其他文件夹等功能，方法都和上传类似，到了这里总算可以歇一会儿了，领略一下站在半山腰看着山下的风景的美丽，对于nodejs我们已经掌握的不错了，但是还远远算不上精通，其实没有那个人可以完全对一门技术精通，即使是创造这门技术的人也没有绝对的把握去这样说，但是我们的确已经入门了，并且有了不错的成果和收获，将自己从其他语言中学到的MVC等技术运用到这个工程中是一种质的提升和成功，善于总结的人永远都是最有底气的人，因为积累了足够多的错误才能更加自信的去面对未知的技术和困难，永远保持一颗&lt;span&gt;谦逊&lt;/span&gt;的心，成功就在眼前！！！！！！&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 12:51:00 +0000</pubDate>
<dc:creator>精心出精品</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zyrblog/p/7619899.html</dc:identifier>
</item>
<item>
<title>UI自动化测试简介及Selenium工具的介绍和环境搭建 - 温一壶清酒</title>
<link>http://www.cnblogs.com/hong-fithing/p/7622215.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hong-fithing/p/7622215.html</guid>
<description>&lt;p&gt;&lt;span&gt;1.1何为自动化测试？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　是把以人为驱动的测试转化为机器执行的一种过程，它是一种以程序测试程序的过程。换言之，就是以程序实现的方式来代替手工测试。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.2自动化测试分类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　分为功能自动化测试和性能自动化测试&lt;/p&gt;
&lt;p&gt;一般所说的自动化测试是指功能自动化测试，是通过编码的方式，用一段程序来测试一个软件的功能，这样就可以重复执行程序来进行重复测试的目的。如果一个软件有小部分功能发生改变，只要修改一部分自动化测试代码，就可以重复对软件进行测试，从而提高测试效率。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.3做自动化测试应该满足哪些要求？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　1.&lt;span class=&quot;fontstyle0&quot;&gt;任务测试明确， 不会频繁变动&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　2.&lt;span class=&quot;fontstyle0&quot;&gt;每日构建后的验证测试&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　3.&lt;span class=&quot;fontstyle0&quot;&gt;比较频繁的回归测试&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　4.&lt;span class=&quot;fontstyle0&quot;&gt;软件系统界面稳定， 变化少&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　5.&lt;/span&gt;需要在多平台运行相同的测试用例、组合遍历型的测试、大量的重复测试&lt;/p&gt;
&lt;p&gt;　　6.&lt;span class=&quot;fontstyle0&quot;&gt;软件维护周期长&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　7.&lt;span class=&quot;fontstyle0&quot;&gt;项目进度压力不太长&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　8.&lt;span class=&quot;fontstyle0&quot;&gt;被测系统软件开发比较规范， 能够保证系统的可测试性&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　9.&lt;span class=&quot;fontstyle0&quot;&gt;具备大量的自动化测试平台&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　10.&lt;span class=&quot;fontstyle0&quot;&gt;测试人员具备较强的编程能力&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通常情况下，只要满足以下三种情况就可以开展自动化测试：软件需求变更不频繁、 项目周期较长、 自动化测试脚本可重复使用&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.4自动化测试流程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1.4.1自动化测试的介入点：&lt;/p&gt;
&lt;p&gt;　　老式：一般是在&lt;strong&gt;系统测试&lt;/strong&gt;阶段开始介入， 多用于系统测试的回归测试和性能测试&lt;/p&gt;
&lt;p&gt;       新式：开发开始概要设计评审就可以开始介入&lt;/p&gt;
&lt;p&gt;1.4.2自动化测试流程：&lt;/p&gt;
&lt;p&gt;       可行性分析&amp;gt;测试需求分析（来源于测试团队内部）&amp;gt;制定测试计划&amp;gt;自动化测试设计&amp;gt;测试脚本开发&amp;gt; 无人职守测试&amp;gt;提交测试报告&amp;gt;脚本维护阶段&lt;/p&gt;
&lt;p&gt;1.4.3手工测试优缺点&lt;/p&gt;
&lt;p&gt;手工测试的缺点：重复性、精确性、效率&lt;/p&gt;
&lt;p&gt;手工测试的优点：&lt;span class=&quot;fontstyle0&quot;&gt;手工测试不可替代的地方至少包括 以下几个方面：&lt;/span&gt;测试用例的设计、经验和猜测错误能力、界面和用户体验测试、正确性的检查、人的思维和逻辑能力&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.5自动化测试工具&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QTP&lt;/strong&gt;：是quicktest Professional的简称， 是一款商业化的自动化测试工具。 提供了强大易用的录制回放功能。 支撑B/S、 C/S两种架构的软件测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Robot Framework&lt;/strong&gt;：是一款python编写的功能自动化测试框架。具备良好的可扩展性，支持关键字驱动，可以同时测试多种类型的客户端或者接口，可以进行分布式测试执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Selenium&lt;/strong&gt;: 是一款用于Web应用程序测试的工具，它支持多平台、多语言、多浏览去实现自动化测试。&lt;/p&gt;

&lt;p&gt;2.1Selenium工具简介&lt;/p&gt;
&lt;p&gt;Selenium是ThoughtWorks专门为Web应用而开发的自动化测试工具， 适合进行功能测试、验收测试，同时支持所有基于web的管理任务自动化。主要功能包括：测试与浏览器的兼容性，测试你的应用程序看是否能够很好得工作在不同浏览器和操作系统之上。测试系统功能，创建回归测试检验软件功能和用户需求。&lt;/p&gt;
&lt;p&gt;2.2Selenium特点：&lt;/p&gt;
&lt;p&gt;       开源、免费&lt;/p&gt;
&lt;p&gt;       多浏览器支持：Firefox、Chrome、IE、Opera&lt;/p&gt;
&lt;p&gt;       多平台支撑：windows、linux、MAC&lt;/p&gt;
&lt;p&gt;       对web页面有良好的支撑&lt;/p&gt;
&lt;p&gt;       简单（API简单）、灵活（用开发语言驱动）&lt;/p&gt;
&lt;p&gt;       支持分布式执行测试用例&lt;/p&gt;
&lt;p&gt;2.3Selenium工具组成&lt;/p&gt;
&lt;p&gt;是由几个工具组成，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002192902693-1181484182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;①Selenium IDE 是嵌入到Firefox浏览器中的一个插件，实现简单的浏览器录制与回放功能。&lt;/p&gt;
&lt;p&gt;实际场景中如何使用？&lt;/p&gt;
&lt;p&gt;快速的创建BUG重现脚本，在测试人员的测试过程中，发现了BUG之后可以通过IDE将重现的步骤记录下来，以帮助开发人员更容易的重现BUG。IDE录制的脚本可以转换成多种语言，从而帮助我们快速的开发脚本。&lt;/p&gt;
&lt;p&gt;②Selenium Gird是一种自动化测试的辅助工具，Gird通过现有的计算机基础设施，能加快web_app的功能测试，利用Gird，可以很方便的同时在多台机器上和异构环境中并行运行多个测试用例。&lt;/p&gt;
&lt;p&gt;其主要特点：并行执行，通过一个主机统一控制用例在不同环境、不同浏览器下运行，灵活添加变动测试机&lt;/p&gt;
&lt;p&gt;③Selenium RC是Selenium家族的核心工具， Selenium RC支持多种不同的语言编写自动化测试脚本， 通过Selenium RC的服务器为代理服务器去访问应用从而达到测试的目的。Selenium RC使用分Client Libraries和Selenium Server， ClientLibraries库主要用于编写测试脚本， 用来控制Selenium Server的库。&lt;/p&gt;
&lt;p&gt;Selenium Server负责控制浏览器的行为， 它主要包含3部分：Launcher、Http Proxy、Core。&lt;/p&gt;
&lt;p&gt;其中Core是被Selenium Server嵌入到浏览器页面中， 它本质是JS函数的集合， 通过对这些JS函数进行操作，实现用程序对浏览器进行操作。Launcher 用于启动浏览器，把Core加载到浏览器页面中，并把浏览器代理设置成为Selenium Server的HttpProxy。&lt;/p&gt;
&lt;p&gt;④WebDriver针对各个浏览器而开发， 取代了嵌入到被测web应用中的javascript， 与浏览器紧密集成。同时 WebDriver还利用操作系统级的调用模拟用户输入。&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;准备工具如下：&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;JDK&lt;span class=&quot;fontstyle0&quot;&gt;安装包： &lt;span class=&quot;fontstyle1&quot;&gt;JDK1.8&lt;span class=&quot;fontstyle0&quot;&gt;及以上&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;Eclipse &lt;span class=&quot;fontstyle0&quot;&gt;压缩包： &lt;span class=&quot;fontstyle1&quot;&gt;http://www.eclipse.org/downloads/&lt;br/&gt;Selenium&lt;span class=&quot;fontstyle0&quot;&gt;压缩包： &lt;span class=&quot;fontstyle1&quot;&gt;http://code.google.com/p/selenium/downloads/list，Selenium建议使用Java中的Maven下载，更方便&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;环境搭建就以Maven为例，要用Maven这个插件，就得查看该插件是否已集成在自己使用的Eclipse中，查看方式如下：&lt;/p&gt;
&lt;p&gt;Window&amp;gt;Preferences，查看是否有Maven文件，若有，则说明已经集成好了（或已配置好了），可以使用，若没有，则需要自己手动配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002194355958-1077683640.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一步：&lt;/p&gt;
&lt;p&gt;1.1新建一个Maven工程，File&amp;gt;New&amp;gt;Other&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002194710708-2101550785.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.2选择Maven&amp;gt;选择Maven Project&amp;gt;点击Next&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002194754052-1292505148.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.3弹出如下界面，默认下一即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002194956208-494292111.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 1.4在接下来的窗口中，选择maven-archetype-quickstart&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002195050536-157823029.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.5此处需要填写信息，包名及工程名，随意自己填写&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002195401271-1271722305.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1.6点击Finish后，就会生成一个工程，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002195536068-1478533804.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第二步，下载Selenium需要的jar包&lt;/p&gt;
&lt;p&gt;2.1打开该网址：&lt;a href=&quot;http://www.mvnrepository.com/&quot; target=&quot;_blank&quot;&gt;http://www.mvnrepository.com/&lt;/a&gt;，在输入框中输入Selenium，点击搜索，出现如下界面，由于我们配置的环境是Java+Selenium，所以选择第一个即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002195901536-2085738919.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.2版本有很多，看个人选择，我下载的3.4.0版本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002200028583-1452882289.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.3点击3.4.0，出现如下界面，把如下代码复制到所建工程的pom.xml文件中&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002200223318-682576371.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.4粘贴到pom.xml文档中，保存便会自动下载&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002200525333-1675277174.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.5下载完成后，可查看到刚下载的Selenium中包含的jar包，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1242227/201710/1242227-20171002200721505-127616685.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第三步：&lt;/p&gt;
&lt;p&gt;环境已配置完毕，就去写第一个自动化代码吧。在百度输入框中输入12306并点击搜索，代码实现如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.test.auto;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.openqa.selenium.By;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.openqa.selenium.WebDriver;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.openqa.selenium.WebElement;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.openqa.selenium.chrome.ChromeDriver;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; yihuqingjiu_test_12306 {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;chrom浏览器驱动的位置&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         System.setProperty(&quot;webdriver.chrome.driver&quot;,&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;web驱动指向chrom驱动并创建对象driver&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         WebDriver driver=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; ChromeDriver();
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取网址&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         driver.get(&quot;https://www.baidu.com&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;浏览器最大化&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;        driver.manage().window().maximize();
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;kw是输入框的id，12306是在输入框中药输入的内容&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         driver.findElement(By.id(&quot;kw&quot;)).sendKeys(&quot;12306&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;su是搜索按钮的id&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         WebElement btn=driver.findElement(By.id(&quot;su&quot;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击事件&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        btn.click();
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;休眠时间&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         Thread.sleep(3000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭页面&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;        driver.close();
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;23.41935483871&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;&lt;span&gt;本文仅代表作者观点，系作者@温一壶清酒发表。转载请注明出处：&lt;a href=&quot;http://www.cnblogs.com/hong-fithing/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/hong-fithing/&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 02 Oct 2017 12:13:00 +0000</pubDate>
<dc:creator>温一壶清酒</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hong-fithing/p/7622215.html</dc:identifier>
</item>
<item>
<title>Javascript 中 ==(相等运算符) 和 ===(严格相等运算符) 区别 - 奋勇前行</title>
<link>http://www.cnblogs.com/fyqx/p/7622201.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fyqx/p/7622201.html</guid>
<description>&lt;p&gt;　　在JS中,&quot;===&quot;叫做严格运算符，&quot;==&quot;叫做相等运算符。&lt;/p&gt;
&lt;p&gt;它们的区别是相等运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;）比较两个值是否相等，严格相等运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;）比较它们是否为“同一个值”。&lt;/p&gt;
&lt;p&gt;如果两个值不是同一类型，严格相等运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;）直接返回&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，而相等运算符（&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;）会将它们转化成同一个类型，再用严格相等运算符进行比较。&lt;/p&gt;

&lt;p&gt;严格运算符的运算规则如下:&lt;/p&gt;
&lt;p&gt;(1)不同类型值 如果两个值的类型不同，直接返回false。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
18 === &quot;18&quot;;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&quot;true&quot;=== &lt;span&gt;true;&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;br/&gt;1===1; //true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(2)同一类的原始类型值 同一类型的原始类型的值（数值、字符串、布尔值）比较时，值相同就返回true，值不同就返回false。  &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
NaN === NaN;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;NaN与任何值都不相等;（包括自身）&lt;/span&gt;
+0 === -0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(3)同一类的复合类型值  两个复合类型（对象、数组、函数）的数据比较时，不是比较它们的值是否相等，而是比较它们是否指向同一个对象。  &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
{} === {}; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
[] === []; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
(&lt;span&gt;function&lt;/span&gt; (){} === &lt;span&gt;function&lt;/span&gt; (){}); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; v1 =&lt;span&gt; {};
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; v2 =&lt;span&gt; v1;
v1 &lt;/span&gt;=== v2; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;两个变量引用同一个对象，则它们相等&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(4)undefined和null  undefined 和 null 与自身严格相等。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
undefined === undefined; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;span&gt;null&lt;/span&gt; === &lt;span&gt;null;&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var &lt;span class=&quot;nx&quot;&gt;v1&lt;span class=&quot;p&quot;&gt;;
&lt;span class=&quot;kd&quot;&gt;var &lt;span class=&quot;nx&quot;&gt;v2&lt;span class=&quot;p&quot;&gt;;
&lt;span class=&quot;nx&quot;&gt;v1 &lt;span class=&quot;o&quot;&gt;=== &lt;span class=&quot;nx&quot;&gt;v2; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;//变量声明后默认值是&lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;，因此两个只声明未赋值的变量是相等的。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;相等运算符在比较相同类型的数据时，与严格相等运算符完全一样。&lt;/p&gt;
&lt;p&gt; 在比较不同类型的数据时，相等运算符会先将数据进行类型转换，然后再用严格相等运算符比较。类型转换规则如下：&lt;/p&gt;
&lt;p&gt;(1)原始类型的值  原始类型的数据会转换成数值类型再进行比较。字符串和布尔值都会转换成数值.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
1 == &lt;span&gt;true&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 1 === 1&lt;/span&gt;

0 == &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 0 === 0&lt;/span&gt;

2 == &lt;span&gt;true&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 2 === 1&lt;/span&gt;

2 == &lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 2 === 0&lt;/span&gt;

'true' == &lt;span&gt;true&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 Number('true') === Number(true)&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 NaN === 1&lt;/span&gt;

'' == 0; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 Number('') === 0&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 0 === 0&lt;/span&gt;

'' == &lt;span&gt;false&lt;/span&gt;;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 Number('') === Number(false)&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 0 === 0&lt;/span&gt;

'1' == &lt;span&gt;true&lt;/span&gt;;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 Number('1') === Number(true)&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 等同于 1 === 1&lt;/span&gt;

'\n  123  \t' == 123; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; 因为字符串转为数字时，省略前置和后置的空格&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; (2)对象与原始类型值比较  对象（这里指广义的对象，包括数值和函数）与原始类型的值比较时，对象转化成原始类型的值，再进行比较。&lt;/p&gt;


&lt;p&gt; (3)undefined和null  undefined和null与其他类型的值比较时，结果都为false，它们互相比较时结果为true。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;false&lt;/span&gt; == &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;span&gt;false&lt;/span&gt; == undefined; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;

0 == &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
0 == undefined; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;span&gt;
undefined &lt;/span&gt;== &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;特别提醒:相等运算符的缺点&lt;/p&gt;
&lt;p&gt;1.相等运算符隐藏的类型转换，会带来一些违反直觉的结果。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
'' == '0'  ;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
0 == '';             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
0 == '0' ;           &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;

2 == &lt;span&gt;true&lt;/span&gt; ;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
2 == &lt;span&gt;false&lt;/span&gt;;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;

&lt;span&gt;false&lt;/span&gt; == 'false' ;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;span&gt;false&lt;/span&gt; == '0' ;       &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;

&lt;span&gt;false&lt;/span&gt; == undefined;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;span&gt;false&lt;/span&gt; == &lt;span&gt;null&lt;/span&gt;;       &lt;span&gt;//&lt;/span&gt;&lt;span&gt; false&lt;/span&gt;
&lt;span&gt;null&lt;/span&gt; == undefined ;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;

' \t\r\n ' == 0;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.使用相等运算符可能会对后续代码造成意外影响.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; a =&lt;span&gt; undefined; 
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(a == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;){     
    console.log(&lt;/span&gt;&quot;1&quot;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;
&lt;span&gt;} 
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; a =&lt;span&gt; undefined; 
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(a === &lt;span&gt;null&lt;/span&gt;&lt;span&gt;){     
    console.log(&lt;/span&gt;&quot;1&quot;); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;无输出&lt;/span&gt;
}&lt;span&gt;//&lt;/span&gt;&lt;span&gt;使用不当,执行意图发生改变.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;总结:建议尽量使用严格相等运算符。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐一下阮一峰的文章:http://javascript.ruanyifeng.com/grammar/operator.html#toc9&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 02 Oct 2017 12:07:00 +0000</pubDate>
<dc:creator>奋勇前行</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fyqx/p/7622201.html</dc:identifier>
</item>
</channel>
</rss>