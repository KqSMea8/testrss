<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>.Net Self Hosting WebServer 的几种方式 - 不负春光，努力生长</title>
<link>http://www.cnblogs.com/Wolfmanlq/p/7995193.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Wolfmanlq/p/7995193.html</guid>
<description>&lt;h2&gt;写在前面：&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;IIS是Windows平台非常关键的组件，它是微软自带的Web服务器，可以很方便的帮助我们运行起一个网站，WebApi等服务，提供给外部来访问。即使它被很多java或者ruby的同学各种鄙视，被.Net平台的同学们吐槽性能不好，不够灵活，部署受限等等，它依然在默默的帮助我们非常轻松的构建起一个Web应用。在.Net Core中微软提供了更为强大的Web服务器 Kestrel ，它 是一个跨平台&lt;a href=&quot;https://docs.microsoft.com/zh-CN/aspnet/core/fundamentals/servers/index&quot; data-linktype=&quot;relative-path&quot;&gt;ASP.NET Core 的 web 服务器&lt;/a&gt;基于&lt;a href=&quot;https://github.com/libuv/libuv&quot; data-linktype=&quot;external&quot;&gt;libuv&lt;/a&gt;，跨平台的异步 I/O 库。它可以单独使用来host一个web服务，也可以与&lt;span data-ttu-id=&quot;7b9dc-119&quot;&gt;反向代理服务器（如 IIS、Nginx 或 Apache）结合使用。 &lt;span data-ttu-id=&quot;7b9dc-120&quot;&gt;反向代理服务器接收到来自 Internet 的 HTTP 请求，并在进行一些初步处理后将这些请求转发到 Kestrel。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/423536/201712/423536-20171206221403128-41814559.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/423536/201712/423536-20171206221411534-715022150.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那么今天我们来聊一聊另外的两种可以self host的解决方案：&lt;/p&gt;
&lt;h2&gt; 第一种方式：Owin&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Owin 是 Open Web Interface for .NET 的简称，从字面意思解释可以看出OWIN是针对.NET平台的开放Web接口。那Web接口是谁和谁之间的接口呢？是Web应用程序与Web服务器之间的 接口，OWIN就是.NET Web应用程序与Web服务器之间的接口。为什么需要这样一个接口呢？因为.NET Web应用程序是运行于Web服务器之中的，.NET Web应用程序需要通过Web服务器接收用户的请求，并且通过Web服务器将响应内容发送用户。如果没有这样一个接口，.NET Web应用程序就要依赖于所运行的具体Web服务器，比如ASP.NET应用程序要依赖于IIS。有了这个接口，ASP.NET应用程序只需依赖这个抽象接口，不用关心所运行的Web服务器。所以我们可以得出下面的结论：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;OWIN的作用就是通过引入一组抽象接口，解耦了.NET Web应用程序与Web服务器，再次体现了接口的重要性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;而我们知道在软件开发中，每次解耦都是一次很大的进步。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;更近一层我们可以理解为：OWIN是对ASP.NET Runtime的抽象。它将应用与服务器解耦， 使得便携式 .NET Web 应用以及跨平台的愿望成为现实， 标准的 OWIN 应用可以在任何 OWIN 兼容的服务器上运行，不再依赖与 Windows 和 IIS，我们更可以不用装一大堆笨重的IDE（如 visual studio）来开发web应用程序，也不再那么的依赖于IIS去Host我们的程序。&lt;/p&gt;
&lt;p&gt;我们可以用下面的一张图来表示它究竟可以做什么：&lt;/p&gt;
&lt;div align=&quot;left&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/423536/201712/423536-20171206223659113-1622503616.png&quot; alt=&quot;&quot; width=&quot;740&quot; height=&quot;476&quot;/&gt;
&lt;/div&gt;















&lt;p&gt;具体使用如下：&lt;/p&gt;
&lt;p&gt;新建EventsController 继承自：System.Web.Http.ApiController &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; EventsController : ApiController
    {
        [Authorize]
        [Route(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;events&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Event&amp;gt;&lt;span&gt; Get()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; GetAllEventsFromRepo();
        }

        [Route(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;events/{id}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Event GetById(Guid id)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; GetAllEventsFromRepo().First(x =&amp;gt; x.EventId ==&lt;span&gt; id);
        }

        [Route(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;events&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;Event&amp;gt; GetByType(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; type)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; GetAllEventsFromRepo().Where(x =&amp;gt;&lt;span&gt; x.EventType.Equals(type, StringComparison.InvariantCultureIgnoreCase));
        }

        [Route(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;events&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; HttpResponseMessage Post(Event @event)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (@event == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpResponseMessage(HttpStatusCode.BadRequest);
            }

            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpResponseMessage(HttpStatusCode.Created);
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; IEnumerable&amp;lt;Event&amp;gt;&lt;span&gt; GetAllEventsFromRepo()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; List&amp;lt;Event&amp;gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Event
                {
                    EventId &lt;/span&gt;= Guid.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;45D80D13-D5A2-48D7-8353-CBB4C0EAABF5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    Timestamp &lt;/span&gt;= DateTime.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2014-06-30T01:37:41.0660548&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    EventType &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SearchView&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                },
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Event
                {
                    EventId &lt;/span&gt;= Guid.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;83F9262F-28F1-4703-AB1A-8CFD9E8249C9&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    Timestamp &lt;/span&gt;= DateTime.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2014-06-30T01:37:52.2618864&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    EventType &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DetailsView&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                },
                &lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Event
                {
                    EventId &lt;/span&gt;= Guid.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;3E83A96B-2A0C-49B1-9959-26DF23F83AEB&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    Timestamp &lt;/span&gt;= DateTime.Parse(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2014-06-30T01:38:00.8518952&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                    EventType &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;SearchView&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                }
            };
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后新建一个Startup.cs的class，我们可以看到这里体现了Middleware(中间件)的思想，即插即用，熟悉.Net Core的同学的对它并不陌生。 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Startup
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Configuration(IAppBuilder app)
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; config = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpConfiguration();
            config.MapHttpAttributeRoutes();

            app.UseWebApi(config);

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; builder = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ContainerBuilder();
            builder.RegisterApiControllers(&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(EventsController).Assembly);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; container =&lt;span&gt; builder.Build();

            app.UseAutofacMiddleware(container);
            app.UseAutofacWebApi(config);
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面代码中的ContainerBuilder 是Autofac提供的功能，它可以让我们动态的注册Controller到容器中，还有一个非常重要的东西就是 HttpConfiguration，它用来表示 &lt;a href=&quot;https://msdn.microsoft.com/zh-cn/system.web.http.httpserver&quot;&gt;HttpServer&lt;/a&gt; 实例的配置。&lt;/p&gt;
&lt;p&gt;然后我们只需要下面一句代码就可以让我们API 工作起来了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
WebApp.Start&amp;lt;TestStartup&amp;gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://localhost:51502&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样通过 http://localhost:51502 地址就可以访问我们的服务了，非常的简单。&lt;/p&gt;
&lt;h2&gt; 第二种方式：通过进程直接调用iisexpress.exe&lt;/h2&gt;
&lt;p&gt;iisexpress.iis我们很熟悉，它是windows平台自带的IIS 的运行文件，默认路径在： C:\Program Files\IIS Express 目录下，我们可以在代码中创建进程运行起这个exe就可以了。具体代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; IISExpress : IDisposable
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     Stores whether this instance has been disposed.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt;&lt;span&gt; _isDisposed;

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     Stores the IIS Express process.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Process _process;

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Dispose()
        {
            Dispose(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            GC.SuppressFinalize(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; Starts IIS Express using the specified directory path and port.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;directoryPath&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The directory path.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;port&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The port.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;address&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The address.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Start(&lt;span&gt;string&lt;/span&gt; directoryPath, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; port, Uri address)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (_process != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; InvalidOperationException(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;The IISExpress process is already running.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            }

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (address != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
                {
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; request =&lt;span&gt; (HttpWebRequest)WebRequest.Create(address);
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; webResponse =&lt;span&gt; (HttpWebResponse)request.GetResponse();

                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (webResponse.StatusCode ==&lt;span&gt; HttpStatusCode.OK)
                    {
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
                    }
                }
                &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception ex)
                {
                    Trace.WriteLine(ex);
                }
            }

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; iisExpressPath =&lt;span&gt; DetermineIisExpressPath();
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; arguments = &lt;span&gt;string&lt;/span&gt;.Format(CultureInfo.InvariantCulture, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/path:\&quot;{0}\&quot; /port:{1}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, directoryPath, port);

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; info = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ProcessStartInfo(iisExpressPath)
            {
                WindowStyle &lt;/span&gt;=&lt;span&gt; ProcessWindowStyle.Hidden,
                ErrorDialog &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                LoadUserProfile &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                CreateNoWindow &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
                UseShellExecute &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
                Arguments &lt;/span&gt;=&lt;span&gt; arguments
            };

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; startThread = &lt;span&gt;new&lt;/span&gt; Thread(() =&amp;gt;&lt;span&gt; StartIisExpress(info))
            {
                IsBackground &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;
            };

            startThread.Start();
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; Releases unmanaged and - optionally - managed resources.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;disposing&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;c&amp;gt;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&amp;lt;/c&amp;gt;&lt;/span&gt;&lt;span&gt; to release both managed and unmanaged resources; &lt;/span&gt;&lt;span&gt;&amp;lt;c&amp;gt;&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;&amp;lt;/c&amp;gt;&lt;/span&gt;&lt;span&gt; to release only unmanaged resources.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;virtual&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Dispose(&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; disposing)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (_isDisposed)
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
            }

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (disposing)
            {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (_process != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Free managed resources&lt;/span&gt;
                    &lt;span&gt;if&lt;/span&gt; (_process.HasExited == &lt;span&gt;false&lt;/span&gt;&lt;span&gt;)
                    {
                        SendStopMessageToProcess(_process.Id);
                        _process.Close();
                    }

                    _process.Dispose();
                }
            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Free native resources if there are any&lt;/span&gt;
            _isDisposed = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     Determines the IIS express path.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     A &lt;/span&gt;&lt;span&gt;&amp;lt;see cref=&quot;String&quot; /&amp;gt;&lt;/span&gt;&lt;span&gt; instance.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; DetermineIisExpressPath()
        {
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt; iisExpressPath;

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (Environment.Is64BitOperatingSystem)
            {
                iisExpressPath &lt;/span&gt;=&lt;span&gt; Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                iisExpressPath &lt;/span&gt;=&lt;span&gt; Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);
            }

            iisExpressPath &lt;/span&gt;= Path.Combine(iisExpressPath, &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;C:\Program Files\IIS Express\iisexpress.exe&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; iisExpressPath;
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The send stop message to process.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;processId&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The process id.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; SendStopMessageToProcess(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; processId)
        {
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; ptr =&lt;span&gt; NativeMethods.GetTopWindow(IntPtr.Zero);
                     ptr &lt;/span&gt;!=&lt;span&gt; IntPtr.Zero;
                     ptr &lt;/span&gt;= NativeMethods.GetWindow(ptr, &lt;span&gt;2&lt;/span&gt;&lt;span&gt;))
                {
                    &lt;/span&gt;&lt;span&gt;uint&lt;/span&gt;&lt;span&gt; num;
                    NativeMethods.GetWindowThreadProcessId(ptr, &lt;/span&gt;&lt;span&gt;out&lt;/span&gt;&lt;span&gt; num);
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (processId ==&lt;span&gt; num)
                    {
                        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; handle = &lt;span&gt;new&lt;/span&gt; HandleRef(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;, ptr);
                        NativeMethods.PostMessage(handle, &lt;/span&gt;&lt;span&gt;0x12&lt;/span&gt;&lt;span&gt;, IntPtr.Zero, IntPtr.Zero);
                        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
                    }
                }
            }
            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (ArgumentException)
            {
            }
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; Starts the IIS express.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;info&quot;&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The info.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        [SuppressMessage(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Microsoft.Design&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;CA1031:DoNotCatchGeneralExceptionTypes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
            Justification &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Required here to ensure that the instance is disposed.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; StartIisExpress(ProcessStartInfo info)
        {
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
            {
                _process &lt;/span&gt;=&lt;span&gt; Process.Start(info);

                _process.WaitForExit();
            }
            &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception)
            {
                Dispose();
            }
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;     The native methods.
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; NativeMethods
        {
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The get top window.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;hWnd&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The h wnd.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The &lt;/span&gt;&lt;span&gt;&amp;lt;see cref=&quot;IntPtr&quot;/&amp;gt;&lt;/span&gt;&lt;span&gt;.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
            [DllImport(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user32.dll&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, SetLastError = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)]
            &lt;/span&gt;&lt;span&gt;internal&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;extern&lt;/span&gt;&lt;span&gt; IntPtr GetTopWindow(IntPtr hWnd);

            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The get window.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;hWnd&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The h wnd.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;uCmd&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The u cmd.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The &lt;/span&gt;&lt;span&gt;&amp;lt;see cref=&quot;IntPtr&quot;/&amp;gt;&lt;/span&gt;&lt;span&gt;.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
            [DllImport(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user32.dll&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, SetLastError = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)]
            &lt;/span&gt;&lt;span&gt;internal&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;extern&lt;/span&gt; IntPtr GetWindow(IntPtr hWnd, &lt;span&gt;uint&lt;/span&gt;&lt;span&gt; uCmd);

            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The get window thread process id.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;hwnd&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The hwnd.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;lpdwProcessId&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The lpdw process id.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The &lt;/span&gt;&lt;span&gt;&amp;lt;see cref=&quot;uint&quot;/&amp;gt;&lt;/span&gt;&lt;span&gt;.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
            [DllImport(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user32.dll&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, SetLastError = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)]
            &lt;/span&gt;&lt;span&gt;internal&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;extern&lt;/span&gt; &lt;span&gt;uint&lt;/span&gt; GetWindowThreadProcessId(IntPtr hwnd, &lt;span&gt;out&lt;/span&gt; &lt;span&gt;uint&lt;/span&gt;&lt;span&gt; lpdwProcessId);

            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The post message.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;hWnd&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The h wnd.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;Msg&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The msg.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;wParam&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The w param.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;lParam&quot;&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The l param.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;
            &lt;span&gt;///&lt;/span&gt;&lt;span&gt; The &lt;/span&gt;&lt;span&gt;&amp;lt;see cref=&quot;bool&quot;/&amp;gt;&lt;/span&gt;&lt;span&gt;.
            &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
            [&lt;span&gt;return&lt;/span&gt;&lt;span&gt;: MarshalAs(UnmanagedType.Bool)]
            [DllImport(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user32.dll&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, SetLastError = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)]
            &lt;/span&gt;&lt;span&gt;internal&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;extern&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; PostMessage(HandleRef hWnd, &lt;span&gt;uint&lt;/span&gt;&lt;span&gt; Msg, IntPtr wParam, IntPtr lParam);
        }
    &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码比较简单，大家都能看得懂，我们只需要指定需要host的文件目录，访问端口，以及公开Uri地址就可以了，这样就能调用起IIS的服务，帮助我们host服务。&lt;/p&gt;
&lt;h2&gt;写在最后：&lt;/h2&gt;
&lt;p&gt;可能不仅限于这两种方式，我只是把我最近使用到的两种方式分享给出来，如果大家有更好的方式，欢迎交流分享。&lt;/p&gt;

</description>
<pubDate>Wed, 06 Dec 2017 14:18:00 +0000</pubDate>
<dc:creator>不负春光，努力生长</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Wolfmanlq/p/7995193.html</dc:identifier>
</item>
<item>
<title>Solr7 安装部署 管理界面介绍 - ITDragon龙</title>
<link>http://www.cnblogs.com/itdragon/p/7995040.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/itdragon/p/7995040.html</guid>
<description>&lt;p&gt;本章重点介绍CentOS 安装部署Solr7 ，Solr的管理界面介绍，添加核心Core配置，Dataimport导入数据，Documents 在线维护索引，Query复杂查询和一些常见问题处理办法。&lt;/p&gt;
&lt;h2 id=&quot;什么是solr&quot;&gt;什么是Solr&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Solr 是Apache下的一个顶级开源项目，采用Java开发，基于Lucene的全文搜索服务器。Solr可以独立运行在Jetty、Tomcat等这些Servlet容器中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里谈到了Lucene，它是一个开放源代码的全文检索引擎工具包。提供了完整的查询引擎和索引引擎，目的是为开发人员提供工具包，以方便的在系统中实现全文检索的功能。&lt;br/&gt;而Solr 的目标是打造一款企业级的搜索引擎系统，可以独立运行。并且Solr提供了比Lucene更为丰富的查询语言，同时实现了可配置、可扩展，并对索引、搜索性能进行了优化。&lt;/p&gt;
&lt;h2 id=&quot;solr7-安装部署&quot;&gt;Solr7 安装部署&lt;/h2&gt;
&lt;p&gt;首先安装环境的jdk是 jdk1.8 或者更高，建议tomcat是tomcat8.0或者更高&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;You will need the Java Runtime Environment (JRE) version 1.8 or higher&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[itdragon@localhost solr-server]$wget http://mirror.bit.edu.cn/apache/lucene/solr/7.1.0/solr-7.1.0.zip
[itdragon@localhost solr-server]$unzip solr-7.1.0.zip
[itdragon@localhost solr-server]$ls
apache-tomcat-8.5-solr  solr-7.1.0
[itdragon@localhost solr-server]$mkdir -p apache-tomcat-8.5-solr/webapps/solr
[itdragon@localhost solr-server]$cd apache-tomcat-8.5-solr/webapps/solr/
[itdragon@localhost solr]$cp -r /home/itdragon/solr-server/solr-7.1.0/server/solr-webapp/webapp/* ./
[itdragon@localhost solr]$cp -r /home/itdragon/solr-server/solr-7.1.0/server/lib/ext/* ./WEB-INF/lib/
[itdragon@localhost solr]$cp -r /home/itdragon/solr-server/solr-7.1.0/server/lib/metrics*.* ./WEB-INF/lib/
[itdragon@localhost solr]$cp -r /home/itdragon/solr-server/solr-7.1.0/dist/solr-dataimporthandler-* ./WEB-INF/lib/
[itdragon@localhost solr]$cd ../../
[itdragon@localhost apache-tomcat-8.5-solr]$mkdir solrhome
[itdragon@localhost apache-tomcat-8.5-solr]$cp -r /home/itdragon/solr-server/solr-7.1.0/server/solr/* ./solrhome/
[itdragon@localhost apache-tomcat-8.5-solr]$vim webapps/solr/WEB-INF/web.xml
&amp;lt;env-entry&amp;gt;
   &amp;lt;env-entry-name&amp;gt;solr/home&amp;lt;/env-entry-name&amp;gt;
   &amp;lt;env-entry-value&amp;gt;solrhome地址，pwd查看&amp;lt;/env-entry-value&amp;gt;
   &amp;lt;env-entry-type&amp;gt;java.lang.String&amp;lt;/env-entry-type&amp;gt;
&amp;lt;/env-entry&amp;gt;
&amp;lt;!--
  &amp;lt;security-constraint&amp;gt;
    ......省略
  &amp;lt;/security-constraint&amp;gt;
--&amp;gt;
[itdragon@localhost apache-tomcat-8.5-solr]$cd bin/
[itdragon@localhost apache-tomcat-8.5-solr]$./startup.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第一步：系统环境准备：jdk版本在1.8，tomcat8.5&lt;br/&gt;第二步：下载solr7，并解压在当前目录&lt;br/&gt;第三步：在tomcat，webapps目录下创建solr目录，并将solr-7.1.0/server/solr-webapp/webapp/* 目录下的所有内容拷贝过去&lt;br/&gt;第四步：将需要的jar导入到 WEB-INF/lib/ 下&lt;br/&gt;第五步：在tomcat目录下创建solrhome（目录名自定义），并将solr-7.1.0/server/solr/* 目录下的所有内容拷贝过去&lt;br/&gt;第六步：修改WEB-INF/web.xml 文件，指定solrhome的位置，并注释security-constraint 权限内容&lt;br/&gt;第七步：启动tomcat，并访问http://ip:port/solr/index.html#/&lt;br/&gt;注意：访问http://ip:port/solr/ 显示404，目前还没有找到原因，网上说jar没到导入，可是笔者都导入了。&lt;/p&gt;
&lt;p&gt;看到管理页面说明安装成功&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171205162638394-1869628963.png&quot; alt=&quot;Solr管理页面&quot;/&gt;&lt;/p&gt;
&lt;p&gt;存在的问题&lt;br/&gt;1 80端口占用&lt;br/&gt;修改 tomcat/conf/server.xml 文件，更换端口号。&lt;br/&gt;2 Logging页面，日志不能正常显示&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[itdragon@localhost solr]$mkdir -p WEB-INF/classes
[itdragon@localhost solr]$cp /home/itdragon/solr-server/solr-7.1.0/server/resources/log4j.properties ./WEB-INF/classes/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第一步：在tomcat WEB-INF目录下创建classes目录&lt;br/&gt;第二步：将solr-7.1.0/server/resources/目录下的log4j.properties文件拷贝到classes目录中，重启Solr&lt;/p&gt;
&lt;h2 id=&quot;管理界面介绍&quot;&gt;管理界面介绍&lt;/h2&gt;
&lt;h3 id=&quot;添加核心core&quot;&gt;添加核心Core&lt;/h3&gt;
&lt;p&gt;在管理页面，点击Core Admin，选择AddCore，添加核心&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171205170733581-1223894950.png&quot; alt=&quot;添加核心&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;：自定义的名字，建议和instanceDir保持一致&lt;br/&gt;&lt;strong&gt;instanceDir&lt;/strong&gt;： solrhome目录下的实例类目&lt;br/&gt;&lt;strong&gt;dataDir&lt;/strong&gt;：默认填data即可&lt;br/&gt;&lt;strong&gt;config&lt;/strong&gt;：指定配置文件，new_core/conf/solrconfig.xml&lt;br/&gt;&lt;strong&gt;schema&lt;/strong&gt;：指定schema.xml文件，new_core/conf/schema文件(实际上是managed-schema文件)&lt;br/&gt;注意！在scheme下面有一个感叹号！&lt;br/&gt;instanceDir and dataDir need to exist before you can create the core&lt;/p&gt;
&lt;p&gt;如果你不管他，直接点击Add Core 会提示 solrconfig.xml 文件找不到&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Error CREATEing SolrCore 'new_core': Unable to create core [new_core] Caused by: Can't find resource 'solrconfig.xml' in classpath or '/home/itdragon/solr/apache-tomcat-8.5/solrhome/new_core'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方法如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[itdragon@localhost new_core]$mkdir conf
[itdragon@localhost new_core]$cp -r /home/itdragon/solr-server/solr-7.1.0/server/solr/configsets/_default/conf/* ./conf/
[itdragon@localhost solrhome]$cp -r /home/itdragon/solr-server/solr-7.1.0/contrib/ ./
[itdragon@localhost solrhome]$cp -r /home/itdragon/solr-server/solr-7.1.0/dist/ ./
检查solrconfig.xml和contrib目录，dist目录的相对位置
&amp;lt;!--
&amp;lt;lib dir=&quot;${solr.install.dir:../../../..}/contrib/extraction/lib&quot; regex=&quot;.*\.jar&quot; /&amp;gt;
......省略
--&amp;gt;
&amp;lt;lib dir=&quot;${solr.install.dir:../../}/contrib/extraction/lib&quot; regex=&quot;.*\.jar&quot; /&amp;gt;
......省略&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第一步：将solr-7.1.0/server/solr/configsets/_default/目录下的conf 拷贝到 new_core 目录下。正确的目录结构：new_core/conf/solrconfig.xml&lt;br/&gt;第二步：将contrib目录，dist目录拷贝到solrhome目录中&lt;br/&gt;第三步：检查solrconfig.xml文件配置的路径是否正确，重启服务&lt;/p&gt;
&lt;p&gt;重启服务后即可正常创建Core，然后instanceDir文件夹（new_core）里会自动生成一个core.properties文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;name=new_core
config=solrconfig.xml
schema=schema.xml
dataDir=data&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第二次创建core，就不用这么麻烦了，直接把第一次创建的new_core目录复制一份，修改core.properties文件中的name 即可。&lt;br/&gt;在Core Selector 中选择刚创建的 new_core，会出现很多菜单。这是本章的另一个重点。重点学习的内容：Query（查询页面），Documents （索引文档），Dataimport(导入数据)，Analysis（分析，下章节和中文分词一起介绍）。其他了解即可。&lt;/p&gt;
&lt;h3 id=&quot;dataimport导入数据&quot;&gt;Dataimport(导入数据)&lt;/h3&gt;
&lt;p&gt;点击Dataimport 显示 Sorry, no dataimport-handler defined! 解决方法如下&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[itdragon@localhost ~]$cd solr-server/apache-tomcat-8.5-solr/solrhome/contrib/dataimporthandler/lib
# 导入solr-dataimporthandler 和 mysql-connector-java jar包
[itdragon@localhost solrhome]$vim new_core/conf/solrconfig.xml
&amp;lt;lib dir=&quot;${solr.install.dir:../../}/contrib/dataimporthandler/lib&quot; regex=&quot;.*\.jar&quot; /&amp;gt;
......省略
&amp;lt;requestHandler name=&quot;/dataimport&quot; class=&quot;org.apache.solr.handler.dataimport.DataImportHandler&quot;&amp;gt;
    &amp;lt;lst name=&quot;defaults&quot;&amp;gt;
      &amp;lt;str name=&quot;config&quot;&amp;gt;data-config.xml&amp;lt;/str&amp;gt;
    &amp;lt;/lst&amp;gt;
&amp;lt;/requestHandler&amp;gt;
[itdragon@localhost solrhome]$vim new_core/conf/data-config.xml
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;  
&amp;lt;dataConfig&amp;gt;   
&amp;lt;dataSource type=&quot;JdbcDataSource&quot;   
          driver=&quot;com.mysql.jdbc.Driver&quot;   
          url=&quot;jdbc:mysql://localhost:3306/jpa&quot;   
          user=&quot;root&quot;   
          password=&quot;root&quot;/&amp;gt;   
&amp;lt;document&amp;gt;   
    &amp;lt;entity name=&quot;product&quot; query=&quot;SELECT pid,name,catalog,catalog_name,price,description,picture FROM products &quot;&amp;gt;
         &amp;lt;field column=&quot;pid&quot; name=&quot;id&quot;/&amp;gt; 
         &amp;lt;field column=&quot;name&quot; name=&quot;product_name&quot;/&amp;gt; 
&amp;lt;field column=&quot;catalog&quot; name=&quot;product_catalog&quot;/&amp;gt;
         &amp;lt;field column=&quot;catalog_name&quot; name=&quot;product_catalog_name&quot;/&amp;gt; 
         &amp;lt;field column=&quot;price&quot; name=&quot;product_price&quot;/&amp;gt; 
         &amp;lt;field column=&quot;description&quot; name=&quot;product_description&quot;/&amp;gt; 
         &amp;lt;field column=&quot;picture&quot; name=&quot;product_picture&quot;/&amp;gt; 
    &amp;lt;/entity&amp;gt;   
&amp;lt;/document&amp;gt;   

&amp;lt;/dataConfig&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第一步：进入solrhome/contrib/dataimporthandler/lib 目录下，若没有lib则创建一个，导入solr-dataimporthandler-7.1.0.jar 和 mysql-connector-java-5.1.17.jar 包&lt;br/&gt;第二步：修改new_core/conf/solrconfig.xml 文件，使其加载dataimporthandler/lib下的jar包&lt;br/&gt;第三步：在new_core/conf/solrconfig.xml 文件底部添加DataImportHandler 内容&lt;br/&gt;第四步：在new_core/conf/ 目录下创建data-config.xml（数据库配置和对应的字段），重启服务&lt;/p&gt;
&lt;p&gt;jar包和sql文件：&lt;br/&gt;&lt;a href=&quot;https://github.com/ITDragonBlog/daydayup/tree/master/Solr/data-import-jar&quot; class=&quot;uri&quot;&gt;https://github.com/ITDragonBlog/daydayup/tree/master/Solr/data-import-jar&lt;/a&gt;&lt;br/&gt;如果出现下图内容则说明配置成功。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171205182152409-98787547.png&quot; alt=&quot;导入数据&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Command&lt;/strong&gt;：full_import：全量导入；delta_import:增量导入。&lt;br/&gt;选择 全量导入，Execute执行，Refresh Status刷新查看状态，其他都选默认即可。&lt;br/&gt;Clean：在索引开始构建之前是否删除之前的索引，默认为true&lt;br/&gt;Commit：在索引完成之后是否提交。默认为true&lt;br/&gt;&lt;strong&gt;Execute&lt;/strong&gt;：执行导入&lt;br/&gt;&lt;strong&gt;Refresh Status&lt;/strong&gt;：刷新后才能看到数据发生了变化（点一次刷新一次）&lt;/p&gt;
&lt;h3 id=&quot;documents-索引文档&quot;&gt;Documents （索引文档）&lt;/h3&gt;
&lt;p&gt;索引的增加，修改，删除相关操作。其中修改的逻辑是先删除后增加。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171206115637988-613831217.png&quot; alt=&quot;增加索引&quot;/&gt;&lt;/p&gt;
&lt;p&gt;比较重要的是前三个参数&lt;br/&gt;&lt;strong&gt;Request-Handler(qt)&lt;/strong&gt;：update（新增，更新和删除都用update）&lt;br/&gt;&lt;strong&gt;Document Type&lt;/strong&gt;：提交的索引文档类型，有JSON、XML等格式&lt;br/&gt;&lt;strong&gt;Document(s)&lt;/strong&gt;：提交的索引文档内容&lt;br/&gt;Commit Within：每1000毫秒执行&lt;br/&gt;Overwrite：true，若文档存在则默认覆盖&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除索引&lt;/strong&gt;：删除用json格式会出错，用xml格式后面需添加&amp;lt; commit/&amp;gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171206115337550-536151368.png&quot; alt=&quot;删除索引&quot;/&gt;&lt;/p&gt;
&lt;p&gt;工作中，我们不可能为了个别数据去写代码修改数据，那么熟练使用Documents，对我们的工作有很大的帮助。&lt;/p&gt;
&lt;h3 id=&quot;query查询页面&quot;&gt;Query（查询页面）&lt;/h3&gt;
&lt;p&gt;查询所有价格在10到20之间的数据，并以价格降序输出商品类目名，商品标题，商品价格信息。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/806956/201712/806956-20171205231111722-72380527.png&quot; alt=&quot;查询&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request-Handler(qt)&lt;/strong&gt;：select查询操作&lt;br/&gt;&lt;strong&gt;q（query）&lt;/strong&gt;：查询条件，key:value 形式，只能满足简单的查询&lt;br/&gt;&lt;strong&gt;fq（filter query）&lt;/strong&gt;：过滤条件。对q的补充，实现复杂的查询。如：product_price:[10.0 TO 20.0] 表示价格在10~20之间。&quot; * &quot; 表示无限，[ * TO 20.0] 表示小于20.0&lt;br/&gt;&lt;strong&gt;sort&lt;/strong&gt;：对查询结果排序。如：product_price desc 表示价格降序&lt;br/&gt;&lt;strong&gt;start，rows&lt;/strong&gt;，开始页数，和每页多少条，简称页码&lt;br/&gt;&lt;strong&gt;fl（field list）&lt;/strong&gt;：指定那些字段有返回值。多个值用&quot;,&quot;分隔。如：product_catalog_name,product_name,product_price&lt;br/&gt;&lt;strong&gt;df（default field）&lt;/strong&gt;：默认域，当q查询没有key的时候，发挥作用&lt;br/&gt;&lt;strong&gt;wt（write type）&lt;/strong&gt;：输出格式，一般都是json&lt;br/&gt;&lt;strong&gt;hl（high light）&lt;/strong&gt;：高亮，搜索的结果若不高亮，那就没啥意义了。下一章会介绍&lt;/p&gt;
&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;
&lt;p&gt;Dashboard：&lt;br/&gt;显示了该Solr实例开始启动运行的时间、版本、系统资源（物理内存，交换空间）、jvm等信息&lt;br/&gt;Logging：Solr运行日志信息&lt;br/&gt;Java Properties：&lt;br/&gt;Solr在JVM 运行环境中的属性信息，包括类路径、文件编码、jvm内存设置等信息。&lt;br/&gt;Tread Dump：&lt;br/&gt;显示Solr Server中当前活跃线程信息，同时也可以跟踪线程运行栈信息。&lt;br/&gt;Overview：&lt;br/&gt;包含基本统计如当前文档数；和实例信息如当前核心的配置目录&lt;br/&gt;Files：&lt;br/&gt;在线预览solrhome/new_core/conf/* 文件或者目录&lt;br/&gt;Ping：&lt;br/&gt;请求来检查核心是否启动并响应请求，点击后显示响应的毫秒数&lt;br/&gt;Plugins / Stats：&lt;br/&gt;插件及其状态&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Solr7是基于Lucene的全文检索服务器，可以独立运行在servlet容器中&lt;/li&gt;
&lt;li&gt;Solr7的安装部署需要注意 tomcat/webapps/solr 和 solrhome 两个目录&lt;/li&gt;
&lt;li&gt;创建Solr Core需要注意 solrconfig.xml文件在new_core/conf目录中&lt;/li&gt;
&lt;li&gt;Query查询，q + fq 实现复杂的查询，sort排序，fl指定回显数据，hl高亮&lt;/li&gt;
&lt;li&gt;Documents，支持新增，更新，删除索引文档&lt;/li&gt;
&lt;li&gt;Dataimport，导入数据，需要注意配置 solrconfig.xml 文件和创建 data-config.xml 文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;到这里Solr7 的安装部署，管理界面介绍就结束了。感谢阅读！欢迎点评！！&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 13:42:00 +0000</pubDate>
<dc:creator>ITDragon龙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/itdragon/p/7995040.html</dc:identifier>
</item>
<item>
<title>【读书笔记】《Effective Java》——创建和销毁对象 - 没课割绿地</title>
<link>http://www.cnblogs.com/justcooooode/p/7956048.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/justcooooode/p/7956048.html</guid>
<description>&lt;h3&gt;Item 1. 考虑用静态工厂方法替代构造器&lt;/h3&gt;
&lt;p&gt;获得一个类的实例时我们都会采取一个公有的构造器。&lt;span&gt;&lt;strong&gt;Foo x = new Foo()；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;同时我们应该掌握另一种方法就是&lt;strong&gt;静态工厂方法&lt;/strong&gt;（static factory method）。&lt;/p&gt;
&lt;p&gt;一句话总结，静态工厂方法其实就是一个返回类的实例的静态方法。&lt;/p&gt;
&lt;p&gt;书中给出的例子是Boolean的valueOf方法：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1177828/201712/1177828-20171202234925460-11585886.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过valueOf方法将boolean基本类型转换成了一个Boolean类型，返回了一个新的对象引用。&lt;/p&gt;
&lt;p&gt;除&lt;strong&gt;valueOf&lt;/strong&gt;外，像Java中的&lt;strong&gt;getInstance&lt;/strong&gt;和&lt;strong&gt;newInstance&lt;/strong&gt;等方法都为静态工厂方法。&lt;/p&gt;
&lt;p&gt;静态工厂方法不同于设计模式中的工厂方法。&lt;/p&gt;
&lt;p&gt;那么为什么要使用静态工厂方法呢？下面是它的几大优势：&lt;/p&gt;
&lt;h4&gt;它们有名字&lt;/h4&gt;
&lt;p&gt;给构造器起名字，增强了代码的可读性。&lt;/p&gt;
&lt;p&gt;如果一个构造器的参数并不能确切描述它返回的对象，这时候可以考虑静态工厂方法。&lt;/p&gt;
&lt;p&gt;或者你的多个构造器只是在参数列表中的参数顺序上有所不同，那么除非你提供了详尽的文档说明，否则你下次使用时就会一脸懵逼，这几个构造器到底要选哪个🤔？&lt;/p&gt;
&lt;p&gt;例如下面这个例子，一个&lt;strong&gt;RandomIntGenerator&lt;/strong&gt;类，从类名可以看出这是个用来产生整型随机数的类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RandomIntGenerator {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; min;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; max;
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; next(){...}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;随机数的大小介于&lt;em&gt;min&lt;/em&gt;和&lt;em&gt;max&lt;/em&gt;两个参数之间，我们需要构造器去对它们进行初始化。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; RandomIntGenerator(&lt;span&gt;int&lt;/span&gt; min, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; max) {
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.min =&lt;span&gt; min;
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.max =&lt;span&gt; max;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很好，现在我们又想提供一个新的功能，用户只需要指定一个最小值即可，生成的随机数会介于指定的最小值和整型默认的最大值之间。&lt;/p&gt;
&lt;p&gt;所以，我们可能会添加一个新的构造器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; RandomIntGenerator(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; min) {
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.min =&lt;span&gt; min;
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.max =&lt;span&gt; Integer.MAX_VALUE;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里事情进展很顺利，但是有指定最小值的功能，相对的我们还要添加一个指定最大值的方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; RandomIntGenerator(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; max) {
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.min =&lt;span&gt; Integer.MIN_VALUE;
  &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.max =&lt;span&gt; max;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是创建完之后你会得到一个编译错误，原因是两个构造器有相同的方法签名（方法名和参数类型）。&lt;/p&gt;
&lt;p&gt;这时静态工厂方法就派上用场了，重新构造如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RandomIntGenerator {
  &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; min;
  &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; max;

  &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; RandomIntGenerator(&lt;span&gt;int&lt;/span&gt; min, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; max) {
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.min =&lt;span&gt; min;
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.max =&lt;span&gt; max;
  }

  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; RandomIntGenerator between(&lt;span&gt;int&lt;/span&gt; max, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; min) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RandomIntGenerator(min, max);
  }

  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; RandomIntGenerator biggerThan(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; min) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RandomIntGenerator(min, Integer.MAX_VALUE);
  }

  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; RandomIntGenerator smallerThan(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; max) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RandomIntGenerator(Integer.MIN_VALUE, max);
  }

  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; next() {...}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不仅没有了之前的错误，而且它们有着不同的名字，很清晰地描述了方法的功能。&lt;/p&gt;
&lt;p&gt;总之，由于静态工厂方法有名称，所以他们不受那些限制。&lt;/p&gt;
&lt;p&gt;当你有多个签名相同的构造器时，用几个名字有区分度的静态工厂方法代替可能是更好的解决办法。&lt;/p&gt;
&lt;h4&gt;不必在每次调用它们的时候创建一个新对象&lt;/h4&gt;
&lt;p&gt;每次调用构造器都会创建一个新对象，而静态工厂方法则不会。&lt;/p&gt;
&lt;p&gt;这使得不可变类可以使用预先定义好的实例，或者将构建好的实例缓存起来，进行重复利用，避免创建不必要的重复对象。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BooleanGenerator {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        Boolean b1 &lt;/span&gt;= Boolean.valueOf(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        Boolean b2 &lt;/span&gt;= Boolean.valueOf(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

        Boolean b3 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Boolean(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        Boolean b4 &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Boolean(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

        System.out.println(b1 &lt;/span&gt;==&lt;span&gt; b2);
        System.out.println(b3 &lt;/span&gt;==&lt;span&gt; b4);
    }
}
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;output:
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;true
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到使用valueOf并不会创建新的对象，对于一些经常创建相同对象的程序，并且创建对象的代价很高，静态工厂方法可以极大地提升性能。&lt;/p&gt;
&lt;h4&gt;可以返回原返回类型的任何子类型的对象&lt;/h4&gt;
&lt;p&gt;在选择返回对象的类时有了更大的灵活性。&lt;/p&gt;
&lt;p&gt;API可以返回对象，同时不会使对象的类变成公有的既可以是非公有类，这样做的目的可以隐藏实现类。&lt;/p&gt;
&lt;p&gt;公有的静态工厂方法所返回的对象的类不仅可以是非公有的，而且该类还可以随着每次调用发生变化，这取决于静态工厂方法的参数值。&lt;/p&gt;
&lt;p&gt;参考&lt;strong&gt;java.util.EnumSet&lt;/strong&gt;中的&lt;em&gt;&lt;strong&gt;noneOf&lt;/strong&gt;&lt;/em&gt;方法，根据不同的参数类型选择返回的是&lt;strong&gt;RegularEnumSet&lt;/strong&gt;还是&lt;strong&gt;JumboEnumSet&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1177828/201712/1177828-20171203110057804-2002114252.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;接下来，书中通过&lt;strong&gt;服务提供者框架&lt;/strong&gt;（Service Provider Framework）来说明了静态工厂方法的另一个用法。&lt;/p&gt;
&lt;p&gt;利用的是静态工厂方法返回的对象所属的类，在编写包含该静态工厂方法的类时可以不必存在。&lt;/p&gt;
&lt;p&gt;看起来有点绕，下面来通过代码来看一下。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务接口&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Service(){
 ...&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;具体的服务方法&lt;/span&gt;
&lt;span&gt;}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务提供者接口&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Provider{
    Service newService();
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;不可实例化的类，用于服务注册和访问&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Services {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Services{};&lt;span&gt;//&lt;/span&gt;&lt;span&gt;防止实例化

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将服务的名字映射到具体服务&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Map&amp;lt;String,Provider&amp;gt; providers = &lt;span&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;String, Provider&amp;gt;&lt;span&gt;();
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String DEFAULT_PROVIDER_NAME = &quot;&amp;lt;def&amp;gt;&quot;&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务提供者注册API
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;默认的注册方法&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; registerDefaultProvider(Provider p){
        registerProvider(DEFAULT_PROVIDER_NAME,p);
    }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;真正的注册方法&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; registerProvider(String name, Provider p) {
        providers.put(name, p);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;服务访问API&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Service newInstance() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; newInstance(DEFAULT_PROVIDER_NAME);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;真正的实例化方法&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Service newInstance(String name) {
        Provider p &lt;/span&gt;=&lt;span&gt; providers.get(name);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(p == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException(&quot;No provider registered with name:&quot; +&lt;span&gt; name);
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; p.newService();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;返回服务实例&lt;/span&gt;
&lt;span&gt;    }
}       &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务提供者框架是指这样一个系统：&lt;strong&gt;多个服务提供者实现一个服务，系统为服务提供者的客户端提供多个实现，并把他们从实现中解耦出来。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这块有点难理解，先来看一下UML图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1177828/201712/1177828-20171203155517163-1625472356.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JDBC&lt;/strong&gt;就是利用的服务提供者框架，当我们创建数据库连接时，需要先加载对应的驱动，然后获取连接。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Class.forName(jdbcDriver);
conn &lt;/span&gt;= DriverManager.getConnection(jdbcUrl, jdbcUser, jdbcPasswd);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于JDBC来说&lt;strong&gt;Connection&lt;/strong&gt;就是它的服务接口，里面的方法，不同的数据库需要自己实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DriverManager&lt;/strong&gt;就是Services类，其中包含的registerDriver和getConnection方法对应的就是注册和访问。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Driver&lt;/strong&gt;是一个服务提供者接口&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后返回的服务实际上是通过服务提供者接口，实现了解耦。&lt;/p&gt;
&lt;h4&gt;在创建参数化类型实例的时候，使得代码变得更加简洁&lt;/h4&gt;
&lt;p&gt;如果你用的是JDK1.7之前的版本在定义一个HashMap，那你不得不这么写：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
Map&amp;lt;String, String&amp;gt; map = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;String, String&amp;gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在使用构造器时必须再写一遍类型参数，因为不支持类型推到，每次都要干重复性的工作。&lt;/p&gt;
&lt;p&gt;假设HashMap提供了静态工厂方法，事情就变得简单：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &amp;lt;K,V&amp;gt; HashMap&amp;lt;K,V&amp;gt;&lt;span&gt; newInstance(){
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;K,V&amp;gt;&lt;span&gt;();    
} &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你就可以通过下面的代码代替上面繁琐的声明：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
Map&amp;lt;String,String&amp;gt; map = HashMap.newInstance();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;显然作者在写这本书时已经考虑到了这个问题（那时候JDK的版本是1.6），JDK1.7之后的版本有了类型推导。&lt;/p&gt;
&lt;p&gt;当然凡事都有两面性，除了上述的优点，静态工厂方法同样存在不足。&lt;/p&gt;
&lt;h6&gt;类如果不含共有的或者受保护的构造器，就不能被子类化&lt;/h6&gt;
&lt;p&gt;如果没有公有构造器，当然这个类就不能被子类继承。&lt;/p&gt;
&lt;p&gt;这也许是一个优点，因为鼓励程序使用&lt;strong&gt;组合&lt;/strong&gt;而不是继承。&lt;/p&gt;
&lt;h6&gt;他们与其他的静态方法实际上没有任何区别&lt;/h6&gt;
&lt;p&gt;在API文档中它们没有像构造器那样被明确标识出来，因此对于一个使用静态工厂方法而不是构造器的类来说，要想弄明白如何实例化，就需要费点事了。&lt;/p&gt;
&lt;p&gt;你可以使用注释或者如下的命名规则让用户知道这是一个静态工厂方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;valueOf&lt;/strong&gt;——返回的实例与它的参数具有相同的值，被用来做类型转换。e.g. String.valueOf()。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;of&lt;/strong&gt;——valueOf的一种更加简洁的替代，在EnumSet中使用并流行起来。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;getInstance&lt;/strong&gt;——通过方法的参数来描述返回实例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;newInstance&lt;/strong&gt;——和getInstance一样，每次返回新的实例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;getType&lt;/strong&gt;、&lt;strong&gt;newType&lt;/strong&gt;——和上面两个方法类似，在工厂方法处于不同的类中时使用，Type表示工厂方法返回的对象类型。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;总之，静态工厂方法和构造器各有优势，使用时需要衡量那种方法更好。&lt;/p&gt;
&lt;h3&gt;Item 2. 遇到多个构造器参数时要考虑用构建器&lt;/h3&gt;
&lt;p&gt;上一节介绍了静态工厂方法，虽然相对构造器来说有一定的优势，但是两者都有一个局限，就是存在大量可选参数时表现不是很好。&lt;/p&gt;
&lt;h4&gt;重叠构造器&lt;/h4&gt;
&lt;p&gt;当面对大量可选参数时，一些人可能会选择&lt;strong&gt;重叠构造器&lt;/strong&gt;（telescoping constructor）。&lt;/p&gt;
&lt;p&gt;文中举了一个食品营养成分表的例子，表中有些参数是必选的，有些参数是可选的。&lt;/p&gt;
&lt;p&gt;对于重叠构造器来说，第一个构造器只包含必选参数，第二个构造器有一个可选参数，第三个构造器有两个，以此类推，直到最后一个构造器包含所有参数。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Telescoping constructor pattern - does not scale well!&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; NutritionFacts {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; servingSize;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; (mL)            required&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; servings;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; (per container) required&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; calories;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;                 optional&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; fat;          &lt;span&gt;//&lt;/span&gt;&lt;span&gt; (g)             optional&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; sodium;       &lt;span&gt;//&lt;/span&gt;&lt;span&gt; (mg)            optional&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; carbohydrate; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; (g)             optional&lt;/span&gt;

    &lt;span&gt;public&lt;/span&gt; NutritionFacts(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(servingSize, servings, 0&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; NutritionFacts(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings,
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; calories) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(servingSize, servings, calories, 0&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; NutritionFacts(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings,
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; calories, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; fat) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(servingSize, servings, calories, fat, 0&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; NutritionFacts(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings,
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; calories, &lt;span&gt;int&lt;/span&gt; fat, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; sodium) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;(servingSize, servings, calories, fat, sodium, 0&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; NutritionFacts(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings,
           &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; calories, &lt;span&gt;int&lt;/span&gt; fat, &lt;span&gt;int&lt;/span&gt; sodium, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; carbohydrate) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.servingSize  =&lt;span&gt; servingSize;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.servings     =&lt;span&gt; servings;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.calories     =&lt;span&gt; calories;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.fat          =&lt;span&gt; fat;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.sodium       =&lt;span&gt; sodium;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.carbohydrate =&lt;span&gt; carbohydrate;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重叠构造器像套圈一样，对参数进行赋值。&lt;/p&gt;
&lt;p&gt;你必须很小心地将值和参数的位置一一对应，随着参数数量的增加，你肯定不会记得第六个参数是什么。&lt;/p&gt;
&lt;p&gt;并且如果两个类型相同参数的顺序发生了调换，可能编译期不会提示错误，但在运行时会报错。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重叠构造器模式可行，但是当有许多参数时，客户端代码会很难编写，并且可读性很差。&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;JavaBeans模式&lt;/h4&gt;
&lt;p&gt;另一种解决办法是&lt;strong&gt;JavaBeans模式&lt;/strong&gt;，这种模式简单并且灵活，也是我们最经常使用的，通过setter方法来设置参数。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; JavaBeans Pattern - allows inconsistency, mandates mutability&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; NutritionFacts {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Parameters initialized to default values (if any)&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; servingSize  = -1; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Required; no default value&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; servings     = -1;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;     &quot;     &quot;      &quot;      &quot;&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; calories     = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; fat          = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; sodium       = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; carbohydrate = 0&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; NutritionFacts() { }
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Setters&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setServingSize(&lt;span&gt;int&lt;/span&gt; val)  { servingSize =&lt;span&gt; val; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setServings(&lt;span&gt;int&lt;/span&gt; val)     { servings =&lt;span&gt; val; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setCalories(&lt;span&gt;int&lt;/span&gt; val)     { calories =&lt;span&gt; val; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setFat(&lt;span&gt;int&lt;/span&gt; val)          { fat =&lt;span&gt; val; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setSodium(&lt;span&gt;int&lt;/span&gt; val)       { sodium =&lt;span&gt; val; }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setCarbohydrate(&lt;span&gt;int&lt;/span&gt; val) { carbohydrate =&lt;span&gt; val; }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaBeans模式弥补了重叠构造器的不足，有着良好的可实现性和可读性。&lt;/p&gt;
&lt;p&gt;但是其也存在着不足：&lt;/p&gt;
&lt;p&gt;JavaBeans是可变的，意思是在被创建之后它们的状态可以通过setter方法随之更改。&lt;/p&gt;
&lt;p&gt;它们的域不能声明为final，这也使它们不能成为不可变对象，不能保证线程安全。&lt;/p&gt;
&lt;h4&gt;Builder模式&lt;/h4&gt;
&lt;p&gt;Builder模式作为一种更好的方法，既能保证安全性，还有着良好的可读性。&lt;/p&gt;
&lt;p&gt;通过Builder类来返回一个builder对象，然后在客户端调用Builder中的方法来设置参数，最后调用builder()方法来完成创建一个不可变对象。&lt;/p&gt;
&lt;p&gt;Builder类是一个静态的内部类，其中的方法和setter类似，并且可以实现链式调用，易于使用和阅读。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('00661b4a-5bc6-458a-804a-aefccada6910')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_00661b4a-5bc6-458a-804a-aefccada6910&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_00661b4a-5bc6-458a-804a-aefccada6910&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('00661b4a-5bc6-458a-804a-aefccada6910',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_00661b4a-5bc6-458a-804a-aefccada6910&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * @ClassName: NutritionFacts
 * @Description: 构建器
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; LJH
 * @date 2017年6月26日 下午8:57:03
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; NutritionFacts {

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; required&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servingSize;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings;

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; optional&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; calories;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; fat;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; sodium;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; carbo;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Builder {

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servingSize;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; calories = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; fat = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; sodium = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; carbo = 0&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Builder(&lt;span&gt;int&lt;/span&gt; servingSize, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; servings) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.servingSize =&lt;span&gt; servingSize;
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.servings =&lt;span&gt; servings;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Builder calories(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {
            calories &lt;/span&gt;=&lt;span&gt; val;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Builder fat(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {
            fat &lt;/span&gt;=&lt;span&gt; val;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Builder sodium(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {
            sodium &lt;/span&gt;=&lt;span&gt; val;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Builder carbo(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; val) {
            carbo &lt;/span&gt;=&lt;span&gt; val;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; NutritionFacts build() {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; NutritionFacts(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        }
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; NutritionFacts(Builder builder) {
        servingSize &lt;/span&gt;=&lt;span&gt; builder.servingSize;
        servings &lt;/span&gt;=&lt;span&gt; builder.servings;
        calories &lt;/span&gt;=&lt;span&gt; builder.calories;
        fat &lt;/span&gt;=&lt;span&gt; builder.fat;
        sodium &lt;/span&gt;=&lt;span&gt; builder.sodium;
        carbo &lt;/span&gt;=&lt;span&gt; builder.carbo;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getServingSize() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; servingSize;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getServings() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; servings;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getCalories() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; calories;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getFat() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; fat;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getSodium() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; sodium;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; getCarbo() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; carbo;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        NutritionFacts cocaCola &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; NutritionFacts.Builder(240, 8).calories(100).sodium(35).carbo(27&lt;span&gt;).build();
        System.out.println(&lt;/span&gt;&quot;The nutritionfacts of cocaCola \nServing Size: &quot; + cocaCola.servingSize + &quot; ml&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Servings: &quot; + cocaCola.servings + &quot; per container&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Calories: &quot; +&lt;span&gt; cocaCola.calories);
        System.out.println(&lt;/span&gt;&quot;Fat: &quot; + cocaCola.fat + &quot; g&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Sodium: &quot; + cocaCola.sodium + &quot; mg&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Carbo: &quot; + cocaCola.carbo + &quot; g&quot;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;使用Builder模式的好处如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;构建器能通过builder方法和setter方法对其参数强加约束条件并且检验，如果不满足条件可以抛出异常；&lt;/li&gt;
&lt;li&gt;使用了构建器模式的类可以是不可变的；&lt;/li&gt;
&lt;li&gt;builder可以有多个可变参数（varargs）； &lt;/li&gt;
&lt;li&gt;构建器模式十分灵活，可以利用单个builder构建多个对象，参数可以改变，也可以自动填充；&lt;/li&gt;
&lt;li&gt;利用带有泛型的builder可以生成一个抽象工厂。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Builder模式的一个缺点就是，你必须自己编写代码创建。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总之，如果类的构造器或者静态工厂方法中含有多个参数，优先选择Builder模式。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Item 3. 用私有构造器或者枚举类型强化Singleton属性&lt;/h3&gt;
&lt;p&gt;Singleton既单例模式，作为设计模式中的一种，和其他模式一样，如果没有在项目中使用过真的很难理解。&lt;/p&gt;
&lt;p&gt;单例模式虽然结构很简单，但一开始看的时候我就懵了😵，不知道为什么要这么做。&lt;/p&gt;
&lt;p&gt;看了几篇博客之后，把干巴巴的代码和实际应用结合起来后就变得容易理解。&lt;/p&gt;
&lt;p&gt;其中一篇博客中举了一个例子：&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;假设有这样一个应用，其中需要读取配置文件的内容。许多应用都会有自己的配置文件，开发人员可以对应用中的一些参数进行自定义，然后写入配置文件。&lt;/p&gt;
&lt;p&gt;在实际项目中通常会使用xml或者properties格式的文件作为配置文件，现在假设我们通过一个叫Config的类来实现读取配置文件的功能。客户端可以通过new一个Config实例来获得操作配置文件内容的对象。&lt;/p&gt;
&lt;p&gt;如果在程序运行时，有很多模块都需要加载配置文件，那么每使用一次都需要创建一个Config对象。这样做肯定会产生问题，在程序运行时会存在多个Config对象，而这些对象中的内容都是相同的，浪费了内存资源。&lt;/p&gt;
&lt;p&gt;那么怎样能减少这种浪费，每次用到Config类时，都返回同一个对象呢？答案就是单例模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实现单例模式的方法有很多种，详细可以看&lt;a href=&quot;http://www.runoob.com/design-pattern/singleton-pattern.html&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最常用的是&lt;strong&gt;饿汉式&lt;/strong&gt;方法，优点是线程安全，创建简单。&lt;/p&gt;
&lt;p&gt;但是由于没有实现懒加载，无论有没有用到对象都会创建，浪费了一定的空间。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Singleton {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Singleton INSTANCE = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Singleton();
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Singleton() {
        System.out.println(&lt;/span&gt;&quot;Singleton is created&quot;&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Singleton getInstance() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; INSTANCE;
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; printStr() {
        System.out.println(&lt;/span&gt;&quot;Singleton&quot;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;java.lang.Runtime使用的就是该方法实现单例模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1177828/201712/1177828-20171206172011909-169191178.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另一种是通过&lt;strong&gt;枚举&lt;/strong&gt;创建，这种方法是作者推荐的，利用了JDK1.5之后加入的Enum类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt;&lt;span&gt; EnumSingleton {
    INSTANCE;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; printStr() {
        System.out.println(&lt;/span&gt;&quot;Singleton&quot;&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        EnumSingleton.INSTANCE.printStr();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到这个方法非常简洁明了，而且利用了枚举类的特性，提供了序列化机制，防止多次实例化。&lt;/p&gt;
&lt;p&gt;作者认为单元素的枚举类型已经成为了实现单例模式的最佳方法。&lt;/p&gt;
&lt;p&gt;不过感觉这种方法可读性不是很好，一般情况还是会选择饿汉式的创建方法。&lt;/p&gt;
&lt;h3&gt;Item 4. 通过私有构造器强化不可实例化的能力&lt;/h3&gt;
&lt;p&gt;我们经常会重复使用一些类，调用它们中的方法，这种情况下我们一般会把它们设计成一个&lt;strong&gt;工具类&lt;/strong&gt;，这个类中包含一些静态方法，我们可以直接通过类名调用。&lt;/p&gt;
&lt;p&gt;例如：&lt;strong&gt;java.lang.Math&lt;/strong&gt;，&lt;strong&gt;java.util.Arrays&lt;/strong&gt;，&lt;strong&gt;java.util.Collections&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这些工具类被设计成不可实例化的类，因为实例化对对它们来说没有意义。&lt;/p&gt;
&lt;p&gt;然而在缺少显示构造器的情况下，编译期会自动提供一个公共的、无餐的&lt;strong&gt;默认构造器&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;你可能会试图通过抽象类的方式来使得这个类不能被实例化，但是抽象类可以被&lt;strong&gt;继承&lt;/strong&gt;，它的子类仍然可以被实例化。&lt;/p&gt;
&lt;p&gt;并且这样做会让用户以为设计成抽象类的目的是为了继承。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么怎样才能使一个类具有不可实例化的能力？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为只有提供一个显示的构造器，编译期才不会自动生成默认构造器，所以我们只需要将构造器设为&lt;strong&gt;私有的&lt;/strong&gt;（private）即可。&lt;/p&gt;
&lt;p&gt;这样由于外部的类和它的子类不能调用一个私有构造方法，这个类也就不能被实例化。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Noninstantiable utility class&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UtilityClass {
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Suppress default constructor for noninstantiability&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt;&lt;span&gt; UtilityClass() {
     &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AssertionError();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了防止在这个类的内部调用构造器，可以使用一个断言AssertionError()来避免这种情况的发生。&lt;/p&gt;
&lt;h3&gt;Item 5. 避免创建不必要的对象&lt;/h3&gt;
&lt;p&gt;一般来说，最好通过重用对象来代替每次都创建一个功能相同的新对象。&lt;/p&gt;
&lt;p&gt;重用方式快速，并且简单。如果一个对象是&lt;strong&gt;不可变的&lt;/strong&gt;，那么它就可以一直被重用。&lt;/p&gt;
&lt;p&gt;创建字符串时，你可能会选择这么做：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
String s = &lt;span&gt;new&lt;/span&gt; String(“stringette”); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 不要这么做！&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用这种方式代替会更好：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
String s = “stringette”;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;初次使用字面量创建字符串也会在堆中创建对象，不过之后使用相同字符串时，都会利用字符串常量池中的引用，而不会创建新的对象。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（关于两种方法创建字符串更详尽的介绍可以看这两篇&lt;span&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/justcooooode/p/7603381.html&quot; target=&quot;_blank&quot;&gt;Java字符串常量池和intern()方法&lt;/a&gt;、&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;http://www.cnblogs.com/justcooooode/p/7670256.html&quot; target=&quot;_blank&quot;&gt;Java中的字符串字面量&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了重用不可变对象，也可以重用那些已知&lt;strong&gt;不会被修改&lt;/strong&gt;的&lt;strong&gt;可变对象&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;例如书中的例子，计算一个人是否是在“baby boomer”时期出生的。下面是一个反例：&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Person {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Date birthDate;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Other fields, methods, and constructor omitted
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; DON’T DO THIS!&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isBabyBoomer() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Unnecessary allocation of expensive object&lt;/span&gt;
        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(&quot;GMT&quot;&lt;span&gt;));
        gmtCal.set(&lt;/span&gt;1946, Calendar.JANUARY, 1, 0, 0, 0&lt;span&gt;);
        Date boomStart &lt;/span&gt;=&lt;span&gt; gmtCal.getTime();
        gmtCal.set(&lt;/span&gt;1965, Calendar.JANUARY, 1, 0, 0, 0&lt;span&gt;);
        Date boomEnd &lt;/span&gt;=&lt;span&gt; gmtCal.getTime();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; birthDate.compareTo(boomStart) &amp;gt;= 0 &amp;amp;&amp;amp; birthDate.compareTo(boomEnd) &amp;lt; 0&lt;span&gt;;
    }&lt;/span&gt;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;可以看到在isBabyBoomer方法中，创建了&lt;strong&gt;Calendar&lt;/strong&gt;、&lt;strong&gt;TimeZone&lt;/strong&gt;和&lt;strong&gt;Date&lt;/strong&gt;几个不会被修改的对象，如果每次调用方法都创建几个不必要的对象就会造成内存资源的浪费。&lt;/p&gt;
&lt;p&gt;替代方法是：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Person {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Date birthDate;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Other fields, methods, and constructor omitted&lt;/span&gt;
    &lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * The starting and ending dates of the baby boom.
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Date BOOM_START;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Date BOOM_END;
    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt;&lt;span&gt; {
        Calendar gmtCal &lt;/span&gt;= Calendar.getInstance(TimeZone.getTimeZone(&quot;GMT&quot;&lt;span&gt;));
        gmtCal.set(&lt;/span&gt;1946, Calendar.JANUARY, 1, 0, 0, 0&lt;span&gt;);
        BOOM_START &lt;/span&gt;=&lt;span&gt; gmtCal.getTime();
        gmtCal.set(&lt;/span&gt;1965, Calendar.JANUARY, 1, 0, 0, 0&lt;span&gt;);
        BOOM_END &lt;/span&gt;=&lt;span&gt; gmtCal.getTime();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isBabyBoomer() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; birthDate.compareTo(BOOM_START) &amp;gt;= 0 &amp;amp;&amp;amp; birthDate.compareTo(BOOM_END) &amp;lt; 0&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改进后的Person类只在初始化的时候创建&lt;strong&gt;Calendar&lt;/strong&gt;、&lt;strong&gt;TimeZone&lt;/strong&gt;和&lt;strong&gt;Date&lt;/strong&gt;这个几个对象，之后再调用isBabyBoomer方法就可以一劳永逸了。&lt;/p&gt;
&lt;p&gt;除了上面提到的两点，尽量做到以下来避免创建不必要的对象：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用静态工厂方法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如Boolean.valueOf方法，不会重复创建对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优先使用基本类型，而不是装箱基本类型。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不同于基本类型，有时你可能会没有意识到程序会自动装箱，装箱就意味着创建对象。（虽然Character、Byte、Short、Integer和Long实现了常量池技术，但是范围只有[-127,128]）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用对象池，除非池中的对象是非常重量级的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如数据库连接池，将数据库连接对象保存在对象池中来重用。&lt;/p&gt;
&lt;h3&gt;Item 6. 消除过期的对象引用&lt;/h3&gt;
&lt;p&gt;虽然Java有自己的垃圾回收策略，可以回收那些无法被访问的对象的内存。&lt;/p&gt;
&lt;p&gt;但是仍然有发生&lt;strong&gt;内存泄漏&lt;/strong&gt;的可能。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 你能发现哪里出现了内存泄漏吗？&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Stack {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object[] elements;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; size = 0&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; DEFAULT_INITIAL_CAPACITY = 16&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Stack() {
        elements &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Object[DEFAULT_INITIAL_CAPACITY];
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; push(Object e) {
        ensureCapacity();
        elements[size&lt;/span&gt;++] =&lt;span&gt; e;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object pop() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (size == 0&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; EmptyStackException();
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; elements[--&lt;span&gt;size];
    }&lt;br/&gt;&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ensureCapacity() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (elements.length ==&lt;span&gt; size)
            elements &lt;/span&gt;= Arrays.copyOf(elements, 2 * size + 1&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在&lt;strong&gt;pop&lt;/strong&gt;方法中，被弹出的元素的引用依然存在于数组中，这个元素实际上已经是一个&lt;strong&gt;过期引用&lt;/strong&gt;——它永远也不会再被访问，但Java的垃圾回收无法知道这一点，除非该引用被覆盖。&lt;/p&gt;
&lt;p&gt;即使Stack对象不再需要这个元素，但是数组中的引用仍然可以让它继续存在。&lt;/p&gt;
&lt;p&gt;在支持垃圾回收的语言中，内存泄漏的存在非常隐蔽。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，我们只需要做到：一旦对象的引用已经过期，就清空这些引用。&lt;/p&gt;
&lt;p&gt;修改上面的例子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object pop() {
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (size == 0&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; EmptyStackException();
    Object result &lt;/span&gt;= elements[--&lt;span&gt;size];
    elements[size] &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Eliminate obsolete reference&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么何时清空引用呢？&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;一旦元素被释放掉，则该元素中包含的任何对象引用都应该被清空。&lt;/li&gt;
&lt;li&gt;当你把引用放在缓存中，它就可能会被遗忘，导致过了很久之后虽然已经没用了，但还是残留在缓存中。这种情况我们应该偶尔去清理没有用的项。&lt;/li&gt;
&lt;li&gt;使用监听器和其他回调时，我们应该显式地注销。最好的方法是只保存保存它们的弱引用，然后储存在WeakHashMap中。&lt;/li&gt;
&lt;li&gt;使用分析工具（Heap Profiler）来发现内存泄漏。&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;p&gt;转载请注明原文链接：&lt;a href=&quot;http://www.cnblogs.com/justcooooode/p/7956048.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/justcooooode/p/7956048.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;参考资料&lt;/h3&gt;
&lt;p&gt;《Effective Java》第二章——创建和销毁对象 &lt;/p&gt;
&lt;p&gt;https://jlordiales.me/2012/12/26/static-factory-methods-vs-traditional-constructors/&lt;/p&gt;
&lt;p&gt;http://vojtechruzicka.com/avoid-telescoping-constructor-pattern/&lt;/p&gt;
&lt;p&gt;https://www.ibm.com/developerworks/cn/java/j-lo-Singleton/index.html&lt;/p&gt;
&lt;p&gt;https://medium.com/@biratkirat/learning-effective-java-item-4-4bc457fc5674&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 13:41:00 +0000</pubDate>
<dc:creator>没课割绿地</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/justcooooode/p/7956048.html</dc:identifier>
</item>
<item>
<title>JavaWeb框架_Struts2_(六)-----&gt;Struts2的输入校验 - Mairr</title>
<link>http://www.cnblogs.com/Mairr/p/7978684.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Mairr/p/7978684.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 输入校验章节目录&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;输入校验概述&lt;br/&gt;&lt;ul&gt;&lt;li&gt;客户端校验&lt;/li&gt;
&lt;li&gt;服务器端校验&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;手动编程校验
&lt;ul&gt;&lt;li&gt;重写validate方法&lt;/li&gt;
&lt;li&gt;重写validateXxx()方法&lt;/li&gt;
&lt;li&gt;输入校验流程&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;校验框架校验
&lt;ul&gt;&lt;li&gt;Struts2 内置的校验器&lt;/li&gt;
&lt;li&gt;常用的内置校验器的配置&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 详细内容&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.1 输入校验概述&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;/span&gt;输入校验分为客户端校验和服务器端校验，客户端校验主要是过滤正常用户的误操作，主要通过JavaScript代码完成;服务器端校验是整个应用阻止非法数据的最后防线，主要通过在应用中编程实现。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1.1 客户端校验&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;大多数情况下，使用JavaScript进行客户端校验的步骤如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;编写校验函数;&lt;/li&gt;
&lt;li&gt;在提交表单的事件中调用校验函数;&lt;/li&gt;
&lt;li&gt;根据校验函数来判断是否进行表单提交;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;　　下面通过一个简单的示例讲解使用JavaScript进行客户端校验的方法，具体代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;lt;%--&lt;span&gt;
  Created by IntelliJ IDEA.
  User: mairr
  Date: &lt;/span&gt;17-12-5&lt;span&gt;
  Time: 下午10:&lt;/span&gt;07&lt;span&gt;
  To change &lt;/span&gt;&lt;span&gt;this&lt;/span&gt; template use File | Settings |&lt;span&gt; File Templates.
&lt;/span&gt;--%&amp;gt;


&amp;lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&amp;lt;%@ page language = &quot;java&quot; import = &quot;java.util.*&quot; pageEncoding=&quot;utf-8&quot;%&amp;gt;
&amp;lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot;%&amp;gt;


&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;注册界面&amp;lt;/title&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; &amp;gt;

        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 去掉前后的空格&lt;/span&gt;
      &lt;span&gt;function&lt;/span&gt;&lt;span&gt; deltrim(x) {
          &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (x.length &amp;gt; 0 &amp;amp;&amp;amp; x.charAt(0) == ' '&lt;span&gt;)
              x &lt;/span&gt;= x.substring(1&lt;span&gt;, x.length);
          &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (x.length &amp;gt; 0 &amp;amp;&amp;amp; x.charAt(x.length - 1) == ' '&lt;span&gt;)
              x &lt;/span&gt;= x.substring(0, x.length - 1&lt;span&gt;);
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; x;
      }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 非空验证&lt;/span&gt;
      &lt;span&gt;function&lt;/span&gt;&lt;span&gt; isNULL(elem,message){
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; va =&lt;span&gt; deltrim(elem.value);
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(va == &quot; &quot;&lt;span&gt;) {
              alert(message);
              elem.focus();
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
          }
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
          }

          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证帐号，帐号只能是小写字母数字，并且只能以字母开头&lt;/span&gt;
      &lt;span&gt;function&lt;/span&gt;&lt;span&gt; validateId(){
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; first = document.forms[0].id.value.charAt(0&lt;span&gt;);
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; exp = /^[a-z0-9]+$/&lt;span&gt;;
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isNULL(document.forms[0].id,&quot;请输入帐号&quot;)){     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证非空&lt;/span&gt;
              &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证首字符&lt;/span&gt;
              &lt;span&gt;if&lt;/span&gt;((first &amp;gt;= 'a' &amp;amp;&amp;amp; first &amp;lt;= 'z') || (first &amp;gt;= 'A' &amp;amp;&amp;amp; first &amp;lt;= 'Z'&lt;span&gt;)){}
              &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                  alert(&lt;/span&gt;&quot;帐号首字符必须是字母！&quot;&lt;span&gt;);
                  document.forms[&lt;/span&gt;0&lt;span&gt;].id.focus();
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
              }
              &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!exp.test(document.forms[0&lt;span&gt;].id.value)){
                  alert(&lt;/span&gt;&quot;帐号必须是字母或者数字！&quot;&lt;span&gt;);
                  document.forms[&lt;/span&gt;0&lt;span&gt;].id.focus();
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
              }
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
          }
          &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
          }
      }


      &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证密码，密码要在8位以上，且需要有字母或者数字之外的字符&lt;/span&gt;
      &lt;span&gt;function&lt;/span&gt;&lt;span&gt; validatepwd(){
          &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; exp = /^[a-z0-9]+$/&lt;span&gt;;
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isNULL(document.forms[0].pwd,&quot; 请输入密码&quot;)){   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;验证非空&lt;/span&gt;
              &lt;span&gt;if&lt;/span&gt;(document.forms[0].pwd.value.length &amp;lt;= 8&lt;span&gt;){
                  alert(&lt;/span&gt;&quot;密码大于8位&quot;&lt;span&gt;);
                  document.forms[&lt;/span&gt;0&lt;span&gt;].pwd.focus();
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
              }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(exp.test(document.forms[0&lt;span&gt;].pwd.value)){
                      alert(&lt;/span&gt;&quot;密码要有字母和数字之外的字符！&quot;&lt;span&gt;);
                      document.forms[&lt;/span&gt;0&lt;span&gt;].pwd.focus();
                      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                  }
              }
          }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
          }
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(document.forms[0].pwd.value != document.forms[0&lt;span&gt;].repwd.value)
          {
              alert(&lt;/span&gt;&quot;两次密码不一样！&quot;&lt;span&gt;);
              document.forms[&lt;/span&gt;0&lt;span&gt;].pwd.focus();
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
          }
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
          }


          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证邮箱，右边为六位数子&lt;/span&gt;
          &lt;span&gt;function&lt;/span&gt;&lt;span&gt; checkcode() {
              &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; exp = /^[0-9]+$/&lt;span&gt;;
              &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isNULL(document.forms[0].ecode,&quot;请输入邮编&quot;)){    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证非空&lt;/span&gt;
                  &lt;span&gt;if&lt;/span&gt;(document.forms[0].ecode.value.length != 6&lt;span&gt;){
                      alert(&lt;/span&gt;&quot;邮编为6位&quot;&lt;span&gt;);
                      document.forms[&lt;/span&gt;0&lt;span&gt;].ecode.focus();
                      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                  }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                      &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!exp.test(document.forms[0&lt;span&gt;].ecode.value)){
                          alert(&lt;/span&gt;&quot;邮编为数字&quot;&lt;span&gt;);
                          document.forms[&lt;/span&gt;0&lt;span&gt;].ecode.focus();
                          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                      }
                  }
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
              }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
              }
          }


          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证E-mail的基本格式&lt;/span&gt;
          &lt;span&gt;function&lt;/span&gt;&lt;span&gt; checkEmail(){
              &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; exp = /^\w+((-\w+)|(\.\w+))*@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/&lt;span&gt;;
              &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isNULL(document.forms[0].email,&quot;请输入Email&quot;)){     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 验证非空&lt;/span&gt;
                  &lt;span&gt;if&lt;/span&gt;(!exp.test(document.forms[0&lt;span&gt;].email.value)){
                      alert(&lt;/span&gt;&quot;Email格式错误&quot;&lt;span&gt;);
                      document.forms[&lt;/span&gt;0&lt;span&gt;].email.focus();
                      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                  }
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
              }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
              }
          }


          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 提交按钮&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; gogo(){
              &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(validateId() &amp;amp;&amp;amp; validatepwd() &amp;amp;&amp;amp; checkcode() &amp;amp;&amp;amp;&lt;span&gt; checkEmail()){
                  document.forms[&lt;/span&gt;0&lt;span&gt;].submit();
                  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
              }
              &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
    &lt;/span&gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
&lt;br/&gt;&amp;lt;body&amp;gt;
     &amp;lt;s:form action =&quot;&quot; theme=&quot;simple&quot;&amp;gt;
        &amp;lt;table&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;登录帐号&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:textfield name=&quot;id&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;密码&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:password name=&quot;pwd&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;确认密码&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:password name=&quot;repwd&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;邮编&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:textfield name = &quot;ecode&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;Mail&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:textfield name = &quot;email&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;input type=&quot;button&quot; value=&quot;提交&quot; onclick=&quot;return gogo()&quot; /&amp;gt;&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;s:reset value = &quot;重置&quot;/&amp;gt;&amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
        &amp;lt;/table&amp;gt;
     &amp;lt;/s:form&amp;gt;
  &amp;lt;/body&amp;gt;&lt;p&gt;&amp;lt;/html&amp;gt;
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　上述的校验过程中，建立了一个Struts2的项目（前面几篇博文有介绍），JSP校验页面中运用了部分struts2的标签。由上述JSP程序，执行结果有如下几种情况：&lt;/p&gt;
&lt;p&gt;　　（1） 页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1194681/201712/1194681-20171205224403113-685678744.png&quot; alt=&quot;&quot; width=&quot;205&quot; height=&quot;185&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　（2） 客户端校验结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1194681/201712/1194681-20171205224618363-981797150.png&quot; alt=&quot;&quot; width=&quot;546&quot; height=&quot;203&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　客户端校验可以过滤用户的错误操作，是第一道防线，一般使用JavaScript代码实现。仅有客户端校验是不够的。攻击者可以绕过客户端校验直接进行非法输入，这样会引起系统的异常，为了确保数据的合法性，防止用户通过非正常手段提交错误信息，所以必须加上服务器验证。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1.2 服务器端校验&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　服务器对于系统的安全性、完整性、健壮性起到至关重要的作用。Struts2框架提供了一套验证框架，通过验证框架能够非常简单和快速地完成输入校验。&lt;/p&gt;
&lt;p&gt;　　在服务器端，对于输入校验Struts2提供了两种实现方法：一是采用手工编写代码实现;另外一种是，给予XML配置方式的实现（校验框架校验）。接下来详细介绍这两种方法。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.2 手动编程校验&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;手动编程校验主要是通过在类中编写校验逻辑代码，有两种方式i：一是在Action类中重写validate（）方法;二是在Action类中重写validateXxx()方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2.1 重写validate方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　validate（）方法会校验Action中所有与execute（）方法签名相同的方法。当某个数据校验失败时，在validate（）方法中应该调用addFiledError()方法向系统fieldErrors添加校验失败信息。为了使用addFileError方法，Action类需要继承ActionSupport。&lt;/p&gt;
&lt;p&gt;　　如果系统的fieldErrors包含失败信息，Struts2会将请求转发到名为input的result。在input视图中可以通过&amp;lt;s:fielderror/&amp;gt;标签失败信息。&lt;/p&gt;
&lt;p&gt;　　下面通过一个简单示例讲解如何重写validate（）方法进行输入校验。&lt;/p&gt;
&lt;p&gt;（1） 创建一个JSP页面login.jsp，要求验证所有输入项不能为空、密码长度6～12位以及两次密码一样（不运用javascript的客户端校验），具体代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;%--
  &lt;/span&gt;&lt;span&gt;Created by IntelliJ IDEA.
  User: mairr
  Date: 17-12-6
  Time: 下午9:39
  To change this template use File | Settings | File Templates.
--%&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;%@ page &lt;/span&gt;&lt;span&gt;language&lt;/span&gt;&lt;span&gt;=&quot;java&quot;&lt;/span&gt;&lt;span&gt; import&lt;/span&gt;&lt;span&gt;=&quot;java.util.*&quot;&lt;/span&gt;&lt;span&gt; pageEncoding&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt; %&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;%@ taglib &lt;/span&gt;&lt;span&gt;prefix&lt;/span&gt;&lt;span&gt;=&quot;s&quot;&lt;/span&gt;&lt;span&gt; uri&lt;/span&gt;&lt;span&gt;=&quot;/struts-tags&quot;&lt;/span&gt;&lt;span&gt; %&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;



&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;%
    String &lt;/span&gt;&lt;span&gt;path &lt;/span&gt;&lt;span&gt;= request.getContextPath();
    &lt;/span&gt;&lt;span&gt;String basePath &lt;/span&gt;&lt;span&gt;= request.getScheme() &lt;/span&gt;&lt;span&gt;+ &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + path + &quot;/&quot;;
%&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;



&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;base &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;%=basePath%&amp;gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;login&quot;&lt;/span&gt;&lt;span&gt; theme&lt;/span&gt;&lt;span&gt;=&quot;simple&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登陆帐号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:textfield &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;= &quot;id&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;密码&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:password &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;= &quot;pwd&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;确认密码&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:password &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;= &quot;repwd&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:submit &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;= &quot;提交&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:reset &lt;/span&gt;&lt;span&gt;value &lt;/span&gt;&lt;span&gt;= &quot;重置&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;显示this.addFieldError(&quot;id&quot;,&quot;id不能为空&quot;)的信息&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:fielderror &lt;/span&gt;&lt;span&gt;fieldName&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;显示所有校验失败信息&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:fielderror&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;


    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;s:form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（2） 创建Action类LoginAction.java，在该类中重写validate（）方法，具体代码如下“&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; action;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.opensymphony.xwork2.ActionSupport;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LoginAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String pwd;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String repwd;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(String id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPwd() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPwd(String pwd) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.pwd =&lt;span&gt; pwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getRepwd() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; repwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setRepwd(String repwd) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.repwd =&lt;span&gt; repwd;
    }


    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 重写validate方法，进行输入校验，该方法在execute方法之前执行&lt;/span&gt;
&lt;span&gt;    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; validate() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (id == &lt;span&gt;null&lt;/span&gt; || id.trim().equals(&quot; &quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;id&quot;, &quot;id不能为空&quot;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pwd == &lt;span&gt;null&lt;/span&gt; || pwd.trim().equals(&quot; &quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwd&quot;, &quot;密码不能为空&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pwd.length() &amp;lt; 6 || pwd.length() &amp;gt; 12&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwdlength&quot;, &quot;密码的长度在6~12位之间&quot;&lt;span&gt;);
            }
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;pwd.equals(repwd)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwdsame&quot;, &quot;两次密码不一致&quot;&lt;span&gt;);
        }
    }


    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实现登陆业务处理&lt;/span&gt;
&lt;span&gt;    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String execute() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（3） 配置Struts2的action,具体代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE struts PUBLIC
        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;
        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;default&quot;&lt;/span&gt;&lt;span&gt; namespace&lt;/span&gt;&lt;span&gt;=&quot;/&quot;&lt;/span&gt;&lt;span&gt; extends&lt;/span&gt;&lt;span&gt;=&quot;struts-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;action &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;login&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;action.LoginAction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;result &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;input&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/login.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;result&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;struts&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(4) web.xml配置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;web-app &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;&lt;span&gt;
         xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt;&lt;span&gt;
         version&lt;/span&gt;&lt;span&gt;=&quot;3.1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;struts2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;struts2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/*&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;web-app&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;（5） 运行login.jsp页面，如果输入非法信息则输出校验结果如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1194681/201712/1194681-20171206173653988-1915871016.png&quot; alt=&quot;&quot; width=&quot;238&quot; height=&quot;192&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2.2 重写validateXxx()方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　validateXxx()只会校验Action中方法名为Xxx()的方法，其中Xxx的第一个字母要大写。重写validateXxx()方法进行输入校验与重写validate（）方法基本一样，唯一不同的就是校验的方法名不同。&lt;/p&gt;
&lt;p&gt;　　将上面一个例子重写为validateXxx()方法进行输入校验，则需要修改Action类和配置文件。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;修改后的Action类的代码如下：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; action;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.opensymphony.xwork2.ActionSupport;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LoginAction &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; ActionSupport {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String pwd;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String repwd;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(String id) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPwd() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPwd(String pwd) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.pwd =&lt;span&gt; pwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getRepwd() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; repwd;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setRepwd(String repwd) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.repwd =&lt;span&gt; repwd;
    }


    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 重写validateLogin方法，进行输入校验&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; validateLogin() {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (id == &lt;span&gt;null&lt;/span&gt; || id.trim().equals(&quot; &quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;id&quot;, &quot;id不能为空&quot;&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pwd == &lt;span&gt;null&lt;/span&gt; || pwd.trim().equals(&quot; &quot;&lt;span&gt;)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwd&quot;, &quot;密码不能为空&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pwd.length() &amp;lt; 6 || pwd.length() &amp;gt; 12&lt;span&gt;) {
                &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwdlength&quot;, &quot;密码的长度在6~12位之间&quot;&lt;span&gt;);
            }
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;pwd.equals(repwd)) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.addFieldError(&quot;pwdsame&quot;, &quot;两次密码不一致&quot;&lt;span&gt;);
        }
    }


    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实现登陆业务处理&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String login() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; SUCCESS;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;修改后的配置文件struts.xml如下:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;

&amp;lt;!&lt;span&gt;DOCTYPE struts PUBLIC
        &lt;/span&gt;&quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;
        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&amp;gt;

&amp;lt;struts&amp;gt;
    &amp;lt;&lt;span&gt;package&lt;/span&gt; name=&quot;default&quot; namespace=&quot;/&quot; &lt;span&gt;extends&lt;/span&gt;=&quot;struts-default&quot;&amp;gt;
        &amp;lt;action name=&quot;login&quot; &lt;span&gt;class&lt;/span&gt;=&quot;action.LoginAction&quot; method=&quot;login&quot;&amp;gt;
            &amp;lt;result name=&quot;input&quot;&amp;gt;/login.jsp&amp;lt;/result&amp;gt;
        &amp;lt;/action&amp;gt;
    &amp;lt;/&lt;span&gt;package&lt;/span&gt;&amp;gt;
&amp;lt;/struts&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;结果是一致的：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1194681/201712/1194681-20171206175636097-1633394089.png&quot; alt=&quot;&quot; width=&quot;242&quot; height=&quot;223&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;2.2.3 输入校验的流程&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;经过前面讲解，可以知道，Struts2输入校验需要经过一下几个步骤：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;类型转器对请求参数执行类型转换，并且把转换后的值赋给Action中的属性。&lt;/li&gt;
&lt;li&gt;如果在执行转换过程中出现了异常，系统会把异常信息保存到ActionContext ， conversionError拦截器将异常信息添加到fieldError里。不管类型转换是否出现异常，都会进入步骤三;&lt;/li&gt;
&lt;li&gt;系统通过反射技术先调用Action中的validateXxx()方法，Xxx为方法名字。&lt;/li&gt;
&lt;li&gt;再调用Action中的validate（）方法;&lt;/li&gt;
&lt;li&gt;经过上面的4个步骤，如果系统中的fieldError存在错误信息（即存放错误信息的集合的size大于0），系统自动将请求转发至名称为input的视图。如果系统中的fileError没有任何错误信息，系统将执行Action中的处理方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.3 校验框架校验&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;　　使用Struts2校验框架的好处是将校验逻辑放到配置文件中，实现校验逻辑代码与业务逻辑代码的分离。使用基于校验框架校验方式实现输入校验时，Action也需要继承ActionSupport，并且提供校验文件。同样框架校验的方式也有2种：一是校验Action中所有与execute方法签名相同的方法;二是校验Action中某个与execute方法签名相同的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3.1 Struts2内置的校验器&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;Struts2框架提供的内置校验器如下：（&lt;span&gt;&lt;em&gt;&lt;strong&gt;多看几遍，还蛮重要的&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;）&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;required：必填校验器，要求field的值不能为null;&lt;/li&gt;
&lt;li&gt;requiredstring:必填字符串校验器，要求field的值不能为null，并且长度大于0，默认情况下会对字符串去掉前后空格;&lt;/li&gt;
&lt;li&gt;stringlength：字符串长度校验器，要求field的值必须在指定的范围内，否则校验失败;miniLength参数指定最小长度，maxLength参数指定最大长度，trim参数指定校验field之前是否去掉字符串前后空格;&lt;/li&gt;
&lt;li&gt;regex：正则表达式校验器，检查被校验的field是否匹配一个正则表达式。expression参数指定正则表达式， caseSensitive参数指定进行正则表达式匹配时，是否区分大小写，默认值为true;&lt;/li&gt;
&lt;li&gt;int：整数校验器，要求field的整数值必须在指定范围内，mini指定最小值，max最大值;&lt;/li&gt;
&lt;li&gt;double：双精度浮点数校验器，要求field的双进度浮点数必须在指定范围内，mini指定最小值，max最大值;&lt;/li&gt;
&lt;li&gt;fieldexpression：字段OGNL表达式校验器，要求field满足一个OGNL表达式，expression参数指定一个OGNL表达式，该逻辑表达式基于ValueStack进行求值，返回true时校验通过，否则不通过。该校验器只能用于&amp;lt;filed-validator&amp;gt;;&lt;/li&gt;
&lt;li&gt;email：邮件地址校验器，要求如果field的值非空，则必须是合法的邮件地址;&lt;/li&gt;
&lt;li&gt;url：网址校验器，要求如果field的值非空，则必须是合法的URL地址i；&lt;/li&gt;
&lt;li&gt;date：日期校验器，要求field的日期值必须在指定的范围内，mini指定最小值，max指定最大值;&lt;/li&gt;
&lt;li&gt;conversion：转换校验器，指定在类型转换失败时，提示错误信息;&lt;/li&gt;
&lt;li&gt;visitor：用于校验Action中的复合属性，指定一个校验文件用于校验复合中的属性;&lt;/li&gt;
&lt;li&gt;expression：OGNL表达式表达式校验，expression参数指定OGNL表达式，该逻辑表达式基于ValueStack进行求值，返回true时校验通过，否则不通过，该校验器不用在字段校验器的配置中，只能用于&amp;lt;validator&amp;gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;2.3.2 常用内置校验器的配置&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;　　对于Struts2校验框架来说，一般有两种方式来配置校验器：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用&amp;lt;validator&amp;gt;&lt;/li&gt;
&lt;li&gt;使用&amp;lt;field-validator&amp;gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　当&amp;lt;validator&amp;gt;的子节点中配置了&amp;lt;param name=&quot;fieldName&quot;&amp;gt;用于指定某个属性进行校验时，则达到的效果与&amp;lt;field-validator&amp;gt;是一样的。如下所示：（&lt;span&gt;&lt;em&gt;&lt;strong&gt;两种配置方式是等效的&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;校验user.id属性时，用&amp;lt;validator&amp;gt;来配置&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;validator &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;required&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;s:param &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;fieldName&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;user.id&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;s:param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户的ID不能为空！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        
        
&lt;span&gt;&amp;lt;!--------&lt;/span&gt;&lt;span&gt;方式二 ---&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;user.id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;required&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户的ID不能为空！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　下面简单介绍几种常用的内置校验器的配置示例：&lt;/p&gt;
&lt;p&gt;（1）  required（必填校验器）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;required&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户的ID不能为空！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）  requiredstring（必填字符串校验器）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;requiredstring&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;=&quot;trim&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户的ID不能为空！&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）  stringlength（字符串长度校验器）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;stringlength&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;= &quot;maxlength&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;12&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name &lt;/span&gt;&lt;span&gt;= &quot;minilength&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;6&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;密码必须在6～12位之间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（4）  email（邮件地址校验器）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;email&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;邮箱格式不正确&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（5）  regex（正则表达式校验器）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;field-validator &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;regex&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;expression&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;span&gt;^1[3578]\d{9}$&lt;/span&gt;&lt;span&gt;]]&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;手机号格式不正确&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（6）  int（整数校验）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;int&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;max&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;100&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;mini&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;年龄必须在0～100之间&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（7）  字段OGNL表达式校验器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;type &lt;/span&gt;&lt;span&gt;=&quot;int&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;expression&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;span&gt;imagefile.length() &amp;lt;=0 &lt;/span&gt;&lt;span&gt;]]&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;文件不能为空&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;message&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;field-validator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　基于Struts2框架的校验主要是以上内容，这是Struts2框架应用比较多的一个版块，比较重要的内容！&lt;/p&gt;

</description>
<pubDate>Wed, 06 Dec 2017 13:23:00 +0000</pubDate>
<dc:creator>Mairr</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Mairr/p/7978684.html</dc:identifier>
</item>
<item>
<title>WebRTC介绍及简单应用 - 西安-晁州</title>
<link>http://www.cnblogs.com/vipzhou/p/7994927.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/vipzhou/p/7994927.html</guid>
<description>&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;WebRTC&lt;/strong&gt;，即&lt;strong&gt;Web Real-Time Communication&lt;/strong&gt;，web实时通信技术。简单地说就是在web浏览器里面引入实时通信，包括音视频通话等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;WebRTC实时通信技术介绍&lt;/li&gt;
&lt;li&gt;如何使用&lt;/li&gt;
&lt;li&gt;媒体介绍&lt;/li&gt;
&lt;li&gt;信令&lt;/li&gt;
&lt;li&gt;STUN和TURN介绍&lt;/li&gt;
&lt;li&gt;对等连接和提议/应答协商&lt;/li&gt;
&lt;li&gt;数据通道&lt;/li&gt;
&lt;li&gt;NAT和防火墙穿透&lt;/li&gt;
&lt;li&gt;简单应用&lt;/li&gt;
&lt;li&gt;其它&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;hr/&gt;&lt;h2 id=&quot;webrtc实时通信技术介绍&quot;&gt;WebRTC实时通信技术介绍&lt;/h2&gt;
&lt;p&gt;WebRTC实现了基于网页的语音对话或视频通话，目的是无插件实现web端的实时通信的能力。&lt;/p&gt;
&lt;p&gt;WebRTC提供了视频会议的核心技术，包括音视频的采集、编解码、网络传输、展示等功能，并且还支持跨平台，包括linux、windows、mac、android等。&lt;/p&gt;
&lt;h3 id=&quot;webrtc三角形&quot;&gt;1. WebRTC三角形&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-955e9f0c12c1f907.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;webrtc梯形&quot;&gt;2. WebRTC梯形&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-2102650167dfc9b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;webrtc的多方会话&quot;&gt;3. WebRTC的多方会话&lt;/h3&gt;
&lt;p&gt;WebRTC支持多个浏览器参与的多方会话或会议会话，要建立这类会话有如下两种模式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-d7447a919e85b580.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-354bdfb8128a2ad1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;webrtc新功能特性&quot;&gt;4. WebRTC新功能特性&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-21804ac9ab6ca021.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;如何使用webrtc&quot;&gt;如何使用WebRTC&lt;/h2&gt;
&lt;p&gt;WebRTC易于使用，只需极少步骤便可建立媒体会话。有些消息在浏览器和服务器之间流动，有些则直接在两个浏览器（成为对等端）之间流动。&lt;/p&gt;
&lt;h3 id=&quot;建立webrtc会话&quot;&gt;1、建立WebRTC会话&lt;/h3&gt;
&lt;p&gt;建立WebRTC连接需要如下几个步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;获取本地媒体（&lt;code&gt;getUserMedia()&lt;/code&gt;，&lt;em&gt;MediaStream API&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;在浏览器和对等端（其它浏览器或终端）之间建立对等连接（&lt;em&gt;RTCPeerConnection API&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;将媒体和数据通道关联至该连接&lt;/li&gt;
&lt;li&gt;交换会话描述（&lt;em&gt;RTCSessionDescription&lt;/em&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-d71ee80e3193c9d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;浏览器M从Web服务器请求网页&lt;/li&gt;
&lt;li&gt;Web服务器向M返回带有WebRTC js的网页&lt;/li&gt;
&lt;li&gt;浏览器L从Web服务器请求网页&lt;/li&gt;
&lt;li&gt;Web服务器向L返回带有WebRTC js的网页&lt;/li&gt;
&lt;li&gt;M决定与L通信，通过M自身的js将M的会话描述对象（offer，提议）发送至Web服务器&lt;/li&gt;
&lt;li&gt;Web服务器将M的会话描述对象发送至L上的js&lt;/li&gt;
&lt;li&gt;L上的js将L的会话描述对象（answer，应答）发送至Web服务器&lt;/li&gt;
&lt;li&gt;Web服务器转发应答至M上的js&lt;/li&gt;
&lt;li&gt;M和L开始交互，确定访问对方的最佳方式&lt;/li&gt;
&lt;li&gt;完成后，M和L开始协商通信密钥&lt;/li&gt;
&lt;li&gt;M和L开始交换语音、视频或数据&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;WebRTC三角形会话具体的调用流程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-a7ba108759459bcb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;说明：
    SDP对象的传输可能是一个来回反复的过程，并且该过程采用的协议并未标准化&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;WebRTC梯形会话方式具体的调用流程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-e2f3794e43793917.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;说明：
    此场景中，浏览器M和L直接交换媒体，只是它们运行的Web服务器不用而已。每个浏览器的会话描述对象都会映射至Jingle[XEP-0166]session-initiate消息和session-accept方法。
    &lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;h2 id=&quot;媒体介绍&quot;&gt;媒体介绍&lt;/h2&gt;
&lt;p&gt;先来看下WebRTC中的本地媒体：&lt;/p&gt;
&lt;h3 id=&quot;webrtc中的媒体&quot;&gt;1、WebRTC中的媒体&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;轨道（&lt;em&gt;MediaStreamTrack&lt;/em&gt;，代表设备或录制内容可返回的单一类型的媒体，唯一关联一个“源”，WebRTC不能直接访问或控制“源”，对“源”的一切控制都通过轨道实施；一个“源”可能对应多个轨道对象）&lt;/li&gt;
&lt;li&gt;流（&lt;em&gt;MediaStream&lt;/em&gt;，轨道对象的集合）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;轨道和流的示意如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-26e01489f5de238e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;捕获本地媒体&quot;&gt;2、捕获本地媒体&lt;/h3&gt;
&lt;p&gt;如下代码展示了本地媒体的简单获取，并展示：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;co&quot;&gt;// 注意getUserMedia()在各浏览器中的区别  &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;// Opera --&amp;gt; getUserMedia  &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;// Chrome --&amp;gt; webkitGetUserMedia  &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;// Firefox --&amp;gt; mozGetUserMedia  &lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getUserMedia&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getUserMedia&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;webkitGetUserMedia&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;mozGetUserMedia&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
  
&lt;span class=&quot;co&quot;&gt;// 只获取video:  &lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; constraints &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;audio&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;  
&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; video &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;video&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
  
&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;successCallback&lt;/span&gt;(stream) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;co&quot;&gt;// Note: make the returned stream available to console for inspection  &lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; stream&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
      
&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;URL&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;co&quot;&gt;// Chrome浏览器&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;video&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;srcObject&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; stream&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;co&quot;&gt;// Firefox和Opera: 可以直接把视频源设置为stream  &lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;video&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; stream&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;co&quot;&gt;// 播放  &lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;video&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;play&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;  
  
&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;errorCallback&lt;/span&gt;(error)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;navigator.getUserMedia error: &quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; error)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;  
  
&lt;span class=&quot;va&quot;&gt;navigator&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getUserMedia&lt;/span&gt;(constraints&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; successCallback&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; errorCallback)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-87db0c197efb6eb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;完整代码查看：&lt;a href=&quot;https://github.com/caiya/webrtc-demo.git&quot; class=&quot;uri&quot;&gt;https://github.com/caiya/webrtc-demo.git&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;信令&quot;&gt;信令&lt;/h2&gt;
&lt;p&gt;在WebRTC中，信令起着举足轻重的作用。但实现没有标准化，比如http、websocket、xmpp等。&lt;/p&gt;
&lt;h3 id=&quot;信令的作用&quot;&gt;1、信令的作用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;协商媒体功能和设置&lt;/li&gt;
&lt;li&gt;标识和验证会话参与者的身份（交换SDP对象中的信息：媒体类型、编解码器、带宽等元数据）&lt;/li&gt;
&lt;li&gt;控制媒体会话、指示进度、更改会话、终止会话&lt;/li&gt;
&lt;li&gt;双占用分解&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;简单地说，信令就是协调通讯的过程，一旦信令服务建立好了，两个客户端之间建立了连接，理论上它们就可以进行点对点通讯了。&lt;/p&gt;
&lt;h3 id=&quot;信令的传输&quot;&gt;2、信令的传输&lt;/h3&gt;
&lt;p&gt;WebRTC要求在两个对等端建立双向的信令通道，通常有三种方式来传输WebRTC信令：&lt;strong&gt;http、websocket、数据通道&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;http方式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-749537b02dade731.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;websocket代理信令传输：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-cf0690dc1b4653d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;webrtc中的服务器&quot;&gt;3、WebRTC中的服务器&lt;/h3&gt;
&lt;p&gt;WebRTC提供了浏览器端的P2P通信，但并不意味着WebRTC不需要服务器。撇开应用服务器不说，至少以下两种服务器是必须的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;浏览器之间建立通信前交换各种元数据（信令）的服务器（信令服务）&lt;/li&gt;
&lt;li&gt;穿越NAT和防火墙的服务器（stun、turn、rsip等）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code&gt;说明：
    元数据是通过信令服务器中转发给另一个客户端，但是对于流媒体数据，一旦会话建立，首先尝试使用点对点连接。简单一点说就是：每个客户端都有一个唯一的地址，他能用来和其他客户端进行通讯和数据交换。
    
    STUN服务器：用来取外网地址的。（见下节）
    
    TURN服务器：在P2P失败时进行转发的。（见下节）
    
    ICE：*Interactive Connectivity Establishment*，即交互式连通建立方式。并非一种新的协议，它通过综合利用现有NAT穿透协议，以一种更有效的方式来组织会话建立过程，使之在不增加任何延迟同时比STUN等单一协议更具有健壮性、灵活性。&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;信令交互和rtcpeerconnection的建立&quot;&gt;4、信令交互和RTCPeerConnection的建立&lt;/h3&gt;
&lt;p&gt;WebRTC使用RTCPeerConnection建立连接传送流数据，在建立RTCPeerConnection实例之后，想要建立点对点的信道，需要做两件事：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;确定本机上的媒体流的特性，比如分辨率、编解码能力啥的（SDP描述符）&lt;/li&gt;
&lt;li&gt;连接两端的主机的网络地址（ICE Candidate）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;通过offer和answer交换SDP描述符：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;甲和乙各自建立一个PC实例&lt;/li&gt;
&lt;li&gt;甲通过PC所提供的createOffer()方法建立一个包含甲的SDP描述符的offer信令&lt;/li&gt;
&lt;li&gt;甲通过PC所提供的setLocalDescription()方法，将甲的SDP描述符交给甲的PC实例&lt;/li&gt;
&lt;li&gt;甲将offer信令通过服务器发送给乙&lt;/li&gt;
&lt;li&gt;乙将甲的offer信令中所包含的的SDP描述符提取出来，通过PC所提供的setRemoteDescription()方法交给乙的PC实例&lt;/li&gt;
&lt;li&gt;乙通过PC所提供的createAnswer()方法建立一个包含乙的SDP描述符answer信令&lt;/li&gt;
&lt;li&gt;乙通过PC所提供的setLocalDescription()方法，将乙的SDP描述符交给乙的PC实例&lt;/li&gt;
&lt;li&gt;乙将answer信令通过服务器发送给甲&lt;/li&gt;
&lt;li&gt;甲接收到乙的answer信令后，将其中乙的SDP描述符提取出来，调用setRemoteDescripttion()方法交给甲自己的PC实例&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;通过ICE框架建立NAT/防火墙穿越的连接：&lt;/p&gt;
&lt;p&gt;WebRTC使用ICE框架来获得这个外界可以直接访问的地址，RTCPeerConnection在创立的时候可以将ICE服务器的地址传递进去，如：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; iceServer &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;iceServers&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;st&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;stun:stun.l.google.com:19302&quot;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;]
&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; pc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;RTCPeerConnection&lt;/span&gt;(iceServer)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;甲、乙各创建配置了ICE服务器的PC实例，并为其添加onicecandidate事件回调&lt;/li&gt;
&lt;li&gt;当网络候选可用时，将会调用onicecandidate函数&lt;/li&gt;
&lt;li&gt;在回调函数内部，甲或乙将网络候选的消息封装在ICE Candidate信令中，通过服务器中转，传递给对方&lt;/li&gt;
&lt;li&gt;甲或乙接收到对方通过服务器中转所发送过来ICE Candidate信令时，将其解析并获得网络候选，将其通过PC实例的addIceCandidate()方法加入到PC实例中&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;这样连接就创立完成了，可以向RTCPeerConnection中通过addStream()加入流来传输媒体流数据。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;stun和turn介绍&quot;&gt;STUN和TURN介绍&lt;/h2&gt;
&lt;p&gt;浏览器位于网络地址转换设备（NAT）之后是一种极为普遍的设计。举个栗子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-5a46a32c2264828b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再来看个图，了解下“公共地址”和“私有地址”：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-d311360eb759274d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;NAT主要负责维护内部ip地址和端口号与外部ip地址和端口号之间的映射表。&lt;/p&gt;
&lt;h3 id=&quot;stun服务器&quot;&gt;1、STUN服务器&lt;/h3&gt;
&lt;p&gt;STUN，&lt;em&gt;Session Traversal Utilities for NAT&lt;/em&gt;，称为NAT会话遍历实用工具服务器。简单地说，就是获取内网设备的最外层NAT（公共ip地址）信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-8d000590ea002ff0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;turn服务器&quot;&gt;2、TURN服务器&lt;/h3&gt;
&lt;p&gt;TURN，&lt;em&gt;Traversal Using Relay around NAT&lt;/em&gt;，称为中继型NAT遍历服务器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-309caba03d3633d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;说明：
    媒体中继地址是一个公共地址，用于转发接收到的包，或者将收到的数据包转发给浏览器。如果两个对等端因为NAT类型等原因不能直接建立P2P连接的话，那么可以使用中继地址。
    
    ps：相比较直接使用web服务器提供媒体中继理想点。&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;h2 id=&quot;对等连接和提议应答协商&quot;&gt;对等连接和提议/应答协商&lt;/h2&gt;
&lt;p&gt;上一节中有简单介绍对等连接和offer/answer交互流程，这节再说明下。&lt;/p&gt;
&lt;p&gt;其实WebRTC定义了两组主要的功能，分别是：媒体捕获（&lt;em&gt;getUserMedia()&lt;/em&gt;，前面已介绍）、媒体传输。对等连接和提议/应答协商的概念是媒体传输的核心。&lt;/p&gt;
&lt;h3 id=&quot;对等连接&quot;&gt;1、对等连接&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;RTCPeerConnection&lt;/em&gt;接口是WebRTC的主要API，用来在P2P端建立媒体连接及数据连接路径。&lt;em&gt;RTCPeerConnection&lt;/em&gt;对象的构造函数有一系列属性，最主要的是iceServers属性，表示服务器地址列表。用于帮助透过NAT和防火墙建立会话。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; pc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;RTCPeerConnection&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;iceServers&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'stun:stun.l.google.com:19302'&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;},{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'turn:user@turn.myserver.com'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;credential&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'test'&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;]
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)

&lt;span class=&quot;at&quot;&gt;getUserMedia&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;audio&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; successCB&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; failureCB)

&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;successCB&lt;/span&gt;(stream) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 告知浏览器，我要发送MediaStream&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;addStream&lt;/span&gt;(stream)        &lt;span class=&quot;co&quot;&gt;// removeStream()&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;提议应答协商&quot;&gt;2、提议/应答协商&lt;/h3&gt;
&lt;p&gt;要在二者之间建立连接，必须在二者之间建立会话。offer/answer是一种“一次性通过”型协商机制。实际中该过程可能会反复多次。&lt;/p&gt;
&lt;p&gt;WebRTC使用&lt;em&gt;RTCSessionDescription&lt;/em&gt;对象表示提议和应答。每个浏览器都将生成一个该对象。&lt;/p&gt;
&lt;h3 id=&quot;javascript提议应答协商控制&quot;&gt;3、JavaScript提议/应答协商控制&lt;/h3&gt;
&lt;p&gt;本地浏览器只关注两个特定的调用：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;co&quot;&gt;// 将我的会话描述告知我的浏览器&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setLocalDescription&lt;/span&gt;(mySessionDescription)
...
&lt;span class=&quot;co&quot;&gt;// 将对等端的会话描述告知我的浏览器&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setRemoteDescription&lt;/span&gt;(yourSessionDescription)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成提议、应答：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;co&quot;&gt;// 生成提议&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createOffer&lt;/span&gt;(gotOffer&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; didntGetOffer)

&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;gotOffer&lt;/span&gt;(aSessionDescription) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;setLocalDescription&lt;/span&gt;(aSessionDescription)
    ...
    &lt;span class=&quot;co&quot;&gt;// 现在可以将会话描述（提议offer）发送给对等端，以便对等端&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// a)、将提议传递给setRemoteDescription&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// b)、调用createAnswer&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;// 生成应答&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createAnswer&lt;/span&gt;(gotAnswer&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; didntGetAnswer)

&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;gotAnswer&lt;/span&gt;(aSessionDescription) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;setLocalDescription&lt;/span&gt;(aSessionDescription)
    ...
    &lt;span class=&quot;co&quot;&gt;// 现在将会话描述（应答answer）发送给对等端，以便对等端&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// a)、将应答传递给setRemoteDescription&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;测试demo说明&quot;&gt;4、测试demo说明&lt;/h3&gt;
&lt;p&gt;以下测试demo展示在两个浏览器中进行实时视频通话，源码地址：&lt;a href=&quot;https://github.com/caiya/webrtc-p2p.git&quot; class=&quot;uri&quot;&gt;https://github.com/caiya/webrtc-p2p.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-b0c5eca84172ce03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;数据通道&quot;&gt;数据通道&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;RTCDataChannel&lt;/em&gt;，数据通道是浏览器之间建立的非媒体的交互连接。即不传递媒体消息，绕过服务器直接传递数据。相比WebSocket、http消息，数据通道支持流量大、延迟低。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;注意：
    单个对等连接中的多个数据通道底层共享一个流，所以只需一次offer、answer即可建立首个数据通道。之后再建立数据通道无需再次进行offer、answer交换。
    
    典型应用：游戏实时状态更新。
    &lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;数据通道的使用&quot;&gt;数据通道的使用&lt;/h3&gt;
&lt;p&gt;只有在创建完&lt;em&gt;RTCPeerConnection&lt;/em&gt;实例之后才能创建数据通道，如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;pc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;RTCPeerConnection&lt;/span&gt;()
dc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createDataChannel&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;''&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一端创建完数据通道后，另一端只需要监听&lt;em&gt;ondatachannel&lt;/em&gt;事件即可：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;pc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;RTCPeerConnection&lt;/span&gt;()
&lt;span class=&quot;va&quot;&gt;pc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ondatachannel&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    dc &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;channel&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时，两个对等端已经彼此建立数据通道，可以直接相互发送消息：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;va&quot;&gt;dc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'i am a text string for sending'&lt;/span&gt;)
&lt;span class=&quot;va&quot;&gt;dc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Blob&lt;/span&gt;([&lt;span class=&quot;st&quot;&gt;'i am a blob object'&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'text/plain'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;))
&lt;span class=&quot;va&quot;&gt;dc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;arrayBuffer&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;))    &lt;span class=&quot;co&quot;&gt;// 发送arrayBuffer&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;dc&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'收到消息：'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;)
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;加入数据通道后的测试demo&quot;&gt;加入数据通道后的测试demo&lt;/h3&gt;
&lt;p&gt;项目源代码地址：&lt;a href=&quot;https://github.com/caiya/webrtc-p2p-datachannel&quot; class=&quot;uri&quot;&gt;https://github.com/caiya/webrtc-p2p-datachannel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;部分截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/62302-52a68ff26177d46f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;作者 &lt;a href=&quot;http://www.cnblogs.com/vipzhou/&quot;&gt;@晁州&lt;/a&gt;&lt;br/&gt;2017 年 11月 27日&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 13:20:00 +0000</pubDate>
<dc:creator>西安-晁州</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/vipzhou/p/7994927.html</dc:identifier>
</item>
<item>
<title>websocket介绍 - 张璨</title>
<link>http://www.cnblogs.com/zhang-can/p/7994913.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhang-can/p/7994913.html</guid>
<description>&lt;h2 id=&quot;websocket应用&quot;&gt;websocket应用&lt;/h2&gt;
&lt;h3 id=&quot;手动实现的websocket&quot;&gt;手动实现的websocket&lt;/h3&gt;
&lt;h4 id=&quot;你所见过的websocket&quot;&gt;你所见过的websocket&lt;/h4&gt;
&lt;p&gt;你一定见过在网站中，有一个游客聊天的聊天框，比如人人影视。这个聊天框是如何实现即时通讯的呢，就是用到了websocket&lt;/p&gt;
&lt;p&gt;你可以打开浏览器的network，会看到有个ws://xxxxx，这就代表了是websocket做的&lt;/p&gt;
&lt;h4 id=&quot;那么什么是websocket&quot;&gt;那么什么是websocket？&lt;/h4&gt;
&lt;p&gt;websocket就是一套协议。&lt;/p&gt;
&lt;p&gt;看名字，虽然有个websocket，但他和http协议一样，也要走socket。&lt;/p&gt;
&lt;p&gt;不同的是：http是短连接，处理完一个请求就断开；&lt;/p&gt;
&lt;p&gt;​ websocket是连上就不断开，一直不断开，属于双工通道，服务端可以主动给客户端推送消息，客户端也可以主动给服务端推送消息&lt;/p&gt;
&lt;p&gt;当某一个客户端发送一条消息，服务端接收以后，再推送给所有的客户端，所以才会呈现出所有人都在即时通讯的效果&lt;/p&gt;
&lt;p&gt;服务端当然就是我们写的程序了，那客户端是浏览器，所以还需要浏览器支持才行。不要以为浏览器是都支持的，如果所有人都用chrome，前端开发工程师估计就没什么工作了。还有，如果所有的浏览器都支持，腾讯的webQQ，web微信，也不会使用长轮询来做这个事了。&lt;/p&gt;
&lt;p&gt;来看一下具体的代码实现&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; socket
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; base64
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; hashlib


&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; get_headers(data):
    &lt;span class=&quot;co&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    将请求头格式化成字典&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    :param data:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    :return:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;
    header_dict &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; {}
    data &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(data, encoding&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;)

    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; data.split(&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;):
        &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(i)
    header, body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; data.split(&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\r\n\r\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
    header_list &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; header.split(&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt;)
    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;bu&quot;&gt;len&lt;/span&gt;(header_list)):
        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;:
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;len&lt;/span&gt;(header_list[i].split(&lt;span class=&quot;st&quot;&gt;' '&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;:
                header_dict[&lt;span class=&quot;st&quot;&gt;'method'&lt;/span&gt;], header_dict[&lt;span class=&quot;st&quot;&gt;'url'&lt;/span&gt;], header_dict[&lt;span class=&quot;st&quot;&gt;'protocol'&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; header_list[i].split(&lt;span class=&quot;st&quot;&gt;' '&lt;/span&gt;)
        &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:
            k, v &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; header_list[i].split(&lt;span class=&quot;st&quot;&gt;':'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
            header_dict[k] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; v.strip()
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; header_dict


sock &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
sock.bind((&lt;span class=&quot;st&quot;&gt;'127.0.0.1'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;8002&lt;/span&gt;))
sock.listen(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)

conn, address &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; sock.accept()
data &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; conn.recv(&lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt;)

headers &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; get_headers(data)  &lt;span class=&quot;co&quot;&gt;# 提取请求头信息&lt;/span&gt;


&lt;span class=&quot;co&quot;&gt;# 对请求头中的sec-websocket-key进行加密&lt;/span&gt;
response_tpl &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;HTTP/1.1 101 Switching Protocols&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;\&lt;/span&gt;
               &lt;span class=&quot;co&quot;&gt;&quot;Upgrade:websocket\r\n&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;\&lt;/span&gt;
               &lt;span class=&quot;co&quot;&gt;&quot;Connection: Upgrade\r\n&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;\&lt;/span&gt;
               &lt;span class=&quot;co&quot;&gt;&quot;Sec-WebSocket-Accept: %s\r\n&quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;\&lt;/span&gt;
               &lt;span class=&quot;co&quot;&gt;&quot;WebSocket-Location: ws://%s%s\r\n\r\n&quot;&lt;/span&gt;

magic_string &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;#固定的，魔法字符串就是这个字符串&lt;/span&gt;
value &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; headers[&lt;span class=&quot;st&quot;&gt;'Sec-WebSocket-Key'&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; magic_string
ac &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; base64.b64encode(hashlib.sha1(value.encode(&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;)).digest()) &lt;span class=&quot;co&quot;&gt;#把返回消息加密&lt;/span&gt;


response_str &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response_tpl &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; (ac.decode(&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;), headers[&lt;span class=&quot;st&quot;&gt;'Host'&lt;/span&gt;], headers[&lt;span class=&quot;st&quot;&gt;'url'&lt;/span&gt;])
&lt;span class=&quot;co&quot;&gt;# 响应【握手】信息&lt;/span&gt;
conn.send(&lt;span class=&quot;bu&quot;&gt;bytes&lt;/span&gt;(response_str, encoding&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;))

info &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; conn.recv(&lt;span class=&quot;dv&quot;&gt;8096&lt;/span&gt;)


&lt;span class=&quot;co&quot;&gt;#下面是对浏览器发来的消息解密的过程&lt;/span&gt;
payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;127&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; payload_len &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;126&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;:] &lt;span class=&quot;co&quot;&gt;# 数据&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;elif&lt;/span&gt; payload_len &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;127&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;:]
&lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;:]

bytes_list &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;bytearray&lt;/span&gt;()
&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;len&lt;/span&gt;(decoded)):       &lt;span class=&quot;co&quot;&gt;#上面解密的最终结果，就是拿到这个decode,就是浏览器发来的真实的数据（加密的）&lt;/span&gt;
    chunk &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; decoded[i] &lt;span class=&quot;op&quot;&gt;^&lt;/span&gt; mask[i &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]    &lt;span class=&quot;co&quot;&gt;#按位异或&lt;/span&gt;
    bytes_list.append(chunk)


body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(bytes_list, encoding&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;)
&lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(body)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端向服务端发送的请求里，有&lt;code&gt;Sec-WebSocket-Key&lt;/code&gt;这样一个key，服务端回消息的时候，就要拿到这个key,加密后再发给浏览器，浏览器会判断自己加密后的值，与浏览器处理的是否一致，一致才能连接。加密的方式，用到一个&lt;code&gt;magic_string&lt;/code&gt;，其实就是一段固定的字符串&lt;code&gt;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&lt;/code&gt;，加密后打包发给浏览器，浏览器验证通过后就可以通讯了，再来看看客户端：&lt;/p&gt;
&lt;p&gt;客户端就直接用浏览器运行这个html文件就行&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;link&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; rel=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;dist/css/bootstrap.css&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;txt&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;btn&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;提交&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;sendMsg();&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;关闭连接&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;closeConn();&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;



    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; socket &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;WebSocket&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;ws://127.0.0.1:8002&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;/* 与服务器端连接成功后，自动执行 */&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; newTag &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'div'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;newTag&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;【连接成功】&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'content'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(newTag)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; (event) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;/* 服务器端向客户端发送数据时，自动执行 */&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; response &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; newTag &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'div'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;newTag&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'content'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(newTag)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onclose&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; (event) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;/* 服务器端主动断开连接时，自动执行 */&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; newTag &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'div'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;newTag&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;【关闭连接】&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'content'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(newTag)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sendMsg&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; txt &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'txt'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;txt&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;txt&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;closeConn&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;close&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; newTag &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'div'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;newTag&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;【关闭连接】&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'content'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(newTag)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;&amp;lt;script&amp;gt;&amp;lt;/script&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;&amp;lt;/html&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里面有三个方法：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;连接上后，onopen会自动执行&lt;/li&gt;
&lt;li&gt;发消息时，onmessage自动执行&lt;/li&gt;
&lt;li&gt;断开连接，onclose自动执行&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;客户端发送给服务端的数据，还有一层加密，必须通过解密才能拿到正确的消息&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;127&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; payload_len &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;126&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;:] &lt;span class=&quot;co&quot;&gt;# 数据&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;elif&lt;/span&gt; payload_len &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;127&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;:]
&lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:
    extend_payload_len &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;
    mask &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]
    decoded &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; info[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;:]

bytes_list &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;bytearray&lt;/span&gt;()
&lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;len&lt;/span&gt;(decoded)):       &lt;span class=&quot;co&quot;&gt;#上面解密的最终结果，就是拿到这个decode,就是浏览器发来的真实的数据（加密的）&lt;/span&gt;
    chunk &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; decoded[i] &lt;span class=&quot;op&quot;&gt;^&lt;/span&gt; mask[i &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]    &lt;span class=&quot;co&quot;&gt;#按位异或&lt;/span&gt;
    bytes_list.append(chunk)


body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(bytes_list, encoding&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'utf-8'&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段就是解密的过程，用到位运算&lt;/p&gt;
&lt;p&gt;Django默认是不支持websocket的，虽然有个第三方的channels插件&lt;/p&gt;
&lt;p&gt;但是tornado默认就支持&lt;/p&gt;
&lt;h3 id=&quot;tornado实现websocket&quot;&gt;tornado实现websocket&lt;/h3&gt;
&lt;p&gt;如果用tornado，客户端不能直接用浏览器运行了，而应该是运行tornado的一个模板文件&lt;/p&gt;
&lt;p&gt;服务端代码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;co&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; uuid
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; json
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; tornado.ioloop
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; tornado.web
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; tornado.websocket


&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; IndexHandler(tornado.web.RequestHandler):
    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; get(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;):
        &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.render(&lt;span class=&quot;st&quot;&gt;'index.html'&lt;/span&gt;)


&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; ChatHandler(tornado.websocket.WebSocketHandler):
    &lt;span class=&quot;co&quot;&gt;# 用户存储当前聊天室用户&lt;/span&gt;
    waiters &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;set&lt;/span&gt;()
    &lt;span class=&quot;co&quot;&gt;# 用于存储历时消息&lt;/span&gt;
    messages &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; []

    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;open&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;):
        &lt;span class=&quot;co&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        客户端连接成功时，自动执行&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        :return:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;
        ChatHandler.waiters.add(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;)
        uid &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;str&lt;/span&gt;(uuid.uuid4())
        &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.write_message(uid)

        &lt;span class=&quot;co&quot;&gt;# 下面这段代码是给新加入的用户，显示历史信息的&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; msg &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; ChatHandler.messages:
            &lt;span class=&quot;co&quot;&gt;# {'uid':'xxx','message':asdfasd}&lt;/span&gt;
            content &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.render_string(&lt;span class=&quot;st&quot;&gt;'message.html'&lt;/span&gt;, &lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;msg)
            &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.write_message(content)

    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; on_message(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;, message):
        &lt;span class=&quot;co&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        客户端连发送消息时，自动执行&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        :param message:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        :return:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;
        msg &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; json.loads(message)
        ChatHandler.messages.append(msg)

        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; client &lt;span class=&quot;op&quot;&gt;in&lt;/span&gt; ChatHandler.waiters:
            content &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; client.render_string(&lt;span class=&quot;st&quot;&gt;'message.html'&lt;/span&gt;, &lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;msg)
            client.write_message(content)

    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; on_close(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;):
        &lt;span class=&quot;co&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        客户端关闭连接时，，自动执行&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        :return:&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;
        ChatHandler.waiters.remove(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;)


&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; run():
    settings &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; {
        &lt;span class=&quot;st&quot;&gt;'template_path'&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;'templates'&lt;/span&gt;,       &lt;span class=&quot;co&quot;&gt;# 配置模板文件&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;'static_path'&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;'static'&lt;/span&gt;,            &lt;span class=&quot;co&quot;&gt;# 配置静态文件路径&lt;/span&gt;
    }
    application &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; tornado.web.Application([         &lt;span class=&quot;co&quot;&gt;# 配置路由&lt;/span&gt;
        (&lt;span class=&quot;vs&quot;&gt;r&quot;/&quot;&lt;/span&gt;, IndexHandler),
        (&lt;span class=&quot;vs&quot;&gt;r&quot;/chat&quot;&lt;/span&gt;, ChatHandler),
    ], &lt;span class=&quot;op&quot;&gt;**&lt;/span&gt;settings)
    application.listen(&lt;span class=&quot;dv&quot;&gt;8009&lt;/span&gt;)
    tornado.ioloop.IOLoop.instance().start()


&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:
    run()&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;模板文件（客户端代码）：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Python聊天室&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;txt&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;btn&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;提交&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;sendMsg();&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;关闭连接&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; onclick=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;closeConn();&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; style=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;border: 1px solid #dddddd;margin: 20px;min-height: 500px;&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; src=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;/static/jquery-3.2.1.js&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;script&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;start&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; wsUpdater &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; url &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;ws://192.168.16.200:8009/chat&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;WebSocket&lt;/span&gt;(url)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(event) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;uid&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;showMessage&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;showMessage&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(content) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#container'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;append&lt;/span&gt;(content)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sendMsg&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; msg &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;#txt&quot;&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;val&lt;/span&gt;()
            &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;wsUpdater&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;socket&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;send&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;JSON&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stringify&lt;/span&gt;(msg))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;ss&quot;&gt;&amp;lt;/body&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;原理都一样，但是用tornado实现起来，就清爽多了。&lt;/p&gt;
&lt;p&gt;ps:再说一下腾讯的长轮询，如果你登录webQQ，或者web微信，你可以在network里面找到 pending的字样，这就是表示是使用的长轮询。&lt;/p&gt;
&lt;p&gt;长轮询与轮询的区别就是：&lt;/p&gt;
&lt;p&gt;​ 轮询是过来以后看到没消息就立马去走了，但是长轮询不会立马走，而是在这等30秒（约定的时间）之后，如果一直没有消息，才返回，下一次来在等30秒，直到有消息了，这样有个缺点就是，拿到的消息并不是即时的。那腾讯这么大的公司，为什么不用性能更好的websocket呢？原因就是他是个大公司，必须要考虑兼容性，必须要保证所有的浏览器都能使用才行。&lt;/p&gt;
&lt;p&gt;你可以从这里拿到完整 的示例代码&lt;/p&gt;
&lt;blockquote readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/zEllis/websocket_demo&quot; class=&quot;uri&quot;&gt;https://github.com/zEllis/websocket_demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Wed, 06 Dec 2017 13:17:00 +0000</pubDate>
<dc:creator>张璨</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhang-can/p/7994913.html</dc:identifier>
</item>
<item>
<title>c#统计代码行数 - 昆明--菜鸟入门</title>
<link>http://www.cnblogs.com/kunming97/p/7979235.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kunming97/p/7979235.html</guid>
<description>&lt;p&gt;小编，已经快学了两年编程了。昨天突发奇想，想统计下这些年到底写过多少行代码，于是做了一个这个小程序来统计代码行数。老规矩，先上图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171204211908394-1455900673.png&quot; alt=&quot;&quot; width=&quot;280&quot; height=&quot;156&quot;/&gt;&lt;/p&gt;
&lt;p&gt;比较惭愧，写了两年只有2万多行。那我们还是进入下一项吧。&lt;/p&gt;
&lt;p&gt;界面搭建我也不说了，我就讲一下思路和核心代码，最后附上&lt;a title=&quot;源代码&quot; href=&quot;https://i.cnblogs.com/Files.aspx&quot; target=&quot;_blank&quot;&gt;源代码&lt;/a&gt;。Life_Programmer、Serch_Files。&lt;/p&gt;
&lt;p&gt;思路：我们点击刷新按钮，他会弹出一个小窗口让我们选择要搜索的区域。这个原理在我的&lt;a title=&quot;C#游戏进程杀手&quot; href=&quot;http://www.cnblogs.com/kunming97/p/7965441.html&quot; target=&quot;_blank&quot;&gt;C#游戏进程杀手&lt;/a&gt;的随笔讲过了，这里就不赘述了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171204213003691-58629860.png&quot; alt=&quot;&quot; width=&quot;192&quot; height=&quot;128&quot;/&gt;&lt;/p&gt;
&lt;p&gt;关于这个搜索小窗口，我觉得适用范围很广，我是把它做成了一个.dll文件引入到我们这个主程序的。这个小窗口我也会附上源码在本篇随笔。&lt;/p&gt;
&lt;p&gt;那我们这次主要讲讲和上一次不一样的地方。&lt;/p&gt;
&lt;p&gt;既然我们把它这个小窗口封装起来了，那么我们就要给予它最大的灵活性。目的：让它搜索出我们想要的东西。&lt;/p&gt;
&lt;p&gt;那么达成这个目的，我们需要明确两点：&lt;/p&gt;
&lt;p&gt;1）要搜索文件的名字。（或者说要搜索的字段）&lt;/p&gt;
&lt;p&gt;2）要搜索文件的类型。（文件名，还是后缀名）&lt;/p&gt;
&lt;p&gt;所以为了完成这两点，我们需要将将要搜索的字段封装在这个小窗体里，设置一个属性对外提供访问接口。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;   List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt; SerchName = &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;要查找的字段&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt; SerchName1
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;             &lt;span&gt;get&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; SerchName; }
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;             &lt;span&gt;set&lt;/span&gt; { SerchName =&lt;span&gt; value; }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置查找文件类型&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; i;
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; I
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;             &lt;span&gt;get&lt;/span&gt; { &lt;span&gt;return&lt;/span&gt;&lt;span&gt; i; }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;             &lt;span&gt;set&lt;/span&gt; { i =&lt;span&gt; value; }
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将这两个字段封装好，在我们的主窗体内对其赋值即能提供其最大的灵活性。&lt;/p&gt;
&lt;p&gt;那么接下来我们重点来聊聊子窗体中FinleFile类&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Text;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.IO;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Serch_File
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; FindFile
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;        
&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt; lst1 = &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt; getFile(&lt;span&gt;string&lt;/span&gt; path, &lt;span&gt;string&lt;/span&gt; extName, &lt;span&gt;int&lt;/span&gt; i)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建一个List&amp;lt;FileInfo&amp;gt;类型的函数 &lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             getdir(path, extName, i);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;传入路径、搜索的字段 、将要搜索的类型&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; lst1;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; getdir(&lt;span&gt;string&lt;/span&gt; path, &lt;span&gt;string&lt;/span&gt; extName, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; i)
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;try&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取文件夹列表&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;                 &lt;span&gt;string&lt;/span&gt;[] dirs = Directory.GetDirectories(path);&lt;br/&gt;　　　　　　　　　　　 DirectoryInfo fdir = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DirectoryInfo(path);
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;                 FileInfo[] file =&lt;span&gt; fdir.GetFiles();
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;当前目录文件或目录不为空&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; (file.Length != &lt;span&gt;0&lt;/span&gt; || dirs.Length != &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;                     &lt;span&gt;foreach&lt;/span&gt; (FileInfo f &lt;span&gt;in&lt;/span&gt;&lt;span&gt; file)
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;                         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (i)
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;                        {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;                             &lt;span&gt;case&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;: &lt;span&gt;if&lt;/span&gt; (extName == f.Name) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据文件名匹配上&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;                                {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;                                    lst1.Add(f.Name);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;                                 } &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;                             &lt;span&gt;case&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;: &lt;span&gt;if&lt;/span&gt; (extName == f.Extension) &lt;span&gt;//&lt;/span&gt;&lt;span&gt;根据后缀名匹配上&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                                {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;                                    lst1.Add(f.FullName);
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;                                 } &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;                     &lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;string&lt;/span&gt; d &lt;span&gt;in&lt;/span&gt;&lt;span&gt; dirs)
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;                    {
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;                         getdir(d, extName, i);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;递归   &lt;/span&gt;
&lt;span&gt;46&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;             &lt;span&gt;catch&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; 
&lt;span&gt;52&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大家注意在24行遍历文件夹列表时，我们会在盘符下面遍历到一个零时文件夹，其中索引为0的值似乎是一个乱码，其实不然这是我们盘符下的系统隐藏文件夹。大家可以不管它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206202009269-1384795326.jpg&quot; alt=&quot;&quot; width=&quot;324&quot; height=&quot;243&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那最后我们来谈谈怎么把一个窗体封装成dll文件，供其它项目引用。&lt;/p&gt;
&lt;p&gt;1、生成dll文件&lt;/p&gt;
&lt;p&gt;右键我们的项目名称，点击进入属性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206202741128-1881403836.png&quot; alt=&quot;&quot; width=&quot;237&quot; height=&quot;301&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206202934113-1255787054.png&quot; alt=&quot;&quot; width=&quot;598&quot; height=&quot;302&quot;/&gt;&lt;/p&gt;
&lt;p&gt;把输出类型改为类库，然后点击生成解决方案。就会在本程序的Debug目录下生成一个dll文件。&lt;/p&gt;
&lt;p&gt;2、将dll引入目标项目&lt;/p&gt;
&lt;p&gt;把我们生成的dll文件先复制拷贝到目标项目的debug目录下。然后右击引用，找到添加引用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206203454878-428835368.png&quot; alt=&quot;&quot; width=&quot;231&quot; height=&quot;246&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206203546534-349607287.png&quot; alt=&quot;&quot; width=&quot;364&quot; height=&quot;250&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击浏览找到我们的dll文件。&lt;/p&gt;
&lt;p&gt;再在我们的代码中导入命名空间&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206204043034-694497624.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后就成功了。&lt;/p&gt;
&lt;p&gt;试试：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1124164/201712/1124164-20171206204141097-1129878337.png&quot; alt=&quot;&quot; width=&quot;463&quot; height=&quot;165&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ok,没问题。&lt;/p&gt;
&lt;p&gt;最后希望各位能再完善完善我们的搜索小功能。&lt;/p&gt;

</description>
<pubDate>Wed, 06 Dec 2017 12:52:00 +0000</pubDate>
<dc:creator>昆明--菜鸟入门</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kunming97/p/7979235.html</dc:identifier>
</item>
<item>
<title>linux磁盘管理系列-软RAID的实现 - LinuxPanda</title>
<link>http://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_041_raid.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_041_raid.html</guid>
<description>&lt;h2&gt;1 什么是RAID&lt;/h2&gt;
&lt;p&gt;RAID全称是独立磁盘冗余阵列（Redundant Array of Independent Disks），基本思想是把多个磁盘组合起来，组合一个磁盘阵列组，使得性能大幅提高。&lt;/p&gt;
&lt;p&gt;RAID分为几个不同的等级，各个不同的等级均在数据可靠性及读写性能做了不同的权衡。实际工作中根据自己的业务需求选择不同的RAID方案。 &lt;/p&gt;
&lt;h2&gt;2 RAID的实现方式&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;外接式磁盘阵列：通过扩展卡提供适配能力&lt;/li&gt;
&lt;li&gt;内接式RAID：主板集成RAID控制器安装OS前在BIOS里配置&lt;/li&gt;
&lt;li&gt;软件RAID：通过OS实现&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;3 标准的RAID&lt;/h2&gt;
&lt;h3&gt;3.1 RAID0&lt;/h3&gt;
&lt;p&gt;RAID0称为条带化存储，将数据分段存储在各个磁盘中，读写均可以并行处理，因此读写速率为单个磁盘的N倍，没有冗余功能，任何一个磁盘的损坏就会导致的数据不可用。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/429277/201712/429277-20171206190916784-1851269319.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.2 RAID1&lt;/h3&gt;
&lt;p&gt;RADI1是镜像存储，没有数据校验，数据被同等的写入到2个或者多个磁盘中，写入速度相对慢， 但是读取速度比较快。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/429277/201712/429277-20171206190925144-1335207354.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.3 RAID 4&lt;/h3&gt;
&lt;p&gt;RADI4在RAID1的基础上，N个盘用于数据存储，另外加入了1个磁盘作为校验盘。一共N+1个盘，任何一个盘坏掉也不影响数据的访问&lt;/p&gt;
&lt;h3&gt;3.4 RAID 5&lt;/h3&gt;
&lt;p&gt;RAID5在RAID4的基础上，由原来的一个盘来存储校验数据，改为每个盘都有数据和校验信息的。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/429277/201712/429277-20171206190937269-859785738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;4 混合RAID&lt;/h2&gt;
&lt;h3&gt;4.1 RAID01&lt;/h3&gt;
&lt;p&gt;先组成RAID0,然后组成RAID1.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/429277/201712/429277-20171206191028878-1574936786.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4.2 RAID10&lt;/h3&gt;
&lt;p&gt;先组成RAID1,然后组成RAID0&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/429277/201712/429277-20171206191039550-891658970.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;5 软RAID的实现&lt;/h2&gt;
&lt;h3&gt;5.1 RAID5的实现&lt;/h3&gt;
&lt;p&gt;创建由三块硬盘组成的可用空间为2G的RAID5设备，要求其chunk大小为256k，文件系统为ext4，开机可自动挂载至/mydata目录&lt;/p&gt;
&lt;h4&gt;5.1.1 先看看我们的磁盘情况&lt;/h4&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
[root@centos7 Bash]$ lsblk
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      8:0    0  200G  0 disk 
├─sda1   8:1    0    1G  0 part /boot
├─sda2   8:2    0  128G  0 part 
├─sda3   8:3    0 48.8G  0 part /
├─sda4   8:4    0  512B  0 part 
└─sda5   8:5    0 19.5G  0 part /app
sdb      8:16   0  100G  0 disk 
sdc      8:32   0   20G  0 disk 
sdd      8:48   0   20G  0 disk 
sde      8:64   0   20G  0 disk 
sdf      8:80   0   20G  0 disk 
sr0     11:0    1  8.1G  0 rom  /run/media/root/CentOS 7 x86_64　
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里我们使用sdb,sdc,sdd,每个盘创建一个主分区1G,构建RADI5.&lt;/p&gt;
&lt;h4&gt;5.1.2 根据实际情况分区&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
[root@centos7 Bash]$ fdisk /dev/&lt;span&gt;sdb
Welcome to fdisk (util&lt;/span&gt;-linux &lt;span&gt;2.23&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).

Changes will remain &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; memory only, &lt;span&gt;until&lt;/span&gt; you decide to &lt;span&gt;write&lt;/span&gt;&lt;span&gt; them.
Be careful before using the &lt;/span&gt;&lt;span&gt;write&lt;/span&gt;&lt;span&gt; command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier &lt;/span&gt;&lt;span&gt;0x93d380cf&lt;/span&gt;&lt;span&gt;.

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): n
Partition type:
   p   primary (&lt;/span&gt;&lt;span&gt;0&lt;/span&gt; primary, &lt;span&gt;0&lt;/span&gt; extended, &lt;span&gt;4&lt;/span&gt; &lt;span&gt;free&lt;/span&gt;&lt;span&gt;)
   e   extended
Select (default p): p
Partition number (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;4&lt;/span&gt;, default &lt;span&gt;1&lt;/span&gt;&lt;span&gt;): 
First sector (&lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;209715199&lt;/span&gt;, default &lt;span&gt;2048&lt;/span&gt;&lt;span&gt;): 
Using default value &lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;&lt;span&gt;
Last sector, &lt;/span&gt;+sectors or +size{K,M,G} (&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;209715199&lt;/span&gt;, default &lt;span&gt;209715199&lt;/span&gt;): +&lt;span&gt;1G
Partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; of type Linux and of size &lt;span&gt;1&lt;/span&gt;&lt;span&gt; GiB is set

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): t
Selected partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Hex code (type L to list all codes): fd
Changed type of partition &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; to &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux raid autodetect&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): p

Disk &lt;/span&gt;/dev/sdb: &lt;span&gt;107.4&lt;/span&gt; GB, &lt;span&gt;107374182400&lt;/span&gt; bytes, &lt;span&gt;209715200&lt;/span&gt;&lt;span&gt; sectors
Units &lt;/span&gt;= sectors of &lt;span&gt;1&lt;/span&gt; * &lt;span&gt;512&lt;/span&gt; = &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Sector size (logical&lt;/span&gt;/physical): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
I&lt;/span&gt;/O size (minimum/optimal): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Disk label type: dos
Disk identifier: &lt;/span&gt;&lt;span&gt;0x93d380cf&lt;/span&gt;&lt;span&gt;

   Device Boot      Start         End      Blocks   Id  System
&lt;/span&gt;/dev/sdb1            &lt;span&gt;2048&lt;/span&gt;     &lt;span&gt;2099199&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;&lt;span&gt;   fd  Linux raid autodetect

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; help): &lt;span&gt;w&lt;/span&gt;&lt;span&gt;
The partition table has been altered&lt;/span&gt;!&lt;span&gt;

Calling ioctl() to re&lt;/span&gt;-&lt;span&gt;read partition table.
Syncing disks.
[root@centos7 Bash]$ fdisk &lt;/span&gt;/dev/&lt;span&gt;sdc
Welcome to fdisk (util&lt;/span&gt;-linux &lt;span&gt;2.23&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).

Changes will remain &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; memory only, &lt;span&gt;until&lt;/span&gt; you decide to &lt;span&gt;write&lt;/span&gt;&lt;span&gt; them.
Be careful before using the &lt;/span&gt;&lt;span&gt;write&lt;/span&gt;&lt;span&gt; command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier &lt;/span&gt;&lt;span&gt;0xc56b90d8&lt;/span&gt;&lt;span&gt;.

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): n
Partition type:
   p   primary (&lt;/span&gt;&lt;span&gt;0&lt;/span&gt; primary, &lt;span&gt;0&lt;/span&gt; extended, &lt;span&gt;4&lt;/span&gt; &lt;span&gt;free&lt;/span&gt;&lt;span&gt;)
   e   extended
Select (default p): p
Partition number (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;4&lt;/span&gt;, default &lt;span&gt;1&lt;/span&gt;&lt;span&gt;): 
First sector (&lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;41943039&lt;/span&gt;, default &lt;span&gt;2048&lt;/span&gt;&lt;span&gt;): 
Using default value &lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;&lt;span&gt;
Last sector, &lt;/span&gt;+sectors or +size{K,M,G} (&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;41943039&lt;/span&gt;, default &lt;span&gt;41943039&lt;/span&gt;): +&lt;span&gt;1G
Partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; of type Linux and of size &lt;span&gt;1&lt;/span&gt;&lt;span&gt; GiB is set

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): t
Selected partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Hex code (type L to list all codes): fd
Changed type of partition &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; to &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux raid autodetect&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): p

Disk &lt;/span&gt;/dev/sdc: &lt;span&gt;21.5&lt;/span&gt; GB, &lt;span&gt;21474836480&lt;/span&gt; bytes, &lt;span&gt;41943040&lt;/span&gt;&lt;span&gt; sectors
Units &lt;/span&gt;= sectors of &lt;span&gt;1&lt;/span&gt; * &lt;span&gt;512&lt;/span&gt; = &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Sector size (logical&lt;/span&gt;/physical): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
I&lt;/span&gt;/O size (minimum/optimal): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Disk label type: dos
Disk identifier: &lt;/span&gt;&lt;span&gt;0xc56b90d8&lt;/span&gt;&lt;span&gt;

   Device Boot      Start         End      Blocks   Id  System
&lt;/span&gt;/dev/sdc1            &lt;span&gt;2048&lt;/span&gt;     &lt;span&gt;2099199&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;&lt;span&gt;   fd  Linux raid autodetect

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; help): &lt;span&gt;w&lt;/span&gt;&lt;span&gt;
The partition table has been altered&lt;/span&gt;!&lt;span&gt;

Calling ioctl() to re&lt;/span&gt;-&lt;span&gt;read partition table.
Syncing disks.
[root@centos7 Bash]$ fdisk &lt;/span&gt;/dev/&lt;span&gt;sdd
Welcome to fdisk (util&lt;/span&gt;-linux &lt;span&gt;2.23&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;&lt;span&gt;).

Changes will remain &lt;/span&gt;&lt;span&gt;in&lt;/span&gt; memory only, &lt;span&gt;until&lt;/span&gt; you decide to &lt;span&gt;write&lt;/span&gt;&lt;span&gt; them.
Be careful before using the &lt;/span&gt;&lt;span&gt;write&lt;/span&gt;&lt;span&gt; command.

Device does not contain a recognized partition table
Building a new DOS disklabel with disk identifier &lt;/span&gt;&lt;span&gt;0x7e0900d8&lt;/span&gt;&lt;span&gt;.

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): n
Partition type:
   p   primary (&lt;/span&gt;&lt;span&gt;0&lt;/span&gt; primary, &lt;span&gt;0&lt;/span&gt; extended, &lt;span&gt;4&lt;/span&gt; &lt;span&gt;free&lt;/span&gt;&lt;span&gt;)
   e   extended
Select (default p): p
Partition number (&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;4&lt;/span&gt;, default &lt;span&gt;1&lt;/span&gt;&lt;span&gt;): 
First sector (&lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;41943039&lt;/span&gt;, default &lt;span&gt;2048&lt;/span&gt;&lt;span&gt;): 
Using default value &lt;/span&gt;&lt;span&gt;2048&lt;/span&gt;&lt;span&gt;
Last sector, &lt;/span&gt;+sectors or +size{K,M,G} (&lt;span&gt;2048&lt;/span&gt;-&lt;span&gt;41943039&lt;/span&gt;, default &lt;span&gt;41943039&lt;/span&gt;): +&lt;span&gt;1G
Partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt; of type Linux and of size &lt;span&gt;1&lt;/span&gt;&lt;span&gt; GiB is set

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): p

Disk &lt;/span&gt;/dev/sdd: &lt;span&gt;21.5&lt;/span&gt; GB, &lt;span&gt;21474836480&lt;/span&gt; bytes, &lt;span&gt;41943040&lt;/span&gt;&lt;span&gt; sectors
Units &lt;/span&gt;= sectors of &lt;span&gt;1&lt;/span&gt; * &lt;span&gt;512&lt;/span&gt; = &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Sector size (logical&lt;/span&gt;/physical): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
I&lt;/span&gt;/O size (minimum/optimal): &lt;span&gt;512&lt;/span&gt; bytes / &lt;span&gt;512&lt;/span&gt;&lt;span&gt; bytes
Disk label type: dos
Disk identifier: &lt;/span&gt;&lt;span&gt;0x7e0900d8&lt;/span&gt;&lt;span&gt;

   Device Boot      Start         End      Blocks   Id  System
&lt;/span&gt;/dev/sdd1            &lt;span&gt;2048&lt;/span&gt;     &lt;span&gt;2099199&lt;/span&gt;     &lt;span&gt;1048576&lt;/span&gt;   &lt;span&gt;83&lt;/span&gt;&lt;span&gt;  Linux

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; help): t
Selected partition &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
Hex code (type L to list all codes): fd
Changed type of partition &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; to &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Linux raid autodetect&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

Command (m &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; help): &lt;span&gt;w&lt;/span&gt;&lt;span&gt;
The partition table has been altered&lt;/span&gt;!&lt;span&gt;

Calling ioctl() to re&lt;/span&gt;-&lt;span&gt;read partition table.
Syncing disks.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.1.3 创建raid&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
[root@centos7 Bash]$ mdadm -C /dev/md5 -a yes -l &lt;span&gt;5&lt;/span&gt; -n &lt;span&gt;3&lt;/span&gt; /dev/sd{b1,c1,d1} -c &lt;span&gt;256       # -C指定创建， -a yes 自动创建设备 ， -l 设定level , -n 设定磁盘个数， -c chunk大小&lt;/span&gt;&lt;span&gt;
Continue creating array&lt;/span&gt;?&lt;span&gt; y
mdadm: Defaulting to version &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt; metadata
mdadm: array &lt;/span&gt;/dev/&lt;span&gt;md5 started.
[root@centos7 Bash]$ mdadm &lt;/span&gt;-&lt;span&gt;Ds                                                          # 查看信息
ARRAY &lt;/span&gt;/dev/md5 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;5&lt;/span&gt; UUID=&lt;span&gt;2c8ae60d:a799fcb7:9008a046:ae6ea430
[root@centos7 Bash]$ mdadm &lt;/span&gt;-Ds &amp;gt;/etc/&lt;span&gt;mdadm.conf                                         # 将软raid信息写入到配置文件中去&lt;br/&gt;[root@centos7 Bash]$ mkdir /mnt/md5                                                     # 创建挂载点目录&lt;/span&gt;&lt;span&gt; 
[root@centos7 Bash]$ mkfs.ext4 &lt;/span&gt;/dev/&lt;span&gt;md5                                                 # 创建文件系统
mke2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
Filesystem label&lt;/span&gt;=&lt;span&gt;
OS type: Linux
Block size&lt;/span&gt;=&lt;span&gt;4096&lt;/span&gt; (log=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)
Fragment size&lt;/span&gt;=&lt;span&gt;4096&lt;/span&gt; (log=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)
Stride&lt;/span&gt;=&lt;span&gt;64&lt;/span&gt; blocks, Stripe width=&lt;span&gt;128&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;131072&lt;/span&gt; inodes, &lt;span&gt;523776&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;26188&lt;/span&gt; blocks (&lt;span&gt;5.00&lt;/span&gt;%) reserved &lt;span&gt;for&lt;/span&gt;&lt;span&gt; the super user
First data block&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
Maximum filesystem blocks&lt;/span&gt;=&lt;span&gt;536870912&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; block &lt;span&gt;groups&lt;/span&gt;
&lt;span&gt;32768&lt;/span&gt; blocks per group, &lt;span&gt;32768&lt;/span&gt;&lt;span&gt; fragments per group
&lt;/span&gt;&lt;span&gt;8192&lt;/span&gt;&lt;span&gt; inodes per group
Superblock backups stored on blocks: 
    &lt;/span&gt;&lt;span&gt;32768&lt;/span&gt;, &lt;span&gt;98304&lt;/span&gt;, &lt;span&gt;163840&lt;/span&gt;, &lt;span&gt;229376&lt;/span&gt;, &lt;span&gt;294912&lt;/span&gt;&lt;span&gt;

Allocating group tables: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;                            
Writing inode tables: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;                            
Creating journal (&lt;/span&gt;&lt;span&gt;8192&lt;/span&gt; blocks): &lt;span&gt;done&lt;/span&gt;&lt;span&gt;
Writing superblocks and filesystem accounting information: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt; 

[root@centos7 Bash]$ &lt;/span&gt;&lt;span&gt;mount&lt;/span&gt; /dev/md5 /mnt/&lt;span&gt;md5                                          # 挂载设备 
[root@centos7 Bash]$ &lt;/span&gt;&lt;span&gt;tail&lt;/span&gt; -n &lt;span&gt;1&lt;/span&gt; /etc/&lt;span&gt;mtab
&lt;/span&gt;/dev/md5 /mnt/md5 ext4 rw,seclabel,relatime,stripe=&lt;span&gt;128&lt;/span&gt;,data=ordered &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0               # 查看挂载信息&lt;/span&gt;&lt;span&gt;
[root@centos7 Bash]$ &lt;/span&gt;&lt;span&gt;tail&lt;/span&gt; -n &lt;span&gt;1&lt;/span&gt; /etc/mtab &amp;gt;&amp;gt;/etc/fstab                                 #添加到fstab文件中，确保开机启动，这里建议使用uuid
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.1.4 验证raid&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
[root@centos7 md5]$ mdadm -D /dev/&lt;span&gt;md5                                                 #查看详细raid5详细信息，可以发现有3个都是working状态的
&lt;/span&gt;/dev/&lt;span&gt;md5:
           Version : &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt;
     Creation Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
        Raid Level : raid5
        Array Size : &lt;/span&gt;&lt;span&gt;2095104&lt;/span&gt; (&lt;span&gt;2046.00&lt;/span&gt; MiB &lt;span&gt;2145.39&lt;/span&gt;&lt;span&gt; MB)
     Used Dev Size : &lt;/span&gt;&lt;span&gt;1047552&lt;/span&gt; (&lt;span&gt;1023.00&lt;/span&gt; MiB &lt;span&gt;1072.69&lt;/span&gt;&lt;span&gt; MB)
      Raid Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
     Total Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
       Persistence : Superblock is persistent

       Update Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;39&lt;/span&gt;:&lt;span&gt;06&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
             State : clean 
    Active Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
   Working Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
    Failed Devices : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
     Spare Devices : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;

            Layout : left&lt;/span&gt;-&lt;span&gt;symmetric
        Chunk Size : 256K

Consistency Policy : resync

              Name : centos7.magedu.com:&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;  (local to host centos7.magedu.com)
              UUID : 2c8ae60d:a799fcb7:9008a046:ae6ea430
            Events : &lt;/span&gt;&lt;span&gt;18&lt;/span&gt;&lt;span&gt;

    Number   Major   Minor   RaidDevice State
       &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;17&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdb1
       &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;33&lt;/span&gt;        &lt;span&gt;1&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdc1
       &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;49&lt;/span&gt;        &lt;span&gt;2&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdd1
[root@centos7 md5]$ &lt;/span&gt;&lt;span&gt;man&lt;/span&gt;&lt;span&gt; mdadm
[root@centos7 md5]$ mdadm &lt;/span&gt;/dev/md5 -f /dev/&lt;span&gt;sdc1                                                 # -f 设定指定设备故障， 将/dev/sdc1 这个盘标记失败， 看是否数据能访问，我这里使用-f标记失败，工作中可以根据硬盘指示灯判断磁盘状态
mdadm: set &lt;/span&gt;/dev/sdc1 faulty &lt;span&gt;in&lt;/span&gt; /dev/&lt;span&gt;md5            
[root@centos7 md5]$ mdadm &lt;/span&gt;-D /dev/&lt;span&gt;md5                                                           #在次查看信息，发现工作的是2个， 一个失败的设备 
&lt;/span&gt;/dev/&lt;span&gt;md5:
           Version : &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt;
     Creation Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
        Raid Level : raid5
        Array Size : &lt;/span&gt;&lt;span&gt;2095104&lt;/span&gt; (&lt;span&gt;2046.00&lt;/span&gt; MiB &lt;span&gt;2145.39&lt;/span&gt;&lt;span&gt; MB)
     Used Dev Size : &lt;/span&gt;&lt;span&gt;1047552&lt;/span&gt; (&lt;span&gt;1023.00&lt;/span&gt; MiB &lt;span&gt;1072.69&lt;/span&gt;&lt;span&gt; MB)
      Raid Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
     Total Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
       Persistence : Superblock is persistent

       Update Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;41&lt;/span&gt;:&lt;span&gt;08&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
             State : clean, degraded                                                            &lt;span&gt; # 这里注意了。 我们的一个盘坏掉了。 raid5状态为降级使用了。&lt;/span&gt;
    Active Devices : &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
   Working Devices : &lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;
    Failed Devices : &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
     Spare Devices : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;

            Layout : left&lt;/span&gt;-&lt;span&gt;symmetric
        Chunk Size : 256K

Consistency Policy : resync

              Name : centos7.magedu.com:&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;  (local to host centos7.magedu.com)
              UUID : 2c8ae60d:a799fcb7:9008a046:ae6ea430
            Events : &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;

    Number   Major   Minor   RaidDevice State
       &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;17&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdb1
       &lt;/span&gt;-       &lt;span&gt;0&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt;        &lt;span&gt;1&lt;/span&gt;&lt;span&gt;      removed
       &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;49&lt;/span&gt;        &lt;span&gt;2&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdd1

       &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;33&lt;/span&gt;        -      faulty   /dev/&lt;span&gt;sdc1
[root@centos7 md5]$ &lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; a.txt                                          # 发现我们的数据还是能访问的。没有问题。
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.1.5 替换设备&lt;/h4&gt;
&lt;p&gt;我这里是磁盘坏掉后的执行替换的， 完全可以多一个备用盘， 坏掉自动替换的。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@centos7 md5]$ mdadm /dev/md5 -a /dev/&lt;span&gt;sde1                        # 上面我们的sdc1数据损坏，我们需要更换新的磁盘来顶替他的位置。这里添加一个sde1的磁盘， fdisk操作这里省去了。
mdadm: added &lt;/span&gt;/dev/&lt;span&gt;sde1
[root@centos7 md5]$ mdadm &lt;/span&gt;-&lt;span&gt;Ds                                          # 查看详细信息
ARRAY &lt;/span&gt;/dev/md5 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;5&lt;/span&gt; UUID=&lt;span&gt;2c8ae60d:a799fcb7:9008a046:ae6ea430&lt;/span&gt;&lt;span&gt;
[root@centos7 md5]$ mdadm &lt;/span&gt;-D /dev/&lt;span&gt;md5                                  # 查看详细信息
&lt;/span&gt;/dev/&lt;span&gt;md5:
           Version : &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt;
     Creation Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
        Raid Level : raid5
        Array Size : &lt;/span&gt;&lt;span&gt;2095104&lt;/span&gt; (&lt;span&gt;2046.00&lt;/span&gt; MiB &lt;span&gt;2145.39&lt;/span&gt;&lt;span&gt; MB)
     Used Dev Size : &lt;/span&gt;&lt;span&gt;1047552&lt;/span&gt; (&lt;span&gt;1023.00&lt;/span&gt; MiB &lt;span&gt;1072.69&lt;/span&gt;&lt;span&gt; MB)
      Raid Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
     Total Devices : &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;
       Persistence : Superblock is persistent

       Update Time : Wed Dec  &lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
             State : clean                                                 &lt;span&gt; # 状态恢复正常了。没有问题&lt;/span&gt;
    Active Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
   Working Devices : &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;
    Failed Devices : &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
     Spare Devices : &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;

            Layout : left&lt;/span&gt;-&lt;span&gt;symmetric
        Chunk Size : 256K

Consistency Policy : resync

              Name : centos7.magedu.com:&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;  (local to host centos7.magedu.com)
              UUID : 2c8ae60d:a799fcb7:9008a046:ae6ea430
            Events : &lt;/span&gt;&lt;span&gt;43&lt;/span&gt;&lt;span&gt;

    Number   Major   Minor   RaidDevice State
       &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;17&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdb1
       &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;65&lt;/span&gt;        &lt;span&gt;1&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sde1
       &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;49&lt;/span&gt;        &lt;span&gt;2&lt;/span&gt;      active &lt;span&gt;sync&lt;/span&gt;   /dev/&lt;span&gt;sdd1

       &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;       &lt;span&gt;8&lt;/span&gt;       &lt;span&gt;33&lt;/span&gt;        -      faulty   /dev/&lt;span&gt;sdc1             # 这个盘是坏掉的，我们已经加入了新的磁盘， 这个盘可以干掉了&lt;/span&gt;&lt;span&gt;
[root@centos7 md5]$ &lt;/span&gt;&lt;span&gt;man&lt;/span&gt;&lt;span&gt; mdadm
[root@centos7 md5]$ mdadm &lt;/span&gt;/dev/md5 --remove /dev/&lt;span&gt;sdc1                  # 这个盘我们从raid5中移除去。        
mdadm: hot removed &lt;/span&gt;/dev/sdc1 from /dev/md5
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.1.6扩展raid&lt;/h4&gt;
&lt;p&gt;我们上面使用的是2+1构成的raid5,磁盘利用率为66%，如果我们想改成3+1 可以执行类似如下命令&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@centos7 mnt]$ mkadm -G -r  /dev/md5 -n &lt;span&gt;4&lt;/span&gt; -a /dev/sdxx                  # 这里我就不测试了。使用/dev/sdxx代替一个设备。-G 是Grown增长的意思，-r 是resizefs的意思，
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.1.7 清空raid信息&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
[root@centos7 mnt]$ &lt;span&gt;umount&lt;/span&gt; /dev/&lt;span&gt;md5                                   # 卸载设备
[root@centos7 mnt]$ mdadm &lt;/span&gt;-S /dev/&lt;span&gt;md5                                 # 停止raid5 
mdadm: stopped &lt;/span&gt;/dev/&lt;span&gt;md5
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;sed&lt;/span&gt; -i &lt;span&gt;'&lt;/span&gt;&lt;span&gt;$d&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; /etc/&lt;span&gt;fstab                            # 删除fstab中关于raid5挂载的行
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /etc/&lt;span&gt;fstab                                    # 确保fstab没有大问题

#
# &lt;/span&gt;/etc/&lt;span&gt;fstab
# Created by anaconda on Tue Nov  &lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
#
# Accessible filesystems, by reference, are maintained under &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/dev/disk&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
# See &lt;/span&gt;&lt;span&gt;man&lt;/span&gt; pages fstab(&lt;span&gt;5&lt;/span&gt;), findfs(&lt;span&gt;8&lt;/span&gt;), &lt;span&gt;mount&lt;/span&gt;(&lt;span&gt;8&lt;/span&gt;) and/or blkid(&lt;span&gt;8&lt;/span&gt;) &lt;span&gt;for&lt;/span&gt; &lt;span&gt;more&lt;/span&gt; &lt;span&gt;info&lt;/span&gt;&lt;span&gt;
#

UUID&lt;/span&gt;=59ccea87-3c4e-4bbc-&lt;span&gt;9e2f&lt;/span&gt;-3fadb1dcf2e6 /                       ext4    defaults        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
UUID&lt;/span&gt;=f4e867e8-bcde-43a2-adc7-c80b0948e85f /app                    ext4    noatime,usrquota,grpquota        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
UUID&lt;/span&gt;=1d6cbe88-ffb4-4adf-bacf-76be1fa75708 /boot                   ext4    defaults        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
#UUID&lt;/span&gt;=b2c064f5-1ee5-4b5c-9e75-ed41cb99c5aa swap                    swap    defaults        &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
#UUID&lt;/span&gt;=a0516c4f-40e6-&lt;span&gt;4919&lt;/span&gt;-905a-8b44db12ff7b swap               swap    defaults,pri=&lt;span&gt;0&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt; 
#&lt;/span&gt;/dev/sdb2 /test ext4 rw,seclabel,relatime,data=ordered &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;/dev/sdb1 /home xfs rw,seclabel,relatime,attr2,inode64,usrquota,grpquota  &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -rf /etc/mdadm.conf                                   # 删除raid默认配置文件
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;[root@centos7 mnt]$ mdadm --zero-superblock /dev/sd{b1,e1,d1,c1}             # 清空设置上的超级块信息&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;5.2 RAID10的实现&lt;/h3&gt;
&lt;p&gt;raid10 ，6个分区，2个一组raid1,3组raid0 &lt;/p&gt;
&lt;h4&gt;5.2.1 案例分析&lt;/h4&gt;
&lt;p&gt;分析下，我们创建一个raid10设置，2个设备组成一个raid1,6个设备2个一组可以组成3个raid1, 然后把3个raid1组成一个raid0即可&lt;/p&gt;
&lt;h4&gt;5.2.2 先创建6个设备&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[root@centos7 mnt]$ lsblk                                # 就是使用fdisk 创建的设备， 具体这里就不写了。 最终使用lsblk显示，我们可以看到sdb1,sdb2,sdd1,sde1一共6个磁盘
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt;  200G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
├─sda1   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;1&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt; part /&lt;span&gt;boot
├─sda2   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;2&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt;  128G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
├─sda3   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;3&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt; &lt;span&gt;48&lt;/span&gt;.8G  &lt;span&gt;0&lt;/span&gt; part /&lt;span&gt;
├─sda4   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;4&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt;  512B  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
└─sda5   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;5&lt;/span&gt;    &lt;span&gt;0&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;.5G  &lt;span&gt;0&lt;/span&gt; part /&lt;span&gt;app
sdb      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;16&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;  100G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
├─sdb1   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;17&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
└─sdb2   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;18&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
sdc      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;32&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   20G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
├─sdc1   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;33&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
└─sdc2   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;34&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
sdd      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;48&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   20G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
└─sdd1   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;49&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
sde      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;64&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   20G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
└─sde1   &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;65&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;    1G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; part 
sdf      &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt;   &lt;span&gt;0&lt;/span&gt;   20G  &lt;span&gt;0&lt;/span&gt;&lt;span&gt; disk 
sr0     &lt;/span&gt;&lt;span&gt;11&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;    &lt;span&gt;1&lt;/span&gt;  &lt;span&gt;8&lt;/span&gt;.1G  &lt;span&gt;0&lt;/span&gt; rom  /run/media/root/CentOS &lt;span&gt;7&lt;/span&gt; x86_64
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.2.3 创建raid &lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
[root@centos7 mnt]$ mdadm -C /dev/md11 -a yes -l &lt;span&gt;1&lt;/span&gt; -n &lt;span&gt;2&lt;/span&gt; /dev/&lt;span&gt;sd{b1,c1}                               # 创建第一个raid1
mdadm: &lt;/span&gt;/dev/&lt;span&gt;sdb1 appears to be part of a raid array:
       level&lt;/span&gt;=raid5 devices=&lt;span&gt;3&lt;/span&gt; ctime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
mdadm: Note: this array has metadata at the start and
    may not be suitable as a boot device.  If you plan to
    store &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/boot&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; on this device please ensure that
    your boot&lt;/span&gt;-loader understands md/&lt;span&gt;v1.x metadata, or use
    &lt;/span&gt;--metadata=&lt;span&gt;0.90&lt;/span&gt;&lt;span&gt;
mdadm: &lt;/span&gt;/dev/&lt;span&gt;sdc1 appears to be part of a raid array:
       level&lt;/span&gt;=raid5 devices=&lt;span&gt;3&lt;/span&gt; ctime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
Continue creating array&lt;/span&gt;?&lt;span&gt; y
mdadm: Defaulting to version &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt; metadata
mdadm: array &lt;/span&gt;/dev/&lt;span&gt;md11 started.
[root@centos7 mnt]$ mdadm &lt;/span&gt;-C /dev/md12 -a yes -l &lt;span&gt;1&lt;/span&gt; -n &lt;span&gt;2&lt;/span&gt; /dev/&lt;span&gt;sd{b2,c2}                                #创建第二个raid1
mdadm: Note: this array has metadata at the start and
    may not be suitable as a boot device.  If you plan to
    store &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/boot&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; on this device please ensure that
    your boot&lt;/span&gt;-loader understands md/&lt;span&gt;v1.x metadata, or use
    &lt;/span&gt;--metadata=&lt;span&gt;0.90&lt;/span&gt;&lt;span&gt;
Continue creating array&lt;/span&gt;?&lt;span&gt; y
mdadm: Defaulting to version &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt; metadata
mdadm: array &lt;/span&gt;/dev/&lt;span&gt;md12 started.
[root@centos7 mnt]$ mdadm &lt;/span&gt;-C /dev/md13 -a yes -l &lt;span&gt;1&lt;/span&gt; -n &lt;span&gt;2&lt;/span&gt; /dev/&lt;span&gt;sd{d1,e1}                                 # 创建第三个raid1
mdadm: &lt;/span&gt;/dev/&lt;span&gt;sdd1 appears to be part of a raid array:
       level&lt;/span&gt;=raid5 devices=&lt;span&gt;3&lt;/span&gt; ctime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
mdadm: Note: this array has metadata at the start and
    may not be suitable as a boot device.  If you plan to
    store &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/boot&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; on this device please ensure that
    your boot&lt;/span&gt;-loader understands md/&lt;span&gt;v1.x metadata, or use
    &lt;/span&gt;--metadata=&lt;span&gt;0.90&lt;/span&gt;&lt;span&gt;
mdadm: &lt;/span&gt;/dev/&lt;span&gt;sde1 appears to be part of a raid array:
       level&lt;/span&gt;=raid5 devices=&lt;span&gt;3&lt;/span&gt; ctime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;28&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
Continue creating array&lt;/span&gt;?&lt;span&gt; y
mdadm: Defaulting to version &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt; metadata
mdadm: array &lt;/span&gt;/dev/&lt;span&gt;md13 started.&lt;/span&gt;&lt;span&gt;
[root@centos7 mnt]$ mdadm &lt;/span&gt;-C /dev/md10 -a yes -l &lt;span&gt;0&lt;/span&gt; -n &lt;span&gt;3&lt;/span&gt; /dev/md{&lt;span&gt;11&lt;/span&gt;,&lt;span&gt;12&lt;/span&gt;,&lt;span&gt;13&lt;/span&gt;&lt;span&gt;}                             # 将3个raid1 合并为一个raid0 
mdadm: &lt;/span&gt;/dev/md11 appears to contain an ext2fs &lt;span&gt;file&lt;/span&gt;&lt;span&gt; system
       size&lt;/span&gt;=2095104K  mtime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;29&lt;/span&gt;:&lt;span&gt;45&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
mdadm: &lt;/span&gt;/dev/md13 appears to contain an ext2fs &lt;span&gt;file&lt;/span&gt;&lt;span&gt; system
       size&lt;/span&gt;=2095104K  mtime=Wed Dec  &lt;span&gt;6&lt;/span&gt; &lt;span&gt;19&lt;/span&gt;:&lt;span&gt;29&lt;/span&gt;:&lt;span&gt;45&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
Continue creating array&lt;/span&gt;?&lt;span&gt; y
mdadm: Defaulting to version &lt;/span&gt;&lt;span&gt;1.2&lt;/span&gt;&lt;span&gt; metadata
mdadm: array &lt;/span&gt;/dev/&lt;span&gt;md10 started.
[root@centos7 mnt]$ mkfs.ext
mkfs.ext2  mkfs.ext3  mkfs.ext4            
[root@centos7 mnt]$ mkfs.ext4 &lt;/span&gt;/dev/&lt;span&gt;md10                                                                 # 创建文件系统                                                                                         
mke2fs &lt;/span&gt;&lt;span&gt;1.42&lt;/span&gt;.&lt;span&gt;9&lt;/span&gt; (&lt;span&gt;28&lt;/span&gt;-Dec-&lt;span&gt;2013&lt;/span&gt;&lt;span&gt;)
Filesystem label&lt;/span&gt;=&lt;span&gt;
OS type: Linux
Block size&lt;/span&gt;=&lt;span&gt;4096&lt;/span&gt; (log=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)
Fragment size&lt;/span&gt;=&lt;span&gt;4096&lt;/span&gt; (log=&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)
Stride&lt;/span&gt;=&lt;span&gt;128&lt;/span&gt; blocks, Stripe width=&lt;span&gt;384&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;196224&lt;/span&gt; inodes, &lt;span&gt;784896&lt;/span&gt;&lt;span&gt; blocks
&lt;/span&gt;&lt;span&gt;39244&lt;/span&gt; blocks (&lt;span&gt;5.00&lt;/span&gt;%) reserved &lt;span&gt;for&lt;/span&gt;&lt;span&gt; the super user
First data block&lt;/span&gt;=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;
Maximum filesystem blocks&lt;/span&gt;=&lt;span&gt;805306368&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; block &lt;span&gt;groups&lt;/span&gt;
&lt;span&gt;32768&lt;/span&gt; blocks per group, &lt;span&gt;32768&lt;/span&gt;&lt;span&gt; fragments per group
&lt;/span&gt;&lt;span&gt;8176&lt;/span&gt;&lt;span&gt; inodes per group
Superblock backups stored on blocks: 
    &lt;/span&gt;&lt;span&gt;32768&lt;/span&gt;, &lt;span&gt;98304&lt;/span&gt;, &lt;span&gt;163840&lt;/span&gt;, &lt;span&gt;229376&lt;/span&gt;, &lt;span&gt;294912&lt;/span&gt;&lt;span&gt;

Allocating group tables: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;                            
Writing inode tables: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;                            
Creating journal (&lt;/span&gt;&lt;span&gt;16384&lt;/span&gt; blocks): &lt;span&gt;done&lt;/span&gt;&lt;span&gt;
Writing superblocks and filesystem accounting information: &lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt; 

[root@centos7 mnt]$ mdadm &lt;/span&gt;-&lt;span&gt;Ds                                                                             # 查看配置信息
ARRAY &lt;/span&gt;/dev/md11 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;11&lt;/span&gt; UUID=&lt;span&gt;0ce2cd6c:cd21fab6:3e65cfb5:64bd86f3
ARRAY &lt;/span&gt;/dev/md12 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;12&lt;/span&gt; UUID=&lt;span&gt;8af31dff:efab06ed:48e2613b:a599c774
ARRAY &lt;/span&gt;/dev/md13 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;13&lt;/span&gt; UUID=&lt;span&gt;a8c99d60:2d0c61e7:97a76809:9396c020
ARRAY &lt;/span&gt;/dev/md10 metadata=&lt;span&gt;1.2&lt;/span&gt; name=centos7.magedu.com:&lt;span&gt;10&lt;/span&gt; UUID=&lt;span&gt;50b2fa58:4ce65d67:8c50c853:fa175a28
[root@centos7 mnt]$ mdadm &lt;/span&gt;-Ds  &amp;gt;&amp;gt; /etc/&lt;span&gt;mdadm.conf                                                         # 写配置文件到mdadm的配置文件中
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt; /mnt/&lt;span&gt;md10                                                                       # 创建挂载目录
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;mount&lt;/span&gt; /dev/md10 /mnt/&lt;span&gt;md10                                                             # 挂载文件系统&lt;/span&gt;&lt;span&gt;
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;tail&lt;/span&gt; -n &lt;span&gt;1&lt;/span&gt; /etc/&lt;span&gt;mtab                                                                   # 查看mtab文件中的最后一行， 也就是我们的md10挂载信息
&lt;/span&gt;/dev/md10 /mnt/md10 ext4 rw,seclabel,relatime,stripe=&lt;span&gt;384&lt;/span&gt;,data=ordered &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;tail&lt;/span&gt; -n &lt;span&gt;1&lt;/span&gt; /etc/mtab &amp;gt;&amp;gt; /etc/fstab                                                     #添加到开机启动
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.2.4 raid 清除工作&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;56&quot;&gt;
&lt;pre&gt;
[root@centos7 mnt]$ &lt;span&gt;umount&lt;/span&gt; /dev/&lt;span&gt;md10                                                                      # 取消挂载
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -rf /etc/&lt;span&gt;mdadm.conf                                                                # 删除mdadm的默认配置
[root@centos7 mnt]$ mdadm &lt;/span&gt;-S /dev/&lt;span&gt;md10                                                                    # 停止raid0设置
mdadm: stopped &lt;/span&gt;/dev/&lt;span&gt;md10
[root@centos7 mnt]$ mdadm &lt;/span&gt;-S /dev/&lt;span&gt;md11                                                                    # 停止raid1设置
mdadm: stopped &lt;/span&gt;/dev/&lt;span&gt;md11
[root@centos7 mnt]$ mdadm &lt;/span&gt;-S /dev/&lt;span&gt;md12                                                                    # 停止radi1 设置
mdadm: stopped &lt;/span&gt;/dev/&lt;span&gt;md12 
[root@centos7 mnt]$ mdadm &lt;/span&gt;-S /dev/&lt;span&gt;md13                                                                    # 停止raid 1 设置
mdadm: stopped &lt;/span&gt;/dev/&lt;span&gt;md13
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;sed&lt;/span&gt; -i &lt;span&gt;'&lt;/span&gt;&lt;span&gt;$d&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; /etc/&lt;span&gt;fstab                                                                # 删除fstab的挂载  
[root@centos7 mnt]$ &lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /etc/&lt;span&gt;fstab                                                                        # 确保正确

#
# &lt;/span&gt;/etc/&lt;span&gt;fstab
# Created by anaconda on Tue Nov  &lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt; &lt;span&gt;2017&lt;/span&gt;&lt;span&gt;
#
# Accessible filesystems, by reference, are maintained under &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/dev/disk&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
# See &lt;/span&gt;&lt;span&gt;man&lt;/span&gt; pages fstab(&lt;span&gt;5&lt;/span&gt;), findfs(&lt;span&gt;8&lt;/span&gt;), &lt;span&gt;mount&lt;/span&gt;(&lt;span&gt;8&lt;/span&gt;) and/or blkid(&lt;span&gt;8&lt;/span&gt;) &lt;span&gt;for&lt;/span&gt; &lt;span&gt;more&lt;/span&gt; &lt;span&gt;info&lt;/span&gt;&lt;span&gt;
#

UUID&lt;/span&gt;=59ccea87-3c4e-4bbc-&lt;span&gt;9e2f&lt;/span&gt;-3fadb1dcf2e6 /                       ext4    defaults        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;
UUID&lt;/span&gt;=f4e867e8-bcde-43a2-adc7-c80b0948e85f /app                    ext4    noatime,usrquota,grpquota        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
UUID&lt;/span&gt;=1d6cbe88-ffb4-4adf-bacf-76be1fa75708 /boot                   ext4    defaults        &lt;span&gt;1&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;
#UUID&lt;/span&gt;=b2c064f5-1ee5-4b5c-9e75-ed41cb99c5aa swap                    swap    defaults        &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
#UUID&lt;/span&gt;=a0516c4f-40e6-&lt;span&gt;4919&lt;/span&gt;-905a-8b44db12ff7b swap               swap    defaults,pri=&lt;span&gt;0&lt;/span&gt;        &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt; 
#&lt;/span&gt;/dev/sdb2 /test ext4 rw,seclabel,relatime,data=ordered &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;/dev/sdb1 /home xfs rw,seclabel,relatime,attr2,inode64,usrquota,grpquota  &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
[root@centos7 mnt]$ mdadm &lt;/span&gt;-&lt;span&gt;D                                                                                  # 再次查看下mdadm信息，确保没有了
mdadm: No devices given.&lt;br/&gt;[root@centos7 mnt]$ mdadm --zero-superblock /dev/sd{b1,b2,c1,c2,d1,e1}                                        # 请求md的元数据信息&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; 6 参考&lt;/h2&gt;
&lt;p&gt;博客参考：&lt;a href=&quot;%20http://blog.jobbole.com/83808/&quot; target=&quot;_blank&quot;&gt; http://blog.jobbole.com/83808/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;wiki参考：&lt;a href=&quot;%20https://en.wikipedia.org/wiki/RAID&quot; target=&quot;_blank&quot;&gt; https://en.wikipedia.org/wiki/RAID&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 12:32:00 +0000</pubDate>
<dc:creator>LinuxPanda</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_041_raid.html</dc:identifier>
</item>
<item>
<title>基于MySQL + Node.js + Leaflet的离线地图展示，支持百度、谷歌、高德、腾讯地图 - 归去来兮码乘虚</title>
<link>http://www.cnblogs.com/dxxzst/p/7994230.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dxxzst/p/7994230.html</guid>
<description>&lt;p&gt;&lt;strong&gt;1. 基本说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本项目实现了离线展示百度、谷歌、高德、腾讯地图。主要功能如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;实现了地图瓦片图下载、存储。目前支持存储至&lt;a href=&quot;https://www.mysql.com/&quot; rel=&quot;nofollow&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; rel=&quot;nofollow&quot;&gt;Node.js&lt;/a&gt;服务调用MySQL中的瓦片图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://leafletjs.com/&quot; rel=&quot;nofollow&quot;&gt;Leaflet&lt;/a&gt;展示地图&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;展示效果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/464df91f9d5ccbd330344c6d8c306fc103c6b4ba/687474703a2f2f69322e6b69696d672e636f6d2f3536313534352f323136393833643639326665663536612e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/464df91f9d5ccbd330344c6d8c306fc103c6b4ba/687474703a2f2f69322e6b69696d672e636f6d2f3536313534352f323136393833643639326665663536612e6a7067&quot; alt=&quot;展示效果&quot; width=&quot;1231&quot; height=&quot;673&quot; data-canonical-src=&quot;http://i2.kiimg.com/561545/216983d692fef56a.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 地图瓦片下载工具及配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;工具下载链接: &lt;a href=&quot;http://pan.baidu.com/s/1qYoHj4K&quot; rel=&quot;nofollow&quot;&gt;http://pan.baidu.com/s/1qYoHj4K&lt;/a&gt; 密码: ehgh 工具使用方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;数据库配置&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;打开工具目录中的 MapDownloader.exe.config 文件。根据实际情况填写如图中的配置信息。 &lt;a href=&quot;https://camo.githubusercontent.com/6633314178c67a1de0af5961e2c67aea2abf0194/687474703a2f2f69322e6b69696d672e636f6d2f3536313534352f313862316337373663653532393734362e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/6633314178c67a1de0af5961e2c67aea2abf0194/687474703a2f2f69322e6b69696d672e636f6d2f3536313534352f313862316337373663653532393734362e6a7067&quot; alt=&quot;数据库配置&quot; data-canonical-src=&quot;http://i2.kiimg.com/561545/18b1c776ce529746.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;地图瓦片图下载&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;打开工具目录中 MapDownloader.exe -&amp;gt; 选择画图工具、矩形 -&amp;gt; 地图上框选区域 -&amp;gt; 存储方式选择MySQL数据库 -&amp;gt; Zoom根据需要选择 -&amp;gt; 点击下载&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/1634311bfde95040cc075922ac3b5cb726ea1542/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f333066646565373432343039636565382e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1634311bfde95040cc075922ac3b5cb726ea1542/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f333066646565373432343039636565382e6a7067&quot; alt=&quot;下载瓦片图&quot; width=&quot;1180&quot; height=&quot;693&quot; data-canonical-src=&quot;http://i4.piimg.com/561545/30fdee742409cee8.jpg&quot;/&gt;　　&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;数据库中存储的瓦片图&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/4bca58979333e18f81224a181ed88fef0d0dbdbc/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f316638376238306363653961376332362e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4bca58979333e18f81224a181ed88fef0d0dbdbc/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f316638376238306363653961376332362e6a7067&quot; alt=&quot;数据库中存储的瓦片图&quot; width=&quot;1027&quot; height=&quot;633&quot; data-canonical-src=&quot;http://i4.piimg.com/561545/1f87b80cce9a7c26.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;备注：数据库中Type字段指的是地图类型，对于谷歌地图 普通地图（1818940751）、卫星地图（47626774）、标注（1024577166）。此工具功能丰富，可细细研究。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;3. node.js服务配置&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;修改mysql.js 中的配置。根据实际情况，配置数据库链接&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://camo.githubusercontent.com/d5718ba2b7303ab9915224090a6e17bb0187ae32/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f373163306239383732663232326330622e6a7067&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/d5718ba2b7303ab9915224090a6e17bb0187ae32/687474703a2f2f69342e7069696d672e636f6d2f3536313534352f373163306239383732663232326330622e6a7067&quot; alt=&quot;配置数据库链接&quot; data-canonical-src=&quot;http://i4.piimg.com/561545/71c0b9872f222c0b.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;进入目录 &lt;code&gt;cd OfflineMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装资源 &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动服务 &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;服务地址 &lt;code&gt;http://127.0.0.1:3001&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;4. 页面展示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开example文件夹中的map.html即可。&lt;/p&gt;
&lt;p&gt;GitHub地址：&lt;a href=&quot;https://github.com/dxxzst/OfflineMap&quot; target=&quot;_blank&quot;&gt;https://github.com/dxxzst/OfflineMap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如本项目对您有所帮助，欢迎Star。&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 10:35:00 +0000</pubDate>
<dc:creator>归去来兮码乘虚</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dxxzst/p/7994230.html</dc:identifier>
</item>
<item>
<title>我理解的用户体验 - 鬼柒</title>
<link>http://www.cnblogs.com/7rhythm/p/7994210.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/7rhythm/p/7994210.html</guid>
<description>&lt;p&gt;用起来很爽快。这就是用户体验。&lt;/p&gt;
&lt;p&gt;用户体验是一系列的心理学，美学，经验总结而成的一门艺术。&lt;/p&gt;
&lt;p&gt;专用名称是UED User Experience Design(用户体验设计)&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;用户体验不是产品的易用性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一些很好用但是非常让人难受的东西，比如说“高速公路”跟“弯路”。&lt;/p&gt;
&lt;p&gt;高速公路是有效直达的，路程速度上都是完美的，但是开车走高速是非常乏味的。这就是易用性很高，但是体验很糟糕。&lt;/p&gt;
&lt;p&gt;用户体验不是我们的体验，而是用户的体验。 &lt;/p&gt;
&lt;p&gt;每个人因为学识，经验，人生阅历，习惯等等不同，对自己认为合适的好的产品，对其他个体并不好。所以要针对产品面向的用户人群设计，并且要通过用户调查，用数据说明你的效果好坏。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;用户体验的设计应以用户为中心。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户体验是感动用户的产品设计。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户体验是一种新的产品竞争力。&lt;/strong&gt;&lt;/p&gt;



&lt;h2&gt;1， 细节决定成败。&lt;/h2&gt;
&lt;h2&gt;2， 在功能高度可复制的前提下，用户体验重要性高于一切。&lt;/h2&gt;

&lt;p&gt;如果一个体验非常糟糕的产品，尽管技术上有多少创新，攻克了多少难关。并没有人想用你的产品，在技术上所做的努力全部白费。&lt;/p&gt;
&lt;p&gt;当今的互联网时代已经度过了“技术稀缺性”导致的用户对功能性的偏重，到达了竞品到处开花，体验高于实现的时代。&lt;/p&gt;
&lt;p&gt;一个优秀产品的必须既然具备特色功能，又应当让用户用起来爽快。&lt;/p&gt;

&lt;p&gt;荒野行动的小地图设计&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182030909-1197344119.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;光荣使命的小地图设计&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182036738-140874721.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;思考视野的扇形设计的意义。&lt;/p&gt;
&lt;p&gt; 1，没有这个扇形设计时，多人组队时三角图标叠在一起，看不到自己的朝向。&lt;/p&gt;
&lt;p&gt;2，知道目前的视野范围对应小地图的区域。&lt;/p&gt;

&lt;p&gt;对开发人员来说，学习用户体验的好处在于&lt;/p&gt;
&lt;p&gt;1，遇到一些交互决策时可以快速决定，不用事事寻求需求方确认，提高工作效率。&lt;/p&gt;
&lt;p&gt;2，从技术的角度寻求一些更优用户体验的方式。举例“我要一匹更快的马”&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182043691-586722745.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;3，只有从技术角度去权衡，才能够发现一些体验更优，开发成本更低的方式。因为需求方对技术的未知，无法提供这种方案。&lt;/p&gt;



&lt;p&gt;交互，动画的感觉，是如一阵清风轻松，还是电闪雷鸣的激烈感。&lt;/p&gt;
&lt;p&gt;比如说一个旋转10度的动画，是为了抖动，还是为了倾倒感&lt;/p&gt;
&lt;p&gt;把交互的理解，以现实世界作为参照，又高于现实世界。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“&lt;/em&gt;艺术源于生活，而高于生活&lt;em&gt;”&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;拟物化设计&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182054441-198207981.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;利用用户对现实世界已有的认知，让用户更快速更容易接收信息。&lt;/p&gt;


&lt;p&gt;扁平化设计&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182100691-288946370.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;去除繁重的装饰性，减少用户思考成本，直截了当的呈现信息。&lt;/p&gt;



&lt;p&gt;从用户的角度思考产品，把功能描述成用户与你的产品之间产生的故事。你才能出产真正用户需要的产品。&lt;/p&gt;
&lt;p&gt;从技术开发的角度思考产品，非常容易走偏做出“可以使用，但没什么价值的产品”。&lt;/p&gt;
&lt;p&gt;从商业角度思考产品，容易出品“对公司非常好，但是用户一点兴趣都没有的产品”。&lt;/p&gt;

&lt;p&gt;举例思考，PC端的A链接，是否要新开页？&lt;/p&gt;
&lt;p&gt;设身处地的从用户角度思考，假如我是一个用户，我希望打开一个链接时，什么时候是在相同页，什么时候是在新开页。&lt;/p&gt;
&lt;p&gt;痛点是什么？&lt;/p&gt;



&lt;p&gt;定位用户在这个产品上所属的角色。先细分，后删除。&lt;/p&gt;
&lt;p&gt;根据不用的条件划分，年龄，游戏重度轻度使用者，是否关注，是分享者，还是被分享者。是PC用户，还是移动端用户，微信/QQ。IOS用户，安卓用户。是渣渣性能手机用户，还是流弊性能手机用户。&lt;/p&gt;
&lt;p&gt;然后删掉对你产品无意义的用户角色。&lt;/p&gt;
&lt;p&gt;比如说一个微信的签到H5，明显QQ用户是对这个产品的无效用户。&lt;/p&gt;

&lt;p&gt;针对这些用户角色来思考交互。比如一个渣渣性能手机用户，你要呈现一个精彩绝伦的动画效果，显然不现实。&lt;/p&gt;

&lt;p&gt;明确需求的定义，去除二义性，脱离一些主观性不可量化的需求，如“这里要亮一点”“快速的打开网页”如何称之为“快”“亮”？改成如“1秒内打开网页”“明度增加10%”&lt;/p&gt;

&lt;p&gt;用积极乐观的描述方式。&lt;/p&gt;
&lt;p&gt;如“用户不能领取2次奖励”，应该改成“用户能够领取一次奖励，第二次领取时提示已经领取过。”&lt;/p&gt;
&lt;p&gt;积极的需求定义能够引导出积极的交互与功能。反之亦然。&lt;/p&gt;

&lt;h3&gt;描述需求的本质&lt;/h3&gt;
&lt;p&gt;“&lt;span&gt;&lt;em&gt;我要可以用微信，qq，手机号，帐号密码登录，并且微信QQ在左边，帐号密码在右边，密码填写的时候可以勾选显示密码&lt;/em&gt;&lt;/span&gt;”&lt;/p&gt;

&lt;p&gt;上面示例的需求本质其实是“&lt;span&gt;我要一个登录功能&lt;/span&gt;”这才是最重要，就算登录方式增加几百种，加入“邮箱”“微博”等登录方式，这个核心需求并不会改变。&lt;/p&gt;
&lt;p&gt;“微信QQ在左边”这是界面需求，可能会改上几百个版本之后会变成“&lt;span&gt;&lt;em&gt;微信qq等登录方式做成小图标在登录按钮附近&lt;/em&gt;&lt;/span&gt;”&lt;/p&gt;

&lt;p&gt;“显示密码”显示密码的功能可能会被去掉。&lt;/p&gt;

&lt;p&gt;所以我们应当把需求分层次的描述，不要笼统的把所有需求细节堆砌起来，这样分不清那些是重要的，那些是次要的。&lt;/p&gt;
&lt;p&gt;容易把精力投入到一些不相干的功能上，无法有效应对变化。&lt;/p&gt;

&lt;h3&gt;描述需求价值&lt;/h3&gt;
&lt;p&gt;“我想要一个登录功能，这样用户可以登录后保存他的订单信息”（用户价值）&lt;/p&gt;
&lt;p&gt;“我想要一个登录功能，这样用户登录后绑定订单，后台可以统计这些订单信息”（商业价值）&lt;/p&gt;
&lt;p&gt;保证每一项功能都有价值，不管是用户价值还是商业价值。&lt;/p&gt;

&lt;p&gt;请参考用户故事的描述范例：&lt;/p&gt;
&lt;p&gt;“作为一个XXXX角色，我可以使用OOOO功能，以便YYYY（价值）”&lt;/p&gt;




&lt;p&gt;需求膨胀时&lt;/p&gt;
&lt;p&gt;上策是：&lt;/p&gt;
&lt;p&gt;首先寻求客户理解与合作，体现说服力的作用，技术人要提供足够的论据，PM根据这些论据与客户进行沟通。团队内的合作尤其重要。&lt;/p&gt;
&lt;p&gt;反例是，盲目接受需求膨胀，会给项目带来不必要的风险与错误。&lt;/p&gt;
&lt;p&gt;如果团队内形成拉锯，PM变成客户代表对开发施加压力，开发反制提供虚假理由。&lt;/p&gt;
&lt;p&gt;都是危害性非常大的行为。&lt;/p&gt;

&lt;p&gt;如果沟通失败，&lt;/p&gt;
&lt;p&gt;中策是：&lt;/p&gt;
&lt;p&gt;合同约束的方式。&lt;/p&gt;
&lt;p&gt;下策是：&lt;/p&gt;
&lt;p&gt;走上层沟通。找上司沟通他们上司，找BOSS沟通他们BOSS。&lt;/p&gt;
&lt;p&gt; “阎王易见，小鬼难缠”&lt;/p&gt;
&lt;p&gt;下下策是：&lt;/p&gt;
&lt;p&gt;甩手不干。&lt;/p&gt;
&lt;p&gt; 有时候放弃，也是一种办法。&lt;/p&gt;


&lt;p&gt;1，所有交互都必须有所反馈。变色或者声音或者弹窗，或者页面变化，转动，旋转，回弹等。避免操作后给用户困惑，不知道刚才的操作代表什么，不知道你现在的无状态是死机，还是误操作。&lt;/p&gt;
&lt;p&gt;2，尽可能的减少用户操作。&lt;/p&gt;
&lt;p&gt;3，减少弹窗，所有的弹窗都是不可预知的，突然的中断用户连续的体验。&lt;/p&gt;
&lt;p&gt;3， 提高信息识别度。如果图片能够表达清晰，就减少文字描述。图片比文字更容易理解。大脑的视觉系统是与生俱来的，文字是人类自己发明的，是后天学习的产物。&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182133534-679294039.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;比较一下购物车图标跟文字“购物车”&lt;/p&gt;

&lt;p&gt;5，信息的一致性，在产品的各个方面,设计，交互，功能。都要保证给用户信息一致性。&lt;/p&gt;
&lt;p&gt;举例：一个邮件的发送按钮，如果每次点击有时是发送邮件，有时是定时发送。&lt;/p&gt;
&lt;p&gt;示例，腾讯邮箱的发送功能被分为两个按钮。&lt;/p&gt;
&lt;p&gt;思考为什么不做成一个“发送”然后在发送时选择是否定时发送？&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/194179/201712/194179-20171206182142534-712814171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;交互上反例是一个区域有时候展示最新的产品资讯，有时候显示最热的产品资讯。&lt;/p&gt;
&lt;p&gt;给用户形成困扰。&lt;/p&gt;
&lt;p&gt;6，减少让用户陷入负面情绪，困惑，惊吓，中断，厌倦。&lt;/p&gt;



&lt;p&gt;所有的产品都需要回答2个问题：&lt;/p&gt;
&lt;p&gt;1，我们的用户通过这个产品获得了什么？（用户价值）&lt;/p&gt;
&lt;p&gt;2，我们自己通过这个产品获得了什么？（商业价值）&lt;/p&gt;

&lt;p&gt;权衡好商业价值与用户价值。取得一个平衡点。&lt;/p&gt;
&lt;p&gt;例如：广告弹窗。&lt;/p&gt;

&lt;p&gt;所有产品本质是以技术导向的。&lt;/p&gt;
&lt;p&gt;只有对应的技术可实现，对产品的所有设想才有可能变成现实。&lt;/p&gt;
&lt;p&gt;所以技术的核心价值在于把不可能的事情，变成可能。创造一些不存在的东西。&lt;/p&gt;

&lt;p&gt;当然也要在质量与时间之间取得平衡，时刻保持接受挑战的状态。&lt;/p&gt;
</description>
<pubDate>Wed, 06 Dec 2017 10:28:00 +0000</pubDate>
<dc:creator>鬼柒</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/7rhythm/p/7994210.html</dc:identifier>
</item>
</channel>
</rss>