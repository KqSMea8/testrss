<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Prometheus 架构 - 每天5分钟玩转 Docker 容器技术（83） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/7692765.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/7692765.html</guid>
<description>&lt;p&gt;&lt;span&gt;Prometheus 是一个非常优秀的监控工具。准确的说，应该是监控方案。Prometheus 提供了监控数据搜集、存储、处理、可视化和告警一套完整的解决方案。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;让我们先来看看 Prometheus 的架构。&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;架构&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Prometheus 架构如下：&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171019-1508397075863083402.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171019-1508397075863083402.png&quot; alt=&quot;405.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;官网上的原始架构图比上面这张要复杂一些，为了集中大家的注意力，我只保留了最重要的组件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prometheus Server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Prometheus Server 负责从 Exporter 拉取和存储监控数据，并提供一套灵活的查询语言（PromQL）供用户使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exporter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Exporter 负责收集目标对象（host, container…）的性能数据，并通过 HTTP 接口供 Prometheus Server 获取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可视化组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;监控数据的可视化展现对于监控方案至关重要。以前 Prometheus 自己开发了一套工具，不过后来废弃了，因为开源社区出现了更为优秀的产品 Grafana。Grafana 能够与 Prometheus 无缝集成，提供完美的数据展示能力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alertmanager&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用户可以定义基于监控数据的告警规则，规则会触发告警。一旦 Alermanager 收到告警，会通过预定义的方式发出告警通知。支持的方式包括 Email、PagerDuty、Webhook 等.&lt;/p&gt;
&lt;p&gt;也许一些熟悉其他监控方案的同学看了 Prometheus 的架构会不以为然，“这些功能 Zabbix、Graphite、Nagios 这类监控系统也都有，没什么特别的啊！”。&lt;/p&gt;
&lt;p&gt;Prometheus 最大的亮点和先进性是它的多维数据模型，下节我们重点介绍。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;书籍：&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.《每天5分钟玩转Docker容器技术》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/16936307278.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 19 Oct 2017 23:47:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/7692765.html</dc:identifier>
</item>
<item>
<title>PE格式第八讲,TLS表(线程局部存储) - iBinary</title>
<link>http://www.cnblogs.com/iBinary/p/7697355.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/iBinary/p/7697355.html</guid>
<description>
&lt;p&gt;作者：IBinary&lt;br/&gt;出处：&lt;a href=&quot;http://www.cnblogs.com/iBinary/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/iBinary/&lt;/a&gt;&lt;br/&gt;版权所有，欢迎保留原文链接进行转载：)&lt;/p&gt;
&lt;h2&gt;一丶复习线程相关知识&lt;/h2&gt;
&lt;p&gt;首先讲解TLS的时候,需要复习线程相关知识,  (thread local storage )&lt;/p&gt;
&lt;p&gt;1.了解经典同步问题&lt;/p&gt;
&lt;p&gt;首先我们先写一段C++代码,开辟两个线程去跑,看看会不会出现同步问题.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234252037-1745697860.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看结果得知,结果并不是正确的,造成同步的问题的原因是两个线程都对同一个变量进行访问.&lt;/p&gt;
&lt;p&gt;解决问题:&lt;/p&gt;
&lt;h3&gt;1.使用同步对象.  (自旋锁 自加锁 互斥体 事件  信号灯  临界区.....等等都可以.)&lt;/h3&gt;
&lt;p&gt;这里使用自加锁解决(当然可以用别的)&lt;/p&gt;
&lt;p&gt;InterlockedIncrement  API &lt;/p&gt;
&lt;p&gt; 原型:&lt;/p&gt;
&lt;pre class=&quot;syntax&quot;&gt;
&lt;strong&gt;LONG InterlockedIncrement(
  LPLONG volatile&lt;/strong&gt;&lt;em&gt; &lt;a class=&quot;synParam&quot;&gt;lpAddend&lt;/a&gt;&lt;/em&gt;   // variable to increment
&lt;strong&gt;);&lt;/strong&gt;&lt;br/&gt;只需要把全局变量的地址给它,强转为long * 类型即可.
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234948427-1779861222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用之后结果是正确的&lt;/p&gt;
&lt;h3&gt;二丶何为TLS  (Thread  local storage)&lt;/h3&gt;
&lt;p&gt;所谓TLS,意思就是指,每个线程都有自己的空间,局部存储,什么意思?&lt;/p&gt;
&lt;p&gt;比如上方我们对一个g_dwNumber进行操作,那么我们就要使用同步对象,我们不妨这样去想,每个线程,开辟一个空间&lt;/p&gt;
&lt;p&gt;当对A线程进行操作的时候,操作的是A线程的g_dwNumber,当对B线程进行操作的时候,是对B线程的g_dwNumber进行操作.&lt;/p&gt;
&lt;p&gt;其实很简单,介绍一下TLS的API&lt;/p&gt;
&lt;p&gt;总共4个&lt;/p&gt;

&lt;h2&gt;一丶复习线程相关知识&lt;/h2&gt;
&lt;p&gt;首先讲解TLS的时候,需要复习线程相关知识,  (thread local storage )&lt;/p&gt;
&lt;p&gt;1.了解经典同步问题&lt;/p&gt;
&lt;p&gt;首先我们先写一段C++代码,开辟两个线程去跑,看看会不会出现同步问题.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234252037-1745697860.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看结果得知,结果并不是正确的,造成同步的问题的原因是两个线程都对同一个变量进行访问.&lt;/p&gt;
&lt;p&gt;解决问题:&lt;/p&gt;
&lt;h3&gt;1.使用同步对象.  (自旋锁 自加锁 互斥体 事件  信号灯  临界区.....等等都可以.)&lt;/h3&gt;
&lt;p&gt;这里使用自加锁解决(当然可以用别的)&lt;/p&gt;
&lt;p&gt;InterlockedIncrement  API &lt;/p&gt;
&lt;p&gt; 原型:&lt;/p&gt;
&lt;pre class=&quot;syntax&quot;&gt;
&lt;strong&gt;LONG InterlockedIncrement(
  LPLONG volatile&lt;/strong&gt;&lt;em&gt; &lt;a class=&quot;synParam&quot;&gt;lpAddend&lt;/a&gt;&lt;/em&gt;   // variable to increment
&lt;strong&gt;);&lt;/strong&gt;&lt;br/&gt;只需要把全局变量的地址给它,强转为long * 类型即可.
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234948427-1779861222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用之后结果是正确的&lt;/p&gt;
&lt;h3&gt;二丶何为TLS  (Thread  local storage)&lt;/h3&gt;
&lt;p&gt;所谓TLS,意思就是指,每个线程都有自己的空间,局部存储,什么意思?&lt;/p&gt;
&lt;p&gt;比如上方我们对一个g_dwNumber进行操作,那么我们就要使用同步对象,我们不妨这样去想,每个线程,开辟一个空间&lt;/p&gt;
&lt;p&gt;当对A线程进行操作的时候,操作的是A线程的g_dwNumber,当对B线程进行操作的时候,是对B线程的g_dwNumber进行操作.&lt;/p&gt;
&lt;p&gt;其实很简单,介绍一下TLS的API&lt;/p&gt;
&lt;p&gt;总共4个&lt;/p&gt;


&lt;h2&gt;一丶复习线程相关知识&lt;/h2&gt;
&lt;p&gt;首先讲解TLS的时候,需要复习线程相关知识,  (thread local storage )&lt;/p&gt;
&lt;p&gt;1.了解经典同步问题&lt;/p&gt;
&lt;p&gt;首先我们先写一段C++代码,开辟两个线程去跑,看看会不会出现同步问题.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234252037-1745697860.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看结果得知,结果并不是正确的,造成同步的问题的原因是两个线程都对同一个变量进行访问.&lt;/p&gt;
&lt;p&gt;解决问题:&lt;/p&gt;
&lt;h3&gt;1.使用同步对象.  (自旋锁 自加锁 互斥体 事件  信号灯  临界区.....等等都可以.)&lt;/h3&gt;
&lt;p&gt;这里使用自加锁解决(当然可以用别的)&lt;/p&gt;
&lt;p&gt;InterlockedIncrement  API &lt;/p&gt;
&lt;p&gt; 原型:&lt;/p&gt;
&lt;pre class=&quot;syntax&quot;&gt;
&lt;strong&gt;LONG InterlockedIncrement(
  LPLONG volatile&lt;/strong&gt;&lt;em&gt; &lt;a class=&quot;synParam&quot;&gt;lpAddend&lt;/a&gt;&lt;/em&gt;   // variable to increment
&lt;strong&gt;);&lt;/strong&gt;&lt;br/&gt;只需要把全局变量的地址给它,强转为long * 类型即可.
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234948427-1779861222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用之后结果是正确的&lt;/p&gt;
&lt;h3&gt;二丶何为TLS  (Thread  local storage)&lt;/h3&gt;
&lt;p&gt;所谓TLS,意思就是指,每个线程都有自己的空间,局部存储,什么意思?&lt;/p&gt;
&lt;p&gt;比如上方我们对一个g_dwNumber进行操作,那么我们就要使用同步对象,我们不妨这样去想,每个线程,开辟一个空间&lt;/p&gt;
&lt;p&gt;当对A线程进行操作的时候,操作的是A线程的g_dwNumber,当对B线程进行操作的时候,是对B线程的g_dwNumber进行操作.&lt;/p&gt;
&lt;p&gt;其实很简单,介绍一下TLS的API&lt;/p&gt;
&lt;p&gt;总共4个&lt;/p&gt;

&lt;h2&gt;一丶复习线程相关知识&lt;/h2&gt;
&lt;p&gt;首先讲解TLS的时候,需要复习线程相关知识,  (thread local storage )&lt;/p&gt;
&lt;p&gt;1.了解经典同步问题&lt;/p&gt;
&lt;p&gt;首先我们先写一段C++代码,开辟两个线程去跑,看看会不会出现同步问题.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234252037-1745697860.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;看结果得知,结果并不是正确的,造成同步的问题的原因是两个线程都对同一个变量进行访问.&lt;/p&gt;
&lt;p&gt;解决问题:&lt;/p&gt;
&lt;h3&gt;1.使用同步对象.  (自旋锁 自加锁 互斥体 事件  信号灯  临界区.....等等都可以.)&lt;/h3&gt;
&lt;p&gt;这里使用自加锁解决(当然可以用别的)&lt;/p&gt;
&lt;p&gt;InterlockedIncrement  API &lt;/p&gt;
&lt;p&gt; 原型:&lt;/p&gt;
&lt;pre class=&quot;syntax&quot;&gt;
&lt;strong&gt;LONG InterlockedIncrement(
  LPLONG volatile&lt;/strong&gt;&lt;em&gt; &lt;a class=&quot;synParam&quot;&gt;lpAddend&lt;/a&gt;&lt;/em&gt;   // variable to increment
&lt;strong&gt;);&lt;/strong&gt;&lt;br/&gt;只需要把全局变量的地址给它,强转为long * 类型即可.
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171019234948427-1779861222.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用之后结果是正确的&lt;/p&gt;
&lt;h3&gt;二丶何为TLS  (Thread  local storage)&lt;/h3&gt;
&lt;p&gt;所谓TLS,意思就是指,每个线程都有自己的空间,局部存储,什么意思?&lt;/p&gt;
&lt;p&gt;比如上方我们对一个g_dwNumber进行操作,那么我们就要使用同步对象,我们不妨这样去想,每个线程,开辟一个空间&lt;/p&gt;
&lt;p&gt;当对A线程进行操作的时候,操作的是A线程的g_dwNumber,当对B线程进行操作的时候,是对B线程的g_dwNumber进行操作.&lt;/p&gt;
&lt;p&gt;其实很简单,介绍一下TLS的API&lt;/p&gt;
&lt;p&gt;总共4个&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020000024193-1840158757.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;分别是:&lt;/p&gt;
&lt;p&gt;TlsAlloc  分配线程局部存储空间&lt;/p&gt;
&lt;p&gt;TlsFree  释放线程局部存储空间&lt;/p&gt;
&lt;p&gt;TlsGetValue 获得线程局部存储空间里面的值&lt;/p&gt;
&lt;p&gt;TlsSetValue 设置线程局部存储空间的值&lt;/p&gt;
&lt;h2&gt;三丶TLSAPI的使用&lt;/h2&gt;
&lt;p&gt;1.首先是TlsAlloc的使用&lt;/p&gt;
&lt;pre class=&quot;syntax&quot; readability=&quot;15.5&quot;&gt;
&lt;strong readability=&quot;25&quot;&gt;DWORD TlsAlloc(VOID);  函数原型&lt;p&gt;&lt;span&gt;调用一次TlsAlloc则会分配4个字节的空间,不管你在哪里调用,如果在main里面(主线程)中调用,那么当你创建线程的时候&lt;/span&gt;&lt;br/&gt;&lt;span&gt;线程会默认有4个字节的控件&lt;/span&gt;&lt;br/&gt;&lt;span&gt;返回值是一个索引, 这个索引是查FS寄存器数组的值当然,这个一会讲解.只需要知道,当我们为每一个线程申请了4个字节的空间&lt;/span&gt;&lt;br/&gt;&lt;span&gt;那么索引是一样的,但是索引操作的数据是不一样的&lt;/span&gt;&lt;br/&gt;&lt;span&gt;比如 你申请的索引是1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;那么在A线程中,操作1索引的时候,那么操作的是A线程的,那么如果在B线程操作索引1的时候,那么操作的是B线程的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;举例子:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;比如有个电话号码是  12345678&lt;/span&gt;&lt;br/&gt;&lt;span&gt;中国: 12345678&lt;/span&gt;&lt;br/&gt;&lt;span&gt;外国: 12345678 (把电话号码看做是索引)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我们知道,电话号码是一样的,但是你打这个电话的时候,人是不一样的&lt;/span&gt;&lt;br/&gt;&lt;span&gt;比如我在中国打123456 那么接听人是张三&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我在外国打123456 那么接听人是李四&lt;/span&gt;&lt;br/&gt;&lt;span&gt;其中张三李四就是表达了对同一数据的不同操作.看下代码&lt;/span&gt;&lt;br/&gt;&lt;span&gt;再比如:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我们使用tlsAlloc申请了4个字节的空间&lt;/span&gt;&lt;br/&gt;&lt;span&gt;索引就是nindex (看做是g_dwNumber);&lt;/span&gt;&lt;br/&gt;&lt;span&gt;那么访问不同线程的索引,那么索引里面的值是不同的.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;1.Tls的动态使用方法,设置全局变量&lt;br/&gt;动态使用就是PE中不建立TLS表格了,同样完成同步&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020002510256-170456738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre class=&quot;syntax&quot; readability=&quot;5.5&quot;&gt;
&lt;strong readability=&quot;5&quot;&gt;首先,我们为每个线程开辟了4个字节的空间&lt;br/&gt;然后返回一个索引(这个索引看做是g_dwNumber,其实这个索引是去数组里面去取出成员来,比如现在是第1个,那么去数组里面取出第一项来,当做g_dwNumber)&lt;br/&gt;TlsSetValue(索引,设置的值)&lt;br/&gt;这样写其实就是根据索引找到数组里面的值,设置一下.&lt;br/&gt;TlsGetValue(索引)则是根据下标索引,去数组里面取出g_dwNumber的值.&lt;br/&gt;然后下方重新设置回去了.在1索引的位置,设置了g_dwNumber的值.&lt;p&gt;如果对齐数据结构不理解,可以看下手工写的图&lt;/p&gt;&lt;p&gt;AThread (当前索引为1) &lt;br/&gt;　　数组: [0][1][2][3].....  数组首地址: 00401000&lt;br/&gt;&lt;/p&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre class=&quot;syntax&quot; readability=&quot;7.5&quot;&gt;
&lt;strong readability=&quot;9&quot;&gt;BThread (当前索引为1) &lt;br/&gt;　　数组: [0][1][2][3].....　数组首地址: 00402000&lt;br/&gt;其实每个线程可以理解为索引虽然一样,但是在数组里面取出来的值是不一样的.&lt;br/&gt;比如A线程的索引为1,里面的成员是A线程的g_dwNumber 比如现在它的值是5&lt;br/&gt;现在切换到了B线程了,那么还是根据索引去找值,但是数组不同了,所以再次找1找的则是B数组的g_dwNumber了.&lt;br/&gt;其实API的作用就相当于你手工的去给数组第几个元素赋值,取值.等等.&lt;br/&gt;只不过这个是操作系统封装的数组,所以给你提供API&lt;br/&gt;按照我们的写法,可能会下面那样做,伪代码,便于理解&lt;br/&gt;AThread[1] = 0;&lt;br/&gt;DWORD g_dwNumber = AThread[1];&lt;br/&gt;printf(g_dwNumber);&lt;br/&gt;AThread[1] = g_dwNumber++;&lt;br/&gt;替换成API则是&lt;br/&gt;TlsSetValue(索引,值)&lt;br/&gt;TlsGetValue(索引);&lt;p&gt;现在看下那张图,那么已经实现了同步.线程也切换了,操作的就是自己的数据.&lt;br/&gt;2.动态使用Tls之结构体的设置&lt;br/&gt;上面我们说的是数组里面设置的是全局变量,现在我们要设置一下结构体了.&lt;br/&gt;结构体其实是一样的,我们让数组里面存指针就行.&lt;br/&gt;比如看下方代码:&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020004742037-625149692.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;&lt;/strong&gt;
&lt;/pre&gt;
&lt;p&gt;很简单&lt;/p&gt;
&lt;p&gt;1.我们定义一个p指针,指向了一块new的内存&lt;/p&gt;
&lt;p&gt;2.初始化的时候,设置数组索引的当前索引的值为p的指针&lt;/p&gt;
&lt;p&gt;3.从索引中获得p指针&lt;/p&gt;
&lt;p&gt;4.修改p指向的m_dwCount的值&lt;/p&gt;
&lt;p&gt;注意,这里因为p是一个指针,我们修改的只是它空间成员变量的值,所以不用重新再设置回去了.&lt;/p&gt;
&lt;p&gt;到了现在感觉TLS是不是有点难用了.其实使用TLS 比使用任何同步对象都快,就相当于没同步的时候的速度.&lt;/p&gt;
&lt;p&gt;但是TLS的真正的语法不是这样用的.(上面是动态使用不会生成TLS表)&lt;/p&gt;

&lt;h3&gt;3.Tls的静态使用(真正用法)&lt;/h3&gt;
&lt;p&gt;其实TLS真正的用法是静态使用,操作系统已经帮你集成了语法了&lt;/p&gt;
&lt;p&gt;看下用法,以及语法;&lt;/p&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;p&gt;__declspec(thread) 类型  变量名&lt;/p&gt;
&lt;p&gt;然后tls就会自动生成表了,操作系统帮你升成上面动态使用的代码.(所以为啥要理解动态使用)&lt;/p&gt;
&lt;p&gt;用的时候还是正常使用.&lt;/p&gt;
&lt;p&gt;我们的代码都不用变的.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020010322881-1665574501.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;但其实汇编代码还是会编译为上面的动态使用.&lt;/p&gt;
&lt;p&gt;如果变为结构体,那么是一样的,只需要把类型变成结构体的类型即可.&lt;/p&gt;
&lt;h2&gt;四丶PE中TLS表的设计&lt;/h2&gt;
&lt;p&gt;了解了上方的原理了,那么如果让你设计表格你要怎么设计?&lt;/p&gt;
&lt;p&gt;1.我们全局变量初始化为0了,那么我们肯定有地方存储了这个全局变量的数据 ,所以我会设计一段分为存储这个值.&lt;/p&gt;
&lt;p&gt;2.我们常用的nindex索引,那么我觉着也要存储一下&lt;/p&gt;
&lt;p&gt;废话不说了,看下真是的结构体&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
ypedef &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; _IMAGE_TLS_DIRECTORY32 {
    DWORD   StartAddressOfRawData;　　　　TLS初始化数据的起始地址
    DWORD   EndAddressOfRawData;　　　　　 TLS初始化数据的结束地址  两个正好定位一个范围,范围放初始化的值
    DWORD   AddressOfIndex;              TLS 索引的位置&lt;/span&gt;
    DWORD   AddressOfCallBacks;          Tls回调函数的数组指针
&lt;span&gt;    DWORD   SizeOfZeroFill;　　　　　　　　 填充0的个数
    union {
        DWORD Characteristics;　　　　　　保留
        &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt;&lt;span&gt; {
            DWORD Reserved0 : &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;;
            DWORD Alignment : &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;;
            DWORD Reserved1 : &lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;;
        } DUMMYSTRUCTNAME;
    } DUMMYUNIONNAME;

} IMAGE_TLS_DIRECTORY32;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先介绍前两个成员,&lt;/p&gt;
&lt;p&gt;起始地址  结束地址 定位了一个范围,那么这个范围内存放的就是初始化的值(注意只有静态使用才有TLS表)也就是上方我们定义的g_dwNumber = 0;存放了0,但是因为0不好看,这里我重新赋值为12345678 代码不贴了.&lt;/p&gt;
&lt;p&gt;我们查看下PE定位一下Tls的位置.&lt;/p&gt;
&lt;p&gt;注意,因为我是VS2015编写的程序,随机基址懒得去了,直接在PE中修改了,把文件头的文件属性修改了即可.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020011703787-1393984075.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以前是02,现在改成03即可.&lt;/p&gt;
&lt;p&gt;首先查看下数据目录的第9项&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020011840443-1468764915.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;得出RVA = 000176FC&lt;/p&gt;
&lt;p&gt;查看下模块首地址. 首地址是 00400000&lt;/p&gt;
&lt;p&gt;看下属于哪个节&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020012801943-1194198397.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;命中在.rdata节,RVA = 00016000&lt;/p&gt;
&lt;p&gt;上面的RVA减去现在的RVA = 偏移&lt;/p&gt;
&lt;p&gt;000176FC - 00016000 = 16FC&lt;/p&gt;
&lt;p&gt;节中的文件偏移 + 偏移 = 文件中的位置.&lt;/p&gt;
&lt;p&gt;文件偏移是下方的第二个成员&lt;/p&gt;
&lt;p&gt;5400 + 16FC = 6AFC &lt;/p&gt;
&lt;p&gt;查看6AFC定位Tls表的位置.&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020012854006-139405863.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;前面两个成员分别指向的是&lt;/p&gt;
&lt;p&gt;0041B000  0041B208的位置  结束地址 - 起始地址 = 范围.&lt;/p&gt;
&lt;p&gt;寻找起始地址的FA&lt;/p&gt;
&lt;p&gt;时间关系,这里命中的节是 Rva = 001B000&lt;/p&gt;
&lt;p&gt;那么转为文件偏移&lt;/p&gt;
&lt;p&gt;FA = 8400h直接计算出来了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020025335146-791686524.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;起始地址是8400h 那么+208就是8608 ,那么8400h 到8608的位置就存放的初始值,现在已经看到上图画出来的12345678了(小尾方式读取)&lt;/p&gt;
&lt;p&gt;第3个成员: 索引的值,这个你可以自己转化查看.&lt;/p&gt;
&lt;h2&gt;五丶TLS结构体第四个成员,回调函数的数组指针&lt;/h2&gt;
&lt;p&gt;这个怎么理解,是这样的,还记到动态使用的时候,我们不是在主线程中 TlsAlloc 和TlsFree吗&lt;/p&gt;
&lt;p&gt;现在我们可以注册回调函数,操作系统会调用这个回调函数.&lt;/p&gt;
&lt;p&gt;怎么注册?&lt;/p&gt;
&lt;p&gt;关键字: 加段,必须添加到特定的段中&lt;/p&gt;
&lt;p&gt;首先先看下回调的函数原型.&lt;/p&gt;
&lt;pre&gt;
typedef VOID
(NTAPI *PIMAGE_TLS_CALLBACK) (PVOID DllHandle, DWORD Reason,PVOID Reserved );
&lt;/pre&gt;
&lt;pre&gt;
PIMAGE_TLS_CALLBACK 其中这个回调是从结构体中第四个成员里面,注释得到的
&lt;/pre&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;p&gt;首先我们自己写一个
&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020030633568-1863756202.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;请看注释,其实这里才是真正的申请和释放,注意,这个回调函数操作系统会从问价那种读取地址,然后执行一遍,没有申请内存,所以这里面可以藏代码的.&lt;/p&gt;
&lt;p&gt;注意,虽然回调我们写了,但是要让操作系统调用,那么我们需要添加一个特定的节.&lt;/p&gt;
&lt;p&gt;语法:&lt;/p&gt;
&lt;p&gt;#pragma data_seg(&quot;.CRT$XLB&quot;)  其中关于.CRT$XLB 为什么是这个节,我发下连接看雪论坛的,自己看下吧,很简单了.&lt;a href=&quot;https://bbs.pediy.com/thread-108015.htm&quot; target=&quot;_blank&quot;&gt;https://bbs.pediy.com/thread-108015.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;/*中间写代码,定义函数回调数组*/&lt;/p&gt;
&lt;pre&gt;
PIMAGE_TLS_CALLBACK ary[] = {MyTlsCallBack,0}; //0结尾,那么操作系统就会在文件中找到这个位置,调用一下这个回调.如果多个,里面可以写多个,0结尾即可.
&lt;/pre&gt;
&lt;p&gt;#pragma data_seg();&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1197364/201710/1197364-20171020031220162-1636119357.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;发现1已经成功弹出来了,那么现在结构体的第四个成员,就是指向这个数组首地址的.PE加载的时候,会默认调用,然后依次执行一遍..&lt;/p&gt;
&lt;p&gt;请注意,只会在文件中存储,如果你跑到内存中查看,这个地址是没有的.&lt;/p&gt;

&lt;p&gt;太晚了,快4点了,剩下的字节明天说.&lt;/p&gt;

&lt;p&gt;作者：IBinary&lt;br/&gt;出处：&lt;a href=&quot;http://www.cnblogs.com/iBinary/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/iBinary/&lt;/a&gt;&lt;br/&gt;版权所有，欢迎保留原文链接进行转载：)&lt;/p&gt;
</description>
<pubDate>Thu, 19 Oct 2017 19:20:00 +0000</pubDate>
<dc:creator>iBinary</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/iBinary/p/7697355.html</dc:identifier>
</item>
<item>
<title>彻底区分html的attribute与dom的property - 往逝之因</title>
<link>http://www.cnblogs.com/benymor/p/7696868.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/benymor/p/7696868.html</guid>
<description>&lt;p&gt;当初在学html时始终没有弄清楚的关于attribute与property的区别，竟然在看angular文档时弄明白了。&lt;br/&gt;angular官方文档的&lt;a href=&quot;https://angular.cn/guide/template-syntax&quot;&gt;数据绑定&lt;/a&gt;一节提到html attribute与dom property的区别。&lt;/p&gt;
&lt;p&gt;要想理解 Angular 绑定如何工作，重点是搞清 HTML attribute和 DOM property之间的区别。&lt;/p&gt;
&lt;p&gt;attribute 是由 HTML 定义的。property是由 DOM (Document Object Model) 定义的。&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;少量 HTML attribute 和 property 之间有着 1:1 的映射，如id。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;有些 HTML attribute 没有对应的 property，如colspan。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;有些 DOM property 没有对应的 attribute，如textContent。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;大量 HTML attribute看起来映射到了property…… 但却不像我们想的那样！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;最后一类尤其让人困惑…… 除非我们能理解这个普遍原则：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;attribute 初始化 DOM property&lt;/strong&gt;，然后它们的任务就完成了。property的值可以改变；attribute的值不能改变。&lt;/p&gt;
&lt;p&gt;例如，当浏览器渲染&lt;code&gt;&amp;lt;input type=&quot;text&quot; value=&quot;Bob&quot;&amp;gt;&lt;/code&gt;时，它将创建相应 DOM 节点， 其value的property被初始化为 “Bob”。&lt;/p&gt;
&lt;p&gt;当用户在输入框中输入 “Sally” 时，DOM 元素的value 的property变成了 “Sally”。 但是这个 HTML value的attribute保持不变。如果我们读取 &lt;code&gt;input&lt;/code&gt; 元素的 attribute，就会发现确实没变： &lt;code&gt;input.getAttribute('value') // 返回 &quot;Bob&quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML attribute 中value指定了初始值；DOM value property 是当前值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disabled&lt;/code&gt;这个attribute是另一个古怪的例子。按钮的&lt;code&gt;disabled&lt;/code&gt;的property 是&lt;code&gt;false&lt;/code&gt;，因为默认情况下按钮是可用的。 当我们添加&lt;code&gt;disabled&lt;/code&gt;这个attribute时，只要它出现了按钮的&lt;code&gt;disabled&lt;/code&gt; property就初始化为&lt;code&gt;true&lt;/code&gt;，于是按钮就被禁用了。&lt;/p&gt;
&lt;p&gt;添加或删除&lt;code&gt;disabled&lt;/code&gt; attribute会禁用或启用这个按钮。但attribute 的值无关紧要，这就是我们为什么没法通过 &lt;code&gt;&amp;lt;button disabled=&quot;false&quot;&amp;gt;仍被禁用&amp;lt;/button&amp;gt;&lt;/code&gt;这种写法来启用按钮。&lt;/p&gt;
&lt;p&gt;设置按钮的&lt;code&gt;disabled&lt;/code&gt;property（如，通过 Angular 绑定）可以禁用或启用这个按钮。 这就是property 的价值。&lt;/p&gt;
&lt;p&gt;就算名字相同，HTML attribute 和 DOM property 也不是同一样东西。&lt;/p&gt;
</description>
<pubDate>Thu, 19 Oct 2017 17:33:00 +0000</pubDate>
<dc:creator>往逝之因</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/benymor/p/7696868.html</dc:identifier>
</item>
<item>
<title>（@WhiteTaken）设计模式学习——代理模式 - WhiteTaken</title>
<link>http://www.cnblogs.com/WhiteTaken/p/7696475.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/WhiteTaken/p/7696475.html</guid>
<description>&lt;p&gt;&lt;span&gt;今天学习了一下代理模式，代理模式分为很多种。目前感觉有两种是需要学习一下的。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;静态代理模式&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;动态代理模式&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;1. 静态代理模式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　需要被代理的类，实现一个或者多个接口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　代理类需要实现被代理类的接口，在此时就可以对这个接口中的方法进行一些操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　还是直接上代码吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;IPerson接口类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; &lt;span&gt;IPerson {&lt;/span&gt; &lt;span&gt;2&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;buyHouse();&lt;/span&gt; &lt;span&gt;3&lt;/span&gt; }&lt;/span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Man类，实现buyHouse方法。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Man implements IPerson {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; buyHouse() {
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;         System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;准备买房了，然而钱并不够&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PersonProxy类，实现IPerson接口，同时在不修改man对象中的方法的情况下，对man的buyHouse方法进行了修饰。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;import java.nio.channels.NonWritableChannelException;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PersonProxy implements IPerson {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Man man;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMan(Man man) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.man =&lt;span&gt; man;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; buyHouse() {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;null&lt;/span&gt; ==&lt;span&gt; man){
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             man = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Man();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        man.buyHouse();
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        watch();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;        speak();
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; speak(){
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;代理砍价=======一顿吆喝&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; watch(){
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----带着看房--------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MainClass {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;         PersonProxy personProxy = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PersonProxy();
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;        personProxy.buyHouse();
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2. &lt;span&gt;动态代理模式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;动态代理模式，不同于静态代理模式的地方，是不用去实现被代理类的接口，降低了修改接口后的维护代价，Java中JDK有相关的接口实现。&lt;/p&gt;
&lt;p&gt;具体代码如下。&lt;/p&gt;
&lt;p&gt;IPerson接口类和Man类保留。&lt;/p&gt;
&lt;p&gt;MyHander类，对代理这件事进行了操作。核心就是method.invoke方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package com.whitetaken.test;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import java.lang.reflect.InvocationHandler;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import java.lang.reflect.Method;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyHandler implements InvocationHandler {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Man man;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMan(Man man) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.man =&lt;span&gt; man;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;         Object result = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;null&lt;/span&gt; ==&lt;span&gt; man){
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             man = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Man();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         result =&lt;span&gt; method.invoke(man, args);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        speak();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        watch();
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; speak(){
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;代理砍价=======一顿吆喝&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;     
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; watch(){
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-----带着看房--------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试类。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package com.whitetaken.test;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import java.lang.reflect.Proxy;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MainClass {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         Man man = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Man();
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         MyHandler myHandler = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MyHandler();
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        myHandler.setMan(man);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         IPerson person =&lt;span&gt; (IPerson)Proxy.newProxyInstance(man.getClass().getClassLoader(), man.getClass().getInterfaces(), myHandler);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;        person.buyHouse();
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;以上两种模式的测试结果一致。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1088633/201710/1088633-20171020000254990-1537894843.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;每天一点小进步，聚沙成塔-_-!!!&lt;/p&gt;
</description>
<pubDate>Thu, 19 Oct 2017 16:04:00 +0000</pubDate>
<dc:creator>WhiteTaken</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/WhiteTaken/p/7696475.html</dc:identifier>
</item>
<item>
<title>PHP中使用 $_GET 与$_POST 实现简单的前后台数据传输交互功能 - 卡尔西法calcifer</title>
<link>http://www.cnblogs.com/wq1994/p/7696253.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wq1994/p/7696253.html</guid>
<description>&lt;p&gt;在之前的学习过程中我们接触过前后台数据请求交互的方法有表单提交、AJAX请求以及Angularjs中的$http，今天我们尝试在PHP中使用 $_GET 与$_POST 实现简单的前后台数据传输交互功能；&lt;/p&gt;
&lt;p&gt;PHP中给我们提供了一群功能十分强大的超全局 数组，它们 可以在任何位置，任何作用域之内使用，而且无需声明，拿到即可使用!&lt;/p&gt;
&lt;p&gt;又称 ： 超全局数组、超全局变量、预定义数组、预定义变量
&lt;hr/&gt;
这篇文章里我们单独讲一下&lt;span&gt;PHP 中的&lt;span&gt;&lt;span&gt;$_GET 变量&lt;/span&gt;和&lt;span&gt;$_POST变量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;① 在 PHP 中，预定义的 $_GET 变量用于收集来自 method=&quot;get&quot; 的表单中的值。即用来获取前台通过get请求发送的数据。&lt;/p&gt;
&lt;p&gt;② 预定义的 $_POST 变量用于收集来自 method=&quot;post&quot; 的表单中的值。即用来获取前台通过post发送的数据。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;顺便我们回顾下表单的一些基础知识：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、 form表单的两个重要属性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;action：表示表单提交的服务器地址&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;method：表单提交数据的方式，可选值有get、post两种。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、get、post的区别&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;get通过URL传递数据，所有内容在URL（地址栏）可以看到不安全，而post无法看见，比较安全。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;get传递的数据量是有限的且只能传递文本信息，而post可以传递大量数据并且可以传递图片、视频等其他文件类型。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;get传输速度比post快（这是get的唯一一个优点）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、get使用URL传递数据的格式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http：//URL地址.html？name1=value1&amp;amp;name2=value2从： “？”表示参数传递的开始，多个参数之间用&amp;amp;符号间隔，同一个参数&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用name来标识value。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;http://127.0.0.1:8020/025454.html?username=123&amp;amp;password=123&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以使用表单时，input输入框的name属性一定不能省略， 如果省略input的name属性，则这个input的数据不会往后台传递；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;接下来我们使用PHP 中的&lt;span&gt;$_GET 变量和$_POST变量&lt;span&gt;实现简单的前后台数据传输交互功能：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;hr/&gt;&lt;/p&gt;
&lt;p&gt; form.html 文件代码如下&lt;/p&gt;
&lt;div readability=&quot;30.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;PHP $_GET 变量和$_POST变量使用示例&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;03-ChaoQuanJuArray.php&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            用户名：&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;        
            密码：&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;pwd&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;btn1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;点击发送post请求&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;03-ChaoQuanJuArray.php&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;get&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            用户名：&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;        
            密码：&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;pwd&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;btn2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;点击发送get请求&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;      
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来我们新建一个PHP文件用来请求访问和判断，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;if(isset($_GET[&quot;username&quot;])&amp;amp;&amp;amp; isset($_GET[&quot;pwd&quot;])){
    
     if($_GET[&quot;username&quot;]=='wq'&amp;amp;&amp;amp; $_GET[&quot;pwd&quot;]==&quot;123&quot;){
            echo &quot;登陆成功！&quot;;
        }else{
            echo &quot;登陆失败！&quot;;
        }
}

if(isset($_POST[&quot;username&quot;])&amp;amp;&amp;amp; isset($_POST[&quot;pwd&quot;])){
    
     if($_POST[&quot;username&quot;]=='wq'&amp;amp;&amp;amp; $_POST[&quot;pwd&quot;]==&quot;123&quot;){
            echo &quot;登陆成功！&quot;;
        }else{
            echo &quot;登陆失败！&quot;;
        }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;则相应的函数触发的JS代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;span&gt;
            $(&lt;/span&gt;&quot;#btn1&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; username = $(&quot;input[name='username']&quot;&lt;span&gt;).val();
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; pwd = $(&quot;input[name='pwd']&quot;&lt;span&gt;).val();
                $.post(&lt;/span&gt;&quot;03-chaoQuanJuArray.php&quot;&lt;span&gt;,{
                    &lt;/span&gt;&quot;username&quot;&lt;span&gt;:username,
                    &lt;/span&gt;&quot;pwd&quot;&lt;span&gt;:pwd,
                },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
                    alert(data);
                })
            });
            $(&lt;/span&gt;&quot;#btn2&quot;).click(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; username = $(&quot;input[name='username']&quot;&lt;span&gt;).val();
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; pwd = $(&quot;input[name='pwd']&quot;&lt;span&gt;).val();
                $.get(&lt;/span&gt;&quot;03-chaoQuanJuArray.php&quot;&lt;span&gt;,{
                    &lt;/span&gt;&quot;username&quot;&lt;span&gt;:username,
                    &lt;/span&gt;&quot;pwd&quot;&lt;span&gt;:pwd,
                },&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){
                    alert(data);
                })
            });
        &lt;/span&gt;&amp;lt;/script&amp;gt;
        
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;！注意：&lt;/span&gt;&lt;span&gt;在运行时确保已经搭建好了运行环境，保证服务器在线且处于运行状态&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在运行HTML文件时，记得将服务器地址端口号改为localhost以访问本机文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1209629/201710/1209629-20171019225948537-1964294156.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;则当我们输入密码，点击第一个按钮：点击发送POST请求时，表单演示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1209629/201710/1209629-20171019232209146-573410399.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;则当我们输入密码，点击第二个按钮：点击发送GET请求时，表单演示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1209629/201710/1209629-20171019232047084-1890784794.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;14&quot;&gt;
&lt;p&gt;在 HTML 表单中使用 method=&quot;get&quot; 时，所有的变量名和值都会显示在 URL 中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注释：&lt;/strong&gt;所以在发送密码或其他敏感信息时，不应该使用这个方法！&lt;/p&gt;
&lt;p&gt;然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。&lt;/p&gt;
&lt;strong&gt;注释：&lt;/strong&gt;HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。&lt;/div&gt;

</description>
<pubDate>Thu, 19 Oct 2017 15:27:00 +0000</pubDate>
<dc:creator>卡尔西法calcifer</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wq1994/p/7696253.html</dc:identifier>
</item>
<item>
<title>jquery访问浏览器本地存储cookie，localStorage和sessionStorage - 天宇之游</title>
<link>http://www.cnblogs.com/cwp-bg/p/7695976.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cwp-bg/p/7695976.html</guid>
<description>&lt;p&gt;前言：cookie，localStorage和sessionStorage都是浏览器本地存储数据的地方，其用法不尽相同；总结一下基本的用法。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;一cookie&quot;&gt;一、cookie&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;定义：&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;存储在本地，容量最大4k，在同源的http请求时携带传递，损耗带宽；&lt;/li&gt;
&lt;li&gt;可设置访问路径，只有此路径及此路径的子路径才能访问此cookie，存在有效的时间。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注意点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;cookie的访问需要服务器环境，直接在本地文件访问无效；&lt;/li&gt;
&lt;li&gt;cookie的访问和设置需要导入jquery.cookie.js文件；&lt;/li&gt;
&lt;li&gt;浏览器对每一个访问的地址下可添加的cookie是有限制的；同时每个浏览器可添加的cookie个数也存在限制。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作用：&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;储存用户的痕迹信息，如用户名，ID号，密码等，是服务器脚本发送给浏览器的加密数据，便于下次访问时用户可以直接登录等；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运用代码&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;//访问cookie，mycolor代表键
var $cook = $.cookie(&quot;mycolor&quot;);


//设置cookie
$.cookie(&quot;mycolor&quot;, &quot;red&quot;});
$.cookie(&quot;mycolor&quot;, &quot;red&quot;, { expires: 7, path: '/' });//增加了有效时间和访问路径

//删除cookie,传递null值
$.cookie(&quot;mycolor&quot;, null});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;'mycolor'参数相当于cookie存储数据的键，即数据的名字，通过名字访问；&lt;/li&gt;
&lt;li&gt;cookie的设置有三个参数，第一为设置数据的键，第二个为设置数据的值，expires表示有效时间，单位为天，path为访问路径，&quot;/&quot;表示当前文件路径，在网站中表示根目录。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;注意：如果不设置路径，默认情况下只有设置cookie的网页才可以访问此cookie；如果想网站的网页可以共享cookie，将路径设为根目录。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：cookie就相当于一个能存储数据的微型本地数据库，&quot;mycolor&quot;相当于每条数据的key。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;二localstorage&quot;&gt;二、localStorage&lt;/h2&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;定义：一个本地的小型数据文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;存储在本地，容量为5M或者更大，不会在请求时候携带传递；&lt;/li&gt;
&lt;li&gt;数据在所有同源窗口中共享，一直有效，除非人为删除，可作为长期数据。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注意点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;localStorage数据不需要依赖服务器环境访问，可以直接在本地文件访问；&lt;/li&gt;
&lt;li&gt;不需要额外的文件支持。&lt;/li&gt;
&lt;li&gt;同源窗口指的是同一个域名下或者是index.html所在的文件夹下的文件路径。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;代码运用&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;//设置：
localStorage.setItem(&quot;mycolor&quot;, &quot;456&quot;);
localStorage.mycolor= '456';

//获取：
var $color = localStorage.getItem(&quot;mycolor&quot;);
var $color = localStorage.mycolor

var $color = localStorage.key(0);//获取第一个键，按角标获取
var $color = localStorage.key(&quot;&quot;);//获取最后一个键

var $length = localStorage.length;//获取数据的长度

//删除
localStorage.removeItem(&quot;mycolor&quot;);

//清空
localStorage.clear();//将所有保存的数据删除&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;设置数据格式类似键值对，&quot;mycolor&quot;代表key,&quot;456&quot;代表值。&lt;/li&gt;
&lt;li&gt;数据是有排序的，后加入的角标靠前，最后加入的角标为0.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;注意：localStorage相当于将数据保存在磁盘，是永久的，但是其针对的是固定的域名下的文件，打开其他的域名下的网页，localStorage不会显示。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;三sessionstorage&quot;&gt;三、sessionStorage&lt;/h2&gt;
&lt;ol readability=&quot;-2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;定义：一个本地的小型数据库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;存储在本地，容量为5M或者更大;&lt;/li&gt;
&lt;li&gt;不会在请求时候携带传递，在同源的当前窗口关闭前有效。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注意点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;sessionStorage同样不需要再服务器的环境下运行；&lt;/li&gt;
&lt;li&gt;不需要额外的文件支持；&lt;/li&gt;
&lt;li&gt;sessionStorage数据设置后即使页面进行重载也不会清除；但当该窗口关闭后，里面的数据就会清除，再打开没有数据。&lt;strong&gt;相当于将数据保存在内存中&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;代码运用&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;//设置：
sessionStorage.setItem(&quot;mycolor&quot;, &quot;456&quot;);
sessionStorage.mycolor= '456';

//获取：
var $color = sessionStorage.getItem(&quot;mycolor&quot;);
var $color = sessionStorage.mycolor

var $color = sessionStorage.key(0);//获取第一个键，按角标获取
var $color = sessionStorage.key(&quot;&quot;);//获取最后一个键

var $length = sessionStorage.length;//获取数据的长度

//删除
sessionStorage.removeItem(&quot;mycolor&quot;);

//清空
sessionStorage.clear();//将所有保存的数据删除&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;sessionStorage的使用方法和localStorage一样。&lt;/li&gt;
&lt;li&gt;数据是有排序的，后加入的角标靠前，最后加入的角标为0.&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Thu, 19 Oct 2017 15:10:00 +0000</pubDate>
<dc:creator>天宇之游</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cwp-bg/p/7695976.html</dc:identifier>
</item>
<item>
<title>bind、apply与call - liuyongjia</title>
<link>http://www.cnblogs.com/liuyongjia/p/7696101.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liuyongjia/p/7696101.html</guid>
<description>&lt;p&gt;先说观点：&lt;strong&gt;不论是bind、apply还是call，最大的好处就是代码复用。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;bind&quot;&gt;bind&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;在开发中，我们只有复用代码时，才会出现this指向需要改动的情况。&lt;/strong&gt;&lt;br/&gt;纵观bind的常用方法，不论是偏函数还是快捷调用等等，即使是setTimeout，也都是希望能把别的地方的方法拿过来用，才会出现this指向不对的情况。&lt;br/&gt;一言以蔽之：&lt;strong&gt;因为是面向对象，才会出现绑定this的需要。&lt;/strong&gt;&lt;br/&gt;这话并不是空穴来风，面向对象的好处就在于抽象程度高，封装好的一个类，可以在不改变源码的情况下，经过一些操作，拿来即用。这是一个无比方便的地方，相信改过别人代码的同学对此深有体会。&lt;br/&gt;面向对象经过高度的抽象，使得代码复用更加方便，也导致了更多的模块管理相关的问题，这又是一个大课题，就不细讲了。&lt;br/&gt;不论是出于性能还是开发成本的考虑，我们在开发中，经常要用其他对象上的方法。举个例子，把类数组对象转为数组对象：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; transfer &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;va&quot;&gt;Function&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;prototype&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;apply&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;Array&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;prototype&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;slice&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;at&quot;&gt;transfer&lt;/span&gt;(obj)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;bind的其他用法可以参考&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Example:_Creating_shortcuts&quot;&gt;MDN&lt;/a&gt;，我在这里不多写了。&lt;/p&gt;
&lt;h2 id=&quot;call与apply&quot;&gt;call与apply&lt;/h2&gt;
&lt;p&gt;call和apply大同小异，唯一不同在于传参，call接受变长参数，apply接受数组或者类数组对象。&lt;br/&gt;具体使用方法，参考MDN，&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply&lt;/a&gt;&lt;br/&gt;同样的，call和apply也是因为想要复用代码，出现了this指向不对的情况，怎么办，给它传this吧，传哪指哪。&lt;br/&gt;举个例子：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; say &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'Mike'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'hi '&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt;)
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sayHi&lt;/span&gt;(name)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;say&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;hi&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;call&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;sayHi&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'Bob'&lt;/span&gt;))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;bind与call和apply的区别&quot;&gt;bind与call和apply的区别&lt;/h2&gt;
&lt;p&gt;bind和call的区别就在于，bind会返回一个新的函数，call和apply都是直接调用原函数，并不会返回一个新函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在需要新函数的地方用bind，只是想做一锤子买卖，就用call和apply。&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;在不清楚多少参数的地方，建议new一个数组，push参数进去，或者大部分情况下，可以传arguments对象，就用apply，否则，就用call。&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 19 Oct 2017 15:04:00 +0000</pubDate>
<dc:creator>liuyongjia</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liuyongjia/p/7696101.html</dc:identifier>
</item>
<item>
<title>canvas图表详解系列（4）：动态散点图 - 苏天天</title>
<link>http://www.cnblogs.com/chengduxiaoc/p/7696056.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chengduxiaoc/p/7696056.html</guid>
<description>
&lt;p&gt;本章建议学习时间4小时&lt;/p&gt;
&lt;p&gt;学习方式：详细阅读，并手动实现相关代码（如果没有canvas基础，需要先学习前面的canvas基础笔记）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习目标&lt;/strong&gt;：此教程将教会大家如何使用canvas绘制各种图表，详细分解步骤，本次讲解散点图。&lt;/p&gt;

&lt;p&gt;演示地址： &lt;a href=&quot;https://sutianbinde.github.io/charts/%E6%95%A3%E7%82%B9%E5%9B%BE-%E9%AB%98%E6%B8%85.html&quot; target=&quot;_blank&quot;&gt;https://sutianbinde.github.io/charts/%E6%95%A3%E7%82%B9%E5%9B%BE-%E9%AB%98%E6%B8%85.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;源文件下载地址：&lt;a href=&quot;https://github.com/sutianbinde/charts&quot; target=&quot;_blank&quot;&gt;https://github.com/sutianbinde/charts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;散点图&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;散点图是比较好看的图表了，我们的案例展示效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/799986/201710/799986-20171019222515662-338908283.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;功能：图表可以根据数据自动变换比例，绘制点的时候有由小到大的动画，绘制平均值线条，鼠标移入到对应模块会实现颜色变化，并且显示当前项的详细信息。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实现步骤&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;--新建Html文件，写入总方法和数据，这次我们的代码和上几个图有所不同，我们只给定容器，而canvas通过js生成&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;533&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;chart&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;400&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;700&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin:50px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; goChart(cBox,dataArr,textArr){
            

        }

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; dataArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; [[&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;193.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;187.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;181.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;62.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;178.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;60.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;183.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;189.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;170.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;59.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;59.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;169.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;55.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;163.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;57.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;101.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;171.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;56.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;197.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;169.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;184.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;53.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;178.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;55.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;157.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;58.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;58.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;116.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;163.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;198.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;166.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;166.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;108.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;95.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;193.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;95.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;96.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.4&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;92.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;160.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;101.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;183.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;183.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;62.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;98.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;]
            ];
            
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
         * 参数1 ：需要显示canvas的dom  (非canvas标签，需要指定height和width)
         * 参数2：二维数据  [0]横轴   [1]纵轴
         * 参数3：横轴名称 纵轴名称
         * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        goChart(document.getElementById(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;chart&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),dataArr,[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;身 高&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;体 重&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;])


    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;--在 goChart方法中定义需要使用的变量 并获取 canvas上下文 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 声明所需变量&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; canvas,ctx;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表属性&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; cWidth, cHeight, cMargin, cSpace;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; originX, originY;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 柱状图属性&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; bMargin, tobalBars, bWidth, maxXValue, maxYValue, minXValue, minYValue;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; totalNomber;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; yAverage, minTrueYValue, maxTrueYValue;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 运动相关变量&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; ctr, numctr, speed;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标移动&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; mousePosition =&lt;span&gt; {};
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建canvas并获得canvas上下文&lt;/span&gt;
               canvas = document.createElement(&quot;canvas&quot;&lt;span&gt;);
               &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(canvas &amp;amp;&amp;amp;&lt;span&gt; canvas.getContext){
                ctx &lt;/span&gt;= canvas.getContext(&quot;2d&quot;&lt;span&gt;);
            }
               
               canvas.innerHTML &lt;/span&gt;= &quot;你的浏览器不支持HTML5 canvas&quot;&lt;span&gt;;
               cBox.appendChild(canvas);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;--初始化图表（接着上一步的代码写在 goChart方法中 ）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
            initChart(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; initChart(){
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表信息&lt;/span&gt;
                cMargin = 60&lt;span&gt;;
                cSpace &lt;/span&gt;= 80&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将canvas扩大2倍，然后缩小，以适应高清屏幕&lt;/span&gt;
                canvas.width = cBox.getAttribute(&quot;width&quot;)* 2&lt;span&gt; ;
                canvas.height &lt;/span&gt;= cBox.getAttribute(&quot;height&quot;)* 2&lt;span&gt;;
                canvas.style.height &lt;/span&gt;= canvas.height/2 + &quot;px&quot;;
                canvas.style.width = canvas.width/2 + &quot;px&quot;;
                cHeight = canvas.height - cMargin*2 -&lt;span&gt; cSpace;
                cWidth &lt;/span&gt;= canvas.width - cMargin*2 -&lt;span&gt; cSpace;
                originX &lt;/span&gt;= cMargin +&lt;span&gt; cSpace;
                originY &lt;/span&gt;= cMargin +&lt;span&gt; cHeight;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 柱状图信息&lt;/span&gt;
                bMargin = canvas.width/40;
                tobalBars =&lt;span&gt; dataArr.length;
                bWidth &lt;/span&gt;= parseInt( cWidth/tobalBars - bMargin );
                maxXValue = 0&lt;span&gt;;
                maxYValue &lt;/span&gt;= 0&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; xArr =&lt;span&gt; [];
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; yArr =&lt;span&gt; [];
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0; i&amp;lt;dataArr.length; i++&lt;span&gt;){
                    xArr.push( dataArr[i][&lt;/span&gt;0&lt;span&gt;] );
                    yArr.push( dataArr[i][&lt;/span&gt;1&lt;span&gt;] );
                }
                yAverage &lt;/span&gt;= ( eval(yArr.join(&quot;+&quot;))/yArr.length ).toFixed(2);
                &lt;span&gt;var&lt;/span&gt; addNb = parseInt(yAverage/10); //用于在轴前后加空白
&lt;span&gt;                
                minXValue &lt;/span&gt;= Math.min.apply(&lt;span&gt;null&lt;/span&gt;,xArr); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;求最小值&lt;/span&gt;
                minXValue = parseInt(Math.max(minXValue-addNb, 0)); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果减去addNb后小于零，就取零&lt;/span&gt;
                maxXValue = parseInt(Math.max.apply(&lt;span&gt;null&lt;/span&gt;,xArr)+addNb); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于轴的显示，所以取整&lt;/span&gt;
&lt;span&gt;                
                minYValue &lt;/span&gt;= minTrueYValue = Math.min.apply(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,yArr);
                minYValue &lt;/span&gt;= parseInt(Math.max(minYValue-addNb, 0&lt;span&gt;));
                maxTrueYValue &lt;/span&gt;= Math.max.apply(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,yArr);
                maxYValue &lt;/span&gt;= parseInt(maxTrueYValue+&lt;span&gt;addNb);
                
                totalNomber &lt;/span&gt;= 5&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 运动相关&lt;/span&gt;
                ctr = 1&lt;span&gt;;
                numctr &lt;/span&gt;= 50&lt;span&gt;;
                speed &lt;/span&gt;= 1.5&lt;span&gt;;

            }
               &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; --绘制坐标轴，以及纵横方向的线条（接着上一步的代码写在 goChart方法中 ）&lt;/p&gt;
&lt;p&gt;实现效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/799986/201710/799986-20171019224244740-1238380615.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;            
            drawLineLabelMarkers(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
               &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawLineLabelMarkers(){
                ctx.translate(&lt;/span&gt;0.5,0.5);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当只绘制1像素的线的时候，坐标点需要偏移，这样才能画出1像素实线&lt;/span&gt;
                ctx.font = &quot;24px Arial&quot;&lt;span&gt;;
                ctx.lineWidth &lt;/span&gt;= 2&lt;span&gt;;
                ctx.fillStyle &lt;/span&gt;= &quot;#000&quot;&lt;span&gt;;
                ctx.strokeStyle &lt;/span&gt;= &quot;#000&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; y轴&lt;/span&gt;
&lt;span&gt;                drawLine(originX, originY, originX, cMargin);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; x轴&lt;/span&gt;
                drawLine(originX, originY, originX+&lt;span&gt;cWidth, originY);

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标记&lt;/span&gt;
&lt;span&gt;                drawMarkers();
                ctx.translate(&lt;/span&gt;-0.5,-0.5);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 还原位置&lt;/span&gt;
&lt;span&gt;            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 画线的方法&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawLine(x, y, X, Y){
                ctx.beginPath();
                ctx.moveTo(x, y);
                ctx.lineTo(X, Y);
                ctx.stroke();
                ctx.closePath();
            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标记&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawMarkers(){
                ctx.strokeStyle &lt;/span&gt;= &quot;#E0E0E0&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制 y&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; oneYVal = (maxYValue-minYValue)/totalNomber;
&lt;span&gt;                
                ctx.textAlign &lt;/span&gt;= &quot;right&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0; i&amp;lt;=totalNomber; i++&lt;span&gt;){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; markerVal = parseInt(i*oneYVal+&lt;span&gt;minYValue);
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; xMarker = originX-10&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; yMarker = parseInt( originY-cHeight*(markerVal-minYValue)/(maxYValue-minYValue) );
&lt;span&gt;                    
                    ctx.fillText(markerVal, xMarker, yMarker&lt;/span&gt;+3, cSpace); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 文字&lt;/span&gt;
                    
                    &lt;span&gt;if&lt;/span&gt;(i&amp;gt;0&lt;span&gt;){
                        drawLine(originX&lt;/span&gt;+2, yMarker, originX+&lt;span&gt;cWidth, yMarker);
                    }
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制 x&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt; oneXVal = (maxXValue-minXValue)/totalNomber;
                ctx.textAlign = &quot;center&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0; i&amp;lt;=totalNomber; i++&lt;span&gt;){
                    
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; markerVal =  parseInt(i*oneXVal+&lt;span&gt;minXValue);
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; xMarker = parseInt( originX+cWidth*(markerVal-minXValue)/(maxXValue-minXValue));
                    &lt;span&gt;var&lt;/span&gt; yMarker = originY+30&lt;span&gt;;
                    ctx.fillText(markerVal, xMarker, yMarker, cSpace); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 文字&lt;/span&gt;
                    
                    &lt;span&gt;if&lt;/span&gt;(i&amp;gt;0&lt;span&gt;){
                        drawLine(xMarker, cMargin, xMarker, originY&lt;/span&gt;-2&lt;span&gt;);
                    }
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标题 y&lt;/span&gt;
&lt;span&gt;                ctx.save();
                ctx.rotate(&lt;/span&gt;-Math.PI/2);
                ctx.fillText(textArr[1], -canvas.height/2, cSpace-10);
&lt;span&gt;                ctx.restore();
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标题 x&lt;/span&gt;
                ctx.fillText(textArr[0], originX+cWidth/2, originY+cSpace/2+30&lt;span&gt;);
            };
               &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; --绘制散点图动画（接着上一步的代码写在 goChart方法中 ）&lt;/p&gt;
&lt;p&gt;此处里面有对鼠标移动的处理，大家看到有mouseMove 的地方先搁置，写到后边就知道用处了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/799986/201710/799986-20171019224900631-719117839.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;102&quot;&gt;
&lt;pre&gt;
               drawChartAnimate(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制柱状图的动画&lt;/span&gt;
               
               &lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制动画图&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawChartAnimate(mouseMove){
                
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ifTip = &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; tipArr = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
                
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0; i&amp;lt;dataArr.length; i++&lt;span&gt;){
                    
                    ctx.fillStyle &lt;/span&gt;= &quot;rgba(46,199,201,0.5)&quot;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; oX = originX+cWidth*(dataArr[i][0]-minXValue)/(maxXValue-minXValue);
                    &lt;span&gt;var&lt;/span&gt; oY = originY - cHeight*(dataArr[i][1]-minYValue)/(maxYValue-minYValue);
&lt;span&gt;                    ctx.beginPath();
                    
                    ctx.arc(oX,oY,&lt;/span&gt;8*ctr/numctr,0, Math.PI*2,true);
                    
                    &lt;span&gt;if&lt;/span&gt;(!ifTip &amp;amp;&amp;amp; mouseMove &amp;amp;&amp;amp; ctx.isPointInPath(mousePosition.x*2, mousePosition.y*2)){ &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果是鼠标移动的到柱状图上，重新绘制图表&lt;/span&gt;
                        ctx.fillStyle = &quot;rgba(46,199,201,1)&quot;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否绘制提示&lt;/span&gt;
                        ifTip = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                        tipArr &lt;/span&gt;=&lt;span&gt; dataArr[i];
                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                        ctx.fillStyle &lt;/span&gt;= &quot;rgba(46,199,201,0.5)&quot;&lt;span&gt;;
                    }
                    ctx.fill();
                    
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制平均值线&lt;/span&gt;
&lt;span&gt;                drawAverageLine();
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制提示&lt;/span&gt;
                ifTip &amp;amp;&amp;amp; drawTips(mousePosition.x*2, mousePosition.y*2,tipArr[0],tipArr[1&lt;span&gt;]);
                
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(ctr&amp;lt;&lt;span&gt;numctr){
                    ctr&lt;/span&gt;++&lt;span&gt;;
                    setTimeout(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        ctx.clearRect(&lt;/span&gt;0,0&lt;span&gt;,canvas.width, canvas.height);
                        drawLineLabelMarkers();
                        drawChartAnimate();
                    }, speed&lt;/span&gt;*=1.08&lt;span&gt;);
                }
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制平均值线&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawAverageLine(){
                ctx.beginPath();
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; yNb = originY-cHeight*(yAverage-minYValue)/(maxYValue-minYValue);
                &lt;span&gt;var&lt;/span&gt; xNb = originX+cWidth*ctr/numctr+cMargin/2&lt;span&gt;;
                ctx.moveTo(originX&lt;/span&gt;+2&lt;span&gt;,yNb);
                ctx.lineTo(xNb,yNb);
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置虚线&lt;/span&gt;
&lt;span&gt;                ctx.save();
                ctx.lineWidth &lt;/span&gt;= 4&lt;span&gt;;
                ctx.strokeStyle &lt;/span&gt;= ctx.fillStyle = &quot;#2ec7c9&quot;&lt;span&gt;;
                ctx.setLineDash([&lt;/span&gt;10&lt;span&gt;]);
                ctx.stroke();
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制三角&lt;/span&gt;
&lt;span&gt;                ctx.beginPath();
                ctx.moveTo(xNb,yNb);
                ctx.lineTo(xNb&lt;/span&gt;-5,yNb-8&lt;span&gt;);
                ctx.lineTo(xNb&lt;/span&gt;+12&lt;span&gt;,yNb);
                ctx.lineTo(xNb&lt;/span&gt;-5,yNb+8&lt;span&gt;);
                ctx.fill();
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制文本&lt;/span&gt;
                ctx.font = &quot;24px Arial&quot;&lt;span&gt;;
                ctx.fillText(yAverage, xNb&lt;/span&gt;-10,yNb-10&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;还原&lt;/span&gt;
&lt;span&gt;                ctx.restore();
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制提示框&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawTips(oX,oY,xVal,yVal){
                ctx.save();
                ctx.beginPath();
                ctx.fillStyle &lt;/span&gt;= &quot;rgba(0,0,0,0.5)&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; H = 100&lt;span&gt;;
                roundedRect(ctx,oX&lt;/span&gt;+10,oY-H/2,2*H,H,5);
&lt;span&gt;                
                ctx.fillStyle &lt;/span&gt;= &quot;#fff&quot;&lt;span&gt;;
                ctx.fillText(textArr[&lt;/span&gt;1]+&quot;：&quot;+yVal, oX+H,oY-H/10);
                ctx.fillText(textArr[0]+&quot;：&quot;+xVal, oX+H,oY+H/4);
&lt;span&gt;                ctx.restore();
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制圆角矩形的方法&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; roundedRect(ctx,x,y,width,height,radius){
                ctx.moveTo(x,x&lt;/span&gt;+&lt;span&gt;radius);
                ctx.beginPath();
                ctx.lineTo(x,y&lt;/span&gt;+height-&lt;span&gt;radius);
                ctx.quadraticCurveTo(x,y&lt;/span&gt;+height,x+radius,y+&lt;span&gt;height);
                ctx.lineTo(x&lt;/span&gt;+width-radius, y+&lt;span&gt;height);
                ctx.quadraticCurveTo(x&lt;/span&gt;+width,y+height,x+width,y+height-&lt;span&gt;radius);
                ctx.lineTo(x&lt;/span&gt;+width,y+&lt;span&gt;radius);
                ctx.quadraticCurveTo(x&lt;/span&gt;+width,y,x+width-&lt;span&gt;radius,y);
                ctx.lineTo(x&lt;/span&gt;+&lt;span&gt;radius,y);
                ctx.quadraticCurveTo(x,y,x,y&lt;/span&gt;+&lt;span&gt;radius);
                ctx.closePath();
                ctx.fill();
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;  --监听鼠标移动，以实现移动到当前项作颜色变化（接着上一步的代码写在 goChart方法中 ）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测鼠标移动&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; mouseTimer = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            canvas.addEventListener(&lt;/span&gt;&quot;mousemove&quot;,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){
                e &lt;/span&gt;= e ||&lt;span&gt; window.event;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( e.offsetX || e.offsetX==0&lt;span&gt; ){
                    mousePosition.x &lt;/span&gt;=&lt;span&gt; e.offsetX;
                    mousePosition.y &lt;/span&gt;=&lt;span&gt; e.offsetY;
                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;( e.layerX || e.layerX==0&lt;span&gt; ){
                    mousePosition.x &lt;/span&gt;=&lt;span&gt; e.layerX;
                    mousePosition.y &lt;/span&gt;=&lt;span&gt; e.layerY;
                }
                
                clearTimeout(mouseTimer);
                mouseTimer &lt;/span&gt;= setTimeout(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    ctx.clearRect(&lt;/span&gt;0,0&lt;span&gt;,canvas.width, canvas.height);
                    drawLineLabelMarkers();
                    drawChartAnimate(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
                },&lt;/span&gt;10&lt;span&gt;);
            });&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;--点击图表刷新（接着上一步的代码写在 goChart方法中 ）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击刷新图表&lt;/span&gt;
            canvas.onclick = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                initChart(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
                drawLineLabelMarkers(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
                drawChartAnimate(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制折线图的动画&lt;/span&gt;
            };
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 这样我们整个代码就编写完成了，为了代码更便于阅读，我们可以将所有方法放到后面，把调用方法的代码放到前面，经过调整的全部代码如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;655&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;chart&quot;&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;=&quot;400&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;700&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin:50px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;function&lt;/span&gt;&lt;span&gt; goChart(cBox,dataArr,textArr){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 声明所需变量&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; canvas,ctx;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表属性&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; cWidth, cHeight, cMargin, cSpace;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; originX, originY;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 柱状图属性&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; bMargin, tobalBars, bWidth, maxXValue, maxYValue, minXValue, minYValue;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; totalNomber;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; yAverage, minTrueYValue, maxTrueYValue;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 运动相关变量&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; ctr, numctr, speed;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;鼠标移动&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; mousePosition &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; {};
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建canvas并获得canvas上下文&lt;/span&gt;
&lt;span&gt;               canvas &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; document.createElement(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;canvas&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
               &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(canvas &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; canvas.getContext){
                ctx &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.getContext(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            }
               
               canvas.innerHTML &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;你的浏览器不支持HTML5 canvas&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
               cBox.appendChild(canvas);
            
            initChart(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
&lt;span&gt;            drawLineLabelMarkers(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
&lt;span&gt;            drawChartAnimate(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制柱状图的动画&lt;/span&gt;
            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测鼠标移动&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt;&lt;span&gt; mouseTimer &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            canvas.addEventListener(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mousemove&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){
                e &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; e &lt;/span&gt;&lt;span&gt;||&lt;/span&gt;&lt;span&gt; window.event;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;( e.offsetX &lt;/span&gt;&lt;span&gt;||&lt;/span&gt;&lt;span&gt; e.offsetX&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt; ){
                    mousePosition.x &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; e.offsetX;
                    mousePosition.y &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; e.offsetY;
                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt;( e.layerX &lt;/span&gt;&lt;span&gt;||&lt;/span&gt;&lt;span&gt; e.layerX&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt; ){
                    mousePosition.x &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; e.layerX;
                    mousePosition.y &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; e.layerY;
                }
                
                clearTimeout(mouseTimer);
                mouseTimer &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; setTimeout(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                    ctx.clearRect(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,canvas.width, canvas.height);
                    drawLineLabelMarkers();
                    drawChartAnimate(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
                },&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;);
            });

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击刷新图表&lt;/span&gt;
&lt;span&gt;            canvas.onclick &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                initChart(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
&lt;span&gt;                drawLineLabelMarkers(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
&lt;span&gt;                drawChartAnimate(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制折线图的动画&lt;/span&gt;
&lt;span&gt;            };


            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表初始化&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; initChart(){
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 图表信息&lt;/span&gt;
&lt;span&gt;                cMargin &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;60&lt;/span&gt;&lt;span&gt;;
                cSpace &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;80&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将canvas扩大2倍，然后缩小，以适应高清屏幕&lt;/span&gt;
&lt;span&gt;                canvas.width &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; cBox.getAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;*&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt; ;
                canvas.height &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; cBox.getAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;*&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
                canvas.style.height &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.height&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2 + &quot;px&quot;;&lt;/span&gt;
&lt;span&gt;                canvas.style.width &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.width&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2 + &quot;px&quot;;&lt;/span&gt;
&lt;span&gt;                cHeight &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.height &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; cMargin&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt; cSpace;
                cWidth &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.width &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; cMargin&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt; cSpace;
                originX &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; cMargin &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; cSpace;
                originY &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; cMargin &lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt; cHeight;

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 柱状图信息&lt;/span&gt;
&lt;span&gt;                bMargin &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; canvas.width&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;40;&lt;/span&gt;
&lt;span&gt;                tobalBars &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; dataArr.length;
                bWidth &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt( cWidth&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;tobalBars - bMargin );&lt;/span&gt;
&lt;span&gt;                maxXValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                maxYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; xArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; [];
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; yArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; [];
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dataArr.length; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
                    xArr.push( dataArr[i][&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;] );
                    yArr.push( dataArr[i][&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;] );
                }
                yAverage &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; ( eval(yArr.join(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;yArr.length ).toFixed(2);&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt;&lt;span&gt; addNb &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(yAverage&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;10); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于在轴前后加空白&lt;/span&gt;
&lt;span&gt;                
                minXValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; Math.min.apply(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,xArr); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;求最小值&lt;/span&gt;
&lt;span&gt;                minXValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(Math.max(minXValue&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;addNb, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果减去addNb后小于零，就取零&lt;/span&gt;
&lt;span&gt;                maxXValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(Math.max.apply(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,xArr)&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;addNb); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用于轴的显示，所以取整&lt;/span&gt;
&lt;span&gt;                
                minYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; minTrueYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; Math.min.apply(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,yArr);
                minYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(Math.max(minYValue&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;addNb, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;));
                maxTrueYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; Math.max.apply(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;,yArr);
                maxYValue &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(maxTrueYValue&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;addNb);
                
                totalNomber &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 运动相关&lt;/span&gt;
&lt;span&gt;                ctr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
                numctr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;50&lt;/span&gt;&lt;span&gt;;
                speed &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;1.5&lt;/span&gt;&lt;span&gt;;

            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制图表轴、标签和标记&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawLineLabelMarkers(){
                ctx.translate(&lt;/span&gt;&lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当只绘制1像素的线的时候，坐标点需要偏移，这样才能画出1像素实线&lt;/span&gt;
&lt;span&gt;                ctx.font &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;24px Arial&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                ctx.lineWidth &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
                ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                ctx.strokeStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#000&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; y轴&lt;/span&gt;
&lt;span&gt;                drawLine(originX, originY, originX, cMargin);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; x轴&lt;/span&gt;
&lt;span&gt;                drawLine(originX, originY, originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth, originY);

                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标记&lt;/span&gt;
&lt;span&gt;                drawMarkers();
                ctx.translate(&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 还原位置&lt;/span&gt;
&lt;span&gt;            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 画线的方法&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawLine(x, y, X, Y){
                ctx.beginPath();
                ctx.moveTo(x, y);
                ctx.lineTo(X, Y);
                ctx.stroke();
                ctx.closePath();
            }

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标记&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawMarkers(){
                ctx.strokeStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#E0E0E0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制 y&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt;&lt;span&gt; oneYVal &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; (maxYValue&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minYValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;totalNomber;&lt;/span&gt;
&lt;span&gt;                
                ctx.textAlign &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;right&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;&amp;lt;=&lt;/span&gt;&lt;span&gt;totalNomber; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; markerVal &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt(i&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;oneYVal&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;minYValue);
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; xMarker &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originX&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; yMarker &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt( originY&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;cHeight&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(markerVal&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minYValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;(maxYValue-minYValue) );&lt;/span&gt;
&lt;span&gt;                    
                    ctx.fillText(markerVal, xMarker, yMarker&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;, cSpace); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 文字&lt;/span&gt;
                    
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(i&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                        drawLine(originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;, yMarker, originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth, yMarker);
                    }
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制 x&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt;&lt;span&gt; oneXVal &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; (maxXValue&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minXValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;totalNomber;&lt;/span&gt;
&lt;span&gt;                ctx.textAlign &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;center&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;&amp;lt;=&lt;/span&gt;&lt;span&gt;totalNomber; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
                    
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; markerVal &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;  parseInt(i&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;oneXVal&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;minXValue);
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; xMarker &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; parseInt( originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(markerVal&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minXValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;(maxXValue-minXValue));&lt;/span&gt;
                    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; yMarker &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originY&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt;;
                    ctx.fillText(markerVal, xMarker, yMarker, cSpace); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 文字&lt;/span&gt;
                    
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(i&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;){
                        drawLine(xMarker, cMargin, xMarker, originY&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;);
                    }
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标题 y&lt;/span&gt;
&lt;span&gt;                ctx.save();
                ctx.rotate(&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;Math.PI&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2);&lt;/span&gt;
&lt;span&gt;                ctx.fillText(textArr[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;], &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;canvas.height&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2, cSpace-10);&lt;/span&gt;
&lt;span&gt;                ctx.restore();
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 绘制标题 x&lt;/span&gt;
&lt;span&gt;                ctx.fillText(textArr[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;], originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2, originY+cSpace&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt;);
            };

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制动画图&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawChartAnimate(mouseMove){
                
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; ifTip &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; tipArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
                
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; i&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;; i&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dataArr.length; i&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;){
                    
                    ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rgba(46,199,201,0.5)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; oX &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(dataArr[i][&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minXValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;(maxXValue-minXValue);&lt;/span&gt;
                    &lt;span&gt;var&lt;/span&gt;&lt;span&gt; oY &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originY &lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt; cHeight&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(dataArr[i][&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minYValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;(maxYValue-minYValue);&lt;/span&gt;
&lt;span&gt;                    ctx.beginPath();
                    
                    ctx.arc(oX,oY,&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;ctr&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;numctr,0, Math.PI*2,true);&lt;/span&gt;
                    
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;span&gt;ifTip &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; mouseMove &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; ctx.isPointInPath(mousePosition.x&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;, mousePosition.y&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)){ &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果是鼠标移动的到柱状图上，重新绘制图表&lt;/span&gt;
&lt;span&gt;                        ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rgba(46,199,201,1)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;是否绘制提示&lt;/span&gt;
&lt;span&gt;                        ifTip &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                        tipArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; dataArr[i];
                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                        ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rgba(46,199,201,0.5)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                    }
                    ctx.fill();
                    
                }
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制平均值线&lt;/span&gt;
&lt;span&gt;                drawAverageLine();
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制提示&lt;/span&gt;
&lt;span&gt;                ifTip &lt;/span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span&gt; drawTips(mousePosition.x&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;, mousePosition.y&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;,tipArr[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;],tipArr[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
                
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(ctr&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;numctr){
                    ctr&lt;/span&gt;&lt;span&gt;++&lt;/span&gt;&lt;span&gt;;
                    setTimeout(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        ctx.clearRect(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,canvas.width, canvas.height);
                        drawLineLabelMarkers();
                        drawChartAnimate();
                    }, speed&lt;/span&gt;&lt;span&gt;*=&lt;/span&gt;&lt;span&gt;1.08&lt;/span&gt;&lt;span&gt;);
                }
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制平均值线&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawAverageLine(){
                ctx.beginPath();
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; yNb &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originY&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;cHeight&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(yAverage&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;minYValue)&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;(maxYValue-minYValue);&lt;/span&gt;
                &lt;span&gt;var&lt;/span&gt;&lt;span&gt; xNb &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;cWidth&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;ctr&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;numctr+cMargin&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
                ctx.moveTo(originX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;,yNb);
                ctx.lineTo(xNb,yNb);
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置虚线&lt;/span&gt;
&lt;span&gt;                ctx.save();
                ctx.lineWidth &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;4&lt;/span&gt;&lt;span&gt;;
                ctx.strokeStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#2ec7c9&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                ctx.setLineDash([&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;]);
                ctx.stroke();
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制三角&lt;/span&gt;
&lt;span&gt;                ctx.beginPath();
                ctx.moveTo(xNb,yNb);
                ctx.lineTo(xNb&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;,yNb&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;);
                ctx.lineTo(xNb&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;,yNb);
                ctx.lineTo(xNb&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;,yNb&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;);
                ctx.fill();
                
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制文本&lt;/span&gt;
&lt;span&gt;                ctx.font &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;24px Arial&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                ctx.fillText(yAverage, xNb&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;,yNb&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;还原&lt;/span&gt;
&lt;span&gt;                ctx.restore();
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制提示框&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; drawTips(oX,oY,xVal,yVal){
                ctx.save();
                ctx.beginPath();
                ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rgba(0,0,0,0.5)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; H &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;100&lt;/span&gt;&lt;span&gt;;
                roundedRect(ctx,oX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;&lt;span&gt;,oY&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;H&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2,2*H,H,5);&lt;/span&gt;
&lt;span&gt;                
                ctx.fillStyle &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#fff&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                ctx.fillText(textArr[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;yVal, oX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;H,oY&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;H&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;10);&lt;/span&gt;
&lt;span&gt;                ctx.fillText(textArr[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;xVal, oX&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;H,oY&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;H&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;4);&lt;/span&gt;
&lt;span&gt;                ctx.restore();
            }
            
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;绘制圆角矩形的方法&lt;/span&gt;
            &lt;span&gt;function&lt;/span&gt;&lt;span&gt; roundedRect(ctx,x,y,width,height,radius){
                ctx.moveTo(x,x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;radius);
                ctx.beginPath();
                ctx.lineTo(x,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;radius);
                ctx.quadraticCurveTo(x,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height,x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;radius,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height);
                ctx.lineTo(x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;radius, y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height);
                ctx.quadraticCurveTo(x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height,x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;radius);
                ctx.lineTo(x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;radius);
                ctx.quadraticCurveTo(x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width,y,x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;radius,y);
                ctx.lineTo(x&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;radius,y);
                ctx.quadraticCurveTo(x,y,x,y&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;radius);
                ctx.closePath();
                ctx.fill();
            }

        }

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;&lt;span&gt; dataArr &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; [[&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;193.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;187.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;181.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;62.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;184.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;178.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;173.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;60.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;183.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;189.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;170.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;59.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;59.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;169.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;55.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;163.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;57.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;164.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;101.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;171.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;56.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;197.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;192.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;169.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;184.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;53.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;178.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;55.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;157.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;58.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;58.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;78.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;116.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;163.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.2&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;198.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;166.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;166.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;108.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;63.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;68.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;165.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;172.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;95.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;193.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;95.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;96.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.8&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;171.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.4&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;69.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;86.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;92.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;93.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;61.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;168.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;185.4&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.5&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;66.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;160.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;88.6&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;186.7&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;101.4&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;91.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;67.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;175.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.7&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;175.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;81.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;75.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;181.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;182.9&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.0&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;102.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;184.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;71.8&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;94.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;70.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;64.5&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;77.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;72.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;87.3&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;174.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;80.0&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;176.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.6&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;74.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;188.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;85.9&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;73.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;167.6&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;76.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;183.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;65.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;183.0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;90.9&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;89.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;170.2&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;62.3&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;82.7&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;179.1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;79.1&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;190.5&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;98.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;177.8&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;84.1&lt;/span&gt;&lt;span&gt;],
                [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;], [&lt;/span&gt;&lt;span&gt;180.3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;83.2&lt;/span&gt;&lt;span&gt;]
            ];
            
        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
         * 参数1 ：需要显示canvas的dom  (非canvas标签，需要指定height和width)
         * 参数2：二维数据  [0]横轴   [1]纵轴
         * 参数3：横轴名称 纵轴名称
         * &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        goChart(document.getElementById(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;chart&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),dataArr,[&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;身 高&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;体 重&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;])


    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/799986/201710/799986-20171019225451193-628384985.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;




&lt;p&gt;好了，今天就讲到这里，希望大家把代码都自己敲一遍。&lt;/p&gt;


&lt;p&gt;关注公众号，博客更新即可收到推送&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/799986/201710/799986-20171011124427824-1210633966.jpg&quot; alt=&quot;&quot; width=&quot;300&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 19 Oct 2017 14:56:00 +0000</pubDate>
<dc:creator>苏天天</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chengduxiaoc/p/7696056.html</dc:identifier>
</item>
<item>
<title>浅谈哈希表 - 迷失的小菜包</title>
<link>http://www.cnblogs.com/cbs-writing/p/7696017.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cbs-writing/p/7696017.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cbs.hash;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 定义哈希表的每一个节点
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; CBS
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Node&amp;lt;K,V&amp;gt;&lt;span&gt; {
    K key;&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;key值&lt;/span&gt;
    V value;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;value值&lt;/span&gt;
    Node&amp;lt;K,V&amp;gt; next;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;下一个节点&lt;/span&gt;
    
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Node(){
        
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Node(K k,V v){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.key=&lt;span&gt;k;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.value=&lt;span&gt;v;
    }
}

&lt;/span&gt;&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cbs.hash;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 自定义哈希表
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; CBS
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MyHashTable&amp;lt;K,V&amp;gt;&lt;span&gt; {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Node&amp;lt;K,V&amp;gt;&lt;span&gt;[] table;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; count=0;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;哈希表长度&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; f=0.75f;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;装载因子&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; index;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数组下标&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; hash;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;哈希值
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化数组长度&lt;/span&gt;
    @SuppressWarnings(&quot;unchecked&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; MyHashTable(){
        table&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt; Node[9&lt;span&gt;];
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 添加方法
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; value
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; put(K key,V value){
        hash&lt;/span&gt;=key.hashCode();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取哈希值&lt;/span&gt;
        index = (hash &amp;amp; 0x7FFFFFFF) % table.length;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取下标值&lt;/span&gt;
&lt;span&gt;        
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; node=&lt;span&gt;table[index];
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; tem=&lt;span&gt;node;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果节点已经存在，更新value值&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt;(;tem!=&lt;span&gt;null&lt;/span&gt;;tem=&lt;span&gt;tem.next){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(hash==tem.key.hashCode() &amp;amp;&amp;amp;&lt;span&gt; tem.key.equals(key)){
                tem.value&lt;/span&gt;=&lt;span&gt;value;
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
            }
        }
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; newNode=&lt;span&gt;new&lt;/span&gt; Node&amp;lt;K, V&amp;gt;&lt;span&gt;(key,value);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在链表的表头插入&lt;/span&gt;
        table[index]=&lt;span&gt;newNode;
        newNode.next&lt;/span&gt;=&lt;span&gt;node;
        count&lt;/span&gt;++&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 查找指定key值下的节点
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; k
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; key值对应的节点对象
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; Node&amp;lt;K, V&amp;gt;&lt;span&gt; find(K k){
        hash&lt;/span&gt;=&lt;span&gt;k.hashCode();
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; index = (hash &amp;amp; 0x7FFFFFFF) %&lt;span&gt; table.length;
        
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; node=&lt;span&gt;table[index];
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; tem=&lt;span&gt;node;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(;tem!=&lt;span&gt;null&lt;/span&gt;;tem=&lt;span&gt;tem.next){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(hash==tem.key.hashCode() &amp;amp;&amp;amp;&lt;span&gt; tem.key.equals(k)){
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; tem;
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 更新key值对应的value值
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; k
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; v
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; update(K k,V v){
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; node=&lt;span&gt;find(k);
        node.value&lt;/span&gt;=&lt;span&gt;v;
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 删除指定key值的节点
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; k
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; delete(K k){
        hash&lt;/span&gt;=&lt;span&gt;k.hashCode();
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; index = (hash &amp;amp; 0x7FFFFFFF) %&lt;span&gt; table.length;
        
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; node=&lt;span&gt;table[index];
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; tem=&lt;span&gt;node;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(;tem!=&lt;span&gt;null&lt;/span&gt;;tem=&lt;span&gt;tem.next){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(hash==tem.next.key.hashCode() &amp;amp;&amp;amp;&lt;span&gt; tem.next.key.equals(k)){
                &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
            }
        }
        
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; nextNode=&lt;span&gt;find(k);
        tem.next&lt;/span&gt;=&lt;span&gt;nextNode.next;
        count&lt;/span&gt;--&lt;span&gt;;
    }
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 获取key值节点下面的value值
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; k
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt;    V类型的值
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; V get(K k){
        Node&lt;/span&gt;&amp;lt;K,V&amp;gt; Node=&lt;span&gt;find(k);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(Node!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (V)Node.value;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; size(){
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; count;
    }
    
}&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 19 Oct 2017 14:49:00 +0000</pubDate>
<dc:creator>迷失的小菜包</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cbs-writing/p/7696017.html</dc:identifier>
</item>
<item>
<title>rewrap-ajax.js插件 - 微宇宙</title>
<link>http://www.cnblogs.com/hao5599/p/7695902.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hao5599/p/7695902.html</guid>
<description>&lt;p&gt;&lt;span&gt;　　很久没有动手写技术的文章，这个过程中间一直在写日记，生活点滴的记录替代了技术文章的编写，可以看出以往的内心是激情或烈火，现在是&lt;/span&gt;...&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　最近写了一个&lt;/span&gt;JS插件，用圈内的话说叫造了个轮子，造的好与不好都不是自己说了算，关键还是大家用的好与不好。&lt;br/&gt;&lt;span&gt;　　当然我自己也在使用，由于个人偏爱与喜好，所以未能借签其他&lt;/span&gt;Ajax框架的写法，目前的版本都是以版本一进行往上整合的成果，所以你想要全面了解内部的结构，可以先从版本一开始看起。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　现在我们说说整体的设计结构，版本一是好友收集整理的方法，基础的写法已经成型，调用&lt;/span&gt;nativeAjax方放即可，方法内部有三个参数，第一个为ajax的属性，第二个为成功的函数，第三个为错误的函数，具体如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; nativeAjax(postOption,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 3.1、请求成功回调&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    console.log(data);&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; },&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(error){&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 3.2、请求失败回调,返回HTTP状态码&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    console.log(error);&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　基于以上的设计模式，然后给他进行二次封装，首先&lt;/span&gt;ajax的服务属性固定不变，那么我们可以把所有的ajax properties绑定到对象上即可，如果直接绑定在指定的对象上，其实我们只管给参数和拿参数，省了很多事情，这个过程简单了不少，那么灵活性就不会很高。如果我们想自己在内部进行封装，那么就要求高灵活性和可复用属性，所以我把属性放在了function函数里面，于是在内部使用this指针绑定ajax属性进行调用，同时可以在内部进行插件的再次封装，这是我所理解的这个版本的内部结构的设计模式。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　版本二&lt;/span&gt;&lt;a href=&quot;https://github.com/ZWLTZ/rewrap-ajax&quot; target=&quot;_blank&quot;&gt;rewrap-ajax&lt;/a&gt;调用的外部结构类似jq的JQ.fn属性，是以链式结构的对象属性方法来使用的，所以我们在&amp;lt;script&amp;gt;内部使用wrap.service(`ajax`, foo)即可，然后foo函数内部具有ajax的服务属性，我们只要把ajax的属性绑定到this指针上即可，ajax的get分别有URL，TYPE，SUCCESS，ERROR四个属性，并且这4个属性都支持大小写的格式。然后this.success，this.error是二个方法，分别是调用成功的数据请求和调用错误状态的捕获，this.success和this.error仅一个参数。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; wrap.service('ajax',&lt;span&gt;function&lt;/span&gt;&lt;span&gt; ajax() {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 支持大小写&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.URL = &quot;query.do&quot;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.TYPE = &quot;GET&quot;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.SUCCESS = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data) {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt; val =&lt;span&gt; data;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        console.log(val)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;this&lt;/span&gt;.ERROR = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(err) {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        console.log(err)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; });
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;　　版本三&lt;/span&gt;&lt;a href=&quot;https://github.com/ZWLTZ/rewrap-ajax&quot; target=&quot;_blank&quot;&gt;rewrap-ajax&lt;/a&gt;保持版本二的外部结构和this写法，this指针上多了二个功能，分别是props和methods方法，其中props道具内部结构为json的数据格式，return返回的对象{}具有多个state...状态，比如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;return {&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;State_01: [{ class : ‘.main’, static: 'color', tip: 'message', content: 'container'}],&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;State_02: [{ class : ‘.main’, static: 'color'}],&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;State_03: [{ class : ‘.main’}]&lt;/span&gt;
&lt;span&gt;9&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　其中每一个&lt;/span&gt;state状态对应的value值必须是使用数组[]保存，数组内部必须是一个对象{}，对象的属性以常规格式要求，对象对应的value必须是一个dom节点能访问的Element元素（或node节点，class类，id，tag标签等等）。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　然而&lt;/span&gt;methods方法的内部结构为常规的对象调用函数的格式，其中return返回的对象key键为API的方法，注意它不支持自定义写法，返回的对象的value为函数写法，那么函数方法接收一个参数，此参数为props管道内部的state状态属性。并且函数的方法内部使用this指针写法，如下：this.el().add()&lt;/p&gt;
&lt;p&gt;完整结构：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;return&lt;/span&gt;&lt;span&gt; {&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     addClass: &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (scope){&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.el([scope.class,scope.static]).add()&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    },&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     removeClass: &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (scope){&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.el([scope.class,scope.tip]).remove()&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    },&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     pushHtml: &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (scope){&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.el([scope.static,scope.class]).push()&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    },&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     hasClass: &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (scope){&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.el(scope.define.content).has()&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　其中&lt;/span&gt;.el()方法内部的参数通过props管道流出状态属性，此属性的$scope作用域为state属性，参数接收的结果为字符串，必须是从props获得的字符串，多个字符串的结果可以使用数组的[]形式储存，那么这些属性都具有这个API方法。el()后面的add方法的作用为当前的元素调用的add方法，然而add绑定的方法是API方法，比如addClass就是rewrap-ajax内部的API方法，但是你在外部调用的时候，可以使用你自定义的add方法去实现addClass方法，方法内部不需要参数，但是外部管道调用add是否需要参数取决与rewrap-ajax内部的API方法。所以之后会公开API方法。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;外部调用的方式，通过作用域&lt;/span&gt;$scope的形式获得props管道的方法，外部调用如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;this&lt;/span&gt;.ERROR = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;( $scope, err ) {
    $scope.$props.$el($scope.$props.$scope.define.static).add(&lt;/span&gt;'error_message'&lt;span&gt;)
    $scope.$props.$el($scope.$props.$scope.define.static).push(&lt;/span&gt;'调用出错 error'&lt;span&gt;)
    $scope.$props.$el($scope.$props.$scope.define.tip).remove(&lt;/span&gt;'show'&lt;span&gt;)
    console.log(err)
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;　　目前$scope是&lt;/span&gt;作为方法的第一个参数流进来，那么元素的管道为$scope.$props.$scope，获得元素方法的管道为$scope.$props.$el()，元素调用API的方法为：add()，remove()，push()等等。&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;rewrap-ajax&quot; href=&quot;https://github.com/ZWLTZ/rewrap-ajax&quot; target=&quot;_blank&quot;&gt;rewrap-ajax&lt;/a&gt;详细&lt;strong&gt;GIT&lt;/strong&gt;地址：https://github.com/ZWLTZ/rewrap-ajax&lt;/p&gt;

</description>
<pubDate>Thu, 19 Oct 2017 14:29:00 +0000</pubDate>
<dc:creator>微宇宙</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hao5599/p/7695902.html</dc:identifier>
</item>
</channel>
</rss>