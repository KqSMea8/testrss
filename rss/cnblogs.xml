<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>一款非常推荐的用户界面插件----EasyUI - 姐姐jy</title>
<link>http://www.cnblogs.com/jiejiejy/p/7819423.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jiejiejy/p/7819423.html</guid>
<description>&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;  前  言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　    &lt;/span&gt;easyui是一种基于jQuery的用户界面插件集合。&lt;/p&gt;
&lt;p&gt;       easyui为创建现代化，互动，JavaScript应用程序，提供必要的功能。 使用easyui你不需要写很多代码，你只需要通过编写一些简单HTML标记，就可以定义用户界面。&lt;/p&gt;
&lt;p&gt;easyui是个完美支持HTML5网页的完整框架。easyui节省您网页开发的时间和规模。easyui很简单但功能强大的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、声明组件的方法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;jQuery EasyUI 提供易于使用的组件，它使 Web 开发人员能快速地在流行的 jQuery 核心和 HTML5 上建立程序页面。 有两个方法声明的 UI 组件:&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;1. 直接在 HTML 声明组件;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-dialog&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:450px;height:220px&quot;&lt;/span&gt;&lt;span&gt; data-options&lt;/span&gt;&lt;span&gt;=&quot;title:'My Dialog'&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        我创建的对话框
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2. 编写 JavaScript 代码来创建组件。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;a&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:230px&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
$('#a'&lt;span&gt;).combobox({
        url: ...,
        required: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
        valueField: &lt;/span&gt;'id'&lt;span&gt;,
        textField: &lt;/span&gt;'text'&lt;span&gt;
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;table border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、组件的使用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;1&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;EasyUI窗口&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1)创建简单窗口&lt;/p&gt;
&lt;p&gt;创建一个窗口（window）非常简单，我们创建一个 DIV 标记：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;win&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-window&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;My Window&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:300px;height:100px;padding:5px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    内容区
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111154434919-1953433284.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;一行简单的代码就可以快速地搭建一个窗口，并且还不用写javascript，是不是非常好用。。&lt;/p&gt;

&lt;p&gt;如果您希望创建一个隐藏的窗口（window），记得设置 'closed' 属性为 'true' 值，您可以调用 'open' 方法来打开窗口（window）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;win&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-window&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;My Window&quot;&lt;/span&gt;&lt;span&gt; closed&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:300px;height:100px;padding:5px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    内容区
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
$('#win').window('open');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面我们来创建一个简单的登录窗口：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;win&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-window&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;Login&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:300px;height:180px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;padding:10px 20px 10px 40px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Name: &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Pass: &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;padding:5px;text-align:center;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; icon&lt;/span&gt;&lt;span&gt;=&quot;icon-ok&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Ok&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; icon&lt;/span&gt;&lt;span&gt;=&quot;icon-cancel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Cancel&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111155604544-1257202710.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2)自定义窗口工具栏&lt;/p&gt;
&lt;p&gt;默认情况下，窗口（window）有四个工具：collapsible、minimizable、maximizable 和 closable。比如我们定义以下窗口（window）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;win&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-window&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;My Window&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding:10px;width:200px;height:100px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        window content
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111160407294-279921915.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如需自定义工具，设置该工具为 true 或者 false。比如我们希望定义一个窗口（window），仅仅拥有一个可关闭的工具。您应该设置任何其他工具为 false。我们可以在标记中或者通过 jQuery 代码定义 tools 属性。现在我们使用 jQuery 代码来定义窗口（window）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
$('#win'&lt;span&gt;).window({
        collapsible:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        minimizable:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        maximizable:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;
});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111160704716-1686232552.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;如果我们希望添加自定义的工具到窗口（window），我们可以使用 tools 属性。作为实例演示，我们添加两个工具到窗口（window）：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
$('#win'&lt;span&gt;).window({
        collapsible:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        minimizable:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        maximizable:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
        tools:[{
            iconCls:&lt;/span&gt;'icon-add'&lt;span&gt;,
            handler:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                alert(&lt;/span&gt;'add'&lt;span&gt;);
            }
        },{
            iconCls:&lt;/span&gt;'icon-remove'&lt;span&gt;,
            handler:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                alert(&lt;/span&gt;'remove'&lt;span&gt;);
            }
        }]&lt;br/&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111160722794-1230213161.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3)创建对话框&lt;/p&gt;
&lt;p&gt;对话框（Dialog）是一个特殊的窗口（window），可以包含在顶部的工具栏和在底部的按钮。默认情况下，对话框（Dialog）不能改变大小，但是用户可以设置 resizable 属性为 true，使其可以改变大小。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111161050169-1320714174.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;对话框（Dialog）非常简单，可以从 DIV 标记创建，如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dd&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-dialog&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding:5px;width:400px;height:200px;&quot;&lt;/span&gt;&lt;span&gt;
            title&lt;/span&gt;&lt;span&gt;=&quot;My Dialog&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-ok&quot;&lt;/span&gt;&lt;span&gt;
            toolbar&lt;/span&gt;&lt;span&gt;=&quot;#dlg-toolbar&quot;&lt;/span&gt;&lt;span&gt; buttons&lt;/span&gt;&lt;span&gt;=&quot;#dlg-buttons&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        Dialog Content.
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;准备工具栏（Toolbar）和按钮（Button）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dlg-toolbar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-add&quot;&lt;/span&gt;&lt;span&gt; plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;javascript:alert('Add')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Add&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-save&quot;&lt;/span&gt;&lt;span&gt; plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;javascript:alert('Save')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Save&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dlg-buttons&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-ok&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;javascript:alert('Ok')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Ok&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-cancel&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;javascript:$('#dd').dialog('close')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Cancel&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;2&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;EasyUI布局&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1)为网页创建边框布局&lt;/p&gt;
&lt;p&gt;边框布局（border layout）提供五个区域：east、west、north、south、center。以下是一些通常用法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;north 区域可以用来显示网站的标语。&lt;/li&gt;
&lt;li&gt;south 区域可以用来显示版权以及一些说明。&lt;/li&gt;
&lt;li&gt;west 区域可以用来显示导航菜单。&lt;/li&gt;
&lt;li&gt;east 区域可以用来显示一些推广的项目。&lt;/li&gt;
&lt;li&gt;center 区域可以用来显示主要的内容。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111161749684-1884079565.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了应用布局（layout），您应该确定一个布局（layout）容器，然后定义一些区域。布局（layout）必须至少需要一个 center 区域，以下是一个布局（layout）实例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-layout&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:400px;height:200px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;west&quot;&lt;/span&gt;&lt;span&gt; split&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;Navigator&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:150px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;padding:5px;margin:0;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Select language:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;javascript:void(0)&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;showcontent('java')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;javascript:void(0)&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;showcontent('cshape')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;C#&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;javascript:void(0)&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;showcontent('vb')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;VB&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;javascript:void(0)&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;showcontent('erlang')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Erlang&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;content&quot;&lt;/span&gt;&lt;span&gt; region&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;Language&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding:5px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们在一个&amp;lt;div&amp;gt; 容器中创建了一个边框布局（border layout），布局（layout）把容器切割为两个部分，左边是导航菜单，右边是主要内容。&lt;/p&gt;
&lt;p&gt;最后我们写一个 onclick 事件处理函数来检索数据，'showcontent' 函数非常简单：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; showcontent(language){
    $(&lt;/span&gt;'#content').html('Introduction to ' + language + ' language'&lt;span&gt;);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2)在面板中创建复杂布局&lt;/p&gt;
&lt;p&gt;面板（Panel）允许您创建用于多种用途的自定义布局。在本实例中，我们使用面板（panel）和布局（layout）插件来创建一个 msn 消息框。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111164022731-373709981.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们在区域面板中使用多个布局（layout）。在消息框的顶部我们放置一个查询输入框。在中间的区域我们通过设置 split 属性为 true，把这部分切割为两部分，允许用户改变区域面板的尺寸大小。&lt;/p&gt;
&lt;p&gt;以下就是所有代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-panel&quot;&lt;/span&gt;&lt;span&gt; title&lt;/span&gt;&lt;span&gt;=&quot;Complex Panel Layout&quot;&lt;/span&gt;&lt;span&gt; iconCls&lt;/span&gt;&lt;span&gt;=&quot;icon-search&quot;&lt;/span&gt;&lt;span&gt; collapsible&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding:5px;width:500px;height:250px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-layout&quot;&lt;/span&gt;&lt;span&gt; fit&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;north&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;p-search&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Search:&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;input&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-layout&quot;&lt;/span&gt;&lt;span&gt; fit&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;east&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;p-right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;img/zxx.jpg&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;border:1px solid #ccc;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-layout&quot;&lt;/span&gt;&lt;span&gt; fit&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;south&quot;&lt;/span&gt;&lt;span&gt; split&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;height:60px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;textarea &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;border:0;width:100%;height:100%;resize:none&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Hi,I am easyui.&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;textarea&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt; border&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 3)动态添加标签页&lt;/p&gt;
&lt;p&gt;通过使用 jQuery EasyUI 可以很容易地添加 Tabs。您只需要调用 'add' 方法即可。&lt;/p&gt;
&lt;p&gt;我们将使用 iframe 动态地添加显示在一个页面上的 Tabs。 当点击添加按钮，一个新的 tab 将被添加。如果 tab 已经存在，它将被激活。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111164254059-575875292.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;步骤 1：创建 Tabs&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;margin-bottom:10px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;addTab('google','http://www.google.com')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;google&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;addTab('jquery','http://jquery.com/')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jquery&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;addTab('easyui','http://jeasyui.com/')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;easyui&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;tt&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-tabs&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:400px;height:250px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&quot;Home&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;步骤 2：实现 'addTab' 函数&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; addTab(title, url){
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; ($('#tt').tabs('exists'&lt;span&gt;, title)){
        $(&lt;/span&gt;'#tt').tabs('select'&lt;span&gt;, title);
    } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; content = '&amp;lt;iframe scrolling=&quot;auto&quot; frameborder=&quot;0&quot;  src=&quot;'+url+'&quot; style=&quot;width:100%;height:100%;&quot;&amp;gt;&amp;lt;/iframe&amp;gt;'&lt;span&gt;;
        $(&lt;/span&gt;'#tt').tabs('add'&lt;span&gt;,{
            title:title,
            content:content,
            closable:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
        });
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;EasyUI还有很多很多好用的组件，包括强大的DataGrid，树网格，面板。用户可以使用他们一起，或者只是用一些组件，组合和构建他想要的跨浏览器的网页应用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1212256/201711/1212256-20171111164608559-1334821456.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;有很多教程和演示应用帮助你了解这个框架。本文全部内容引自EasyUI教程。所有组件内容解释的都非常详细易懂。&lt;/p&gt;
&lt;p&gt;链接地址为http://www.jeasyui.net/tutorial/&lt;/p&gt;
&lt;p&gt;希望你能从中得到帮助。&lt;/p&gt;

</description>
<pubDate>Sat, 11 Nov 2017 23:23:00 +0000</pubDate>
<dc:creator>姐姐jy</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jiejiejy/p/7819423.html</dc:identifier>
</item>
<item>
<title>方案优化：网站实现扫描二维码关注微信公众号，自动登陆网站并获取其信息 - 陈明羽</title>
<link>http://www.cnblogs.com/cmyxn/p/7814120.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cmyxn/p/7814120.html</guid>
<description>&lt;p&gt;上一篇  《&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/cmyxn/p/7803117.html&quot;&gt;网站实现扫描二维码关注微信公众号，自动登陆网站并获取其信息&lt;/a&gt;》 中已经实现用户扫码登陆网站并获取其信息&lt;/p&gt;
&lt;p&gt;但是上一篇方案中存在一个问题，也就是文章末尾指出的可以优化的地方（&lt;a href=&quot;http://www.cnblogs.com/cmyxn/p/7803117.html&quot; target=&quot;_blank&quot;&gt;可以点击这个链接去看一下上篇文章&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;首先回顾一下上一篇的思路：&lt;/p&gt;
&lt;p&gt; 　　1，微信的系统，提供生成带参数的二维码的接口，这个参数就是唯一值（场景值）&lt;br/&gt; 　　2，网站调用微信系统，获取生成的二维码图片&lt;br/&gt; 　　3，用户扫码会直接调用微信服务器，将用户访问微信服务器的信息记录到redis，key就是唯一值（场景值）&lt;br/&gt; 　　4，网站端做轮训去查询redis中是否有这个唯一值的数据，如果有就获取用户信息登录，没有就五秒一次轮训，登录后就不在做轮训（从二维码弹出之后开始做轮训，关闭二维码后停止轮训）&lt;/p&gt;
&lt;p&gt;　　 5，这里的唯一值是可以自己定义的，我用的是截取了几位的时间戳 &lt;/p&gt;
&lt;p&gt; 上述方案中，实现的难点在于微信服务器不能主动与网站进行通信，所以采用了网页端的轮训去做进行用户状态的查询，但是方案中4，网站端使用轮训去全局的redis缓存中查找用户信息，这样使用轮训无疑就会产生跟多的无用http请求，不仅增加了服务器的压力还浪费资源。&lt;/p&gt;
&lt;h3 class=&quot;postTitle&quot;&gt;优化方案&lt;/h3&gt;
&lt;p&gt;　　再次整理并且简化一下需要完成上述功能的实现要点：&lt;/p&gt;
&lt;p&gt;　　　　客户端（网站）与服务端（微信）的通信，并且需要服务器可以主动的推送消息到客户端（网站）&lt;/p&gt;

&lt;p&gt;　　要是实现客户端与服务器端的通信这个功能，常用的方式有两种：&lt;/p&gt;
&lt;p&gt;　　1，轮训（也就是上次方案中使用的方法）&lt;/p&gt;
&lt;p&gt;　　2，长连接&lt;/p&gt;

&lt;p&gt;　我使用的是利用websocket与服务器进行通信，而且websocket使用起来也非常方便，易上手&lt;/p&gt;
&lt;p&gt;　优化后的方案：&lt;/p&gt;
&lt;p&gt;　　 1，微信的系统，提供生成带参数的二维码的接口，这个参数就是唯一值（场景值）&lt;br/&gt; 　　2，网站调用微信系统，获取生成的二维码图片&lt;br/&gt; 　　3，用户扫码会直接调用微信服务器，然后将获取到的用户信息利用websocket发送给网站端&lt;br/&gt; 　　4，网站接受信息，并显示登陆&lt;/p&gt;

&lt;p&gt;　　
&lt;h3&gt;实现步骤&lt;/h3&gt;
&lt;/p&gt;
&lt;p&gt;　　1，首先打开一个页面首先需要与服务器端建立一个socket链接，要想每个页面与服务器端都建立一个链接，每个页面都需要一个唯一标识，这里我用的时间戳&lt;/p&gt;
&lt;p&gt;　　使用websocket建立一个连接很容易，代码如下&lt;/p&gt;
&lt;div readability=&quot;50.5&quot;&gt;　　　　
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
    var timestamp = &lt;span&gt;new&lt;/span&gt; Date().getTime() + &quot;&quot;&lt;span&gt;;
     timestamp &lt;/span&gt;= timestamp.substring(0, timestamp.length-3&lt;span&gt;);   
    var websocket &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断当前浏览器是否支持WebSocket&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; ('WebSocket'&lt;span&gt; in window) {
        websocket &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; WebSocket(&quot;ws://xxxx/wx/websocket/&quot;+&lt;span&gt;timestamp);
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
        alert(&lt;/span&gt;'当前浏览器  Not support websocket'&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接发生错误的回调方法&lt;/span&gt;
    websocket.onerror =&lt;span&gt; function () {

        console.log(&lt;/span&gt;&quot;WebSocket连接发生错误&quot;&lt;span&gt;);
    };

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接成功建立的回调方法&lt;/span&gt;
    websocket.onopen =&lt;span&gt; function () {
        
        console.log(&lt;/span&gt;&quot;WebSocket连接成功&quot;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;接收到消息的回调方法&lt;/span&gt;
    websocket.onmessage =&lt;span&gt; function (event) {
                jQuery(&lt;/span&gt;&quot;#username&quot;&lt;span&gt;).html(event.data);
        jQuery(&lt;/span&gt;&quot;#singup&quot;).css(&quot;display&quot;, &quot;none&quot;&lt;span&gt;);
        jQuery(&lt;/span&gt;&quot;#user&quot;&lt;span&gt;).show();
        jQuery(&lt;/span&gt;&quot;#singout&quot;&lt;span&gt;).show();
        layer.closeAll();
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接关闭的回调方法&lt;/span&gt;
    websocket.onclose =&lt;span&gt; function () {

        console.log(&lt;/span&gt;&quot;WebSocket连接关闭&quot;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。&lt;/span&gt;
    window.onbeforeunload =&lt;span&gt; function () {
        closeWebSocket();
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭WebSocket连接&lt;/span&gt;
&lt;span&gt;    function closeWebSocket() {
        websocket.close();
    }
        &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2，服务器端socket的建立，在建立socket链接的时候，将每个页面传过来的唯一标识{sceneId}与会话信息session进行绑定，可以使用map实现，这里用的ConcurrentMap&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * @ServerEndpoint 注解是一个类层次的注解，它的功能主要是将目前的类定义成一个websocket服务器端,
 * 注解的值将被用于监听用户连接的终端访问URL地址,客户端可以通过这个URL来连接到WebSocket服务器端
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@Component
@ServerEndpoint(&lt;/span&gt;&quot;/websocket/{sceneId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; WebSocketController {
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;静态变量，用来记录当前在线连接数。应该把它设计成线程安全的。&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; onlineCount = 0&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;concurrent包的线程安全Set，用来存放每个客户端对应的MyWebSocket对象。若要实现服务端与单一客户端通信的话，可以使用Map来存放，其中Key可以为用户标识
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;private static CopyOnWriteArraySet&amp;lt;WebSocketController&amp;gt; webSocketSet = new CopyOnWriteArraySet&amp;lt;WebSocketController&amp;gt;();&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ConcurrentMap&amp;lt;String,WebSocketController&amp;gt;  webSocketMap = &lt;span&gt;new&lt;/span&gt; ConcurrentHashMap&amp;lt;String,WebSocketController&amp;gt;&lt;span&gt;();
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;与某个客户端的连接会话，需要通过它来给客户端发送数据&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Session session;

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 连接建立成功调用的方法
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; session  可选的参数。session为与某个客户端的连接会话，需要通过它来给客户端发送数据
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @OnOpen
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onOpen(@PathParam(&quot;sceneId&quot;&lt;span&gt;) String sceneId,Session session){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.session =&lt;span&gt; session;
        webSocketMap.put(sceneId, &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;在线数加1&lt;/span&gt;
        System.out.println(&quot;唯一key为：&quot; +&lt;span&gt; sceneId);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 连接关闭调用的方法
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @OnClose
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; onClose(@PathParam(&quot;sceneId&quot;&lt;span&gt;) String sceneId){
        webSocketMap.remove(sceneId);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;从map中删除&lt;/span&gt;
&lt;span&gt;    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 收到客户端消息后调用的方法
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; message 客户端发送过来的消息
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; session 可选的参数
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @OnMessage
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onMessage(String message,Session session) {
        System.out.println(&lt;/span&gt;&quot;来自客户端的消息:&quot; +&lt;span&gt; message);

        JSONObject jsonobject &lt;/span&gt;=&lt;span&gt; JSONObject.fromObject(message);
        Hashtable params&lt;/span&gt;= (Hashtable)JSONObject.toBean(jsonobject,Hashtable.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;群发消息&lt;/span&gt;
        WebSocketController webSocketController = webSocketMap.get(params.get(&quot;equipmentType&quot;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            webSocketController.sendMessage((String)params.get(&lt;/span&gt;&quot;nickname&quot;&lt;span&gt;));
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
            e.printStackTrace();
        }
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 发生错误时调用
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; session
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; error
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @OnError
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onError(Session session, Throwable error){
        System.out.println(&lt;/span&gt;&quot;发生错误&quot;&lt;span&gt;);
        error.printStackTrace();
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 这个方法与上面几个方法不一样。没有用注解，是根据自己需要添加的方法。
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; message
     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; IOException
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; sendMessage(String message) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; IOException{
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.session.getBasicRemote().sendText(message);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;this.session.getAsyncRemote().sendText(message);&lt;/span&gt;
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3，微信端获取到用户信息后，调用socket，通过传过来的sceneId去map中获取session，之后将用户信息发送到网站&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件推送&lt;/span&gt;
            &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (msgType.equals(MessageUtil.REQ_MESSAGE_TYPE_EVENT)) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件类型&lt;/span&gt;
                String eventType = requestMap.get(&quot;Event&quot;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 关注&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (eventType.equals(MessageUtil.EVENT_TYPE_SUBSCRIBE)) {
                  &lt;/span&gt;&lt;span&gt;
                    String requestUrl &lt;/span&gt;= &quot;https://api.weixin.qq.com/cgi-bin/user/info?access_token=ACCESS_TOKEN&amp;amp;openid=OPENID&quot;&lt;span&gt;;
                    requestUrl &lt;/span&gt;= requestUrl.replace(&quot;ACCESS_TOKEN&quot;&lt;span&gt;, tokenService.getToken())
                            .replace(&lt;/span&gt;&quot;OPENID&quot;&lt;span&gt;, fromUserName);
                    JSONObject jsonObject &lt;/span&gt;= CommonUtil.httpsRequest(requestUrl, &quot;GET&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                    String nickname &lt;/span&gt;= jsonObject.getString(&quot;nickname&quot;&lt;span&gt;);
                    String address &lt;/span&gt;= jsonObject.getString(&quot;country&quot;)+&quot;-&quot;+jsonObject.getString(&quot;province&quot;)+&quot;-&quot;+jsonObject.getString(&quot;city&quot;&lt;span&gt;);
                    String headimgurl &lt;/span&gt;= jsonObject.getString(&quot;headimgurl&quot;&lt;span&gt;);
                    Hashtable params &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Hashtable();
                    params.put(&lt;/span&gt;&quot;phoneIme&quot;&lt;span&gt;, fromUserName);
                    params.put(&lt;/span&gt;&quot;state&quot;, 1&lt;span&gt;);
                    params.put(&lt;/span&gt;&quot;location&quot;&lt;span&gt;, address);
                    params.put(&lt;/span&gt;&quot;realName&quot;&lt;span&gt;, nickname);
                    
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(StringUtils.isNotBlank(eventKey)){
                        params.put(&lt;/span&gt;&quot;equipmentType&quot;, eventKey.replace(&quot;qrscene_&quot;, &quot;&quot;&lt;span&gt;));
                        HttpUtil.postRequest(Constant.getValue(&lt;/span&gt;&quot;UPDATE_USER&quot;&lt;span&gt;), params);
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;放到redis缓存中
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;redisCacheTool.setDataToRedis(eventKey.replace(&quot;qrscene_&quot;, &quot;&quot;), 3600, params);&lt;/span&gt;
&lt;span&gt;
                        params.put(&lt;/span&gt;&quot;nickname&quot;&lt;span&gt;, nickname);
                        JSONObject object &lt;/span&gt;=&lt;span&gt; JSONObject.fromObject(params);&lt;br/&gt;　　　　　　　　　　　　　　 //调用socket进行通信
                        webSocketController.onMessage(object.toString(), &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                        LOGGER.info(&lt;/span&gt;&quot;qrcode redis key ==&amp;gt; &quot;+eventKey.replace(&quot;qrscene_&quot;, &quot;&quot;&lt;span&gt;));

                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                        params.put(&lt;/span&gt;&quot;equipmentType&quot;, &quot;0&quot;&lt;span&gt;);
                        HttpUtil.postRequest(Constant.getValue(&lt;/span&gt;&quot;UPDATE_USER&quot;&lt;span&gt;), params);
                    }
                    
                }
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 取消关注&lt;/span&gt;
                &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (eventType.equals(MessageUtil.EVENT_TYPE_UNSUBSCRIBE)) {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO 取消订阅后用户不会再收到公众账号发送的消息，因此不需要回复&lt;/span&gt;
                    Hashtable params = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Hashtable();
                    params.put(&lt;/span&gt;&quot;phoneIme&quot;&lt;span&gt;, fromUserName);
                    params.put(&lt;/span&gt;&quot;state&quot;, 0&lt;span&gt;);
                    HttpUtil.postRequest(Constant.getValue(&lt;/span&gt;&quot;UPDATE_USER_ANS&quot;&lt;span&gt;), params);
                    
                }
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 扫描带参数二维码&lt;/span&gt;
                &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (eventType.toLowerCase().equals(MessageUtil.EVENT_TYPE_SCAN)) {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO 处理扫描带参数二维码事件&lt;/span&gt;
                
                    &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(StringUtils.isNotBlank(eventKey)){
                        
                        String requestUrl &lt;/span&gt;= &quot;https://api.weixin.qq.com/cgi-bin/user/info?access_token=ACCESS_TOKEN&amp;amp;openid=OPENID&quot;&lt;span&gt;;
                        
                        requestUrl &lt;/span&gt;= requestUrl.replace(&quot;ACCESS_TOKEN&quot;&lt;span&gt;, tokenService.getToken())
                                .replace(&lt;/span&gt;&quot;OPENID&quot;&lt;span&gt;, fromUserName);
                        JSONObject jsonObject &lt;/span&gt;= CommonUtil.httpsRequest(requestUrl, &quot;GET&quot;,&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                        String nickname &lt;/span&gt;= jsonObject.getString(&quot;nickname&quot;&lt;span&gt;);
                        String address &lt;/span&gt;= jsonObject.getString(&quot;country&quot;)+&quot;-&quot;+jsonObject.getString(&quot;province&quot;)+&quot;-&quot;+jsonObject.getString(&quot;city&quot;&lt;span&gt;);
                        String headimgurl &lt;/span&gt;= jsonObject.getString(&quot;headimgurl&quot;&lt;span&gt;);
                        Hashtable params &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Hashtable();
                        params.put(&lt;/span&gt;&quot;nickname&quot;&lt;span&gt;, nickname);
                        params.put(&lt;/span&gt;&quot;location&quot;&lt;span&gt;, address);
                        params.put(&lt;/span&gt;&quot;equipmentType&quot;&lt;span&gt;, eventKey);
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;放入缓存中
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;redisCacheTool.setDataToRedis(eventKey, 3600, params);&lt;/span&gt;
&lt;span&gt;                        
                        JSONObject object &lt;/span&gt;=&lt;span&gt; JSONObject.fromObject(params);&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　　　　　　　　　　 //调用socket进行通信&lt;/span&gt;　　
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　　　　　　　　　　 webSocketController.onMessage(object.toString(), &lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                        
                        LOGGER.info(&lt;/span&gt;&quot;qrcode redis key ==&amp;gt; &quot;+&lt;span&gt;eventKey);
                    }
                    &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4， 网站端获取用户信息，进行session的处理就可以了&lt;/p&gt;


&lt;p&gt;　最近网站问题有点多，改完bug，在写完这篇博客，一看时间已经快凌晨两点了，如果各位看客觉得写得还有意思，希望可以随手来个推荐。&lt;/p&gt;
&lt;p&gt;　不管了，去睡觉，在大事儿，也得明天说了，哈哈&lt;/p&gt;
&lt;/div&gt;

&lt;p class=&quot;postTitle&quot;&gt;　　&lt;/p&gt;
&lt;p class=&quot;postTitle&quot;&gt;　　　　&lt;/p&gt;
</description>
<pubDate>Sat, 11 Nov 2017 17:36:00 +0000</pubDate>
<dc:creator>陈明羽</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cmyxn/p/7814120.html</dc:identifier>
</item>
<item>
<title>两边宽度已知，如何让中间自适应 - 爱喝酸奶的吃货</title>
<link>http://www.cnblogs.com/yingzi1028/p/7820504.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yingzi1028/p/7820504.html</guid>
<description>&lt;p&gt;共有五种布局方式：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yingzi1028/p/7820504.html#float&quot;&gt;1.浮动布局&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yingzi1028/p/7820504.html#absolute&quot;&gt;2.绝对定位布局&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yingzi1028/p/7820504.html#flexbox&quot;&gt;3.flexbox布局&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yingzi1028/p/7820504.html#table&quot;&gt;4.表格（table）布局&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/yingzi1028/p/7820504.html#grid&quot;&gt;5.网格 （grid）布局&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1.浮动布局&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;页面布局/两边宽度已知，如何让中间自适应&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    html * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left,
    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; pink&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #3FE5F0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 浮动布局 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;section &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;layout float&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; media&lt;/span&gt;&lt;span&gt;=&quot;screen&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .layout.float .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; left&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.float .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            float&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; right&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;article &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left-right-center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;浮动解决方案&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 1.这是一个三栏浮动布局的中间部分 2.这是一个三栏浮动布局的中间部分 3.这是一个三栏浮动布局的中间部分
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;article&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;section&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.绝对定位布局&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;页面布局/两边宽度已知，如何让中间自适应&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    html * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left,
    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; pink&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #3FE5F0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 绝对定位解决方案 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;section &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;layout absolute&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; media&lt;/span&gt;&lt;span&gt;=&quot;screen&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .layout.absolute .left-center-right&amp;gt;div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; absolute&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.absolute .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.absolute .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.absolute .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            right&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;article &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left-center-right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;绝对定位解决方案&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 1.这是一个三栏绝对定位布局中间部分 2.这是一个三栏绝对定位布局中间部分 3.这是一个三栏绝对定位布局中间部分
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;article&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;section&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3.flexbox布局&lt;/h2&gt;
&lt;p&gt;flexbox布局教程：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html&quot;&gt;Flex 布局教程：语法篇&lt;/a&gt;  、&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/07/flex-examples.html&quot;&gt;Flex 布局教程：实例篇&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;页面布局/两边宽度已知，如何让中间自适应&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    html * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left,
    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; pink&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #3FE5F0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; flexbox 解决方案 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;section &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;layout flexbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; media&lt;/span&gt;&lt;span&gt;=&quot;screen&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .layout.flexbox &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.flexbox .left-center-right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; flex&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.flexbox .left-center-right .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            flex&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;article &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left-center-right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;flexbox解决方案&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 1.这是一个三栏flexbox布局中间部分 2.这是一个三栏flexbox布局中间部分 3.这是一个三栏flexbox布局中间部分
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;article&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;section&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4.表格（table）布局&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/haoqipeng/p/html-display-table.html&quot;&gt;基于CSS属性display:table的表格布局的使用&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;页面布局/两边宽度已知，如何让中间自适应&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    html * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left,
    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; pink&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #3FE5F0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 表格解决方案 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;section &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;layout table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; media&lt;/span&gt;&lt;span&gt;=&quot;screen&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .layout.table .left-center-right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; table&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

        .layout.table .left-center-right&amp;gt;div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; table-cell&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;article &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left-center-right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;表格解决方案&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 1.这是一个三栏表格布局中间部分 2.这是一个三栏表格布局中间部分 3.这是一个三栏表格布局中间部分
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;article&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;section&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5.网格 （grid）布局&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;link_title&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/ceshi986745/article/details/51733383&quot;&gt;CSS Grid布局指南&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;utf-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;页面布局/两边宽度已知，如何让中间自适应&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    html * &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        padding&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
        margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        margin-top&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout div &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        min-height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left,
    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .left &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; pink&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; orange&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;&lt;span&gt;

    .layout .center &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
        background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #3FE5F0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 网格布局 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;section &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;layout grid&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; media&lt;/span&gt;&lt;span&gt;=&quot;screen&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .layout.grid .left-center-right &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;
            display&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; grid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
            grid-template-rows&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 行高 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            grid-template-columns&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 300px auto 300px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
            &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; 我们需要三列，左右两列各300px，中间自适应 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;article &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left-center-right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;left&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;网格布局解决方案&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 1.这是一个三栏网格布局中间部分 2.这是一个三栏网格布局中间部分 3.这是一个三栏网格布局中间部分
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;right&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;article&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;section&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sat, 11 Nov 2017 17:07:00 +0000</pubDate>
<dc:creator>爱喝酸奶的吃货</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yingzi1028/p/7820504.html</dc:identifier>
</item>
<item>
<title>Python：生成器 - gregory2017</title>
<link>http://www.cnblogs.com/gregoryli/p/7820433.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/gregoryli/p/7820433.html</guid>
<description>&lt;p&gt; 生成器算得上是Python语言中最吸引人的特性之一，生成器其实是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写 __iter__() 和 __next__() 方法了，只需要一个 yiled 关键字。 &lt;/p&gt;
&lt;p&gt;首先迭代提供的嵌套列表中的所有字列表，然后按顺序迭代自列表中的元素。任何包含yield语句的函数称为生成器。除了名字不同意外，它的行为和普通函数也有很大的差别，这就在于它不像return那样返回值，而是每次产生多个值。每次产生一个值（使用yield语句），函数就会被冻结：&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;即函数停在那点等待被激活，函数被激活后就从停止的那点开始执行&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
nested=[[1,2],[3,4],[5&lt;span&gt;]]
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; flatten(nested):
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; sublist &lt;span&gt;in&lt;/span&gt;&lt;span&gt; nested:
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; element &lt;span&gt;in&lt;/span&gt;&lt;span&gt; sublist:
            &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;&lt;span&gt; element

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; num &lt;span&gt;in&lt;/span&gt;&lt;span&gt; flatten(nested):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(num)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(list(flatten(nested)))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;[1, 2, 3, 4, 5]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;span&gt;生成器两种创建方式&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.(x*2 for x in range(3))&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; a=[x*2 for x in range(1000000)]#不要试，死机&lt;/span&gt;
s=(x*2 &lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt; range(3&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(s)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;generator object &amp;lt;genexpr&amp;gt; at 0x00000203201E6938&amp;gt;&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(next(s)) &lt;span&gt;#&lt;/span&gt;&lt;span&gt;等价于print(s.__next__()),in Py2: s.next()&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(next(s))&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(next(s))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(next(s))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;StopIteration&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 生成器就是一个可迭代对象（iterable）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;br/&gt;&lt;span&gt;2.yield 生成器对象&lt;br/&gt;&lt;/span&gt;&lt;span&gt;生成器是一个包含yield关键字的函数。当它被调用时，在函数体中的代码不会执行，而会返回一个迭代器。每次请求一个值，就会执行生成器中的代码，知道遇到yield或者return语句。&lt;/span&gt;&lt;p&gt;&lt;span&gt;yield语句意味着应该生成一个值，return语句意味着生成器要停止执行（不再生成任何东西，return语句只有在一个生成器中使用时才能进行无参数调用），换句话说生成器又两部分组成：生成器的函数和生成器的迭代器生成器的函数使用def语句定义，包含yield，生成器的迭代器是这个函数返回的部分。&lt;/span&gt;
&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;按一种不是很准确的说法，两个实体经常被当做一个，合起来叫做生成器。生成器函数跟普通函数只有一点不一样，就是把 return 换成yield,其中yield是一个语法糖，内部实现了迭代器协议，同时保持状态可以挂起。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; foo():
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Hello world&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; 1
    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; 2&lt;span&gt;
foo()&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成器对象，不会执行代码&lt;/span&gt;
g=&lt;span&gt;foo()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(g)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;generator object foo at 0x00000230A33569E8&amp;gt;&lt;/span&gt;
next(g) &lt;span&gt;#&lt;/span&gt;&lt;span&gt;Hello world&lt;/span&gt;
next(g) &lt;span&gt;#&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; next(g)#StopIteration&lt;/span&gt;

&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; foo():&lt;span&gt;#&lt;/span&gt;&lt;span&gt;遍历可迭代对象,对象拥有iter方法&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(i)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;Hello world&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 1&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; ok&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用生成器来实现斐波那契数列的例子：一&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; fib(max):
    n, a, b &lt;/span&gt;= 0, 0, 1
    &lt;span&gt;while&lt;/span&gt; n &amp;lt;&lt;span&gt; max:
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(b)&lt;/span&gt;
        &lt;span&gt;yield&lt;/span&gt;&lt;span&gt; b
        a, b &lt;/span&gt;= b, a +&lt;span&gt; b
        n &lt;/span&gt;= n + 1
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

f&lt;/span&gt;=fib(6&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(f)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;generator object fib at 0x0000025839E56990&amp;gt;&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt;这里，最难理解的就是generator和函数的执行流程不一样。&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 函数是顺序执行，遇到return语句或者最后一行函数语句就返回。&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 而变成generator的函数，在每次调用next()的时候执行，遇到yield语句返回，&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 再次执行时从上次返回的yield语句处继续执行。&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(f.&lt;span&gt;__next__&lt;/span&gt;&lt;span&gt;())
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(f.&lt;span&gt;__next__&lt;/span&gt;&lt;span&gt;())
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;________*****______&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(f.&lt;span&gt;__next__&lt;/span&gt;&lt;span&gt;())
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(f.&lt;span&gt;__next__&lt;/span&gt;&lt;span&gt;())
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(f.&lt;span&gt;__next__&lt;/span&gt;())&lt;br/&gt;结果：
&lt;/pre&gt;
&lt;p&gt;1&lt;br/&gt;1&lt;br/&gt;________*****______&lt;br/&gt;2&lt;br/&gt;3&lt;br/&gt;5&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;二&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; fib(max):
    n, a, b &lt;/span&gt;= 0, 0, 1
    &lt;span&gt;while&lt;/span&gt; n &amp;lt;&lt;span&gt; max:
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(b)&lt;/span&gt;
        &lt;span&gt;yield&lt;/span&gt;&lt;span&gt; b
        a, b &lt;/span&gt;= b, a +&lt;span&gt; b
        n &lt;/span&gt;= n + 1
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;done&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;

f&lt;/span&gt;=fib(6&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
        x&lt;/span&gt;=&lt;span&gt;next(f)
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;f:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,x)
    &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; StopIteration as e:
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Generator return value:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,e.value)
        &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;结果&lt;/span&gt;
f: 1&lt;span&gt;
f: &lt;/span&gt;1&lt;span&gt;
f: &lt;/span&gt;2&lt;span&gt;
f: &lt;/span&gt;3&lt;span&gt;
f: &lt;/span&gt;5&lt;span&gt;
f: &lt;/span&gt;8&lt;span&gt;
Generator &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; value: done
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;p0&quot;&gt;生成器新属性是在开始运行后为生成器提供值的能力。表现为生成器和“外部世界”进行交流的渠道：&lt;/p&gt;
&lt;ul&gt;&lt;li class=&quot;p0&quot;&gt;外部作用域访问生成器的send方法，就像访问next 方法一样，只不过前者使用一个参数（发送的“消息”---任意对象）&lt;/li&gt;
&lt;li class=&quot;p0&quot;&gt;在内部则挂起生成器，yield现在作为表达式而不是语句使用，换句话说，当生成器重新运行的时候，yield方法返回一个值，也就是外部通过send方法发送的值。如果next 方法被使用，那么yield方法返回None. &lt;/li&gt;
&lt;li class=&quot;p0&quot;&gt; throw方法（使用异常类型调用，还有可选的值以及回溯对象）用于在生成器内引发一个异常（在yield表达式中）&lt;/li&gt;
&lt;li class=&quot;p0&quot;&gt;close 方法（调用时不用参数）用于停止生成器。&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;def&lt;span&gt; bar():&lt;/span&gt;&lt;/em&gt;&lt;/em&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ok1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    count&lt;/span&gt;=&lt;span&gt;yield&lt;/span&gt; 1
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(count)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; 2&lt;span&gt;
b&lt;/span&gt;=&lt;span&gt;bar()
next(b)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; s=b.send(None)#next(b) 第一次send前如果没有next，只能传一个send（None）&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; print(s)&lt;/span&gt;
ret=b.send(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;eee&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(ret)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; b.send('fff')&lt;p&gt;结果：&lt;br/&gt;&lt;/p&gt;&lt;/span&gt;&lt;/em&gt;
&lt;/pre&gt;
&lt;p&gt;ok1&lt;br/&gt;eee&lt;br/&gt;2&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;send工作方法&lt;br/&gt;def&lt;/span&gt;&lt;span&gt; f():
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    s&lt;/span&gt;=&lt;span&gt;yield&lt;/span&gt; 7
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(s)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; 8&lt;span&gt;

f&lt;/span&gt;=&lt;span&gt;f()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(f.send(None))
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ok&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(next(f))
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; None&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt;print(f.send(None))等同于print(next(f)),执行流程:打印ok,yield7,当再next进来时:将None赋值给s,然后返回8,可以通过断点来观察&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;吃包子案例&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; time
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; consumer(name):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s 准备吃包子啦!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;name)
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
       baozi &lt;/span&gt;= &lt;span&gt;yield&lt;/span&gt;
       &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;包子[%s]来了,被[%s]吃了!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;(baozi,name))
        
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; producer(name):
    c &lt;/span&gt;= consumer(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成器对象&lt;/span&gt;
    c2 = consumer(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成器对象&lt;/span&gt;
    c.&lt;span&gt;__next__&lt;/span&gt;()&lt;span&gt;#&lt;/span&gt;&lt;span&gt;执行生成器&lt;/span&gt;
    c2.&lt;span&gt;__next__&lt;/span&gt;&lt;span&gt;()
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s开始准备做包子啦!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;name)
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(1,6,2&lt;span&gt;):
        time.sleep(&lt;/span&gt;1&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;做了2个包子!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
        c.send(i)
        c2.send(i&lt;/span&gt;+1&lt;span&gt;)
        
producer(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;greg&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;协程应用：&lt;/p&gt;
&lt;p&gt;      所谓协同程序也就是是可以挂起，恢复，有多个进入点。其实说白了，也就是说多个函数可以同时进行，可以相互之间发送消息等。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; queue
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; tt():
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt; range(3&lt;span&gt;):
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;tt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;+&lt;span&gt;str(x) )
        &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;

&lt;span&gt;def&lt;/span&gt;&lt;span&gt; gg():
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt; range(3&lt;span&gt;):
        &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;xx&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;+&lt;span&gt;str(x) )
        &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Task():
    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self):
        self._queue &lt;/span&gt;=&lt;span&gt; queue.Queue()

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; add(self,gen):
        self._queue.put(gen)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; run(self):
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; self._queue.empty():
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; range(self._queue.qsize()):
                &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
                    gen&lt;/span&gt;=&lt;span&gt; self._queue.get()
                    gen.send(None)
                &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt; StopIteration:
                    &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;
                &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                    self._queue.put(gen)

t&lt;/span&gt;=&lt;span&gt;Task()
t.add(tt())
t.add(gg())
t.run()
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; tt0&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; xx0&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; tt1&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; xx1&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; tt2&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; xx2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 11 Nov 2017 15:56:00 +0000</pubDate>
<dc:creator>gregory2017</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/gregoryli/p/7820433.html</dc:identifier>
</item>
<item>
<title>Android studio安装与配置 - 独王</title>
<link>http://www.cnblogs.com/xiadewang/p/7820377.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiadewang/p/7820377.html</guid>
<description>&lt;p&gt;1、首先下载Android studio安装包，可以从&lt;a href=&quot;http://www.android-studio.org/%E4%B8%8B%E8%BD%BD%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%EF%BC%8C%E8%BF%99%E9%87%8C%E9%87%87%E7%94%A83.0%E7%89%88%E6%9C%AC%E8%BF%9B%E8%A1%8C%E6%BC%94%E7%A4%BA%EF%BC%8C%E5%AF%B9%E5%BA%94%E5%AE%89%E8%A3%85%E5%8C%85%E4%B8%BAandroid-studio-ide-171.4408382-windows.exe&quot;&gt;http://www.android-studio.org/下载最新版本，这里采用3.0版本进行演示，对应安装包为android-studio-ide-171.4408382-windows.exe&lt;/a&gt;，安装包大小681 MB，安装包不带SDK&lt;/p&gt;


&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231536841-252934706.png&quot; alt=&quot;&quot; width=&quot;624&quot; height=&quot;525&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2、下载好该安装包之后，点击进行安装，依次出现以下界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231625950-2062278670.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231657903-64000800.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231711919-54401756.png&quot; alt=&quot;&quot;/&gt;  &lt;/p&gt;
&lt;p&gt;在这里自己选择程序安装路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231759856-1267892948.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231811466-1742785898.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111231820528-1221556260.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232042481-1330170635.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里Android studio程序安装完毕，但是还需要继续对其进行配置；勾选Start Android Studio，然后点击finish启动AS，出现下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232111919-672018704.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;




&lt;p&gt;选择第二项，然后点击ok，出现下面的启动界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232131684-65108139.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在启动的时候会弹出下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232147950-1605880221.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击cancel，然后进入到了AS的安装向导界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232206841-1950207162.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击next进入UI界面主题选择界面，可以选择自己喜欢的风格，这里选择Darcula风格&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232225013-1508764848.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232243825-458379470.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里需要指定SDK的本地路径，如果之前电脑中已经存在SDK，可以指定该路径，后续就可以不用下载SDK；我这里演示本地没有安装过SDK的场景，这里暂时可以指定一个后续将保存SDK的路径；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232301684-1120408845.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232324669-1402743307.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击Finish后，开始自动下载SDK（注意，此时需要保证电脑联网）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232343122-133023002.png&quot; alt=&quot;&quot; width=&quot;615&quot; height=&quot;461&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232401872-687804195.png&quot; alt=&quot;&quot; width=&quot;618&quot; height=&quot;462&quot;/&gt;&lt;/p&gt;



&lt;p&gt;下载完成SDK后，点击Finish进入AS的欢迎界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232447575-43461062.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3、配置AS第一次运行环境，并且能成功编译运行一个APP，以helloworld为例。&lt;/p&gt;
&lt;p&gt;点击上图中的Start a new Android Studio project新建一个工程，进入下面的界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232509653-367356961.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232521481-194431519.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232529153-450261890.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232539122-1426892596.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232546981-1498506635.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到此，一个工程建立完成，第一次建立的工程会发现卡在下面的启动界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232602622-2106064754.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一次建立工程卡在该界面的时候，是因为在从网上下载gradle构建工具，由于从国外站点下载，网速很慢，这里点击取消关闭该界面，采用手动配置gradle；&lt;/p&gt;
&lt;p&gt;首先找到.gradle文件夹的路径，一般是在用户账号文件夹下，比如我这里是C:\Users\issuser\.gradle&lt;/p&gt;
&lt;p&gt;会发现该文件夹下生成了下图中的文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232640731-536724217.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;这里的gradle-4.1,指的是版本，它会根据你的AS版本自动生成，此时我们可以去网上下载一个gradle-4.1-all.zip压缩包，然后放到该路径下并且进行解压，注意一定要放到这个随机生成的一长串字符的文件夹下面，如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232703638-1101875301.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232713294-1387011987.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
此时点击图中下方的链接进行&lt;span lang=&quot;EN-US&quot;&gt;SDK下载，这里可能一次下载之后，执行&lt;span lang=&quot;EN-US&quot;&gt;Try again之后这里还是会显示报错，那么就再点击下载一次，然后再点击&lt;span lang=&quot;EN-US&quot;&gt;Try again，直到报错解除。（除了该解决办法，还可以手动更改&lt;span lang=&quot;EN-US&quot;&gt;build.gradle文件中的&lt;span lang=&quot;EN-US&quot;&gt;compileSdkVersion，&lt;span lang=&quot;EN-US&quot;&gt;buildToolsVersion&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span lang=&quot;EN-US&quot;&gt;targetSdkVersion为对应的&lt;span lang=&quot;EN-US&quot;&gt;27也可以进行解决，这个后续再讲）&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232746841-673079056.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232752747-1097539050.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232805153-1234890467.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232828091-429636493.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上述gradle构建完成之后，就可以点击下图中的build apk编译打包apk文件了，生成的apk文件路径如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232849622-1383854035.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;生成apk文件之后，导出该apk文件到模拟器或者真机上面进行安装，运行效果图如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/890216/201711/890216-20171111232909059-1462861577.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;




&lt;p&gt;至此，Android Studio的安装以及开发环境就配置好了。&lt;/p&gt;



</description>
<pubDate>Sat, 11 Nov 2017 15:31:00 +0000</pubDate>
<dc:creator>独王</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiadewang/p/7820377.html</dc:identifier>
</item>
<item>
<title>消息中间件ActiveMQ及Spring整合JMS的介绍 - 兮夜那么美</title>
<link>http://www.cnblogs.com/likemebee/p/activeMQ.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/likemebee/p/activeMQ.html</guid>
<description>&lt;h2&gt;1.1 消息中间件&lt;/h2&gt;
&lt;h3&gt;1.1.1 什么是消息中间件&lt;/h3&gt;
&lt;p&gt;消息中间件利用高效可靠的消息传递机制进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。通过提供消息传递和消息排队模型，它可以在分布式环境下扩展进程间的通信。对于消息中间件，常见的角色大致也就有Producer（生产者）、Consumer（消费者）&lt;/p&gt;
&lt;p&gt;常见的消息中间件产品：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（&lt;/strong&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;strong&gt;）&lt;/strong&gt;&lt;strong&gt;ActiveMQ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ActiveMQ 是Apache出品，最流行的，能力强劲的开源消息总线。ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现。这里介绍的是ActiveMQ的使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）RabbitMQ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AMQP协议的领导实现，支持多种场景。淘宝的MySQL集群内部有使用它进行通讯，OpenStack开源云平台的通信组件，最先在金融行业得到运用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）ZeroMQ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;史上最快的消息队列系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（4）Kafka&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache下的一个子项目 。特点：高吞吐，在一台普通的服务器上既可以达到10W/s的吞吐速率；完全的分布式系统。适合处理海量数据。&lt;/p&gt;
&lt;h3&gt;1.1.2 使用&lt;strong&gt;ActiveMQ的场景&lt;/strong&gt;&lt;/h3&gt;
&lt;ol readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;进程间通讯，比如在分布式系统中。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;解耦，比如像我们公司有许多开发团队，每个团队负责业务的不同模块，各个开发团队可以使用MQ来通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在一些高并发场景下，使用MQ的异步特性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(欢迎补充)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt; 1.2 JMS简介&lt;/h2&gt;
&lt;h3&gt;1.2.1什么是JMS&lt;/h3&gt;
&lt;p&gt;　　&lt;strong&gt;JMS（Java Messaging Service）是Java平台上有关面向消息中间件的技术规范，&lt;/strong&gt;它便于消息系统中的Java应用程序进行消息交换,并且通过提供标准的产生、发送、接收消息的接口简化企业应用的开发。&lt;/p&gt;
&lt;p&gt;       JMS本身只定义了一系列的接口规范，是一种与厂商无关的 API，用来访问消息收发系统。它类似于 JDBC(Java Database Connectivity)：这里，JDBC 是可以用来访问许多不同关系数据库的 API，而 JMS 则提供同样与厂商无关的访问方法，以访问消息收发服务。许多厂商目前都支持 JMS，包括 IBM 的 MQSeries、BEA的 Weblogic JMS service和 Progress 的 SonicMQ，这只是几个例子。 JMS 使您能够通过消息收发服务（有时称为消息中介程序或路由器）从一个 JMS 客户机向另一个 JML 客户机发送消息。消息是 JMS 中的一种类型对象，由两部分组成：报头和消息主体。报头由路由信息以及有关该消息的元数据组成。消息主体则携带着应用程序的数据或有效负载。&lt;/p&gt;
&lt;p&gt;JMS 定义了五种不同的消息正文格式，以及调用的消息类型，允许你发送并接收以一&lt;/p&gt;
&lt;p&gt;些不同形式的数据，提供现有消息格式的一些级别的兼容性。&lt;/p&gt;
&lt;p&gt;· TextMessage--一个字符串对象&lt;/p&gt;
&lt;p&gt;· MapMessage--一套名称-值对&lt;/p&gt;
&lt;p&gt;· ObjectMessage--一个序列化的 Java 对象&lt;/p&gt;
&lt;p&gt;· BytesMessage--一个字节的数据流&lt;/p&gt;
&lt;p&gt;· StreamMessage -- Java 原始值的数据流&lt;/p&gt;
&lt;h3&gt;1.2.2 JMS消息传递类型&lt;/h3&gt;
&lt;p&gt;对于消息的传递有两种类型：&lt;/p&gt;
&lt;p&gt;一种是点对点的，即一个生产者和一个消费者一一对应；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112001438763-1521075414.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;另一种是发布//订阅模式，即一个生产者产生消息并进行发送后，可以由多个消费者进行接收。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112001516138-1675265013.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;1.3ActiveMQ下载与安装&lt;/h2&gt;
&lt;h3&gt;1.3.1下载&lt;/h3&gt;
&lt;p&gt;官方网站下载：&lt;a href=&quot;http://activemq.apache.org/&quot; target=&quot;http://www.cnblogs.com/xwdreamer/archive/2012/02/21/_blank&quot;&gt;http://activemq.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;1.3.2安装（Linux）&lt;/h3&gt;
&lt;p&gt;（1）将apache-activemq-5.12.0-bin.tar.gz 上传至服务器【将安装包移动到所有软件安装目录(个人习惯)  /export/software】&lt;/p&gt;
&lt;p&gt;（2）解压此文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; tar  -zxvf  apache-activemq-&lt;span&gt;5.12&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;-bin.tar.gz -C /export/servers
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）为apache-activemq-5.12.0目录赋权&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; chmod &lt;span&gt;777&lt;/span&gt; apache-activemq-&lt;span&gt;5.12&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;（4）&lt;/span&gt;&lt;span&gt;进入&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;apache-activemq-5.12.0\bin&lt;/span&gt;&lt;span&gt;目录&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;（5）&lt;/span&gt;&lt;span&gt;赋与执行权限&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; chmod &lt;span&gt;755&lt;/span&gt; activemq 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Linux下赋值权限的介绍：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_c108e9c4-aafb-4104-b08c-2dcf599e2fe0&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c108e9c4-aafb-4104-b08c-2dcf599e2fe0&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c108e9c4-aafb-4104-b08c-2dcf599e2fe0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;linux 命令chmod 755的意思
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;chmod是Linux下设置文件权限的命令，后面的数字表示不同用户或用户组的权限。
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;一般是三个数字：
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;第一个数字表示文件所有者的权限
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;第二个数字表示与文件所有者同属一个用户组的其他用户的权限
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;第三个数字表示其它用户组的权限。
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;       权限分为三种：读（r=&lt;span&gt;4&lt;/span&gt;），写（w=&lt;span&gt;2&lt;/span&gt;），执行（x=&lt;span&gt;1&lt;/span&gt;） 。 综合起来还有可读可执行（rx=&lt;span&gt;5&lt;/span&gt;=&lt;span&gt;4&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;）、可读可写（rw=&lt;span&gt;6&lt;/span&gt;=&lt;span&gt;4&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;）、可读可写可执行(rwx=&lt;span&gt;7&lt;/span&gt;=&lt;span&gt;4&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)。
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;       所以，chmod &lt;span&gt;755&lt;/span&gt;&lt;span&gt; 设置用户的权限为： 
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;.文件所有者可读可写可执行                                    --&lt;span&gt;7&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;.与文件所有者同属一个用户组的其他用户可读可执行 --&lt;span&gt;5&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;.其它用户组可读可执行                                          --&lt;span&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.3.3&lt;/span&gt;&lt;span&gt;启动&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  ./activemq start
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;出现下列提示表示成功！&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112002806263-1734699817.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt; &lt;/p&gt;
&lt;p&gt;我的服务器地址是192.168.75.14，&lt;span&gt;打开浏览器输入地址&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://192.168.25.129:8161/&quot;&gt;http://192.168.75.14:8161/&lt;/a&gt;&lt;/span&gt; 即可进入&lt;span lang=&quot;EN-US&quot;&gt;ActiveMQ&lt;/span&gt;管理页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112003001434-1434763566.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;点击进入管理页面&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112003108575-1545073071.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;输入用户名和密码&lt;span lang=&quot;EN-US&quot;&gt; &lt;/span&gt; 均为 &lt;span lang=&quot;EN-US&quot;&gt;admin &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112003248028-2039922829.png&quot; alt=&quot;&quot; width=&quot;734&quot; height=&quot;273&quot;/&gt;&lt;/p&gt;
&lt;p&gt;进入主界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112003336278-1765806118.png&quot; alt=&quot;&quot; width=&quot;728&quot; height=&quot;611&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击进入消息列表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112003656544-618027346.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;列表各列信息含义如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a title=&quot;Click to sort&quot; href=&quot;http://192.168.25.135:8161/admin/queues.jsp&quot;&gt;Number Of Pending Messages&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;等待消费的消息 这个是当前未出队列的数量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a title=&quot;Click to sort&quot; href=&quot;http://192.168.25.135:8161/admin/queues.jsp&quot;&gt;Number Of Consumers&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;  &lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;消费者 这个是消费者端的消费者数量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a title=&quot;Click to sort&quot; href=&quot;http://192.168.25.135:8161/admin/queues.jsp&quot;&gt;Messages Enqueued&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;  &lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;进入队列的消息  进入队列的总数量,包括出队列的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a title=&quot;Click to sort&quot; href=&quot;http://192.168.25.135:8161/admin/queues.jsp&quot;&gt;Messages Dequeued&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;  &lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;出了队列的消息  可以理解为是消费这消费掉的数量。&lt;/p&gt;

&lt;h2&gt;2.1点对点模式&lt;/h2&gt;
&lt;p&gt;点对点的模式主要建立在一个队列上面，当连接一个列队的时候，发送端不需要知道接收端是否正在接收，可以直接向ActiveMQ发送消息，发送的消息，将会先进入队列中，如果有接收端在监听，则会发向接收端，如果没有接收端接收，则会保存在activemq服务器，直到接收端接收消息，点对点的消息模式可以有多个发送端，多个接收端，但是一条消息，只会被一个接收端给接收到，哪个接收端先连上ActiveMQ，则会先接收到，而后来的接收端则接收不到那条消息。&lt;/p&gt;
&lt;h3&gt;2.1.1消息生产者&lt;/h3&gt;
&lt;p&gt;（1）创建工程jmsDemo ，引入依赖&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;31.5&quot;&gt;&lt;img id=&quot;code_img_closed_2b024932-5a4f-497f-991e-9858a4046652&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2b024932-5a4f-497f-991e-9858a4046652&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2b024932-5a4f-497f-991e-9858a4046652&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
     &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.activemq&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;activemq-client&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;&lt;span&gt;5.13&lt;/span&gt;.&lt;span&gt;4&lt;/span&gt;&amp;lt;/version&amp;gt;
     &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;（2）创建类QueueProducer  main方法代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_3d8bdc4f-4175-4411-bdec-66d21c636e73&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3d8bdc4f-4175-4411-bdec-66d21c636e73&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3d8bdc4f-4175-4411-bdec-66d21c636e73&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;1.创建连接工厂&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;         ConnectionFactory connectionFactory = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tcp://192.168.75.14:61616&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;2.获取连接&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         Connection connection =&lt;span&gt; connectionFactory.createConnection();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;3.启动连接&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        connection.start();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;4.获取session(参数1：是否启动事务,参数2：消息确认模式)&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         Session session = connection.createSession(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,Session.AUTO_ACKNOWLEDGE);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;5.创建队列对象&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         Queue queue = session.createQueue(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;test-queue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;6.创建消息生产者&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         MessageProducer producer =&lt;span&gt; session.createProducer(queue);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;7.创建消息&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         TextMessage textMessage = session.createTextMessage(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;欢迎来到activeMQ的世界!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;8.发送消息&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        producer.send(textMessage);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;9.关闭资源&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;        producer.close();
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        session.close();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         connection.close();
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;上述代码中第4步创建session  的两个参数：&lt;/p&gt;
&lt;p&gt;第1个参数 是否使用事务&lt;/p&gt;
&lt;p&gt;第2个参数 消息的确认模式&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AUTO_ACKNOWLEDGE = 1    自动确认&lt;/li&gt;
&lt;li&gt;CLIENT_ACKNOWLEDGE = 2    客户端手动确认   &lt;/li&gt;
&lt;li&gt;DUPS_OK_ACKNOWLEDGE = 3    自动批量确认&lt;/li&gt;
&lt;li&gt;SESSION_TRANSACTED = 0    事务提交并确认&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;MsoNormal&quot;&gt; 运行后通过ActiveMQ管理界面查询&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112004145622-2019507955.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.1.2消息消费者&lt;/h3&gt;
&lt;p&gt;创建类QueueConsumer ，main方法代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_756cc8e5-3aca-40af-a0cf-aa79ad872927&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_756cc8e5-3aca-40af-a0cf-aa79ad872927&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_756cc8e5-3aca-40af-a0cf-aa79ad872927&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;1.创建连接工厂&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt;         ConnectionFactory connectionFactory = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tcp://192.168.75.14:61616&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;2.获取连接&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;         Connection connection =&lt;span&gt; connectionFactory.createConnection();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;3.启动连接&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        connection.start();
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;4.获取session(参数1：是否启动事务,参数2：消息确认模式)&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         Session session = connection.createSession(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,Session.AUTO_ACKNOWLEDGE);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;5.创建队列对象&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         Queue queue = session.createQueue(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;test-queue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;6.创建消息消费&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;         MessageConsumer consumer =&lt;span&gt; session.createConsumer(queue);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;7.监听消息&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         consumer.setMessageListener(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; MessageListener() {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; onMessage(Message message) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;                 TextMessage textMessage =&lt;span&gt; (TextMessage) message;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;                 &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                     System.&lt;span&gt;out&lt;/span&gt;.println(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;接收到消息：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+&lt;span&gt;textMessage.getText());
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                 } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (JMSException e) {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;                    e.printStackTrace();
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;8.等待键盘输入&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         System.&lt;span&gt;in&lt;/span&gt;&lt;span&gt;.read();    
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;9.关闭资源&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;        consumer.close();
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;        session.close();
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;        connection.close();
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;执行后看到控制台输出&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1275464/201711/1275464-20171112004439966-988390909.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.1.3运行测试&lt;/h3&gt;
&lt;p&gt;同时开启2个以上的消费者，再次运行生产者，观察每个消费者控制台的输出，会发现只有一个消费者会接收到消息。&lt;/p&gt;

&lt;p class=&quot;MsoNormal&quot;&gt; &lt;/p&gt;

</description>
<pubDate>Sat, 11 Nov 2017 15:28:00 +0000</pubDate>
<dc:creator>兮夜那么美</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/likemebee/p/activeMQ.html</dc:identifier>
</item>
<item>
<title>全球领先的redis客户端：SFedis - 周游(Michael Chow)</title>
<link>http://www.cnblogs.com/naturemickey/p/7820252.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/naturemickey/p/7820252.html</guid>
<description>[unable to retrieve full-text content]零、背景 这个客户端起源于我们一个系统的生产问题。 一、问题的发生 在我们的生产环境上发生了两次redis服务端连接数达到上限（我们配置的单节点连接数上限为8000）导致无法创建连接的情况。由于这个系统生产环境的redis集群的tps达到百万级，所以发生了这个情况的后果是非常严重的，有的业务会发生缓</description>
<pubDate>Sat, 11 Nov 2017 14:39:00 +0000</pubDate>
<dc:creator>周游(Michael Chow)</dc:creator>
<dc:identifier>http://www.cnblogs.com/naturemickey/p/7820252.html</dc:identifier>
</item>
<item>
<title>初识React-Redux之粗暴理解入门 - 大兄弟竹子</title>
<link>http://www.cnblogs.com/joeymary/p/7820047.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/joeymary/p/7820047.html</guid>
<description>&lt;h2 id=&quot;权当暂记&quot;&gt;权当暂记&lt;/h2&gt;
&lt;p&gt;    日后再行补充完善，若有阅读者，请翻到下文黄色标题‘从这里开始’起阅读。本文以一个最简单的demo进行注释性理解，全部拷贝下去，就能运行的一个demo。&lt;br/&gt;    Rudex在我看来最本质做的事情就是将所有的State属性统一存储（一个属性就是一个注册到store的Reducer），然后用户触发事件，通过Redux修改State的状态（这里一定记住State只有一个，唯一唯一唯一），通过State状态影响Props状态，Props是与视图（JSX）直接挂钩的，从而达到刷新渲染视图的目的。&lt;br/&gt;    然后其中的关键就是修改State的状态，Redux构建出了Action,Reducer,connect(mapStateToProps,mapDispatchToProps)(component)，container等这些玩意儿搞了一套规则进行“规矩化”的修改状态，其实也就是分工了下，分成了几个层级。暂且理解到这，新手学习，拙见若有误，前端娱乐圈的朋友请不要怜惜我，评论处见。一切为了学习进步。斗胆拿这个上首页。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/776708/201711/776708-20171111221914653-974663503.png&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; PropTypes &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'prop-types'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; ReactDOM &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-dom'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; createStore &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; Provider&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; connect &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react-redux'&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;co&quot;&gt;// React component 视图组件（component）的实现，定义了props（包括简单的数值，字符串还有函数对象）&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Counter &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; value&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; onIncreaseClick &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;props&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;span class=&quot;op&quot;&gt;&amp;gt;{&lt;/span&gt;value&lt;span class=&quot;op&quot;&gt;}&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;                &amp;lt;button onClick={onIncreaseClick}&amp;gt;Increase&amp;lt;/button&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;//对props进行限定，如类型限定&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;Counter.propTypes = {&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    value: PropTypes.number.isRequired,&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    onIncreaseClick: PropTypes.func.isRequired&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;// Action 可以看作reducer中业务逻辑的路由，在mvc里不也是你要定义几个接口，就写几个action嘛，这个完全可以看作把action的名称单独拿出来作为一个路由的存在了，以至于这里没有单独的如mvc里的路由模块。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; increaseAction &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'increase'&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;areducer-定义了初始化了state初始化了state一个reducer就是一个state里的一个属性属性类型也是这里定义的这个demo如果console.logstate则结果为statecountercount0&quot;&gt;1.2、 a、Reducer 定义了（初始化了）state，初始化了state（一个Reducer就是一个state里的一个属性，属性类型也是这里定义的，这个demo如果console.log(state);则结果为state:{counter:{count:0}}&lt;/h4&gt;
&lt;p&gt;//所有注册在store中的Reducer名称组合起来就是全局的state对象）才可以在下面的connect中的mapStateToProps、mapDispatchToProps中使用state&lt;br/&gt;// b、Reducer 定义了一个或多个action的处理逻辑，而这多个action的处理逻辑怎么区分的呢，是靠传进来的参数action的一个属性字段type进行唯一性区分（可以将换这个type看作action之于Reducer的路由）&lt;br/&gt;// c、&lt;br/&gt;//这么看，其实Reducer就相当于一个controller，里面有多个action处理逻辑。&lt;br/&gt;//好的，再回头看provider， Provider在根组件（App）外面包了一层，这样一来，App的所有子组件就默认都可以拿到state了。&lt;br/&gt;//一结束，看二。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;counter&lt;/span&gt;(state &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; action) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; count &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;count&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;action&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;type&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'increase'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; count &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; state
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;store-顶级全局唯一根据reducer生成的store实例暂且只看作一个与reducer进行匹配的一种模式不深究其作为状态树什么的地位&quot;&gt;1.1、 Store 顶级，全局唯一，根据reducer生成的store“实例”，暂且只看作一个与reducer进行匹配的一种模式，不深究其作为状态树什么的地位。&lt;/h4&gt;
&lt;p&gt;//所以主要是看reducer（这里的ruducer实例：counter）里有什么。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; store &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;createStore&lt;/span&gt;(counter)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;map-redux-state-to-component-props-prop对象用state的值进行操作后赋上值这里的state对象里面有什么哪儿定义的呢就是最上面讲store的时候store里的reducer里定义的想起来了吧&quot;&gt;2.2、 Map Redux state to component props prop对象用state的值进行操作后赋上值，这里的state对象里面有什么，哪儿定义的呢？就是最上面讲store的时候，store里的reducer里定义的。想起来了吧。&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;mapStateToProps&lt;/span&gt;(state) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;map-redux-actions-to-component-props事件绑定但是呢不直接写逻辑而是用dispatch与事先定义的action进行关联action相当于节点路由了根据路由action.type在reducer相当于controller找到对应处理逻辑&quot;&gt;2.3、Map Redux actions to component props事件绑定，但是呢，不直接写逻辑，而是用dispatch与事先定义的action进行关联。action相当于节点路由了，根据路由（action.type）在reducer（相当于controller）找到对应处理逻辑。&lt;/h4&gt;
&lt;p&gt;// 这样一来，事先定义的action--&amp;gt;reducer--&amp;gt;store就跟我们最顶层的dom关联起来了。说白了就是定义了套规则，在我粗鄙的看来，也是个mvc。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;mapDispatchToProps&lt;/span&gt;(dispatch) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;onIncreaseClick&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; () &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;dispatch&lt;/span&gt;(increaseAction)
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;connected-component-看了这行代码先不管其中的参数啥意义我们首先了解这行代码意义是什么就是前面说的关联&quot;&gt;2.1Connected Component 、看了这行代码，先不管其中的参数啥意义，我们首先了解这行代码意义是什么，就是前面说的关联。&lt;/h4&gt;
&lt;p&gt;// Counter是上面定义的视图组件，你就直接看成这个是dom，dom里面需要显示东西（props）跟触发事件（函数类型props），显示跟触发这些东西就是定义在其中两个参数中。&lt;br/&gt;// 第一个参数mapStateToProps作用:显示东西。简答说就是通过state作为输入参数，进行一堆操作或者不操作，给props赋值（因为我们显示东西总是跟props关联的）&lt;br/&gt;// 第二个参数mapDispatchToProps作用：事件绑定。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; App &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;connect&lt;/span&gt;(mapStateToProps&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; mapDispatchToProps)(Counter)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;这里开始看起&quot;&gt;这里开始看起&lt;/h3&gt;
&lt;p&gt;//一、Provider是react-redux提供的，先不深究。 store实例作为根节点元素与我们的组件进行‘绑定’，往上看啥是strore&lt;br/&gt;//二、上面说的主要是定义了一堆规则进行状态state，action及其处理逻辑，现在要跟我们的组件结合起来，即上面最终的处理逻辑如何关联我们某个dom的事件触发（如onClick），这是我们最关心的。&lt;br/&gt;// 所以看我们的App组件&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode js&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; RudexDemo &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Component &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Provider store&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;store&lt;span class=&quot;op&quot;&gt;}&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;App /&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Provider&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;ss&quot;&gt;export default RudexDemo;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;总结注意点&quot;&gt;总结注意点：&lt;/h2&gt;
&lt;p&gt;1、State的初始化在哪儿呢？答案：所有的Reducer（注意是要注册要Store上的）构成了这个State，Reducer名称为State属性的名称，Reducer中第一个参数State里定义的参数类型就是State属性的类型。这个很重要！&lt;br/&gt;2、State是一个全局的状态对象，这个对象是唯一的唯一的唯一的，跟component，Reducer什么的没有直接关联。记住就一个State，我们所有的操作都是为了改变这个State里面的部分属性值，从而达到刷新渲染页面的目的。&lt;br/&gt;3、所有在component中需要与reducer挂钩的事情，都通过props让containers里去进行调用。这样分离合乎规矩。&lt;br/&gt;原文：&lt;a href=&quot;http://www.cnblogs.com/joeymary/p/7820047.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/joeymary/p/7820047.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;个人公众号（看别人也这么贴，我也贴，脸皮得厚）：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/776708/201711/776708-20171111222541872-626671935.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 11 Nov 2017 13:33:00 +0000</pubDate>
<dc:creator>大兄弟竹子</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/joeymary/p/7820047.html</dc:identifier>
</item>
<item>
<title>HBase流量限制和表负载均衡剖析 - 哥不是小萝莉</title>
<link>http://www.cnblogs.com/smartloli/p/7819867.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/smartloli/p/7819867.html</guid>
<description>[unable to retrieve full-text content]1.概述 在HBase-1.1.0之前，HBase集群中资源都是全量的。用户、表这些都是没有限制的，看似完美实则隐患较大。今天，笔者就给大家剖析一下HBase的流量限制和表的负载均衡。 2.内容 也许有同学有疑问，为啥要做流量限制，无限制全量跑不是更好吗？举个例子，比如今天的双十一日，数据流量是非常</description>
<pubDate>Sat, 11 Nov 2017 12:55:00 +0000</pubDate>
<dc:creator>哥不是小萝莉</dc:creator>
<dc:identifier>http://www.cnblogs.com/smartloli/p/7819867.html</dc:identifier>
</item>
<item>
<title>双11大促期间服务可用率突然降到50%以下 - 杉枫</title>
<link>http://www.cnblogs.com/freedommovie/p/7819965.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/freedommovie/p/7819965.html</guid>
<description>[unable to retrieve full-text content]线上一个服务0:00-0:20没有任何问题，0:20之后突然一个服务调用量增加（不合理接口调用量应该都是0:00开始猛地暴涨）， 接口可用率降到50%以下。如果是核心交易接口，那么订单将影响一半以上，很可怕。还好，不是核心业务，是一个辅助展示 业务，并且业务本来不应该打开。 那么为什么配置被打开？为</description>
<pubDate>Sat, 11 Nov 2017 12:55:00 +0000</pubDate>
<dc:creator>杉枫</dc:creator>
<dc:identifier>http://www.cnblogs.com/freedommovie/p/7819965.html</dc:identifier>
</item>
</channel>
</rss>