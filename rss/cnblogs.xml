<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>ASP.NET Core 2.0 : 六. 举个例子来聊聊它的依赖注入 - FlyLolo</title>
<link>http://www.cnblogs.com/FlyLolo/p/ASPNETCore2_6.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/FlyLolo/p/ASPNETCore2_6.html</guid>
<description>&lt;p&gt;本文通过一个维修工与工具库的例子形象的描述一下为什么要用依赖注入、它的工作原理是什么样的, 然后根据这个类比一下ASP.NET Core 中的依赖注入, 从而深刻了解它的使用方法、注意事项以及回收机制等.&lt;/p&gt;
&lt;p&gt;本文主要内容:&lt;/p&gt;
&lt;p&gt;1.为什么要用依赖注入(DI)&lt;/p&gt;
&lt;p&gt;2.容器的构建和规则&lt;/p&gt;
&lt;p&gt;3.ASP.NET Core 2.0中的依赖注入&lt;/p&gt;
&lt;p&gt;4.使用方法及需要注意的问题&lt;/p&gt;
&lt;p&gt;5.服务的Dispose&lt;/p&gt;
&lt;p&gt;6.我想换个容器&lt;/p&gt;


&lt;p&gt;      什么是依赖注入就不说了, 为什么要使用呢?&lt;/p&gt;
&lt;p&gt;      软件设计原则中有一个依赖倒置原则（DIP）讲的是要依赖于抽象，不要依赖于具体,高层模块不应该依赖于低层模块, 二者应该依赖于抽象。简单的说就是为了更好的解耦。而控制反转(Ioc)就是这样的原则的其中一个实现思路, 这个思路的其中一种实现方式就是依赖注入(DI)。&lt;/p&gt;
&lt;p&gt;      感觉有点绕, 举个栗子:老李是一个维修工, 现在要出任务去维修, 得先去申领个扳手。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180303112615300-529479844.png&quot; alt=&quot;&quot; width=&quot;388&quot; height=&quot;190&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                              　　　　图一&lt;/p&gt;
&lt;p&gt;      老李: &quot;请给我一把可以可以拧7mm大小的六角螺丝的扳手.&quot;, 然后库管老张就从仓库里拿了一把这样的&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180303113142362-236256002.png&quot; alt=&quot;&quot; width=&quot;15&quot; height=&quot;29&quot;/&gt;大力牌扳手给老李。&lt;/p&gt;
&lt;p&gt;      在这个例子中, 维修工老李只要告诉库管我要一个 &quot;&lt;span&gt;可以拧7mm大小的六角螺丝&lt;/span&gt;&quot;的扳手即可, 他不用关心扳手的品牌和样式, 也不用采购扳手,更不用关心这个扳手是怎么来的.而对于库管, 他只需提供满足这样规则的一个扳手即可, 不用去关心老李拿着这个扳手之后去干什么。所以老李和老张都只是关心&quot;可以拧7mm大小的六角螺丝的&quot;这个规则即可, 也就是说, 如果后期仓库里不再提供&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180303113142362-236256002.png&quot; alt=&quot;&quot; width=&quot;15&quot; height=&quot;29&quot;/&gt;大力牌扳手, 而是提供了&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180303114221147-722038305.png&quot; alt=&quot;&quot; width=&quot;11&quot; height=&quot;29&quot;/&gt;这样的大牛牌扳手, 无论换了什么牌子和样式, 只要仍满足这个规则, 老李仍然可以正常工作.它们定义了一个规则(比如接口IWrench7mm), 二者都依赖于这个规则, 然后仓库无论提供大力牌(WrenchDaLi : IWrench7mm)还是大牛牌(WrenchDaNiu : IWrench7mm), 都不影响正常工作.&lt;/p&gt;
&lt;p&gt;　　这就是依赖倒置原则(DIP),  不依赖于具体(牌子),  高层模块(老李)不应该依赖于低层模块(大力牌扳手), 二者应该依赖于抽象(IWrench7mm:可以拧7mm大小的六角螺丝)。如果直接由老李去获取(new)大力牌扳手, 那么当业务改变要求采用大牛牌的时候, 我们就要去修改老李的代码.为了解耦, 在本例中我们只要在配置中让仓库由原来的提供大力牌改为提供大牛牌即可。老李要使用的时候, 可以通过注入(构造器、属性、方法)的方式, 将仓库提供的扳手实例提供给老李使用。&lt;/p&gt;

&lt;p&gt;　　继续上面的例子, 库管老张为什么会提供给老李大力牌而不是大牛牌的扳手呢? 那是因为领导给了他一份构建仓库的&lt;span&gt;物品购置及发放清单&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;　　A. 当有人要7mm的六角扳手的时候,给他一个大力牌的扳手, 当再有人来要的时候就再给另一把。&lt;/p&gt;
&lt;p&gt;　　B. 但对于相机, 每个小组只能给一台, 小组内所有人共用这一台。&lt;/p&gt;
&lt;p&gt;　　C. 卡车更是全单位只有一辆, 谁申请都是同一辆。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180304222201242-1577523357.png&quot; alt=&quot;&quot; width=&quot;447&quot; height=&quot;460&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                      　　　 图二&lt;/p&gt;

&lt;p&gt;　　首先看一下下面的图三&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/548134/201803/548134-20180304223315637-868568123.png&quot; alt=&quot;&quot; width=&quot;449&quot; height=&quot;446&quot;/&gt;　　 &lt;/p&gt;
&lt;p&gt;                                         图三&lt;/p&gt;
&lt;p&gt;　　这就是ASP.NET Core 中默认的依赖注入方式,  对比一下图二是不是很像?&lt;/p&gt;
&lt;p&gt;　　上篇文章说要将Startup放大介绍一下,  那么打开Startup这个文件,  看一下里面的&lt;span&gt;ConfigureServices方法。&lt;/span&gt;顾名思义,  这个方法是用来配置服务,&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
{
    services.AddMvc();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　此方法接收一个IServiceCollection类型的参数,  查看它的定义, 被定义在&lt;a href=&quot;https://github.com/aspnet/DependencyInjection&quot; target=&quot;_blank&quot;&gt;Microsoft.Extensions.DependencyInjection&lt;/a&gt;这个NuGet包中, 功能就是依赖注入, 在ASP.NET Core中被广泛使用.&lt;/p&gt;
&lt;h2&gt;&lt;span data-mce-=&quot;&quot;&gt;①IServiceCollection&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;　　它正是图三中的&lt;span&gt;①IServiceCollection, &lt;/span&gt;它是一个IList&amp;lt;ServiceDescriptor&amp;gt;类型的集合。也就是上门的维修工的例子中领导制定的清单&lt;span data-mce-=&quot;&quot;&gt;,  而Startup中的ConfigureServices这个方法的作用就是让我们作为&quot;领导&quot;来配置这个清单。&lt;/span&gt;方法中默认调用的services.AddMvc(),  是IServiceCollection的一个扩展方法 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; IMvcBuilder AddMvc(&lt;span&gt;this&lt;/span&gt; IServiceCollection services);&lt;/span&gt; , 作用就是向这个清单中添加了一些MVC需要的服务,例如Authorization、RazorViewEngin、DataAnnotations等。&lt;/p&gt;
&lt;p&gt;　　系统需要的添加好了, 剩下的就是我们把自己需要的用的添加进去了。  这里我们可以创建一个ServiceDescriptor然后把它添加到这个集合里,  系统&lt;span data-mce-=&quot;&quot;&gt;①IServiceCollection&lt;/span&gt;也提供了AddSingleton、AddScoped和AddTransient这样的方法, 三种方法定义了所添加服务的生命周期, 具体见&lt;span&gt;②ServiceDescriptor&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;　　当然我们可以在ConfigureServices中通过一堆AddXXX将服务添加到&lt;span data-mce-=&quot;&quot;&gt;IServiceCollection&lt;/span&gt;,  但这样好多堆在一起不易于修改和阅读,  特别还有一些功能会包含好几个服务的添加,  所以推荐像系统默认的 &lt;span class=&quot;cnblogs_code&quot;&gt;AddMvc()&lt;/span&gt; 这样封装到一个扩展方法中去。&lt;/p&gt;
&lt;p&gt;　　现在来看一下清单中的内容。&lt;/p&gt;
&lt;h2&gt;②ServiceDescriptor&lt;/h2&gt;
&lt;p&gt;　　既然&lt;span&gt;①IServiceCollection&lt;/span&gt; 是一个IList&amp;lt;ServiceDescriptor&amp;gt;,  那么ServiceDescriptor也就是这个集合中的内容了,  也就是仓库中物品的描述.对照图三中的&lt;span&gt;②ServiceDescriptor&lt;/span&gt;看一下它的各个属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　A. Type ServiceType:&lt;/strong&gt; 服务的类型    &lt;span&gt;--7mm六角扳手&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　B. Type ImplementationType:&lt;/strong&gt; 实现的类型  &lt;span&gt;--大力牌扳手&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　C. ServiceLifetime Lifetime:&lt;/strong&gt; 服务的生命周期  &lt;span&gt;--若干(谁要都给一把新的)    &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　D. object ImplementationInstance:&lt;/strong&gt; 实现服务的实例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　E: Func&amp;lt;IServiceProvider, object&amp;gt; ImplementationFactory:&lt;/strong&gt; 创建服务实例的工厂&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　ServiceLifetime&lt;/strong&gt;是一个枚举, 上文说的AddSingleton、AddScoped和AddTransient就是对应这个枚举, 分别为:&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;Singleton&lt;/strong&gt;: 单例, 例子中的卡车, 全单位只有一辆, 谁调用都是返回这个实例。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;Scoped&lt;/strong&gt;: 区域内单例, 例子中的傻瓜相机, 每小组一台, 小组内谁要都是同一台, 不同小组的相机不同。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;Transient&lt;/strong&gt;: 临时的   例子中的扳手和锤子, 谁要都给一把新的, 所有人的都不是同一把。&lt;/p&gt;
&lt;p&gt;　　从这些属性的介绍来看, ServiceDescriptor规定了当有人需要ServiceType这个类型服务的时候, 提供给他一个ImplementationType类型的实例,  其他几个属性规定了提供的方法和生命周期.&lt;/p&gt;
&lt;h2&gt;③IServiceProvider&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　③IServiceProvider&lt;/span&gt; 服务提供者,由&lt;span&gt;①IServiceCollection&lt;/span&gt;的扩展方法BuildServiceProvider创建, 当需要它提供某个服务的时候,  它会根据创建它的&lt;span&gt;①IServiceCollection&lt;/span&gt;中的对应的&lt;span&gt;②ServiceDescriptor&lt;/span&gt;提供相应的服务实例.。它提供了&lt;span&gt;⑤GetService、GetRequiredService、GetServices、GetRequiredServices&lt;/span&gt;这样的几个用于提供服务实例的方法,就像库管老张一样,  告诉他你需要什么服务的实例, 他会根据清单规定给你对应的工具。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;GetService和GetRequiredService的区别: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　维修工老李: &quot;老张, 给我一架空客A380.&quot;  -- GetService&amp;lt;IA380&amp;gt;();&lt;/p&gt;
&lt;p&gt;　　老张: &quot;这个没有.&quot;   -- return null;&lt;/p&gt;
&lt;p&gt;　　维修工老李: &quot;老张, &lt;span&gt;必须&lt;/span&gt;给我一架空客A380!&quot;  -- GetRequiredService&amp;lt;IA380&amp;gt;();&lt;/p&gt;
&lt;p&gt;　　老张: &quot;这个真TMD没有.&quot;   -- System.InvalidOperationException:“No service for type 'IA380' has been registered.”;&lt;/p&gt;
&lt;p&gt;　　GetServices和GetRequiredServices这两个加了&quot;s&quot;的方法返回对应的集合。&lt;/p&gt;
&lt;h2&gt;④IServiceScope&lt;/h2&gt;
&lt;p&gt;　　上文中的ServiceDescriptor的Lifetime属性为Scoped的时候, IServiceProvider会为其创建一个新的区域&lt;span&gt;④IServiceScope&lt;/span&gt;,&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; IServiceScope : IDisposable
    {
        IServiceProvider ServiceProvider { &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;; }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　从上面的代码可以看出它只是对IServiceProvider进行了一个简单的封装, 原始的IServiceProvider通过CreateScope()创建了一个IServiceScope, 而这个IServiceScope的ServiceProvider属性将负责这个区域内的服务提供, 而Lifetime为Scoped的ServiceDescriptor创建的实例在本区域内是以&quot;单例&quot;的形式存在的.&lt;/p&gt;
&lt;p&gt; 　　在ASP.NET Core中, Lifetime为Scoped的实例在每次请求中只创建一次.&lt;/p&gt;

&lt;p&gt;　　对于上面的维修工的例子, ASP.NET Core的依赖注入还是有一些&lt;span&gt;不一样&lt;/span&gt;的地方,  比如用卡车 (全单位只有一辆, 谁借都是这一辆) 来类比单例， 只有一个确实没问题， 但对于卡车， A把它借走了， B只有等他被还回来才能去借。 同样标记为Scoped的傻瓜相机即使在小组内也是需要轮换使用的。 没错， 就是&lt;span&gt;并发&lt;/span&gt;问题，对于ASP.NET Core的依赖注入提供的&lt;strong&gt;Singleton&lt;/strong&gt;和&lt;strong&gt;Scoped&lt;/strong&gt;的实例来说， 它是很有可能同时被多个地方获取并调用的。通过下面的例子看一下这个问题， 顺便巩固一下上面的内容。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ITest
    {
        Guid Guid { &lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Test : ITest
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Test()
        {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.Guid =&lt;span&gt; Guid.NewGuid();
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Guid Guid { &lt;span&gt;get&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　一个Test类继承自ITest, 为了方便比较是不是同一个实例, 在构造方法里对它的Guid属性赋一个新值, 然后将其注册一下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
            services.AddTransient&lt;/span&gt;&amp;lt;ITest,Test&amp;gt;&lt;span&gt;();
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　现在通过三种方法来获取这个Test, Controller中如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; HomeController : Controller
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; ITest _test;
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; HomeController( ITest test)
        {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;._test =&lt;span&gt; test;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IActionResult Index()
        {
            ViewBag.Test &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;._test;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;构造方法获取&lt;/span&gt;
            ViewBag.TestFromContext = HttpContext.RequestServices.GetService&amp;lt;ITest&amp;gt;(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;通过HttpContext获取&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; View();
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　View中通过@inject ITest  viewITest的方式获取, 然后把他们的Guid值显示出来:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@inject ITest  viewITest
&lt;/span&gt;&amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;@ViewBag.Test.Guid&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;@ViewBag.TestFromContext.Guid&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;@viewITest.Guid&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ad79690e-1ee2-41bd-82f1-&lt;span&gt;062de4c124b2
92cd97fc&lt;/span&gt;-&lt;span&gt;7083&lt;/span&gt;-4b10-99e4-&lt;span&gt;13b6b6926c16
cd0105f4&lt;/span&gt;-fa9d-&lt;span&gt;4221&lt;/span&gt;-b395-af06798d96a2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明三种方式获取了三个不同的实例, 刷新一下页面, 又变成了另外三个不同的值.&lt;/p&gt;
&lt;p&gt;现在在startup文件中将原来的 &lt;span class=&quot;cnblogs_code&quot;&gt;services.AddTransient&amp;lt;ITest,Test&amp;gt;()&lt;/span&gt; 改为 &lt;span class=&quot;cnblogs_code&quot;&gt;services.AddSingleton&amp;lt;ITest,Test&amp;gt;()&lt;/span&gt; , 其他不变, 重新运行一下, 结果如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
dd4c952e-b64c-4dc8-af01-&lt;span&gt;2b9d667cf190
dd4c952e&lt;/span&gt;-b64c-4dc8-af01-&lt;span&gt;2b9d667cf190
dd4c952e&lt;/span&gt;-b64c-4dc8-af01-2b9d667cf190
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发现三组值是一样的, 说明获得的是同一个实例, 在刷新一下页面, 仍然是这三组值, 说明多次请求获得的结果也是同一个实例.&lt;/p&gt;
&lt;p&gt;再将 &lt;span class=&quot;cnblogs_code&quot;&gt;services.AddSingleton&amp;lt;ITest,Test&amp;gt;()&lt;/span&gt; 改为 &lt;span class=&quot;cnblogs_code&quot;&gt;services.AddScoped&amp;lt;ITest,Test&amp;gt;()&lt;/span&gt; , 重新运行, 这次结果是&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
ad5a600b-75fb-43c0-aee9-&lt;span&gt;e90231fd510c
ad5a600b&lt;/span&gt;-75fb-43c0-aee9-&lt;span&gt;e90231fd510c
ad5a600b&lt;/span&gt;-75fb-43c0-aee9-e90231fd510c
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;三组数字相同, 刷新一下, 又变成了另外三组一样的值, 这说明在同一次请求里, 获取的实例是同一个。&lt;/p&gt;
&lt;p&gt;因为无论在Singleton还是Scoped的情况下, 可能在应用的多个地方同时使用同一个实例, 所以在程序设置的时候就要注意了, 如果存在像在上面的Test有个Name属性提供了 &lt;span class=&quot;cnblogs_code&quot;&gt;{ get; set; }&lt;/span&gt;的时候,多个引用者处理它的值, 会造成一些不可预料的错误。&lt;/p&gt;

&lt;p&gt;　　对于每次请求, 我们最初配置的根IServiceProvider通过CreateScope()创建了一个新的IServiceScope, 而这个IServiceScope的ServiceProvider属性将负责本次该次请求的服务提供, 当请求结束, 这个ServiceProvider的dispose会被调用, 同时它负责由它创建的各个服务。&lt;/p&gt;
&lt;p&gt;　　在 1.0 版中，ServiceProvider将对&lt;em&gt;所有&lt;/em&gt; &lt;code&gt;IDisposable&lt;/code&gt; 对象调用 dispose，包括那些并非由它创建的对象。&lt;/p&gt;
&lt;p&gt;　　而在2.0中, ServiceProvider只调用由&lt;span data-ttu-id=&quot;ca47b-268&quot;&gt;它创建的 &lt;code&gt;IDisposable&lt;/code&gt; 类型的 &lt;code&gt;Dispose&lt;/code&gt;。 &lt;span data-ttu-id=&quot;ca47b-269&quot;&gt;如果将一个实例添加到容器，它将不会被释放。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span data-ttu-id=&quot;ca47b-268&quot;&gt;&lt;span data-ttu-id=&quot;ca47b-269&quot;&gt;　　例如:&lt;/span&gt;&lt;/span&gt;&lt;span data-ttu-id=&quot;ca47b-268&quot;&gt;&lt;span data-ttu-id=&quot;ca47b-269&quot;&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;services.AddSingleton&amp;lt;ITest&amp;gt;(&lt;span&gt;new&lt;/span&gt; Test());&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;　　可以将默认的容器改为其他的容器, 比如&lt;code&gt;Autofac,这需要将ConfigureServices方法由返回void改为IServiceProvider。&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;&lt;span&gt; IServiceProvider ConfigureServices(IServiceCollection services)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    services.AddMvc();
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Add other framework services
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Add Autofac&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; containerBuilder = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ContainerBuilder();
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     containerBuilder.RegisterModule&amp;lt;DefaultModule&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    containerBuilder.Populate(services);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;var&lt;/span&gt; container =&lt;span&gt; containerBuilder.Build();
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AutofacServiceProvider(container);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 07 Mar 2018 23:22:00 +0000</pubDate>
<dc:creator>FlyLolo</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/FlyLolo/p/ASPNETCore2_6.html</dc:identifier>
</item>
<item>
<title>【原】无脑操作：IDEA + maven + SpringBoot + JPA + Thymeleaf实现CRUD及分页 - {name:&quot;代码屠夫&quot;}</title>
<link>http://www.cnblogs.com/iflytek/p/8526182.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/iflytek/p/8526182.html</guid>
<description>&lt;p&gt;&lt;span&gt;一、开发环境：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、windows 7 企业版&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、IDEA 14&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3、JDK 1.8&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4、Maven 3.5.2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5、MariaDB&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;6、SQLYog&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235215855-1765827768.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;二、Maven设置：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Maven目录下的conf目录下的settings.xml做如下内容的添加：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、使用阿里云的仓库，比官网访问速度快很多&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mirror&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;nexus-aliyun&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mirrorOf&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;central&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mirrorOf&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Nexus aliyun&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;6&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mirror&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;2、全局JDK配置&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 全局jdk配置，settings.xml &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;  
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jdk18&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;activation&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;activeByDefault&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;activeByDefault&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;jdk&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;jdk&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;activation&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;maven.compiler.source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;maven.compiler.source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;maven.compiler.target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;maven.compiler.target&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;maven.compiler.compilerVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;maven.compiler.compilerVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;     
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;profile&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;三、IDEA基本设置：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、Maven设置：选择Maven目录，同时配置文件和本地仓库&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235304752-607687717.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2、字符编码设置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235810323-794230451.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;四、使用IDEA创建Maven工程：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235927675-1557925593.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235938716-1532972089.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235947273-648543137.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180307235955458-180099104.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;选择Enable Auto-Import，创建好的工程目录如下图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180308000023317-1613797540.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;五、体验SpringBoot结合JPA的快速开发吧&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、pom.xml&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;         xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;cn.temptation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;studySpringBoot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 使用spring boot的默认设置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.0.0.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; web &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; thymeleaf &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-thymeleaf&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; mysql&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;5.1.21&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; jpa&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;2、resources目录下新建application.properties（当然喜欢用yaml的可以用yaml）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;# 数据库连接
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;spring.datasource.username=root
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;spring.datasource.password=sa
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;spring.datasource.driver-class-name=com.mysql.jdbc.Driver
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; 
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;# JPA配置
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; spring.jpa.properties.hibernate.hbm2ddl.auto=update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;3、创建SpringBoot程序启动类SpringbootApplication.java&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.temptation;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.SpringApplication;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.boot.autoconfigure.SpringBootApplication;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;@SpringBootApplication
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SpringbootApplication {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; SpringBoot项目启动&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         SpringApplication.run(SpringbootApplication.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;, args);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;4、创建实体类Category.java&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.temptation.model;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; javax.persistence.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 建库建表
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;DROP TABLE category;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;CREATE TABLE category
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;(
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    categoryid INT AUTO_INCREMENT PRIMARY KEY,
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    categoryname VARCHAR(10) NOT NULL
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;INSERT INTO category VALUES(NULL, '手机'), (NULL, '图书'), (NULL, '服装'), (NULL, '鞋帽');
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;SELECT * FROM category;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;@Entity
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; @Table(name = &quot;category&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Category {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    @Id
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     @GeneratedValue(strategy =&lt;span&gt; GenerationType.IDENTITY)
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     @Column(name = &quot;categoryid&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer categoryid;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;     @Column(name = &quot;categoryname&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String categoryname;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getCategoryid() {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; categoryid;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCategoryid(Integer categoryid) {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.categoryid =&lt;span&gt; categoryid;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; 
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCategoryname() {
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; categoryname;
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCategoryname(String categoryname) {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.categoryname =&lt;span&gt; categoryname;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;5、创建DAO接口CategoryDao.java&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.temptation.dao;
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.temptation.model.Category;
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.jpa.repository.JpaRepository;
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; 
&lt;span&gt;6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; CategoryDao &lt;span&gt;extends&lt;/span&gt; JpaRepository&amp;lt;Category, Integer&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; 
&lt;span&gt;8&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;6、创建控制器类CategoryController.java&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; cn.temptation.web;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.temptation.dao.CategoryDao;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; cn.temptation.model.Category;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.domain.Page;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.domain.PageRequest;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.domain.Pageable;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.domain.Sort;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestParam;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; 
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; 
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CategoryController {
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; CategoryDao categoryDao;
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; 
&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;     * 不分页查询
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    @RequestMapping(&quot;/categorylist&quot;)
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    public ModelAndView categorylist() {
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        List&amp;lt;Category&amp;gt; list = categoryDao.findAll();
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        ModelAndView mav = new ModelAndView(&quot;categorylist&quot;);
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        mav.addObject(&quot;list&quot;, list);
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        return mav;
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;    }&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; 
&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;     * 分页查询
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt;     @RequestMapping(&quot;/categorylist&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ModelAndView categorylist(@RequestParam(value = &quot;start&quot;, defaultValue = &quot;0&quot;&lt;span&gt;) Integer start,
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;                                      @RequestParam(value = &quot;limit&quot;, defaultValue = &quot;2&quot;&lt;span&gt;) Integer limit) {
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;         start = start &amp;lt; 0 ? 0&lt;span&gt; : start;
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt;         Sort sort = &lt;span&gt;new&lt;/span&gt; Sort(Sort.DEFAULT_DIRECTION, &quot;categoryid&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;         Pageable pageable = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PageRequest(start, limit, sort);
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;         Page&amp;lt;Category&amp;gt; page =&lt;span&gt; categoryDao.findAll(pageable);
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; 
&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.getNumber());
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.getNumberOfElements());
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.getSize());
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.getTotalElements());
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.getTotalPages());
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.isFirst());
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        System.out.println(page.isLast());&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt; 
&lt;span&gt; 58&lt;/span&gt;         ModelAndView mav = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;categorylist&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;         mav.addObject(&quot;page&quot;&lt;span&gt;, page);
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mav;
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; 
&lt;span&gt; 63&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;     * 类别新增视图
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;     @RequestMapping(&quot;/categoryinit&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String categoryinit() {
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;categoryinit&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; 
&lt;span&gt; 72&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;     * 类别新增操作
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; model
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;     @RequestMapping(&quot;/categoryinsert&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String categoryinsert(Category model) {
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;        categoryDao.save(model);
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;redirect:categorylist&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; 
&lt;span&gt; 83&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;     * 类别删除操作
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; categoryid
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt;     @RequestMapping(&quot;/categorydelete&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String categorydelete(Integer categoryid) {
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;        categoryDao.deleteById(categoryid);
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;redirect:categorylist&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;     * 类别编辑视图
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; categoryid
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;     @RequestMapping(&quot;/categoryedit&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView categoryedit(Integer categoryid) {
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;         Category model =&lt;span&gt; categoryDao.getOne(categoryid);
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; 
&lt;span&gt;103&lt;/span&gt;         ModelAndView mav = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;categoryedit&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;         mav.addObject(&quot;category&quot;&lt;span&gt;, model);
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mav;
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; 
&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;109&lt;/span&gt; &lt;span&gt;     * 类别编辑操作
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; model
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;113&lt;/span&gt;     @RequestMapping(&quot;/categoryupdate&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String categoryupdate(Category model) {
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;        categoryDao.save(model);
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;redirect:categorylist&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;7、resources目录下新建templates目录，创建表现层：类别列表页面（categorylist.html）、类别新增页面（categoryinit.html）、类别编辑页面（categoryedit.html）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;类别列表页面（categorylist.html）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别列表&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        table, th, td &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;            border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 1px solid green&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            border-collapse&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; collapse&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;         &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categoryinit}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;新增&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;不分页遍历&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;&amp;lt;tr th:each=&quot;item : ${list}&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;分页遍历&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;th:each&lt;/span&gt;&lt;span&gt;=&quot;item : ${page.content}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${item.categoryid}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别编号&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${item.categoryname}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categoryedit(categoryid=${item.categoryid})}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;编辑&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categorydelete(categoryid=${item.categoryid})}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categorylist(start=0)}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;[首页]&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:if&lt;/span&gt;&lt;span&gt;=&quot;${not page.isFirst()}&quot;&lt;/span&gt;&lt;span&gt; th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categorylist(start=${page.number-1})}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;[上页]&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:if&lt;/span&gt;&lt;span&gt;=&quot;${not page.isLast()}&quot;&lt;/span&gt;&lt;span&gt; th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categorylist(start=${page.number+1})}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;[下页]&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/categorylist(start=${page.totalPages-1})}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;[末页]&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;类别新增页面（categoryinit.html）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别新增&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;categoryinsert&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;txtCategoryname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别名称：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;txtCategoryname&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;categoryname&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;类别编辑页面（categoryedit.html）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别编辑&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;categoryupdate&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;hidden&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;txtCategoryid&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;categoryid&quot;&lt;/span&gt;&lt;span&gt; th:field&lt;/span&gt;&lt;span&gt;=&quot;${category.categoryid}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;txtCategoryname&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;类别名称：&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;txtCategoryname&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;categoryname&quot;&lt;/span&gt;&lt;span&gt; th:field&lt;/span&gt;&lt;span&gt;=&quot;${category.categoryname}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;六、启动项目，运行效果如下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/438252/201803/438252-20180308001713237-667443602.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 07 Mar 2018 16:21:00 +0000</pubDate>
<dc:creator>{name:&amp;quot;代码屠夫&amp;quot;}</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/iflytek/p/8526182.html</dc:identifier>
</item>
<item>
<title>使用 opencv 将图片压缩到指定文件尺寸 - shoufengwei</title>
<link>http://www.cnblogs.com/shoufengwei/p/8526105.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/shoufengwei/p/8526105.html</guid>
<description>&lt;p&gt;图片压缩应用很广泛，如生成缩略图等。前期我在进行图片处理的过程中碰到了一个问题，就是如何将图片压缩到指定尺寸，此处尺寸指的是生成图片文件的大小。&lt;/p&gt;
&lt;p&gt;我使用 opencv 进行图片处理，于是想着直接使用 opencv 进行图片压缩处理， opencv 本身包含了压缩到指定像素大小的方法，奈何寻找了很多方法均不能压缩到指定文件尺寸，于是自己在思考后写出了此方法。本文使用python语言。&lt;/p&gt;

&lt;p&gt;opencv 无需多言，做过图片处理的人应该都知道此类库，下面我介绍一些常用方法。&lt;/p&gt;
&lt;h2 id=&quot;安装-opencv&quot;&gt;1.1 安装 opencv&lt;/h2&gt;
&lt;p&gt;首先安装 python ，建议 python3 ，然后执行&lt;br/&gt;：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;pip install opencv-python&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;读取图片&quot;&gt;1.2 读取图片&lt;/h2&gt;
&lt;p&gt;首先引入 opencv 包：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; cv2 &lt;span class=&quot;im&quot;&gt;as&lt;/span&gt; cv&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而后读取图片：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;image &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; cv.imread(path)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 path 为图片路径， image 为图片数据，是一个 numpy.ndarray 对象，其实就是一个多维数组。目前 opencv 支持几乎所有格式的图片（参考 &lt;a href=&quot;http://blog.csdn.net/mars_xiaolei/article/details/78890971&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/mars_xiaolei/article/details/78890971&lt;/a&gt;）。&lt;/p&gt;
&lt;h2 id=&quot;保存图片&quot;&gt;1.3 保存图片&lt;/h2&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;cv.imwrite(path, image)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 path 为保存的文件路径， image 为读取或者处理过的图片数据， opencv 根据保存文件的后缀名来写不同格式的图片数据，所以后缀名一定要写正确。&lt;/p&gt;

&lt;h2 id=&quot;常规压缩&quot;&gt;2.1 常规压缩&lt;/h2&gt;
&lt;p&gt;opencv 支持常规压缩，可以将图片压缩到指定的像素尺寸或者按比例缩放。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;压缩到指定的像素尺寸：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;new_image &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; cv.resize(image, size)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 size 是一个二维元组，表示压缩后图片的宽高。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;按比例缩放：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;new_image &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; cv.resize(image, &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;, fx, fy)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 fx , fy 表示图片在宽和高方向的压缩了比例。&lt;/p&gt;
&lt;h2 id=&quot;压缩到指定文档大小&quot;&gt;2.2 压缩到指定文档大小&lt;/h2&gt;
&lt;p&gt;有了上面的基础我们来分析一下如何实现压缩到指定文档大小。&lt;/p&gt;
&lt;p&gt;首先我们要读取原始文档的大小，算出原始文档大小和压缩目标值的比例，由于我们要实现的是宽高等比例压缩，于是将其开根号即表示在单边的压缩比例，调用 2.1 节中的按比例压缩。理论上一次就能达到效果，但是由于图片本身存在压缩，所以可能一次无法达到预期，只要对压缩后的图片重复此步骤，直到达到预期即可。&lt;/p&gt;
&lt;h3 id=&quot;读取文档尺寸&quot;&gt;2.2.1 读取文档尺寸&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; get_doc_size(path):
    &lt;span class=&quot;cf&quot;&gt;try&lt;/span&gt;:
        size &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; os.path.getsize(path)
        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; get_mb_size(size)
    &lt;span class=&quot;cf&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;pp&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;as&lt;/span&gt; err:
        &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(err)

&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; get_mb_size(&lt;span class=&quot;bu&quot;&gt;bytes&lt;/span&gt;):
    &lt;span class=&quot;bu&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;float&lt;/span&gt;(&lt;span class=&quot;bu&quot;&gt;bytes&lt;/span&gt;)
    mb &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1024&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; mb&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get_doc_size 函数返回图片的文档大小，单位为 MB 。&lt;/p&gt;
&lt;h3 id=&quot;删除文件&quot;&gt;2.2.2 删除文件&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; delete_file(path):
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; file_exist(path):
        os.remove(path)
    &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:
        &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'no such file:&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; path)
        
&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; file_exist(path):
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; os.path.exists(path)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于我们需要删除压缩过程中产生的中间文件，所以需要调用 delete_file 方法删除之。&lt;/p&gt;
&lt;h3 id=&quot;压缩&quot;&gt;2.2.3 压缩&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;size &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; get_doc_size(path)
delete_file(resize_path)

&lt;span class=&quot;cf&quot;&gt;while&lt;/span&gt; size &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; filesize:
    rate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; math.ceil((size &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; filesize) &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;
    rate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; math.sqrt(rate)

    rate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; rate
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; file_exist(resize_path):
        resize_rate(resize_path, resize_path, rate, rate)
    &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:
        resize_rate(path, resize_path, rate, rate)
    size &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; get_doc_size(resize_path)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中 filesize 表示压缩目标值， path 表示原始文件路径， resize_path 表示压缩后存放路径， resize_rate 表示上述按比例压缩方法，定义如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; resize_rate(path, resize_path, fx, fy):
    image &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; read_image(path)
    im_resize &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; cv.resize(image, &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;, fx&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;fx, fy&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;fy)
    delete_file(resize_path)
    save_image(resize_path, im_resize)
    
&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; save_image(path, image):
    cv.imwrite(path, image)


&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; read_image(path):
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; cv.imread(path)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然此处为了效果更好，我做了一些优化。&lt;/p&gt;
&lt;p&gt;首先在获取压缩比例的时候我做了下述操作：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;rate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; math.ceil((size &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; filesize) &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;理论情况应当是直接返回 size / filesize 即可，但是在实际测试过程中为了加速收敛，我采用上述方式，将一个小数先乘以 10 对其向上取整，这样就表示精度保留到原始数值小数后 1 位，即如果是 3.14 将得到 32 ，而后将此结果再除以 10 ， 即得到 3.2 ，所以最终结果就是对小数后第二位进行向上进位，最后结果又加了 0.1 以更快速的收敛，当然你也可以去掉。&lt;/p&gt;
&lt;p&gt;实际测试发现，一般重复执行两次即可得到理想的压缩效果，并且结果值与理想压缩尺寸相差无几。&lt;/p&gt;

&lt;p&gt;本文简单介绍了如何使用 opencv 将图片压缩到指定文件尺寸，当然你也可以选择其他文件处理类库而不是 opencv ，这个完全可以根据用户自己的兴趣而来，并且也可以优化最终的循环算法，以达到更佳的效果，或者更快的收敛。&lt;/p&gt;
</description>
<pubDate>Wed, 07 Mar 2018 15:46:00 +0000</pubDate>
<dc:creator>shoufengwei</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/shoufengwei/p/8526105.html</dc:identifier>
</item>
<item>
<title>解析Java中的String、StringBuilder、StringBuffer类（一） - 人不学习枉少年</title>
<link>http://www.cnblogs.com/homejim/p/8526096.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/homejim/p/8526096.html</guid>
<description>&lt;h2 id=&quot;引言&quot;&gt;引言&lt;/h2&gt;
&lt;p&gt;String 类及其相关的StringBuilder、StringBuffer 类在 Java 中的使用相当的多，在各个公司的面试中也是必不可少的。因此，在本周，我打算花费一些时间来认真的研读一下 String、StringBuilder、StringBuffer类 的相关代码。&lt;/p&gt;
&lt;h2 id=&quot;string的不可变性&quot;&gt;String的不可变性&lt;/h2&gt;
&lt;p&gt;这个特性是 String 相当重要的一个特性，为了深入理解，我直接贴上其源代码&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public String concat(String str) {
        int otherLen = str.length();
        if (otherLen == 0) {
            return this;
        }
        int len = value.length;
        char buf[] = Arrays.copyOf(value, len + otherLen);
        str.getChars(buf, len);
        return new String(buf, true);
    }
public String replace(char oldChar, char newChar) {
        if (oldChar != newChar) {
            int len = value.length;
            int i = -1;
            char[] val = value; /* avoid getfield opcode */

            while (++i &amp;lt; len) {
                if (val[i] == oldChar) {
                    break;
                }
            }
            if (i &amp;lt; len) {
                char buf[] = new char[len];
                for (int j = 0; j &amp;lt; i; j++) {
                    buf[j] = val[j];
                }
                while (i &amp;lt; len) {
                    char c = val[i];
                    buf[i] = (c == oldChar) ? newChar : c;
                    i++;
                }
                return new String(buf, true);
            }
        }
        return this;
    }
public String substring(int beginIndex, int endIndex) {
        if (beginIndex &amp;lt; 0) {
            throw new StringIndexOutOfBoundsException(beginIndex);
        }
        if (endIndex &amp;gt; value.length) {
            throw new StringIndexOutOfBoundsException(endIndex);
        }
        int subLen = endIndex - beginIndex;
        if (subLen &amp;lt; 0) {
            throw new StringIndexOutOfBoundsException(subLen);
        }
        return ((beginIndex == 0) &amp;amp;&amp;amp; (endIndex == value.length)) ? this
                : new String(value, beginIndex, subLen);
    }
    .....&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;通过以上几个方法的代码，我们可以得出以下的结论：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;String 对象时不可变的。所谓不可变的意思是说我们使用的很多方法来对字符串进行修改,如以下所示：&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;public static void main(String[] args) {
        String str = &quot;test&quot;;
        str = str + &quot;a&quot;;
        System.out.println(str);//testa
        str += &quot;b&quot;;
        System.out.println(str);//testab
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;诸如上面的 + 号和 concat, replace 等看起来会改变 String 值的方法，其最终都是创建了一个全新的 String 对象，用来包含修改后的字符串内容。str 最先指向的对象 &quot;test&quot; 一直呆在原物理位置上。各个方法操作的其实是复制的一份引用，返回的是一个新的对象，以上例子的原 &quot;test&quot; 还在原始处。&lt;/p&gt;
&lt;p&gt;一些误区：String 的不可变性并不是因为下面的语句&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; private final char value[];&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;final 在引用类型中，只是确保了不能指向其它引用，而不能确保引用的更改。value 是 private 的， 虽然 String 没有提供更改value的方法，但通过反射可将其更改。&lt;/p&gt;
&lt;h2 id=&quot;string的-与-符号&quot;&gt;String的 + 与 += 符号&lt;/h2&gt;
&lt;p&gt;众所周知， C++ 是可以重载操作符的， 但 Java 并不允许程序员对操作符进行重载，而String的 + 与 += 符号却违反了这个规则。我们都知道，Java 中的这两个操作符都是对字符串进行拼接，看一下以下的代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Test{
    public static void main(String[] args){
        String str = &quot;a&quot;;
        str +=&quot;hello&quot; + &quot;world&quot; + &quot;!&quot;;
        System.out.println(str);//ahelloworld!
        
        String pStr = &quot;a&quot; + str + &quot;b&quot;;
        System.out.println(pStr);//aahelloworld!b
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如符按照我们理解的 String 的不可变性，那么在多次进行 + 操作时，应该会在最终的结果之前生成多个中间的文件，那么事实真的是这样子吗？如果是这样子想一下就知道效率和性能有多糟糕了。我们对代码进行反编译。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;javap -c Test&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其产生了如下的 JVM 字节码：&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20180307233507196?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VpeGluXzM3MTM5MTk3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;字节码&quot;/&gt;&lt;br/&gt;我们可以看到，在以上的代码中， 编译器为我们自动的引入了 java.lang.StringBuilder 类， 并使用了该类的 append(String str) 这个方法， 最终使用 toString() 产生 String 字符串并进行了赋值。&lt;/p&gt;
&lt;h2 id=&quot;循环中拼接字符串不要使用-string&quot;&gt;「循环」中拼接字符串不要使用 String&lt;/h2&gt;
&lt;p&gt;那么，我们是不是可以愉快的使用 + 和 += 这两个操作符了呢？ NO! 编译器所能做的也是有限的。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public class Test {
    public static void main(String[] args) {
        String s = &quot;&quot;;
        long start = System.currentTimeMillis();
        for (int i = 0; i &amp;lt;100000 ; i++) {
            s += &quot;a&quot;;
        }
        long end = System.currentTimeMillis();
        System.out.println(&quot;String time:&quot;+ (end - start));

        StringBuilder sb = new StringBuilder(&quot;&quot;);
        long start2 = System.currentTimeMillis();
        for (int i = 0; i &amp;lt;100000 ; i++) {
           sb.append(&quot;a&quot;);
        }
        long end2 = System.currentTimeMillis();
        System.out.println(&quot;StringBuilder time:&quot;+ (end2 - start2));
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在以上的代码中， 输出是这样子的, 我还去掉了中间装载类所花费的时间：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;String time:2573
StringBuilder time:5&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;为什么差距这么大呢？&lt;/p&gt;
&lt;p&gt;同样的，我们对这个文件进行反编译，第一个循环的字节码如下：&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20180307233537763?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VpeGluXzM3MTM5MTk3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;第一个循环字节码&quot;/&gt;&lt;br/&gt;可以看出 10 到 40 就是我们的循环体了，在该循环体中，有一个 new 的操作，这意味着每次进行循环时，都会创建一个 StringBuilder 的对象，每次都使用一次 toString() 方法。而这些过程都是相当的影响性能的。&lt;/p&gt;
&lt;p&gt;而第二个循环的字节码如下：&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20180307233606254?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VpeGluXzM3MTM5MTk3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;从以上我们可以看出，循环是从 95 到 113 行，而这个过程中，始终只有一个 StringBuilder 的对象， 也就是说它没有产生新的对象， 可想而知两个之间的性能是怎么产生差异的了。&lt;/p&gt;
&lt;p&gt;因此，「循环」中拼接字符串不要使用 String， 这个在写 toString() 方法时可能会遇到。&lt;/p&gt;
&lt;p&gt;好，今天我们就分析到这里，下篇文章再会。&lt;/p&gt;
&lt;p&gt;另，转载请注明出处。&lt;/p&gt;
</description>
<pubDate>Wed, 07 Mar 2018 15:43:00 +0000</pubDate>
<dc:creator>人不学习枉少年</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/homejim/p/8526096.html</dc:identifier>
</item>
<item>
<title>Docker 小记 — Compose &amp; Swarm - 捷义</title>
<link>http://www.cnblogs.com/youclk/p/8453526.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/youclk/p/8453526.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;任何相对完整的应用服务都不可能是由单一的程序来完成支持，计划使用 Docker 来部署的服务更是如此。大型服务需要进行拆分，形成微服务集群方能增强其稳定性和可维护性。本篇随笔将对 Docker Compose 和 Docker Swarm 的原理和配置做整理归纳，并分享其使用经验。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/801714/201802/801714-20180228112015802-1436867376.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;yaml-简介&quot;&gt;1. YAML 简介&lt;/h3&gt;
&lt;p&gt;Docker Compose 的配置文件采用 YAML 格式，因此有必要在正文之前简要说明下。YAML 是一门专门用来写配置文件的语言，设计目标就是方便读写，其实质上是一种通用的数据串行化格式，基本语法规则如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;大小写敏感。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; 表示注释。&lt;/li&gt;
&lt;li&gt;使用缩进表示层级关系。&lt;/li&gt;
&lt;li&gt;缩进时不允许使用 Tab 键，只允许使用空格。&lt;/li&gt;
&lt;li&gt;缩进的空格数目不重要，只要相同层级的元素左侧对齐即可。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;YAML 支持的数据结构有三种:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;对象：&lt;code&gt;animal:cat&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;数组：一组中划线开头的行，例如:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;co&quot;&gt;# ex1&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; cat
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; dog
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; bird
  
&lt;span class=&quot;co&quot;&gt;# ex2&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; cat
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; dog
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; bird
    
&lt;span class=&quot;co&quot;&gt;# ex3&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;animal&lt;/span&gt;: [cat, dog, bird]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;值类型和字符串。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;docker-compose&quot;&gt;2. Docker Compose&lt;/h2&gt;
&lt;h3 id=&quot;安装与简介&quot;&gt;2.1 安装与简介&lt;/h3&gt;
&lt;p&gt;Docker 可以极为方便地部署单个服务，但这时候我们需要一个工具来整合 Docker 的功能，使之能够更便捷地去管理整个微服务集群的部署和迁移，Docker Compose 正是应此而生。他是由 Python 编写的程序，能够根据指令结合配置文件转换成对应的 Docker API 的操作，并直接体现到 Docker Daemon 中，这就代替我们完成了重复输入复杂指令的过程，主要功能可分为以下两点:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Service：代表的是运行同种应用程序的一个或多个相同容器的抽象定义，也是我们在Docker Compose 中配置的主要对象。在每个 Docker Compose 的配置文件中，我们可以定义多个服务，并定义服务的配置，以及服务于服务之间的以来关系。&lt;/li&gt;
&lt;li&gt;Project：代表的是由多个服务所组成的一个相对完整的业务单元。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;安装命令:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;curl&lt;/span&gt; -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-&lt;span class=&quot;kw&quot;&gt;`uname&lt;/span&gt; -s&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;kw&quot;&gt;`uname&lt;/span&gt; -m&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt; -o /usr/local/bin/docker-compose &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;配置参数&quot;&gt;2.2 配置参数&lt;/h3&gt;
&lt;p&gt;Docker Compose 的核心就是其配置文件，采用 YAML 格式，默认为 &lt;code&gt;docker-compose.yml&lt;/code&gt; ，参数详解可查阅&lt;a href=&quot;https://docs.docker.com/compose/compose-file/&quot;&gt;“官方文档”&lt;/a&gt;，以下只做一个常规摘要。&lt;/p&gt;
&lt;h4 id=&quot;services&quot;&gt;services&lt;/h4&gt;
&lt;p&gt;所有服务的根节点。&lt;/p&gt;
&lt;h4 id=&quot;image&quot;&gt;image&lt;/h4&gt;
&lt;p&gt;指定服务的镜像名，若本地不存在，则 Compose 会去仓库拉取这个镜像:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;web&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: nginx&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;ports&quot;&gt;ports&lt;/h4&gt;
&lt;p&gt;端口映射，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ports&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;80:80&quot;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;81:81&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;volumes&quot;&gt;volumes&lt;/h4&gt;
&lt;p&gt;挂载主机目录，其中 ro 表示只读，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/etc/nginx/www:/www&quot;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/var/run/docker.sock:/tmp/docker.sock:ro&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大多数情况下集群中部署的应该都是无状态服务，服务可复制且不固定在某一台宿主机，所以挂载的数据卷最好应当与宿主机脱离关系，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;  &lt;span class=&quot;kw&quot;&gt;web&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: nginx
    &lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; type: volume
        &lt;span class=&quot;kw&quot;&gt;source&lt;/span&gt;: logs
        &lt;span class=&quot;kw&quot;&gt;target&lt;/span&gt;: /mnt
        &lt;span class=&quot;kw&quot;&gt;volume&lt;/span&gt;:
          &lt;span class=&quot;kw&quot;&gt;nocopy&lt;/span&gt;: true
          
&lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;logs&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;driver_opts&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt;: nfs
      &lt;span class=&quot;kw&quot;&gt;o&lt;/span&gt;: addr=***.cn-hangzhou.nas.aliyuncs.com,rw
      &lt;span class=&quot;kw&quot;&gt;device&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;:/&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，这种情况下最好是优先创建数据卷，后在配置文件中引用，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; volume create --driver local \
    --opt type=nfs \
    --opt o=addr=***.cn-hangzhou.nas.aliyuncs.com,rw \
    --opt device=:/ \
    logs&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;logs&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;若必须挂载集群中一台宿主机的目录作为数据卷，则要安装一个 docker 插件:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; plugin install vieux/sshfs

&lt;span class=&quot;co&quot;&gt;# 若配置了密钥对则可省略 password 参数&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; volume create \
  -d vieux/sshfs \
  --name sshvolume \
  -o &lt;span class=&quot;st&quot;&gt;&quot;sshcmd=user@1.2.3.4:/remote&quot;&lt;/span&gt; \
  -o &lt;span class=&quot;st&quot;&gt;&quot;password=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; file_containing_password_for_remote_host&lt;span class=&quot;ot&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;\ &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;sshvolume&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;networks&quot;&gt;networks&lt;/h4&gt;
&lt;p&gt;配置服务间的网路互通与隔离，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;web&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: nginx
    &lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; proxy
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; youclk
&lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;youclk&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true
  &lt;span class=&quot;kw&quot;&gt;proxy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;secrets&quot;&gt;secrets&lt;/h3&gt;
&lt;p&gt;配置服务密码访问，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;redis&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: redis:latest
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;replicas&lt;/span&gt;: 1
    &lt;span class=&quot;kw&quot;&gt;secrets&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; my_secret
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; my_other_secret
&lt;span class=&quot;kw&quot;&gt;secrets&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;my_secret&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;./my_secret.txt&quot;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;my_other_secret&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; secret create [OPTIONS] SECRET [file&lt;span class=&quot;kw&quot;&gt;|-&lt;/span&gt;]
&lt;span class=&quot;kw&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;admin:password&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; secret create my_secret -
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; secret create my_secret ./secret.json&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;healthcheck&quot;&gt;healthcheck&lt;/h4&gt;
&lt;p&gt;健康检查，这个非常有必要，等服务准备好以后再上线，避免更新过程中出现短暂的无法访问。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;healthcheck&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;test&lt;/span&gt;: [&lt;span class=&quot;st&quot;&gt;&quot;CMD&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;curl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;-f&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;http://localhost/alive&quot;&lt;/span&gt;]
  &lt;span class=&quot;kw&quot;&gt;interval&lt;/span&gt;: 5s
  &lt;span class=&quot;kw&quot;&gt;timeout&lt;/span&gt;: 3s&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其实大多数情况下健康检查的规则都会写在 Dockerfile 中:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; nginx
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; apt-get update &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; install -y curl &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rm&lt;/span&gt; -rf /var/lib/apt/lists/*
&lt;span class=&quot;kw&quot;&gt;HEALTHCHECK&lt;/span&gt; --interval=5s --timeout=3s CMD curl -f http://localhost/alive &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;exit&lt;/span&gt; 1&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;depends_on&quot;&gt;depends_on&lt;/h4&gt;
&lt;p&gt;依赖的服务，优先启动，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;depends_on&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; redis&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;environment-env_file&quot;&gt;environment &amp;amp; env_file&lt;/h4&gt;
&lt;p&gt;设置环境变量和指定环境变量的文件，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;environment&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; VIRTUAL_HOST=test.youclk.com
&lt;span class=&quot;kw&quot;&gt;env_file&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; ./common.env&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;deploy&quot;&gt;deploy&lt;/h4&gt;
&lt;p&gt;部署相关的配置都在这个节点下，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;mode&lt;/span&gt;: replicated
  &lt;span class=&quot;kw&quot;&gt;replicas&lt;/span&gt;: 2
  &lt;span class=&quot;kw&quot;&gt;restart_policy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;condition&lt;/span&gt;: on-failure
    &lt;span class=&quot;kw&quot;&gt;max_attempts&lt;/span&gt;: 3
  &lt;span class=&quot;kw&quot;&gt;update_config&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;delay&lt;/span&gt;: 5s
    &lt;span class=&quot;kw&quot;&gt;order&lt;/span&gt;: start-first &lt;span class=&quot;co&quot;&gt;# 默认为 stop-first，推荐设置先启动新服务再终止旧的&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;resources&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;limits&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;cpus&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;0.50&quot;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;memory&lt;/span&gt;: 1g&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;mode&lt;/span&gt;: global &lt;span class=&quot;co&quot;&gt;# 不推荐全局模式（仅个人意见）。&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;placement&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;constraints&lt;/span&gt;: [node.role == manager]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;若非特殊服务，以上各节点的配置能够满足大部分部署场景了。&lt;/p&gt;
&lt;h2 id=&quot;swarm&quot;&gt;3. Swarm&lt;/h2&gt;
&lt;p&gt;Docker 默认包含了 Swarm，因此可以直接使用，初始化命令：&lt;code&gt;docker swarm init&lt;/code&gt;，此时将会默认当前节点为 Leader，以下命令为查看 token：&lt;code&gt;docker swarm join-token （worker|manager）&lt;/code&gt;，其他节点可以用 manager 或者 worker 的身份加入到当前集群，例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; swarm join --token SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-1awxwuwd3z9j1z3puu7rcgdbx 172.17.0.2:2377&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行 &lt;code&gt;docker swarm leave&lt;/code&gt; 脱离集群。&lt;/p&gt;
&lt;p&gt;以下各节点常规操作命令，比较简单，就不解释了:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;docker node demote [NODE]&lt;/li&gt;
&lt;li&gt;docker node inspect [NODE]&lt;/li&gt;
&lt;li&gt;docker node ls&lt;/li&gt;
&lt;li&gt;docker node promote [NODE]&lt;/li&gt;
&lt;li&gt;docker node ps [NODE]&lt;/li&gt;
&lt;li&gt;docker node rm [NODE]&lt;/li&gt;
&lt;li&gt;docker node update [OPTIONS] NODE&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;应用案例&quot;&gt;4. 应用案例&lt;/h2&gt;
&lt;p&gt;集群最擅长的就是解决多服务问题，只要在同一 network 之下，服务之间默认可以直接通过 service_name 互通有无。但为了避免混乱，各服务与外部的通信最好统一交给一个反向代理服务转发。因对 nginx 比较熟悉，所以我最初选择的代理是&lt;a href=&quot;https://github.com/jwilder/nginx-proxy&quot;&gt;“jwilder/nginx-proxy”&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;server&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;listen&lt;/span&gt; 80&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;server_name&lt;/span&gt; localhost&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;location&lt;/span&gt; /alive {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; 200&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
}

&lt;span class=&quot;kw&quot;&gt;server&lt;/span&gt; {
    &lt;span class=&quot;kw&quot;&gt;listen&lt;/span&gt;  81&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;  301 https://&lt;span class=&quot;ot&quot;&gt;$host$request_uri&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; jwilder/nginx-proxy
&lt;span class=&quot;kw&quot;&gt;ADD&lt;/span&gt; ./src /etc/nginx/conf.d
&lt;span class=&quot;kw&quot;&gt;ADD&lt;/span&gt; https://gitee.com/youclk/entry/raw/master/debian/sources-vpc.list /etc/apt/sources.list
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; apt-get update &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; install -y curl &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rm&lt;/span&gt; -rf /var/lib/apt/lists/*
&lt;span class=&quot;kw&quot;&gt;HEALTHCHECK&lt;/span&gt; --interval=5s --timeout=3s CMD curl -f http://localhost/alive &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;exit&lt;/span&gt; 1&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;version&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;3.5&quot;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:

  &lt;span class=&quot;kw&quot;&gt;proxy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: &lt;span class=&quot;ot&quot;&gt;$REGISTRY&lt;/span&gt;/proxy
    &lt;span class=&quot;kw&quot;&gt;ports&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;80:80&quot;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;81:81&quot;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/var/run/docker.sock:/tmp/docker.sock:ro&quot;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;placement&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;constraints&lt;/span&gt;: [node.role == manager]
      &lt;span class=&quot;kw&quot;&gt;restart_policy&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;condition&lt;/span&gt;: on-failure
        &lt;span class=&quot;kw&quot;&gt;max_attempts&lt;/span&gt;: 3
      &lt;span class=&quot;kw&quot;&gt;update_config&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;delay&lt;/span&gt;: 5s
        &lt;span class=&quot;kw&quot;&gt;order&lt;/span&gt;: start-first 
      &lt;span class=&quot;kw&quot;&gt;resources&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;limits&lt;/span&gt;:
          &lt;span class=&quot;kw&quot;&gt;cpus&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;0.50&quot;&lt;/span&gt;
          &lt;span class=&quot;kw&quot;&gt;memory&lt;/span&gt;: 1g&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;负载均衡使用的是阿里云的 SLB，监听 &lt;code&gt;80 -&amp;gt; 81， 443 -&amp;gt; 80&lt;/code&gt;，这样一个服务就实现了节点检查、代理和 https 重定向为一身。拖 nginx 的福，反正用起来就是爽，点击&lt;a href=&quot;http://www.cnblogs.com/youclk/p/8422378.html&quot;&gt;“Nginx 原理解析和配置摘要”&lt;/a&gt;进一步了解。&lt;/p&gt;
&lt;p&gt;正所谓乐极生悲，某一次我在扩展 Swarm 集群的时候提升了部分 work 节点为 manager， 并且扩展了代理的数量，这让很多服务频繁出现 503，找来找去我发现问题出在 nginx-proxy 代理上。当服务在各节点分布不均的时候，非 leader 节点上的那个代理无法找到服务，废了老大的劲儿也没找到合理的解决方案。&lt;/p&gt;
&lt;p&gt;最后我决定选择&lt;a href=&quot;http://proxy.dockerflow.com/&quot;&gt;“Docker Flow Proxy”&lt;/a&gt;作为新的代理（好家伙，这一看文档吓我一跳，我还是第一次看到私人的开源项目能把参考文档写得这么详细，作者的细腻程度“令人发指”，小弟顶礼膜拜之），以下是我的案例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;version&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;3.5&quot;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:

  &lt;span class=&quot;kw&quot;&gt;proxy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: vfarcic/docker-flow-proxy
    &lt;span class=&quot;kw&quot;&gt;ports&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;80:80&quot;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; proxy
    &lt;span class=&quot;kw&quot;&gt;environment&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; LISTENER_ADDRESS=swarm-listener
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; MODE=swarm
    &lt;span class=&quot;kw&quot;&gt;secrets&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; dfp_users_admin
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;replicas&lt;/span&gt;: 2
      &lt;span class=&quot;kw&quot;&gt;labels&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.notify=true
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.port=8080
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.serviceDomain=localhost
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.reqPathSearchReplace=/alive,/v1/docker-flow-proxy/ping

  &lt;span class=&quot;kw&quot;&gt;swarm-listener&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: vfarcic/docker-flow-swarm-listener
    &lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; proxy
    &lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; /var/run/docker.sock:/var/run/docker.sock
    &lt;span class=&quot;kw&quot;&gt;environment&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; DF_NOTIFY_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; DF_NOTIFY_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;placement&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;constraints&lt;/span&gt;: [node.role == manager]

&lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;proxy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true
&lt;span class=&quot;kw&quot;&gt;secrets&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;dfp_users_admin&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;external&lt;/span&gt;: true&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更换代理的过程也并非一帆风顺，我在 https 重定向这个问题浪费了好多时间，最后也没在代理中解决。作者当然是考虑到了这个问题，经典的解决方案应如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;proxy&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: vfarcic/docker-flow-proxy
    &lt;span class=&quot;kw&quot;&gt;ports&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;80:80&quot;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;443:443&quot;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; proxy
    &lt;span class=&quot;kw&quot;&gt;environment&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; LISTENER_ADDRESS=swarm-listener
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; MODE=swarm
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;replicas&lt;/span&gt;: 2
      &lt;span class=&quot;kw&quot;&gt;labels&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.notify=true
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.httpsOnly=true
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.httpsRedirectCode=301&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但奈何哥哥“非经典”呀，我的 https 证书和负载均衡都委托给阿里云的 SLB 了，SLB 代理的后端请求只能限定 http。我的想法还是监听所有请求 443 端口的域名并返回 301，但以下方案并没有成功:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;labels&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.notify=true
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.httpsRedirectCode=301
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.serviceDomainAlgo=hdr_dom（host）
    
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.srcPort.1=80
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.port.1=8080
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.serviceDomain.1=localhost
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.reqPathSearchReplace.1=/alive,/v1/docker-flow-proxy/ping
    
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.srcPort.2=443
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.port.2=8080
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.serviceDomain.2=youclk.com,localhost
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.httpsOnly.2=true&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然重定向可以在各服务内部实现，但我不认为这是个好的解决方案。最后的最后，我想反正迟早都要上 CND，于是就在 CND 中加了 https 重定向（哎，就是带宽的费用要 double 咯...）:&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/801714/201803/801714-20180307202658407-1867823771.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;除了代理，最好再加一个监控服务，我选择了官方案例中的 visualizer ，配合 proxy 示例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;services&lt;/span&gt;:
  &lt;span class=&quot;kw&quot;&gt;visualizer&lt;/span&gt;:
    &lt;span class=&quot;kw&quot;&gt;image&lt;/span&gt;: dockersamples/visualizer
    &lt;span class=&quot;kw&quot;&gt;networks&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; proxy
    &lt;span class=&quot;kw&quot;&gt;volumes&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;/var/run/docker.sock:/var/run/docker.sock&quot;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;deploy&lt;/span&gt;:
      &lt;span class=&quot;kw&quot;&gt;placement&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;constraints&lt;/span&gt;: [node.role == manager]
      &lt;span class=&quot;kw&quot;&gt;labels&lt;/span&gt;:
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.notify=true
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.serviceDomain=visualizer.youclk.com
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.port=8080
        &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; com.df.usersSecret=admin&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;visualizer 算是敏感服务了，一般需要用密码保护，这里通过 &lt;code&gt;com.df.usersSecret&lt;/code&gt; 指定了密码文件，密码已写入 &lt;code&gt;secrets dfp_users_admin&lt;/code&gt; 中。注意，com.df.usersSecret 的值与 dfp_users_* 必须相同，示例已在上文。部署后显示如下：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/801714/201803/801714-20180307213510494-1642212566.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;docker-flow-proxy 还有一个默认的监控服务，显示如下：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/801714/201803/801714-20180307214327657-2137218629.png&quot;/&gt;&lt;br/&gt;不过数据没有统一收集，因此意义不大，看看就好。除此之外就是真正需要部署的应用了，只要服务器性能足够，随便想来几个来几个。&lt;/p&gt;
&lt;h2 id=&quot;部署与维护&quot;&gt;5. 部署与维护&lt;/h2&gt;
&lt;h4 id=&quot;docker-stack&quot;&gt;docker stack&lt;/h4&gt;
&lt;p&gt;部署命令:&lt;code&gt;docker stack deploy -c docker-compose.yml --with-registry-auth youclk&lt;/code&gt;，私有仓库必须加 &lt;code&gt;--with-registry-auth&lt;/code&gt; 才能下载镜像。除此之外常用的如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;co&quot;&gt;# network volume service secret 用法都类似，同出一系嘛...&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; stack ls
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; stack ps youclk
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; stack rm youclk&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;docker-service&quot;&gt;docker service&lt;/h4&gt;
&lt;p&gt;我使用 Compose 的场景一般都结合 Swarm，因此很少去记手动创建或者更改配置的命令了，意义也不大。除了查看移除等与上文相似以外，此处还应记两个:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sh&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; service logs --tail 10  youclk_proxy
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; service update --force youclk_proxy&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分别是查看日志和服务异常后强制重启。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;结语&lt;/h2&gt;
&lt;p&gt;到此为止写了蛮多了，其余还有一些比较重要内容的后续有空再整理一篇。总结一下，开头我放的那张图其实很形象：Docker 可以看做集装箱把杂乱的货物一个个整理归类， Compose 则是用于编排这些集装箱，最后 Swarm 就是多提供几条船，挂掉一两条还能继续走，提高稳定性。&lt;/p&gt;
&lt;p&gt;不知为何此刻我会突然想到一句诗：“天苍苍野茫茫风吹草低见牛羊”，有关联吗？没关联，想到就写了，晚安:)&lt;/p&gt;
</description>
<pubDate>Wed, 07 Mar 2018 15:31:00 +0000</pubDate>
<dc:creator>捷义</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/youclk/p/8453526.html</dc:identifier>
</item>
<item>
<title>R语言-动画 - 月上贺兰</title>
<link>http://www.cnblogs.com/luhuajun/p/8526037.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/luhuajun/p/8526037.html</guid>
<description>&lt;p&gt;使用动画可以使得图形更形象,更能反映数据的变化&lt;/p&gt;
&lt;p&gt;1.安装环境gganimate&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(!require(devtools)) install.packages(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;devtools&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; devtools::install_github(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;dgrtwo/gganimate&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt;需要注意的是这个包依赖于ImageMagick来产生动画，所以还需要安装ImageMagick&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; install.packages(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;installr&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; installr::install.ImageMagick(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://www.imagemagick.org/script/download.php&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt;在安装该软件的过程中,有一个页面全部打钩,否则动画无法找到可执行文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.加载包&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;library(readr)
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;library(dplyr)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;library(DT)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;library(maps)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;library(ggplot2)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;library(ggthemes)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;library(tibble)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;library(lubridate)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;library(tidyr)
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; library(gganimate)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.加载数据集&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; url_csv &amp;lt;- &lt;span&gt;'&lt;/span&gt;&lt;span&gt;https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; rladies &amp;lt;- read_csv(url(url_csv))%&amp;gt;%
&lt;span&gt;3&lt;/span&gt;   select(-1&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; datatable(rladies, rownames =&lt;span&gt; FALSE,
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;           options = list(pageLength = 5))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307220517786-775950070.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　结论:该数据集是Rladies数据集,是一个全球女权组织的社区,主要改变性别歧视&lt;/p&gt;
&lt;p&gt;　　主要字段:screen_name 社区名称&lt;/p&gt;
&lt;p&gt;　　　　　　 location 地点&lt;/p&gt;
&lt;p&gt;                      created_at 创建时间&lt;/p&gt;
&lt;p&gt;　　　　　　 follower 追随人数&lt;/p&gt;
&lt;p&gt;　　　　　　 age_days 到目前的时间(2017-05-16)&lt;/p&gt;
&lt;p&gt;                      lon 社区的经度&lt;/p&gt;
&lt;p&gt;                      lat  社区的纬度&lt;/p&gt;
&lt;p&gt;4.静态图形&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 加载世界地图&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; world &amp;lt;- ggplot() +
&lt;span&gt; 3&lt;/span&gt;   borders(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;world&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,color=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;gray85&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,fill=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;gray80&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)+
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;  theme_map()
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 将每个社区作为点加载到地图上&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; map &amp;lt;- world + 
&lt;span&gt; 8&lt;/span&gt;   geom_point(aes(x=lon,y=lat,size=followers),data=rladies,colour=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=.5)+
&lt;span&gt; 9&lt;/span&gt;   scale_size_continuous(range=c(1,8),breaks=c(250,500,750,1000))+
&lt;span&gt;10&lt;/span&gt;   labs(size=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Followers&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307223221904-357829738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　结论:可以看出美国和欧洲的女权社区很多&lt;/p&gt;
&lt;p&gt;5.创建动态图形(展示每一个月的变化)&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;使用tibble创建开始日期和起始点的数据,tribble是data.frame的替代&lt;/span&gt;
ghost_points_ini &amp;lt;-&lt;span&gt; tibble(
  created_at &lt;/span&gt;= as.Date(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;2011-09-11&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
  followers&lt;/span&gt;=0,lon=0,lat=&lt;span&gt;0
)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 使用tibble创建结束日期和终止点的数据&lt;/span&gt;
ghost_points_fin &amp;lt;-&lt;span&gt; tibble(
  created_at&lt;/span&gt;=seq(as.Date(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;2017-05-16&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                 as.Date(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;2017-05-30&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                 by&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
  followers&lt;/span&gt;=0,lon=0,lat=&lt;span&gt;0
)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; gganimate 需要指定frame作为参数,&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt; cumulative 为T表示
map &amp;lt;- world +&lt;span&gt; 
  geom_point(aes(x&lt;/span&gt;=lon,y=lat,size=&lt;span&gt;followers,
                 frame&lt;/span&gt;=created_at,cumulative=&lt;span&gt;T),
             data&lt;/span&gt;=rladies,color=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=.5)+&lt;span&gt;
  geom_point(aes(x&lt;/span&gt;=lon,y=lat,size=&lt;span&gt;followers,
                 frame&lt;/span&gt;=created_at,cumulative=&lt;span&gt;T),
             data&lt;/span&gt;=ghost_points_ini,color=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=0)+&lt;span&gt;
  geom_point(aes(x&lt;/span&gt;=lon,y=lat,size=&lt;span&gt;followers,
                 frame&lt;/span&gt;=created_at,cumulativte=&lt;span&gt;T),
             data&lt;/span&gt;=ghost_points_fin,color=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=0)+&lt;span&gt;
  scale_size_continuous(range&lt;/span&gt;=c(1,8),breaks=c(250,500,750,1000))+&lt;span&gt;
  labs(size&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Followers&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;开启动画&lt;/span&gt;
gganimate(map)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307225738229-831858345.png&quot; alt=&quot;&quot; width=&quot;453&quot; height=&quot;428&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307225754079-266053423.png&quot; alt=&quot;&quot; width=&quot;460&quot; height=&quot;456&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307230000830-216142596.png&quot; alt=&quot;&quot; width=&quot;402&quot; height=&quot;466&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　结论:可以知道女权社区起源于美国,慢慢向欧洲扩散,最后覆盖到拉丁美洲,此图还有修改的空间,圆点随着社区成立的时间而增大&lt;/p&gt;
&lt;p&gt;6.修改动态图形&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;79&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 选择月份中展示的日期展示(1,10,20)&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; dates &amp;lt;-&lt;span&gt; as_tibble(seq(floor_date(as.Date(min(rladies$created_at)),
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;                                   unit = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;month&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;                        as.Date(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;2017-05-15&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                        by=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)) %&amp;gt;%
&lt;span&gt; 6&lt;/span&gt;   filter(day(value) %&lt;span&gt;in&lt;/span&gt;% c(1,10,20&lt;span&gt;))
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 创建新的数据集,只选择screen_name和date,同时根据时间计算用户的比例&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; rladies_frames &amp;lt;- rladies %&amp;gt;%
&lt;span&gt;10&lt;/span&gt;   select(screen_name) %&amp;gt;%
&lt;span&gt;11&lt;/span&gt;   expand(screen_name,date=dates$value) %&amp;gt;%
&lt;span&gt;12&lt;/span&gt;   right_join(rladies,by=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;screen_name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;) %&amp;gt;%
&lt;span&gt;13&lt;/span&gt;   filter(date &amp;gt; created_at) %&amp;gt;%
&lt;span&gt;14&lt;/span&gt;   mutate(age_total=as.numeric(age_days,units=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;          age_at_date= as.numeric(difftime(date,created_at,units = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;                                  units = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;days&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;          est_followers=((followers-1)/age_total)*&lt;span&gt;age_at_date)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; ghost_points_ini2 &amp;lt;- ghost_points_ini %&amp;gt;%
&lt;span&gt;20&lt;/span&gt;   mutate(date=created_at,est_followers =&lt;span&gt; 0)
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; ghost_points_fin2 &amp;lt;- ghost_points_fin %&amp;gt;%
&lt;span&gt;23&lt;/span&gt;   expand(date=created_at,rladies) %&amp;gt;%
&lt;span&gt;24&lt;/span&gt;   select(date,est_followers=&lt;span&gt;followers,lon,lat)
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt; map_frames &amp;lt;- world +
&lt;span&gt;27&lt;/span&gt;   geom_point(aes(x=lon,y=lat,size=est_followers,frame=&lt;span&gt;date),
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;          data=rladies_frames,colour=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=.5)+
&lt;span&gt;29&lt;/span&gt;   geom_point(aes(x=lon,y=lat,size=est_followers,frame=&lt;span&gt;date),
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;              data = ghost_points_ini2,alpha=0)+
&lt;span&gt;31&lt;/span&gt;   geom_point(aes(x=lon,y=lat,size=est_followers,frame=&lt;span&gt;date),
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;              data = ghost_points_fin2,colour=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;purple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,alpha=.5)+
&lt;span&gt;33&lt;/span&gt;   scale_size_continuous(range=c(1,8),breaks=c(250,500,750,1000))+
&lt;span&gt;34&lt;/span&gt;   labs(size=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Followers&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; 
&lt;span&gt;36&lt;/span&gt; gganimate(map_frames)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307231349606-272498456.png&quot; alt=&quot;&quot; width=&quot;439&quot; height=&quot;487&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307231556211-1498345856.png&quot; alt=&quot;&quot; width=&quot;433&quot; height=&quot;480&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1173792/201803/1173792-20180307231629150-1333847781.png&quot; alt=&quot;&quot; width=&quot;424&quot; height=&quot;475&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 　　结论:可以看出全球女权社区不断地壮大的过程&lt;/p&gt;
&lt;p&gt;　　　　  2012~2016年女权社区处于起步的状态,集中在美国,&lt;/p&gt;
&lt;p&gt;　　   　  2016~2017年开始向欧洲发展,2017年欧洲的女权社区的规模超过美国&lt;/p&gt;
&lt;p&gt;　　　　 2017年之后女权社区王拉丁美洲开始逐步的发展&lt;/p&gt;

</description>
<pubDate>Wed, 07 Mar 2018 15:20:00 +0000</pubDate>
<dc:creator>月上贺兰</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/luhuajun/p/8526037.html</dc:identifier>
</item>
<item>
<title>canvas动画:自由落体运动 - 悠悠i</title>
<link>http://www.cnblogs.com/youyoui/p/8525730.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/youyoui/p/8525730.html</guid>
<description>&lt;p&gt;经过前面的文章，我们已经能够在canvas画布上画出各种炫酷的图形和画面，但是这些画面都是禁止的，怎么样才能让他们动起来呢？&lt;/p&gt;
&lt;h2 id=&quot;动画的基本步骤&quot;&gt;动画的基本步骤&lt;/h2&gt;
&lt;p&gt;我们知道，动画是一帧一帧的画面不断反映实现的，人的眼睛看到一幅画或一个物体后，在0.34秒内不会消失。利用这一原理，在一幅画还没有消失前播放下一幅画，就会给人造成一种流畅的视觉变化效果。在canvas中，就是在绘制完当前画面之后，快速的绘制下一个画面。步骤如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;清空canvas。
&lt;ul&gt;&lt;li&gt;除非接下来要画的内容会完全充满 canvas （例如背景图），否则你需要清空所有画布上的内容。最简单的做法就是用&lt;code&gt;clearRect&lt;/code&gt;方法。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;保存canvas状态。
&lt;ul&gt;&lt;li&gt;如果你要改变一些会改变 canvas 状态的设置（样式，变形之类的），又要在每画一帧之时都是原始状态的话，你需要先保存一下。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;绘制动画图形（animated shapes）。
&lt;ul&gt;&lt;li&gt;这一步才是重绘动画帧。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;恢复 canvas 状态。
&lt;ul&gt;&lt;li&gt;如果已经保存了 canvas 的状态，可以先恢复它，然后重绘下一帧。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;操纵动画&quot;&gt;操纵动画&lt;/h2&gt;
&lt;p&gt;在 canvas 上绘制内容是用 canvas 提供的或者自定义的方法，而通常，我们仅仅在脚本执行结束后才能看见结果，比如说，在 for 循环里面做完成动画是不太可能的。&lt;/p&gt;
&lt;p&gt;因此，为了实现动画，我们需要一些可以定时执行重绘的方法。window对象提供了下面的方法实现定时动画：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;setInterval(function, delay)&lt;/code&gt;当设定好间隔时间后，function会定期执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTimeout(function, delay)&lt;/code&gt;在设定好的时间之后执行函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requestAnimationFrame(callback)&lt;/code&gt;告诉浏览器你希望执行一个动画，并在重绘之前，请求浏览器执行一个特定的函数来更新动画。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;如果你并不需要与用户互动，你可以使用setInterval()方法，它就可以定期执行指定代码。如果我们需要做一个游戏，我们可以使用键盘或者鼠标事件配合上setTimeout()方法来实现。通过设置事件监听，我们可以捕捉用户的交互，并执行相应的动作。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;这个方法提供了更加平缓并更加有效率的方式来执行动画，当系统准备好了重绘条件的时候，才调用绘制动画帧。一般每秒钟回调函数执行60次，也有可能会被降低。&lt;/p&gt;
&lt;p&gt;在使用&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;方法的过程中，我推荐使用下面的兼容性方法来代替：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;requestAnimationFrame&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;requestAnimationFrame&lt;/span&gt;       &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;webkitRequestAnimationFrame&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;mozRequestAnimationFrame&lt;/span&gt;    &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;oRequestAnimationFrame&lt;/span&gt;      &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;msRequestAnimationFrame&lt;/span&gt;     &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; (callback) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setTimeout&lt;/span&gt;(callback&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt; / &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;canvas动画实例-模拟小球自由落体运动&quot;&gt;canvas动画实例-模拟小球自由落体运动&lt;/h2&gt;
&lt;p&gt;上面介绍了canvas动画的基本概念，接下来我们将会在canvas中实现小球下落的动画。小球的完整代码再本文结尾。&lt;a href=&quot;http://www.cnblogs.com/youyoui/p/8525730.html#source&quot;&gt;点击可跳转到结尾&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;绘制小球&quot;&gt;绘制小球&lt;/h3&gt;
&lt;p&gt;首先需要在canvas上绘制一个小球。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;23&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; ctx &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'canvas'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;getContext&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'2d'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;ctx) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'您的浏览器不支持canvas'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 可以抛出异常强制结束JS执行&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;Do not support canvas&quot;&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; ball &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球的x坐标&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球的y坐标&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球半径&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'cyan'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 小球颜色&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 绘制小球的函数&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;arc&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;closePath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fill&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 清除小球区域的函数&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearRect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 绘制小球&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;添加运动描述&quot;&gt;添加运动描述&lt;/h3&gt;
&lt;p&gt;绘制了小球之后，要添加动画，还需要为小球添加速率矢量进行移动。另外，速度也是变化的量，对于只有落体运动，还有竖直方向的重力加速度，所以还需要为小球加上加速度。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; ball &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球的x坐标&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球的y坐标&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 小球水平方向速度&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 小球竖直方向速度&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 小球水平方向加速度&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;ay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 小球竖直方向加速度&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 两帧之间的时间为1个单位时间&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 小球半径&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'cyan'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 小球颜色&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(v&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; t) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 匀加速直线运动的位移公式：s=vt+1/2at^2&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;fl&quot;&gt;2.0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 计算水平方向的位移&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 计算竖直方向的位置&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 计算小球下一时刻的位移&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dx&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dy&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;co&quot;&gt;// 计算小球下一时刻的速度：v_t = v_0 + a*t&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;boundary&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;假设每一帧之间的时间是单位时间，那么根据当前小球的位置速度和加速度，我们就可以计算下一帧的小球的位置和速度，此时清空上一帧的canvas，再绘制下一帧，即可实现动画效果。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; animate&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 记录动画&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;// 绘制一帧&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 1：清空画布&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearRect&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 2：绘制小球&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 3：计算小球的下一个状态&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;next&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 4：进入下一帧&lt;/span&gt;
    animate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;requestAnimationFrame&lt;/span&gt;(draw)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;边界处理&quot;&gt;边界处理&lt;/h3&gt;
&lt;p&gt;若没有任何的碰撞检测，我们的小球很快就会超出画布。我们需要检查小球的 x 和 y 位置是否已经超出画布的尺寸以及是否需要将速度矢量反转。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;boundary&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(top&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; right&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; bottom&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 检测小球下一帧是否出界，出界则补正&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bottom) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 下边界越界&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 速度反向&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; top) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; right) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 速度反向&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;添加拖尾效果&quot;&gt;添加拖尾效果&lt;/h3&gt;
&lt;p&gt;为了使得小球运动更加逼真，可以添加拖尾效果。使用&lt;code&gt;clearRect&lt;/code&gt;函数清除前一帧动画时，若用一个半透明的&lt;code&gt;fillRect&lt;/code&gt;函数取代之，就可轻松制作长尾效果。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'rgba(255,255,255,0.3)'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillRect&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;移动鼠标到canvas内可让小球动起来！&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3 id=&quot;遗留问题和优化&quot;&gt;遗留问题和优化&lt;/h3&gt;
&lt;p&gt;在实际的生活中，小球碰撞到地面反弹的时候，反弹的高度会越来越低，因为碰撞地面损失了一部分速度。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;boundary&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(top&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; right&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; bottom&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 检测小球下一帧是否出界，出界则补正&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bottom) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 下边界越界&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 速度反向&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.9&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 速度损失&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; top) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; right) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 速度反向&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这种方式会偶尔使得小球无法反弹。&lt;/p&gt;
&lt;p&gt;在碰撞地面的时候，小球的反弹之后的速度和位移，准确值需要根据严格的匀加速公式以及损失之后的速度来计算。&lt;/p&gt;
&lt;p&gt;边界检查时上述方法是检查圆心和边界的位置，更好的方式是检查圆周和边界的距离。&lt;/p&gt;
&lt;p&gt;源码可以以及效果可以参考这儿：&lt;a href=&quot;http://asset.uusama.com/example/ball_base.html&quot;&gt;本文实例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上述所有方式的源代码如下：&lt;br/&gt;&lt;/p&gt;

&lt;div class=&quot;sourceCode&quot; readability=&quot;57&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;&lt;span class=&quot;dt&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;html&lt;span class=&quot;dt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;html&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; lang=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;meta&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; charset=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;ball animate&lt;span class=&quot;kw&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        body &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;margin:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;padding:&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;/*background: #000;*/&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;overflow:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
        canvas &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;padding:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;background:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;#000&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;border:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;solid&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;canvas&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; id=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;canvas&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; canvas &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'canvas'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; SCREEN_WIDTH &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            SCREEN_HEIGHT &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;window&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHeight&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            ACCURACY &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; ACCURACY_COMPARE &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e-5&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; context &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getContext&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'2d'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            animation&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; running &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; Ball &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// x 坐标&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// y 坐标&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// x 方向初始速度&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// y 方向初始速度&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// x 方向位移&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// y 方向位移&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 计算位移&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(v&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; t)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;fl&quot;&gt;2.0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; t&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// x 方向碰撞速度损失&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// y 方向碰撞速度损失&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// 水平方向加速度&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 竖直方向加速度&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// 两帧之间的时间间隔&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 小球半径&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 小球质量&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 小球颜色&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'cyan'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 小球绘制函数&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;Ball&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;prototype&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;arc&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;closePath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fill&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 清除小球&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;Ball&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;prototype&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearRect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;// 获取小球下一个状态&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;Ball&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;prototype&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 记录当前状态值&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; current_x &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; current_vx &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; t1&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; self &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                current_y &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; current_vy &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// 下一状态理想坐标&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dx&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dy&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;co&quot;&gt;// 下一状态理想速度&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;boundary&lt;/span&gt;(top&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; right&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; bottom&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 边界判断，预判下一状态是否碰撞下方墙壁&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; bottom) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 越界需要重新计算速度和坐标&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算刚好碰到边界之前的速度： vt = sqrt(2aS + v0^2)&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; (bottom &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_y) &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; current_vy &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; current_vy))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; current_vy &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; : &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;at&quot;&gt;isNaN&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; bottom&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算从当前位置到碰撞位置的时间&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (bottom &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_y) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;((&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_vy) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后速度衰减并反向&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后反弹的位移位置&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; bottom &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; t1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 位移小于阈值，则速度归零&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (bottom &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; ACCURACY) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; bottom&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; right) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 越界需要重新计算速度和坐标&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算刚好碰到边界之前的速度： vt = sqrt(2aS + v0^2)&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; (right &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_x) &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; current_vx &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; current_vx))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; current_vx &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; : &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;at&quot;&gt;isNaN&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; right&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算从当前位置到碰撞位置的时间&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (right &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_x) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;((&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_vx) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后速度衰减并反向&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后反弹的位移位置&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; right &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; t1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 位移小于阈值，则速度归零&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (right &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; ACCURACY) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; right&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 越界需要重新计算速度和坐标&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算刚好碰到边界之前的速度： vt = sqrt(2aS + v0^2)&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; (current_x &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; left) &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; current_vx &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; current_vx))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; current_vx &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; : &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;at&quot;&gt;isNaN&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; left&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算从当前位置到碰撞位置的时间&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (current_x &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; left) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;((&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_vx) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后速度衰减并反向&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后反弹的位移位置&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; t1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 位移小于阈值，则速度归零&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; left &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; ACCURACY) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vx&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; left&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; top) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 越界需要重新计算速度和坐标&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算刚好碰到边界之前的速度： vt = sqrt(2aS + v0^2)&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; (current_y &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; top) &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; current_vy &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; current_vy))&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; current_vy &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; : &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;at&quot;&gt;isNaN&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; top&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 计算从当前位置到碰撞位置的时间&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (top &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_y) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    t1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;abs&lt;/span&gt;((&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; current_vy) / &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后速度衰减并反向&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;loss_y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 碰撞后反弹的位移位置&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; t1)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 位移小于阈值，则速度归零&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; top &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; ACCURACY) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;vy&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; top&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;at&quot;&gt;boundary&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;clear&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'rgba(0,0,0,0.3)'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;context&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillRect&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;height&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; ball &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Ball&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; animate&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;clear&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;next&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;running) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clientY&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            animate &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            running &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            running &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;at&quot;&gt;clearInterval&lt;/span&gt;(animate)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;va&quot;&gt;ball&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;&amp;lt;/body&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 07 Mar 2018 15:16:00 +0000</pubDate>
<dc:creator>悠悠i</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/youyoui/p/8525730.html</dc:identifier>
</item>
<item>
<title>WPF自学入门（一）WPF-XAML基本知识 - 黄昏前黎明后</title>
<link>http://www.cnblogs.com/fly-bird/p/8525948.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fly-bird/p/8525948.html</guid>
<description>&lt;p&gt;一、基本概念&lt;/p&gt;
&lt;p&gt;1、XAML是派生自XML的可扩展应用程序标记语言（Extensible Application Markup Language）由微软创造应用在WPF,Silverlight等开发技术中。&lt;/p&gt;
&lt;p&gt;2、在WPF中，XAML用来开发用户界面。相对XML在语法上有一定的创新，同时继承了XML的Tag，Attribute等语法。&lt;/p&gt;
&lt;p&gt;3、在WPF中，XAML运行在CLR之上，但它不编译为IL，而是编译为BAML代码，在运行时会被解析成CLR类型(Types)。&lt;/p&gt;
&lt;p&gt;4、WPF中XAML是大小写敏感的。&lt;/p&gt;
&lt;p&gt;二、基本语法&lt;/p&gt;
&lt;p&gt;      要学习wpf，我们需要采用webform的思维来考虑问题。在WPF之中，XAML是很重要的一个元素，它是用来构造WPF的UI界面的，正是因为WPF有了XAML这标记语言，它才能实现把界面和逻辑分离开来的一种设计模式，逻辑程序员写后台代码，而前台的界面设计由设计人员用XAML来负责，这样，就很好的进行了分工，这就是WPF吸引人的地方之一。&lt;/p&gt;
&lt;p&gt;        开始WPF的Hello World基本语法解析。&lt;/p&gt;
&lt;p&gt;新建WPF项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/IPm*C6R78XpOZdo8VDbDj4DG12TsYDqnQ6reMZM12x0!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJ*AQAAAAADEGM!&amp;amp;su=059941009&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;553.0&quot; height=&quot;382.44000244140625&quot; data-img-idx=&quot;0&quot; data-src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/IPm*C6R78XpOZdo8VDbDj4DG12TsYDqnQ6reMZM12x0!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJ*AQAAAAADEGM!&amp;amp;su=059941009&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;项目默认文件结构，引用中导入了如下4个wpf开发必备的dll，这也是xaml中默认的命名空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/5lZjwENEYzm925FjC9oDNpr7p9i0nTVpEJmjXWQFhPc!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=MwFkAQAAAAADEGI!&amp;amp;su=0197986321&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;306.6700134277344&quot; height=&quot;355.6099853515625&quot; data-img-idx=&quot;1&quot; data-src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/5lZjwENEYzm925FjC9oDNpr7p9i0nTVpEJmjXWQFhPc!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=MwFkAQAAAAADEGI!&amp;amp;su=0197986321&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注意：在目录结构中我们没有看到program的主入口类，WPF中是通过APP文件是程序的入口，后续我会用专门一篇文章来写启动主界面的不同方式。我们看一下编译后的结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a3.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/PpqEVU4pG6Q2WPg9GqKn3CqrloPQc46WZtIcuCBpooU!/b/dFYBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgKUAQAAAAADEIg!&amp;amp;su=0209374897&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;553.0&quot; height=&quot;403.4200134277344&quot; data-img-idx=&quot;2&quot; data-src=&quot;http://a3.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/PpqEVU4pG6Q2WPg9GqKn3CqrloPQc46WZtIcuCBpooU!/b/dFYBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgKUAQAAAAADEIg!&amp;amp;su=0209374897&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://a1.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/dwaomMGyTAgnldAuzXb.nOJL8SrQ3QgoAdj3K9Yk9Kw!/b/dAQBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJXAQAAAAADEEs!&amp;amp;su=0140591169&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;553.0&quot; height=&quot;342.989990234375&quot; data-img-idx=&quot;3&quot; data-src=&quot;http://a1.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/dwaomMGyTAgnldAuzXb.nOJL8SrQ3QgoAdj3K9Yk9Kw!/b/dAQBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJXAQAAAAADEEs!&amp;amp;su=0140591169&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;

&lt;p&gt;1、标签语法=对象元素(Object Elements)&lt;/p&gt;
&lt;p&gt;        每个标签即是一个对象元素，将被解析为一个WPF Framework（主要来自PresentationFramework.dll）中的类的实例。下面的代码就是一个对象元素，运行时会被解析为一个Button对象实例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a2.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/q6YMl.iozeyzfK*tC8ASP76YSiPqYocri*9e7j*U9JY!/b/dEUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJAAAAAAAADEF0!&amp;amp;su=059395729&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;553.0&quot; height=&quot;63.349998474121094&quot; data-img-idx=&quot;4&quot; data-src=&quot;http://a2.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/q6YMl.iozeyzfK*tC8ASP76YSiPqYocri*9e7j*U9JY!/b/dEUBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=KgJAAAAAAAADEF0!&amp;amp;su=059395729&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;运行效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/Xd12Soqn2ecKKGZrDS9W*Xnp8FFrMFcD9BRaNq3YSrQ!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=*wFVAQAAAAADEJ8!&amp;amp;su=012941393&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot; alt=&quot;&quot; width=&quot;510.6700134277344&quot; height=&quot;340.44000244140625&quot; data-img-idx=&quot;5&quot; data-src=&quot;http://a4.qpic.cn/psb?/1c254e4b-5aa1-477d-9e8a-d6cbfebb6027/Xd12Soqn2ecKKGZrDS9W*Xnp8FFrMFcD9BRaNq3YSrQ!/b/dEMBAAAAAAAA&amp;amp;ek=1&amp;amp;kp=1&amp;amp;pt=0&amp;amp;bo=*wFVAQAAAAADEJ8!&amp;amp;su=012941393&amp;amp;tm=1520431200&amp;amp;sce=0-12-12&amp;amp;rf=2-9&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2、Attribute赋值语法&lt;/p&gt;
&lt;p&gt;       2.1 普通字符串赋值。下面代码给Button的Property和Event赋值。字符串将被通过包装好的TypeConverter来转换成对象。TypeConverter使用C#的Attribute技术来实现的。&lt;/p&gt;
&lt;p&gt;      &amp;lt;Button x:Name=&quot;btnClick&quot; Content=&quot;点我&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;212,136,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; Click=&quot;btnClick_Click&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;2.2 标记扩展赋值。用花括号这种方式赋值就叫标记扩展赋值。常用的地方是在用到绑定和资源的时候。&lt;/p&gt;
&lt;p&gt;       &amp;lt;Button x:Name=&quot;btnClick&quot; Content=&quot;点我&quot; Command=&quot;{Binding Click}&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;212,136,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;2.3 属性元素赋值。有的时候简单字符串赋值不了的，就用属性元素赋值。&lt;/p&gt;
&lt;p&gt;      &amp;lt;Button x:Name=&quot;btnClick1&quot;  HorizontalAlignment=&quot;Left&quot; Margin=&quot;212,160,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; Click=&quot;btnClick_Click&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;            &amp;lt;Button.Content&amp;gt;&lt;/p&gt;
&lt;p&gt;                点我&lt;/p&gt;
&lt;p&gt;            &amp;lt;/Button.Content&amp;gt;&lt;/p&gt;
&lt;p&gt;     &amp;lt;/Button&amp;gt;&lt;/p&gt;

&lt;p&gt;2.4 内容赋值。控件要有Content这个属性，也就是要继承自ContentControl这个类，才能这么赋值。夹在标签中间。&lt;/p&gt;
&lt;p&gt;       &amp;lt;Button&amp;gt;点我&amp;lt;/Button&amp;gt;&lt;/p&gt;

&lt;p&gt;2.5 集合赋值。下面例子是给StackPanel.Children这个属性赋值一个集合，被省略了。这个属性的类型是UIElementCollection。在这个例子，我们也看到WPF支持一些省略的写法，在实际开发中运用，可以使XAML代码更简洁。&lt;/p&gt;
&lt;p&gt;    &amp;lt;StackPanel&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;Button&amp;gt;点我&amp;lt;/Button&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;Button&amp;gt;点我1&amp;lt;/Button&amp;gt;&lt;/p&gt;
&lt;p&gt;   &amp;lt;/StackPanel&amp;gt;&lt;/p&gt;

&lt;p&gt;3、命名空间&lt;/p&gt;
&lt;p&gt;     在WPF中一般用在Root元素上（Application,Window,UserControl,Page,ResourceDictionary等）。如下：&lt;/p&gt;
&lt;p&gt;       xmlns为引入命名空间的attribute。&lt;/p&gt;
&lt;p&gt;      第一行xmlns是没有指定别名的，是默认命名空间，它指定的命名空间包含了微软提供所有的XAML控件的程序集。&lt;/p&gt;
&lt;p&gt;       第二、三、四行xmlns别名是x，d，mc，也是微软提供的命名空间，这里面主要包含了一些关于解析Xaml语言的程序集。&lt;/p&gt;
&lt;p&gt;       第五行xmlns是自己引入的，开发人员自己写的控件等，可以通过命名空间这种方式引用到XAML文档来使用。&lt;/p&gt;
&lt;p&gt;&amp;lt;Window x:Class=&quot;WpfApplicationDemo.MainWindow&quot;&lt;/p&gt;
&lt;p&gt;        xmlns=&quot;&lt;a href=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; target=&quot;_blank&quot;&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;        xmlns:x=&quot;&lt;a href=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; target=&quot;_blank&quot;&gt;http://schemas.microsoft.com/winfx/2006/xaml&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;        xmlns:d=&quot;&lt;a href=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; target=&quot;_blank&quot;&gt;http://schemas.microsoft.com/expression/blend/2008&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;        xmlns:mc=&quot;&lt;a href=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; target=&quot;_blank&quot;&gt;http://schemas.openxmlformats.org/markup-compatibility/2006&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;        xmlns:local=&quot;clr-namespace:WpfApplicationDemo&quot;&lt;/p&gt;
&lt;p&gt;        mc:Ignorable=&quot;d&quot;&lt;/p&gt;
&lt;p&gt;        Title=&quot;MainWindow&quot; Height=&quot;350&quot; Width=&quot;525&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;    &amp;lt;Grid&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;Label x:Name=&quot;label&quot; Content=&quot;Hello World！&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;39,20,0,0&quot; VerticalAlignment=&quot;Top&quot;/&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;Button x:Name=&quot;btnClick&quot; Content=&quot;点我&quot; Command=&quot;{Binding Click}&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;212,136,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;Button x:Name=&quot;btnClick1&quot;  HorizontalAlignment=&quot;Left&quot; Margin=&quot;212,160,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; Click=&quot;btnClick_Click&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;            &amp;lt;Button.Content&amp;gt;&lt;/p&gt;
&lt;p&gt;                点我&lt;/p&gt;
&lt;p&gt;            &amp;lt;/Button.Content&amp;gt;&lt;/p&gt;
&lt;p&gt;        &amp;lt;/Button&amp;gt;&lt;/p&gt;
&lt;p&gt;    &amp;lt;/Grid&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/Window&amp;gt;&lt;/p&gt;

&lt;p&gt;4、WPF中的两棵树&lt;/p&gt;
&lt;p&gt;      XAML文档是树状结构的。在WPF中有逻辑树(Logical Tree)和可视树(Visual Tree)的概念，在运行时会维护这两棵树。逻辑树是以我们看到的控件为节点的，逻辑树表示UI的核心结构。和XAML文件中定义的元素近乎相等，排除掉内部生成的那些用来帮助渲染的可视化元素。WPF用逻辑树来决定依赖属性，值继承，资源解决方案等。逻辑树用起来不像可视化树那么简单。对于新手来说，逻辑树可以包含类型对象，这一点和可视化树不同，可视化树只包含Dependancy子类的实例。遍历逻辑树时，要记住逻辑树的叶子可以是任何类型。由于LogicTreeHelper只对DependencyObject有效，遍历逻辑树时需要非常小心，最好做类型检查。而可视树能看到控件内部的元素，这些元素一般继承自Visual类。可视化树代表你界面上所有的渲染在屏幕上的元素。可视化树用于渲染，事件路由，定位资源（如果该元素没有逻辑父元素）等。遍历可视化树可以简单的使用VisualTreeHelper和简单的递归方法。WPF提供了两个辅助类（LogicalTreeHelper and VisualTreeHelper）来操作这两棵树。&lt;/p&gt;

&lt;p&gt;5、附加属性，事件&lt;/p&gt;
&lt;p&gt;     &amp;lt;StackPanel&amp;gt;&lt;/p&gt;
&lt;p&gt;　　&amp;lt;Button Panel.ZIndex=&quot;1&quot;&amp;gt;a&amp;lt;/Button&amp;gt;&lt;/p&gt;
&lt;p&gt;　　&amp;lt;Button Panel.ZIndex=&quot;2&quot;&amp;gt;b&amp;lt;/Button&amp;gt;&lt;/p&gt;
&lt;p&gt;    &amp;lt;/StackPanel&amp;gt;&lt;/p&gt;
&lt;p&gt; Panel.ZIndex就是附加属性，而附加事件在界面上用不了。在后面具体实现项目时在来写附加事件&lt;/p&gt;

&lt;p&gt; PS:本人也是WPF的初学者，如有不对的地方，欢迎在评论区多多指教，学习，为了分享，为了提高。&lt;/p&gt;
</description>
<pubDate>Wed, 07 Mar 2018 14:59:00 +0000</pubDate>
<dc:creator>黄昏前黎明后</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fly-bird/p/8525948.html</dc:identifier>
</item>
<item>
<title>Ajax详解 - 柴小智</title>
<link>http://www.cnblogs.com/chaixiaozhi/p/8525917.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chaixiaozhi/p/8525917.html</guid>
<description>&lt;p&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;一、ajax定义&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;ajax 的全称是&lt;span lang=&quot;EN-US&quot;&gt;Asynchronous JavaScript and XML，其中，&lt;span lang=&quot;EN-US&quot;&gt;Asynchronous 是异步的意思，它有别于传统&lt;span lang=&quot;EN-US&quot;&gt;web开发中采用的同步的方式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;ajax原理和&lt;span lang=&quot;EN-US&quot;&gt;XmlHttpRequest对象&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Ajax的原理简单来说通过&lt;span lang=&quot;EN-US&quot;&gt;XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用&lt;span lang=&quot;EN-US&quot;&gt;javascript来操作&lt;span lang=&quot;EN-US&quot;&gt;DOM而更新页面。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;XMLHttpRequest是&lt;span lang=&quot;EN-US&quot;&gt;ajax的核心机制，它是在&lt;span lang=&quot;EN-US&quot;&gt;IE5中首先引入的，是一种支持异步请求的技术。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;简单的说，也就是&lt;span lang=&quot;EN-US&quot;&gt;javascript可以及时向服务器提出请求和处理响应，而不阻塞用户。达到无刷新的效果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;XMLHttpRequest这个对象的属性及从服务器请求数据的过程：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;它的属性有：&lt;/p&gt;
&lt;p&gt;  　　onreadystatechange  每次状态改变所触发事件的事件处理程序。&lt;/p&gt;
&lt;p&gt;  　　responseText     从服务器进程返回数据的字符串形式。&lt;/p&gt;
&lt;p&gt;  　　responseXML    从服务器进程返回的DOM兼容的文档数据对象。&lt;/p&gt;
&lt;p&gt;  　　&lt;strong&gt;status           从服务器返回的数字代码，比如常见的404（未找到）和200（已就绪）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  　　status Text       伴随状态码的字符串信息&lt;/p&gt;
&lt;p&gt;  　　&lt;strong&gt;readyState       对象状态值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请求数据的过程：　&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;0：未初始化。未调用open()方法&lt;/li&gt;
&lt;li&gt;1：启动。已经调用open()方法，未调用send()方法&lt;/li&gt;
&lt;li&gt;2：发送。已经调用send()方法，未接收到响应&lt;/li&gt;
&lt;li&gt;3：接收。已经接收到部分数据&lt;/li&gt;
&lt;li&gt;4：完成。已经接收到全部数据，可以在客户端使用&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;而&lt;span lang=&quot;EN-US&quot;&gt;XMLHttpRequest正是处理了服务器端和客户端通信的问题所以才会如此的重要。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但是，由于各浏览器之间存在差异，所以创建一个&lt;span lang=&quot;EN-US&quot;&gt;XMLHttpRequest对象可能需要不同的方法。这个差异主要体现在&lt;span lang=&quot;EN-US&quot;&gt;IE和其它浏览器之间。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、jquery中的ajax&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先写一个简单例子&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    $.ajax({
        type : &lt;/span&gt;'post'&lt;span&gt;,
        url : &lt;/span&gt;'http://localhost:8080/devLean'&lt;span&gt;,
        data : {age:&lt;/span&gt;23},            success : &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (data) {
            console.log(data);
        }
    })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span&gt;1.jQuery.ajax(...)
       部分参数：&lt;br/&gt;　　　　　　　　&lt;strong&gt;type：请求方式，GET、POST（1.9.0之后用method）&lt;/strong&gt;
              &lt;strong&gt;url：请求地址&lt;br/&gt;　　　　　　　　data：要发送的数据&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;　　　　　　　　&lt;strong&gt;contentType：即将发送信息至服务器的内容编码类型(默认: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;)&lt;/strong&gt;&lt;/span&gt;&lt;span readability=&quot;4&quot;&gt;
            　async：是否异步&lt;p&gt;beforeSend：发送请求前执行的函数(全局)
          &lt;strong&gt;success：成功之后执行的回调函数(全局)&lt;/strong&gt;
            &lt;strong&gt;error：失败之后执行的回调函数(全局)&lt;br/&gt;&lt;/strong&gt;　　　　　　complete：完成之后执行的回调函数(全局)&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
          
         &lt;strong&gt;dataType：将服务器端返回的数据转换成指定类型
            &lt;/strong&gt;&lt;/p&gt;&lt;/span&gt;&quot;xml&quot;&lt;span&gt;: 将服务器端返回的内容转换成xml格式
           &lt;/span&gt;&quot;text&quot;&lt;span&gt;: 将服务器端返回的内容转换成普通文本格式
           &lt;/span&gt;&quot;html&quot;&lt;span&gt;: 将服务器端返回的内容转换成普通文本格式，在插入DOM中时，如果包含JavaScript标签，则会尝试去执行。
         &lt;/span&gt;&quot;script&quot;&lt;span&gt;: 尝试将返回值当作JavaScript去执行，然后再将服务器端返回的内容转换成普通文本格式
           &lt;/span&gt;&quot;json&quot;&lt;span&gt;: 将服务器端返回的内容转换成相应的JavaScript对象
          &lt;/span&gt;&quot;jsonp&quot;: JSONP 格式使用 JSONP 形式调用函数时，如 &quot;myurl?callback=?&quot; jQuery 将自动替换 ? 为正确的函数名，以执行回调函数&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　　headers：请求头
          timeout：设置请求超时时间（毫秒）&lt;/span&gt;
&lt;/pre&gt;
&lt;pre data-filtered=&quot;filtered&quot;&gt;
&lt;span data-filtered=&quot;filtered&quot;&gt;2. jQuery.&lt;span data-filtered=&quot;filtered&quot;&gt;get&lt;span data-filtered=&quot;filtered&quot;&gt;(...)
       所有参数：
              url: 待载入页面的URL地址
             data: 待发送 Key/&lt;span data-filtered=&quot;filtered&quot;&gt;value 参数。
          success: 载入成功时回调函数。
         dataType: 返回内容格式，xml, json,  script, text, html

&lt;span data-filtered=&quot;filtered&quot;&gt;&lt;span data-filtered=&quot;filtered&quot;&gt;3.jQuery.post(...)
       所有参数：
              url: 待载入页面的URL地址
             data: 待发送 Key/&lt;span data-filtered=&quot;filtered&quot;&gt;value 参数
          success: 载入成功时回调函数
         dataType: 返回内容格式，xml, json,  script, text, html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt; $.ajax 中的contentType&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在http 请求中，get 和 post 是最常用的。&lt;/p&gt;
&lt;p&gt;在 jquery 的 ajax 中， contentType都是默认的值：application/x-www-form-urlencoded，这种格式的特点就是，name/value 成为一组，&lt;span&gt;每组之间用 &amp;amp; 联接，而 name与value 则是使用 = 连接&lt;/span&gt;。如： wwwh.baidu.com/q?key=fdsa&amp;amp;lang=zh 这是get , 而 post 请求则是使用请求体，参数不在 url 中，在请求体中的参数表现形式也是: key=fdsa&amp;amp;lang=zh的形式。&lt;/p&gt;
&lt;p&gt;键值对这样组织在一般的情况下是没有什么问题的，这里说的一般是，不带嵌套类型JSON，也就是 简单的JSON，形如这样：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    a: &lt;/span&gt;1&lt;span&gt;,
    b: &lt;/span&gt;2&lt;span&gt;,
    c: &lt;/span&gt;3&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是在一些复杂的情况下就有问题了。 例如在 ajax 中你要传一个复杂的 json 对像，也就说是对象嵌数组，数组中包括对象，兄果你这样传：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  data: {
    a: [{
      x: &lt;/span&gt;2&lt;span&gt;
    }]
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个复杂对象， application/x-www-form-urlencoded 这种形式是没有办法将复杂的 JSON 组织成键值对形式 ,你传进去可以发送请求，但是服务端收到数据为空， 因为 ajax 没有办法知道怎样处理这个数据。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;div id=&quot;highlighter_819133&quot; class=&quot;syntaxhighlighter js&quot; readability=&quot;10&quot;&gt;聪明的程序员发现 http 还可以自定义数据类型，于是就定义一种叫 application/json 的类型。这种类型是 text ， 我们 ajax 的复杂JSON数据，用 JSON.stringify序列化后，然后发送，在服务器端接到然后用 JSON.parse 进行还原就行了，这样就能处理复杂的对象了。&lt;/div&gt;
&lt;div class=&quot;syntaxhighlighter js&quot; readability=&quot;17&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$.ajax({
    dataType: &lt;/span&gt;'json'&lt;span&gt;,
    contentType: &lt;/span&gt;'application/json'&lt;span&gt;,
    data: JSON.stringify({a: [{b:&lt;/span&gt;1, a:1&lt;span&gt;}]})
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 这样你就可以发送复杂JSON的对象了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; $.ajax 中的dataType&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期服务器返回的数据类型。&lt;/strong&gt;如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断，比如XML MIME类型就被识别为XML。&lt;/p&gt;
&lt;p&gt;'''注意'''，我们必须确保网页服务器报告的MIME类型与我们选择的dataType所匹配。比如说，XML的话，服务器端就必须声明 text/xml 或者 application/xml 来获得一致的结果。&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 07 Mar 2018 14:49:00 +0000</pubDate>
<dc:creator>柴小智</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chaixiaozhi/p/8525917.html</dc:identifier>
</item>
<item>
<title>使用vue-cli脚手架初始化Vue项目下的项目结构 - 沉江、小鱼</title>
<link>http://www.cnblogs.com/blog-cxj2017522/p/8525902.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/blog-cxj2017522/p/8525902.html</guid>
<description>&lt;p&gt;　　vue-cli是Vue 提供的一个官方命令行工具，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需几分钟即可创建并启动一个带热重载、保存时静态检查以及可用于生产环境的构建配置的项目。&lt;/p&gt;
&lt;p&gt;　　使用vue-cli有以下几大优势：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;  vue-cli是一套成熟的Vue项目架构设计，会跟着Vue版本的更迭而更新&lt;/li&gt;
&lt;li&gt;  vue-cli提供了一套本地的热加载的测试服务器&lt;/li&gt;
&lt;li&gt;  vue-cli集成了一套打包上线的方案，可使用webpack或Browserify等构建工具&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　下面来安装vue-cli&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
# 必须全局安装vue-&lt;span&gt;cli，否则无法使用vue命令&lt;br/&gt;# 安装完成之后使用vue -V检查vue-cli是否安装成功及版本信息&lt;br/&gt;$ npm install &lt;/span&gt;-g vue-cli&lt;br/&gt;$ vue -V
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　接下来使用vue-cli创建一个新的Vue项目&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# 项目创建完之后需要执行npm install安装依赖

$ vue init webpack vuedemo&lt;/span&gt;&lt;span&gt;
$ npm install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　创建的vuedemo文件夹所包含的文件如下：&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307213956120-2133200877.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;[index.html]&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　index.html和其他html文件一样，但一般只定义一个空的根节点，在main.js里面定义的实例将挂载在根节点下，内容都通过vue组件来填充，由于所有的挂载元素会被Vue生成的DOM替换，因此不推荐直接挂载实例到&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;或者&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;上。&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307215355193-1968880318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;[main.js]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;是Vue应用的入口文件，用来创建一个新的Vue实例，并将这个实例挂载在根节点下，同时也可以用来引入Vue插件&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307220011195-1117930090.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　‘el’选项：提供一个在页面上已存在的DOM元素作为Vue实例的挂载目标，这里就是index.html中id为‘app’的节点&lt;/p&gt;
&lt;p&gt;　　‘router’选项：将router实例注入到Vue根实例中，使它的每个子组件都可以访问$router (router实例)和$route (当前激活的路由信息对象)&lt;/p&gt;
&lt;p&gt;　　‘template’选项：以一个字符串模板作为 Vue 实例的标识使用&lt;/p&gt;
&lt;p&gt;　　‘components’：定义组件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;[App.vue]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;项目的根组件，可以包含其他的子组件，从而组成组件树&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307221918883-2009375825.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;只能包含一个子节点，也就是说顶层的div只能有一个（如图，id为‘app’的div元素没有兄弟节点）&lt;/p&gt;
&lt;p&gt;　　&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;通常用es6来写，用export default导出&lt;/p&gt;
&lt;p&gt;　　&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;中的样式默认是影响全局的，如需定义作用域只在该组件下起作用，需在标签上加scoped，&amp;lt;style scoped&amp;gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;[router/index.js]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;路由配置文件，作用是将组件映射到路由，方便知道在哪里渲染它们&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307223146407-42634613.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;　　接下来，输入下列命令运行项目&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
$ npm run dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　意思是运行package.json中&quot;script&quot;脚本下的dev指代的程序，即：&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1170308/201803/1170308-20180307223844607-588764757.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;　　最后，输入下列命令部署项目&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
$ npm run build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　生成的dist目录，就是打包构建后的项目目录&lt;/p&gt;

&lt;p&gt;（完）&lt;/p&gt;
</description>
<pubDate>Wed, 07 Mar 2018 14:46:00 +0000</pubDate>
<dc:creator>沉江、小鱼</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/blog-cxj2017522/p/8525902.html</dc:identifier>
</item>
</channel>
</rss>