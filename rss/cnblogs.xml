<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>144_二叉树的前序遍历 - StrongXGP</title>
<link>http://www.cnblogs.com/xugenpeng/p/9775788.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xugenpeng/p/9775788.html</guid>
<description>&lt;p class=&quot;toc&quot;&gt;目录&lt;/p&gt;

&lt;h2 id=&quot;描述&quot;&gt;描述&lt;/h2&gt;
&lt;p&gt;给定一个二叉树，返回它的&lt;strong&gt;前序&lt;/strong&gt;遍历。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;输入: [1,null,2,3]  
   1
    \
     2
    /
   3 

输出: [1,2,3]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;进阶：&lt;/strong&gt; 递归算法很简单，你可以通过迭代算法完成吗？&lt;/p&gt;
&lt;h2 id=&quot;方法一递归&quot;&gt;方法一：递归&lt;/h2&gt;
&lt;h3 id=&quot;java-代码&quot;&gt;Java 代码&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List&amp;lt;Integer&amp;gt; preorderTraversal(TreeNode root) {
        List&amp;lt;Integer&amp;gt; res = new ArrayList&amp;lt;&amp;gt;();
        preorderTraversal(root, res);
        return res;
    }
    
    private void preorderTraversal(TreeNode root, List&amp;lt;Integer&amp;gt; res) {
        if (root == null) {
            return;
        }
        
        res.add(root.val);
        preorderTraversal(root.left, res);
        preorderTraversal(root.right, res);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;复杂度分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;时间复杂度：&lt;span class=&quot;math inline&quot;&gt;\(O(n)\)&lt;/span&gt;，其中，&lt;span class=&quot;math inline&quot;&gt;\(n​\)&lt;/span&gt; 为二叉树节点的数目&lt;/li&gt;
&lt;li&gt;空间复杂度：&lt;span class=&quot;math inline&quot;&gt;\(O(n)\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;方法二非递归使用栈&quot;&gt;方法二：非递归（使用栈）&lt;/h2&gt;
&lt;h3 id=&quot;java-代码-1&quot;&gt;Java 代码&lt;/h3&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List&amp;lt;Integer&amp;gt; preorderTraversal(TreeNode root) {
        List&amp;lt;Integer&amp;gt; res = new ArrayList&amp;lt;&amp;gt;();
        if (root == null) {
            return res;
        }
        
        Stack&amp;lt;TreeNode&amp;gt; stack = new Stack&amp;lt;&amp;gt;();
        stack.push(root);
        while (!stack.isEmpty()) {
            TreeNode cur = stack.pop();
            res.add(cur.val);
            
            if (cur.right != null) {
                stack.push(cur.right);
            }
            if (cur.left != null) {
                stack.push(cur.left);
            }
        }
        return res;
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;复杂度分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;时间复杂度：&lt;span class=&quot;math inline&quot;&gt;\(O(n)\)&lt;/span&gt;，其中，&lt;span class=&quot;math inline&quot;&gt;\(n\)&lt;/span&gt; 为二叉树节点的数目&lt;/li&gt;
&lt;li&gt;空间复杂度：&lt;span class=&quot;math inline&quot;&gt;\(O(h)\)&lt;/span&gt;，其中，&lt;span class=&quot;math inline&quot;&gt;\(h\)&lt;/span&gt; 为二叉树的高度&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Thu, 11 Oct 2018 15:36:00 +0000</pubDate>
<dc:creator>StrongXGP</dc:creator>
<og:description>144_二叉树的前序遍历 [TOC] 描述 给定一个二叉树，返回它的 前序 遍历。 示例: 进阶： 递归算法很简单，你可以通过迭代算法完成吗？ 方法一：递归 Java 代码 复杂度分析： 时间复杂度：</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xugenpeng/p/9775788.html</dc:identifier>
</item>
<item>
<title>Hive 官方手册翻译 -- Hive Transactions (Hive 事务) - 范振勇</title>
<link>http://www.cnblogs.com/fanzhenyong/p/9775713.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fanzhenyong/p/9775713.html</guid>
<description>&lt;p align=&quot;right&quot;&gt;由 Alan Gates创建, 最终由 Andrew Sherman修改于2018年8月7日&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;原文链接：&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Hive+Transactions&quot;&gt;https://cwiki.apache.org/confluence/display/Hive/Hive+Transactions&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;翻译：Google Google翻译，金山软件 金山词霸&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;校对：南大通用 范振勇 (如有翻译问题，请多指教)&lt;/p&gt;

&lt;p&gt;　　升级到Hive 3.0时，由之前版本创建的任何事务性表都需要在每个分区上运行Major(主要/深度)级紧缩操作。更确切地说，自上一次Major级紧缩操作之后，在其上执行任何Update/Delete/Merge语句的分区，都必须再进行一次Major级紧缩操作。就是说，在Hive升级到Hive 3之前，此分区上不会发生任何Update/Delete/Merge操作。&lt;/p&gt;

&lt;p&gt;　　ACID代表了数据库事务的四个特征：原子性(一个操作要么完全成功，要么失败，绝不会留下部分数据) 、一致性(一旦应用程序执行了一个操作，该操作的结果在它以后的每个操作中都是可见的)、隔离性(一个用户未完成的操作不会对其他用户造成意外影响)，以及持久性(一旦一个操作完成，它将保持下来，即便面对机器故障或系统故障)。一直以来，这些特性被认为是数据库系统事务功能的一部分。&lt;/p&gt;
&lt;p&gt;　　截止到 0.13，Hive都只提供分区级别的原子性、一致性和持久性。可以通过打开一种可用的锁机制(Zookeeper或内存)来提供隔离性。随着在Hive 0.13中添加事务，现在可以在行级别提供完整的ACID语义，这样一个应用程序就可以在另一个应用程序读取同一个分区时添加行，而不会相互干扰。&lt;/p&gt;
&lt;p&gt;Hive中添加ACID语义事务的特性，可以解决以下用例：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt; 流数据的采集。许多用户使用如Apache Flume，Apache Storm，或Apache Kafka等工具，将数据流到自己的Hadoop集群。尽管这些工具可以每秒数百行或更多行的速度写入数据，但Hive只能每十五分钟到一小时的添加分区。更短间隔的添加分区会导致表中出现大量的分区。这些工具可以将数据流到现有的分区中，但这将导致读操作产生脏读(也就是说，能看到在启动查询后会写入的数据)，并在目录中留下许多小文件，这将给NameNode带来压力。使用此事务功能，将支持此场景，同时保证读操作获得一致的数据视图，并避免过多的文件。&lt;/li&gt;
&lt;li&gt; 缓慢变化的维度（表）。在典型的星型模型的数据仓库中，维度表随着时间的推移变化很缓慢。例如，零售商开设新的商店，这些商店需要添加到商店表中，或者现有的商店可能会改变面积或其他可跟踪的特性。这些更改会导致插入单个记录或更新记录(取决于所选择的策略)。从0.14开始，Hive能够支持这一点。&lt;/li&gt;
&lt;li&gt; 数据重述（译注：财务术语，类似“调帐”）。有时，收集的数据被认为是不正确的，需要修正。或数据的第一个实例可能是近似值（90％的服务报告），随后提供了完整数据。或业务规则可能要求因为随后的交易进行重述某些交易（例如，在购物之后，客户可以购买成员资格，因此有权享受折扣价格，包括在先前的购买记录）。或者用户可以根据合同约定在他们关系的结束时消除其客户的数据。从Hive0.14开始，这些用例可以通过INSERT，UPDATE和DELETE来支持。&lt;/li&gt;
&lt;li&gt; 使用SQL MERGE语句实现批量更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;&lt;li&gt;所有DML操作都是自动提交，尚不支持BEGIN，COMMIT，和ROLLBACK，计划在将来的版本中支持这些特性。&lt;/li&gt;
&lt;li&gt;在第一个版本中只支持ORC文件格式。构建事务特性的初衷是可以使用任何存储格式，只要这些存储格式可以确定如何更新或删除基本记录(基本上，具有显式或隐式的行id即可)，但到目前为止，仅完成针对ORC的集成工作。&lt;/li&gt;
&lt;li&gt;默认情况下，事务被配置为OFF。有关配置值的讨论，请参见下面的配置部分。&lt;/li&gt;
&lt;li&gt;要使用事务特性，表必须分桶。在同一系统中的不使用事务和ACID的表则无需分桶。外部表不能成为ACID表，因为外部表上的更改超出了紧缩器的控制范围(hive-13175)。&lt;/li&gt;
&lt;li&gt;不允许从非ACID的会话中读取/写入ACID表。换句话说，要操作ACID表，必须将Hive事务管理器设置为org.apache.hadoop.hive.ql.lockmgr.DbTxnManager。&lt;/li&gt;
&lt;li&gt;现在只支持快照隔离级别。当一个给定的查询启动时，它会提供该数据的一致快照。不支持脏读（READ UNCIMMITTED）、提交读（READ COMMITTED）、可重复读（REPEATABLE READ）或可序列化（SERIALIZABLE）。引入BEGIN的目的是在事务持续时间内支持快照隔离，而不仅仅是一个查询。根据用户请求，还可以添加其他隔离级别。&lt;/li&gt;
&lt;li&gt;现有的ZooKeeper和内存锁管理器与事务不兼容。我们无意处理这个问题。有关如何为事务存储锁的讨论，请参阅下面的基本设计。&lt;/li&gt;
&lt;li&gt;原来ACID表不支持使用ALTER TABLE更改Schema，参见Hive-11421。此缺陷于Hive 1.3.0/ Hive 2.0.0修复成功。&lt;/li&gt;
&lt;li&gt;使用Oracle作为Metastore DB和“datanucleus.connectionPoolingType = BONECP”时，可能偶发性产生 “No such lock ...”和“No such transaction...”的错误。在这种情况下，建议设置“datanucleus.connectionPoolingType = DBCP”。&lt;/li&gt;
&lt;li&gt;LOAD DATA ...语句不支持事务性表，直到Hive-16732才能正确执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hive提供了流数据采集和流式转换的API：&lt;/p&gt;
&lt;p&gt;    &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Streaming+Data+Ingest&quot;&gt;Hive HCatalog流API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;    &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Streaming+Data+Ingest+V2&quot;&gt;Hive流API&lt;/a&gt;（从Hive 3开始）&lt;/p&gt;
&lt;p&gt;    &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/HCatalog+Streaming+Mutation+API&quot;&gt;HCatalog流式转换API&lt;/a&gt;（在Hive2.0.0及更高版本）&lt;/p&gt;
&lt;p&gt;API的比较可参考流式转换文档的背景部分。&lt;/p&gt;

&lt;p&gt;1.从Hive0.14开始,INSERT … VALUES，UPDATE和DELETE已被添加到SQL语法。详见 &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML&quot;&gt;Language Manual DML&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.一些新的命令已经添加到Hive的DDL中，以支持ACID和事务，另外一些修改了现有的DDL语句。&lt;/p&gt;
&lt;p&gt;2.1加入一个新命令SHOW TRANSACTIONS，详见&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ShowTransactions&quot;&gt;Show Transactions&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.2加入一个新命令SHOW COMPACTIONS，详见 &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ShowCompactions&quot;&gt;Show Compactions&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.3改变了SHOW LOCKS命令，以便提供锁与事务相关的信息。如果您使用的是Zookeeper或内存锁管理器，你会发现这个命令的输出并无差别。详见&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ShowLocks&quot;&gt;Show Locks&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.4 ALTER TABLE添加了一个新的选项，用于表或分区的紧缩。在一般情况下，用户不需要请求紧缩，因为系统会检测紧缩的需求并开始执行紧缩。但是，如果关闭了表的紧缩功能，或者用户希望在系统没选择的情况下紧缩表，则可以使用ALTER TABLE启动紧缩。详见  &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-AlterTable/PartitionCompact&quot;&gt;Alter Table/Partition紧缩&lt;/a&gt;，这将任务放到紧缩排队等待后返回。用户可以使用SHOW COMPACTIONS查看紧缩的进度。&lt;/p&gt;
&lt;p&gt;3.添加一个新命令终止事务：ABORT TRANSACTIONS，详见&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-AbortTransactions&quot;&gt;Abort Transactions&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;　　HDFS不支持文件的就地更改.对于追加写的文件，它也不为用户不提供读取的一致性。为了在HDFS之上提供这些特性，我们遵循了在其他数据仓库工具中使用的标准方法。表或分区的数据存储在一组基本文件中。新记录、更新和删除的记录存储在增量文件中。每个事务(或者是流代理(如Flume或Storm)的每个批事务)都创建了一组新的增量文件，以更改表或分区。在读取时，合并基础文件和增量文件并应用更新和删除的变化。&lt;/p&gt;
&lt;h2&gt;6.1、 基础目录和增量目录&lt;/h2&gt;
&lt;p&gt;　　以前，分区(或者表，如果该表未分区的话)的所有文件都存放在一个目录中。现在更改后，任何使用ACID更改的分区(或表)都将有一个用于基本文件的目录和一个用于每个增量文件集的目录。对于未分区的表“t”，其目录布局如下所示：&lt;/p&gt;
&lt;p&gt;表“T”在文件系统的布局&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
hive&amp;gt; dfs -&lt;span&gt;ls&lt;/span&gt; -R /user/hive/warehouse/&lt;span&gt;t;
drwxr&lt;/span&gt;-xr-x   - ekoifman staff          &lt;span&gt;0&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;03&lt;/span&gt; /user/hive/warehouse/t/&lt;span&gt;base_0000022
&lt;/span&gt;-rw-r--r--   &lt;span&gt;1&lt;/span&gt; ekoifman staff        &lt;span&gt;602&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;03&lt;/span&gt; /user/hive/warehouse/t/base_0000022/&lt;span&gt;bucket_00000
drwxr&lt;/span&gt;-xr-x   - ekoifman staff          &lt;span&gt;0&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;06&lt;/span&gt; /user/hive/warehouse/t/&lt;span&gt;delta_0000023_0000023_0000
&lt;/span&gt;-rw-r--r--   &lt;span&gt;1&lt;/span&gt; ekoifman staff        &lt;span&gt;611&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;06&lt;/span&gt; /user/hive/warehouse/t/delta_0000023_0000023_0000/&lt;span&gt;bucket_00000
drwxr&lt;/span&gt;-xr-x   - ekoifman staff          &lt;span&gt;0&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; /user/hive/warehouse/t/&lt;span&gt;delta_0000024_0000024_0000
&lt;/span&gt;-rw-r--r--   &lt;span&gt;1&lt;/span&gt; ekoifman staff        &lt;span&gt;610&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;06&lt;/span&gt;-&lt;span&gt;09&lt;/span&gt; &lt;span&gt;17&lt;/span&gt;:&lt;span&gt;07&lt;/span&gt; /user/hive/warehouse/t/delta_0000024_0000024_0000/bucket_00000
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;6.2、 紧缩器&lt;/h2&gt;
&lt;p&gt;　　紧缩器是一套Metastore内运行，支持ACID系统的后台进程。它由Initiator（发起者），Worker，Cleaner，AcidHouseKeeperService和其他几部分组成。&lt;/p&gt;
&lt;h3&gt;6.2.1、  增量文件紧缩&lt;/h3&gt;
&lt;p&gt;　　随着表的修改操作，创建了越来越多的增量文件，就需要紧缩以保持足够的性能。有两种类型的紧缩，次要和主要：&lt;/p&gt;
&lt;p&gt;　　次要/轻度/minor紧缩处理一组现有的增量文件，针对每个桶，将它们重写为单个的增量文件。&lt;/p&gt;
&lt;p&gt;　　主要/深度/major紧缩处理一个或多个桶的增量文件和基本文件，并将它们重写为每个桶新的基本文件。主要紧缩成本更高，但更有效。&lt;/p&gt;
&lt;p&gt;　　所有紧缩都是在后台完成的，不会阻止数据的并发读、写。紧缩后，系统将等待所有旧文件的读操作完成后，删除旧文件。&lt;/p&gt;
&lt;h4&gt;6.2.1.1、    Initiator（发起者）&lt;/h4&gt;
&lt;p align=&quot;left&quot;&gt;　　这个模块负责发现哪些表或分区需要紧缩。需要在Metastore中配置参数hive.compactor.initiator.on启用该模块，在“事务的新配置参数”中有几个形式为*.threshold的属性，控制何时创建紧缩任务以及执行哪种类型的紧缩。每个紧缩任务处理一个分区(如果表未分区，则处理整个表)。如果给定分区的连续紧缩失败次数超过hive.compactor.initiator.failed.compacts.threshold，则该分区的自动紧缩调度将停止。有关更多信息，请参见配置参数表。&lt;/p&gt;
&lt;h4&gt;6.2.1.2、    Worker&lt;/h4&gt;
&lt;p align=&quot;left&quot;&gt;　　每个Worker处理单个紧缩任务。紧缩任务是一个MapReduce的作业，其名称形式如下：&amp;lt;hostname&amp;gt;-compactor-&amp;lt;db&amp;gt;.&amp;lt;table&amp;gt;.&amp;lt;partition&amp;gt;。每个Worker向集群提交作业(如果定义了hive.compactor.jobs.queue)到Yarn队列，并等待作业完成。hive.compactor.worker.threads确定每个Metastore中的Worker数量。Hive数据仓库中的Worker总数决定了紧缩的最大并发数量。&lt;/p&gt;
&lt;h4&gt;6.2.1.3、    Cleaner&lt;/h4&gt;
&lt;p&gt;　　就是在紧缩后，确定不再需要增量文件之后删除增量文件的进程。&lt;/p&gt;
&lt;h4&gt;6.2.1.4、    AcidHouseKeeperService&lt;/h4&gt;
&lt;p&gt;　　此进程查找在hive.txn.timeout时间内没有心跳的事务，并中止它们。系统假设此时启动事务的客户端停止心跳、崩溃，而它锁定的资源应该被释放。&lt;/p&gt;
&lt;h4&gt;6.2.1.5、    SHOW COMPACTIONS&lt;/h4&gt;
&lt;p&gt;　　此命令显示有关当前正在运行的紧缩和紧缩的近期历史记录(可配置保留期限)信息。从hive-12353开始，可显示紧缩的历史记录信息。&lt;/p&gt;
&lt;p&gt;　　关于此命令和输出的更多信息，可参阅  &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ShowCompactions&quot;&gt;LanguageManual DDL#Show Compactions&lt;/a&gt;。影响该命令的输出的参数见“事务新的配置参数/紧缩历史记录”配置属性。系统保留每种类型的最后N个条目：失败、成功、尝试(其中N对每种类型都是可配置的)。&lt;/p&gt;
&lt;h2&gt;6.3、 事务/锁管理器&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;　　Hive添加了一个名为“事务管理器”的新逻辑概念，它包含了以前的“数据库/表/分区锁管理器”的概念(hive.lock.Manager，缺省值为org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager)。事务管理器现在还负责管理事务锁。默认的DummyTxnManager模仿老Hive版本的行为：没有事务，并使用hive.lock.Manager属性为表、分区和数据库创建锁管理器。新添加的DbTxnManager使用DbLockManager管理Hive Metastore中的所有锁/事务(事务和锁在服务器故障时是持久的)。这意味着在启用事务时，不再存在以前锁定Zookeeper中的行为了。为了避免客户端死掉并使事务或锁悬而未决，定期从锁持有者和事务发起者向Metastore发送心跳。如果在配置的时间内未接收到心跳，则锁或事务将被中止。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　从Hive 1.3.0开始，DbLockManger可以通过控制hive.lock.numretires和hive.lock.sleep.between.retries来设定尝试获取锁的时间。当DbLockManager无法获得锁(由于存在竞争锁)时，它将退出，并在某个时间段后再试。为了支持短时间运行的即席查询，而又不对Metastore压力太大，每次重试之后，DbLockManager将等待时间加倍。初始回退时间为100 ms，并以hive.lock.sleep.between.retries为上限。hive.lock.numretries是它将重试请求锁的总次数。因此，调用获取锁将阻塞的总时间(给定100次重试和60次睡眠时间)是(100 ms 200 ms 400 ms.51200 ms 60s ..60s)=91分钟：42秒：300毫秒。&lt;/p&gt;
&lt;p&gt;　　锁管理器中使用的锁的详细信息见&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ShowLocks&quot;&gt;Show locks&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;　　请注意，使用DbTxnManager的锁管理器将获取所有表上的锁，即使是那些没有设置“transactional=true”属性的表。默认情况下，对非事务性表的INSERT操作将获得独占锁，从而阻止其他插入和读取。虽然在技术上是正确的，但这与传统Hive的工作方式(例如，w/o 锁管理器)是不同的, 为了向后兼容，提供了hive.txn.strict.locking.mode(见下表)模式，这将使该锁管理器在非事务性表的插入操作上获取共享锁。这恢复了以前的语义，同时仍然提供了锁管理器的好处，例如在读取表时防止表被删除。&lt;/p&gt;
&lt;p&gt;　　请注意，对于事务表，插入总是获取共享锁，因为这些表在存储层实现了MVCC架构，并且即使存在并发修改操作，也能提供读的强一致性（快照隔离）。&lt;/p&gt;

&lt;p&gt;　　必须设置这些配置参数的适当值，才能最低限度的打开Hive中的事务支持：&lt;/p&gt;
&lt;p&gt;客户端&lt;/p&gt;
&lt;p&gt;    hive.support.concurrency  - true&lt;/p&gt;
&lt;p&gt;    hive.enforce.bucketing  - true（从Hive2.0不再需要）&lt;/p&gt;
&lt;p&gt;    hive.exec.dynamic.partition.mode  - nonstrict&lt;/p&gt;
&lt;p&gt;    hive.txn.manager  -  org.apache.hadoop.hive.ql.lockmgr.DbTxnManager&lt;/p&gt;
&lt;p&gt;服务器端（Metastore）&lt;/p&gt;
&lt;p&gt;    hive.compactor.initiator.on  -  true（参见下面表格有详细介绍）&lt;/p&gt;
&lt;p&gt;    hive.compactor.worker.threads  -至少在一个metastore Thrift服务的实例设置为正数&lt;/p&gt;
&lt;p&gt;以下部分列出了所有影响Hive事务和紧缩的配置参数。另见上方的“限制”和下面的“表属性”。&lt;/p&gt;
&lt;h2&gt;7.1、 事务的新配置参数&lt;/h2&gt;
&lt;p&gt;　　许多新的配置参数已经被添加到系统，用以支持事务。&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;48.415379864114&quot;&gt;&lt;tr&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;strong&gt;配置关键&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;strong&gt;默认值&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;&lt;strong&gt;位置&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;strong&gt;注解&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.5789473684211&quot;&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.manager&quot;&gt;hive.txn.manager&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;见注解&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;客户端/&lt;br/&gt;HiveServer2&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;默认值： org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager&lt;/p&gt;
&lt;p class=&quot;p6&quot;&gt;支持事务所需的值： org.apache.hadoop.hive.ql.lockmgr.DbTxnManager&lt;/p&gt;
&lt;p class=&quot;p6&quot;&gt;而DummyTxnManager实现Hive 0.13前的行为，并且不提供事务支持。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8.2820512820513&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.strict.locking.mode&quot;&gt;hive.txn.strict.locking.mode&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;true&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;客户端/ HiveServer2&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;在严格模式非ACID资源使用标准的R / W锁语义，例如INSERT将获得排他锁；在非严格模式，对于非ACID资源，INSERT将只获取共享锁，它允许两个并发写入到相同的分区，但仍让锁管理器在表被写入时阻止DROP TABLE等（从Hive 2.2.0）。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.9827586206897&quot;&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.timeout&quot;&gt;hive.txn.timeout&lt;/a&gt; &lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;300&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;客户端/&lt;br/&gt;HiveServer2 /Metastore &lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;如果客户没有发送心跳，多长时间（单位秒）之后宣布事务中止。对于所有组件/服务，至关重要的是此属性要有相同的值。（注5）&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3.4426229508197&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.heartbeat.threadpool.size&quot;&gt;hive.txn.heartbeat.threadpool.size&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt; 5&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;客户端/ HiveServer2&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;3.5&quot;&gt;
&lt;p&gt;用于心跳的线程数（从&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-12366&quot;&gt;Hive 1.3.0和2.0.0&lt;/a&gt;开始）。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.4285714285714&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.timedout.txn.reaper.start&quot;&gt;hive.timedout.txn.reaper.start&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;100秒&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p align=&quot;left&quot;&gt;Metastore启动后，启动第一个收割器(中止超时事务的进程)的延迟时间（从Hive 0.13开始）。用于控制上述的AcidHouseKeeperServcie。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.2686567164179&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.timedout.txn.reaper.interval&quot;&gt;hive.timedout.txn.reaper.interval&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;180秒&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;描述收割程序(中止超时事务的进程)运行频率的时间间隔。（从Hive 0.13开始）。用于控制上述的AcidHouseKeeperServcie。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2.4&quot;&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.max.open.batch&quot;&gt;hive.txn.max.open.batch&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;1000&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;客户&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;可以在调用一次open_txns（）获取到事务的最大数量。（注1）&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.1493506493506&quot;&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.max.open.txns&quot;&gt;hive.max.open.txns&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;100000&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;HiveServer2 /Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;打开的事务的最大数量。如果当前打开的事务达到此限制，则将来打开的事务请求将被拒绝，直到该数目低于限制为止。(从Hive 1.3.0和2.1.0)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.7916666666667&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.count.open.txns.interval&quot;&gt;hive.count.open.txns.interval&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;1秒&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;HiveServer2 /Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;检查打开事务计数的时间间隔（单位秒）(从Hive 1.3.0和2.1.0开始)。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.759385665529&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.retryable.sqlex.regex&quot;&gt;hive.txn.retryable.sqlex.regex&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p&gt;“”（空字符串）&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;HiveServer2 /Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5.1588785046729&quot;&gt;
&lt;p&gt;由逗号分隔的一组用于描述SQL状态，错误代码，可重试的SQLExceptions错误信息的正则表达式，这是适合于Hive Metastore数据库（从&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-12637&quot;&gt;Hive 1.3.0和2.1.0&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;例子见&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.txn.retryable.sqlex.regex&quot;&gt;配置属性&lt;/a&gt;。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10.24427480916&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.initiator.on&quot;&gt;hive.compactor.initiator.on&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;false&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;缺省值为false，支持事务的话需要为true。&lt;/p&gt;
&lt;p class=&quot;p6&quot;&gt;是否在此Metastore实例上运行启动器（initiator）和清理（cleaner）的线程。在Hive1.3.0之前，关键是要正好在一个独立的Metastore服务实例上启用它(尚未强制执行)。从Hive1.3.0开始，可以在任意数量的独立Metastore实例上启用此属性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.7789473684211&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.worker.threads&quot;&gt;hive.compactor.worker.threads&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;0&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;在这个metastore实例上运行多少个紧缩工作线程。（注2）&lt;/p&gt;
&lt;p class=&quot;p6&quot;&gt;默认值为0，支持事务时至少在一个Metastore实例上大于0。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.6299212598425&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.worker.timeout&quot;&gt;hive.compactor.worker.timeout&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;86400&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;紧缩作业运行多长时间（秒）后会被宣告失败，并重新排队。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3.84375&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.cleaner.run.interval&quot;&gt;hive.compactor.cleaner.run.interval&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;5000&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;4.2857142857143&quot;&gt;
&lt;p&gt;运行清理线程的间隔（毫秒）。（&lt;a href=&quot;https://issues.apache.org/jira/browse/HIVE-8258&quot;&gt;Hive 0.14.0&lt;/a&gt;和更高版本）。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5853658536585&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.check.interval&quot;&gt;hive.compactor.check.interval&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;300&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;检查表或分区是否需要紧缩的时间间隔（单位秒）。（注3）&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.271186440678&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.delta.num.threshold&quot;&gt;hive.compactor.delta.num.threshold&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;10&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;在表或分区引发次要/轻度/minor紧缩的差量目录数目。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.0754189944134&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.delta.pct.threshold&quot;&gt;hive.compactor.delta.pct.threshold&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;0.1&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;触发一个主要/深度/major紧缩任务的增量文件相对基础文件大小的百分比。1 = 100％，默认0.1 = 10％。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5211267605634&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.abortedtxn.threshold&quot;&gt;hive.compactor.abortedtxn.threshold&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p class=&quot;p6&quot; align=&quot;center&quot;&gt;1000&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;p6&quot;&gt;触发一个主要/深度/major紧缩任务的涉及给定表或分区的中止事务数。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.7913669064748&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.max.num.delta&quot;&gt;hive.compactor.max.num.delta&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;500&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;在单个紧缩作业中试图处理增量文件的最大数量(从Hive1.3.0开始)。（注4）&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3.934554973822&quot;&gt;&lt;td width=&quot;356&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.compactor.job.queue&quot;&gt;hive.compactor.job.queue&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;“”（空字符串）&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;用于指定将提交紧缩作业到Hadoop队列的名称。设置为空字符串，则由Hadoop选择队列(从Hive1.3.0开始)。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot; width=&quot;842&quot;&gt;
&lt;p&gt;&lt;span&gt;紧缩的历史记录&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;hive.compactor.history.retention.succeeded&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;3&lt;/em&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;要在历史记录中保留的成功紧缩条目的数量(每个分区)。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;hive.compactor.history.retention.failed&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;3&lt;/em&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;要在历史记录中保留的紧缩失败条目的数量(每个分区)。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;hive.compactor.history.retention.attempted&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;2&lt;/em&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;要在历史记录中保留的尝试紧缩条目的数量(每个分区)。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;hive.compactor.initiator.failed.compacts.threshold&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;2&lt;/em&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;对给定分区紧缩连续失败的数目，在此之后，启动器（Initiator）将停止自动调度紧缩。此时，仍然可以使用ALTER TABLE来启动紧缩。一旦手动启动的紧缩成功，就恢复自动启动的紧缩。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;请注意，这个值必须小于hive.compactor.history.retention.failed。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td width=&quot;356&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;hive.compactor.history.reaper.interval&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;47&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;em&gt;2M&lt;/em&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;89&quot;&gt;
&lt;p&gt;Metastore&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;349&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;控制清除compactions历史记录的进程多久运行一次。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;　　注1： hive.txn.max.open.batch控制流代理(如Flume或Storm)同时打开的事务。然后，流代理将该数量的条目写入单个文件(每个Flume代理或Storm bolt)。因此，增加此值会减少流代理创建的增量文件的数量。但它也会增加Hive在任何给定时间必须跟踪的已打开事务的数量，这可能会对读取性能产生负面影响。&lt;/p&gt;
&lt;p&gt;　　注2：工作线程生成MapReduce作业以执行紧缩。它们自己不执行紧缩。增加工作者线程的数量将减少需要紧缩的表或分区的时间。它也将增加Hadoop集群上的后台负载，因为更多MapReduce作业要在后台运行。每次紧缩都可以处理一个分区(如果没有分区，则是整个表)。&lt;/p&gt;
&lt;p&gt;　　注3： 减小该值将减少需要紧缩的表或分区启动紧缩所需的时间。然而，检查是否需要紧缩需要对每个表或分区调用NameNode，以确认每个表或分区自上一次主要/深度/major紧缩以来是否进行了事务处理。因此，降低此值将增加NameNode的负载。&lt;/p&gt;
&lt;p&gt;　　注4： 如果紧缩程序检测到有非常多的增量文件，它就首先运行几个小的部分紧缩(在当前顺序中)，然后执行实际请求的紧缩。&lt;/p&gt;
&lt;p&gt;　　注5： 如果该值不是相同的，则活动事务可能被确定为“timed out（超时）”并因此中止。这还将导致诸如“没有这样的事务（No such transaction）...”、“没有这样的锁（No such lock）...”之类的错误。&lt;/p&gt;
&lt;h2&gt;7.2、 为INSERT，UPDATE，DELETE设置的参数&lt;/h2&gt;
&lt;p&gt;　　除了上面列出的新参数，现有的一些为支持INSERT ... VALUES，UPDATE 和  DELETE需要而设置的参数。&lt;/p&gt;
&lt;p&gt;hive.support.concurrency    true（默认为false）&lt;/p&gt;
&lt;p&gt;hive.enforce.bucketing      true（默认为false）（从Hive2.0不再需要）&lt;/p&gt;
&lt;p&gt;hive.exec.dynamic.partition.mode    nonstrict不严格的（默认为strict严格的）&lt;/p&gt;
&lt;h2&gt;7.3、 为紧缩设置的参数&lt;/h2&gt;
&lt;p align=&quot;left&quot;&gt;　　如果您的系统中的数据不属于Hive用户(即运行Hive Metastore的用户)，那么Hive需要以数据拥有者的身份运行才能执行紧缩操作。如果您已经设置了HiveServer 2模拟用户，那么唯一要做的额外工作就是确保Hive在运行Hive Metastore的主机上有模拟用户的权利。这是通过将主机名添加到Hadoop的core-site.xml文件中的hadoop.proxyuser.hive.host实现的，如果您还没有这样做，那么需要配置Hive作为代理用户，这要求您为运行Hive Metastore的用户设置keytab，并将hadoop.proxyuser.hive.host和hadoop.proxyuser.hive.group添加到Hadoop的core-site.xml文件中。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　请参阅您的Hadoop版本中关于安全模式的Hadoop文档(例如，对于Hadoop2.5.1，请参阅&lt;a href=&quot;http://hadoop.apache.org/docs/r2.5.1/hadoop-project-dist/hadoop-common/SecureMode.html&quot;&gt;Hadoop的安全模式&lt;/a&gt;)。&lt;/p&gt;

&lt;p align=&quot;left&quot;&gt;　　从Hive 0.14.0开始，如果一个表用于ACID写入（INSERT、UPDATE、DELETE），那么必须在该表中设置表属性“transactional=true”。注意，一旦表已被经由TBLPROPERTIES（“transactional=true”）定义为ACID表，它不能被转换回非ACID表，即不允许改变为TBLPROPERTIES（“transactional=false”）。此外，在运行任何查询之前，必须在hive-site.xml或会话开始时将hive.txn.Manager设置为org.apache.hadoop.hive.ql.lockmgr.DbTxnManager。如果不这样的话，插入将以旧的样式进行；更新和删除将在hive-11716之前被禁止。因为不允许在没有DbTxnManager的ACID表上进行Hive-11716操作。无论如何，这也不适用于Hive 0.13.0。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　如果表所有者不希望系统自动确定何时紧缩，则可以设置表属性“NO_AUTO_COMPACTION”。这将阻止所有自动紧缩。仍然可以使用ALTER Table /Partition Compact语句进行手动紧缩。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　在创建或更改表时，使用TBLPROPERTIES子句设置表属性，如Hive数据定义语言的CREATE Table和&lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-AlterTableProperties&quot;&gt;ALTER Table PROPERTIES&lt;/a&gt;部分所述。在Hive版本0.x和1.0中，表属性“transactional”和“NO_AUTO_COMPACTION”区分大小写，但从版本1.1.0(hive-8308)开始，它们是不区分大小写的。&lt;/p&gt;
&lt;p&gt;　　更多的与紧缩相关的选项可以通过与Hive 1.3.0和2.1.0的TBLPROPERTIES来设置。它们可以通过CREATE TABLE设置在表级别属性，也可以通过ALTER TABLE/Partition COMPACT在请求级别上设置。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　这些用于覆盖仓库/表范围的设置。例如，要覆盖MR属性以影响紧缩作业，可以在CREATE TABLE语句中或通过ALTER TABLE显式启动紧缩时，添加&quot;compactor.&amp;lt;mr property name&amp;gt;=&amp;lt;value&amp;gt;&quot;。这里所述的&quot; &amp;lt;mr property name&amp;gt;=&amp;lt;value&amp;gt;&quot;将设置在紧缩MR作业的Jobconf上。类似地,&quot; tblprops.&amp;lt;prop name&amp;gt;=&amp;lt;value&amp;gt;&quot;可用于设置/覆盖集群上所能解释的任何表属性代码。最后,&quot; compactorthreshold.&amp;lt;prop name&amp;gt;=&amp;lt;value&amp;gt;&quot;可用于替代来自&quot;新的事务配置参数&quot;中以&quot;.threshold&quot;结尾的属性，在由系统触发compact时进行控制。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;示例：&lt;/p&gt;
&lt;p&gt;例如：在TBLPROPERTIES中设置表级别的紧缩选项&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; table_name (
  id                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;,
  name              string
)
&lt;/span&gt;&lt;span&gt;CLUSTERED&lt;/span&gt; &lt;span&gt;BY&lt;/span&gt; (id) &lt;span&gt;INTO&lt;/span&gt; &lt;span&gt;2&lt;/span&gt; BUCKETS STORED &lt;span&gt;AS&lt;/span&gt;&lt;span&gt; ORC
TBLPROPERTIES (&quot;transactional&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;true&quot;,
  &quot;compactor.mapreduce.map.memory.mb&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&quot;&lt;span&gt;2048&lt;/span&gt;&quot;,                   &lt;span&gt;--&lt;/span&gt;&lt;span&gt; 指定紧缩map作业的属性&lt;/span&gt;
  &lt;span&gt;&quot;compactorthreshold.hive.compactor.delta.num.threshold&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&quot;&lt;span&gt;4&lt;/span&gt;&quot;,  &lt;span&gt;--&lt;/span&gt;&lt;span&gt; 如果有超过4个增量目录，则触发轻度紧缩&lt;/span&gt;
  &lt;span&gt;&quot;compactorthreshold.hive.compactor.delta.pct.threshold&quot;&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&quot;&lt;span&gt;0.5&lt;/span&gt;&quot; &lt;span&gt;--&lt;/span&gt;&lt;span&gt; 如果增量文件的大小与基础文件的大小的比率大于50%，则触发深度紧缩&lt;/span&gt;&lt;span&gt;
);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 例如：在TBLPROPERTIES中设置请求级别的紧缩选项&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; table_name COMPACT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;minor&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
   &lt;span&gt;WITH&lt;/span&gt; OVERWRITE TBLPROPERTIES (&quot;compactor.mapreduce.map.memory.mb&quot;&lt;span&gt;=&lt;/span&gt;&quot;&lt;span&gt;3072&lt;/span&gt;&quot;);  &lt;span&gt;--&lt;/span&gt;&lt;span&gt; 指定紧缩map作业的属性&lt;/span&gt;

&lt;span&gt;ALTER&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; table_name COMPACT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;major&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
   &lt;span&gt;WITH&lt;/span&gt; OVERWRITE TBLPROPERTIES (&quot;tblprops.orc.compress.size&quot;&lt;span&gt;=&lt;/span&gt;&quot;&lt;span&gt;8192&lt;/span&gt;&quot;);         &lt;span&gt;--&lt;/span&gt;&lt;span&gt; 更改任何其他Hive表属性&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 11 Oct 2018 15:26:00 +0000</pubDate>
<dc:creator>范振勇</dc:creator>
<og:description>由 Alan Gates创建, 最终由 Andrew Sherman修改于2018年8月7日 原文链接：https://cwiki.apache.org/confluence/display/Hive</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fanzhenyong/p/9775713.html</dc:identifier>
</item>
<item>
<title>【Maven】---坐标与依赖 - 雨点的名字</title>
<link>http://www.cnblogs.com/qdhxhz/p/9775712.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qdhxhz/p/9775712.html</guid>
<description>&lt;p&gt;      最近想深度学习下maven，找到一本书叫《Maven实战》,这本书讲的确实很好，唯一遗憾的是当时maven教学版本是3.0.0的，而目前已经到了3.5.4了，版本存在差距,&lt;/p&gt;
&lt;p&gt;没关系，如果有时间和精力我也会阅读官方文档，看看到底有哪些变换。&lt;/p&gt;

&lt;h4&gt;&lt;span&gt;     1、何为Maven坐标&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;      maven定义了这样一组规则：世界上任何一个构件都可以使用maven坐标唯一标识，坐标元素包括：&lt;span&gt;groupId、artifactId、version、packaging、classifier&lt;/span&gt;。只要提供正确&lt;/p&gt;
&lt;p&gt;的坐标就能从仓库中找到相应的构件供我们使用。maven从哪里下载构件呢？答：maven内置了一个中央仓库的地址，该中央仓库包含了世界上大部分流行的开源构件。&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;    2、坐标详解&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;任何构件都必须明确定义自己的坐标，而一组maven坐标是通过一些元素定义的，他们是：groupId、artifactId、version、packaging、classifier。先看一组坐标定义如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.sonatype.nexus&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;nexus-indexer&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jar&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是nexus-indexer项目的坐标，nexus-indexer是一个对maven仓库编纂索引并提供搜索功能的类库，它是Nexus项目的一个子模块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;goupId&lt;/span&gt;&lt;/strong&gt;: 定义了当前maven项目隶属的实际项目，一般是域名+项目名。比如：com.alibaba.taotao&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;/strong&gt;：该元素定义实际项目中的一个maven项目（模块，一般推荐项目名+子模块名。比如：taobao-web&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;version&lt;/span&gt;&lt;/strong&gt;： 定义maven项目当前所处版本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;/strong&gt;：定义maven项目的打包方式，默认使用jar。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;classifier&lt;/span&gt;&lt;/strong&gt;：该元素用来帮助定义构件输出的一些附属构件。&lt;/p&gt;
&lt;p&gt;上述5元素&lt;span&gt;groupId、artifactId、version是必须的&lt;/span&gt;，packaging可选，默认jar，classifier不能直接定义。同时，项目构件的文件名是与坐标对应的，&lt;/p&gt;
&lt;p&gt;一般的规则为artificatId-version[-classifier].packaging。packing并非一定与构件扩展名对应，比如packing为maven-plugin的构件扩展名为jar。&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;二、依赖详解&lt;/span&gt;&lt;/h2&gt;
&lt;h4&gt;&lt;span&gt;   1、依赖的配置&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;一般的依赖只有基本的 groupId，artifactId，version。我们来看下详细的依赖配置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    ...
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;optional&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            ...
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
     ...
  &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;gourpId、artifactId、version：&lt;/span&gt;&lt;/strong&gt;依赖的基本坐标，对于任何一个依赖来说，基本坐标是最重要的，maven根据坐标才能找到需要的依赖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;         type：&lt;/span&gt;&lt;/strong&gt;依赖的类型，对于项目坐标定义的packing，大部分情况是不必声明，默认是jar。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;      scope&lt;/strong&gt;&lt;/span&gt; ：依赖的范围 下面具体讲解&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;    optional&lt;/span&gt;&lt;/strong&gt;: 标记依赖是否可选，值为true或false，默认为false, 如果为可选依赖，则依赖不具有传递性。即B-&amp;gt;X(可选依赖)，A-&amp;gt;B。此时A的依赖中不包含X。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;exclusions：&lt;/span&gt;&lt;/strong&gt;用来排除传递性依赖。&lt;/p&gt;
&lt;p&gt;大部分依赖声明只包含基本坐标，然而在一些特殊情况下，其他元素至关重要。&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;    2、依赖范围scope&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;classpath：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;用于指定.class文件存放的位置，类加载器会从该路径中加载所需的.class文件到内存中。maven在编译、执行测试、实际运行有着三套不同的classpath。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;编译classpath&lt;/span&gt;&lt;/strong&gt;：编译主代码有效&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;测试classpath：&lt;/span&gt;&lt;/strong&gt;编译、运行测试代码有效&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;运行classpath：&lt;/span&gt;&lt;/strong&gt;项目运行时有效&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;maven的依赖范围&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; compile：&lt;/span&gt;&lt;/strong&gt;编译依赖范围。（默认方式），有效范围：编译classpath+测试classpath+运行classpath。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;span&gt;      test：&lt;/span&gt;&lt;/strong&gt;测试依赖范围。有效范围：测试classpath  比如：JUnit，只在测试时使用，在编译主代码和运行时不需要此依赖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;provided：&lt;/span&gt;&lt;/strong&gt;已提供依赖范围。有效范围：编译classpath+测试classpath。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; runtime：&lt;/span&gt;&lt;/strong&gt;运行时依赖范围。有效范围：测试classpath+运行classpath。比如：JDBC驱动实现（mysql-connector-java）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;  system：&lt;/span&gt;&lt;/strong&gt;系统依赖范围。有效范围：编译classpath+测试classpath。使用system范围的依赖时必须通过systemPath元素显示地指定依赖文件的路径，&lt;/p&gt;
&lt;p&gt;因为此类依赖不是通过maven仓库解析的，而且往往与本地及其系统绑定，可能造成构建的不可移植，慎用。systemPath元素可以引用环境变量。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201810/1090617-20181011225217555-1106163690.png&quot; alt=&quot;&quot; width=&quot;828&quot; height=&quot;300&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;你引用本地的jar包，当然只能本地使用了&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;javax.sql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jdbc-stdext&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;system&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;systemPath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${JAVA_HOME}/lib/rt.jar&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;systemPath&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;你会发现这里这里是test，那么里面有个@Test 注解 只能在test目录下有效，在main目录下该注解是无效的&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;span&gt;    3、传递依赖性 &lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;假设&lt;span&gt;A依赖B，B依赖C，则A对于B是第一直接依赖，B对于C是第二直接依赖，A对于C是传递性依赖&lt;/span&gt;。第一直接依赖的范围和第二直接依赖的范围决定了传递性依赖的范围。&lt;/p&gt;
&lt;p&gt;如下表，最左边是第一直接依赖范围，上面是第二直接依赖范围，中间交叉单元格表示传递性依赖范围。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201810/1090617-20181011225615587-851208649.png&quot; alt=&quot;&quot; width=&quot;890&quot; height=&quot;285&quot;/&gt;&lt;/p&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;p&gt;第二直接依赖范围是compile时，传递依赖的范围与第一直接依赖范围一致。&lt;/p&gt;
&lt;p&gt;第二直接依赖范围是test时，依赖不会传递。&lt;/p&gt;
&lt;p&gt;第二直接依赖范围是provided时,只传递第一直接依赖为provided的依赖。&lt;/p&gt;
&lt;p&gt;第二直接依赖范围是runtime时,传递依赖的范围与第一直接依赖范围一致，但是compile例外，此时传递依赖范围为runtime。&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;    4、依赖调节&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Maven引入的传递性依赖机制，一方面大大简化和方便了依赖声明，另一方面，大部 分情况下我们只需要关心项0的直接依赖是什么，而不用考虑这些直接依赖会引人什么传 递性依赖。&lt;/p&gt;
&lt;p&gt;但有时候，当传递性依赖造成问题的时候，我们就需要清楚地知道该传递性依 赖是从哪条依赖路径引入的。&lt;/p&gt;
&lt;p&gt;例如，项目A有这样的依赖关系：A-&amp;gt;B-&amp;gt;C-&amp;gt;X(1.0)、A-&amp;gt;D-&amp;gt;X(2.0)，X是A的 传递性依赖，但是两条依赖路径上有两个版本的X,那么哪个X会被Maven解析使用呢?&lt;/p&gt;
&lt;p&gt;两个版本都被解析显然是不对的，因为那会造成依赖重复，因此必须选择一个。Maven依 赖调解（Dependency Mediation)的第一原则是：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;路径最近者优先。&lt;/span&gt;该例中X( 1.0)的路径氏 度为3,而X(2.0)的路径长度为2,因此X(2.0)会被解折使用。&lt;/p&gt;
&lt;p&gt;依赖调解第一原则不能解决所有问题，比如这样的依赖关系：A-&amp;gt;B-&amp;gt;Y(1.0)、A-&amp;gt; C-&amp;gt;Y(2.0)，Y(1.0)和Y(2.0)的依赖路径长度是一样的，都为2。Maven定义了依赖调解的第二原则：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一声明者优先&lt;/span&gt;。在依 赖路径长度相等的前提下，在POM中依赖声明的顺序决定了谁会被解析使用，顺序最前的那个依赖优胜。该例中，如果B的依赖声明在C之前，那么Y (1.0)就会被解析使用.&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;   5、排除依赖&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;传递性依赖会给项目引入很多依赖，简化项目依赖管理，但是也会带来问题。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;需求&lt;/span&gt;：比如当前项目有一个第三方依赖，而第三方依赖依赖了另一个类库的SNAPSHOT版本，那么这个SNAPSHOT就会成为当前项目的传递性依赖，而SNAPSHOT的不稳定性会直接影响到当前项目。&lt;/p&gt;
&lt;p&gt;这时候就应该排除掉SNAPSHOT。并且声明该类库的正式发布版本。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.hibernate&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hibernate-validator&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3.6.10.Final&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;slf4j-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;slf4j-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.slf4j&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;slf4j-api&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.7.12&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;     上述代码中hibernate-validator依赖slf4j-api，但是当前项目不想使用传递过来的slf4j-api，所以通过&lt;span&gt;exclusions&lt;/span&gt;声明排除依赖。当前项目声明了自己需要的1.7.12版本的slf4j-api。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;exclusions可以包含一个或者多fexdWon子元素，因此可以排除一个或者多 个传递性依赖&lt;/span&gt;。需要注意的是，声明exclusion的时候只需要groupld和artifactld,而不 笛要version元素，&lt;/p&gt;
&lt;p&gt;这是因为只需要gmupkl和arlifactid就能唯一定位依赖图中的某个依 赖。换句话说，Maven解析后的依赖中，不可能出现groupW和artifactld相同，但是 version不同的两个依赖。&lt;/p&gt;
&lt;p&gt;注意：&lt;span&gt;排除依赖的时候也要注意，比如A依赖1.1版本的B, ,而你不想要1.1版本的B,而是要2.1的B,这个时候也需要考虑A跟2.1的B是否能兼容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1090617/201810/1090617-20181011230932388-553707554.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    &lt;span&gt;6、归类依赖&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;需求&lt;/span&gt;：关于springframework的依赖有好多，org.springframework:spirng-core:2.5.6、org.springframework:sprng-beans:2.5.6、org.springframework:spring-context:2.5.6，&lt;/p&gt;
&lt;p&gt;他们来自同一个项目不同模块，因此版本都是相同的，可以预见在升级spring时这些依赖都会一起升级，为了方便统一所以使用properties元素定义maven属性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
....
 &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;springframework.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.3.2.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;springframework.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;通过使用${springframework.version}替换掉实际值，将所有spring依赖的版本值都使用这一引用值表示。&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-context&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${springframework.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-beans&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${springframework.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${springframework.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
  ...
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;参考&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;《Maven实战》. 许晓斌 &lt;/p&gt;
&lt;p&gt;同时很高兴，找到看过这本书的人的总结。&lt;/p&gt;
&lt;p&gt;坐标详解：&lt;a href=&quot;https://www.jianshu.com/p/30ece967dccd&quot; target=&quot;_blank&quot;&gt;https://www.jianshu.com/p/30ece967dccd&lt;/a&gt;&lt;br/&gt;依赖配置：&lt;a href=&quot;https://www.jianshu.com/p/79cf4423281a%20%20%20&quot; target=&quot;_blank&quot;&gt;https://www.jianshu.com/p/79cf4423281a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我只是偶尔安静下来，对过去的种种思忖一番。那些曾经的旧时光里即便有过天真愚钝，也不值得谴责。毕竟，往后的日子，还很长。不断鼓励自己，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;天一亮，又是崭新的起点，又是未知的征程（上校20）&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 11 Oct 2018 15:12:00 +0000</pubDate>
<dc:creator>雨点的名字</dc:creator>
<og:description>Maven坐标与依赖 最近想深度学习下maven，找到一本书叫《Maven实战》,这本书讲的确实很好，唯一遗憾的是当时maven教学版本是3.0.0的，而目前已经到了3.5.4了，版本存在差距, 没关</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qdhxhz/p/9775712.html</dc:identifier>
</item>
<item>
<title>Spring入门学习笔记（1） - NinWoo</title>
<link>http://www.cnblogs.com/NinWoo/p/9775708.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/NinWoo/p/9775708.html</guid>
<description>&lt;p class=&quot;toc&quot;&gt;目录&lt;/p&gt;
&lt;p&gt;该篇随笔，主要用于记录Spring Framework 基础知识。由于笔者是初学者，见识与能力有限，难免出现错误，如果发现错误，望不吝赐教。&lt;/p&gt;
&lt;h2 id=&quot;spring好处&quot;&gt;Spring好处&lt;/h2&gt;
&lt;p&gt;以下列出了使用Spring Framework的一些巨大好处&lt;/p&gt;
&lt;ul readability=&quot;10&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;Spring使开发人员能够使用POJO开发企业级应用程序。仅使用POJO的好处是您不需要EJB容器产品（如应用程序服务器），但您可以选择仅使用强大的servlet容器（如Tomcat）或某些商业产品。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Spring采用模块化方式组织。即使包和类的数量很大，你也只需要担心你需要的那些而忽略其余的。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Spring并没有重新发明轮子，而是真正利用了一些现有技术，如几个ORM框架，日志框架，JEE，Quartz和JDK计时器以及其他视图技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;测试用Spring编写的应用程序很简单，因为依赖于环境的代码被移动到这个框架中。此外，通过使用JavaBeanstyle POJO，使用依赖注入来注入测试数据变得更加容易。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Spring的Web框架是一个设计良好的Web MVC框架，它提供了一个很好的替代Web框架，如Struts或其他过度设计或不太流行的Web框架。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Spring提供了一个方便的API，用于将特定于技术的异常（例如，JDBC，Hibernate或JDO抛出）转换为一致的，未经检查的异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;轻量级IoC容器往往是轻量级的，尤其是与EJB容器相比时。这有利于在具有有限内存和CPU资源的计算机上开发和部署应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Spring提供了一致的事务管理接口，可以缩小到本地事务（例如，使用单个数据库）并扩展到全局事务（例如，使用JTA）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;依赖注入&quot;&gt;依赖注入&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Inversion of Control&lt;/li&gt;
&lt;li&gt;编写java程序，尽可能独立于其他java类，增加重用这些类的可能性&lt;/li&gt;
&lt;li&gt;含义：A依赖于B类，意味着，B类将由IoC注入A类&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;面向面编程aop&quot;&gt;面向面编程（AOP）&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;关键组件&lt;/li&gt;
&lt;li&gt;跨领域问题：日志记录，声明式事务，安全性，缓存等&lt;/li&gt;
&lt;li&gt;AOP中，模块化单元是面&lt;/li&gt;
&lt;li&gt;AOP可帮助您将交叉问题与它们所影响的对象分离&lt;/li&gt;
&lt;li&gt;允许定义方法拦截器和切入点，以便解耦。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;spring-framework&quot;&gt;Spring Framework&lt;/h2&gt;
&lt;h3 id=&quot;core-container&quot;&gt;Core Container&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Beans
&lt;/li&gt;
&lt;li&gt;JDBC&lt;/li&gt;
&lt;li&gt;ORM 模块为流行的对象关系映射api提供集成层，包括JPA、JDO、Hibernate和iBatis&lt;/li&gt;
&lt;li&gt;OXM 模块提供了一个抽象层，支持JAXB、Castor、XMLBeans、JiBX和XStream的对象/XML映射实现。&lt;/li&gt;
&lt;li&gt;JMS 包含用于生成和消费消息的特性。&lt;/li&gt;
&lt;li&gt;Transaction 模块为实现特殊接口的类和所有pojo支持编程和声明式事务管理&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;web&quot;&gt;Web&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Web Web模块提供了基本的面向Web的集成特性，例如多部分文件上传功能，以及使用servlet侦听器和面向Web的应用程序上下文初始化IoC容器。&lt;/li&gt;
&lt;li&gt;Web-MVC 模块包含Spring用于web应用程序的模型-视图-控制器(MVC)实现。&lt;/li&gt;
&lt;li&gt;Web-Socket 模块在web应用程序中支持基于websocket的客户机和服务器之间的双向通信。&lt;/li&gt;
&lt;li&gt;Web-Portlet 模块提供了在portlet环境中使用的MVC实现，并反映了web servlet模块的功能。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;AOP模块提供了面向方面的编程实现，允许您将方法拦截器和切入点定义为实现应该分离的功能的干净解耦代码。&lt;/li&gt;
&lt;li&gt;Aspects模块提供了与AspectJ的集成，这又是一个强大而成熟的AOP框架。&lt;/li&gt;
&lt;li&gt;Instrumentation 模块提供了类插装支持和类装入器实现，用于某些应用服务器。&lt;/li&gt;
&lt;li&gt;Messaging模块支持STOMP作为应用程序中使用的WebSocket子协议。它还支持一个注释编程模型，用于路由和处理来自WebSocket客户端的STOMP消息。&lt;/li&gt;
&lt;li&gt;Test模块支持使用JUnit或TestNG框架测试Spring组件&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;编写第一个程序&quot;&gt;编写第一个程序&lt;/h2&gt;
&lt;p&gt;1.使用IDEA创建Spring项目&lt;br/&gt;2.创建HelloWorld文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package top.ninwoo.learn;

public class HelloWorld {
    private String message;

    public void getMessage() {
        System.out.println(&quot;Your message &quot; + message);
    }

    public void setMessage(String message) {
        this.message = message;
    }


}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.创建Main函数&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public class MainApp {
    public static void main(String[] args) {
        ApplicationContext context = new ClassPathXmlApplicationContext(&quot;Beans.xml&quot;);
        HelloWorld obj = (HelloWorld) context.getBean(&quot;helloworld&quot;);
        obj.getMessage();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用ClassPathXmlApplicationContext读取bean配置文件&lt;/p&gt;
&lt;p&gt;4.配置文件&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&amp;gt;

    &amp;lt;bean id=&quot;helloworld&quot; class=&quot;top.ninwoo.learn.HelloWorld&quot;&amp;gt;
        &amp;lt;property name=&quot;message&quot; value=&quot;Hello World!&quot;/&amp;gt;
    &amp;lt;/bean&amp;gt;
&amp;lt;/beans&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;property 传入了HelloWorld的参数&lt;/p&gt;
&lt;h2 id=&quot;ioc容器&quot;&gt;IoC容器&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Spring Framework的核心&lt;/li&gt;
&lt;li&gt;容器船舰对象，并连接彼此，并管理其生命周期&lt;/li&gt;
&lt;li&gt;DI来管理组成应用程序的组件&lt;/li&gt;
&lt;li&gt;对象称为Spring Beans&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Spring IoC容器利用Java POJO类和配置元数据来生成完全配置和可执行的系统或应用程序，配置元数据可以由：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;XML&lt;/li&gt;
&lt;li&gt;Java注释或Java代码表示&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;容器类型：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Spring BeanFactory： 最简单容器，目的向后兼容与Spring集成的大量第三方框架&lt;/li&gt;
&lt;li&gt;Spring ApplicationContext: 添加了更多企业特有的功能，比如能够解析来自属性文件的文本消息，&lt;br/&gt;以及能够向感兴趣的事件侦听器发布应用程序事件。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;ApplicationContext包含全部的BeanFactory，BeanFactory在小型化设备上仍可以用。&lt;/p&gt;
&lt;h2 id=&quot;spring-bean&quot;&gt;Spring Bean&lt;/h2&gt;
&lt;p&gt;构成应用程序主干并由Spring IoC容器管理的对象称为bean.&lt;/p&gt;
&lt;p&gt;Bean的定义：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如何创建Bean&lt;/li&gt;
&lt;li&gt;Bean的生命周期细节&lt;/li&gt;
&lt;li&gt;Bean的依赖关系&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;参数：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;class ：必须，指定创建的Bean类&lt;/li&gt;
&lt;li&gt;name ： 唯一指定Bean标识符，XML中可以使用id/name来指定&lt;/li&gt;
&lt;li&gt;scope ： 作用域&lt;/li&gt;
&lt;li&gt;construtor-arg ： 用于注入依赖项&lt;/li&gt;
&lt;li&gt;properties ： 用于注入依赖项&lt;/li&gt;
&lt;li&gt;autowiring mode ： 用于注入依赖项&lt;/li&gt;
&lt;li&gt;lazy-initialization mode ： 延迟初始化的bean告诉IoC容器在第一次请求时创建bean实例，而不是在启动时创建&lt;/li&gt;
&lt;li&gt;initialization method ： 在容器设置了bean之后所有必要属性之后调用的回调。它将在bean生命周期章节中讨论&lt;/li&gt;
&lt;li&gt;destruction method ： 当Bean容器被销毁时使用的回调。&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;spring配置元数据&quot;&gt;Spring配置元数据&lt;/h3&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;XML&lt;/li&gt;
&lt;li&gt;注解&lt;/li&gt;
&lt;li&gt;Java的配置&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version = &quot;1.0&quot; encoding = &quot;UTF-8&quot;?&amp;gt;

&amp;lt;beans xmlns = &quot;http://www.springframework.org/schema/beans&quot;
   xmlns:xsi = &quot;http://www.w3.org/2001/XMLSchema-instance&quot;
   xsi:schemaLocation = &quot;http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;&amp;gt;

   &amp;lt;!-- A simple bean definition --&amp;gt;
   &amp;lt;bean id = &quot;...&quot; class = &quot;...&quot;&amp;gt;
      &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
   &amp;lt;/bean&amp;gt;

   &amp;lt;!-- A bean definition with lazy init set on --&amp;gt;
   &amp;lt;bean id = &quot;...&quot; class = &quot;...&quot; lazy-init = &quot;true&quot;&amp;gt;
      &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
   &amp;lt;/bean&amp;gt;

   &amp;lt;!-- A bean definition with initialization method --&amp;gt;
   &amp;lt;bean id = &quot;...&quot; class = &quot;...&quot; init-method = &quot;...&quot;&amp;gt;
      &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
   &amp;lt;/bean&amp;gt;

   &amp;lt;!-- A bean definition with destruction method --&amp;gt;
   &amp;lt;bean id = &quot;...&quot; class = &quot;...&quot; destroy-method = &quot;...&quot;&amp;gt;
      &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
   &amp;lt;/bean&amp;gt;

   &amp;lt;!-- more bean definitions go here --&amp;gt;
   
&amp;lt;/beans&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;spring---bean-scopes&quot;&gt;Spring - Bean Scopes&lt;/h2&gt;
&lt;p&gt;当定义一个&lt;/p&gt;
&lt;p&gt;Spring Framework 支持以下5种作用域，如果使用的是web-aware Application只有三种可用。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;singleton : 将bean定义范围限定为每个Spring IoC容器的单个实例（默认）&lt;/li&gt;
&lt;li&gt;prototype : 将bean定义范围限定为具有任意数量的对象实例&lt;/li&gt;
&lt;li&gt;request : 将bean定义范围限定为HTTP请求。仅在Web感知Spring ApplicationContext的上下文中有效&lt;/li&gt;
&lt;li&gt;session : 将bean定义范围限定为HTTP会话。仅在Web感知Spring ApplicationContext的上下文中有效。&lt;/li&gt;
&lt;li&gt;global-session : 将bean定义范围限定为全局HTTP会话。仅在Web感知Spring ApplicationContext的上下文中有效。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;singleton&quot;&gt;singleton&lt;/h3&gt;
&lt;p&gt;只创建该Bean定义的对象的一个实例。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;!-- A bean definition with singleton scope --&amp;gt;
&amp;lt;bean id = &quot;...&quot; class = &quot;...&quot; scope = &quot;singleton&quot;&amp;gt;
   &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
&amp;lt;/bean&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;配置完成之后，如下的代码，有以下的效果。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      ApplicationContext context = new ClassPathXmlApplicationContext(&quot;Beans.xml&quot;);
      HelloWorld objA = (HelloWorld) context.getBean(&quot;helloWorld&quot;);

      objA.setMessage(&quot;I'm object A&quot;);
      objA.getMessage();

      HelloWorld objB = (HelloWorld) context.getBean(&quot;helloWorld&quot;);
      objB.getMessage();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;该程序打印：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I'm object A
I'm object A&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这证明，实际只创建了一个bean对象，虽然调用了两次getBean，但返回的都是同一个对象。&lt;/p&gt;
&lt;h3 id=&quot;prototype&quot;&gt;prototype&lt;/h3&gt;
&lt;p&gt;每次调用bean，都会创建一个新的方法。&lt;/p&gt;
&lt;p&gt;将上述的bean设置为prototype，执行同样的代码将会出现不同的效果。&lt;/p&gt;
&lt;p&gt;该程序打印：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I'm object A
null&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;spring-bean-life-cycle&quot;&gt;Spring-Bean Life Cycle&lt;/h2&gt;
&lt;p&gt;主要指的是，当bean被实例化时，可能需要执行一些初始化以使其进入可用状态。类似地，当不再需要bean并从容器中移除bean时，可能需要进行一些清理。&lt;/p&gt;
&lt;p&gt;中间也存在一些活动，本章重点讨论以下两个声明周期回调方法。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;initmethod&lt;/li&gt;
&lt;li&gt;destroy-method&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;初始化回调&quot;&gt;初始化回调&lt;/h3&gt;
&lt;p&gt;org.springframework.beans.factory.InitializingBean已经为我们提供了开发接口。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void afterPropertiesSet() throws Exception;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样我们就可以通过实现上面的接口实现初始化工作&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public class ExampleBean implements InitializingBean {
   public void afterPropertiesSet() {
      // do some initialization work
   }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;另外，对于XML的配置元数据，可以通过init-method指定具有void无参数的方法&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;bean id = &quot;exampleBean&quot; class = &quot;examples.ExampleBean&quot; init-method = &quot;init&quot;/&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;销毁回调&quot;&gt;销毁回调&lt;/h3&gt;
&lt;p&gt;org.springframework.beans.factory.DisposableBean也已经提供好了接口&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;void destroy() throws Exception;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样，我们可以通过实现该接口实现销毁的工作&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public class ExampleBean implements DisposableBean {
   public void destroy() {
      // do some destruction work
   }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;注意：如果想要使该函数起作用，需要注册registerShutdownHook()方法。&lt;/p&gt;
&lt;p&gt;同样，基于XML配置元数据，可以使用destroy-method指定具有void的无参方法&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;bean id = &quot;exampleBean&quot; class = &quot;examples.ExampleBean&quot; destroy-method = &quot;destroy&quot;/&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;建议还是使用XML的方式，更加灵活。&lt;/p&gt;
&lt;h3 id=&quot;默认的初始化和销毁方法&quot;&gt;默认的初始化和销毁方法&lt;/h3&gt;
&lt;p&gt;如果很多bean都需要同名的初始化和销毁方法，可以在&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;beans xmlns = &quot;http://www.springframework.org/schema/beans&quot;
   xmlns:xsi = &quot;http://www.w3.org/2001/XMLSchema-instance&quot;
   xsi:schemaLocation = &quot;http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&quot;
   default-init-method = &quot;init&quot; 
   default-destroy-method = &quot;destroy&quot;&amp;gt;

   &amp;lt;bean id = &quot;...&quot; class = &quot;...&quot;&amp;gt;
      &amp;lt;!-- collaborators and configuration for this bean go here --&amp;gt;
   &amp;lt;/bean&amp;gt;
   
&amp;lt;/beans&amp;gt;&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 11 Oct 2018 15:09:00 +0000</pubDate>
<dc:creator>NinWoo</dc:creator>
<og:description>spring framework的基础入门知识</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/NinWoo/p/9775708.html</dc:identifier>
</item>
<item>
<title>python异常处理 - cherry小樱桃</title>
<link>http://www.cnblogs.com/surewing/p/9775596.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/surewing/p/9775596.html</guid>
<description>&lt;p&gt;标签（空格分隔）： 异常处理&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;什么是异常&quot;&gt;什么是异常？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;异常就是程序运行时发生错误的信号（在程序出现错误时，则会产生一个异常，若程序没有处理它，则会抛出该异常，程序的运行也随之终止），在python中,错误触发的异常如下&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/wangcherry123/exzy4j05i8topvswnv46pj7b/image.png&quot; alt=&quot;image.png-250.5kB&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;而错误分成两种&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;1.语法错误（这种错误，根本过不了python解释器的语法检测，必须在程序执行前就改正）&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#语法错误示范一
if
#语法错误示范二
def test:
    pass
#语法错误示范三
class Foo
    pass
#语法错误示范四
print(haha)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.逻辑错误&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#TypeError:int类型不可迭代
for i in 3:
    pass
#ValueError
num=input(&quot;&amp;gt;&amp;gt;: &quot;) #输入hello
int(num)

#NameError
aaa

#IndexError
l=['egon','aa']
l[3]

#KeyError
dic={'name':'egon'}
dic['age']

#AttributeError
class Foo:pass
Foo.x

#ZeroDivisionError:无法完成计算
res1=1/0
res2=1+'str'&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;异常的种类&quot;&gt;异常的种类&lt;/h2&gt;
&lt;p&gt;在python中不同的异常可以用不同的类型（python中统一了类与类型，类型即类）去标识，一个异常标识一种错误&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;AttributeError 试图访问一个对象没有的树形，比如foo.x，但是foo没有属性x&lt;br/&gt;IOError 输入/输出异常；基本上是无法打开文件&lt;br/&gt;ImportError 无法引入模块或包；基本上是路径问题或名称错误&lt;br/&gt;IndentationError 语法错误（的子类） ；代码没有正确对齐&lt;br/&gt;IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]&lt;br/&gt;KeyError 试图访问字典里不存在的键&lt;br/&gt;KeyboardInterrupt Ctrl+C被按下&lt;br/&gt;NameError 使用一个还未被赋予对象的变量&lt;br/&gt;SyntaxError Python代码非法，代码不能编译(个人认为这是语法错误，写错了）&lt;br/&gt;TypeError 传入对象类型与要求的不符合&lt;br/&gt;UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另有一个同名的全局变量，&lt;br/&gt;导致你以为正在访问它&lt;br/&gt;ValueError 传入一个调用者不期望的值，即使值的类型是正确的&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;更多异常&quot;&gt;更多异常&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;ArithmeticError&lt;br/&gt;AssertionError&lt;br/&gt;AttributeError&lt;br/&gt;BaseException&lt;br/&gt;BufferError&lt;br/&gt;BytesWarning&lt;br/&gt;DeprecationWarning&lt;br/&gt;EnvironmentError&lt;br/&gt;EOFError&lt;br/&gt;Exception&lt;br/&gt;FloatingPointError&lt;br/&gt;FutureWarning&lt;br/&gt;GeneratorExit&lt;br/&gt;ImportError&lt;br/&gt;ImportWarning&lt;br/&gt;IndentationError&lt;br/&gt;IndexError&lt;br/&gt;IOError&lt;br/&gt;KeyboardInterrupt&lt;br/&gt;KeyError&lt;br/&gt;LookupError&lt;br/&gt;MemoryError&lt;br/&gt;NameError&lt;br/&gt;NotImplementedError&lt;br/&gt;OSError&lt;br/&gt;OverflowError&lt;br/&gt;PendingDeprecationWarning&lt;br/&gt;ReferenceError&lt;br/&gt;RuntimeError&lt;br/&gt;RuntimeWarning&lt;br/&gt;StandardError&lt;br/&gt;StopIteration&lt;br/&gt;SyntaxError&lt;br/&gt;SyntaxWarning&lt;br/&gt;SystemError&lt;br/&gt;SystemExit&lt;br/&gt;TabError&lt;br/&gt;TypeError&lt;br/&gt;UnboundLocalError&lt;br/&gt;UnicodeDecodeError&lt;br/&gt;UnicodeEncodeError&lt;br/&gt;UnicodeError&lt;br/&gt;UnicodeTranslateError&lt;br/&gt;UnicodeWarning&lt;br/&gt;UserWarning&lt;br/&gt;ValueError&lt;br/&gt;Warning&lt;br/&gt;ZeroDivisionError&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;异常处理&quot;&gt;异常处理&lt;/h2&gt;
&lt;p&gt;为了保证程序的健壮性与容错性，即在遇到错误时程序不会崩溃，我们需要对异常进行处理&lt;/p&gt;
&lt;p&gt;如果错误发生的条件是可预知的，我们需要用if进行处理：在错误发生之前进行预防&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;AGE=10
while True:
    age=input('&amp;gt;&amp;gt;: ').strip()
    if age.isdigit(): #只有在age为字符串形式的整数时,下列代码才不会出错,该条件是可预知的
        age=int(age)
        if age == AGE:
            print('you got it')
            break&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果错误发生的条件是不可预知的，则需要用到try...except：在错误发生之后进行处理&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;#基本语法为
try:
    被检测的代码块
except 异常类型：
    try中一旦检测到异常，就执行这个位置的逻辑
#举例
try:
    f=open('a.txt')
    g=(line.strip() for line in f)
    print(next(g))
    print(next(g))
    print(next(g))
    print(next(g))
    print(next(g))
except StopIteration:
    f.close()&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;try..except...详细用法&quot;&gt;try..except...详细用法&lt;/h2&gt;
&lt;p&gt;1.异常类只能用来处理指定的异常情况，如果非指定异常则无法处理&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;s1 = 'hello'
try:
    int(s1)
except IndexError as e: # 未捕获到异常，程序直接报错
    print e&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.多分支&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;s1 = 'hello'
try:
    int(s1)
except IndexError as e:
    print(e)
except KeyError as e:
    print(e)
except ValueError as e:
    print(e)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3.万能异常Exception&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;s1 = 'hello'
try:
    int(s1)
except Exception as e:
    print(e)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4.也可以在多分支后来一个Exception&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;s1 = 'hello'
try:
    int(s1)
except IndexError as e:
    print(e)
except KeyError as e:
    print(e)
except ValueError as e:
    print(e)
except Exception as e:
    print(e)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5.异常的其他机构&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;s1 = 'hello'
try:
    int(s1)
except IndexError as e:
    print(e)
except KeyError as e:
    print(e)
except ValueError as e:
    print(e)
#except Exception as e:
#    print(e)
else:
    print('try内代码块没有异常则执行我')
finally:
    print('无论异常与否,都会执行该模块,通常是进行清理工作')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6.主动触发异常&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;try:
    raise TypeError('类型错误')
except Exception as e:
    print(e)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;7.自定义异常&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;class EgonException(BaseException):
    def __init__(self,msg):
        self.msg=msg
    def __str__(self):
        return self.msg

try:
    raise EgonException('类型错误')
except EgonException as e:
    print(e)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;8.断言:assert 条件&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;assert 1 == 1  
assert 1 == 2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;9.总结try..except&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;
&lt;code&gt;1：把错误处理和真正的工作分开来

2：代码更易组织，更清晰，复杂的工作任务更容易实现；

3：毫无疑问，更安全了，不至于由于一些小的疏忽而使程序意外崩溃了；&lt;/code&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 11 Oct 2018 14:45:00 +0000</pubDate>
<dc:creator>cherry小樱桃</dc:creator>
<og:description>标签（空格分隔）： 异常处理 什么是异常？ 异常就是程序运行时发生错误的信号（在程序出现错误时，则会产生一个异常，若程序没有处理它，则会抛出该异常，程序的运行也随之终止），在python中,错误触发的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/surewing/p/9775596.html</dc:identifier>
</item>
<item>
<title>AspNet Core下利用 app-metrics+Grafana + InfluxDB实现高大上的性能监控界面 - linkanyway</title>
<link>http://www.cnblogs.com/linkanyway/p/metrics-grafana-influxdb-dotnet-core.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/linkanyway/p/metrics-grafana-influxdb-dotnet-core.html</guid>
<description>&lt;p&gt;在日常系统工作中，我们为了洞察系统的问题和运作情况通常会记录日志的方式来进行分析，但是在很多情况下都是被动的在出问题后才会去查日志。在很多时候，我们可能更需要相对实时的了解整个系统或者某一时段的运行的情况，诸如系统出错的频率以及响应时间等等指标。这些动态的准实时信息对于监控整个系统的运行和健康状况非常重要，而本文的主角们能通过很好的配合帮助你实现这个目标，而且是一种高大上的实现方式。想想泡杯茶翘着二郎腿看着偌大的屏幕上有着一堆华丽的仪表和曲线图，即使看不懂也很牛B的样子啊！（谁知道我看得懂看不懂呢，是不是？）&lt;/p&gt;&lt;p&gt;Q: 那什么是&lt;a href=&quot;https://www.app-metrics.io/&quot;&gt;App-Metrics&lt;/a&gt;?&lt;br/&gt;A: App Metrics是一个开源和跨平台的.NET库，用于记录应用程序中各项指标。可以在.NET Core上运行，也可以在支持.NET 4.5.2的完整.NET框架上运行。&lt;br/&gt;App Metrics对底层数据源做了很好的抽象以支持很多类型的数据库，例如：&lt;br/&gt;InfluxDb、Prometheus、ElasticSearch等等。。&lt;br/&gt;同时他又提供了很多Measurements比如Apdex, Gauges, Counters, Meters, Histograms 等等一大堆&lt;/p&gt;&lt;p&gt;Q: 什么是&lt;a href=&quot;https://grafana.com/grafana&quot;&gt;Grafana&lt;/a&gt;？&lt;br/&gt;A: 一个类似Kibana的可视化数据开源程序，一般配合时间序列数据库进行配合来展示数据&lt;/p&gt;&lt;div readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
docker run -d --name=grafana -p 3000:3000 grafana/grafana
&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;InfluxDb是比较流行的时序数据库，可以根据需要替换成Prometheus同上为了方便我们还是使用docker来运行&lt;br/&gt;如果你希望每次都能保持之前docker运行收集的数据可以用docker 的-v选项把目录映射到本机的目录以便持久化数据&lt;/p&gt;&lt;div readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
docker run -d -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 tutum/influxdb
&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着就是创建你的Dashboard，可以自己建立也可以自己配置json文件导入，网上有很多例子可以直接下载&lt;/p&gt;&lt;div readability=&quot;1867&quot;&gt;
&lt;pre class=&quot;brush:javascript;collapse:true;;gutter:true;&quot;&gt;
{
  &quot;__inputs&quot;: [],
  &quot;__requires&quot;: [
    {
      &quot;type&quot;: &quot;grafana&quot;,
      &quot;id&quot;: &quot;grafana&quot;,
      &quot;name&quot;: &quot;Grafana&quot;,
      &quot;version&quot;: &quot;4.2.0&quot;
    },
    {
      &quot;type&quot;: &quot;panel&quot;,
      &quot;id&quot;: &quot;grafana-piechart-panel&quot;,
      &quot;name&quot;: &quot;Pie Chart&quot;,
      &quot;version&quot;: &quot;1.1.4&quot;
    },
    {
      &quot;type&quot;: &quot;panel&quot;,
      &quot;id&quot;: &quot;graph&quot;,
      &quot;name&quot;: &quot;Graph&quot;,
      &quot;version&quot;: &quot;&quot;
    },
    {
      &quot;type&quot;: &quot;panel&quot;,
      &quot;id&quot;: &quot;singlestat&quot;,
      &quot;name&quot;: &quot;Singlestat&quot;,
      &quot;version&quot;: &quot;&quot;
    },
    {
      &quot;type&quot;: &quot;panel&quot;,
      &quot;id&quot;: &quot;table&quot;,
      &quot;name&quot;: &quot;Table&quot;,
      &quot;version&quot;: &quot;&quot;
    }
  ],
  &quot;annotations&quot;: {
    &quot;list&quot;: []
  },
  &quot;description&quot;: &quot;Dashboard to visualize metrics captured by App Metrics ASP.NET Core Middleware 1.2.0, tested with App.Metrics.Extensions.Reporting.InfluxDB 1.2.0  - http://app-metrics.io/&quot;,
  &quot;editable&quot;: true,
  &quot;gnetId&quot;: 2125,
  &quot;graphTooltip&quot;: 1,
  &quot;hideControls&quot;: false,
  &quot;id&quot;: null,
  &quot;links&quot;: [],
  &quot;refresh&quot;: &quot;5s&quot;,
  &quot;rows&quot;: [
    {
      &quot;collapse&quot;: true,
      &quot;height&quot;: &quot;250&quot;,
      &quot;panels&quot;: [
        {
          &quot;cacheTimeout&quot;: null,
          &quot;colorBackground&quot;: false,
          &quot;colorValue&quot;: false,
          &quot;colors&quot;: [
            &quot;rgba(245, 54, 54, 0.9)&quot;,
            &quot;rgba(237, 129, 40, 0.89)&quot;,
            &quot;rgba(50, 172, 45, 0.97)&quot;
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;format&quot;: &quot;rpm&quot;,
          &quot;gauge&quot;: {
            &quot;maxValue&quot;: 100,
            &quot;minValue&quot;: 0,
            &quot;show&quot;: false,
            &quot;thresholdLabels&quot;: false,
            &quot;thresholdMarkers&quot;: true
          },
          &quot;id&quot;: 8,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;mappingType&quot;: 1,
          &quot;mappingTypes&quot;: [
            {
              &quot;name&quot;: &quot;value to text&quot;,
              &quot;value&quot;: 1
            },
            {
              &quot;name&quot;: &quot;range to text&quot;,
              &quot;value&quot;: 2
            }
          ],
          &quot;maxDataPoints&quot;: 100,
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;nullText&quot;: null,
          &quot;postfix&quot;: &quot;&quot;,
          &quot;postfixFontSize&quot;: &quot;50%&quot;,
          &quot;prefix&quot;: &quot;&quot;,
          &quot;prefixFontSize&quot;: &quot;50%&quot;,
          &quot;rangeMaps&quot;: [
            {
              &quot;from&quot;: &quot;null&quot;,
              &quot;text&quot;: &quot;N/A&quot;,
              &quot;to&quot;: &quot;null&quot;
            }
          ],
          &quot;span&quot;: 2,
          &quot;sparkline&quot;: {
            &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;,
            &quot;full&quot;: true,
            &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;,
            &quot;show&quot;: true
          },
          &quot;targets&quot;: [
            {
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate1m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: &quot;&quot;,
          &quot;title&quot;: &quot;Throughput&quot;,
          &quot;type&quot;: &quot;singlestat&quot;,
          &quot;valueFontSize&quot;: &quot;80%&quot;,
          &quot;valueMaps&quot;: [
            {
              &quot;op&quot;: &quot;=&quot;,
              &quot;text&quot;: &quot;N/A&quot;,
              &quot;value&quot;: &quot;null&quot;
            }
          ],
          &quot;valueName&quot;: &quot;current&quot;
        },
        {
          &quot;cacheTimeout&quot;: null,
          &quot;colorBackground&quot;: false,
          &quot;colorValue&quot;: false,
          &quot;colors&quot;: [
            &quot;rgba(50, 172, 45, 0.97)&quot;,
            &quot;rgba(237, 129, 40, 0.89)&quot;,
            &quot;rgba(245, 54, 54, 0.9)&quot;
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;decimals&quot;: 4,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;format&quot;: &quot;percent&quot;,
          &quot;gauge&quot;: {
            &quot;maxValue&quot;: 100,
            &quot;minValue&quot;: 0,
            &quot;show&quot;: false,
            &quot;thresholdLabels&quot;: false,
            &quot;thresholdMarkers&quot;: true
          },
          &quot;id&quot;: 6,
          &quot;interval&quot;: null,
          &quot;links&quot;: [],
          &quot;mappingType&quot;: 1,
          &quot;mappingTypes&quot;: [
            {
              &quot;name&quot;: &quot;value to text&quot;,
              &quot;value&quot;: 1
            },
            {
              &quot;name&quot;: &quot;range to text&quot;,
              &quot;value&quot;: 2
            }
          ],
          &quot;maxDataPoints&quot;: 100,
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;nullText&quot;: null,
          &quot;postfix&quot;: &quot;&quot;,
          &quot;postfixFontSize&quot;: &quot;50%&quot;,
          &quot;prefix&quot;: &quot;&quot;,
          &quot;prefixFontSize&quot;: &quot;50%&quot;,
          &quot;rangeMaps&quot;: [
            {
              &quot;from&quot;: &quot;&quot;,
              &quot;text&quot;: &quot;&quot;,
              &quot;to&quot;: &quot;&quot;
            }
          ],
          &quot;span&quot;: 2,
          &quot;sparkline&quot;: {
            &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;,
            &quot;full&quot;: true,
            &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;,
            &quot;show&quot;: true
          },
          &quot;targets&quot;: [
            {
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [],
              &quot;measurement&quot;: &quot;application.httprequests__one_minute_error_percentage_rate&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;query&quot;: &quot;SELECT  \&quot;value\&quot; FROM \&quot;application.httprequests__percentage_error_requests\&quot; WHERE $timeFilter&quot;,
              &quot;rawQuery&quot;: false,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: &quot;&quot;,
          &quot;title&quot;: &quot;Error %&quot;,
          &quot;type&quot;: &quot;singlestat&quot;,
          &quot;valueFontSize&quot;: &quot;80%&quot;,
          &quot;valueMaps&quot;: [
            {
              &quot;op&quot;: &quot;=&quot;,
              &quot;text&quot;: &quot;0%&quot;,
              &quot;value&quot;: &quot;null&quot;
            }
          ],
          &quot;valueName&quot;: &quot;current&quot;
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 2,
          &quot;id&quot;: 13,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;avg&quot;: false,
            &quot;current&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;show&quot;: false,
            &quot;total&quot;: false,
            &quot;values&quot;: false
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 4,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__active&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Active Requests&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {
            &quot;application.httprequests__apdex.last&quot;: &quot;#6ED0E0&quot;
          },
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;&quot;,
          &quot;id&quot;: 7,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;avg&quot;: false,
            &quot;current&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;show&quot;: false,
            &quot;total&quot;: false,
            &quot;values&quot;: false
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 3,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 4,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__apdex&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;score&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [
            {
              &quot;colorMode&quot;: &quot;critical&quot;,
              &quot;fill&quot;: true,
              &quot;line&quot;: true,
              &quot;op&quot;: &quot;lt&quot;,
              &quot;value&quot;: 0.5
            },
            {
              &quot;colorMode&quot;: &quot;warning&quot;,
              &quot;fill&quot;: true,
              &quot;line&quot;: true,
              &quot;op&quot;: &quot;gt&quot;,
              &quot;value&quot;: 0.5
            },
            {
              &quot;colorMode&quot;: &quot;ok&quot;,
              &quot;fill&quot;: true,
              &quot;line&quot;: true,
              &quot;op&quot;: &quot;gt&quot;,
              &quot;value&quot;: 0.75
            }
          ],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Apdex score&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: &quot;apdex&quot;,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: &quot;1&quot;,
              &quot;min&quot;: &quot;0&quot;,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: false
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;350&quot;,
          &quot;id&quot;: 1,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;avg&quot;: false,
            &quot;current&quot;: true,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: true
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$col&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate1m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;1 min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate5m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;5 min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate15m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;15 min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Throughput&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;rpm&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;350&quot;,
          &quot;id&quot;: 2,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: false,
            &quot;avg&quot;: false,
            &quot;current&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: false,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: false
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$col&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;p95&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;95th Percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p98&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;98th Percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p99&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;99th Percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Response Time&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;ms&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;&quot;,
          &quot;id&quot;: 9,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: true,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: false,
            &quot;total&quot;: false,
            &quot;values&quot;: true
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__one_minute_error_percentage_rate&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Error Rate %&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;percent&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: &quot;100&quot;,
              &quot;min&quot;: &quot;0&quot;,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;decimals&quot;: 2,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;250px&quot;,
          &quot;id&quot;: 3,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: true,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: true
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$col&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__error_rate&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate1m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;1min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate5m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;5min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate15m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;15min rate&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Error Rate&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 2,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;rpm&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;cacheTimeout&quot;: null,
          &quot;combine&quot;: {
            &quot;label&quot;: &quot;Others&quot;,
            &quot;threshold&quot;: 0
          },
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fontSize&quot;: &quot;80%&quot;,
          &quot;format&quot;: &quot;percent&quot;,
          &quot;height&quot;: &quot;250px&quot;,
          &quot;id&quot;: 4,
          &quot;interval&quot;: &quot;&quot;,
          &quot;legend&quot;: {
            &quot;percentage&quot;: true,
            &quot;show&quot;: true,
            &quot;sort&quot;: null,
            &quot;sortDesc&quot;: null,
            &quot;values&quot;: true
          },
          &quot;legendType&quot;: &quot;Right side&quot;,
          &quot;links&quot;: [],
          &quot;maxDataPoints&quot;: 3,
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;pieType&quot;: &quot;pie&quot;,
          &quot;span&quot;: 5,
          &quot;strokeWidth&quot;: 1,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_http_status_code&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;http_status_code&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__errors&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;sum&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Errors&quot;,
          &quot;type&quot;: &quot;grafana-piechart-panel&quot;,
          &quot;valueName&quot;: &quot;current&quot;
        },
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Total&quot;,
              &quot;value&quot;: &quot;total&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: true,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;id&quot;: 24,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: 20,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: 1,
            &quot;desc&quot;: true
          },
          &quot;span&quot;: 7,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: null,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 0,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;none&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_exception&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;exception&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__exceptions&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Uncaught Exceptions Thrown&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;type&quot;: &quot;table&quot;
        }
      ],
      &quot;repeat&quot;: null,
      &quot;repeatIteration&quot;: null,
      &quot;repeatRowId&quot;: null,
      &quot;showTitle&quot;: true,
      &quot;title&quot;: &quot;Overview&quot;,
      &quot;titleSize&quot;: &quot;h6&quot;
    },
    {
      &quot;collapse&quot;: false,
      &quot;height&quot;: &quot;300&quot;,
      &quot;panels&quot;: [
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;350&quot;,
          &quot;id&quot;: 16,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: true,
            &quot;sort&quot;: &quot;current&quot;,
            &quot;sortDesc&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: false
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: true,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions_per_endpoint&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate1m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Throughput / Endpoint&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 2,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;transparent&quot;: false,
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;rpm&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;height&quot;: &quot;350&quot;,
          &quot;id&quot;: 17,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: false
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions_per_endpoint&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;p95&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;95th Percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Response Time / Endpoint&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;ms&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Current&quot;,
              &quot;value&quot;: &quot;current&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: false,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;id&quot;: 10,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: null,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: 1,
            &quot;desc&quot;: true
          },
          &quot;span&quot;: 6,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: null,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 2,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;ms&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions_per_endpoint&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;p95&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Response Times / Endpoint&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;type&quot;: &quot;table&quot;
        },
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Current&quot;,
              &quot;value&quot;: &quot;current&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: false,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;id&quot;: 12,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: null,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: 1,
            &quot;desc&quot;: true
          },
          &quot;span&quot;: 6,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: null,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 2,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;rpm&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__transactions_per_endpoint&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;rate1m&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Throughput / Endpoint&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;type&quot;: &quot;table&quot;
        },
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Current&quot;,
              &quot;value&quot;: &quot;current&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: false,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;id&quot;: 11,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: null,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: null,
            &quot;desc&quot;: false
          },
          &quot;span&quot;: 6,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: null,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 0,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;percent&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__one_minute_error_percentage_rate_per_endpoint&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Error Request Percentage / Endpoint&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;type&quot;: &quot;table&quot;
        },
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Total&quot;,
              &quot;value&quot;: &quot;total&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: false,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;id&quot;: 25,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: null,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: 1,
            &quot;desc&quot;: true
          },
          &quot;span&quot;: 6,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: null,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 0,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;none&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_route [$tag_exception]&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;route&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;exception&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__exceptions&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;title&quot;: &quot;Uncaught Exceptions Thrown / Endpoint&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;type&quot;: &quot;table&quot;
        }
      ],
      &quot;repeat&quot;: null,
      &quot;repeatIteration&quot;: null,
      &quot;repeatRowId&quot;: null,
      &quot;showTitle&quot;: true,
      &quot;title&quot;: &quot;Endpoints&quot;,
      &quot;titleSize&quot;: &quot;h6&quot;
    },
    {
      &quot;collapse&quot;: false,
      &quot;height&quot;: &quot;250&quot;,
      &quot;panels&quot;: [
        {
          &quot;columns&quot;: [
            {
              &quot;text&quot;: &quot;Current&quot;,
              &quot;value&quot;: &quot;current&quot;
            }
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;filterNull&quot;: false,
          &quot;fontSize&quot;: &quot;100%&quot;,
          &quot;hideTimeOverride&quot;: true,
          &quot;id&quot;: 22,
          &quot;interval&quot;: &quot;&quot;,
          &quot;links&quot;: [],
          &quot;pageSize&quot;: null,
          &quot;scroll&quot;: true,
          &quot;showHeader&quot;: true,
          &quot;sort&quot;: {
            &quot;col&quot;: 0,
            &quot;desc&quot;: true
          },
          &quot;span&quot;: 9,
          &quot;styles&quot;: [
            {
              &quot;dateFormat&quot;: &quot;YYYY-MM-DD HH:mm:ss&quot;,
              &quot;pattern&quot;: &quot;Time&quot;,
              &quot;type&quot;: &quot;date&quot;
            },
            {
              &quot;colorMode&quot;: &quot;row&quot;,
              &quot;colors&quot;: [
                &quot;rgba(245, 54, 54, 0.9)&quot;,
                &quot;rgba(237, 129, 40, 0.89)&quot;,
                &quot;rgba(50, 172, 45, 0.97)&quot;
              ],
              &quot;decimals&quot;: 1,
              &quot;pattern&quot;: &quot;/.*/&quot;,
              &quot;thresholds&quot;: [
                &quot;0.5&quot;,
                &quot;1&quot;
              ],
              &quot;type&quot;: &quot;number&quot;,
              &quot;unit&quot;: &quot;short&quot;
            }
          ],
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$tag_health_check_name&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;health_check_name&quot;
                  ],
                  &quot;type&quot;: &quot;tag&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.health__results&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;timeFrom&quot;: null,
          &quot;title&quot;: &quot;Results&quot;,
          &quot;transform&quot;: &quot;timeseries_aggregations&quot;,
          &quot;transparent&quot;: true,
          &quot;type&quot;: &quot;table&quot;
        },
        {
          &quot;cacheTimeout&quot;: null,
          &quot;colorBackground&quot;: true,
          &quot;colorValue&quot;: false,
          &quot;colors&quot;: [
            &quot;rgba(245, 54, 54, 0.9)&quot;,
            &quot;rgba(237, 129, 40, 0.89)&quot;,
            &quot;rgba(50, 172, 45, 0.97)&quot;
          ],
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;format&quot;: &quot;none&quot;,
          &quot;gauge&quot;: {
            &quot;maxValue&quot;: 100,
            &quot;minValue&quot;: 0,
            &quot;show&quot;: false,
            &quot;thresholdLabels&quot;: false,
            &quot;thresholdMarkers&quot;: true
          },
          &quot;hideTimeOverride&quot;: true,
          &quot;id&quot;: 19,
          &quot;interval&quot;: null,
          &quot;links&quot;: [
            {
              &quot;type&quot;: &quot;dashboard&quot;
            }
          ],
          &quot;mappingType&quot;: 2,
          &quot;mappingTypes&quot;: [
            {
              &quot;name&quot;: &quot;value to text&quot;,
              &quot;value&quot;: 1
            },
            {
              &quot;name&quot;: &quot;range to text&quot;,
              &quot;value&quot;: 2
            }
          ],
          &quot;maxDataPoints&quot;: 100,
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;nullText&quot;: null,
          &quot;postfix&quot;: &quot;&quot;,
          &quot;postfixFontSize&quot;: &quot;50%&quot;,
          &quot;prefix&quot;: &quot;&quot;,
          &quot;prefixFontSize&quot;: &quot;50%&quot;,
          &quot;rangeMaps&quot;: [
            {
              &quot;from&quot;: &quot;0&quot;,
              &quot;text&quot;: &quot;Unhealthy&quot;,
              &quot;to&quot;: &quot;0.49&quot;
            },
            {
              &quot;from&quot;: &quot;0.5&quot;,
              &quot;text&quot;: &quot;Degraded&quot;,
              &quot;to&quot;: &quot;0.9&quot;
            },
            {
              &quot;from&quot;: &quot;1.0&quot;,
              &quot;text&quot;: &quot;Healthy&quot;,
              &quot;to&quot;: &quot;2.0&quot;
            }
          ],
          &quot;span&quot;: 3,
          &quot;sparkline&quot;: {
            &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;,
            &quot;full&quot;: false,
            &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;,
            &quot;show&quot;: false
          },
          &quot;targets&quot;: [
            {
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.health__score&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;value&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: &quot;0.5,1&quot;,
          &quot;timeFrom&quot;: null,
          &quot;title&quot;: &quot;&quot;,
          &quot;transparent&quot;: true,
          &quot;type&quot;: &quot;singlestat&quot;,
          &quot;valueFontSize&quot;: &quot;80%&quot;,
          &quot;valueMaps&quot;: [
            {
              &quot;op&quot;: &quot;=&quot;,
              &quot;text&quot;: &quot;Unhealthy&quot;,
              &quot;value&quot;: &quot;0&quot;
            },
            {
              &quot;op&quot;: &quot;=&quot;,
              &quot;text&quot;: &quot;Degraded&quot;,
              &quot;value&quot;: &quot;0.5&quot;
            },
            {
              &quot;op&quot;: &quot;=&quot;,
              &quot;text&quot;: &quot;Healthy&quot;,
              &quot;value&quot;: &quot;1.0&quot;
            }
          ],
          &quot;valueName&quot;: &quot;current&quot;
        }
      ],
      &quot;repeat&quot;: null,
      &quot;repeatIteration&quot;: null,
      &quot;repeatRowId&quot;: null,
      &quot;showTitle&quot;: true,
      &quot;title&quot;: &quot;Health&quot;,
      &quot;titleSize&quot;: &quot;h6&quot;
    },
    {
      &quot;collapse&quot;: false,
      &quot;height&quot;: &quot;300&quot;,
      &quot;panels&quot;: [
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;id&quot;: 14,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: true,
            &quot;hideEmpty&quot;: false,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: true
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$col&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__post_size&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;p95&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;95th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p98&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;98th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p99&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;99th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;last&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;median&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;median&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Post Request Size&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;decbytes&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        },
        {
          &quot;aliasColors&quot;: {},
          &quot;bars&quot;: false,
          &quot;datasource&quot;: &quot;$datasource&quot;,
          &quot;editable&quot;: true,
          &quot;error&quot;: false,
          &quot;fill&quot;: 1,
          &quot;id&quot;: 15,
          &quot;interval&quot;: &quot;$summarize&quot;,
          &quot;legend&quot;: {
            &quot;alignAsTable&quot;: true,
            &quot;avg&quot;: false,
            &quot;current&quot;: true,
            &quot;max&quot;: false,
            &quot;min&quot;: false,
            &quot;rightSide&quot;: true,
            &quot;show&quot;: true,
            &quot;total&quot;: false,
            &quot;values&quot;: true
          },
          &quot;lines&quot;: true,
          &quot;linewidth&quot;: 1,
          &quot;links&quot;: [],
          &quot;nullPointMode&quot;: &quot;connected&quot;,
          &quot;percentage&quot;: false,
          &quot;pointradius&quot;: 5,
          &quot;points&quot;: false,
          &quot;renderer&quot;: &quot;flot&quot;,
          &quot;seriesOverrides&quot;: [],
          &quot;span&quot;: 6,
          &quot;stack&quot;: false,
          &quot;steppedLine&quot;: false,
          &quot;targets&quot;: [
            {
              &quot;alias&quot;: &quot;$col&quot;,
              &quot;dsType&quot;: &quot;influxdb&quot;,
              &quot;groupBy&quot;: [
                {
                  &quot;params&quot;: [
                    &quot;$interval&quot;
                  ],
                  &quot;type&quot;: &quot;time&quot;
                },
                {
                  &quot;params&quot;: [
                    &quot;null&quot;
                  ],
                  &quot;type&quot;: &quot;fill&quot;
                }
              ],
              &quot;measurement&quot;: &quot;application.httprequests__put_size&quot;,
              &quot;policy&quot;: &quot;default&quot;,
              &quot;refId&quot;: &quot;A&quot;,
              &quot;resultFormat&quot;: &quot;time_series&quot;,
              &quot;select&quot;: [
                [
                  {
                    &quot;params&quot;: [
                      &quot;p95&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;95th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p98&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;98th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;p99&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;last&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;99th percentile&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ],
                [
                  {
                    &quot;params&quot;: [
                      &quot;median&quot;
                    ],
                    &quot;type&quot;: &quot;field&quot;
                  },
                  {
                    &quot;params&quot;: [],
                    &quot;type&quot;: &quot;median&quot;
                  },
                  {
                    &quot;params&quot;: [
                      &quot;median&quot;
                    ],
                    &quot;type&quot;: &quot;alias&quot;
                  }
                ]
              ],
              &quot;tags&quot;: [
                {
                  &quot;key&quot;: &quot;app&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$application$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;env&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$environment$/&quot;
                },
                {
                  &quot;condition&quot;: &quot;AND&quot;,
                  &quot;key&quot;: &quot;server&quot;,
                  &quot;operator&quot;: &quot;=~&quot;,
                  &quot;value&quot;: &quot;/^$server$/&quot;
                }
              ]
            }
          ],
          &quot;thresholds&quot;: [],
          &quot;timeFrom&quot;: null,
          &quot;timeShift&quot;: null,
          &quot;title&quot;: &quot;Put Request Size&quot;,
          &quot;tooltip&quot;: {
            &quot;msResolution&quot;: false,
            &quot;shared&quot;: true,
            &quot;sort&quot;: 0,
            &quot;value_type&quot;: &quot;individual&quot;
          },
          &quot;type&quot;: &quot;graph&quot;,
          &quot;xaxis&quot;: {
            &quot;mode&quot;: &quot;time&quot;,
            &quot;name&quot;: null,
            &quot;show&quot;: true,
            &quot;values&quot;: []
          },
          &quot;yaxes&quot;: [
            {
              &quot;format&quot;: &quot;bytes&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            },
            {
              &quot;format&quot;: &quot;short&quot;,
              &quot;label&quot;: null,
              &quot;logBase&quot;: 1,
              &quot;max&quot;: null,
              &quot;min&quot;: null,
              &quot;show&quot;: true
            }
          ]
        }
      ],
      &quot;repeat&quot;: null,
      &quot;repeatIteration&quot;: null,
      &quot;repeatRowId&quot;: null,
      &quot;showTitle&quot;: true,
      &quot;title&quot;: &quot;PUT &amp;amp; POST Request Size&quot;,
      &quot;titleSize&quot;: &quot;h6&quot;
    }
  ],
  &quot;schemaVersion&quot;: 14,
  &quot;style&quot;: &quot;dark&quot;,
  &quot;tags&quot;: [
    &quot;influxdb&quot;
  ],
  &quot;templating&quot;: {
    &quot;list&quot;: [
      {
        &quot;allValue&quot;: null,
        &quot;current&quot;: {},
        &quot;datasource&quot;: &quot;$datasource&quot;,
        &quot;hide&quot;: 0,
        &quot;includeAll&quot;: false,
        &quot;label&quot;: null,
        &quot;multi&quot;: false,
        &quot;name&quot;: &quot;environment&quot;,
        &quot;options&quot;: [],
        &quot;query&quot;: &quot;SHOW TAG VALUES WITH KEY = \&quot;env\&quot;&quot;,
        &quot;refresh&quot;: 1,
        &quot;regex&quot;: &quot;&quot;,
        &quot;sort&quot;: 1,
        &quot;tagValuesQuery&quot;: null,
        &quot;tags&quot;: [],
        &quot;tagsQuery&quot;: null,
        &quot;type&quot;: &quot;query&quot;,
        &quot;useTags&quot;: false
      },
      {
        &quot;allValue&quot;: null,
        &quot;current&quot;: {},
        &quot;datasource&quot;: &quot;$datasource&quot;,
        &quot;hide&quot;: 0,
        &quot;includeAll&quot;: false,
        &quot;label&quot;: null,
        &quot;multi&quot;: false,
        &quot;name&quot;: &quot;application&quot;,
        &quot;options&quot;: [],
        &quot;query&quot;: &quot;SHOW TAG VALUES WITH KEY = \&quot;app\&quot;&quot;,
        &quot;refresh&quot;: 1,
        &quot;regex&quot;: &quot;&quot;,
        &quot;sort&quot;: 1,
        &quot;tagValuesQuery&quot;: null,
        &quot;tags&quot;: [],
        &quot;tagsQuery&quot;: null,
        &quot;type&quot;: &quot;query&quot;,
        &quot;useTags&quot;: false
      },
      {
        &quot;current&quot;: {
          &quot;text&quot;: &quot;AppMetricsSandbox&quot;,
          &quot;value&quot;: &quot;AppMetricsSandbox&quot;
        },
        &quot;hide&quot;: 0,
        &quot;label&quot;: null,
        &quot;name&quot;: &quot;datasource&quot;,
        &quot;options&quot;: [],
        &quot;query&quot;: &quot;influxdb&quot;,
        &quot;refresh&quot;: 1,
        &quot;regex&quot;: &quot;&quot;,
        &quot;type&quot;: &quot;datasource&quot;
      },
      {
        &quot;auto&quot;: false,
        &quot;auto_count&quot;: 30,
        &quot;auto_min&quot;: &quot;10s&quot;,
        &quot;current&quot;: {
          &quot;text&quot;: &quot;5s&quot;,
          &quot;value&quot;: &quot;5s&quot;
        },
        &quot;hide&quot;: 0,
        &quot;label&quot;: null,
        &quot;name&quot;: &quot;summarize&quot;,
        &quot;options&quot;: [
          {
            &quot;selected&quot;: true,
            &quot;text&quot;: &quot;5s&quot;,
            &quot;value&quot;: &quot;5s&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;10s&quot;,
            &quot;value&quot;: &quot;10s&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;30s&quot;,
            &quot;value&quot;: &quot;30s&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;1m&quot;,
            &quot;value&quot;: &quot;1m&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;10m&quot;,
            &quot;value&quot;: &quot;10m&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;30m&quot;,
            &quot;value&quot;: &quot;30m&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;1h&quot;,
            &quot;value&quot;: &quot;1h&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;6h&quot;,
            &quot;value&quot;: &quot;6h&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;12h&quot;,
            &quot;value&quot;: &quot;12h&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;1d&quot;,
            &quot;value&quot;: &quot;1d&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;7d&quot;,
            &quot;value&quot;: &quot;7d&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;14d&quot;,
            &quot;value&quot;: &quot;14d&quot;
          },
          {
            &quot;selected&quot;: false,
            &quot;text&quot;: &quot;30d&quot;,
            &quot;value&quot;: &quot;30d&quot;
          }
        ],
        &quot;query&quot;: &quot;5s,10s,30s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d&quot;,
        &quot;refresh&quot;: 2,
        &quot;type&quot;: &quot;interval&quot;
      },
      {
        &quot;allValue&quot;: null,
        &quot;current&quot;: {},
        &quot;datasource&quot;: &quot;$datasource&quot;,
        &quot;hide&quot;: 0,
        &quot;includeAll&quot;: true,
        &quot;label&quot;: null,
        &quot;multi&quot;: true,
        &quot;name&quot;: &quot;server&quot;,
        &quot;options&quot;: [],
        &quot;query&quot;: &quot;SHOW TAG VALUES WITH KEY = \&quot;server\&quot;&quot;,
        &quot;refresh&quot;: 1,
        &quot;regex&quot;: &quot;&quot;,
        &quot;sort&quot;: 0,
        &quot;tagValuesQuery&quot;: &quot;&quot;,
        &quot;tags&quot;: [],
        &quot;tagsQuery&quot;: &quot;&quot;,
        &quot;type&quot;: &quot;query&quot;,
        &quot;useTags&quot;: false
      }
    ]
  },
  &quot;time&quot;: {
    &quot;from&quot;: &quot;now-5m&quot;,
    &quot;to&quot;: &quot;now&quot;
  },
  &quot;timepicker&quot;: {
    &quot;refresh_intervals&quot;: [
      &quot;5s&quot;,
      &quot;10s&quot;,
      &quot;30s&quot;,
      &quot;1m&quot;,
      &quot;5m&quot;,
      &quot;15m&quot;,
      &quot;30m&quot;,
      &quot;1h&quot;,
      &quot;2h&quot;,
      &quot;1d&quot;
    ],
    &quot;time_options&quot;: [
      &quot;5m&quot;,
      &quot;15m&quot;,
      &quot;1h&quot;,
      &quot;6h&quot;,
      &quot;12h&quot;,
      &quot;24h&quot;,
      &quot;2d&quot;,
      &quot;7d&quot;,
      &quot;30d&quot;
    ]
  },
  &quot;timezone&quot;: &quot;browser&quot;,
  &quot;title&quot;: &quot;App Metrics - Web Monitoring - InfluxDB&quot;,
  &quot;version&quot;: 21
}
&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后启动AspNetCore站点，再建立点post get put什么的控制器和Action随便访问几次就可以了&lt;/p&gt;</description>
<pubDate>Thu, 11 Oct 2018 13:22:00 +0000</pubDate>
<dc:creator>linkanyway</dc:creator>
<og:description>在日常系统工作中，我们为了洞察系统的问题和运作情况通常会记录日志的方式来进行分析，但是在很多情况下都是被动的在出问题后才会去查日志。在很多时候，我们可能更需要相对实时的了解整个系统或者某一时段的运行的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/linkanyway/p/metrics-grafana-influxdb-dotnet-core.html</dc:identifier>
</item>
<item>
<title>react系列（四）Redux基本概念和使用 - liuyongjia</title>
<link>http://www.cnblogs.com/liuyongjia/p/9775111.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liuyongjia/p/9775111.html</guid>
<description>&lt;h2 id=&quot;先从flux开始&quot;&gt;先从Flux开始&lt;/h2&gt;
&lt;p&gt;先放一个&lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux官网&lt;/a&gt;的链接。需要fq。&lt;br/&gt;Flux是Facebook提出的一种构建客户端网页应用的应用架构，它是一种抽象程度很高的设计模式，鼓励单向数据流。&lt;br/&gt;在之前的MVC架构中，在小型应用中，Model和View较少时，关系不复杂，维护轻松。但是一旦功能越来越复杂，将难以维护，多个Model和多个View之间存在着多对多的关系，在开发时，需要花费很多时间去处理Modal间的关系。&lt;br/&gt;Flux架构的关键在于单向数据流，他由三部分构成——&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;dispatcher&lt;/li&gt;
&lt;li&gt;stores&lt;/li&gt;
&lt;li&gt;views（React components）&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;https://facebook.github.io/flux/img/flux-simple-f8-diagram-with-client-action-1300w.png&quot; alt=&quot;数据流图&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从一次Action触发，Dispatcher将它dispatch到store，更新store，store的变化同步更新到对应的view层。等待下一次的Action触发。&lt;br/&gt;这个过程中，数据始终是单向流动的。&lt;/p&gt;
&lt;p&gt;社区基于Flux有多种实现，其中Dan大神的Redux最受推崇，已经成为事实标准。&lt;/p&gt;
&lt;h2 id=&quot;redux&quot;&gt;Redux&lt;/h2&gt;
&lt;p&gt;前面的文章提到了组件间通信的几种方式，context API在小规模共享应用时值得一试。今天主要讲解react全家桶中的Redux。&lt;/p&gt;
&lt;h3 id=&quot;概念&quot;&gt;概念&lt;/h3&gt;
&lt;p&gt;在说概念之前，先看一张图：&lt;br/&gt;&lt;img src=&quot;https://css-tricks.com/wp-content/uploads/2016/03/redux-article-3-03.svg&quot; alt=&quot;with redux&quot;/&gt;&lt;br/&gt;| 图片来源 &lt;a href=&quot;https://css-tricks.com/learning-react-redux/&quot; class=&quot;uri&quot;&gt;https://css-tricks.com/learning-react-redux/&lt;/a&gt;&lt;br/&gt;根据上面的图片，可以发现Redux相当于一个全局的Provider。各个子组件是Consumer。&lt;br/&gt;当然，Redux不只是简单的提供一个全局Provider。&lt;br/&gt;它有以下几个特点：&lt;/p&gt;
&lt;p&gt;1.唯一数据源&lt;br/&gt;不同于Flux的实现，Redux只有一个唯一的数据源，它提供一个深层嵌套的对象来存放所有数据。&lt;br/&gt;2.状态只读&lt;br/&gt;在Redux中，所有的状态都是只读的，如果要修改state，则需要dispatch一个action，reducer通过action的type，选择执行不同的操作，返回新的状态。&lt;br/&gt;3.通过纯函数改变状态&lt;br/&gt;纯函数的概念很简单，一个函数，给定输入，则确定输出，不受其他因素影响，也不会影响原来的引用。&lt;br/&gt;由于Redux提倡纯函数对状态进行处理，不会更改之前的对象，对于操作&lt;/p&gt;
&lt;pre class=&quot;math&quot;&gt;
&lt;code&gt;fn(x) = y;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;只要x给定，则y一定是确认值。这样不论是之后进行很方便来追踪数据的更改，debug，时间回溯，都非常方便。&lt;/p&gt;
&lt;h3 id=&quot;使用&quot;&gt;使用&lt;/h3&gt;
&lt;p&gt;Redux的API非常简单，这里是&lt;a href=&quot;https://cn.redux.js.org/docs/api/&quot;&gt;Redux API文档&lt;/a&gt;。&lt;br/&gt;我们只需要使用两个API就能使用到Redux。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;// 创建一个Reducer
let countReducer = (state = 0, action) =&amp;gt; {
  if (action.type === 'ADD') {
    state++;
  }
  return state;
}

// 创建一个Store
var store = Redux.createStore(countReducer);

// dispatch一个action
store.dispatch({
  type: 'ADD'
});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果有多个State，比如，count和user，则需要使用combineReducers方法。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;import { createStore, combineReducers } from 'redux';

// The User Reducer
const userReducer = (state = {}, action) =&amp;gt; {
  return state;
}

// The Widget Reducer
const countReducer = (state = {}, action) =&amp;gt; {
  return state;
}

// Combine Reducers
const reducers = combineReducers({
  userState: userReducer,
  countState: countState,
});

const store = createStore(reducers);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在实际使用时，有ActionCreateor的概念，其实并不复杂，就是一个函数，返回响应的Action。可以在这个函数中对Action做一些逻辑的判断处理。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;CountActionCreators.js&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;export function plus() {
  return {
    type: 'PLUS'
  };
}

export function minus() {
  return {
    type: 'MINUS'
  };
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接下来需要调用bindActionCreators。&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;let one = bindActionCreators({ plusOne, minusOne }, store.dispatch);
store.subscribe(() =&amp;gt; console.log(store.getState()));

one.plusOne();
one.minusOne();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里是一个完整的&lt;a href=&quot;https://7yqw290wrq.codesandbox.io/&quot;&gt;例子-codesandbox&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;下一篇讲解在React中使用Redux。&lt;br/&gt;感谢阅读。&lt;/p&gt;
</description>
<pubDate>Thu, 11 Oct 2018 13:13:00 +0000</pubDate>
<dc:creator>liuyongjia</dc:creator>
<og:description>Redux基本概念和使用 先从Flux开始 先放一个</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liuyongjia/p/9775111.html</dc:identifier>
</item>
<item>
<title>JUnit源码分析 - 扩展 - 自定义RunListener - coolstream</title>
<link>http://www.cnblogs.com/coolstream/p/9756336.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/coolstream/p/9756336.html</guid>
<description>
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RunListener简述&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;JUnit4中的RunListener类用来监听测试执行的各个阶段，由RunNotifier通知测试去运行。RunListener与RunNotifier之间的协作应用的是观察者模式，RunListener类充当观察者角色，RunNotifier充当通知者角色，有点类似于JDK中的事件监听器MouseListener在鼠标执行不同的操作时触发相应方法中封装的动作。RunListener监听的动作包括如下测试阶段：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;所有测试开始前&lt;/span&gt;：调用testRunStarted()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;所有测试结束后&lt;/span&gt;：调用testRunFinished()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;测试套开始前&lt;/span&gt;：调用testSuiteStarted()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;测试套结束后&lt;/span&gt;：调用testSuiteFinished()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;原子测试方法开始前&lt;/span&gt;：调用testStarted()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;原子测试方法结束后&lt;/span&gt;：调用testFinished()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;原子测试被忽略&lt;/span&gt;：调用testIgnored()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;测试执行失败或监听器自身抛出异常&lt;/span&gt;：调用testFailure()&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;原子测试方法因调用Assume类中的方法失败（非测试执行失败）&lt;/span&gt;：调用&lt;span&gt;testAssumptionFailure&lt;/span&gt;()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RunListener封装了测试执行过程处于这些阶段时需要做出的响应，另外提供了@ThreadSafe用来表明其所注解的监听器是线程安全的。&lt;/p&gt;
&lt;p&gt;JUnit4自身已经提供了如下两个RunListener子类供系统调用，我们还可以根据测试实际需要扩展自己的RunListener。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;TextListener&lt;/span&gt;：以打印文本的形式处理测试各阶段的RunListener子类，打印操作由其类成员java.io.PrintStream执行&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;SynchronizedRunListener&lt;/span&gt;：线程安全的RunListener子类，未使用@ThreadSafe修饰的监听器由该子类封装&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Junit4在Result类中内置了一个私有内部类Listener用于实时统计测试执行信息，该内部类继承自RunListener但不对外提供系统调用。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RunListener源码分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;RunListener定义了9个空方法和1个注解，这里空方法的主要作用是分类各种测试事件并定义相应的回调接口，回调接口中的参数用于将数据传递给上层模块。由于各类测试事件发生的时机不同，所以RunListener中分别使用了Description、Result和Failure类封装回调接口需要传递给上层模块的数据。&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;关键代码&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;　　　　JUnit4.12版本增加了@ThreadSafe注解，JUnit4.13版本新增了testSuiteStarted()和testSuiteFinished()两个测试事件。去掉英文注释后的源码如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//org.junit.runner.notification&lt;/span&gt;&lt;span&gt;&lt;br/&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RunListener {

    &lt;/span&gt;&lt;span&gt;//所有测试开始前被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testRunStarted(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//所有测试结束后被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testRunFinished(Result result) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//测试套执行前被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testSuiteStarted(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//测试套执行后被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testSuiteFinished(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//单个原子级测试执行前被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testStarted(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//单个原子级测试执行后被调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testFinished(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//单个原子级测试失败时或监听器抛出异常时被调用，并且把测试失败信息写入到Failure类对象中&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testFailure(Failure failure) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }

    &lt;/span&gt;&lt;span&gt;//原子级测试方法因调用Assume类中的方法失败（非测试执行失败），并将调用失败信息写入到Failure类对象中&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAssumptionFailure(Failure failure) {
    }
&lt;/span&gt;&lt;span&gt;&lt;br/&gt;　　//当执行到被@Ignore修饰的原子级测试方法时调用&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testIgnored(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    }
&lt;/span&gt;&lt;span&gt;&lt;br/&gt;　　//被@ThreadSafe修饰的监听器是线程安全的&lt;/span&gt;&lt;span&gt;
    @Documented
    @Target(ElementType.TYPE)
    @Retention(RetentionPolicy.RUNTIME)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; @&lt;span&gt;interface&lt;/span&gt;&lt;span&gt; ThreadSafe {
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;&lt;li&gt;&lt;strong&gt;相关类解析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;与RunListener相关的类有Description，Result和Failure，三者都实现了序列化接口，作为测试事件回调接口的参数传递给上层模块。本篇只简述这三个类的封装及功能，详细解析将在后续文档中展开。&lt;/p&gt;

&lt;p&gt;　　&lt;span&gt;Description(org.junit.runner)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Description类用来封装待测试对象中的文本描述信息。Description描述的对象可以是单个的测试方法，包含若干个测试方法的单个测试类，或者包含若干个测试类的测试套。&lt;/p&gt;
&lt;p&gt; 　　JUnit4使用组合模式来构造待测试对象集合，这些测试对象整体上可以看做一个测试树，每个测试对象都由一个Description类封装且包含如下数据：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Collection&amp;lt;Description&amp;gt; fChildren = &lt;span&gt;new&lt;/span&gt; ConcurrentLinkedQueue&amp;lt;Description&amp;gt;&lt;span&gt;();　　 &lt;span&gt;&lt;span&gt;//子节点&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; String fDisplayName;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 &lt;span&gt;&lt;span&gt;//显示名称&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Serializable fUniqueId;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　  &lt;span&gt;&lt;span&gt;//唯一标识符&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; Annotation[] fAnnotations;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;span&gt;&lt;span&gt;//注解数组&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt; write-once &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt; Class&amp;lt;?&amp;gt; fTestClass;　　　　　　　　　　　　　　　　　　　　　　　　&lt;span&gt;&lt;span&gt;//待测试类&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　如果fChildren为空，则该Description为叶子结点；如果fChildren非空，则该Description为复合结点。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　&lt;span&gt;Result(org.junit.runner)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　Result类用来封装测试执行结果。每个Result对象都包括如下数据：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; AtomicInteger count;　　　　　　　　　　　　　&lt;span&gt;//测试个数&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; AtomicInteger ignoreCount;　　　　　　　　　 &lt;span&gt;//忽略的测试个数&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; AtomicInteger assumptionFailureCount;　　　&lt;span&gt;//&lt;span&gt;因调用Assume类方法失败的测试个数&lt;/span&gt;&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; CopyOnWriteArrayList&amp;lt;Failure&amp;gt;&lt;span&gt; failures;　　&lt;span&gt;//测试失败个数&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt;&lt;span&gt; AtomicLong runTime;　　　　　　　　　　　　　 &lt;span&gt;//运行时间&lt;/span&gt;
&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; AtomicLong startTime;　　　　　　　　　　　　 &lt;span&gt;//开始时间&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从Result对象中封装的数据可以看出，count，runTime等变量类型为AtomicInteger或AtomicLong，采用的是原子操作，保证变量访问时的线程安全。记录failures使用的是CopyWriteArrayList(写时复制)。&lt;/p&gt;
&lt;p&gt;写时复制本身是多线程环境中对共享对象执行修改操作时的优化方法，多线程执行时如果不修改共享对象则不需要使用此项优化，若某个线程需要修改共享对象，则写时复制功能会首先将该共享对象复制一份，然后在新复制对象的地址空间上进行修改，其他的线程仍旧访问之前旧的共享对象，当新复制对象修改完毕后，再将旧共享对象的指针指向新复制对象，此项优化适用于读多写少的场景，也属于读写分离设计的应用。&lt;/p&gt;
&lt;p&gt;Result类内部提供了一个私有内部类Listener负责实时统计测试执行信息，该内部类继承自RunListener，由@RunListener.ThreadSafe修饰，所以是线程安全的。&lt;/p&gt;
&lt;p&gt;　　 Result类中还封装了一个静态内部类&lt;span class=&quot;pl-en&quot;&gt;SerializedForm&lt;/span&gt;用于扩展序列化，可以根据项目需求将定制的作用域引入到SerializedForm中，从而控制序列化的内容和方式。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-en&quot;&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　F&lt;span&gt;aillure(org.junit.runner.notification)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　Failure类用来封装测试执行失败时的信息，JUnit中本身有Failure和Error的概念，在深入Failure之前需要先理清二者的区别。&lt;/p&gt;
&lt;p&gt;　　　　　　- Failure：一般用在测试结果断言的场景中，表明测试结果与预期结果不一致，也即测试过程中发现了Bug&lt;/p&gt;
&lt;p&gt;　　　　　　- Error：一般是由代码异常引起的，是代码实现自身的错误，说明待测试程序本身不符合提测的标准或健壮性有问题&lt;/p&gt;

&lt;p&gt;我们知道在测试执行结果Result类中有一个变量(&lt;span&gt;private &lt;span&gt;final CopyOnWriteArrayList&amp;lt;Failure&amp;gt; &lt;span&gt;failures;　　&lt;span&gt;//测试失败个数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; )，该变量代表的含义是如果测试过程中出现执行失败的情况，则将该失败信息封装为Failure对象并添加到failures列表中。&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;&lt;strong&gt;流程分析&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;因为RunListener的执行流程仅仅是Runner执行测试主流程的一部分，所以此处列出单个测试类执行的典型处理过程（不包括异常处理），并且把与RunListener直接相关的部分以绿色字体显示，便于理解。单个测试类执行的主要过程如下：&lt;/p&gt;
&lt;p&gt;　　- JUnit用例是通过JUnitCore类来执行的，该类可以通过命令行调用，也可以通过IDE调用&lt;/p&gt;
&lt;p&gt;　　- JUnitCore的入口函数为main()，main()方法中调用runMain()方法，runMain方法执行如下操作&lt;/p&gt;
&lt;p&gt;　　　　　　- &lt;span class=&quot;pl-smi&quot;&gt;JUnitCommandLineParseResult类进行&lt;/span&gt;解析参数，并返回解析结果&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;span&gt;- TextListener类封装监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　- 调用addListener()添加监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　- 根据解析结果创建测试请求Request类对象，具体过程如下&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　- 根据待测试类信息及默认的测试策略computer创建Request对象，具体过程如下&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　- 创建所有可能的RunnerBuilder类对象&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　- 根据computer对象代表的测试策略及所有可能的RunnerBuilder对象创建出相应的BlockJUnit4ClassRunner类对象&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　- 将Runner类对象封装为Request类对象并返回&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　- 根据&lt;span class=&quot;pl-smi&quot;&gt;FilterFactories创建的Filter&lt;/span&gt;过滤规则对返回的Request类对象进行过滤，并返回过滤后的Request&lt;/p&gt;
&lt;p&gt;　　　　　　- 由该Request类对象获取BlockJUnit4ClassRunner类对象，并将其作为run()方法的入参&lt;/p&gt;
&lt;p&gt;　　　　　　- 执行JUnitCore类对象中的run()方法，具体过程如下&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　- 创建Result类对象&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;span&gt;- 创建RunListener监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　- 添加该新创建的监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　&lt;/span&gt;- 启动测试执行&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　- 调用runner.run()运行测试，具体过程如下&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　- 将&lt;span class=&quot;pl-smi&quot;&gt;RunNotifier类对象封装为&lt;span class=&quot;pl-smi&quot;&gt;EachTestNotifier类对象&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　- 由&lt;span class=&quot;pl-smi&quot;&gt;EachTestNotifier&lt;/span&gt;类对象通知测试执行&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　- classBlock()函数将notifier转换为Statement并对其进行一系列封装处理，具体过程如下&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　- 调用childrenInvoker&lt;span class=&quot;pl-smi&quot;&gt;将notifier转换为Statement，具体过程如下&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　- 调用runChildren()处理过滤出的所有FrameworkMethod类对象(如果Runner为Suite的话，此处应为被嵌套的Runner)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用runChild()处理每一个&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;FrameworkMethod&lt;/span&gt;&lt;/span&gt;类对象&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用runLeaf()先执行入参中的调用再执行statement的evaluate()方法，具体如下&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用methodBlock()将method转换为Statement，具体如下&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 生成待测试的Test Class对象&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用methodInvoker()封装为InvokeMethod类对象(statement)并返回&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用possiblyExpectingExceptions()对statement进一步封装&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用withPotentialTimeout&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;()对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用withBefores()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用withAfters&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　- 调用withRules&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　- 调用withBeforeClasses()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　- 调用withAfterClasses&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步&lt;/span&gt;&lt;/span&gt;封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　- 调用withClassRules&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;()&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;对statement&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;进一步封装&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　- 调用statement的evaluate()方法执行测试&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;　　　　　　　　　　　　　　　　　　&lt;span&gt;- 调用invokeExplosively()执行测试，这里是测试方法真正、最终执行的地方&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;　　　　　　　　　　　　　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;span&gt;- 结束测试执行，并将结果保存在新创建的Result类对象中&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　&lt;span&gt;- 移除监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　- 返回Result类对象&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RunListener扩展示例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;本次以简单的Calculate类为例扩展RunListener，在所有测试方法执行前后、每个测试方法执行前后监控测试运行过程信息。扩展RunListener功能的一般步骤如下：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;自定义Listener继承自RunListener&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;自定义Runner中添加该自定义Listener&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;JUnit用例@RunWith中引入自定义Runner.class&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;在扩展RunListener前，先构造待测试类Calculate及相应的JUnit测试类CalculateTest。此处本身就是简略示例，所以代码中涉及到的硬编码信息只是为了看起来更直观易懂，而非处于易维护的考虑。&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;待测试类&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Calculate
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; add(&lt;span&gt;int&lt;/span&gt; a, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; b)
    {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Math.addExact(a, b);
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; subtract(&lt;span&gt;int&lt;/span&gt; a, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; b)
    {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Math.subtractExact(a, b);
    }
    
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; multiple(&lt;span&gt;int&lt;/span&gt; a, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; b)
    {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Math.multiplyExact(a, b);
    }
    &lt;br/&gt;　　&lt;span&gt;/&lt;span&gt;&lt;span&gt;/实际项目中处于健壮性的考虑，Calculate类中的divide()方法实现中应该做相应的异常处理，此处仅仅是为了方便抛出异常，所以直接return a / b.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; divide(&lt;span&gt;int&lt;/span&gt; a, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; b)
    {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; a /&lt;span&gt; b;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_code&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;待测试类的JUnit用例&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CalculateTest 
{

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Calculate cal;
    
    @BeforeClass
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setUpBeforeClass() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        System.out.println(&lt;/span&gt;&quot;类测试开始&quot;&lt;span&gt;);
    }

    @AfterClass
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; tearDownAfterClass() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        System.out.println(&lt;/span&gt;&quot;类测试结束&quot;&lt;span&gt;);
    }

    @Before
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setUp() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        cal &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Calculate();
        System.out.println(&lt;/span&gt;&quot;方法测试开始&quot;&lt;span&gt;);
    }

    @After
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; tearDown() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        System.out.println(&lt;/span&gt;&quot;方法测试结束&quot;&lt;span&gt;);
    }

    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAdd_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;加法运算出错&quot;, 6, cal.add(3, 3&lt;span&gt;));
    }

    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAdd_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.add(1100000000, 1100000000&lt;span&gt;));
    }
    
    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMinus_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;减法运算出错&quot;, 0, cal.subtract(3, 3&lt;span&gt;));
    }

    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMinus_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.subtract(1100000000, -1100000000&lt;span&gt;));
    }
    
    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMultiple_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;乘法运算出错&quot;, 9, cal.multiple(3, 3&lt;span&gt;));
    }
    
    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMultiple_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.multiple(1100000000, 2&lt;span&gt;));
    }


    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testDivide_Poistive() 
    {
        assertEquals(&lt;/span&gt;&quot;除法运算出错&quot;, 3, cal.divide(9, 3&lt;span&gt;));
    }
    
    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testDivide_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查是否存在除0操作&quot;, 2, cal.divide(2, 0&lt;span&gt;));
    }

    @Test(timeout&lt;/span&gt;=500&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testTimeout() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException 
    {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; sum = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=1; i&amp;lt;=100; i++&lt;span&gt;)
        {
            Thread.sleep(&lt;/span&gt;1&lt;span&gt;);
            sum &lt;/span&gt;=&lt;span&gt; cal.add(i, sum);
        }
    }
    
    @Ignore
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMix()
    {
        assertEquals(&lt;/span&gt;&quot;混合运算出错&quot;, 30, cal.divide(cal.add(100, 200), cal.multiple(2, cal.subtract(10, 5&lt;span&gt;))));
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从JUnit中打印的信息可以看到，用例比较多时测试执行过程信息容易混淆，调试起来也很难瞬间定位到出错的测试方法，如果我们能在测试执行过程信息中添加相应的测试类名、测试方法名、测试失败详情等信息，执行过程就比较一目了然了，调试效率也会相应提升。基于以上考虑我们可以扩展自己的Listener加入这些特性，扩展后的Listener类和Runner类如下。&lt;/p&gt;


&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.Description;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.Result;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.notification.Failure;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.notification.RunListener;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;自定义Listener类，此处的JUnit用例为单一测试类，所以与Suite相关的测试事件不需要覆写&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MyListener &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; RunListener
{
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; startTime;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; endTime;
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testRunStarted(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        startTime &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date().getTime();
        System.out.println(&lt;/span&gt;&quot;Test Run Started!&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;The Test Class is &quot; + description.getClassName() + &quot;. Number of Test Case is &quot; +&lt;span&gt; description.testCount());
        System.out.println(&lt;/span&gt;&quot;===================================================================================&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testRunFinished(Result result) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        endTime &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date().getTime();
        System.out.println(&lt;/span&gt;&quot;Test Run Finished!&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Number of Test Case Executed is &quot; +&lt;span&gt; result.getRunCount());
        System.out.println(&lt;/span&gt;&quot;Elipsed Time of this Test Run is &quot; + (endTime - startTime) / 1000&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;===================================================================================&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testStarted(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        System.out.println(&lt;/span&gt;&quot;Test Method Named &quot; + description.getMethodName() + &quot; Started!&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testFinished(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        System.out.println(&lt;/span&gt;&quot;Test Method Named &quot; + description.getMethodName() + &quot; Ended!&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;===================================================================================&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testFailure(Failure failure) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
    
        System.out.println(&lt;/span&gt;&quot;Test Method Named &quot; + failure.getDescription().getMethodName() + &quot; Failed!&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;Failure Cause is : &quot; +&lt;span&gt; failure.getException());
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAssumptionFailure(Failure failure) 
    {
        System.out.println(&lt;/span&gt;&quot;Test Method Named &quot; + failure.getDescription().getMethodName() + &quot; Failed for Assumption!&quot;&lt;span&gt;);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testIgnored(Description description) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;.testIgnored(description);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.internal.AssumptionViolatedException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.internal.runners.model.EachTestNotifier;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.notification.RunNotifier;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.notification.StoppedByUserException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runners.BlockJUnit4ClassRunner;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runners.model.InitializationError;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runners.model.Statement;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;扩展Runner，此处的JUnit为单一用例，所以继承自默认Runner&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MyRunner &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BlockJUnit4ClassRunner
{

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; MyRunner(Class&amp;lt;?&amp;gt; testClass) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InitializationError 
    {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;&lt;span&gt;(testClass);
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run(RunNotifier notifier)
    {&lt;br/&gt;　　　　 &lt;span&gt;//&lt;span&gt;添加自定义Listener&lt;/span&gt;&lt;/span&gt;
        notifier.addListener(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; MyListener());
        EachTestNotifier testNotifier &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; EachTestNotifier(notifier, getDescription());
        
        notifier.fireTestRunStarted(getDescription());
        
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;
        {
            Statement statement &lt;/span&gt;=&lt;span&gt; classBlock(notifier);
            statement.evaluate();
        }
        &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(AssumptionViolatedException av)
        {
            testNotifier.addFailedAssumption(av);
        }
        &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(StoppedByUserException sbue)
        {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt;&lt;span&gt; sbue;
        }
        &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(Throwable e)
        {
            testNotifier.addFailure(e);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 　　由于自定义的MyListener中已经扩展了测试执行时的监控信息，所以原待测试类的JUnit用例修改如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; org.junit.Assert.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.AfterClass;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.BeforeClass;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.FixMethodOrder;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Ignore;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.Test;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runner.RunWith;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.junit.runners.MethodSorters;


&lt;/span&gt;&lt;span&gt;//修改后的&lt;/span&gt;&lt;span&gt;JUnit用例，此处RunWith注解注解用引入自定义Runner&lt;/span&gt;
@RunWith(MyRunner.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CalculateTest 
{

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Calculate cal;
    
    @BeforeClass
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setUpBeforeClass() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        cal &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Calculate();
    }

    @AfterClass
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; tearDownAfterClass() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception 
    {
        cal &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }

    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAdd_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;加法运算出错&quot;, 6, cal.add(3, 3&lt;span&gt;));
    }

    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testAdd_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.add(1100000000, 1100000000&lt;span&gt;));
    }
    
    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMinus_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;减法运算出错&quot;, 0, cal.subtract(3, 3&lt;span&gt;));
    }

    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMinus_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.subtract(1100000000, -1100000000&lt;span&gt;));
    }
    
    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMultiple_Positive() 
    {
        assertEquals(&lt;/span&gt;&quot;乘法运算出错&quot;, 9, cal.multiple(3, 3&lt;span&gt;));
    }
    
    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMultiple_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查运算结果是否溢出及测试平台支持的基本数据类型取值范围&quot;, 220000000, cal.multiple(1100000000, 2&lt;span&gt;));
    }


    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testDivide_Poisitive() 
    {
        assertEquals(&lt;/span&gt;&quot;除法运算出错&quot;, 3, cal.divide(9, 3&lt;span&gt;));
    }
    
    @Test(expected&lt;/span&gt;=ArithmeticException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testDivide_Negetive() 
    {
        assertEquals(&lt;/span&gt;&quot;请检查是否存在除0操作&quot;, 2, cal.divide(2, 0&lt;span&gt;));
    }

    @Test(timeout&lt;/span&gt;=200&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; testTimeout() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; InterruptedException 
    {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; sum = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=1; i&amp;lt;=100; i++&lt;span&gt;)
        {
            Thread.sleep(&lt;/span&gt;1&lt;span&gt;);
            sum &lt;/span&gt;=&lt;span&gt; cal.add(i, sum);
        }
    }
    
    @Ignore
    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; testMix()
    {
        assertEquals(&lt;/span&gt;&quot;混合运算出错&quot;, 30, cal.divide(cal.add(100, 200), cal.multiple(2, cal.subtract(10, 5&lt;span&gt;))));
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 　　以上JUnit用例执行输出如下：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
Test Run Started!&lt;span&gt;
The Test Class is com.junit.test.CalculateTest. Number of Test Case is &lt;/span&gt;10
===================================================================================&lt;span&gt;
Test Method Named testAdd_Negetive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testAdd_Negetive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testAdd_Positive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testAdd_Positive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testDivide_Negetive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testDivide_Negetive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testDivide_Positive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testDivide_Positive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testMinus_Negetive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testMinus_Negetive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testMinus_Positive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testMinus_Positive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testMultiple_Negetive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testMultiple_Negetive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testMultiple_Positive Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testMultiple_Positive Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Method Named testTimeout Started&lt;/span&gt;!&lt;span&gt;
Test Method Named testTimeout Failed&lt;/span&gt;!&lt;span&gt;
Failure Cause is : org.junit.runners.model.TestTimedOutException: test timed out after &lt;/span&gt;200&lt;span&gt; milliseconds
Test Method Named testTimeout Ended&lt;/span&gt;!
===================================================================================&lt;span&gt;
Test Run Finished&lt;/span&gt;!&lt;span&gt;
Number of Test Case Executed is &lt;/span&gt;9&lt;span&gt;
Elipsed Time of &lt;/span&gt;&lt;span&gt;this&lt;/span&gt; Test Run is 0
===================================================================================
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;span&gt;RunListener总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;事实上自定义监控器的做法在JUnit或TestNG中都比较常用，TestNG本身也是参考JUnit实现的，而且比JUnit具有更多的实用特性。此处以JUnit为例进行源码解析及扩展，是考虑到JUnit框架代码量相对较少好下手，同时其设计也比较灵活，有不少精炼的实现可供参考。实际项目中可根据开发和测试平台的实际需求决定采用JUnit还是TestNG做扩展，此处仅用作源码分析及模式总结。&lt;/p&gt;

</description>
<pubDate>Thu, 11 Oct 2018 13:06:00 +0000</pubDate>
<dc:creator>coolstream</dc:creator>
<og:description>RunListener简述 JUnit4中的RunListener类用来监听测试执行的各个阶段，由RunNotifier通知测试去运行。RunListener与RunNotifier之间的协作应用的是</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/coolstream/p/9756336.html</dc:identifier>
</item>
<item>
<title>Postgres中的SpinLock锁 - 非我在</title>
<link>http://www.cnblogs.com/flying-tiger/p/9762886.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/flying-tiger/p/9762886.html</guid>
<description>&lt;p&gt;我们知道，在数据库中为了并发控制，少不了要使用各种各样的锁(lock)。PostgreSQL中也不例外。&lt;/p&gt;
&lt;p&gt;在PostgreSQL中有三种级别的锁，他们的关系如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  |上层  RegularLock
  |
  |      LWLock
  |
  |底层  SpinLock&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;那么按照顺序，我们先来讨论下PostgreSQL的最底层的SpinLock。&lt;/p&gt;
&lt;p&gt;作为PostgreSQL的最底层的锁，SpinLock比较简单，它的特点是封锁时间很短，没有等待队列和死锁检测机制，在事务结束时不能自动释放。因此，SpinLock一般不单独使用，而是作为其他锁(LWLock)的底层实现。&lt;/p&gt;
&lt;p&gt;作为最底层锁，它的实现是和操作系统和硬件环境相关的。为此，PostgreSQL实现了两个SpinLock：&lt;/p&gt;
&lt;p&gt;很显然，依赖机器实现的SpinLock一定比不依赖机器实现的SpinLock要快。因此，如果PostgreSQL运行的机器上如果支持TAS指令集，那么自然会采用第一种实现，否则只能使用第二种实现了。&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;机器相关的实现&quot;&gt;机器相关的实现&lt;/h3&gt;
&lt;p&gt;我们，知道与机器相关的实现利用了TAS指令集。那么什么是TAS呢？&lt;/p&gt;
&lt;p&gt;TAS是 Test and Set的缩写。是一个原子操作。它修改内存的值，并返回原来的值。当一个进程P1对一个内存位置做TAS操作，不允许其它进程P2对此内存位置再做TAS操作。P2必须等P1操作完成后，再做TAS操作。因此，该操作被用来实现进程互斥。&lt;/p&gt;
&lt;p&gt;有了这个概念，我们来看源代码。&lt;/p&gt;
&lt;p&gt;代码在：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;src/include/storage/s_lock.h
src/backend/storage/lmgr/s_lock.c&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;虽然说了对于SpinLock有两个底层实现，但是在上层调用时，我们是使用统一的接口的，接口在src/backend/storage/lmgr/s_lock.c中：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/*
 * s_lock(lock) - platform-independent portion of waiting for a spinlock.
 */
int
s_lock(volatile slock_t *lock, const char *file, int line)
{
    ...
   
    while (TAS_SPIN(lock))   //调用点
    {
    
    ... 

}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以发现这个TAS_SPIN(lock)是一个宏，&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#define TAS_SPIN(lock)  TAS(lock)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当使用基于TAS指令集的锁时，有：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#define TAS(lock) tas(lock)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;对机器的TAS的使用在函数tas()中。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;static __inline__ int
tas(volatile slock_t *lock)
{
    register slock_t _res = 1;

    /*
     * Use a non-locking test before asserting the bus lock.  Note that the
     * extra test appears to be a small loss on some x86 platforms and a small
     * win on others; it's by no means clear that we should keep it.
     *
     * When this was last tested, we didn't have separate TAS() and TAS_SPIN()
     * macros.  Nowadays it probably would be better to do a non-locking test
     * in TAS_SPIN() but not in TAS(), like on x86_64, but no-one's done the
     * testing to verify that.  Without some empirical evidence, better to
     * leave it alone.
     */
    __asm__ __volatile__(
        &quot;   cmpb    $0,%1   \n&quot;
        &quot;   jne     1f      \n&quot;
        &quot;   lock            \n&quot;
        &quot;   xchgb   %0,%1   \n&quot;
        &quot;1: \n&quot;
:       &quot;+q&quot;(_res), &quot;+m&quot;(*lock)
:       /* no inputs */
:       &quot;memory&quot;, &quot;cc&quot;);
    return (int) _res;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到这段在C语言中的内嵌汇编代码即是调用了机器的TAS指令。假设lock原来的值为“0”，当P1去做申请lock时，能获取得到锁。而此时P2再去申请锁时，必须spin，因为此时lock的值已经被P1修改为“1”了。&lt;/p&gt;
&lt;p&gt;用TAS来实现spin lock,此处要注意volatile的使用。volatile表示这个变量是易失的，所以会编译器会每次都去内存中取原始值，而不是直接拿寄存器中的值。&lt;/p&gt;
&lt;p&gt;这避免了在多线程编程中，由于多个线程更新同一个变更，内存中和寄存器中值的不同步而导致变量的值错乱的问题。另外，也会影响编译器的优化行为。&lt;/p&gt;
&lt;p&gt;具体汇编代码的解析，可以查看相关资料。&lt;/p&gt;
&lt;p&gt;在使用时，PostgreSQL不直接调用tas()函数，而是通过：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int s_lock(volatile slock_t *lock, const char *file, int line, const char *func);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;来申请spin lock。返回值是等待的时间。&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;机器无关的实现&quot;&gt;机器无关的实现&lt;/h3&gt;
&lt;p&gt;如果机器上没有TAS指令集，那么PostgreSQL利用PGSemaphores来实现SpinLock。&lt;/p&gt;
&lt;p&gt;PGSemaphore是使用OS底层的semaphore来实现的，PG对其做了封装，提供了PG系统内部统一的semaphore操作接口。PG的用PGSemaphore结构体表示PG自身的semaphore信号，并将相关操作封装在sembuf中，传递给底层OS。&lt;/p&gt;
&lt;p&gt;实现代码在：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;src/backend/storage/lmgr/spin.c&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们知道这个TAS_SPIN(lock)是SpinLock的抽象定义：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#define TAS_SPIN(lock)  TAS(lock)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在不使用TAS的场合，有：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#define TAS(lock)   tas_sema(lock)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;即调用tas_sema(lock)函数实现SpinLock：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int
tas_sema(volatile slock_t *lock)
{
    /* Note that TAS macros return 0 if *success* */
    return !PGSemaphoreTryLock(&amp;amp;SpinlockSemaArray[*lock]);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;而PGSemaphoreTryLock的定义为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;bool
PGSemaphoreTryLock(PGSemaphore sema)
{
    int         errStatus;
    struct sembuf sops;    //重要！！！

    sops.sem_op = -1;           /* decrement */
    sops.sem_flg = IPC_NOWAIT;  /* but don't block */
    sops.sem_num = sema-&amp;gt;semNum;

    /*
     * Note: if errStatus is -1 and errno == EINTR then it means we returned
     * from the operation prematurely because we were sent a signal.  So we
     * try and lock the semaphore again.
     */
    do
    {
        errStatus = semop(sema-&amp;gt;semId, &amp;amp;sops, 1);
    } while (errStatus &amp;lt; 0 &amp;amp;&amp;amp; errno == EINTR);
    
    ...
    &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;即调用了PGSemaphores来实现SpinLock。&lt;/p&gt;
&lt;p&gt;而PGSemaphores的定义为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;typedef struct PGSemaphoreData
{
    int         semId;          /* semaphore set identifier */
    int         semNum;         /* semaphore number within set */
} PGSemaphoreData;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在OS下，我们有：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;struct sembuf
{
unsigned short int sem_num; /* semaphore number */
short int sem_op; /* semaphore operation */
short int sem_flg; /* operation flag */
};&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;PGSemaphoreTryLock中的while循环里就是执行了semop操作。&lt;br/&gt;而这些操作是OS自带的操作(在&amp;lt;sys/sem.h&amp;gt;头文件中)：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;extern int semop(int __semid, struct sembuf *opsptr, size_t nops);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;很明显，PostgreSQL封装了OS底层的semaphore，然后利用OS底层的系统函数来操作。&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;共通的操作&quot;&gt;共通的操作&lt;/h3&gt;
&lt;p&gt;SpinLock是分两种情况来分别实现的。这是它们的不同，在Spinlock之上有一些共通的操作要说明下。对于SpinLock的获取，并不是每次都成功，当尝试获取时发现一个对象已经被lock时，当前线程不会阻塞在改锁上，而是先spin(自旋)一定的次数之后再sleep一定的时间后尝试再次获取。对于每次spin之后的sleep时间，PostgreSQL使用了自适应算法，来决定spin的次数和每次spin后，sleep的时间。&lt;/p&gt;
&lt;p&gt;下面函数要注意下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;spins_per_delay()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;该函数计算spin多少次后，开始sleep。默认为100，最大值为1000，最小值为10。&lt;/p&gt;
&lt;p&gt;spins_per_delay的值基本上不变；但是cur_delay的值为当前值1倍和2倍之间变动。因此，spin delay次数越多，sleep时间会越长。&lt;/p&gt;
&lt;p&gt;还有一个变量：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cur_delay&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当前sleep的时间，最大值为1000，最小值为1。单位为ms。&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;
&lt;p&gt;本文讨论了关于PostgreSQL的SpinLock实现以及相关函数。SpinLock是PostgreSQL的最底层的锁，它的主要作用是为上层的锁提供支持。本文SpinLock就聊到这里，下次我们来聊PostGreSQL的LWLock和RegularLock。&lt;/p&gt;
&lt;p&gt;注：本文还参考了&lt;a href=&quot;http://blog.itpub.net/30088583/viewspace-1512121/&quot;&gt;这篇文章&lt;/a&gt;,在此表示感谢。&lt;/p&gt;
</description>
<pubDate>Thu, 11 Oct 2018 12:44:00 +0000</pubDate>
<dc:creator>非我在</dc:creator>
<og:description>我们知道，在数据库中为了并发控制，少不了要使用各种各样的锁(lock)。PostgreSQL中也不例外。 在PostgreSQL中有三种级别的锁，他们的关系如下： 那么按照顺序，我们先来讨论下Post</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/flying-tiger/p/9762886.html</dc:identifier>
</item>
<item>
<title>Netty实现高性能的HTTP服务器 - 三升水</title>
<link>http://www.cnblogs.com/sanshengshui/p/9774746.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sanshengshui/p/9774746.html</guid>
<description>&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded md-expand&quot; data-src=&quot;/home/james/%E4%B8%8B%E8%BD%BD/500534175.jpg&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181011194202298-1248929281.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;要通过netty实现HTTP服务器(或者客户端)，首先你要了解HTTP协议。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;HTTP在客户端 - 服务器计算模型中用作&lt;span&gt;&lt;strong&gt;请求 - 响应&lt;/strong&gt;&lt;span&gt;协议。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;例如，web浏览器可以是客户端，并且在托管网站的计算机上运行的应用程序可以是服务器。 客户端向服务器提交HTTP请求消息。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;服务器提供诸如HTML文件和其他内容之类的资源，或代表客户端执行其他功能，向客户端返回响应消息。 响应包含有关请求的完成状态信息，并且还可以在其消息正文中包含所请求的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;什么是HTTP方法?&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;有写过网页表单的人一定对GET与POST不陌生，但你了解什么是&lt;span&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;span&gt;与&lt;span&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;span&gt;吗!?现今的网页设计工具相当的发达，甚至不需要接触HTML语法就能完成一个规模不小的网站，渐渐地很多人都忘记了HTTP底层的实作原理，造成在发生错误的情况下无法正确进行侦错。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;早期在撰写HTML 表单语法时，都会写到以下的写法，然而大部分的软件工程师都会采用POST 进行表单传送。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 &amp;lt;form action=&quot;&quot; method=&quot;POST/GET&quot;&amp;gt;
  &amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;然而在我们的网页程序中要获取表单的变数只需要调用系统已经封装好的方法即可，像是PHP使用$_REQUEST、JAVA使用getParameter()、ASP使用Request.Form()这些方法等等。 &lt;span class=&quot;md-softbreak&quot;&gt;&lt;span&gt;由上述的方法看来，似乎用POST或GET好像不是很重要。许多Web工程师对于表单method用法的记忆为&quot;POST可以传送比较多的资料&quot;、&quot;表单传送档案的时候要使用POST&quot;、&quot;POST比GET安全&quot;等等奇怪的概念。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;其实使用POST 或GET 其实是有差别的，我们先说明一下HTTP Method，在HTTP 1.1 的版本中定义了八种Method (方法)，如下所示：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot;&gt;&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;OPTIONS&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;GET&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;HEAD&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;POST&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;PUT&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;DELETE&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;TRACE&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;CONNECT&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;天阿！这些方法看起来真是陌生。而我们使用的表单只用了其中两个方法(GET/POST)，其他的方法确实很少用到，但是在RESTful 的设计架构中就会使用到更多的Method 来简化设计。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;GET与POST方法&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;先举个例子，如果HTTP 代表现在我们现实生活中寄信的机制。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-emoji&quot; data-content=&quot;speaker&quot;&gt;🔈&lt;span&gt;那么信封的撰写格式就是HTTP。我们姑且将信封外的内容称为http-header，信封内的书信称为message-body，那么HTTP Method 就是你要告诉邮差的寄信规则。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;假设GET 表示信封内不得装信件的寄送方式，如同是明信片一样，你可以把要传递的资讯写在信封(http-header)上，写满为止，价格比较便宜。然而POST 就是信封内有装信件的寄送方式（信封有内容物），不但信封可以写东西，信封内(message-body) 还可以置入你想要寄送的资料或档案，价格较贵。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;使用GET 的时候我们直接将要传送的资料以Query String（一种Key/Vaule的编码方式）加在我们要寄送的地址(URL)后面，然后交给邮差传送。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;使用POST 的时候则是将寄送地址(URL)写在信封上，另外将要传送的资料写在另一张信纸后，将信纸放到信封里面，交给邮差传送。&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;GET方法&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;接着我来介绍一下实际的运作情况：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;我们先来看看GET 怎么传送资料的，当我们送出一个GET 表单时，如下范例：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
  &amp;lt;form method=&quot;get&quot; action=&quot;&quot;&amp;gt;
  &amp;lt;input type=&quot;text&quot; name=&quot;id&quot; /&amp;gt;
  &amp;lt;input type=&quot;submit&quot; /&amp;gt;
  &amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;当表单Submit 之后浏览器的网址就变成&quot;&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;http://xxx.toright.com/?id=010101&quot;&gt;http://xxx.toright.com/?id=010101&lt;/a&gt;&lt;span&gt;&quot;，浏览器会自动将表单内容转为Query String 加在URL 进行连线。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;这时后来看一下HTTP Request 封包的内容：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
GET /?id=010101 HTTP/1.1&lt;span&gt;
  Host: xxx.toright.com
  User&lt;/span&gt;-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 GTB7.1 ( .NET CLR 3.5.30729&lt;span&gt;)
  Accept: text&lt;/span&gt;/html,application/xhtml+xml,application/xml;q=0.9,*&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;;q=0.8
  Accept-Language: zh-tw,en-us;q=0.7,en;q=0.3
  Accept-Encoding: gzip,deflate
  Accept-Charset: UTF-8,*
  Keep-Alive: 115
  Connection: keep-alive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;在HTTP GET Method 中是不允许在message-body 中传递资料的，因为是GET 嘛，就是要取资料的意思。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;从浏览器的网址列就可以看见我们表单要传送的资料，若是要传送密码岂不是&quot;一览无遗&quot;.......这就是大家常提到安全性问题。&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;POST方法&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;再来看看POST 传送资料&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 &amp;lt;form method=&quot;post&quot; action=&quot;&quot;&amp;gt;
  &amp;lt;input type=&quot;text&quot; name=&quot;id&quot; /&amp;gt;
  &amp;lt;input type=&quot;submit&quot; /&amp;gt;
  &amp;lt;/form&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;网址列没有变化，那我们来看一下HTTP Request 封包的内容：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
 POST / HTTP/1.1&lt;span&gt;
  Host: xxx.toright.com
  User&lt;/span&gt;-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 GTB7.1 ( .NET CLR 3.5.30729&lt;span&gt;)
  Accept: text&lt;/span&gt;/html,application/xhtml+xml,application/xml;q=0.9,*&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;;q=0.8
  Accept-Language: zh-tw,en-us;q=0.7,en;q=0.3
  Accept-Encoding: gzip,deflate
  Accept-Charset: UTF-8,*
  Keep-Alive: 115
  Connection: keep-alive
   
  Content-Type: application/x-www-form-urlencoded
  &amp;lt;/code&amp;gt;&amp;lt;code&amp;gt;Content-Length: 9
  id=020202&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;看出个所以然了吗？原来POST 是将表单资料放在message-body 进行传送，在不偷看封包的情况下似乎安全一些些.......&lt;span class=&quot;md-emoji&quot; data-content=&quot;yellow_heart&quot;&gt;💛 &lt;span&gt;。此外在传送档案的时候会使用到multi-part 编码，将档案与其他的表单栏位一并放在message-body 中进行传送。这就是GET 与POST 发送表单的差异啰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;要通过 Netty 处理 HTTP 请求，需要先进行编解码。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;NettyHTTP编解码器&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;   &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HttpHelloWorldServerInitializer &lt;span&gt;extends&lt;/span&gt; ChannelInitializer&amp;lt;SocketChannel&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;      @Override
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;       &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; initChannel(SocketChannel ch) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;           ChannelPipeline p =&lt;span&gt; ch.pipeline();
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;           &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;           * 或者使用HttpRequestDecoder &amp;amp; HttpResponseEncoder
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;            &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;           p.addLast(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpServerCodec());
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;           &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;           * 在处理POST消息体时需要加上
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;            &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;           p.addLast(&lt;span&gt;new&lt;/span&gt; HttpObjectAggregator(1024*1024&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;           p.addLast(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpServerExpectContinueHandler());
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;           p.addLast(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HttpHelloWorldServerHandler());
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;      }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;   }
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_019.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_019.png&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181011194909179-1100506661.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_019.png&quot;&gt;&lt;span&gt;但是，对于 HTTP POST 请求，参数信息是放在 message body 中的（对应于 netty 来说就是 HttpMessage），所以以上编解码器并不能完全解析 HTTP POST请求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;这种情况该怎么办呢？别慌，netty 提供了一个 handler 来处理。&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;ul-list&quot; data-mark=&quot;-&quot; readability=&quot;3.5&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;第 12 行：调用&lt;span&gt;&lt;strong&gt;#new HttpObjectAggregator(1024*1024)&lt;/strong&gt;&lt;span&gt;方法,即通过它可以把 HttpMessage 和 HttpContent 聚合成一个 FullHttpRequest 或者 FullHttpResponse （取决于是处理请求还是响应），而且它还可以帮助你在解码时忽略是否为“块”传输方式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;因此，在解析 HTTP POST 请求时，请务必在 ChannelPipeline 中加上 HttpObjectAggregator。（具体细节请自行查阅代码）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;2&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;第13行: 这个方法的作用是: http 100-continue用于客户端在发送POST数据给服务器前，征询服务器情况，看服务器是否处理POST的数据，如果不处理，客户端则不上传POST数据，如果处理，则POST上传数据。在现实应用中，通过在POST大数据时，才会使用100-continue协议&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;我们把 Java 对象根据HTTP协议封装成二进制数据包的过程成为编码，而把从二进制数据包中解析出 Java 对象的过程成为解码，在学习如何使用 Netty 进行HTTP协议的编解码之前，我们先来定义一下客户端与服务端通信的 Java 对象。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;Java 对象&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;我们如下定义通信过程中的 Java 对象&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  @Data
  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
      &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String userName;
  ​
      &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String method;
  ​
      &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date date;
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ol class=&quot;ol-list&quot; start=&quot;&quot; readability=&quot;0&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;以上是通信过程中 Java 对象的抽象类，可以看到，我们定义了一个用户名（默认值为 sanshengshui ）以及一个http请求的方法和当前时间日期。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;@Data&lt;/strong&gt; &lt;span&gt;注解由 &lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://www.projectlombok.org/&quot;&gt;&lt;span&gt;lombok&lt;/span&gt;&lt;/a&gt; &lt;span&gt;提供，它会自动帮我们生产 getter/setter 方法，减少大量重复代码，推荐使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;Java 对象定义完成之后，接下来我们就需要定义一种规则，如何把一个 Java 对象转换成二进制数据，这个规则叫做 Java 对象的序列化。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;序列化&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;我们如下定义序列化接口&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
   * 序列化接口类
   &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Serializer {
      &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
       * java 对象转换成二进制
       &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
      &lt;span&gt;byte&lt;/span&gt;&lt;span&gt;[] serialize(Object object);
  ​
      &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
       * 二进制转换成 java 对象
       &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
      &amp;lt;T&amp;gt; T deserialize(Class&amp;lt;T&amp;gt; clazz, &lt;span&gt;byte&lt;/span&gt;&lt;span&gt;[] bytes);
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;序列化接口有二个方法，serialize() 将 Java 对象转换成字节数组，deserialize() 将字节数组转换成某种类型的 Java 对象，在工程中，我们使用最简单的 json 序列化方式，使用阿里巴巴的 &lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://github.com/alibaba/fastjson&quot;&gt;&lt;span&gt;fastjson&lt;/span&gt;&lt;/a&gt; &lt;span&gt;作为序列化框架。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; JSONSerializer &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Serializer {
      @Override
      &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;byte&lt;/span&gt;&lt;span&gt;[] serialize(Object object) {
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; JSON.toJSONBytes(object);
      }
  ​
      @Override
      &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &amp;lt;T&amp;gt; T deserialize(Class&amp;lt;T&amp;gt; clazz, &lt;span&gt;byte&lt;/span&gt;&lt;span&gt;[] bytes) {
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; JSON.parseObject(bytes,clazz);
      }
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;编码&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
  User user = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; User();
          user.setUserName(&lt;/span&gt;&quot;sanshengshui&quot;&lt;span&gt;);
          user.setDate(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date());
          user.setMethod(&lt;/span&gt;&quot;get&quot;&lt;span&gt;);
          JSONSerializer jsonSerializer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONSerializer();
          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将Java对象序列化成为二级制数据包&lt;/span&gt;
          &lt;span&gt;byte&lt;/span&gt;[] content =&lt;span&gt; jsonSerializer.serialize(user);
          FullHttpResponse response &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DefaultFullHttpResponse(HTTP_1_1, OK, Unpooled.wrappedBuffer(content));
          response.headers().set(CONTENT_TYPE, &lt;/span&gt;&quot;text/plain&quot;&lt;span&gt;);
          response.headers().setInt(CONTENT_LENGTH, response.content().readableBytes());
  ​
          &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt; keepAlive =&lt;span&gt; HttpUtil.isKeepAlive(request);
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;keepAlive) {
              ctx.write(response).addListener(ChannelFutureListener.CLOSE);
             } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
              response.headers().set(CONNECTION, KEEP_ALIVE);
              ctx.write(response);
             }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;上面提到过，HTTP GET 请求的参数是包含在 uri 中的，可通过以下方式解析出 uri：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
  HttpRequest request =&lt;span&gt; (HttpRequest) msg;
  String uri &lt;/span&gt;= request.uri();
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;特别注意的是，用浏览器发起 HTTP 请求时，常常会被 uri = &quot;/favicon.ico&quot; 所干扰，因此最好对其特殊处理：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(uri.equals(FAVICON_ICO)){
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;接下来就是解析 uri 了。这里需要用到 &lt;span&gt;&lt;strong&gt;QueryStringDecoder&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
  Splits an HTTP query string into a path string and key-&lt;span&gt;value parameter pairs.
  This decoder is &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; one time use only.  Create a &lt;span&gt;new&lt;/span&gt; instance &lt;span&gt;for&lt;/span&gt;&lt;span&gt; each URI:
   
  QueryStringDecoder decoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; QueryStringDecoder(&quot;/hello?recipient=world&amp;amp;x=1;y=2&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; decoder.getPath().equals(&quot;/hello&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; decoder.getParameters().get(&quot;recipient&quot;).get(0).equals(&quot;world&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; decoder.getParameters().get(&quot;x&quot;).get(0).equals(&quot;1&quot;&lt;span&gt;);
  &lt;/span&gt;&lt;span&gt;assert&lt;/span&gt; decoder.getParameters().get(&quot;y&quot;).get(0).equals(&quot;2&quot;&lt;span&gt;);
   
  This decoder can also decode the content of an HTTP POST request whose
  content type is application&lt;/span&gt;/x-www-form-&lt;span&gt;urlencoded:
   
  QueryStringDecoder decoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; QueryStringDecoder(&quot;recipient=world&amp;amp;x=1;y=2&quot;, &lt;span&gt;false&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;从上面的描述可以看出，QueryStringDecoder 的作用就是把 HTTP uri 分割成 path 和 key-value 参数对，也可以用来解码 Content-Type = &quot;application/x-www-form-urlencoded&quot; 的 HTTP POST。特别注意的是，该 decoder 仅能使用一次。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;解析代码如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
  String uri =&lt;span&gt; request.uri();
  HttpMethod method &lt;/span&gt;=&lt;span&gt; request.method();
  &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(method.equals(HttpMethod.GET)){
  　　QueryStringDecoder queryDecoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; QueryStringDecoder(uri, Charsets.toCharset(CharEncoding.UTF_8));
  　　Map&lt;/span&gt;&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; uriAttributes =&lt;span&gt; queryDecoder.parameters();
  　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;此处仅打印请求参数（你可以根据业务需求自定义处理）&lt;/span&gt;
  　　&lt;span&gt;for&lt;/span&gt; (Map.Entry&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&lt;span&gt; attr : uriAttributes.entrySet()) {
  　　　　&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (String attrVal : attr.getValue()) {
  　　　　　　System.out.println(attr.getKey() &lt;/span&gt;+ &quot;=&quot; +&lt;span&gt; attrVal);
  　　　　}
  　　}
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;如之前所说的那样，解析 HTTP POST 请求的 message body，一定要使用 HttpObjectAggregator。但是，是否一定要把 msg 转换成 FullHttpRequest 呢？答案是否定的，且往下看。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;首先解释下 FullHttpRequest 是什么：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
  Combinate the HttpRequest and FullHttpMessage, so the request is a complete HTTP request.
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;即 FullHttpRequest 包含了 HttpRequest 和 FullHttpMessage，是一个 HTTP 请求的完全体。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;而把 msg 转换成 FullHttpRequest 的方法很简单：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
  FullHttpRequest fullRequest = (FullHttpRequest) msg;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;接下来就是分几种 Content-Type 进行解析了。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; dealWithContentType() &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
          String contentType &lt;/span&gt;=&lt;span&gt; getContentType();
          &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可以使用HttpJsonDecoder&lt;/span&gt;
          &lt;span&gt;if&lt;/span&gt;(contentType.equals(&quot;application/json&quot;&lt;span&gt;)){
              String jsonStr &lt;/span&gt;=&lt;span&gt; fullRequest.content().toString(Charsets.toCharset(CharEncoding.UTF_8));
              JSONObject obj &lt;/span&gt;=&lt;span&gt; JSON.parseObject(jsonStr);
              &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(Map.Entry&amp;lt;String, Object&amp;gt;&lt;span&gt; item : obj.entrySet()){
                  logger.info(item.getKey()&lt;/span&gt;+&quot;=&quot;+&lt;span&gt;item.getValue().toString());
              }
  ​
          }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(contentType.equals(&quot;application/x-www-form-urlencoded&quot;&lt;span&gt;)){
              &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;方式一：使用 QueryStringDecoder&lt;/span&gt;
              String jsonStr =&lt;span&gt; fullRequest.content().toString(Charsets.toCharset(CharEncoding.UTF_8));
              QueryStringDecoder queryDecoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; QueryStringDecoder(jsonStr, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
              Map&lt;/span&gt;&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; uriAttributes =&lt;span&gt; queryDecoder.parameters();
              &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Map.Entry&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&lt;span&gt; attr : uriAttributes.entrySet()) {
                  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (String attrVal : attr.getValue()) {
                      logger.info(attr.getKey() &lt;/span&gt;+ &quot;=&quot; +&lt;span&gt; attrVal);
                  }
              }
  ​
          }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(contentType.equals(&quot;multipart/form-data&quot;&lt;span&gt;)){
              &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;TODO 用于文件上传&lt;/span&gt;
          }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
              &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;do nothing...&lt;/span&gt;
&lt;span&gt;          }
      }
      &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String getContentType(){
          String typeStr &lt;/span&gt;= headers.get(&quot;Content-Type&quot;&lt;span&gt;).toString();
          String[] list &lt;/span&gt;= typeStr.split(&quot;;&quot;&lt;span&gt;);
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; list[0&lt;span&gt;];
      }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;我是利用&lt;span class=&quot; md-link&quot;&gt;&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;&lt;span&gt;Postman&lt;/span&gt;&lt;/a&gt;&lt;span&gt;对netty实现的http服务器进行请求,大家如果觉的可以的话，可以自行下载。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;Get 请求&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;Postman:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181011195153970-119942795.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_020.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;Server:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;打印请求url&lt;/span&gt;
  16:58:59.159 [nioEventLoopGroup-3-1] INFO com.sanshengshui.netty.HttpHelloWorldServerHandler - http uri: 
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;h2 class=&quot;md-end-block md-heading&quot;&gt;&lt;span&gt;Post 请求&lt;/span&gt;&lt;/h2&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;Postman:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181011200802530-432739842.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_021.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;&lt;strong&gt;Server:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16
  16:58:59.130 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
  16:58:59.159 [nioEventLoopGroup-3-1] INFO com.sanshengshui.netty.HttpHelloWorldServerHandler - http uri: /
  17:03:59.813 [nioEventLoopGroup-2-1] INFO io.netty.handler.logging.LoggingHandler - [id: 0x0f3f5fdd, L:/0:0:0:0:0:0:0:0:8888] READ: [id: 0xfd00cb1b, L:/0:0:0:0:0:0:0:1:8888 - R:/0:0:0:0:0:0:0:1:45768&lt;span&gt;]
  &lt;/span&gt;17:03:59.813 [nioEventLoopGroup-2-1] INFO io.netty.handler.logging.LoggingHandler - [id: 0x0f3f5fdd, L:/0:0:0:0:0:0:0:0:8888&lt;span&gt;] READ COMPLETE
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;打印post请求的url&lt;/span&gt;
  17:03:59.817 [nioEventLoopGroup-3-2] INFO com.sanshengshui.netty.HttpHelloWorldServerHandler - http uri: /ttt
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;如果对Gatling测试工具不太熟悉的话，可以看一下我之前写的文章:&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;ol-list&quot; start=&quot;&quot; readability=&quot;-0.014084507042254&quot;&gt;&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui/p/9747069.html&quot;&gt;&lt;span&gt;负载，性能测试工具-Gatling&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;md-list-item&quot; readability=&quot;0&quot;&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui/p/9750478.html&quot;&gt;&lt;span&gt;Gatling简单测试SpringBoot工程&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;性能测试报告大体如下:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; ​
  &lt;/span&gt;================================================================================
  ---- Global Information --------------------------------------------------------
  &amp;gt; request count                                    1178179 (OK=1178179 KO=0&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; min response time                                      0 (OK=0      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; max response time                                  12547 (OK=12547  KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; mean response time                                     1 (OK=1      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; std deviation                                         32 (OK=32     KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; response time 50th percentile                          0 (OK=0      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; response time 75th percentile                          1 (OK=1      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; response time 95th percentile                          2 (OK=2      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; response time 99th percentile                          5 (OK=5      KO=-&lt;span&gt;     )
  &lt;/span&gt;&amp;gt; mean requests/sec                                10808.982 (OK=10808.982 KO=-&lt;span&gt;     )
  &lt;/span&gt;---- Response Time Distribution ------------------------------------------------
  &amp;gt; t &amp;lt; 800 ms                                       1178139 (100%&lt;span&gt;)
  &lt;/span&gt;&amp;gt; 800 ms &amp;lt; t &amp;lt; 1200 ms                                   0 (  0%&lt;span&gt;)
  &lt;/span&gt;&amp;gt; t &amp;gt; 1200 ms                                           40 (  0%&lt;span&gt;)
  &lt;/span&gt;&amp;gt; failed                                                 0 (  0%&lt;span&gt;)
  &lt;/span&gt;================================================================================
&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1497594/201810/1497594-20181011200825748-1412470122.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt; &lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span class=&quot;md-image md-img-loaded&quot; data-src=&quot;/home/james/%E5%9B%BE%E7%89%87/%E9%80%89%E5%8C%BA_022.png&quot;&gt;&lt;img alt=&quot;&quot; data-local-refresh=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;关于Netty实现高性能的HTTP服务器详解到这里就结束了。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;Netty实现高性能的HTTP服务器 项目工程地址: &lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui/netty-learning-example/tree/master/netty-http&quot;&gt;https://github.com/sanshengshui/netty-learning-example/tree/master/netty-http&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;原创不易，如果感觉不错，希望给个推荐！您的支持是我写作的最大动力！&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;版权声明:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;作者：穆书伟&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;博客园出处：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://www.cnblogs.com/sanshengshui&quot;&gt;https://www.cnblogs.com/sanshengshui&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;github出处：&lt;span class=&quot;md-link&quot;&gt;&lt;a href=&quot;https://github.com/sanshengshui&quot;&gt;https://github.com/sanshengshui&lt;/a&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;md-end-block&quot;&gt;&lt;span&gt;个人博客出处：&lt;span class=&quot;md-link md-expand&quot;&gt;&lt;a href=&quot;https://sanshengshui.github.io/&quot;&gt;https://sanshengshui.github.io/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 11 Oct 2018 12:10:00 +0000</pubDate>
<dc:creator>三升水</dc:creator>
<og:description>浅谈HTTP Method 要通过netty实现HTTP服务器(或者客户端)，首先你要了解HTTP协议。 HTTP在客户端 - 服务器计算模型中用作请求 - 响应协议。 例如，web浏览器可以是客户端</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sanshengshui/p/9774746.html</dc:identifier>
</item>
</channel>
</rss>