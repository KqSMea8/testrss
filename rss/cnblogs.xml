<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>python  路飞模块一考核总结 - 战争热诚</title>
<link>http://www.cnblogs.com/wj-1314/p/8456010.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wj-1314/p/8456010.html</guid>
<description>&lt;p&gt;1. 分别解释&quot;=&quot;,&quot;==&quot;,&quot;+=&quot;的含义（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
=为赋值语句，把一个变量值赋予另一个值
== 为条件判断，判断两个值是否相等
+= 为赋值   a+=1  意思就是a=a+1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.两个变量值的关系？（口述）&lt;br/&gt;　　n1 = 123456&lt;br/&gt;　　n2 = n1&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
将123456赋予n1，  然后将n1赋予n2, 意思就是n1 n2指向123456这个地址
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3. 请写出 “路飞学城” 分别用 utf-8 和 gbk 编码所占的位数（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
一个中文用utf-8 表示占3字节 GBK占2字节  
所以路飞学城用utf-8表示占12字节 GBK占8字节
其中12字节相当于96位 8字节64位
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4. 简述Python中的几种数据类型（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
数据类型分为：基本类型、数据集。
基本类型包括：数字类型（整形、长整型、浮点型、复数）、字符串类型、布尔类型。
数据集类型包括：列表、元祖、字典、集合。&lt;br/&gt;总体来说，数据类型分为数字，字符串，列表，字典，元祖，布尔，集合
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5. 数据类型的可变与不可变分别有哪些？（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
可变：字符串、列表、集合、字典value
 不可变：数字、字符串、布尔、元祖、字典key
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6.元祖，列表，字典有没有长度的限制?（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
没有，根据内存大小定义。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7. 解释'and','or','not'（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
和C语音的与或非类似，and,or,not都为逻辑运算符
and表示两者都为TRUE，则为TRUE
or表示两者有一个判断为布尔TRUE 则结果为TRUE 反之则False
not 表示取反 如x为True，not x 则为False
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;8. 元组和列表的区别（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
 元组又叫只读列表，不可改变，且无序。
 列表有序，并且可以修改。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;9.列举一堆布尔值为False的情况（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
空列表 [],
空字典{},
空元祖(),
空字符串“”
0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10.python2和python3对于long（长整形）的区别。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
 python2中有整形int和long，int 32位系统最多只有32位，超出32位则为long。64位系统为64位。
 python3中全部为int。
 long在python中没有指定位宽。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;11.变量命名规范 ？（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
首字母不能是数字，并且变量名只能含有英文，数字，和下划线_&lt;br/&gt;1.变量名只能是 字母、数字或下划线的任意组合。&lt;br/&gt;2.变量名的第一个字符不能是数字。&lt;br/&gt;3.关键字不能声明为变量名。&lt;br/&gt;变量名不要过长，最好不要使用中文和拼音，还有不能乱起变量名，比如名不搭意。&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;12.阐述一下unicode和utf-8的区别（或者unicode在python3的作用）（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
 unicode又叫万国码，涵盖全世界的编码，所有字符和符号最少由16位（2个字节）表示，和别的编码有对应映射关系。
 utf-8对unicode进行了优化，uft-8对于英文只占用1个字节，欧洲字符2个字节，东亚字符3个字节，特殊字符4个字节。
 在python3中默认在内存存储代码的形式就是unicode，为了方便不同国家的人查看代码。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;13.深浅copy-引用和copy(),deepcopy()的区别（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
1.引用赋值的时候，指向同一个列表地址，如果a列表重新赋予别的列表，b还是指向之前的地址，b列表不改变，如果a列表里的值改变，那么b也会跟着改变。
2.当使用copy()的时候，相当于整个列表包括里面的东西一起完整拷贝给你，不是指向同一个地址，a里面的值改变，b列表不跟着改变。但是如果a列表是嵌套列表，嵌套列表里的值发生变化，拷贝的列表b里的嵌套
列表也会跟着改变，因为列表里的列表是指向同一个地址，相当于1.的情况
3.使用deepcopy()的话，列表里的数地址也会不一样，所以改变列表a里的嵌套列表的数，b也不会跟着改变。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;14.python2和python3的默认字符编码（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
python2默认字符编码是ASCII
python3默认编码是unicode
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;15.集合的特性（口述）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
确定性：元素必须可以hash。互异性：元素不可相同。无序性。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;16.列表['alex','egon','yuan','wusir','666']（编程）&lt;/p&gt;&lt;p&gt;   1.把666替换成999&lt;br/&gt;   2.获取&quot;yuan&quot;索引&lt;br/&gt;   3.假设不知道前面有几个元素，分片得到最后的三个元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
16.列表['alex','egon','yuan','wusir','666']（编程）

   1.把666替换成999
   2.获取&quot;yuan&quot;索引
   3.假设不知道前面有几个元素，分片得到最后的三个元素

li =['alex','egon','yuan','wusir','666']
li[-1] = '999'
print(li)
print(li.index('yuan'))
last3 = li[-3:]
print(last3)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;17.对字典进行增删改查（编程）&lt;br/&gt;　　{&quot;Development&quot;:&quot;开发小哥&quot;,&quot;OP&quot;:&quot;运维小哥&quot;,&quot;Operate&quot;:&quot;运营小仙女&quot;,&quot;UI&quot;:&quot;UI小仙女&quot;}&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
dic = {&quot;Development&quot;:&quot;开发小哥&quot;,&quot;OP&quot;:&quot;运维小哥&quot;,&quot;Operate&quot;:&quot;运营小仙女&quot;,&quot;UI&quot;:&quot;UI小仙女&quot;}
#增
dic['manage']='alex'
print(dic)
#删
del dic['Development']
print(dic)
#改
dic['manage'] = 'oldboys'
print(dic)
#查看
find = dic.get(&quot;UI&quot;)
print(find)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;18.计算1+2+3...+98+99+100 （编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
#18.计算1+2+3...+98+99+100 （编程题）
# count = 1
# counts =0
# while count&amp;lt;=100:
#     counts=count+counts
#     print(counts)
#     count +=1
count =0
for i in range(1,101):
    count = count+i
print(count)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;19. 制作趣味模板程序（编程题）&lt;br/&gt;    需求：等待用户输入名字、地点、爱好，根据用户的名字和爱好进行任意现实&lt;br/&gt;    如：敬爱可爱的xxx，最喜欢在xxx地方干xxx&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 19. 制作趣味模板程序（编程题）
#     需求：等待用户输入名字、地点、爱好，根据用户的名字和爱好进行任意现实
#     如：敬爱可爱的xxx，最喜欢在xxx地方干xxx
#  
username = input(&quot;请输入名字&amp;gt;&amp;gt;&quot;)
userpalce = input(&quot;请输入地点&amp;gt;&amp;gt;&quot;)
userhobby = input(&quot;请输入爱好&amp;gt;&amp;gt;&quot;)
print(&quot;敬爱可爱的%s，最喜欢在%s地方干%s&quot;%(username,userpalce,userhobby))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;20.写一个三次认证（编程）&lt;br/&gt;实现用户输入用户名和密码,当用户名为 seven 或 alex 且 密码为 123 时,显示登陆成功,否则登陆失败,失败时允许重复输入三次&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;39&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 20.写一个三次认证（编程）
# 实现用户输入用户名和密码,当用户名为 seven 或 alex 且 密码为 123 时,显示登陆成功,
# 否则登陆失败,失败时允许重复输入三次
#  

_username1 = 'seven'
_username2 = 'alex'
_password = '123'

count =0
while count&amp;lt;3:
    username = input(&quot;名字&amp;gt;&amp;gt;&quot;)
    password = input(&quot;密码&amp;gt;&amp;gt;&quot;)
    if (username==_username1 or username==_username2) and password ==_password:
        print(&quot;登陆成功&quot;)
        break
    else:
        print(&quot;登陆失败&quot;)
    count+=1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;21.切割字符串&quot;luffycity&quot;为&quot;luffy&quot;,&quot;city&quot;（编程）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 21.切割字符串&quot;luffycity&quot;为&quot;luffy&quot;,&quot;city&quot;（编程）
info = &quot;luffycity&quot;
print(info[0:5])
print(info[5:])
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;22.猜年龄游戏（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 22.猜年龄游戏（编程题）
age =20
count = 0
while count&amp;lt;3:
    user_age = input(&quot;请输入年龄&amp;gt;&amp;gt;&quot;)
    if user_age.isdigit() is True:
        if age == int(user_age):
            print(&quot;恭喜&quot;)
            break
        elif int(user_age) &amp;gt;age:
            print(&quot;猜大了，请重试&quot;)
        else:
            print(&quot;猜小了，再试试&quot;)
    else:
        print(&quot;请输入数字&quot;)
        pass
    count+=1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;23.求1～100间所有偶数的和（亦可奇数和，使用while循环写）（编程题）。&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 23.求1～100间所有偶数的和（亦可奇数和，使用while循环写）（编程题）。
count =0
sumn=0
while count&amp;lt;=100:
    if count%2==0:
        sumn =count+sumn
    count+=1
print(sumn)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;24.从键盘接收一百分制成绩（0~100），要求输出其对应的成绩等级A~E。其中，90分以上为'A'，80~89分为'B'，70~79分为'C'，60~69分为'D'，60分以下为'E'。（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 24.从键盘接收一百分制成绩（0~100），要求输出其对应的成绩等级A~E。
# 其中，90分以上为'A'，80~89分为'B'，
# 70~79分为'C'，60~69分为'D'，
# 60分以下为'E'。（编程题）

usergrade = input(&quot;请输入成绩&amp;gt;&amp;gt;&quot;)
if usergrade.isdigit() is True:
    if int(usergrade)&amp;gt;=90:
        print(&quot;A&quot;)
    elif int(usergrade)&amp;gt;=80:
        print(&quot;B&quot;)
    elif int(usergrade)&amp;gt;=70:
        print(&quot;C&quot;)
    elif int(usergrade)&amp;gt;=60:
        print(&quot;D&quot;)
    else:
        print(&quot;E&quot;)
else:
    print(&quot;请输入数字&quot;)
    pass
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;25.输入一年份，判断该年份是否是闰年并输出结果。（该程序可以重复使用 使用while True）（编程题）&lt;br/&gt;     注：凡符合下面两个条件之一的年份是闰年。 （1） 能被4整除但不能被100整除。 （2） 能被400整除。&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 25.输入一年份，判断该年份是否是闰年并输出结果。（该程序可以重复使用 使用while True）（编程题）
#      注：凡符合下面两个条件之一的年份是闰年。 （1） 能被4整除但不能被100整除。 （2） 能被400整除。
#  

while True:
    year_input = input(&quot;请输入年份&amp;gt;&amp;gt;&quot;)
    if year_input.isdigit() is True:
        if (int(year_input)%4 ==0 and int(year_input)%100!=0) or int(year_input)%400==0:
            print(&quot;闰年&quot;)
        else:
            print(&quot;平年&quot;)
    elif year_input == 'q':
        break
    else:
        pass
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;26.有如下字符串：n = &quot;路飞学城&quot;（编程题）&lt;/p&gt;&lt;p&gt;    - 将字符串转换成utf-8的字符编码，再将转换的字节重新转换为utf-8的字符编码&lt;br/&gt;    - 将字符串转换成gbk的字符编码，再将转换的字节重新转换为utf-8的字符编码&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 26.有如下字符串：n = &quot;路飞学城&quot;（编程题）
#
#     - 将字符串转换成utf-8的字符编码，再将转换的字节重新转换为utf-8的字符编码
#     - 将字符串转换成gbk的字符编码，再将转换的字节重新转换为utf-8的字符编码
#  
n = &quot;路飞学城&quot;
n8 = n.encode(encoding='utf-8')
print(&quot;转码为utf8&amp;gt;&amp;gt;%s&quot;%n8)
n9 = n8.decode(encoding='utf-8')
print(&quot;解码为utf8&amp;gt;&amp;gt;%s&quot;%n9)
ngbk = n.encode(encoding='gbk')
print(ngbk)
ndgbk = ngbk.decode(encoding='gbk')
print(ndgbk)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;27.将列表['alex', 'steven', 'egon'] 中的每一个元素使用 ‘\_’ 连接为一个字符串（编程）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 27.将列表['alex', 'steven', 'egon'] 中的每一个元素使用 ‘\_’ 连接为一个字符串（编程）
#  
li =['alex', 'steven', 'egon']
# a = (&quot;\_&quot;).join(li)
# print(a)
s ='\_'
print(s.join(li))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;28.自定义两个，并求交集，合集，差集。（编程）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
a1 ={3,4,5,6}
a2 ={1,2,3,4}
jiao =a1|a2
print(jiao)
cha = a1-a2
print(cha)
bing = a1&amp;amp;a2
print(bing)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;29.求100以内不能被3整除的所有数，并把这些数字放在列表sum3=[]里，并求出这些数字的总和和平均数。(计算的时候告诉学员，sum是一个关键词，不能当作变量)（编程）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 29.求100以内不能被3整除的所有数，并把这些数字放在列表sum3=[]里，
# 并求出这些数字的总和和平均数。(计算的时候告诉学员，sum是一个关键词，不能当作变量)（编程）
sum3 =[]
count =0
sums =0
while count&amp;lt;=100:
    if count%3!=0:
        sum3.append(count)
        sums =sums+count
    count+=1
print(sums)
print(sum3)
print(sums/len(sum3))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;30.根据字典内容打印出下面的形式（编程）&lt;br/&gt;可以不打印工整对齐的效果,主要是让学员获取key和value。&lt;br/&gt;{&quot;Development&quot;:&quot;开发小哥&quot;,&quot;OP&quot;:&quot;运维小哥&quot;,&quot;Operate&quot;:&quot;运营小仙女&quot;,&quot;UI&quot;:&quot;UI小仙女&quot;}&lt;br/&gt;效果如下：&lt;br/&gt;1. 删除了UI&lt;br/&gt;2. 修改了Operate&lt;/p&gt;&lt;p&gt;```&lt;br/&gt;Development --- 开发小哥&lt;br/&gt;OP --- 运维小哥&lt;br/&gt;Operate --- 小仙女&lt;br/&gt;```&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 30.根据字典内容打印出下面的形式（编程）
# 可以不打印工整对齐的效果,主要是让学员获取key和value。
# {&quot;Development&quot;:&quot;开发小哥&quot;,&quot;OP&quot;:&quot;运维小哥&quot;,&quot;Operate&quot;:&quot;运营小仙女&quot;,&quot;UI&quot;:&quot;UI小仙女&quot;}
# 效果如下：
# 1. 删除了UI
# 2. 修改了Operate
#
# ```
# Development --- 开发小哥
# OP --- 运维小哥
# Operate --- 小仙女
# ```
info ={&quot;Development&quot;:&quot;开发小哥&quot;,&quot;OP&quot;:&quot;运维小哥&quot;,&quot;Operate&quot;:&quot;运营小仙女&quot;,&quot;UI&quot;:&quot;UI小仙女&quot;}
del info['UI']
print(info)
info[&quot;Operate&quot;]='小仙女'
print(info)
# for items in info.items():
#     print(items)
for i in info:
    print(i+'----------'+info[i])
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;31.假设一年期定期利率为3.25%，计算一下需要过多少年，一万元的一年定期存款连本带息能翻番？（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 31.假设一年期定期利率为3.25%，计算一下需要过多少年，一万元的一年定期存款连本带息能翻番？（编程题）
money = 10000
money = 10000
interest = money
count = 0
while True:
    count += 1
    interest = interest * (1 + 3.25 / 100)
    if interest // money == 2:
        print(count)
        break

money =10000
rate = 0.0324
years =0
while money&amp;lt;20000:
    years+=1
    money =money*(1+rate)
print(years)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;32.对列表进行增删改查（查可以是索引，值是否存在列表当中）。（编程）&lt;/p&gt;&lt;p&gt;['alex', 'egon', 'wusir', 'wen', 'jing']&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;43&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 32.对列表进行增删改查（查可以是索引，值是否存在列表当中）。（编程）
#
# ['alex', 'egon', 'wusir', 'wen', 'jing']
li =['alex', 'egon', 'wusir', 'wen', 'jing']
#增
li.append('wang')
print(li)
#删
li.remove('wang')
print(li)
del li[-1]
print(li)
#改
li[1] ='eeee'
print(li)
#查
print(li.index('alex'))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;33.猜数游戏。预设一个0~9之间的整数，让用户猜一猜并输入所猜的数，如果大于预设的数，显示“太大”；小于预设的数，显示“太小”，如此循环，直至猜中该数，显示“恭喜！你猜中了！（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 33.猜数游戏。预设一个0~9之间的整数，让用户猜一猜并输入所猜的数，
# 如果大于预设的数，显示“太大”；小于预设的数，显示“太小”，
# 如此循环，直至猜中该数，显示“恭喜！你猜中了！（编程题）
the_number = 9
while 1:
    user_guess = input(&quot;猜猜 年龄》》&quot;)
    if user_guess.isdigit() is True:
        if the_number ==int(user_guess):
            print(&quot;祝贺&quot;)
            break
        elif int(user_guess) &amp;gt;the_number:
            print(&quot;太大&quot;)
        else:
            print(&quot;太小 &quot;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;34.编写一个python程序，输入两个数，比较它们的大小并输出其中较大者。（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 34.编写一个python程序，输入两个数，比较它们的大小并输出其中较大者。（编程题）
number1 = input(&quot;请输入一个数字》》&quot;)
number2 = input(&quot;请输入一个数字》》&quot;)
if number1.isdigit() is True and number2.isdigit() is True:
    if number1&amp;gt;number2:
        print(number1)
    else:
        print(number2)
else:
    print(&quot;输入错误，请重输&quot;)
    pass
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;35.有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？（编程题）&lt;br/&gt;      程序分析：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去 掉不满足条件的排列。&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 35.有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？（编程题）
#       程序分析：可填在百位、十位、个位的数字都是1、2、3、4。
#             组成所有的排列后再去 掉不满足条件的排列。
nums =[]
for index1 in range(1,5):
    for index2 in range(1,5):
        for index3 in range(1,5):
            if index1!=index2 and index2 != index3 and index3 != index1:
                num = 100*index1 +10*index2 +index3
                if num not in nums:
                    nums.append(num)
print(nums)
print(len(nums))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;36.某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上5, 然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 36.某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，
# 加密规则如下：每位数字都加上5, 然后用和除以10的余数代替该数字，
# 再将第一位和第四位交换，第二位和第三位交换。（编程题）
data = input(&quot;输入4个数字&amp;gt;&amp;gt;&quot;)
data =list(''.join(data))
print(data)
for index,i in enumerate(data):
    print(data[index])
    data[index] =(int(i)+5)%10

print(data)
data.reverse()
print(data)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;37.求100以内的素数和。（编程题）&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
# 37.求100以内的素数和。（编程题）
# 素数：素数又称质数， 质数定义为在大于1的自然数中，除了1和它本身以外不再有其他因数的数称为质数。
# 思路：1.先将1~100的数量进行遍历，获得这个数是不是素数
#           2.除以这个小的整数（除了1和本身），获得余数，根据余数判断是否是素数
for i in range(1,100):
    a =1
    for j in range(int(i/2)):
        if (1+i)%(2+j) ==0:
            a =0
            break
    if a ==1:
        print(i+1)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;38.二进制，十进制，十六进制互相转换（计算题，让学员使用计算器，别用编程的内置方法）&lt;br/&gt;十进制转二进制：bin()&lt;br/&gt;十进制转十六进制：hex()&lt;br/&gt;十进制转八进制：oct()&lt;br/&gt;二进制转10进制：如1010： 相当于8+2=10&lt;br/&gt;十六进制转二进制：如0x9a:相当于10011010 再转10进制就是 对应&lt;br/&gt;1 1 1 1 1 1 1 1&lt;br/&gt;128 64 32 16 8 4 2 1 10011010=128+16+8+2=154&lt;/p&gt;

&lt;p&gt;39.企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；&lt;br/&gt;　　利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；&lt;br/&gt;　　20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；&lt;br/&gt;　　60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，&lt;br/&gt;　　从键盘输入当月利润I，求应发放奖金总数？（编程）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;collapse:true;;gutter:true;&quot;&gt;
while True:
     money = input('利润：')
     if money.isdigit() == True:
          if int(money) &amp;lt;= 100000:
               print(&quot;奖金为：%s&quot;%(int(money)*10/100))
          elif int(money) &amp;lt;= 200000:
               print(&quot;奖金为：%s&quot;%(((int(money)-100000)*7.5/100)+100000*10/100))
          elif int(money) &amp;lt;= 400000:
               print(&quot;奖金为：%s&quot; % (((int(money) - 200000) * 5 / 100)))
          elif int(money) &amp;lt;= 600000:
               print(&quot;奖金为：%s&quot; % (((int(money) - 400000) * 3/ 100)))
          elif int(money) &amp;lt;= 1000000:
               print(&quot;奖金为：%s&quot; % (((int(money) - 600000) * 1.5/ 100)))
          else :
               print(&quot;奖金为：%s&quot; % (((int(money) - 600000) * 1/ 100)))
          break
     else:
          money = input('输入错误，请重新输入：')
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Fri, 23 Feb 2018 15:18:00 +0000</pubDate>
<dc:creator>战争热诚</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wj-1314/p/8456010.html</dc:identifier>
</item>
<item>
<title>【css3】旋转倒计时 - stoneniqiu</title>
<link>http://www.cnblogs.com/stoneniqiu/p/8463684.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stoneniqiu/p/8463684.html</guid>
<description>&lt;p&gt;很多答题的H5界面上有旋转倒计时的效果，一个不断旋转减少的动画，类似于下图的这样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/417688/201802/417688-20180223215943309-576612275.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;今天研究了下，可以通过border旋转得到。一般我们可以通过border得到一个四段圆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/417688/201802/417688-20180223230655283-338666359.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;rJrrjZ&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;stoneniqiu&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;circle&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/stoneniqiu/pen/rJrrjZ/&quot;&gt;circle&lt;/a&gt; by stoneniqiu (&lt;a href=&quot;https://codepen.io/stoneniqiu&quot;&gt;@stoneniqiu&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; 接下来接可以通过旋转的方式形成一个倒计时的效果：&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;oEMMpN&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;stoneniqiu&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;circle-rotate&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/stoneniqiu/pen/oEMMpN/&quot;&gt;circle-rotate&lt;/a&gt; by stoneniqiu (&lt;a href=&quot;https://codepen.io/stoneniqiu&quot;&gt;@stoneniqiu&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; 一开始旋转45度是为了让半圆刚好立起来。然后旋转一百八十度。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  .rightcircle&lt;/span&gt;{&lt;span&gt;
                border-top&lt;/span&gt;:&lt;span&gt; .4rem solid #8731fd&lt;/span&gt;;&lt;span&gt;
                border-right&lt;/span&gt;:&lt;span&gt; .4rem solid #8731fd&lt;/span&gt;;&lt;span&gt;
                right&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;&lt;span&gt;
                transform&lt;/span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt; rotate(45deg&lt;/span&gt;)
            &lt;/span&gt;}&lt;span&gt;
 .right_cartoon &lt;/span&gt;{&lt;span&gt;
                -webkit-animation&lt;/span&gt;:&lt;span&gt; circleProgressLoad_right 10s linear infinite forwards&lt;/span&gt;;&lt;span&gt;
                animation&lt;/span&gt;:&lt;span&gt; circleProgressLoad_right 10s linear infinite forwards&lt;/span&gt;;
            }&lt;span&gt;
 @keyframes circleProgressLoad_right &lt;/span&gt;{&lt;span&gt;
                0% {
                    -webkit-transform&lt;/span&gt;:&lt;span&gt; rotate(46deg)&lt;/span&gt;;&lt;span&gt;
                    transform&lt;/span&gt;:&lt;span&gt; rotate(46deg)
                &lt;/span&gt;}&lt;span&gt;
                50%,to &lt;/span&gt;{&lt;span&gt;
                    -webkit-transform&lt;/span&gt;:&lt;span&gt; rotate(-136deg)&lt;/span&gt;;&lt;span&gt;
                    transform&lt;/span&gt;:&lt;span&gt; rotate(-136deg)
                &lt;/span&gt;}&lt;span&gt;
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;毕竟不是真正的减少，要出现一种颜色占大多数就可以通过两个半圆来拼凑。&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;RQBBEo&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;stoneniqiu&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;circle-timer&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/stoneniqiu/pen/RQBBEo/&quot;&gt;circle-timer&lt;/a&gt; by stoneniqiu (&lt;a href=&quot;https://codepen.io/stoneniqiu&quot;&gt;@stoneniqiu&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;RQBBEo&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;stoneniqiu&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;circle-timer&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/417688/201802/417688-20180223230843791-686257820.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; @keyframes circleProgressLoad_left &lt;/span&gt;{&lt;span&gt;&lt;span&gt;
                0%,50%&lt;/span&gt; {
                    -webkit-transform&lt;/span&gt;:&lt;span&gt; rotate(46deg)&lt;/span&gt;;&lt;span&gt;
                    transform&lt;/span&gt;:&lt;span&gt; rotate(46deg)
                &lt;/span&gt;}&lt;span&gt;
            
                to &lt;/span&gt;{&lt;span&gt;
                    -webkit-transform&lt;/span&gt;:&lt;span&gt; rotate(-136deg)&lt;/span&gt;;&lt;span&gt;
                    transform&lt;/span&gt;:&lt;span&gt; rotate(-136deg)
                &lt;/span&gt;}&lt;span&gt;
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意到是右边线转5秒，然后左边再等五秒，这里css动画的效果略有不同，右边是0%开始，50%,to。左边是0%,50%，然后to，这样实现的5秒等待。这就是旋转倒计时的效果，最后还可以通过修改左半环border-left的颜色，来凸显最后几秒钟的紧急情况。&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 15:03:00 +0000</pubDate>
<dc:creator>stoneniqiu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stoneniqiu/p/8463684.html</dc:identifier>
</item>
<item>
<title>OpenCV角点检测源代码分析（Harris和ShiTomasi角点） - 一棹烟波</title>
<link>http://www.cnblogs.com/riddick/p/8463763.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/riddick/p/8463763.html</guid>
<description>&lt;p&gt;&lt;span&gt;OpenCV中常用的角点检测为Harris角点和ShiTomasi角点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以OpenCV源代码文件 .\opencv\sources\samples\cpp\tutorial_code\TrackingMotion\cornerDetector_Demo.cpp为例，主要分析其中的这两种角点检测源代码。角点检测&lt;strong&gt;数学原理&lt;/strong&gt;请参考我之前转载的一篇博客 &lt;a href=&quot;http://www.cnblogs.com/riddick/p/7645904.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/riddick/p/7645904.html&lt;/a&gt;，分析的很详细，不再赘述。本文主要分析其源代码：&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;1. Harris角点检测&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　根据数学上的推导，可以根据图像中某一像素点邻域内构建的协方差矩阵获取特征值和特征向量，根据特征值建立特征表达式，如下：&lt;/span&gt;&lt;span&gt;　　　　　　　　　　　　　　　　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
(αβ) - k(α+β)^&lt;span&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　可以根据上式的值得大小来判断该像素点是平坦区域内点、边界点还是角点。下面说一下怎么在原图像中建立协方差矩阵并求取特征值α和β和特征向量t1, t2。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　该&lt;/span&gt;&lt;span&gt;例程代码中调用cornerEigenValsAndVecs（）函数计算特征值和特征向量。函数原型如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;void&lt;/span&gt; cv::cornerEigenValsAndVecs( InputArray _src, OutputArray _dst, &lt;span&gt;int&lt;/span&gt; blockSize, &lt;span&gt;int&lt;/span&gt; ksize, &lt;span&gt;int&lt;/span&gt; borderType )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; 　　src为输入灰度图像，dst为输出（6通道 CV_32FC(6)，依次保存的是α， t1,  β， t2），blockSize为邻域大小，ksize为sobel求取微分时的窗口大小。&lt;/span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　该函数内部调用cornerEigenValsVecs（）函数，原型如下：&lt;/span&gt;　             &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;  cornerEigenValsVecs( &lt;span&gt;const&lt;/span&gt; Mat&amp;amp; src, Mat&amp;amp; eigenv, &lt;span&gt;int&lt;/span&gt; block_size,&lt;span&gt;int&lt;/span&gt; aperture_size, &lt;span&gt;int&lt;/span&gt; op_type, &lt;span&gt;double&lt;/span&gt; k=&lt;span&gt;0&lt;/span&gt;.,&lt;span&gt;int&lt;/span&gt; borderType=BORDER_DEFAULT )
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;span&gt;&lt;span&gt;　&lt;span&gt;　主要介绍一下op_type这个参数，该参数是一个枚举值，有三个值可以选择（MINEIGENVAL， HARRIS， EIGENVALSVECS）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;①MINEIGENVAL用于ShiTomasi角点检测中获取两个特征值中较小的那个值，用以获取强角点，随后介绍；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　②HARRIS在cornerHarris（）函数中用到，用于直接利用协方差矩阵获取特征表达式值的大小，k值在此时会被设置，通常为0.04，其他情况下设置为0；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　③EIGENVALSVECS就是本例程中设置的，求取两个特征值和特征向量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　在cornerEigenValsVecs（）函数中，先利用sobel算子求水平方向和竖直方向的微分，窗口大小为前述，如下代码：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　　　　　　　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Mat Dx, Dy;
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( aperture_size &amp;gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt; )
    {
        Sobel( src, Dx, CV_32F, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, aperture_size, scale, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, borderType );
        Sobel( src, Dy, CV_32F, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, aperture_size, scale, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, borderType );
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {
        Scharr( src, Dx, CV_32F, &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, scale, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, borderType );
        Scharr( src, Dy, CV_32F, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, scale, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, borderType );
    }&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　然后初始化协方差矩阵cov（三通道，依次保存dx*dx, dx*dy, dy*dy），如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt;( ; j &amp;lt; size.width; j++&lt;span&gt; )
        {
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; dx =&lt;span&gt; dxdata[j];
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; dy =&lt;span&gt; dydata[j];

            cov_data[j&lt;/span&gt;*&lt;span&gt;3&lt;/span&gt;] = dx*&lt;span&gt;dx;
            cov_data[j&lt;/span&gt;*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;] = dx*&lt;span&gt;dy;
            cov_data[j&lt;/span&gt;*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;] = dy*&lt;span&gt;dy;
        }&lt;/span&gt;&lt;span&gt; &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　接下来对协方差矩阵进行在前述设定窗口内进行均值（盒式）滤波：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    boxFilter(cov, cov, cov.depth(), Size(block_size, block_size),
        Point(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;,-&lt;span&gt;1&lt;/span&gt;), &lt;span&gt;false&lt;/span&gt;&lt;span&gt;, borderType );

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( op_type ==&lt;span&gt; MINEIGENVAL )
        calcMinEigenVal( cov, eigenv );
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;( op_type ==&lt;span&gt; HARRIS )
        calcHarris( cov, eigenv, k );
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;( op_type ==&lt;span&gt; EIGENVALSVECS )
        calcEigenValsVecs( cov, eigenv );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;span&gt;然后就是利用滤波后的协方差矩阵求取特征值和特征向量了，根据设定不同的op_type调用不同的函数计算，本例程中为调用最后一个calcEigenValsVecs（）函数，该函数如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; calcEigenValsVecs( &lt;span&gt;const&lt;/span&gt; Mat&amp;amp; _cov, Mat&amp;amp;&lt;span&gt; _dst )
{
    Size size &lt;/span&gt;=&lt;span&gt; _cov.size();
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( _cov.isContinuous() &amp;amp;&amp;amp;&lt;span&gt; _dst.isContinuous() )
    {
        size.width &lt;/span&gt;*=&lt;span&gt; size.height;
        size.height &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;( &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; size.height; i++&lt;span&gt; )
    {
        &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;float&lt;/span&gt;* cov = _cov.ptr&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt;(i);
        &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;* dst = _dst.ptr&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt;(i);&lt;br/&gt;&lt;span&gt;
        //调用该函数计算2x2协方差矩阵的特征值和特征向量&lt;/span&gt;
        eigen2x2(cov, dst, size.width);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　该函数中调用eigen2x2（）函数计算每个像素点处协方差矩阵的2个特征值和2个特征向量， 该函数如下：2x2矩阵特征值和特征向量的计算，有线性代数基础的都学过，就不再赘述&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; eigen2x2( &lt;span&gt;const&lt;/span&gt; &lt;span&gt;float&lt;/span&gt;* cov, &lt;span&gt;float&lt;/span&gt;* dst, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n )
{
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;( &lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; n; j++&lt;span&gt; )
    {
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; a = cov[j*&lt;span&gt;3&lt;/span&gt;&lt;span&gt;];
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; b = cov[j*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;];
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; c = cov[j*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;&lt;span&gt;];

        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; u = (a + c)*&lt;span&gt;0.5&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; v = std::sqrt((a - c)*(a - c)*&lt;span&gt;0.25&lt;/span&gt; + b*&lt;span&gt;b);&lt;br/&gt;　　　　　&lt;br/&gt;　　　　　&lt;span&gt;//计算两个特征值l1,l2
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;double&lt;/span&gt; l1 = u +&lt;span&gt; v;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; l2 = u -&lt;span&gt; v;&lt;br/&gt;　　　　　&lt;span&gt;//计算特征值l1对应的特征向量
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;double&lt;/span&gt; x =&lt;span&gt; b;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; y = l1 -&lt;span&gt; a;
        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; e =&lt;span&gt; fabs(x);

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( e + fabs(y) &amp;lt; 1e-&lt;span&gt;4&lt;/span&gt;&lt;span&gt; )
        {
            y &lt;/span&gt;=&lt;span&gt; b;
            x &lt;/span&gt;= l1 -&lt;span&gt; c;
            e &lt;/span&gt;=&lt;span&gt; fabs(x);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( e + fabs(y) &amp;lt; 1e-&lt;span&gt;4&lt;/span&gt;&lt;span&gt; )
            {
                e &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;./(e + fabs(y) +&lt;span&gt; FLT_EPSILON);
                x &lt;/span&gt;*= e, y *=&lt;span&gt; e;
            }
        }

        &lt;/span&gt;&lt;span&gt;double&lt;/span&gt; d = &lt;span&gt;1&lt;/span&gt;./std::sqrt(x*x + y*y +&lt;span&gt; DBL_EPSILON);&lt;br/&gt;&lt;span&gt;//保存特征值l1及其对应的特征向量&lt;/span&gt;
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j] = (&lt;span&gt;float&lt;/span&gt;&lt;span&gt;)l1;
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j + &lt;span&gt;2&lt;/span&gt;] = (&lt;span&gt;float&lt;/span&gt;)(x*&lt;span&gt;d);
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j + &lt;span&gt;3&lt;/span&gt;] = (&lt;span&gt;float&lt;/span&gt;)(y*&lt;span&gt;d);&lt;br/&gt;&lt;span&gt; //计算特征值l2对应的特征向量&lt;/span&gt;
        x &lt;/span&gt;=&lt;span&gt; b;
        y &lt;/span&gt;= l2 -&lt;span&gt; a;
        e &lt;/span&gt;=&lt;span&gt; fabs(x);

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( e + fabs(y) &amp;lt; 1e-&lt;span&gt;4&lt;/span&gt;&lt;span&gt; )
        {
            y &lt;/span&gt;=&lt;span&gt; b;
            x &lt;/span&gt;= l2 -&lt;span&gt; c;
            e &lt;/span&gt;=&lt;span&gt; fabs(x);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;( e + fabs(y) &amp;lt; 1e-&lt;span&gt;4&lt;/span&gt;&lt;span&gt; )
            {
                e &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;./(e + fabs(y) +&lt;span&gt; FLT_EPSILON);
                x &lt;/span&gt;*= e, y *=&lt;span&gt; e;
            }
        }

        d &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;./std::sqrt(x*x + y*y +&lt;span&gt; DBL_EPSILON);&lt;br/&gt;&lt;span&gt;//保存特征值l2及其对应的特征向量&lt;/span&gt;
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j + &lt;span&gt;1&lt;/span&gt;] = (&lt;span&gt;float&lt;/span&gt;&lt;span&gt;)l2;
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j + &lt;span&gt;4&lt;/span&gt;] = (&lt;span&gt;float&lt;/span&gt;)(x*&lt;span&gt;d);
        dst[&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;*j + &lt;span&gt;5&lt;/span&gt;] = (&lt;span&gt;float&lt;/span&gt;)(y*&lt;span&gt;d);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; &lt;span&gt;　　求得2个特征值α、β和2个特征向量之后，就是要利用特征值构建特征表达式，通过表达式的值（  (αβ) - k(α+β)^2   ）来区分角点，k的值通常设置为0.04：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; calculate Mc &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
  &lt;span&gt;for&lt;/span&gt;( &lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; src_gray.rows; j++&lt;span&gt; )
     { &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;( &lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; src_gray.cols; i++&lt;span&gt; )
          {
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; lambda_1 = myHarris_dst.at&amp;lt;Vec6f&amp;gt;(j, i)[&lt;span&gt;0&lt;/span&gt;&lt;span&gt;];
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; lambda_2 = myHarris_dst.at&amp;lt;Vec6f&amp;gt;(j, i)[&lt;span&gt;1&lt;/span&gt;&lt;span&gt;];
            Mc.at&lt;/span&gt;&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;(j,i) = lambda_1*lambda_2 - &lt;span&gt;0.04f&lt;/span&gt;*pow( ( lambda_1 + lambda_2 ), &lt;span&gt;2&lt;/span&gt;&lt;span&gt; );
          }
     }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　&lt;span&gt;代码中利用 &lt;span class=&quot;cnblogs_code&quot;&gt;minMaxLoc( Mc, &amp;amp;myHarris_minVal, &amp;amp;myHarris_maxVal, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, Mat() );&lt;/span&gt; 函数获取特征表达式的最大值min和最小值max，通过选取不同的阈值min&amp;lt;=thresh&amp;lt;=max，来指定大于阈值thresh的表达式值对应的点为检测出的角点。并利用circle（）函数显示出来。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
circle( myHarris_copy, Point(i,j), &lt;span&gt;4&lt;/span&gt;, Scalar( rng.uniform(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;255&lt;/span&gt;), rng.uniform(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;255&lt;/span&gt;), rng.uniform(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;255&lt;/span&gt;) ), -&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt; ); 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt; 至此，Harris角点检测完成！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;&lt;strong&gt; 2. ShiTomasi角点检测&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;ShiTomasi角点提取是获取harris角点中的强角点，怎么获取强角点呢，那就是只选取两个特征值中&lt;strong&gt;较小的那个特征值&lt;/strong&gt;构建特征表达式，如果较小的特征值都能够满足设定的阈值条件，那么该角点就视为强角点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 　　&lt;span&gt;调用  &lt;span class=&quot;cnblogs_code&quot;&gt;cornerMinEigenVal( src_gray, myShiTomasi_dst, blockSize, apertureSize, BORDER_DEFAULT );&lt;/span&gt; 函数来获取较小的特征值，其实该函数内部依然调用上面所述的函数 &lt;span class=&quot;cnblogs_code&quot;&gt;cornerEigenValsVecs( src, dst, blockSize, ksize, MINEIGENVAL, &lt;span&gt;0&lt;/span&gt;, borderType );&lt;/span&gt; ，然后将op_type设置为MINEIGENVAL枚举值，进而调用 &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; calcMinEigenVal( &lt;span&gt;const&lt;/span&gt; Mat&amp;amp; _cov, Mat&amp;amp; _dst )&lt;/span&gt; 函数计算较小的特征值。该函数代码如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; calcMinEigenVal( &lt;span&gt;const&lt;/span&gt; Mat&amp;amp; _cov, Mat&amp;amp;&lt;span&gt; _dst )
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; i, j;
    Size size &lt;/span&gt;=&lt;span&gt; _cov.size();
&lt;/span&gt;&lt;span&gt;#if&lt;/span&gt; CV_TRY_AVX
    &lt;span&gt;bool&lt;/span&gt; haveAvx =&lt;span&gt; CV_CPU_HAS_SUPPORT_AVX;
&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;
&lt;span&gt;#if&lt;/span&gt; CV_SIMD128
    &lt;span&gt;bool&lt;/span&gt; haveSimd =&lt;span&gt; hasSIMD128();
&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt;

    &lt;span&gt;if&lt;/span&gt;( _cov.isContinuous() &amp;amp;&amp;amp;&lt;span&gt; _dst.isContinuous() )
    {
        size.width &lt;/span&gt;*=&lt;span&gt; size.height;
        size.height &lt;/span&gt;= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
    }

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;( i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; size.height; i++&lt;span&gt; )
    {
        &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; &lt;span&gt;float&lt;/span&gt;* cov = _cov.ptr&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt;(i);
        &lt;/span&gt;&lt;span&gt;float&lt;/span&gt;* dst = _dst.ptr&amp;lt;&lt;span&gt;float&lt;/span&gt;&amp;gt;&lt;span&gt;(i);
&lt;/span&gt;&lt;span&gt;#if&lt;/span&gt; CV_TRY_AVX
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt;( haveAvx )
            j &lt;/span&gt;=&lt;span&gt; calcMinEigenValLine_AVX(cov, dst, size.width);
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;
&lt;span&gt;#endif&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; CV_TRY_AVX&lt;/span&gt;&lt;span&gt;
            j &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;#if&lt;/span&gt; CV_SIMD128
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt;( haveSimd )
        {
            v_float32x4 half &lt;/span&gt;= v_setall_f32(&lt;span&gt;0.5f&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;( ; j &amp;lt;= size.width - v_float32x4::nlanes; j +=&lt;span&gt; v_float32x4::nlanes )
            {
                v_float32x4 v_a, v_b, v_c, v_t;
                v_load_deinterleave(cov &lt;/span&gt;+ j*&lt;span&gt;3&lt;/span&gt;&lt;span&gt;, v_a, v_b, v_c);
                v_a &lt;/span&gt;*=&lt;span&gt; half;
                v_c &lt;/span&gt;*=&lt;span&gt; half;
                v_t &lt;/span&gt;= v_a -&lt;span&gt; v_c;
                v_t &lt;/span&gt;= v_muladd(v_b, v_b, (v_t *&lt;span&gt; v_t));
                v_store(dst &lt;/span&gt;+ j, (v_a + v_c) -&lt;span&gt; v_sqrt(v_t));
            }
        }
&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; CV_SIMD128&lt;/span&gt;

        &lt;span&gt;for&lt;/span&gt;( ; j &amp;lt; size.width; j++&lt;span&gt; )
        {
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; a = cov[j*&lt;span&gt;3&lt;/span&gt;]*&lt;span&gt;0.5f&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; b = cov[j*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;];
            &lt;/span&gt;&lt;span&gt;float&lt;/span&gt; c = cov[j*&lt;span&gt;3&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;]*&lt;span&gt;0.5f&lt;/span&gt;&lt;span readability=&quot;2&quot;&gt;;&lt;p&gt;&lt;span&gt;//求根公式计算较小的根，即为较小的特征值&lt;/span&gt;
            dst[j] &lt;/p&gt;&lt;/span&gt;= (&lt;span&gt;float&lt;/span&gt;)((a + c) - std::sqrt((a - c)*(a - c) + b*&lt;span&gt;b));
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　&lt;span&gt;所有像素点处较小的特征值求出后利用 &lt;span class=&quot;cnblogs_code&quot;&gt;minMaxLoc( Mc, &amp;amp;myHarris_minVal, &amp;amp;myHarris_maxVal, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, Mat() );&lt;/span&gt; 函数选取最小的min和最大的max，通过调整阈值thresh来设定大于阈值thresh的为显示出来的强角点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 至此，ShiTomasi角点检测完成！&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 14:50:00 +0000</pubDate>
<dc:creator>一棹烟波</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/riddick/p/8463763.html</dc:identifier>
</item>
<item>
<title>超级简便的容器化部署工具（使用 ASP.NET Core 演示） - 不如隐茶去</title>
<link>http://www.cnblogs.com/JacZhu/p/8463663.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/JacZhu/p/8463663.html</guid>
<description>&lt;p&gt;Docker 改变了我们部署网站的方式，从原先的手动编译打包上传，到现在的构建镜像然后推送部署，让我们在配置环境上所花费的时间大大减少了。不仅如此，通过一系列相关的工具配合，可以很轻松的实现 CI、CD。本文即将介绍的就是这么一款非常简便的工具——captainduckduck，使用 captainduckduck 只需要很少的 Docker 知识。&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;原先，我们的部署流程可能是这样的：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;拉取代码 -&amp;gt; 构建镜像 -&amp;gt; 启动容器&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;除此之外，还需要配置 HTTPS，配置反向代理，如果要更新应用的话，还需要手动去执行一遍部署流程，先不说一遍一遍执行这些个东西挺枯燥的，再一个，当同一台服务器上托管的网站多了，时间一长，可能反向代理的端口号都记不清，之后再部署新的网站，还得把 nginx 配置文件看一遍。&lt;/p&gt;
&lt;p&gt;幸运的是，我无意间发现了 captainduckduck， 这是一个能够极大的简化我们使用 Docker 部署 Web 服务步骤的工具，完美的击中了上面提到的痛点，而且使用起来非常的简单。captainduckduck 是对 Docker swarm 技术一个较好的封装，提供了一个 Web 面板以及一个客户端命令行工具，即使用户完全没有接触过 Docker Swarm 甚至没怎么用过 nginx、Docker，也能够轻松的部署网站。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;首先需要准备这些东西：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;一个支持泛解析的域名&lt;/li&gt;
&lt;li&gt;一台安装好了 Docker 17.06.x 的 Linux 服务器（最低配置 1核1G）&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在校大学生可以使用腾讯云或者阿里云提供的学生套餐，其中包含不少于 1G 内存的服务器跟一年的域名，也不贵，每月支出一两顿饭钱而已。&lt;/p&gt;
&lt;h2 id=&quot;安装-captain-服务端&quot;&gt;安装 Captain 服务端&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;mkdir /captain
docker run -v /var/run/docker.sock:/var/run/docker.sock dockersaturn/captainduckduck&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行上面的两条 shell 命令并等待执行结束，就完成了服务端的部署，啊，就是这么简单。然后你就可以在浏览器里访问：&lt;code&gt;http://[IP_OF_YOUR_SERVER]:3000&lt;/code&gt; Web 面板了。使用默认密码登陆后，就可以来配置服务端了。&lt;/p&gt;
&lt;h2 id=&quot;配置服务端&quot;&gt;配置服务端&lt;/h2&gt;
&lt;p&gt;首先在你的域名解析处添加一个 A 记录：&lt;code&gt;*.something&lt;/code&gt;，IP 指向安装了 captainduckduck 的服务器。然后在 Web 面板的 Dashboard 页面设置 &lt;strong&gt;Captain Root Domain&lt;/strong&gt;：&lt;code&gt;something.example.com&lt;/code&gt;。同时，你还可以启用 HTTPS，captainduckduck 会自动的使用 Let's Encrypt 给你的域名加上一个 HTTPS 证书。添加好根域名后，captainduckduck 会给 Web 面板分配一个用来直接访问的域名：&lt;code&gt;captain.something.example.com&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;至此，captainduckduck 就已经部署完毕了，让我们测试一下，切换到 Apps 页面，点击 &lt;strong&gt;OneClick Apps/Databases&lt;/strong&gt;，在下拉列表中选择 WordPress，然后按照表单填写数据库相关的信息，稍等几分钟，就可以一键部署一个 WordPress 站点了。这里是我运行好的：&lt;a href=&quot;https://test-wp.app.gianthard.rocks/&quot; class=&quot;uri&quot;&gt;https://test-wp.app.gianthard.rocks/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;部署-asp.net-core-网站&quot;&gt;部署 ASP.NET Core 网站&lt;/h2&gt;
&lt;h3 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h3&gt;
&lt;p&gt;captainduckduck 默认并不支持 ASP.NET Core 网站的一键部署，需要自己动手写一个 &lt;code&gt;Dockerfile&lt;/code&gt;，不过好在微软已经给了标准样例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode dockerfile&quot;&gt;
&lt;code class=&quot;sourceCode dockerfile&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Sample contents of Dockerfile&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# Stage 1&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; microsoft/aspnetcore-build AS builder
&lt;span class=&quot;kw&quot;&gt;WORKDIR&lt;/span&gt; /source

&lt;span class=&quot;co&quot;&gt;# caches restore result by copying csproj file separately&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; ./src/*.csproj .
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; cd ./src &amp;amp;&amp;amp; dotnet restore

&lt;span class=&quot;co&quot;&gt;# copies the rest of your code&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; ./src/ .
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; cd ./src &amp;amp;&amp;amp; dotnet publish --output /app/ --configuration Release

&lt;span class=&quot;co&quot;&gt;# Stage 2&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; microsoft/aspnetcore
&lt;span class=&quot;kw&quot;&gt;WORKDIR&lt;/span&gt; /app
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; --from=builder /app .
&lt;span class=&quot;kw&quot;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;&quot;dotnet&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;myapp.dll&quot;&lt;/span&gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你的网站使用了现代前端框架的服务端渲染技术，你可以使用下面的 &lt;code&gt;Dockerfile&lt;/code&gt; 样例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode dockerfile&quot;&gt;
&lt;code class=&quot;sourceCode dockerfile&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Sample contents of Dockerfile&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# Stage 1&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; microsoft/aspnetcore-build AS builder
&lt;span class=&quot;kw&quot;&gt;WORKDIR&lt;/span&gt; /source

&lt;span class=&quot;co&quot;&gt;# caches restore result by copying csproj file separately&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; ./src/*.csproj .
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; ./src/package.json .
&lt;span class=&quot;co&quot;&gt;# 如果你的服务器网络不好，请自行在这里修改 npm 仓库&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; cd ./src &amp;amp;&amp;amp; dotnet restore &amp;amp;&amp;amp; npm i

&lt;span class=&quot;co&quot;&gt;# copies the rest of your code&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; ./src/ .
&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; cd ./src &amp;amp;&amp;amp; dotnet publish --output /app/ --configuration Release

&lt;span class=&quot;co&quot;&gt;# Stage 2&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; microsoft/aspnetcore:2.0.5
&lt;span class=&quot;kw&quot;&gt;ENV&lt;/span&gt; NODE_VERSION 9.3.0

&lt;span class=&quot;kw&quot;&gt;RUN&lt;/span&gt; curl -SLO &lt;span class=&quot;st&quot;&gt;&quot;https://mirrors.ustc.edu.cn/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz&quot;&lt;/span&gt; \
  &amp;amp;&amp;amp; curl -SLO --compressed &lt;span class=&quot;st&quot;&gt;&quot;https://mirrors.ustc.edu.cn/node/v$NODE_VERSION/SHASUMS256.txt&quot;&lt;/span&gt; \
  &amp;amp;&amp;amp; grep &lt;span class=&quot;st&quot;&gt;&quot; node-v$NODE_VERSION-linux-x64.tar.gz\$&quot;&lt;/span&gt; SHASUMS256.txt | sha256sum -c - \
  &amp;amp;&amp;amp; tar -xf &lt;span class=&quot;st&quot;&gt;&quot;node-v$NODE_VERSION-linux-x64.tar.gz&quot;&lt;/span&gt; -C /usr/local --strip-components=1 --no-same-owner \
  &amp;amp;&amp;amp; rm &lt;span class=&quot;st&quot;&gt;&quot;node-v$NODE_VERSION-linux-x64.tar.gz&quot;&lt;/span&gt; SHASUMS256.txt \
  &amp;amp;&amp;amp; ln -s /usr/local/bin/node /usr/local/bin/nodejs

&lt;span class=&quot;kw&quot;&gt;WORKDIR&lt;/span&gt; /app
&lt;span class=&quot;kw&quot;&gt;COPY&lt;/span&gt; --from=builder /app .
&lt;span class=&quot;kw&quot;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span class=&quot;st&quot;&gt;&quot;dotnet&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;myapp.dll&quot;&lt;/span&gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;captain-definition&quot;&gt;captain-definition&lt;/h3&gt;
&lt;p&gt;虽然上面介绍了 &lt;code&gt;Dockerfile&lt;/code&gt;，但最终要使用的是 &lt;code&gt;captain-definition&lt;/code&gt; 这个文件，这个文件的详细说明请看：&lt;a href=&quot;https://github.com/githubsaturn/captainduckduck/wiki/Captain-Definition-File&quot; class=&quot;uri&quot;&gt;https://github.com/githubsaturn/captainduckduck/wiki/Captain-Definition-File&lt;/a&gt;，不过 captainduckduck 的作者提供了一个在线转换工具：&lt;a href=&quot;https://githubsaturn.github.io/dockerfile-to-captain/&quot; class=&quot;uri&quot;&gt;https://githubsaturn.github.io/dockerfile-to-captain/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;转换后的结果如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;sourceCode json&quot;&gt;
&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;schemaVersion&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dt&quot;&gt;&quot;dockerfileLines&quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# Sample contents of Dockerfile&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# Stage 1&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;FROM microsoft/aspnetcore-build AS builder&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;WORKDIR /source&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# caches restore result by copying csproj file separately&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;COPY ./src/*.csproj .&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;COPY ./src/package.json .&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# 如果你的服务器网络不好，请自行在这里修改 npm 仓库&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;RUN dotnet restore &amp;amp;&amp;amp; npm i&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# copies the rest of your code&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;COPY ./src/ .&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;RUN dotnet publish --output /app/ --configuration Release&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;# Stage 2&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;FROM microsoft/aspnetcore:2.0.5&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;ENV NODE_VERSION 9.3.0&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;RUN curl -SLO &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;https://mirrors.ustc.edu.cn/node/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;  &amp;amp;&amp;amp; curl -SLO --compressed &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;https://mirrors.ustc.edu.cn/node/v$NODE_VERSION/SHASUMS256.txt&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;  &amp;amp;&amp;amp; grep &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; node-v$NODE_VERSION-linux-x64.tar.gz&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; SHASUMS256.txt | sha256sum -c - &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;  &amp;amp;&amp;amp; tar -xf &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;node-v$NODE_VERSION-linux-x64.tar.gz&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; -C /usr/local --strip-components=1 --no-same-owner &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;  &amp;amp;&amp;amp; rm &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;node-v$NODE_VERSION-linux-x64.tar.gz&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; SHASUMS256.txt &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;  &amp;amp;&amp;amp; ln -s /usr/local/bin/node /usr/local/bin/nodejs&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;WORKDIR /app&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;COPY --from=builder /app .&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;st&quot;&gt;&quot;ENTRYPOINT [&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;dotnet&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;myapp.dll&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;]&quot;&lt;/span&gt;
  &lt;span class=&quot;ot&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里需要注意的是，即使 &lt;code&gt;captain-definition&lt;/code&gt; 文件位于项目根目录，但在服务端构建的时候，项目文件夹的内容会被克隆到 &lt;code&gt;./src&lt;/code&gt;，而由 captainduckduck 生成的 &lt;code&gt;Dockerfile&lt;/code&gt; 会位于 &lt;code&gt;./Dockerfile&lt;/code&gt;，所以在编写 Dockerfile 的时候，就应该考虑到这个情况。&lt;/p&gt;
&lt;h3 id=&quot;客户端命令行工具&quot;&gt;客户端命令行工具&lt;/h3&gt;
&lt;p&gt;captainduckduck 命令行工具可以用来让我们不用打开 Web 面板就来部署网站，命令行工具安装起来也很简单：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm i -g captainduckduck
# 或者
# yarn global add captainduckduck&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;接下来让我们连接到 captainduckduck 服务端：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;captainduckduck login&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;部署一个试试&quot;&gt;部署一个试试&lt;/h3&gt;
&lt;p&gt;部署网站之前需要先创建一个 App，首先登陆 Web 面板，切换到 App 页面，输入 App 的名字：&lt;code&gt;react&lt;/code&gt;，然后点击 &lt;strong&gt;Create A New App&lt;/strong&gt;。这样，一个 App 就创建完成了，现在我们可以关掉网站，接着在本地创建一个样例项目：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mkdir myapp
cd myapp
dotnet new react
yarn # Or npm i&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后把上面的 &lt;code&gt;caption-definition&lt;/code&gt; 文件添加到项目根目录。接着执行：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git init
git add .
git commit -m 'init commit'
captainduckduck deploy&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;稍等几分钟，你就可以打开 &lt;code&gt;http://react.something.example.com&lt;/code&gt; 来访问这个样例网站了。这里给出我的例子：&lt;a href=&quot;http://aspnetcore.app.gianthard.rocks/&quot;&gt;http://react.app.gianthard.rocks/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;更多功能&quot;&gt;更多功能&lt;/h2&gt;
&lt;p&gt;captainduckduck 还能跟代码托管系统，例如：Github、Gitlab 通过 WebHook 集成，实现持续的部署，关于更详细的介绍，请看项目 Wiki：&lt;a href=&quot;https://github.com/githubsaturn/captainduckduck/wiki&quot; class=&quot;uri&quot;&gt;https://github.com/githubsaturn/captainduckduck/wiki&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;参考列表：&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 14:11:00 +0000</pubDate>
<dc:creator>不如隐茶去</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/JacZhu/p/8463663.html</dc:identifier>
</item>
<item>
<title>Android 进程间通信 - 吴小龙同學</title>
<link>http://www.cnblogs.com/WuXiaolong/p/8463633.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/WuXiaolong/p/8463633.html</guid>
<description>&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;什么鬼！单例居然失效了，一个地方设置值，另个地方居然取不到，这怎么可能？没道理啊！排查半天，发现这两就不在一个进程里，才恍然大悟……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;按照操作系统中的描述：进程一般指一个执行单元，在 PC 和移动设备上指一个程序或者一个应用。&lt;/p&gt;

&lt;p&gt;我们都知道，系统为 APP 每个进程分配的内存是有限的，如果想获取更多内存分配，可以使用多进程，将一些看不见的服务、比较独立而又相当占用内存的功能运行在另外一个进程当中。&lt;/p&gt;

&lt;p&gt;先放出最终实践后的目录结构，有个大概印象，后面一一介绍。&lt;br/&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProcess2.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProcess3.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;AndroidManifest.xml 清单文件中注册 Activity、Service 等四大组件时，指定 android:process 属性即可开启多进程，如：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&amp;lt;activity
    android:name=&lt;span class=&quot;st&quot;&gt;&quot;.Process1Activity&quot;&lt;/span&gt;
    android:process=&lt;span class=&quot;st&quot;&gt;&quot;:process1&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;activity
    android:name=&lt;span class=&quot;st&quot;&gt;&quot;.Process2Activity&quot;&lt;/span&gt;
    android:process=&lt;span class=&quot;st&quot;&gt;&quot;com.wuxiaolong.androidprocesssample.process2&quot;&lt;/span&gt; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProcess1.png&quot;/&gt;&lt;br/&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;1、&lt;code&gt;com.wuxiaolong.androidprocesssample&lt;/code&gt;，主进程，默认的是应用包名；&lt;/p&gt;
&lt;p&gt;2、&lt;code&gt;android:process=&quot;:process1&quot;&lt;/code&gt;，“：”开头，是简写，完整进程名包名 + &lt;code&gt;:process1&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;3、&lt;code&gt;android:process=&quot;com.wuxiaolong.androidprocesssample.process2&quot;&lt;/code&gt;，以小写字母开头的，属于全局进程，其他应用可以通过 ShareUID 进行数据共享；&lt;/p&gt;
&lt;p&gt;4、进程命名跟包名的命名规范一样。&lt;/p&gt;

&lt;h2 id=&quot;application-多次创建&quot;&gt;Application 多次创建&lt;/h2&gt;
&lt;p&gt;我们自定义一个 Application 类，&lt;code&gt;onCreate&lt;/code&gt; 方法进行打印 &lt;code&gt;Log.d(&quot;wxl&quot;, &quot;AndroidApplication onCreate&quot;);&lt;/code&gt; ，然后启动 Process1Activity:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt; D/wxl: AndroidApplication onCreate
com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt;:process1 D/wxl: AndroidApplication onCreate&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到确实被创建两次，原因见：&lt;a href=&quot;http://www.rogerblog.cn/2016/03/17/android-proess/&quot;&gt;android:process 的坑，你懂吗？&lt;/a&gt;多数情况下，我们都会在工程中自定义一个 Application 类，做一些全局性的初始化工作，因为我们要区分出来，让其在主进程进行初始化，网上解决方案：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;() {
    &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;();
    String processName = AndroidUtil.&lt;span class=&quot;fu&quot;&gt;getProcessName&lt;/span&gt;();
    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;getPackageName&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(processName)) {
        &lt;span class=&quot;co&quot;&gt;//初始化操作&lt;/span&gt;
        Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;AndroidApplication onCreate=&quot;&lt;/span&gt; + processName);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AndroidUtil：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getProcessName&lt;/span&gt;() {
    &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
        File file = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;st&quot;&gt;&quot;/proc/&quot;&lt;/span&gt; + android.&lt;span class=&quot;fu&quot;&gt;os&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Process&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;myPid&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;/&quot;&lt;/span&gt; + &lt;span class=&quot;st&quot;&gt;&quot;cmdline&quot;&lt;/span&gt;);
        BufferedReader mBufferedReader = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; BufferedReader(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; FileReader(file));
        String processName = mBufferedReader.&lt;span class=&quot;fu&quot;&gt;readLine&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;();
        mBufferedReader.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; processName;
    } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
        e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;静态成员和单例模式失效&quot;&gt;静态成员和单例模式失效&lt;/h2&gt;
&lt;p&gt;创建一个类 SingletonUtil：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; SingletonUtil {
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; SingletonUtil singletonUtil;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String userId = &lt;span class=&quot;st&quot;&gt;&quot;0&quot;&lt;/span&gt;;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; SingletonUtil &lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (singletonUtil == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
            singletonUtil = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;SingletonUtil&lt;/span&gt;();
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; singletonUtil;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; userId;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(String userId) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;userId&lt;/span&gt; = userId;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 MainActivity 进行设置：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;SingletonUtil.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;007&quot;&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Process1Activity 取值，打印：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;userId=&quot;&lt;/span&gt; + SingletonUtil.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;());&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发现打印 &lt;code&gt;userId=0&lt;/code&gt;，单例模式失效了，因为这两个进程不在同一内存了，自然无法共享。&lt;/p&gt;

&lt;h2 id=&quot;文件共享&quot;&gt;文件共享&lt;/h2&gt;
&lt;p&gt;既然内存不能共享，是不是可以找个共同地方，是的，可以把要共享的数据保存 SD 卡，实现共享。首先将 SingletonUtil 实现 Serializable 序列化，将对象存入 SD 卡，然后需要用的地方，反序列化，从 SD 卡取出对象，完整代码如下：&lt;/p&gt;
&lt;h3 id=&quot;singletonutil&quot;&gt;SingletonUtil&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; SingletonUtil &lt;span class=&quot;kw&quot;&gt;implements&lt;/span&gt; Serializable{
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; String ROOT_FILE_DIR = Environment.&lt;span class=&quot;fu&quot;&gt;getExternalStorageDirectory&lt;/span&gt;() + File.&lt;span class=&quot;fu&quot;&gt;separator&lt;/span&gt; + &lt;span class=&quot;st&quot;&gt;&quot;User&quot;&lt;/span&gt; + File.&lt;span class=&quot;fu&quot;&gt;separator&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; String USER_STATE_FILE_NAME_DIR = &lt;span class=&quot;st&quot;&gt;&quot;UserState&quot;&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; SingletonUtil singletonUtil;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String userId = &lt;span class=&quot;st&quot;&gt;&quot;0&quot;&lt;/span&gt;;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; SingletonUtil &lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (singletonUtil == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
            singletonUtil = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;SingletonUtil&lt;/span&gt;();
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; singletonUtil;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; userId;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(String userId) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;userId&lt;/span&gt; = userId;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;序列化和反序列化&quot;&gt;序列化和反序列化&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; AndroidUtil {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;createOrExistsDir&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; File file) {
        &lt;span class=&quot;co&quot;&gt;// 如果存在，是目录则返回true，是文件则返回false，不存在则返回是否创建成功&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; file != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (file.&lt;span class=&quot;fu&quot;&gt;exists&lt;/span&gt;() ? file.&lt;span class=&quot;fu&quot;&gt;isDirectory&lt;/span&gt;() : file.&lt;span class=&quot;fu&quot;&gt;mkdirs&lt;/span&gt;());
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 删除目录&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param dir &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;目录&lt;/span&gt;
&lt;span class=&quot;er&quot;&gt;     * @return {@code true}: 删除成功&amp;lt;br&amp;gt;{@code false}: 删除失败&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;deleteDir&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; File dir) {
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (dir == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
        &lt;span class=&quot;co&quot;&gt;// 目录不存在返回true&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!dir.&lt;span class=&quot;fu&quot;&gt;exists&lt;/span&gt;()) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;;
        &lt;span class=&quot;co&quot;&gt;// 不是目录返回false&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!dir.&lt;span class=&quot;fu&quot;&gt;isDirectory&lt;/span&gt;()) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
        &lt;span class=&quot;co&quot;&gt;// 现在文件存在且是文件夹&lt;/span&gt;
        File[] files = dir.&lt;span class=&quot;fu&quot;&gt;listFiles&lt;/span&gt;();
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (files != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; files.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt; != &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
            &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (File file : files) {
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (file.&lt;span class=&quot;fu&quot;&gt;isFile&lt;/span&gt;()) {
                    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!file.&lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;()) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
                } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (file.&lt;span class=&quot;fu&quot;&gt;isDirectory&lt;/span&gt;()) {
                    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;fu&quot;&gt;deleteDir&lt;/span&gt;(file)) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
                }
            }
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; dir.&lt;span class=&quot;fu&quot;&gt;delete&lt;/span&gt;();
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 序列化，对象存入SD卡&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param obj &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;         存储对象&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param destFileDir &lt;/span&gt;&lt;span class=&quot;co&quot;&gt; SD卡目标路径&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param destFileName &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;SD卡文件名&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;writeObjectToSDCard&lt;/span&gt;(Object obj, String destFileDir, String destFileName) {

        &lt;span class=&quot;fu&quot;&gt;createOrExistsDir&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(destFileDir));
        &lt;span class=&quot;fu&quot;&gt;deleteDir&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(destFileDir + destFileName));
        FileOutputStream fileOutputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
        ObjectOutputStream objectOutputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            fileOutputStream = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; FileOutputStream(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(destFileDir, destFileName));
            objectOutputStream = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; ObjectOutputStream(fileOutputStream);
            objectOutputStream.&lt;span class=&quot;fu&quot;&gt;writeObject&lt;/span&gt;(obj);

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;finally&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (objectOutputStream != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                    objectOutputStream.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();
                    objectOutputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
                }
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (fileOutputStream != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                    fileOutputStream.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();
                    fileOutputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
                }
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (IOException e) {
                e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            }

        }

    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 反序列化，从SD卡取出对象&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param destFileDir &lt;/span&gt;&lt;span class=&quot;co&quot;&gt; SD卡目标路径&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param destFileName &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;SD卡文件名&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; Object &lt;span class=&quot;fu&quot;&gt;readObjectFromSDCard&lt;/span&gt;(String destFileDir, String destFileName) {
        FileInputStream fileInputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;

        Object object = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
        ObjectInputStream objectInputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            fileInputStream = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; FileInputStream(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; File(destFileDir, destFileName));
            objectInputStream = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; ObjectInputStream(fileInputStream);
            object = objectInputStream.&lt;span class=&quot;fu&quot;&gt;readObject&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;finally&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (objectInputStream != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                    objectInputStream.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();
                    objectInputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
                }
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (fileInputStream != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                    fileInputStream.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();
                    fileInputStream = &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
                }
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (IOException e) {
                e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            }

        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; object;

    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要权限：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;uses-permission&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; android:name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;mainactivity-序列写入&quot;&gt;MainActivity 序列写入&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;SingletonUtil singletonUtil = SingletonUtil.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;();
singletonUtil.&lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;007&quot;&lt;/span&gt;);
AndroidUtil.&lt;span class=&quot;fu&quot;&gt;writeObjectToSDCard&lt;/span&gt;(singletonUtil, SingletonUtil.&lt;span class=&quot;fu&quot;&gt;ROOT_FILE_DIR&lt;/span&gt;, SingletonUtil.&lt;span class=&quot;fu&quot;&gt;USER_STATE_FILE_NAME_DIR&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;process1activity-反序列化取值&quot;&gt;Process1Activity 反序列化取值&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;Object object = AndroidUtil.&lt;span class=&quot;fu&quot;&gt;readObjectFromSDCard&lt;/span&gt;(SingletonUtil.&lt;span class=&quot;fu&quot;&gt;ROOT_FILE_DIR&lt;/span&gt;, SingletonUtil.&lt;span class=&quot;fu&quot;&gt;USER_STATE_FILE_NAME_DIR&lt;/span&gt;);
&lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (object != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
    SingletonUtil singletonUtil = (SingletonUtil) object;
    Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;userId=&quot;&lt;/span&gt; + singletonUtil.&lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;());&lt;span class=&quot;co&quot;&gt;//打印：userId=007&lt;/span&gt;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;aidl&quot;&gt;AIDL&lt;/h2&gt;
&lt;p&gt;AIDL，Android 接口定义语言，定义客户端与服务端进程间通信，服务端有处理多线程时，才有必要使用 AIDL，不然可以使用 Messenger ，后文介绍。&lt;/p&gt;
&lt;h3 id=&quot;单个应用多个进程&quot;&gt;单个应用，多个进程&lt;/h3&gt;
&lt;h4 id=&quot;服务端&quot;&gt;服务端&lt;/h4&gt;
&lt;p&gt;AIDL 传递数据有基本类型 int，long，boolean，float，double，也支持 String，CharSequence，List，Map，传递对象需要实现 Parcelable 接口，这时需要指定 in（客户端数据对象流向服务端）、out （数据对象由服务端流向客户端）。&lt;/p&gt;
&lt;p&gt;1、Userbean.java&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; UserBean &lt;span class=&quot;kw&quot;&gt;implements&lt;/span&gt; Parcelable {
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; userId;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String userName;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; userId;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; userId) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;userId&lt;/span&gt; = userId;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;getUserName&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; userName;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setUserName&lt;/span&gt;(String userName) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;userName&lt;/span&gt; = userName;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserBean&lt;/span&gt;() {

    }

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserBean&lt;/span&gt;(Parcel in) {
        userId = in.&lt;span class=&quot;fu&quot;&gt;readInt&lt;/span&gt;();
        userName = in.&lt;span class=&quot;fu&quot;&gt;readString&lt;/span&gt;();
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@return &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;0 或 1 ，1 含有文件描述符&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;describeContents&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 系列化&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param dest &lt;/span&gt;&lt;span class=&quot;co&quot;&gt; 当前对象&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param flags &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;0 或 1，1 代表当前对象需要作为返回值，不能立即释放资源&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;writeToParcel&lt;/span&gt;(Parcel dest, &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; flags) {
        dest.&lt;span class=&quot;fu&quot;&gt;writeInt&lt;/span&gt;(userId);
        dest.&lt;span class=&quot;fu&quot;&gt;writeString&lt;/span&gt;(userName);
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 反序列化&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; Creator&amp;lt;UserBean&amp;gt; CREATOR = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Creator&amp;lt;UserBean&amp;gt;() {
        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; UserBean &lt;span class=&quot;fu&quot;&gt;createFromParcel&lt;/span&gt;(Parcel in) {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserBean&lt;/span&gt;(in);
        }

        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; UserBean[] &lt;span class=&quot;fu&quot;&gt;newArray&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; size) {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; UserBean[size];
        }
    };

}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、UserBean.aidl&lt;/p&gt;
&lt;p&gt;Userbean.java 同包下创建对应的 UserBean.aidl 文件，与 aidl 调用和交互。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;co&quot;&gt;// UserBean.aidl&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;package com.wuxiaolong.androidprocesssample;&lt;/span&gt;

parcelable UserBean;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3、IUserManager.aidl&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// IUserManager.aidl
package com.wuxiaolong.androidprocesssample;

// Declare any non-default types here with import statements
//手动导入
import com.wuxiaolong.androidprocesssample.UserBean;

interface IUserManager {

    //基本数据类型：int，long，boolean，float，double，String
    void hello(String aString);

    //非基本数据类型，传递对象
    void getUser(in UserBean userBean);//in 客户端-&amp;gt;服务端


}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、服务类&lt;/p&gt;
&lt;p&gt;新建 AIDLService 继承 Service，并且实现 onBind() 方法返回一个你实现生成的 Stub 类，把它暴露给客户端。Stub 定义了一些辅助的方法，最显著的就是 asInterface()，它是用来接收一个 IBinder，并且返回一个 Stub 接口的实例 。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; AIDLService &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Service {

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Binder binder = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; IUserManager.&lt;span class=&quot;fu&quot;&gt;Stub&lt;/span&gt;() {

        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getUser&lt;/span&gt;(UserBean userBean) &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; RemoteException {
            Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, userBean.&lt;span class=&quot;fu&quot;&gt;getUserId&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;,&quot;&lt;/span&gt; + userBean.&lt;span class=&quot;fu&quot;&gt;getUserName&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot; from AIDL Service&quot;&lt;/span&gt;);
        }

        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;hello&lt;/span&gt;(String aString) &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; RemoteException {
            Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, aString + &lt;span class=&quot;st&quot;&gt;&quot; from AIDL Service&quot;&lt;/span&gt;);
        }
    };

    &lt;span class=&quot;fu&quot;&gt;@Nullable&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; IBinder &lt;span class=&quot;fu&quot;&gt;onBind&lt;/span&gt;(Intent intent) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; binder;
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AndroidManifest 注册：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&amp;lt;service
    android:name=&lt;span class=&quot;st&quot;&gt;&quot;.AIDLService&quot;&lt;/span&gt;
    android:process=&lt;span class=&quot;st&quot;&gt;&quot;:aidlRemote&quot;&lt;/span&gt; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上创建完毕，build clean 下，会自动生成 aidl 对应的 java 类供客户端调用。&lt;/p&gt;
&lt;h4 id=&quot;客户端&quot;&gt;客户端&lt;/h4&gt;
&lt;p&gt;1、app/build.gradle&lt;/p&gt;
&lt;p&gt;需要指定 aidl 路径：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;android {
    &lt;span class=&quot;co&quot;&gt;//……&lt;/span&gt;
    sourceSets {
        main {
            java.&lt;span class=&quot;fu&quot;&gt;srcDirs&lt;/span&gt; = ['src/main/java', 'src/main/aidl']
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、启动服务，建立联系&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; MainActivity &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; AppCompatActivity {

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; ServiceConnection aidlServiceConnection = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ServiceConnection&lt;/span&gt;() {
        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onServiceConnected&lt;/span&gt;(ComponentName name, IBinder service) {
            IUserManager remoteService = IUserManager.&lt;span class=&quot;fu&quot;&gt;Stub&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;asInterface&lt;/span&gt;(service);
            UserBean userBean = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserBean&lt;/span&gt;();
            userBean.&lt;span class=&quot;fu&quot;&gt;setUserId&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;);
            userBean.&lt;span class=&quot;fu&quot;&gt;setUserName&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;WuXiaolong&quot;&lt;/span&gt;);
            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                remoteService.&lt;span class=&quot;fu&quot;&gt;getUser&lt;/span&gt;(userBean);
                remoteService.&lt;span class=&quot;fu&quot;&gt;hello&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;Hello&quot;&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (RemoteException e) {
                e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            }
        }

        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onServiceDisconnected&lt;/span&gt;(ComponentName name) {

        }
    };

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;(Bundle savedInstanceState) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);
        &lt;span class=&quot;fu&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;fu&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;activity_main&lt;/span&gt;);

        Intent intent = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;, AIDLService.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
        &lt;span class=&quot;fu&quot;&gt;bindService&lt;/span&gt;(intent, aidlServiceConnection, Context.&lt;span class=&quot;fu&quot;&gt;BIND_AUTO_CREATE&lt;/span&gt;);
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onDestroy&lt;/span&gt;() {
        &lt;span class=&quot;fu&quot;&gt;unbindService&lt;/span&gt;(aidlServiceConnection);
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onDestroy&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt;:aidlRemote D/wxl: &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,WuXiaolong from AIDL Service
com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt;:aidlRemote D/wxl: Hello from AIDL Service&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;多个应用多进程&quot;&gt;多个应用，多进程&lt;/h3&gt;
&lt;p&gt;和上面基本差不多，把服务端和客户端分别创建的两个项目，可以互相通信，注意点：&lt;/p&gt;
&lt;p&gt;1、服务端创建好的 aidl 文件，带包拷贝到客户端项目中；&lt;/p&gt;
&lt;p&gt;2、客户端启动服务是隐式启动，Android 5.0 中对 service 隐式启动有限制，必须通过设置 action 和 package，代码如下：&lt;/p&gt;
&lt;p&gt;AndroidManifest 注册：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;service&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; android:name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;.AIDLService&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;intent-filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;action&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; android:name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;android.intent.action.AIDLService&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动服务：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;Intent intent = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Intent&lt;/span&gt;();
intent.&lt;span class=&quot;fu&quot;&gt;setAction&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;android.intent.action.AIDLService&quot;&lt;/span&gt;);
intent.&lt;span class=&quot;fu&quot;&gt;setPackage&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;com.wuxiaolong.aidlservice&quot;&lt;/span&gt;);
&lt;span class=&quot;fu&quot;&gt;bindService&lt;/span&gt;(intent, serviceConnection, Context.&lt;span class=&quot;fu&quot;&gt;BIND_AUTO_CREATE&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;使用-messenger&quot;&gt;使用 Messenger&lt;/h2&gt;
&lt;p&gt;Messenger 可以在不同的进程传递 Message 对象，而我们可以在 Message 对象中放入我们所需要的数据，这样就能实现进程间通信了。Messenger 底层实现是 AIDL，对 AIDL 做了封装， 不需要处理多线程，实现步骤也分为服务端和客户端，代码如下：&lt;/p&gt;
&lt;h3 id=&quot;服务端-1&quot;&gt;服务端&lt;/h3&gt;
&lt;p&gt;MessengerService：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; MessengerService &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Service {

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; Messenger messenger = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Messenger&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;MessengerHandler&lt;/span&gt;());


    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; MessengerHandler &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Handler {
        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;handleMessage&lt;/span&gt;(Message msg) {
            &lt;span class=&quot;kw&quot;&gt;switch&lt;/span&gt; (msg.&lt;span class=&quot;fu&quot;&gt;what&lt;/span&gt;) {
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; MainActivity.&lt;span class=&quot;fu&quot;&gt;MSG_FROM_CLIENT&lt;/span&gt;:
                    &lt;span class=&quot;co&quot;&gt;//2、服务端接送消息&lt;/span&gt;
                    Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;msg=&quot;&lt;/span&gt; + msg.&lt;span class=&quot;fu&quot;&gt;getData&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;msg&quot;&lt;/span&gt;));

                    &lt;span class=&quot;co&quot;&gt;//4、服务端回复消息给客户端&lt;/span&gt;
                    Messenger serviceMessenger = msg.&lt;span class=&quot;fu&quot;&gt;replyTo&lt;/span&gt;;
                    Message replyMessage = Message.&lt;span class=&quot;fu&quot;&gt;obtain&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, MSG_FROM_SERVICE);
                    Bundle bundle = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Bundle&lt;/span&gt;();
                    bundle.&lt;span class=&quot;fu&quot;&gt;putString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;msg&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;Hello from service.&quot;&lt;/span&gt;);
                    replyMessage.&lt;span class=&quot;fu&quot;&gt;setData&lt;/span&gt;(bundle);
                    &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                        serviceMessenger.&lt;span class=&quot;fu&quot;&gt;send&lt;/span&gt;(replyMessage);
                    } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (RemoteException e) {
                        e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
                    }
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
            }
            &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;handleMessage&lt;/span&gt;(msg);
        }
    }

    &lt;span class=&quot;fu&quot;&gt;@Nullable&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; IBinder &lt;span class=&quot;fu&quot;&gt;onBind&lt;/span&gt;(Intent intent) {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; messenger.&lt;span class=&quot;fu&quot;&gt;getBinder&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AndroidManafest.xml 注册：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;service&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;    android:name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;.MessengerService&quot;&lt;/span&gt;
&lt;span class=&quot;ot&quot;&gt;    android:process=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;:messengerRemote&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;客户端-1&quot;&gt;客户端&lt;/h3&gt;
&lt;p&gt;MainActivity&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; MainActivity &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; AppCompatActivity {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; MSG_FROM_CLIENT = &lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; MSG_FROM_SERVICE = &lt;span class=&quot;dv&quot;&gt;1001&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Messenger clientMessenger;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; ServiceConnection messengerServiceConnection = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;ServiceConnection&lt;/span&gt;() {
        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onServiceConnected&lt;/span&gt;(ComponentName name, IBinder service) {
            &lt;span class=&quot;co&quot;&gt;//1、发送消息给服务端&lt;/span&gt;
            clientMessenger = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Messenger&lt;/span&gt;(service);
            Message message = Message.&lt;span class=&quot;fu&quot;&gt;obtain&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, MSG_FROM_CLIENT);
            Bundle bundle = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Bundle&lt;/span&gt;();
            bundle.&lt;span class=&quot;fu&quot;&gt;putString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;msg&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;Hello from client.&quot;&lt;/span&gt;);
            message.&lt;span class=&quot;fu&quot;&gt;setData&lt;/span&gt;(bundle);
            &lt;span class=&quot;co&quot;&gt;//3、这句是服务端回复客户端使用&lt;/span&gt;
            message.&lt;span class=&quot;fu&quot;&gt;replyTo&lt;/span&gt; = getReplyMessenger;
            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                clientMessenger.&lt;span class=&quot;fu&quot;&gt;send&lt;/span&gt;(message);
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (RemoteException e) {
                e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            }
        }

        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onServiceDisconnected&lt;/span&gt;(ComponentName name) {

        }
    };

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; Messenger getReplyMessenger = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Messenger&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;MessengerHandler&lt;/span&gt;());

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; MessengerHandler &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Handler {
        &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;handleMessage&lt;/span&gt;(Message msg) {
            &lt;span class=&quot;kw&quot;&gt;switch&lt;/span&gt; (msg.&lt;span class=&quot;fu&quot;&gt;what&lt;/span&gt;) {
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; MainActivity.&lt;span class=&quot;fu&quot;&gt;MSG_FROM_SERVICE&lt;/span&gt;:
                    &lt;span class=&quot;co&quot;&gt;//5、服务端回复消息给客户端，客户端接送消息&lt;/span&gt;
                    Log.&lt;span class=&quot;fu&quot;&gt;d&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;wxl&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;msg=&quot;&lt;/span&gt; + msg.&lt;span class=&quot;fu&quot;&gt;getData&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getString&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;msg&quot;&lt;/span&gt;));
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
            }
            &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;handleMessage&lt;/span&gt;(msg);
        }
    }


    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;(Bundle savedInstanceState) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onCreate&lt;/span&gt;(savedInstanceState);
        &lt;span class=&quot;fu&quot;&gt;setContentView&lt;/span&gt;(R.&lt;span class=&quot;fu&quot;&gt;layout&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;activity_main&lt;/span&gt;);
 
        &lt;span class=&quot;co&quot;&gt;// Messenger 进行通信&lt;/span&gt;
        Intent intent = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Intent&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;, MessengerService.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
        &lt;span class=&quot;fu&quot;&gt;bindService&lt;/span&gt;(intent, messengerServiceConnection, Context.&lt;span class=&quot;fu&quot;&gt;BIND_AUTO_CREATE&lt;/span&gt;);

    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;onDestroy&lt;/span&gt;() {
        &lt;span class=&quot;fu&quot;&gt;unbindService&lt;/span&gt;(messengerServiceConnection);
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;onDestroy&lt;/span&gt;();
    }

}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印信息：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt;:remote D/wxl: msg=Hello from client.
com.&lt;span class=&quot;fu&quot;&gt;wuxiaolong&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;androidprocesssample&lt;/span&gt; D/wxl: msg=Hello from service.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;《Android开发艺术探索》一书关于 Android 进程间通信这块，还有 ContentProvider、Socket 方式，由于篇幅所限，这里不一一介绍了，有兴趣可以自行查看。如果需要这次 Sample 的源码，可在我的公众号「吴小龙同学」回复：「AndroidProcessSample」获取。&lt;/p&gt;

&lt;p&gt;《Android开发艺术探索》&lt;br/&gt;&lt;a href=&quot;http://yifeng.studio/2017/06/16/android-multi-process-things/&quot;&gt;Android 中的多进程，你值得了解的一些知识&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/ydxlt/article/details/50812559&quot;&gt;Android使用AIDL实现跨进程通讯（IPC）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_WuXiaolong1.JPG&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 13:57:00 +0000</pubDate>
<dc:creator>吴小龙同學</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/WuXiaolong/p/8463633.html</dc:identifier>
</item>
<item>
<title>试着把.net的GC讲清楚(1) - 奔跑的Abbott</title>
<link>http://www.cnblogs.com/fenqi/p/8463595.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fenqi/p/8463595.html</guid>
<description>&lt;h3 id=&quot;什么是gc&quot;&gt;什么是GC？&lt;/h3&gt;
&lt;p&gt;GC（garbage collection）是对内存管理中回收已经不用的内存的一种机制，我们熟知的java和.net都有自己的GC机制，是内存管理的一部分。&lt;/p&gt;
&lt;p&gt;为什么会有GC呢？是因为动态的内存分配和分布操作系统是不管的，得各类语言自己实现，例如c和c++自己需要手动管理分配的内存资源，如果不手动释放，那么会造成已经无用的内存不能被操作系统识别使用，也就是所谓的内存泄漏。&lt;/p&gt;
&lt;p&gt;.net的GC都是发生在堆（heap），因为这个动态的内存是在堆上分配的。为什么.net 没有像c++一样提供手动管理内存的操作？因为手工管理内存非常容易出问题，开发人员不应花费时间在这个上面，避免人为问题，就找一个管理内存的“人”来，处理这些事情，于是GC就出现了（说一句话，以前自己是c、c++出身，真的一个语言影响一个人的知识广度和深度），大家都不用考虑这些事情，集中在重要的事情上，就像自己找了个管家，而且是专业的，不会出错的那种，省心。&lt;/p&gt;
&lt;h3 id=&quot;gc有哪些分类&quot;&gt;GC有哪些分类？&lt;/h3&gt;
&lt;p&gt;我了解到的有：Reference Count、Mark and Sweep（升级版Mark and Compact）、Copy and Collection&lt;br/&gt;现在java和.net 使用的是Mark and Compact算法，这个算法是从Mark and Sweep算法演变过来的，下来就讲讲Mark and Sweep。&lt;/p&gt;
&lt;p&gt;Mark and Sweep：分为两个阶段，第一阶段标记所有现在还可以使用的对象，第二阶段清除标记的对象之外的内存。&lt;/p&gt;
&lt;p&gt;在.net中，GC管理了一组root（由全局对象组成），通过遍历所有的root机器引用的子对象，进行内存中的存活对象的标记，之后就清除未标记为存活的对象。这就是Mark and Sweep算法，但是这个造成了一个问题，就是回收后的内存是成了筛子了，这个时候如果来一个大的对象需要分配内存，那么空余内存总额大于分配对象的大小，但是找不到一个连续的可以容下这个对象大小的内存，这个时候怎么办？其实模拟操作系统，再做一个内存管理的机制就行，在逻辑上看着连续就行了。当然这个不是本次讨论的对象，Mark and Compact解决了内存不连续的问题，因为它把内存做了一次整理（把不相邻的内存移动到一块，看着就连续了）&lt;/p&gt;
&lt;p&gt;Mark and Compact：在Mark and Sweep基础上做了一次内存整理，因为内存做整理的时候，对象的引用是不能被使用的，引用地址会变，所以啊，GC的时候，使用到这些对象的线程什么的是会被挂起等待的，也不能经常回收内存，不然性能堪忧，就是因为回收导致挂起了。&lt;/p&gt;
&lt;h3 id=&quot;啥是0代1代2代对象&quot;&gt;啥是0代、1代、2代对象？&lt;/h3&gt;
&lt;p&gt;要解释这个问题，还得从内存回收时间说起，这里有个假设（其实也是规则）回收一个内存中所有对的时间大于内存中部分对象的时间，于是就把内存中对象分成了几代，0代对象指最新分配内存的对象，一次类推。其实多少代，这个由GC决定，.net中GC中代数是3代（这个值暂时不能确定能不能改）。&lt;/p&gt;
&lt;p&gt;GC怎么管理代对象呢？一般情况下，分配的对象都是0代对象，在分配对象内存时，如果0代对象的内存已经不能容纳新对象了（超过0代对象内存的上限），在gc回收一次0代后，这个还存活的对象代数加1（&lt;code&gt;GC.Collect();GC.GetGeneration(obj)&lt;/code&gt;代码验证过，现在不清楚自动触发是不是回收一次加1），同理如果1代对象超过了1代内存的上限，也会触发gc回收1代对象。那么这个内存回收是定是这样的么？不一定，毕竟微软提供了手动触发gc的功能，就是&lt;code&gt;GC.Collect()&lt;/code&gt;，有兴趣可以翻翻这个方法。&lt;/p&gt;
&lt;p&gt;代数的大小，查了很多资料之后，只发现一篇文章说到，.net中0代和1代之和为16MB，2代内存上限非常的大，具体有framework版本和其他一些因素决定的。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;//验证回收一次，对象就升一代
Object obj=new Object();
Console.WriteLine(GC.GetGeneration(obj));
GC.Collect();
Console.WriteLine(GC.GetGeneration(obj));
GC.Collect();
Console.WriteLine(GC.GetGeneration(obj));&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;finalizedispose是啥如何理解&quot;&gt;Finalize、Dispose是啥？如何理解？&lt;/h3&gt;
&lt;p&gt;.net中有托管资源和非托管资源的分类，托管资源.net自己就可以管理，非托管资源，需要特殊的方法，也就是托管资源在GC的时候，.net可以自己识别，但是非托管资源，GC是自动释放不了的。&lt;/p&gt;
&lt;p&gt;什么是非托管资源？这让我想起之前用mfc写windows程序的时候，什么画刷、画笔、com之类的，就是非托管资源，还有数据库连接、文件、套接字之类的也是，哦，还有流之类的都是。&lt;/p&gt;
&lt;p&gt;这些非托管资源，一般都需要自己释放资源，.net提供了IDsiposable的接口，实现这个接口的方法，在里面进行资源释放，使用using语句来简化这个非托管资源的释放工作。&lt;/p&gt;
&lt;p&gt;Finalize：这个也能用来释放非托管资源，与IDsiposable接口区别是，它的调用时机是不定的，因为它是由GC调用的，GC调用真的不定的，因为调用一次GC调用会降低程序性能（前面说的，内存压缩导致引用需要变化，而因为线程挂起），下面来说说为什么它是由GC调用的。&lt;/p&gt;
&lt;p&gt;在创建对象的时候，会把还有析构函数（编译之后，就是Finalize方法，与c++中的析构函数不同）的对象引用存到一个叫做Finalizer Queue的list中，在GC的时候，如果一个对象是无用的，而且在Finalizer Queue里面有引用，此次并不回收，并且会把引用从Finalizer Queue移到Freachable Queue的list中，Freachable Queue的list有内容之后会启动一个线程，然后执行里面的引用的对象的析构函数，执行完毕后把对象的引用删除，等待下次GC的时候，才进行回收此对象。&lt;/p&gt;
&lt;p&gt;所以Finalize的特点就是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;啥时候调用不定&lt;/li&gt;
&lt;li&gt;这类对象，需要至少两次GC才能回收。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;为什么至少两次，而不是两次，因为.net为我们提供了一个把对象引用放回Finalizer Queue的方法，GC.ReRegisterForFinalize()，如果在Finalize中调用了这个代码，那么就死不了了。&lt;/p&gt;
&lt;p&gt;微软不建议使用Finalize方法，就像其他博客中提到的，我们可以把它留作后手，万一那个非托管资源该释放没有释放，可以在Finalize方法中做为最后的保险（算是避免人为原因）。&lt;/p&gt;
&lt;p&gt;我确实释放完了非托管资源，就是不想执行Finalize方法，微软也提供了方法了:GC.SuppressFinalize(this)，这个方法执行了之后就把这个对象的引用中Finalizer Queue移除了。&lt;/p&gt;
&lt;h3 id=&quot;loh是什么&quot;&gt;LOH是什么？&lt;/h3&gt;
&lt;p&gt;LOH（large object heap）是为了大对象而专门设计的一个堆，多大的对象会分配到这个堆里面？超过85000个字节的就会。其实这个loh产生原因大对象移动非常的耗时，还不如不移动，例如，3个对象ABC，AB对象大约占个80个字节，C对象占个10000个字节，假设AB对象被回收，那么在移动阶段，就要把10000个字节，往前移动80字节，还不如不移动性能高。这个85000字节也是一个经验值。&lt;/p&gt;
&lt;p&gt;既然loh不能移动，那么肯定不能用Mark and Compact中的移动了（使用什么算法现在还不清楚，猜测是Mark and Sweep，或许是特例)，并且在只有2代对象回收的时候才进行回收。&lt;/p&gt;
&lt;h3 id=&quot;gc模式&quot;&gt;GC模式？&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;workstation mode：用于单处理器的系统中，频繁回收，从而阻止一次长时间的回收对程序的挂起时间。&lt;/li&gt;
&lt;li&gt;server mode：用于多处理器的系统中，为每个处理器都创建一个GC Heap，该模式特点是，分配内存较大，能不回收就不回收，回收时候耗时太长。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其中有Concurrent GC 工作方式，其中workstation mode和server mode都可以配置，在单处理器上设置为true也不生效，主要用于用户线程在gc时候可以大部分时间和gc线程并发，详细可以参考：&lt;a href=&quot;https://blogs.msdn.microsoft.com/seteplia/2017/01/05/understanding-different-gc-modes-with-concurrency-visualizer/&quot; class=&quot;uri&quot;&gt;https://blogs.msdn.microsoft.com/seteplia/2017/01/05/understanding-different-gc-modes-with-concurrency-visualizer/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;啥时候需要手动gc&quot;&gt;啥时候需要手动gc？&lt;/h3&gt;
&lt;p&gt;资源特别紧张的时候，例如之前面试的一家公司，系统是在azure上，内存什么的特别贵，这个时候手动gc可能其中一种手段了。&lt;/p&gt;
&lt;h3 id=&quot;最后&quot;&gt;最后&lt;/h3&gt;
&lt;p&gt;其实gc的最耗时还是在算法的选择上，比如Mark and Compact中的把内存合并成连续的，这个才是耗时的，如果内存足够多，根本就不需要考虑移动内存。&lt;br/&gt;或者像我之前提的，再在内存上面做一次内存映射的管理，也可以避免内存不连续的问题，当然肯定会遇到各种各样的问题。&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 13:47:00 +0000</pubDate>
<dc:creator>奔跑的Abbott</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fenqi/p/8463595.html</dc:identifier>
</item>
<item>
<title>使用Spring Boot搭建应用开发框架(一) —— 基础架构 - bojiangzhou</title>
<link>http://www.cnblogs.com/chiangchou/p/sunny-1.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chiangchou/p/sunny-1.html</guid>
<description>&lt;h2&gt;Spring的简史&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;第一阶段：XML配置，在Spring1.x时代，使用Spring开发满眼都是xml配置的Bean，随着项目的扩大，我们需要把xml配置文件分放到不同的配置文件里，那时候需要频繁的在开发的类和配置文件之间切换。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第二阶段：注解配置，在Spring2.x时代，Spring提供声明Bean的注解，大大减少了配置量。应用的基本配置用xml，业务配置用注解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三阶段：Java配置，从Spring3.x到现在，Spring提供了Java配置，使用Java配置可以让你更理解你所配置的Bean。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot：使用“习惯优于配置”的理念让你的项目快速运行起来。使用Spring Boot很容易创建一个独立运行、准生产级别的基于Spring框架的项目，使用Spring Boot你可以不用或者只需要很少的Spring配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面就来使用Spring Boot一步步搭建一个前后端分离的应用开发框架，并且以后不断的去完善这个框架，往里面添加功能。后面以实战为主，不会介绍太多概念，取而代之的是详细的操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;零、开发技术简介&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;开发平台：windows&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;开发工具：Intellij IDEA 2017.1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;JDK：Java 8&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Maven：maven-3.3.9&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;服务器：tomcat 8.0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数据库：MySQL 5.7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数据源：Druid1.1.6&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;缓存：Redis 3.2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;日志框架：SLF4J+Logback&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot：1.5.7.RELEASE&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ORM框架：MyBatis+通用Mapper&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot官方文档：&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#boot-documentation&quot; target=&quot;_blank&quot;&gt;Spring Boot Reference Guide&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;一、创建项目&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;这一节创建项目的基础结构，按照spring boot的思想，将各个不同的功能按照starter的形式拆分开来，做到灵活组合，并简单介绍下Spring Boot相关的东西。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;1、创建工程&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;① 通过File &amp;gt; New &amp;gt; Project，新建工程，选择Spring Initializr，然后Next。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171226221318776-151588238.png&quot; alt=&quot;&quot; width=&quot;867&quot; height=&quot;586&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;② 尽量为自己的框架想个好点的名字，可以去申请个自己的域名。我这里项目名称为Sunny，项目路径为com.lyyzoo.sunny。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228115636753-675268462.png&quot; alt=&quot;&quot; width=&quot;876&quot; height=&quot;590&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③ 这里先什么都不选，后面再去集成。注意我的Spring Boot版本为1.5.9。Next&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171226222430698-885431402.png&quot; alt=&quot;&quot; width=&quot;865&quot; height=&quot;584&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;④ 定义好工程的目录，用一个专用目录吧，不要在一个目录下和其它东西杂在一起。之后点击Finish。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228120111113-1134199104.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上面说的这么详细，只有一个目的，从一个开始就做好规范。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;⑤ 生成的项目结构如下，可以自己去看下pom.xml里的内容。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228120412160-667145074.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2、创建Starter&lt;/h3&gt;
&lt;p&gt;先创建一个core核心、cache缓存、security授权认证，其它的后面再集成进去。&lt;/p&gt;
&lt;p&gt;跟上面一样的方式，在Sunny下创建sunny-starter-core、sunny-starter-cache、sunny-starter-security子模块。&lt;/p&gt;
&lt;p&gt;这样分模块后，我们以后需要哪个模块就引入哪个模块即可，如果哪个模块不满足需求，还可以重写该模块。&lt;/p&gt;
&lt;p&gt;最终的项目结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211160328732-1056148592.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3、启动项目&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;首先在core模块下来启动并了解SpringBoot项目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;① 在com.lyyzoo.core根目录下，有一个SunnyStarterCoreApplication，这是SpringBoot的入口类，通常是*Application的命名。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;入口类里有一个main方法，其实就是一个标准的Java应用的入口方法。在main方法中使用SpringApplication.run启动Spring Boot项目。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后看看@SpringBootApplication注解，@SpringBootApplication是Spring Boot的核心注解，是一个组合注解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;@EnableAutoConfiguration让Spring Boot根据类路径中的jar包依赖为当前项目进行自动配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot会自动扫描@SpringBootApplication所在类的同级包以及下级包里的Bean。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180124230323350-443918769.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171226230109979-883276448.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;② 先启动项目，这里可以看到有一个Spring Boot的启动程序，点击右边的按钮启动项目。看到控制台Spring的标志，就算是启动成功了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180124234004881-1975954784.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180124234031022-605009081.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③ 替换默认的banner&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可以到http://patorjk.com/software/taag/这个网站生成一个自己项目的banner。创建banner.txt并放到resources根目录下。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180124234142303-1112201799.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;4、Spring Boot 配置&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;① 配置文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot使用一个全局的配置文件application.properties或application.yaml，放置在src/main/resources目录下。我们可以在这个全局配置文件中对一些默认的配置值进行修改。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体有哪些配置可到官网查找，有非常多的配置，不过大部分使用默认即可。&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#appendix&quot; target=&quot;_blank&quot;&gt;Common application properties&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后，需要为不同的环境配置不同的配置文件，全局使用application-{profile}.properties指定不同环境配置文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我这里增加了开发环境(dev)和生产环境(prod)的配置文件，并通过在application.properties中设置spring.profiles.active=dev来指定当前环境。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180124234434147-1289620473.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;② starter pom&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot为我们提供了简化开发绝大多数场景的starter pom，只要使用了应用场景所需的starter pom，无需繁杂的配置，就可以得到Spring Boot为我们提供的自动配置的Bean。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;后面我们将会通过加入这些starter来一步步集成我们想要的功能。具体有哪些starter，可以到官网查看：&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#using-boot-starter&quot; target=&quot;_blank&quot;&gt;Starters&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③ 自动配置&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spring Boot关于自动配置的源码在spring-boot-autoconfigure中如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171227010757088-1830788539.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们可以在application.properties中加入debug=true，查看当前项目中已启用和未启用的自动配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171227010907995-1187714234.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们在application.properties中的配置其实就是覆盖spring-boot-autoconfigure里的默认配置，比如web相关配置在web包下。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;常见的如HttpEncodingProperties配置http编码，里面自动配置的编码为UTF-8。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;MultipartProperties，上传文件的属性，设置了上传最大文件1M。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ServerProperties，配置内嵌Servlet容器，配置端口、contextPath等等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228212026741-865159582.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之前说@SpringBootApplication是Spring Boot的核心注解，但他的核心功能是由@EnableAutoConfiguration注解提供的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;@EnableAutoConfiguration注解通过@Import导入配置功能，在AutoConfigurationImportSelector中，通过SpringFactoriesLoader.loadFactoryNames扫描META-INF/spring.factories文件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在spring.factories中，配置了需要自动配置的类，我们也可以通过这种方式添加自己的自动配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在spring-boot-autoconfigure下就有一个spring.factories，如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228003931581-1737388032.png&quot; alt=&quot;&quot; width=&quot;1500&quot; height=&quot;385&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;说了这么多，只为说明一点，Spring Boot为我们做了很多自动化的配置，搭建快速方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是，正因为它为我们做了很多事情，就有很多坑，有时候，出了问题，我们可能很难找出问题所在，这时候，我们可能就要考虑下是否是自动配置导致的，有可能配置冲突了，或者没有使用上自定义的配置等等。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;5、项目结构划分&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;core是项目的核心模块，结构初步规划如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　base是项目的基础核心，定义一些基础类，如BaseController、BaseService等；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    cache是缓存相关；&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    &lt;span&gt;config是配置中心，模块所有的配置放到config里统一管理；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;    &lt;span&gt;&lt;span&gt;&lt;span&gt;constants里定义系统的常量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;    &lt;span&gt;exception里封装一些基础的异常类；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　system是系统模块；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;    util里则是一些通用工具类；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180209002310982-1025123698.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;二、基础结构功能&lt;/h2&gt;
&lt;h3&gt;1、web支持&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;只需在pom.xml中加入spring-boot-starter-web的依赖即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之后，查看POM的依赖树(插件：Maven Helper)，可以看到引入了starter、tomcat、web支持等。可以看出，Sping Boot内嵌了servlet容器，默认tomcat。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;自动配置在WebMvcAutoConfiguration和WebMvcProperties里，可自行查看源码，一般我们不需添加其他配置就可以启动这个web项目了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228214008944-1067240664.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171228214358131-1698507455.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2、基础功能&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在core中添加一些基础的功能支持。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;① 首先引入一些常用的依赖库，主要是一些常用工具类，方便以后的开发。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('004fafe3-ef68-4b10-8e9b-397954c830f2')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_004fafe3-ef68-4b10-8e9b-397954c830f2&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_004fafe3-ef68-4b10-8e9b-397954c830f2&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('004fafe3-ef68-4b10-8e9b-397954c830f2',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_004fafe3-ef68-4b10-8e9b-397954c830f2&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; ******************************* 常用依赖库 ********************************** &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 针对开发IO流功能的工具类库 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.io.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 文件上传 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.fileupload.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-io&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 常用的集合操作，丰富的工具类 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-collections&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-collections&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.collections.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 操作javabean的工具包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-beanutils&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-beanutils&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.beanutils.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-collections&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-collections&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;exclusions&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 包含一些通用的编码解码算法. 如：MD5、SHA1、Base64等 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-codec&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-codec&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.codec.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 包含丰富的工具类如 StringUtils &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.apache.commons&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;commons-lang3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${commons.lang3.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    Guava工程包含了若干被Google的Java项目广泛依赖的核心库. 集合[collections] 、缓存[caching] 、原生类型支持[primitives support] 、
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;    并发库[concurrency libraries] 、通用注解[common annotations] 、字符串处理[string processing] 、I/O 等等。
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.google.guava&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;guava&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${guava.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;版本号如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180125001202209-1317650571.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;② 在base添加一个Result类，作为前端的返回对象，Controller的直接返回对象都是Result。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('8599f277-b36d-486b-bfdf-bc56032586a7')&quot; readability=&quot;37&quot;&gt;&lt;img id=&quot;code_img_closed_8599f277-b36d-486b-bfdf-bc56032586a7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8599f277-b36d-486b-bfdf-bc56032586a7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('8599f277-b36d-486b-bfdf-bc56032586a7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8599f277-b36d-486b-bfdf-bc56032586a7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;69&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonInclude;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.Serializable;

&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 前端返回对象
 *
 * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-28
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Result &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Serializable {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1430633339880116031L&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 成功与否标志
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; success = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 返回状态码，为空则默认200.前端需要拦截一些常见的状态码如403、404、500等
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer status;
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 编码，可用于前端处理多语言，不需要则不用返回编码
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String code;
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 相关消息
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String msg;
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 相关数据
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Object data;


    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result() {}

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Result(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.success =&lt;span&gt; success;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Result(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success, Integer status) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.success =&lt;span&gt; success;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.status =&lt;span&gt; status;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Result(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success, String code, String msg){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;(success);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.msg =&lt;span&gt; msg;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Result(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success, Integer status, String code, String msg) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.success =&lt;span&gt; success;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.status =&lt;span&gt; status;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.msg =&lt;span&gt; msg;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Result(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success, String code, String msg, Object data){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;(success);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.msg =&lt;span&gt; msg;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.data =&lt;span&gt; data;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; isSuccess() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; success;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; setSuccess(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.success =&lt;span&gt; success;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getStatus() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; status;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setStatus(Integer status) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.status =&lt;span&gt; status;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCode() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; code;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCode(String code) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getMsg() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; msg;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setMsg(String msg) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.msg =&lt;span&gt; msg;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getData() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; data;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setData(Object data) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.data =&lt;span&gt; data;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;之后在util添加生成Result的工具类Results，用于快速方便的创建Result对象。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('465f2884-603b-4e47-86ad-4ebcc5180c09')&quot; readability=&quot;54.5&quot;&gt;&lt;img id=&quot;code_img_closed_465f2884-603b-4e47-86ad-4ebcc5180c09&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_465f2884-603b-4e47-86ad-4ebcc5180c09&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('465f2884-603b-4e47-86ad-4ebcc5180c09',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_465f2884-603b-4e47-86ad-4ebcc5180c09&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;104&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Result;

&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * Result生成工具类
 *
 * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-28
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Results {

    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; Results() {}

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result newResult() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Result();

    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Result newResult(&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; success) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Result(success);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;
    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 业务调用成功
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result success() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Result();
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result success(String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result success(String code, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;, code, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result successWithStatus(Integer status) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;, status);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result successWithStatus(Integer status, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;, status, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result successWithData(Object data) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, data);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result successWithData(Object data, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg, data);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result successWithData(Object data, String code, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;, code, msg, data);
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;
    &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 业务调用失败
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failure() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failure(String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failure(String code, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;, code, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failureWithStatus(Integer status) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;, status);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failureWithStatus(Integer status, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;, status, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failureWithData(Object data) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, data);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failureWithData(Object data, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;, msg, data);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Result failureWithData(Object data, String code, String msg) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Result(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;, code, msg, data);
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③ 在base添加BaseEnum&amp;lt;K, V&amp;gt;枚举接口，定义了获取值和描述的接口。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a5fd772a-1c1e-40a7-aa10-c538c64d2fe4')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_a5fd772a-1c1e-40a7-aa10-c538c64d2fe4&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a5fd772a-1c1e-40a7-aa10-c538c64d2fe4&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a5fd772a-1c1e-40a7-aa10-c538c64d2fe4',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a5fd772a-1c1e-40a7-aa10-c538c64d2fe4&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * 基础枚举接口
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; BaseEnum&amp;lt;K, V&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;     * 获取编码
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 编码
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    K code();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;     * 获取描述
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 描述
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    V desc();
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;然后在constants下定义一个基础枚举常量类，我们把一些描述信息维护到枚举里面，尽量不要在代码中直接出现魔法值(如一些编码、中文等)，以后的枚举常量类也可以按照这种模式来写。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('fef365b6-0296-44a2-b20a-1edd384255d5')&quot; readability=&quot;43&quot;&gt;&lt;img id=&quot;code_img_closed_fef365b6-0296-44a2-b20a-1edd384255d5&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_fef365b6-0296-44a2-b20a-1edd384255d5&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('fef365b6-0296-44a2-b20a-1edd384255d5',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_fef365b6-0296-44a2-b20a-1edd384255d5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;81&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.constants;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseEnum;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Map;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * 基础枚举值
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-01
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt; BaseEnums &lt;span&gt;implements&lt;/span&gt; BaseEnum&amp;lt;String, String&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     SUCCESS(&quot;request.success&quot;, &quot;请求成功&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     FAILURE(&quot;request.failure&quot;, &quot;请求失败&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt;     OPERATION_SUCCESS(&quot;operation.success&quot;, &quot;操作成功&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;     OPERATION_FAILURE(&quot;operation.failure&quot;, &quot;操作失败&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;     ERROR(&quot;system.error&quot;, &quot;系统异常&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;     NOT_FOUND(&quot;not_found&quot;, &quot;请求资源不存在&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     FORBIDDEN(&quot;forbidden&quot;, &quot;无权限访问&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     VERSION_NOT_MATCH(&quot;record_not_exists_or_version_not_match&quot;, &quot;记录版本不存在或不匹配&quot;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;     PARAMETER_NOT_NULL(&quot;parameter_not_be_null&quot;, &quot;参数不能为空&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; 
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String code;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; 
&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String desc;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; 
&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Map&amp;lt;String, String&amp;gt; allMap = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    BaseEnums(String code, String desc) {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.desc =&lt;span&gt; desc;
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; 
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(BaseEnums enums : BaseEnums.values()){
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;            allMap.put(enums.code, enums.desc);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String code() {
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; code;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; 
&lt;span&gt;56&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String desc() {
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; desc;
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String desc(String code) {
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; allMap.get(code);
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④ 再添加一个常用的日期工具类对象，主要包含一些常用的日期时间格式化，后续可再继续往里面添加一些公共方法。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a1e20803-f443-4a5e-a1bc-595c992305da')&quot; readability=&quot;38.5&quot;&gt;&lt;img id=&quot;code_img_closed_a1e20803-f443-4a5e-a1bc-595c992305da&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a1e20803-f443-4a5e-a1bc-595c992305da&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a1e20803-f443-4a5e-a1bc-595c992305da',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a1e20803-f443-4a5e-a1bc-595c992305da&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; 
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.commons.lang3.StringUtils;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.commons.lang3.time.DateUtils;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; 
&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.text.ParseException;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.text.SimpleDateFormat;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; 
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt; * 日期时间工具类
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-28
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Dates {
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; 
&lt;span&gt; 19&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;     * 日期时间匹配格式
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Pattern {
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 常规模式
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;         * yyyy-MM-dd
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;         String DATE = &quot;yyyy-MM-dd&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;         * yyyy-MM-dd HH:mm:ss
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt;         String DATETIME = &quot;yyyy-MM-dd HH:mm:ss&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;         * yyyy-MM-dd HH:mm
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt;         String DATETIME_MM = &quot;yyyy-MM-dd HH:mm&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;         * yyyy-MM-dd HH:mm:ss.SSS
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt;         String DATETIME_SSS = &quot;yyyy-MM-dd HH:mm:ss.SSS&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;         * HH:mm
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;         String TIME = &quot;HH:mm&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;         * HH:mm:ss
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;         String TIME_SS = &quot;HH:mm:ss&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt; 
&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 系统时间格式
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;         * yyyy/MM/dd
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;         String SYS_DATE = &quot;yyyy/MM/dd&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;         * yyyy/MM/dd HH:mm:ss
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;         String SYS_DATETIME = &quot;yyyy/MM/dd HH:mm:ss&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;         * yyyy/MM/dd HH:mm
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;         String SYS_DATETIME_MM = &quot;yyyy/MM/dd HH:mm&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;         * yyyy/MM/dd HH:mm:ss.SSS
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;         String SYS_DATETIME_SSS = &quot;yyyy/MM/dd HH:mm:ss.SSS&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; 
&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 无连接符模式
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;         * yyyyMMdd
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;         String NONE_DATE = &quot;yyyyMMdd&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;         * yyyyMMddHHmmss
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;         String NONE_DATETIME = &quot;yyyyMMddHHmmss&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;         * yyyyMMddHHmm
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt;         String NONE_DATETIME_MM = &quot;yyyyMMddHHmm&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;         * yyyyMMddHHmmssSSS
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt;         String NONE_DATETIME_SSS = &quot;yyyyMMddHHmmssSSS&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; 
&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String DEFAULT_PATTERN =&lt;span&gt; Pattern.DATETIME;
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String[] PARSE_PATTERNS = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; String[]{
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;            Pattern.DATE,
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;            Pattern.DATETIME,
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;            Pattern.DATETIME_MM,
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;            Pattern.DATETIME_SSS,
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;            Pattern.SYS_DATE,
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;            Pattern.SYS_DATETIME,
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;            Pattern.SYS_DATETIME_MM,
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; &lt;span&gt;            Pattern.SYS_DATETIME_SSS
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;    };
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; 
&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt; &lt;span&gt;     * 格式化日期时间
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; date 日期时间
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; yyyy-MM-dd HH:mm:ss
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; String format(Date date) {
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; format(date, DEFAULT_PATTERN);
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; 
&lt;span&gt;116&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt; &lt;span&gt;     * 格式化日期
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; date 日期(时间)
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; pattern 匹配模式 参考：{&lt;/span&gt;&lt;span&gt;@link&lt;/span&gt;&lt;span&gt; Dates.Pattern}
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 格式化后的字符串
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;125&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; String format(Date date, String pattern) {
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (date == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;         pattern = StringUtils.isNotBlank(pattern) ?&lt;span&gt; pattern : DEFAULT_PATTERN;
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;         SimpleDateFormat sdf = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SimpleDateFormat(pattern);
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; sdf.format(date);
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; 
&lt;span&gt;134&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;135&lt;/span&gt; &lt;span&gt;     * 解析日期
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; date 日期字符串
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 解析后的日期 默认格式：yyyy-MM-dd HH:mm:ss
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;141&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Date parseDate(String date) {
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (StringUtils.isBlank(date)) {
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; DateUtils.parseDate(date, PARSE_PATTERNS);
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (ParseException e) {
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt; 
&lt;span&gt;153&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;154&lt;/span&gt; &lt;span&gt;     * 解析日期
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; date 日期
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; pattern 格式 参考：{&lt;/span&gt;&lt;span&gt;@link&lt;/span&gt;&lt;span&gt; Dates.Pattern}
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 解析后的日期，默认格式：yyyy-MM-dd HH:mm:ss
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;162&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Date parseDate(String date, String pattern) {
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (StringUtils.isBlank(date)) {
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; &lt;span&gt;        String[] parsePatterns;
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt;         parsePatterns = StringUtils.isNotBlank(pattern) ? &lt;span&gt;new&lt;/span&gt;&lt;span&gt; String[]{pattern} : PARSE_PATTERNS;
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; DateUtils.parseDate(date, parsePatterns);
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (ParseException e) {
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt; 
&lt;span&gt;176&lt;/span&gt; 
&lt;span&gt;177&lt;/span&gt; 
&lt;span&gt;178&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑤ Constants定义系统级的通用常量。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f5e375cb-9aae-4c8e-afc5-19a2b2f1c074')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_f5e375cb-9aae-4c8e-afc5-19a2b2f1c074&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f5e375cb-9aae-4c8e-afc5-19a2b2f1c074&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f5e375cb-9aae-4c8e-afc5-19a2b2f1c074',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f5e375cb-9aae-4c8e-afc5-19a2b2f1c074&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.constants;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.google.common.base.Charsets;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.nio.charset.Charset;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * 系统级常量类
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-28
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Constants {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String APP_NAME = &quot;sunny&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;     * 系统编码
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Charset CHARSET =&lt;span&gt; Charsets.UTF_8;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;     * 标识：是/否、启用/禁用等
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Flag {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;         Integer YES = 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;         Integer NO = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;     * 操作类型
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Operation {
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;         * 添加
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         String ADD = &quot;add&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;         * 更新
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;         String UPDATE = &quot;update&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt; &lt;span&gt;         * 删除
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;         String DELETE = &quot;delete&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;     * 性别
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Sex {
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt; &lt;span&gt;         * 男
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;         Integer MALE = 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt; &lt;span&gt;         * 女
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;          &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;61&lt;/span&gt;         Integer FEMALE = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑥ 在base添加空的BaseController、BaseDTO、Service、Mapper，先定义好基础结构，后面再添加功能。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;BaseDTO：标准的who字段、版本号、及10个扩展字段。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为这里用到了@Transient注解，先引入java持久化包：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201712/856154-20171231145502257-547282855.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('63a41268-6626-4fb4-a32e-8187c8081513')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_63a41268-6626-4fb4-a32e-8187c8081513&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_63a41268-6626-4fb4-a32e-8187c8081513&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('63a41268-6626-4fb4-a32e-8187c8081513',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_63a41268-6626-4fb4-a32e-8187c8081513&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; com.fasterxml.jackson.annotation.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.Constants;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Dates;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.commons.lang3.builder.ToStringBuilder;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.commons.lang3.builder.ToStringStyle;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Transient;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.Serializable;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Map;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; 
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt; * 基础实体类
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-29
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BaseDTO &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Serializable {
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -4287607489867805101L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; 
&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_OPERATE = &quot;operate&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_OBJECT_VERSION_NUMBER = &quot;versionNumber&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_CREATE_BY = &quot;createBy&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_CREATOR = &quot;creator&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_CREATE_DATE = &quot;createDate&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_UPDATE_BY = &quot;updateBy&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_UPDATER = &quot;updater&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String FIELD_UPDATE_DATE = &quot;updateDate&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; 
&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;     * 操作类型，add/update/delete 参考：{&lt;/span&gt;&lt;span&gt;@link&lt;/span&gt;&lt;span&gt; Constants.Operation}
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;    @Transient
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String _operate;
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; 
&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;     * 数据版本号,每发生update则自增,用于实现乐观锁.
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long versionNumber;
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; 
&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 下面是标准 WHO 字段
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;     * 创建人用户名
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long createBy;
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;     * 创建人名称
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; &lt;span&gt;    @Transient
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String creator;
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;     * 创建时间
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;     @JsonFormat(pattern =&lt;span&gt; Dates.DEFAULT_PATTERN)
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date createDate;
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; 
&lt;span&gt; 66&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;     * 更新人用户名
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long updateBy;
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;     * 更新人名称
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;    @Transient
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String updater;
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;     * 更新时间
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;     @JsonFormat(pattern =&lt;span&gt; Dates.DEFAULT_PATTERN)
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date updateDate;
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; 
&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;     * 其它属性
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;    @JsonIgnore
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    @Transient
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; Map&amp;lt;String, Object&amp;gt; innerMap = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; 
&lt;span&gt; 91&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 下面是扩展属性字段
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt; 
&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute1;
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute2;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; 
&lt;span&gt;101&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute3;
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; 
&lt;span&gt;104&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute4;
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; 
&lt;span&gt;107&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute5;
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute6;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; 
&lt;span&gt;113&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute7;
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; 
&lt;span&gt;116&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute8;
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; 
&lt;span&gt;119&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute9;
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; 
&lt;span&gt;122&lt;/span&gt; &lt;span&gt;    @JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String attribute10;
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; 
&lt;span&gt;125&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String get_operate() {
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; _operate;
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; 
&lt;span&gt;129&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; set_operate(String _operate) {
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;._operate =&lt;span&gt; _operate;
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; 
&lt;span&gt;133&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; ToStringBuilder.reflectionToString(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;, ToStringStyle.MULTI_LINE_STYLE);
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt; 
&lt;span&gt;138&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toJSONString() {
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; ToStringBuilder.reflectionToString(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;, ToStringStyle.JSON_STYLE);
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; 
&lt;span&gt;142&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getVersionNumber() {
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; versionNumber;
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt; 
&lt;span&gt;146&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setVersionNumber(Long versionNumber) {
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.versionNumber =&lt;span&gt; versionNumber;
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; 
&lt;span&gt;150&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getCreateBy() {
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; createBy;
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt; 
&lt;span&gt;154&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateBy(Long createBy) {
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createBy =&lt;span&gt; createBy;
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt; 
&lt;span&gt;158&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCreator() {
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; creator;
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt; 
&lt;span&gt;162&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreator(String creator) {
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.creator =&lt;span&gt; creator;
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; 
&lt;span&gt;166&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getCreateDate() {
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; createDate;
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt; 
&lt;span&gt;170&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreateDate(Date createDate) {
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.createDate =&lt;span&gt; createDate;
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt; 
&lt;span&gt;174&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getUpdateBy() {
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; updateBy;
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt; 
&lt;span&gt;178&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUpdateBy(Long updateBy) {
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.updateBy =&lt;span&gt; updateBy;
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt; 
&lt;span&gt;182&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUpdater() {
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; updater;
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt; 
&lt;span&gt;186&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUpdater(String updater) {
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.updater =&lt;span&gt; updater;
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;189&lt;/span&gt; 
&lt;span&gt;190&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getUpdateDate() {
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; updateDate;
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt; 
&lt;span&gt;194&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUpdateDate(Date updateDate) {
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.updateDate =&lt;span&gt; updateDate;
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; 
&lt;span&gt;198&lt;/span&gt; &lt;span&gt;    @JsonAnyGetter
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object getAttribute(String key) {
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; innerMap.get(key);
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt; 
&lt;span&gt;203&lt;/span&gt; &lt;span&gt;    @JsonAnySetter
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute(String key, Object obj) {
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt; &lt;span&gt;        innerMap.put(key, obj);
&lt;/span&gt;&lt;span&gt;206&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt; 
&lt;span&gt;208&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute1() {
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute1;
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt; 
&lt;span&gt;212&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute1(String attribute1) {
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute1 =&lt;span&gt; attribute1;
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt; 
&lt;span&gt;216&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute2() {
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute2;
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt; 
&lt;span&gt;220&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute2(String attribute2) {
&lt;/span&gt;&lt;span&gt;221&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute2 =&lt;span&gt; attribute2;
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt; 
&lt;span&gt;224&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute3() {
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute3;
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt; 
&lt;span&gt;228&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute3(String attribute3) {
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute3 =&lt;span&gt; attribute3;
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt; 
&lt;span&gt;232&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute4() {
&lt;/span&gt;&lt;span&gt;233&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute4;
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt; 
&lt;span&gt;236&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute4(String attribute4) {
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute4 =&lt;span&gt; attribute4;
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;239&lt;/span&gt; 
&lt;span&gt;240&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute5() {
&lt;/span&gt;&lt;span&gt;241&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute5;
&lt;/span&gt;&lt;span&gt;242&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;243&lt;/span&gt; 
&lt;span&gt;244&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute5(String attribute5) {
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute5 =&lt;span&gt; attribute5;
&lt;/span&gt;&lt;span&gt;246&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt; 
&lt;span&gt;248&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute6() {
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute6;
&lt;/span&gt;&lt;span&gt;250&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt; 
&lt;span&gt;252&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute6(String attribute6) {
&lt;/span&gt;&lt;span&gt;253&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute6 =&lt;span&gt; attribute6;
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;255&lt;/span&gt; 
&lt;span&gt;256&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute7() {
&lt;/span&gt;&lt;span&gt;257&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute7;
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;259&lt;/span&gt; 
&lt;span&gt;260&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute7(String attribute7) {
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute7 =&lt;span&gt; attribute7;
&lt;/span&gt;&lt;span&gt;262&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt; 
&lt;span&gt;264&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute8() {
&lt;/span&gt;&lt;span&gt;265&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute8;
&lt;/span&gt;&lt;span&gt;266&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;267&lt;/span&gt; 
&lt;span&gt;268&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute8(String attribute8) {
&lt;/span&gt;&lt;span&gt;269&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute8 =&lt;span&gt; attribute8;
&lt;/span&gt;&lt;span&gt;270&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;271&lt;/span&gt; 
&lt;span&gt;272&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute9() {
&lt;/span&gt;&lt;span&gt;273&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute9;
&lt;/span&gt;&lt;span&gt;274&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;275&lt;/span&gt; 
&lt;span&gt;276&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute9(String attribute9) {
&lt;/span&gt;&lt;span&gt;277&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute9 =&lt;span&gt; attribute9;
&lt;/span&gt;&lt;span&gt;278&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;279&lt;/span&gt; 
&lt;span&gt;280&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getAttribute10() {
&lt;/span&gt;&lt;span&gt;281&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; attribute10;
&lt;/span&gt;&lt;span&gt;282&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;283&lt;/span&gt; 
&lt;span&gt;284&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setAttribute10(String attribute10) {
&lt;/span&gt;&lt;span&gt;285&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.attribute10 =&lt;span&gt; attribute10;
&lt;/span&gt;&lt;span&gt;286&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;287&lt;/span&gt; 
&lt;span&gt;288&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;同时，重写了toString方法，增加了toJsonString方法，使得可以格式化输出DTO的数据：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131102030312-467091265.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;直接打印DTO，输出的格式大概就是这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131102150703-1797543245.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;⑦ 在exception添加BaseException，定义一些基础异常类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;基础异常类都继承自运行时异常类(RunntimeException)，尽可能把受检异常转化为非受检异常，更好的面向接口编程，提高代码的扩展性、稳定性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;BaseException：添加了一个错误编码，其它自定义的异常应当继承该类。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('83835c87-be25-4c1c-849b-2c46a80916a5')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_83835c87-be25-4c1c-849b-2c46a80916a5&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_83835c87-be25-4c1c-849b-2c46a80916a5&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('83835c87-be25-4c1c-849b-2c46a80916a5',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_83835c87-be25-4c1c-849b-2c46a80916a5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.exception;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * 基础异常类
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BaseException &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; RuntimeException {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -997101946070796354L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     * 错误编码
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt;&lt;span&gt; String code;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; BaseException() {}
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; BaseException(String message) {
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(message);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; BaseException(String code, String message) {
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(message);
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getCode() {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; code;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCode(String code) {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.code =&lt;span&gt; code;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;ServiceException：继承BaseException，Service层往Controller抛出的异常。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ec3dbbdc-3e21-4eb3-9be2-cb20bae19bb0')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_ec3dbbdc-3e21-4eb3-9be2-cb20bae19bb0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ec3dbbdc-3e21-4eb3-9be2-cb20bae19bb0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ec3dbbdc-3e21-4eb3-9be2-cb20bae19bb0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ec3dbbdc-3e21-4eb3-9be2-cb20bae19bb0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.exception;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * Service层异常
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; ServiceException &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseException {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 6058294324031642376L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ServiceException() {}
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ServiceException(String message) {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(message);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ServiceException(String code, String message) {
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;(code, message);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;3、添加系统用户功能，使用Postman测试接口&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;① 在system模块下，再分成dto、controller、service、mapper、constants子包，以后一个模块功能开发就是这样一个基础结构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;User：系统用户&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b624f4ea-1bd3-4bd3-a2cd-d90bb148c3d1')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_b624f4ea-1bd3-4bd3-a2cd-d90bb148c3d1&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b624f4ea-1bd3-4bd3-a2cd-d90bb148c3d1&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b624f4ea-1bd3-4bd3-a2cd-d90bb148c3d1',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b624f4ea-1bd3-4bd3-a2cd-d90bb148c3d1&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonFormat;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonInclude;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseDTO;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Dates;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; 
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt; * 系统用户
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;@JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; User &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseDTO {
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -7395431342743009038L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;     * 用户ID
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long userId;
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;     * 用户名
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;     * 密码
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;     * 昵称
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String nickname;
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;     * 生日
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt;     @JsonFormat(pattern =&lt;span&gt; Dates.Pattern.DATE)
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date birthday;
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;     * 性别：1-男/0-女
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer sex;
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;     * 是否启用：1/0
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer enabled;
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; 
&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getUserId() {
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt; 
&lt;span&gt; 54&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserId(Long userId) {
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.userId =&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; 
&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername() {
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; 
&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUsername(String username) {
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.username =&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; 
&lt;span&gt; 66&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword() {
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; 
&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPassword(String password) {
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.password =&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getNickname() {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; 
&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setNickname(String nickname) {
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.nickname =&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getBirthday() {
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; 
&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setBirthday(Date birthday) {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.birthday =&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; 
&lt;span&gt; 90&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getSex() {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSex(Integer sex) {
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.sex =&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getEnabled() {
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setEnabled(Integer enabled) {
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.enabled =&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; 
&lt;span&gt;106&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;UserController：用户控制层；用@RestController注解，前后端分离，因为无需返回视图，采用Restful风格，直接返回数据。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7eb99428-ac6d-4f13-bae6-693f503f32b4')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_7eb99428-ac6d-4f13-bae6-693f503f32b4&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7eb99428-ac6d-4f13-bae6-693f503f32b4&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7eb99428-ac6d-4f13-bae6-693f503f32b4',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7eb99428-ac6d-4f13-bae6-693f503f32b4&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.Constants;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseController;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseEnums;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Result;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto.User;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Dates;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Results;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.PathVariable;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RestController;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt; * 用户Controller
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; @RequestMapping(&quot;/sys/user&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;@RestController
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserController &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseController {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; 
&lt;span&gt;27&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; List&amp;lt;User&amp;gt; userList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 先静态模拟数据&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;static&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         User user1 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; User();
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         user1.setUserId(1L&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         user1.setUsername(&quot;lufei&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;         user1.setNickname(&quot;蒙奇D路飞&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         user1.setBirthday(Dates.parseDate(&quot;2000-05-05&quot;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;        user1.setSex(Constants.Sex.MALE);
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;        user1.setEnabled(Constants.Flag.YES);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;        userList.add(user1);
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt;         User user2 = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; User();
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;         user2.setUserId(2L&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         user2.setUsername(&quot;nami&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         user2.setNickname(&quot;娜美&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         user2.setBirthday(Dates.parseDate(&quot;2000/7/3&quot;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;        user2.setSex(Constants.Sex.FEMALE);
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;        user2.setEnabled(Constants.Flag.YES);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        userList.add(user2);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;     @RequestMapping(&quot;/queryAll&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result queryAll(){
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(userList, BaseEnums.SUCCESS.code(), BaseEnums.SUCCESS.description());
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt;     @RequestMapping(&quot;/queryOne/{userId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result queryOne(@PathVariable Long userId){
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;         User user = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(User u : userList){
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(u.getUserId().longValue() ==&lt;span&gt; userId){
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;                 user =&lt;span&gt; u;
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(user);
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;② Postman请求：请求成功，基础的HTTP服务已经实现了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180102001557003-1232258832.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180102001527409-865384624.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;三、集成MyBatis，实现基础Mapper和Service&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;1、添加JDBC、配置数据源&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;添加spring-boot-starter-jdbc以支持JDBC访问数据库，然后添加MySql的JDBC驱动mysql-connector-java；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180103223414534-1706004117.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在application.properties里配置mysql的数据库驱动&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114231508488-408551909.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之后在application-dev.properties里配置开发环境数据库的连接信息，添加之后，Springboot就会自动配置数据源了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114231540785-19677287.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2、集成MyBatis&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;MyBatis官方为了方便Springboot集成MyBatis，专门提供了一个符合Springboot规范的starter项目，即mybatis-spring-boot-starter。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114185210863-1009980646.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在application.properties里添加mybatis映射配置：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114185239535-1809682541.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3、添加MyBatis通用Mapper&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;通用Mapper可以极大的简化开发，极其方便的进行单表的增删改查。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114185317051-1457520192.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;关于通用Mapper，参考网站地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;https://github.com/abel533/Mapper&quot; target=&quot;_blank&quot;&gt;MyBatis通用Mapper&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;http://mybatis.tk/&quot; target=&quot;_blank&quot;&gt;MyBatis 相关工具&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之后，在core.base下创建自定义的Mapper，按需选择接口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体可参考：&lt;a href=&quot;http://git.oschina.net/free/Mapper/blob/master/wiki/mapper3/4.Professional.md&quot; target=&quot;_blank&quot;&gt;根据需要自定义接口&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a7e83311-85f9-4d0d-94cb-4d5848458e7e')&quot; readability=&quot;34&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_a7e83311-85f9-4d0d-94cb-4d5848458e7e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a7e83311-85f9-4d0d-94cb-4d5848458e7e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a7e83311-85f9-4d0d-94cb-4d5848458e7e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_a7e83311-85f9-4d0d-94cb-4d5848458e7e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tk.mybatis.mapper.common.BaseMapper;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tk.mybatis.mapper.common.ConditionMapper;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tk.mybatis.mapper.common.IdsMapper;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tk.mybatis.mapper.common.special.InsertListMapper;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * BaseMapper
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; * @name BaseMapper
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; Mapper&amp;lt;T&amp;gt; &lt;span&gt;extends&lt;/span&gt; BaseMapper&amp;lt;T&amp;gt;, ConditionMapper&amp;lt;T&amp;gt;, IdsMapper&amp;lt;T&amp;gt;, InsertListMapper&amp;lt;T&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;定义好基础Mapper后，就具有下图中的基本通用方法了。每个实体类对应的*Mapper继承Mapper&amp;lt;T&amp;gt;来获得基本的增删改查的通用方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180105002830049-1743711853.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在application.properties里配置自定义的基础Mapper&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180105003113924-2084155609.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;4、添加分页插件PageHelper&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114185337254-767992681.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考地址：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;https://gitee.com/free/Mybatis_PageHelper&quot; target=&quot;_blank&quot;&gt;MyBatis 分页插件 - PageHelper&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md&quot; target=&quot;_blank&quot;&gt;分页插件使用方法&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;分页插件配置，一般情况下，不需要做任何配置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;之后，我们就可以在代码中使用 &lt;span class=&quot;pl-smi&quot;&gt;PageHelper&lt;span class=&quot;pl-k&quot;&gt;.startPage(&lt;span class=&quot;pl-c1&quot;&gt;1, &lt;span class=&quot;pl-c1&quot;&gt;10) 对紧随其后的一个查询进行分页查询，非常方便。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180104012829753-254032208.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;5、配置自动扫描Mapper&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在config下创建MyBatisConfig配置文件，通过mapperScannerConfigurer方法配置自动扫描Mapper文件。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('63ef2876-bbcf-4191-b27c-26b66fd9eb52')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_63ef2876-bbcf-4191-b27c-26b66fd9eb52&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_63ef2876-bbcf-4191-b27c-26b66fd9eb52&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('63ef2876-bbcf-4191-b27c-26b66fd9eb52',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_63ef2876-bbcf-4191-b27c-26b66fd9eb52&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.config;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Bean;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; tk.mybatis.spring.mapper.MapperScannerConfigurer;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * MyBatis相关配置.
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-07
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;@Configuration
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyBatisConfig {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;     * Mapper扫描配置. 自动扫描将Mapper接口生成代理注入到Spring.
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; MapperScannerConfigurer mapperScannerConfigurer() {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         MapperScannerConfigurer mapperScannerConfigurer = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MapperScannerConfigurer();
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 注意这里的扫描路径: 1.不要扫描到自定义的Mapper; 2.定义的路径不要扫描到tk.mybatis.mapper(如定义**.mapper).
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 两个做法都会导致扫描到tk.mybatis的Mapper，就会产生重复定义的报错.&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         mapperScannerConfigurer.setBasePackage(&quot;**.lyyzoo.**.mapper&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapperScannerConfigurer;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注意这里的 &lt;span&gt;&lt;span&gt;MapperScannerConfigurer &lt;span&gt;是&lt;span&gt;tk.mybatis.spring.mapper.MapperScannerConfigurer，而不是org.mybatis，否则使用通用Mapper的方法时会报类似下面的这种错误&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180114224835222-1630533615.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;6、定义基础Service&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;一般来说，我们不能在Controller中直接访问Mapper，因此我们需要加上Service，通过Service访问Mapper。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先定义基础Service&amp;lt;T&amp;gt;接口，根据Mapper定义基本的增删改查接口方法。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5453fb25-1f88-41d3-8857-15431d856247')&quot; readability=&quot;38&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_5453fb25-1f88-41d3-8857-15431d856247&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5453fb25-1f88-41d3-8857-15431d856247&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5453fb25-1f88-41d3-8857-15431d856247',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_5453fb25-1f88-41d3-8857-15431d856247&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; 
&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt; &lt;span&gt; * Service 基础通用接口
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt; * @name BaseService
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; Service&amp;lt;T&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; 
&lt;span&gt; 14&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; insert
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;     * 保存一个实体，null的属性也会保存，不会使用数据库默认值
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;    T insert(T record);
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; 
&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;     * 批量插入，null的属性也会保存，不会使用数据库默认值
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 31&lt;/span&gt;     List&amp;lt;T&amp;gt; insert(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; 
&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;     * 保存一个实体，null的属性不会保存，会使用数据库默认值
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;    T insertSelective(T record);
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; 
&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;     * 批量插入，null的属性不会保存，会使用数据库默认值
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt;     List&amp;lt;T&amp;gt; insertSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; 
&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; update
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;     * 根据主键更新实体全部字段，null值会被更新
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;    T update(T record);
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; 
&lt;span&gt; 60&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;     * 批量更新，根据主键更新实体全部字段，null值会被更新
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;     List&amp;lt;T&amp;gt; update(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; 
&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;     * 根据主键更新属性不为null的值
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;    T updateSelective(T record);
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; 
&lt;span&gt; 76&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;     * 批量更新，根据主键更新属性不为null的值
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt;     List&amp;lt;T&amp;gt; updateSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; 
&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; delete
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;     * 根据主键删除
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id id不能为空
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(Long id);
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; 
&lt;span&gt; 95&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;     * 根据主键字符串进行删除，类中只有存在一个带有@Id注解的字段
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; ids 类似1,2,3
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(String ids);
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt; &lt;span&gt;     * 根据主键删除多个实体，ID数组
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; ids 类似[1,2,3]，不能为空
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(Long[] ids);
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; 
&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;110&lt;/span&gt; &lt;span&gt;     * 根据实体属性作为条件进行删除
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;114&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;115&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(T record);
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; 
&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt; &lt;span&gt;     * 根据主键删除多个实体
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;122&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;123&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; delete(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; 
&lt;span&gt;125&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;126&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; insert or update or delete
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt;128&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;129&lt;/span&gt; &lt;span&gt;     * 根据实体的operate决定哪种操作. null的属性也会保存，不会使用数据库默认值
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;133&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt; &lt;span&gt;    T persist(T record);
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt; 
&lt;span&gt;136&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt; &lt;span&gt;     * 批量操作.根据实体的operate决定哪种操作. null的属性也会保存，不会使用数据库默认值
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;141&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;142&lt;/span&gt;     List&amp;lt;T&amp;gt; persist(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt; 
&lt;span&gt;144&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;145&lt;/span&gt; &lt;span&gt;     * 根据实体的operate决定哪种操作. 根据主键更新属性不为null的值
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;149&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;150&lt;/span&gt; &lt;span&gt;    T persistSelective(T record);
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; 
&lt;span&gt;152&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;153&lt;/span&gt; &lt;span&gt;     * 批量操作.根据实体的operate决定哪种操作. 根据主键更新属性不为null的值
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; recordList
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;157&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;158&lt;/span&gt;     List&amp;lt;T&amp;gt; persistSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList);
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt; 
&lt;span&gt;160&lt;/span&gt; 
&lt;span&gt;161&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;162&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; select
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt;164&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;165&lt;/span&gt; &lt;span&gt;     * 根据主键查询
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id 不能为空
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;169&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;170&lt;/span&gt; &lt;span&gt;    T get(Long id);
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt; 
&lt;span&gt;172&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;173&lt;/span&gt; &lt;span&gt;     * 根据实体中的属性进行查询，只能有一个返回值，有多个结果是抛出异常
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;177&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;178&lt;/span&gt; &lt;span&gt;    T get(T record);
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt; 
&lt;span&gt;180&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;181&lt;/span&gt; &lt;span&gt;     * 根据字段和值查询 返回一个
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key 不能为空
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; value 不能为空
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;185&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;186&lt;/span&gt; &lt;span&gt;    T get(String key, Object value);
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt; 
&lt;span&gt;188&lt;/span&gt; 
&lt;span&gt;189&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt; &lt;span&gt;     * 根据主键字符串进行查询
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; ids 如 &quot;1,2,3,4&quot;
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;194&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;195&lt;/span&gt;     List&amp;lt;T&amp;gt;&lt;span&gt; select(String ids);
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt; 
&lt;span&gt;197&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;198&lt;/span&gt; &lt;span&gt;     * 根据实体中的属性值进行查询
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;202&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;203&lt;/span&gt;     List&amp;lt;T&amp;gt;&lt;span&gt; select(T record);
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt; 
&lt;span&gt;205&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;206&lt;/span&gt; &lt;span&gt;     * 根据属性和值查询
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; value
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;211&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;212&lt;/span&gt;     List&amp;lt;T&amp;gt;&lt;span&gt; select(String key, Object value);
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt; 
&lt;span&gt;214&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;215&lt;/span&gt; &lt;span&gt;     * 根据实体中的属性值进行分页查询
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; pageNum
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; pageSize
&lt;/span&gt;&lt;span&gt;220&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;222&lt;/span&gt;     List&amp;lt;T&amp;gt; select(T record, &lt;span&gt;int&lt;/span&gt; pageNum, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; pageSize);
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt; 
&lt;span&gt;224&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;225&lt;/span&gt; &lt;span&gt;     * 查询全部结果
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;228&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;229&lt;/span&gt;     List&amp;lt;T&amp;gt;&lt;span&gt; selectAll();
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt; 
&lt;span&gt;231&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;232&lt;/span&gt; &lt;span&gt;     * 根据实体中的属性查询总数
&lt;/span&gt;&lt;span&gt;233&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; record
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;236&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;237&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; count(T record);
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt; 
&lt;span&gt;239&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;然后是实现类BaseService，以后的开发中，Service接口实现Service&amp;lt;T&amp;gt;，Service实现类继承BaseService&amp;lt;T&amp;gt;。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('725536b8-86e4-4ae5-a122-bf873d81a521')&quot; readability=&quot;38&quot;&gt;&lt;img id=&quot;code_img_closed_725536b8-86e4-4ae5-a122-bf873d81a521&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_725536b8-86e4-4ae5-a122-bf873d81a521&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('725536b8-86e4-4ae5-a122-bf873d81a521',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_725536b8-86e4-4ae5-a122-bf873d81a521&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.github.pagehelper.PageHelper;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.Constants;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Arrays;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Reflections;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.transaction.annotation.Transactional;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.util.Assert;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; 
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.annotation.PostConstruct;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Id;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Field;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; 
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt; * 基础Service实现类
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt; * @name BaseServiceImpl
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-04
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BaseService&amp;lt;T&amp;gt; &lt;span&gt;implements&lt;/span&gt; Service&amp;lt;T&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; 
&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;@Qualifier(&quot;sunnyMapper&quot;)&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Mapper&amp;lt;T&amp;gt;&lt;span&gt; mapper;
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt; 
&lt;span&gt; 29&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; Class&amp;lt;T&amp;gt;&lt;span&gt; entityClass;
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; 
&lt;span&gt; 31&lt;/span&gt;     @SuppressWarnings(&quot;unchecked&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;    @PostConstruct
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; init() {
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.entityClass =&lt;span&gt; Reflections.getClassGenericType(getClass());
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; 
&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; insert
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T insert(T record) {
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; &lt;span&gt;        mapper.insert(record);
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; insert(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;        mapper.insertList(recordList);
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; 
&lt;span&gt; 52&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T insertSelective(T record) {
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;        mapper.insertSelective(record);
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; 
&lt;span&gt; 58&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; insertSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 由于Mapper暂未提供Selective的批量插入，此处循环查询. 当然也可参考InsertListMapper自己实现.&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;            mapper.insertSelective(record);
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; 
&lt;span&gt; 67&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; update
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T update(T record) {
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;        mapper.updateByPrimaryKey(record);
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; 
&lt;span&gt; 76&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; update(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Mapper暂未提供批量更新，此处循实现&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;            mapper.updateByPrimaryKey(record);
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; 
&lt;span&gt; 85&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T updateSelective(T record) {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;        mapper.updateByPrimaryKeySelective(record);
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; 
&lt;span&gt; 91&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; updateSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Mapper暂未提供批量更新，此处循实现&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; &lt;span&gt;            mapper.updateByPrimaryKeySelective(record);
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; 
&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; delete
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(Long id) {
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.deleteByIds(id.toString());
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; 
&lt;span&gt;108&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(String ids) {
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.deleteByIds(ids);
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; 
&lt;span&gt;113&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(Long[] ids) {
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.deleteByIds(Arrays.join(ids));
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; 
&lt;span&gt;118&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delete(T record) {
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.delete(record);
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; 
&lt;span&gt;123&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; delete(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; count = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;            mapper.delete(record);
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt;             count++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; count;
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; 
&lt;span&gt;133&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; all operate. insert or update or delete
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T persist(T record) {
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;         BaseDTO dto =&lt;span&gt; (BaseDTO) record;
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (dto.get_operate()) {
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.ADD:
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;                insert(record);
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.UPDATE:
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;                update(record);
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.DELETE:
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt; &lt;span&gt;                delete(record);
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;             &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;         dto.set_operate(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; 
&lt;span&gt;156&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; persist(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;             BaseDTO dto =&lt;span&gt; (BaseDTO) record;
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt;             &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (dto.get_operate()) {
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.ADD:
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt; &lt;span&gt;                    insert(record);
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.UPDATE:
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; &lt;span&gt;                    update(record);
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.DELETE:
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;                    delete(record);
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt;                 &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt;             dto.set_operate(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt; 
&lt;span&gt;178&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T persistSelective(T record) {
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt;         BaseDTO dto =&lt;span&gt; (BaseDTO) record;
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt;         &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (dto.get_operate()) {
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.ADD:
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt; &lt;span&gt;                insertSelective(record);
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.UPDATE:
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt; &lt;span&gt;                updateSelective(record);
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt;             &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.DELETE:
&lt;/span&gt;&lt;span&gt;189&lt;/span&gt; &lt;span&gt;                delete(record);
&lt;/span&gt;&lt;span&gt;190&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt;             &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt;                 &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt;         dto.set_operate(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; record;
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; 
&lt;span&gt;198&lt;/span&gt;     @Transactional(rollbackFor = Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; persistSelective(List&amp;lt;T&amp;gt;&lt;span&gt; recordList) {
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(T record : recordList){
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt;             BaseDTO dto =&lt;span&gt; (BaseDTO) record;
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt;             &lt;span&gt;switch&lt;/span&gt;&lt;span&gt; (dto.get_operate()) {
&lt;/span&gt;&lt;span&gt;203&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.ADD:
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt; &lt;span&gt;                    insertSelective(record);
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;206&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.UPDATE:
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt; &lt;span&gt;                    updateSelective(record);
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt;                 &lt;span&gt;case&lt;/span&gt;&lt;span&gt; Constants.Operation.DELETE:
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;                    delete(record);
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt;                 &lt;span&gt;default&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt;                     &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt;             dto.set_operate(&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;217&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; recordList;
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt; 
&lt;span&gt;220&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; select
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ----------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt;223&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T get(Long id) {
&lt;/span&gt;&lt;span&gt;224&lt;/span&gt;         T entity = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt;             entity =&lt;span&gt; entityClass.newInstance();
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt;             Field idField = Reflections.getFieldByAnnotation(entityClass, Id.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;228&lt;/span&gt; &lt;span&gt;            idField.set(entity, id);
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;232&lt;/span&gt; 
&lt;span&gt;233&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectByPrimaryKey(entity);
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt; 
&lt;span&gt;236&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T get(T record) {
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectOne(record);
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;239&lt;/span&gt; 
&lt;span&gt;240&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; T get(String key, Object value) {
&lt;/span&gt;&lt;span&gt;241&lt;/span&gt;         T entity = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;242&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;243&lt;/span&gt;             entity =&lt;span&gt; entityClass.newInstance();
&lt;/span&gt;&lt;span&gt;244&lt;/span&gt;             Field field =&lt;span&gt; Reflections.getField(entityClass, key);
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt; &lt;span&gt;            field.set(entity, value);
&lt;/span&gt;&lt;span&gt;246&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;248&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;249&lt;/span&gt; 
&lt;span&gt;250&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectOne(entity);
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;252&lt;/span&gt; 
&lt;span&gt;253&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt;&lt;span&gt; select(String ids) {
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectByIds(ids);
&lt;/span&gt;&lt;span&gt;255&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;256&lt;/span&gt; 
&lt;span&gt;257&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt;&lt;span&gt; select(T record) {
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt; 
&lt;span&gt;259&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.select(record);
&lt;/span&gt;&lt;span&gt;260&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt; 
&lt;span&gt;262&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt;&lt;span&gt; select(String key, Object value) {
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt;         T entity = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;264&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;265&lt;/span&gt;             entity =&lt;span&gt; entityClass.newInstance();
&lt;/span&gt;&lt;span&gt;266&lt;/span&gt;             Field field =&lt;span&gt; Reflections.getField(entityClass, key);
&lt;/span&gt;&lt;span&gt;267&lt;/span&gt; &lt;span&gt;            field.set(entity, value);
&lt;/span&gt;&lt;span&gt;268&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
&lt;/span&gt;&lt;span&gt;269&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;270&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;271&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.select(entity);
&lt;/span&gt;&lt;span&gt;272&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;273&lt;/span&gt; 
&lt;span&gt;274&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; select(T record, &lt;span&gt;int&lt;/span&gt; pageNum, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; pageSize) {
&lt;/span&gt;&lt;span&gt;275&lt;/span&gt; &lt;span&gt;        PageHelper.startPage(pageNum, pageSize);
&lt;/span&gt;&lt;span&gt;276&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.select(record);
&lt;/span&gt;&lt;span&gt;277&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;278&lt;/span&gt; 
&lt;span&gt;279&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt;&lt;span&gt; selectAll() {
&lt;/span&gt;&lt;span&gt;280&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectAll();
&lt;/span&gt;&lt;span&gt;281&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;282&lt;/span&gt; 
&lt;span&gt;283&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; count(T record) {
&lt;/span&gt;&lt;span&gt;284&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mapper.selectCount(record);
&lt;/span&gt;&lt;span&gt;285&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;286&lt;/span&gt; 
&lt;span&gt;287&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;BaseService的实现用到了反射&lt;/span&gt;工具类Reflections：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('9606bc4e-a36e-4f89-ad63-a8685e24aad0')&quot; readability=&quot;40&quot;&gt;&lt;img id=&quot;code_img_closed_9606bc4e-a36e-4f89-ad63-a8685e24aad0&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_9606bc4e-a36e-4f89-ad63-a8685e24aad0&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('9606bc4e-a36e-4f89-ad63-a8685e24aad0',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_9606bc4e-a36e-4f89-ad63-a8685e24aad0&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;75&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; 
&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Field;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Modifier;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.ParameterizedType;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Type;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; 
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt; * 反射工具类.
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-06
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; 
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Reflections {
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; 
&lt;span&gt; 20&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Logger logger = LoggerFactory.getLogger(Reflections.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; 
&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;     * 通过反射, 获得Class定义中声明的泛型参数的类型, 注意泛型必须定义在父类处. 如无法找到, 返回Object.class.
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; clazz class类
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; the 返回第一个声明的泛型类型. 如果没有,则返回Object.class
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt;     @SuppressWarnings(&quot;unchecked&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Class getClassGenericType(&lt;span&gt;final&lt;/span&gt;&lt;span&gt; Class clazz) {
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; getClassGenericType(clazz, 0&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;     * 通过反射, 获得Class定义中声明的父类的泛型参数的类型. 如无法找到, 返回Object.class.
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; clazz class类
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; index 获取第几个泛型参数的类型,默认从0开始,即第一个
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 返回第index个泛型参数类型.
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Class getClassGenericType(&lt;span&gt;final&lt;/span&gt; Class clazz, &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; index) {
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;         Type genType =&lt;span&gt; clazz.getGenericSuperclass();
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!(genType &lt;span&gt;instanceof&lt;/span&gt;&lt;span&gt; ParameterizedType)) {
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; Object.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt; 
&lt;span&gt; 50&lt;/span&gt;         Type[] params =&lt;span&gt; ((ParameterizedType) genType).getActualTypeArguments();
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; 
&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (index &amp;gt;= params.length || index &amp;lt; 0&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;             logger.warn(&quot;Index: &quot; + index + &quot;, Size of &quot; + clazz.getSimpleName() + &quot;'s Parameterized Type: &quot; +&lt;span&gt; params.length);
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; Object.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!(params[index] &lt;span&gt;instanceof&lt;/span&gt;&lt;span&gt; Class)) {
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;             logger.warn(clazz.getSimpleName() + &quot; not set the actual class on superclass generic parameter&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; Object.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; 
&lt;span&gt; 61&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; (Class) params[index];
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; 
&lt;span&gt; 64&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;     * 根据注解类型获取实体的Field
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; entityClass 实体类型
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; annotationClass 注解类型
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 返回第一个有该注解类型的Field,如果没有则返回null.
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;     @SuppressWarnings(&quot;unchecked&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Field getFieldByAnnotation(Class entityClass, Class annotationClass) {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         Field[] fields =&lt;span&gt; entityClass.getDeclaredFields();
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Field field : fields) {
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (field.getAnnotation(annotationClass) != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;                makeAccessible(field);
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; field;
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; 
&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;     * 获取实体的字段
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; entityClass 实体类型
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; fieldName 字段名称
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 该字段名称对应的字段,如果没有则返回null.
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Field getField(Class entityClass, String fieldName){
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;             Field field =&lt;span&gt; entityClass.getDeclaredField(fieldName);
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;            makeAccessible(field);
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; field;
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;         } &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (NoSuchFieldException e) {
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;            e.printStackTrace();
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; 
&lt;span&gt;105&lt;/span&gt; 
&lt;span&gt;106&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;107&lt;/span&gt; &lt;span&gt;     * 改变private/protected的成员变量为public.
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; makeAccessible(Field field) {
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (!Modifier.isPublic(field.getModifiers()) || !&lt;span&gt;Modifier.isPublic(field.getDeclaringClass().getModifiers())) {
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;             field.setAccessible(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; 
&lt;span&gt;115&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;7、数据持久化测试&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;① 实体映射&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;实体类按照如下规则和数据库表进行转换，注解全部是JPA中的注解：&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;9.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;表名默认使用类名，驼峰转下划线(只对大写字母进行处理)，如UserInfo默认对应的表名为user_info&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;表名可以使@Table(name = &quot;tableName&quot;)进行指定，对不符合第一条默认规则的可以通过这种方式指定表名。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;字段默认和@Column一样，都会作为表字段，表字段默认为Java对象的Field名字驼峰转下划线形式。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;可以使用@Column(name = &quot;fieldName&quot;)指定不符合第3条规则的字段名。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;使用@Transient注解可以忽略字段，添加该注解的字段不会作为表字段使用，注意，如果没有与表关联，一定要用@Transient标注。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;建议一定是有一个@Id注解作为主键的字段,可以有多个@Id注解的字段作为联合主键。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;默认情况下，实体类中如果不存在包含@Id注解的字段,所有的字段都会作为主键字段进行使用(这种效率极低)。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.5&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;由于基本类型，如int作为实体类字段时会有默认值0，而且无法消除，所以实体类中建议不要使用基本类型。&lt;/span&gt;&lt;img id=&quot;code_img_opened_b770a9f7-017d-4d91-90d9-3f1049ac844d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b770a9f7-017d-4d91-90d9-3f1049ac844d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div id=&quot;cnblogs_code_open_b770a9f7-017d-4d91-90d9-3f1049ac844d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.system.dto;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonFormat;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonInclude;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseDTO;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Dates;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.GeneratedValue;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.GenerationType;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Id;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.persistence.Table;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; 
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt; * 系统用户
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt; * @name User
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;@JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; @Table(name = &quot;SYS_USER&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; User &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseDTO {
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -7395431342743009038L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; 
&lt;span&gt; 26&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;     * 用户ID
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;    @Id
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     @GeneratedValue(strategy =&lt;span&gt; GenerationType.IDENTITY)
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long userId;
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;     * 用户名
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt; &lt;span&gt;     * 密码
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt; &lt;span&gt;     * 昵称
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String nickname;
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt; &lt;span&gt;     * 生日
&lt;/span&gt;&lt;span&gt; 46&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt;     @JsonFormat(pattern =&lt;span&gt; Dates.Pattern.DATE)
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date birthday;
&lt;/span&gt;&lt;span&gt; 49&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt; &lt;span&gt;     * 性别：1-男/0-女
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer sex;
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt; &lt;span&gt;     * 是否启用：1/0
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer enabled;
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt; 
&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getUserId() {
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; 
&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserId(Long userId) {
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.userId =&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; 
&lt;span&gt; 66&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername() {
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; 
&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUsername(String username) {
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.username =&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword() {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; 
&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPassword(String password) {
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.password =&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getNickname() {
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; 
&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setNickname(String nickname) {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.nickname =&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; 
&lt;span&gt; 90&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getBirthday() {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setBirthday(Date birthday) {
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.birthday =&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getSex() {
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSex(Integer sex) {
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.sex =&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; 
&lt;span&gt;106&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getEnabled() {
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setEnabled(Integer enabled) {
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.enabled =&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;User实体主要加了@Table注解，映射表名；然后在userId上标注主键注解；其它字段如果没加@Transient注解的默认都会作为表字段。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('8e08832b-1050-4342-92aa-ce1a44670a93')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_8e08832b-1050-4342-92aa-ce1a44670a93&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_8e08832b-1050-4342-92aa-ce1a44670a93&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('8e08832b-1050-4342-92aa-ce1a44670a93',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_8e08832b-1050-4342-92aa-ce1a44670a93&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonFormat;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonInclude;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseDTO;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Dates;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; 
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; javax.persistence.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; 
&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt; &lt;span&gt; * 系统用户
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt; * @name User
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;@JsonInclude(JsonInclude.Include.NON_NULL)
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; @Table(name = &quot;SYS_USER&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; User &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseDTO {
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -7395431342743009038L&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; 
&lt;span&gt; 24&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;     * 用户ID
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;    @Id
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     @GeneratedValue(strategy =&lt;span&gt; GenerationType.IDENTITY)
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;     @OrderBy(&quot;DESC&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long userId;
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt; &lt;span&gt;     * 用户名
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String username;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 36&lt;/span&gt; &lt;span&gt;     * 密码
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String password;
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;     * 昵称
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String nickname;
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt; &lt;span&gt;     * 生日
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt;     @JsonFormat(pattern =&lt;span&gt; Dates.Pattern.DATE)
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date birthday;
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt; &lt;span&gt;     * 性别：1-男/0-女
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer sex;
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt; &lt;span&gt;     * 是否启用：1/0
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer enabled;
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; 
&lt;span&gt; 57&lt;/span&gt; 
&lt;span&gt; 58&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Long getUserId() {
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; 
&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUserId(Long userId) {
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.userId =&lt;span&gt; userId;
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; 
&lt;span&gt; 66&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getUsername() {
&lt;/span&gt;&lt;span&gt; 67&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 69&lt;/span&gt; 
&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUsername(String username) {
&lt;/span&gt;&lt;span&gt; 71&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.username =&lt;span&gt; username;
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getPassword() {
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; 
&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPassword(String password) {
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.password =&lt;span&gt; password;
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; 
&lt;span&gt; 82&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getNickname() {
&lt;/span&gt;&lt;span&gt; 83&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; 
&lt;span&gt; 86&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setNickname(String nickname) {
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.nickname =&lt;span&gt; nickname;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; 
&lt;span&gt; 90&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Date getBirthday() {
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setBirthday(Date birthday) {
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.birthday =&lt;span&gt; birthday;
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt; 
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getSex() {
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; 
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSex(Integer sex) {
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.sex =&lt;span&gt; sex;
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt; 
&lt;span&gt;106&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getEnabled() {
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setEnabled(Integer enabled) {
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.enabled =&lt;span&gt; enabled;
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; 
&lt;span&gt;114&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;② 创建表结构&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('55bf34df-7699-4729-b213-4ecbfcbd5308')&quot; readability=&quot;44&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_55bf34df-7699-4729-b213-4ecbfcbd5308&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_55bf34df-7699-4729-b213-4ecbfcbd5308&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('55bf34df-7699-4729-b213-4ecbfcbd5308',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_55bf34df-7699-4729-b213-4ecbfcbd5308&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;83&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `sys_user` (
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;   `&lt;span&gt;USER_ID&lt;/span&gt;` &lt;span&gt;bigint&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;表ID，主键，供其他表做外键&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;   `USERNAME` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;   `PASSWORD` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;100&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;   `NICKNAME` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;用户名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;   `BIRTHDAY` date &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;生日&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;   `SEX` &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;性别：1-男；0-女&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;   `ENABLED` &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;启用标识：1/0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;   `VERSION_NUMBER` &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;行版本号，用来处理锁&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;   `CREATE_DATE` &lt;span&gt;datetime&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;   `CREATE_BY` &lt;span&gt;bigint&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;-1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建人&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;   `UPDATE_BY` &lt;span&gt;bigint&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;-1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;更新人&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;   `UPDATE_DATE` &lt;span&gt;datetime&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;更新时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;   `ATTRIBUTE1` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;   `ATTRIBUTE2` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;   `ATTRIBUTE3` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;   `ATTRIBUTE4` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;   `ATTRIBUTE5` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;   `ATTRIBUTE6` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;   `ATTRIBUTE7` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;   `ATTRIBUTE8` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;   `ATTRIBUTE9` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;   `ATTRIBUTE10` &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;   &lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt; (`&lt;span&gt;USER_ID&lt;/span&gt;&lt;span&gt;`),
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;   &lt;span&gt;UNIQUE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `USERNAME` (`USERNAME`)
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; ) ENGINE&lt;span&gt;=&lt;/span&gt;InnoDB AUTO_INCREMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;系统用户&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;③ 创建UserMapper&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在system.mapper下创建UserMapper接口，继承Mapper&amp;lt;User&amp;gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ecd8d881-ef53-4dcb-b476-caff2487812d')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_ecd8d881-ef53-4dcb-b476-caff2487812d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ecd8d881-ef53-4dcb-b476-caff2487812d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ecd8d881-ef53-4dcb-b476-caff2487812d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ecd8d881-ef53-4dcb-b476-caff2487812d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.mapper;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Mapper;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto.User;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; * @name UserMapper
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-06
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; UserMapper &lt;span&gt;extends&lt;/span&gt; Mapper&amp;lt;User&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;④ 创建UserService&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在system.service下创建UserService接口，只需继承Service&amp;lt;User&amp;gt;接口即可。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7d419682-0c1c-4ea6-a040-ca219c4ab764')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_7d419682-0c1c-4ea6-a040-ca219c4ab764&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7d419682-0c1c-4ea6-a040-ca219c4ab764&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7d419682-0c1c-4ea6-a040-ca219c4ab764',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7d419682-0c1c-4ea6-a040-ca219c4ab764&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.service;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Service;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto.User;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt; * 用户Service接口
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-06
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt; UserService &lt;span&gt;extends&lt;/span&gt; Service&amp;lt;User&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在system.service.impl下创建UserServiceImpl实现类，继承BaseService&amp;lt;User&amp;gt;类，实现UserService接口。同时加上@Service注解。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('cb7d56af-9651-4a7b-9fc5-235b73a21ff7')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_cb7d56af-9651-4a7b-9fc5-235b73a21ff7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_cb7d56af-9651-4a7b-9fc5-235b73a21ff7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('cb7d56af-9651-4a7b-9fc5-235b73a21ff7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_cb7d56af-9651-4a7b-9fc5-235b73a21ff7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.service.impl;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Service;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseService;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto.User;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.service.UserService;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt; * 用户Service实现类
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-01-06
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserServiceImpl &lt;span&gt;extends&lt;/span&gt; BaseService&amp;lt;User&amp;gt; &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; UserService {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑤ 修改UserController，注入UserService，增加一些测试API&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3af6b3f1-b4e5-484d-95f3-27c24516b651')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_3af6b3f1-b4e5-484d-95f3-27c24516b651&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3af6b3f1-b4e5-484d-95f3-27c24516b651&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3af6b3f1-b4e5-484d-95f3-27c24516b651',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3af6b3f1-b4e5-484d-95f3-27c24516b651&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseController;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseEnums;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Result;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.dto.User;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.system.service.UserService;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Results;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.validation.Valid;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt; * 用户Controller
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2017-12-31
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;@RequestMapping
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;@RestController
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserController &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseController {
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; UserService userService;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;     @PostMapping(&quot;/sys/user/queryAll&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result queryAll(){
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         List&amp;lt;User&amp;gt; list =&lt;span&gt; userService.selectAll();
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(list, BaseEnums.SUCCESS.code(), BaseEnums.SUCCESS.description());
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt;     @RequestMapping(&quot;/sys/user/queryOne/{userId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result queryOne(@PathVariable Long userId){
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         User user =&lt;span&gt; userService.get(userId);
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(user);
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;     @PostMapping(&quot;/sys/user/save&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result save(@Valid @RequestBody User user){
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         user =&lt;span&gt; userService.insertSelective(user);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(user);
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; 
&lt;span&gt;47&lt;/span&gt;     @PostMapping(&quot;/sys/user/update&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Result update(@Valid @RequestBody List&amp;lt;User&amp;gt;&lt;span&gt; user){
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         user =&lt;span&gt; userService.persistSelective(user);
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(user);
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;     @RequestMapping(&quot;/sys/user/delete&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result delete(User user){
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;        userService.delete(user);
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.success();
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; 
&lt;span&gt;59&lt;/span&gt;     @RequestMapping(&quot;/sys/user/delete/{userId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result delete(@PathVariable Long userId){
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;        userService.delete(userId);
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.success();
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; 
&lt;span&gt;65&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;⑥ 测试结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;查询所有：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180107031225315-1024439743.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;批量保存/修改：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180107032538159-1245934172.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;8、代码生成器&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;使用代码生成器来生成基础的代码结构，生成DTO、XML等等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;MyBatis官方提供了代码生成器MyBatis Generator，但一般需要定制化。&lt;a href=&quot;https://gitee.com/free/Mybatis_Utils/blob/master/MybatisGeneator/MybatisGeneator.md&quot; target=&quot;_blank&quot;&gt;MyBatis Generator&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我这里从网上找了一个使用起来比较方便的界面工具，可生成DTO、Mapper、Mapper.xml，生成之后还需做一些小调整。另需要自己创建对应的Service、Controller。之后有时间再重新定制化一个符合本项目的代码生成器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/zouzg/mybatis-generator-gui&quot; target=&quot;_blank&quot;&gt;mybatis-generator界面工具&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180123231240990-1164020852.png&quot; alt=&quot;&quot; width=&quot;828&quot; height=&quot;576&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;四、日志及全局异常处理&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;在前面的测试中，会发现控制台输出的日志不怎么友好，有很多日志也没有输出，不便于查找排查问题。对于一个应用程序来说日志记录是必不可少的一部分。线上问题追踪，基于日志的业务逻辑统计分析等都离不日志。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;先贴出一些参考资料：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;https://segmentfault.com/a/1190000008315137&quot; target=&quot;_blank&quot;&gt;logback 配置详解&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;http://blog.csdn.net/foreverling/article/details/51385128&quot; target=&quot;_blank&quot;&gt;日志组件slf4j介绍及配置详解&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;a href=&quot;https://www.cnblogs.com/chenhongliang/p/5312517.html&quot; target=&quot;_blank&quot;&gt;Java常用日志框架介绍&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;1、日志框架简介&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;Java有很多常用的日志框架，如Log4j、Log4j 2、Commons Logging、Slf4j、Logback等。有时候你可能会感觉有点混乱，下面简单介绍下。&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;Log4j：Apache Log4j是一个基于Java的日志记录工具，是Apache软件基金会的一个项目。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Log4j 2：Apache Log4j 2是apache开发的一款Log4j的升级产品。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Commons Logging：Apache基金会所属的项目，是一套Java日志接口。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;Slf4j：类似于Commons Logging，是一套简易Java日志门面，本身并无日志的实现。（Simple Logging Facade for Java，缩写Slf4j）。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;Logback：一套日志组件的实现(slf4j阵营)。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;Commons Logging和Slf4j是日志门面，提供一个统一的高层接口，为各种loging API提供一个简单统一的接口。log4j和Logback则是具体的日志实现方案。可以简单的理解为接口与接口的实现，调用者只需要关注接口而无需关注具体的实现，做到解耦。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比较常用的组合使用方式是Slf4j与Logback组合使用，Commons Logging与Log4j组合使用。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;基于下面的一些优点，选用Slf4j+Logback的日志框架：&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;更快的执行速度，Logback重写了内部的实现，在一些关键执行路径上性能提升10倍以上。而且logback不仅性能提升了，初始化内存加载也更小了&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;自动清除旧的日志归档文件，通过设置TimeBasedRollingPolicy 或者 SizeAndTimeBasedFNATP的 maxHistory 属性，你就可以控制日志归档文件的最大数量&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;Logback拥有远比log4j更丰富的过滤能力，可以不用降低日志级别而记录低级别中的日志。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;Logback必须配合Slf4j使用。由于Logback和Slf4j是同一个作者，其兼容性不言而喻。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2、配置日志&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;可以看到，只要集成了spring-boot-starter-web，就引入了spring-boot-starter-logging，即slf4j和logback。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其它的几个包：jcl-over-slf4j，代码直接调用common-logging会被桥接到slf4j；jul-to-slf4j，代码直接调用java.util.logging会被桥接到slf4j；log4j-over-slf4j，代码直接调用log4j会被桥接到slf4j。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131125004906-1473444237.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;还需引入janino，如果不加入这个包会报错。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131230439296-259465454.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在resources下添加logback.xml配置文件，Logback默认会查找classpath下的logback.xml文件。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体配置如下，有较详细的注释，很容易看懂。可以通过application.properties配置日志记录级别、日志输出文件目录等。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('686362a3-697f-4191-8282-14a6541b53f8')&quot; readability=&quot;32.5&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_686362a3-697f-4191-8282-14a6541b53f8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_686362a3-697f-4191-8282-14a6541b53f8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('686362a3-697f-4191-8282-14a6541b53f8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_686362a3-697f-4191-8282-14a6541b53f8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration &lt;/span&gt;&lt;span&gt;debug&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; scan&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; scanPeriod&lt;/span&gt;&lt;span&gt;=&quot;5 minutes&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 引入配置文件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;resource&lt;/span&gt;&lt;span&gt;=&quot;application.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;resource&lt;/span&gt;&lt;span&gt;=&quot;application-${app.env:-dev}.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;app.name&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${app.name:-sunny}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;app.env&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${app.env:-dev}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 日志记录级别 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;logback_level&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${logback.level:-DEBUG}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 是否输出日志到文件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;logback_rolling&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${logback.rolling:-false}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置日志输出目录 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;logback_rolling_path&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${logback.rolling.path:-/data/logs}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 日志文件最大大小 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;logback_max_file_size&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${logback.max_file_size:-10MB}&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 格式化输出：%d：表示日期，%thread：表示线程名，%-5level：级别从左显示5个字符宽度，%logger：日志输出者的名字(通常是所在类的全名)，%L：输出代码中的行号，%msg：日志消息，%n：换行符 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;logback_pattern&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger %L  -| %msg%n&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;condition&lt;/span&gt;&lt;span&gt;='p(&quot;logback_rolling&quot;).equals(&quot;true&quot;)'&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 滚动记录文件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;appender &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;FILE&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;file&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${logback_rolling_path}/${app.name}.log&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;file&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; rollingPolicy：当发生滚动时，决定RollingFileAppender的行为，涉及文件移动和重命名 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; TimeBasedRollingPolicy：最常用的滚动策略，它根据时间来制定滚动策略 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;rollingPolicy &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;                     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;fileNamePattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${logback_rolling_path}/${app.name}.%d{yyyy-MM-dd}.%i.log&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;fileNamePattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt; 
&lt;span&gt;41&lt;/span&gt;                     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 日志文件的保存期限为30天 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;maxHistory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;30&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;maxHistory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;timeBasedFileNamingAndTriggeringPolicy  &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;                         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; maxFileSize:这是活动文件的大小，默认值是10MB &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;maxFileSize&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${logback_max_file_size}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;maxFileSize&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;timeBasedFileNamingAndTriggeringPolicy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;rollingPolicy&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;encoder&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${logback_pattern}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;encoder&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;appender&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;appender-ref &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt;=&quot;FILE&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;then&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;60&lt;/span&gt; 
&lt;span&gt;61&lt;/span&gt; 
&lt;span&gt;62&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 将日志打印到控制台 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;appender &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;CONSOLE&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;64&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;encoder&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;65&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${logback_pattern}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;encoder&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;67&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;appender&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;68&lt;/span&gt; 
&lt;span&gt;69&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;root &lt;/span&gt;&lt;span&gt;level&lt;/span&gt;&lt;span&gt;=&quot;${logback_level}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;appender-ref &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt;=&quot;CONSOLE&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;71&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;72&lt;/span&gt; 
&lt;span&gt;73&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;contextName&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${app.name}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;contextName&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;74&lt;/span&gt; 
&lt;span&gt;75&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;加入配置文件后，就可以看到控制台格式化后的日志输出，还可以看到具体代码行数等，比之前的友好多了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同时，将日志滚动输出到日志文件，保留历史记录。可通过logback.rolling=false控制是否需要输出日志到文件。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3、使用Logger&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;配置好之后，就可以使用Logger来输出日志了，使用起来也是非常方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;* 可以看到引入的包是slf4j.Logger，代码里并没有引用任何一个跟 Logback 相关的类，这便是使用 Slf4j的好处，在需要将日志框架切换为其它日志框架时，无需改动已有的代码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;* LoggerFactory 的 getLogger() 方法接收一个参数，以这个参数决定 logger 的名字，比如第二图中的日志输出。在为 logger 命名时，用类的全限定类名作为 logger name 是最好的策略，这样能够追踪到每一条日志消息的来源&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;* 可以看到，可以通过提供占位符，以参数化的方式打印日志，避免字符串拼接的不必要损耗，也无需通过logger.isDebugEnabled()这种方式判断是否需要打印。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131234115156-1714554108.png&quot; alt=&quot;&quot; width=&quot;1130&quot; height=&quot;586&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201801/856154-20180131234457781-1153503224.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4、全局异常处理&lt;/h3&gt;
&lt;p&gt;现在有一个问题，当日志级别设置到INFO级别后，只会输出INFO以上的日志，如INFO、WARN、ERROR，这没毛病，问题是，程序中抛出的异常堆栈(运行时异常)都没有打印了，不利于排查问题。&lt;/p&gt;
&lt;p&gt;而且，在某些情况下，我们在Service中想直接把异常往Controller抛出不做处理，但我们不能直接把异常信息输出到客户端，这是非常不友好的。&lt;/p&gt;
&lt;p&gt;所以，在config下建一个GlobalExceptionConfig作为全局统一异常处理。主要处理了自定义的ServiceException、AuthorityException、BaseException，以及系统的NoHandlerFoundException和Exception异常。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f3323dc8-9b0c-4fe3-a6fe-dc76c0c5ad03')&quot; readability=&quot;40.5&quot;&gt;&lt;img id=&quot;code_img_closed_f3323dc8-9b0c-4fe3-a6fe-dc76c0c5ad03&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f3323dc8-9b0c-4fe3-a6fe-dc76c0c5ad03&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f3323dc8-9b0c-4fe3-a6fe-dc76c0c5ad03',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f3323dc8-9b0c-4fe3-a6fe-dc76c0c5ad03&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;76&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.config;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.http.HttpStatus;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.ExceptionHandler;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RestControllerAdvice;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.NoHandlerFoundException;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Result;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.constants.BaseEnums;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.exception.AuthorityException;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.exception.BaseException;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.exception.ServiceException;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Results;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt; * 全局异常处理
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-02-06
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;@RestControllerAdvice
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; GlobalExceptionConfig {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LoggerFactory.getLogger(GlobalExceptionConfig.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * 处理 ServiceException 异常
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;     @ExceptionHandler(ServiceException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result handleServiceException(ServiceException e){
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         Result result =&lt;span&gt; Results.failure(e.getCode(), e.getMessage());
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;        result.setStatus(HttpStatus.BAD_REQUEST.value());
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         logger.info(&quot;ServiceException[code: {}, message: {}]&quot;&lt;span&gt;, e.getCode(), e.getMessage());
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;     * 处理 AuthorityException 异常
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;     @ExceptionHandler(AuthorityException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result handleAuthorityException(AuthorityException e){
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         Result result =&lt;span&gt; Results.failure(BaseEnums.FORBIDDEN.code(), BaseEnums.FORBIDDEN.desc());
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;        result.setStatus(HttpStatus.FORBIDDEN.value());
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;         logger.info(&quot;AuthorityException[code: {}, message: {}]&quot;&lt;span&gt;, e.getCode(), e.getMessage());
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;     * 处理 NoHandlerFoundException 异常. &amp;lt;br/&amp;gt;
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;     * 需配置 [spring.mvc.throw-exception-if-no-handler-found=true]
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;     * 需配置 [spring.resources.add-mappings=false]
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt;     @ExceptionHandler(NoHandlerFoundException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result handleNotFoundException(NoHandlerFoundException e){
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;         Result result =&lt;span&gt; Results.failure(BaseEnums.NOT_FOUND.code(), BaseEnums.NOT_FOUND.desc());
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;        result.setStatus(HttpStatus.NOT_FOUND.value());
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;        logger.info(e.getMessage());
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; 
&lt;span&gt;63&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;64&lt;/span&gt; &lt;span&gt;     * 处理 BaseException 异常
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;66&lt;/span&gt;     @ExceptionHandler(BaseException.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result handleBaseException(BaseException e){
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;         Result result =&lt;span&gt; Results.failure(e.getCode(), e.getMessage());
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;        result.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;         logger.error(&quot;BaseException[code: {}, message: {}]&quot;&lt;span&gt;, e.getCode(), e.getMessage(), e);
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;75&lt;/span&gt; &lt;span&gt;     * 处理 Exception 异常
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;77&lt;/span&gt;     @ExceptionHandler(Exception.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result handleException(Exception e){
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;         Result result =&lt;span&gt; Results.failure(BaseEnums.ERROR.code(), BaseEnums.ERROR.desc());
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt; &lt;span&gt;        result.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; &lt;span&gt;        logger.error(e.getMessage(), e);
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;84&lt;/span&gt; 
&lt;span&gt;85&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;看上面的代码，@ControllAdvice(@RestControllerAdvice可以返回ResponseBody)，可看做Controller增强器，可以在@ControllerAdvice作用类下添加@ExceptionHandler，@InitBinder，@ModelAttribute注解的方法来增强Controller，都会作用在被 @RequestMapping 注解的方法上。&lt;/p&gt;
&lt;p&gt;使用@ExceptionHandler 拦截异常，我们可以通过该注解实现自定义异常处理。在每个处理方法中，封装Result，返回对应的消息及状态码等。&lt;/p&gt;
&lt;p&gt;通过Logger打印对应级别的日志，也可以看到控制台及日志文件中有异常堆栈的输出了。注意除了BaseException、Exception，其它的都只是打印了简单信息，且为INFO级别。Exception是ERROR级别，且打印了堆栈信息。&lt;/p&gt;
&lt;p&gt;NoHandlerFoundException 是404异常，这里注意要先关闭DispatcherServlet的NotFound默认异常处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180209004626154-235912677.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;测试如下：这种返回结果就比较友好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180209004841545-951168507.png&quot; alt=&quot;&quot;/&gt;    &lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180209004918779-1224663591.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;五、数据库乐观锁&lt;/h2&gt;
&lt;h3&gt;1、乐观锁&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在并发修改同一条记录时，为避免更新丢失，需要加锁。要么在应用层加锁，要么在缓存层加锁，要么在数据库层使用乐观锁，使用version作为更新依据【强制】。 —— 《阿里巴巴Java开发手册》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;乐观锁，基于数据版本(version)记录机制实现，为数据库表增加一个&quot;version&quot;字段。读取出数据时，将此版本号一同读出，之后更新时，对此版本号加一。提交数据时，提交的版本数据与数据库表对应记录的当前版本信息进行比对，如果提交的数据版本号大于数据库表当前版本号，则予以更新，否则认为是过期数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此，这节就来处理BaseDTO中的&quot;version&quot;字段，通过增加一个mybatis插件来实现更新时版本号自动+1。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2、MyBatis插件介绍&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;My&lt;span class=&quot;fontstyle1&quot;&gt;Batis &lt;span class=&quot;fontstyle1&quot;&gt;允许在己映射语句执行过程中的某&lt;span class=&quot;fontstyle1&quot;&gt;一点&lt;span class=&quot;fontstyle1&quot;&gt;进行拦截调用。默认情况下， MyBatis 允许使用插件来拦截的接口和方法包括以下几个：&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;Executor (&lt;span class=&quot;fontstyle2&quot;&gt;update 、query 、flushStatements 、commit 、rollback &lt;span class=&quot;fontstyle2&quot;&gt;、&lt;span class=&quot;fontstyle0&quot;&gt;get&lt;span class=&quot;fontstyle2&quot;&gt;Transaction 、close &lt;span class=&quot;fontstyle2&quot;&gt;、isClosed)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;ParameterHandler (getParameterObj&lt;span class=&quot;fontstyle2&quot;&gt;ect 、setParameters)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;ResultSetHandler (handleResul &lt;span class=&quot;fontstyle2&quot;&gt;tSets 、handleCursorResultSe&lt;span class=&quot;fontstyle2&quot;&gt;ts、&lt;span class=&quot;fontstyle0&quot;&gt;handleOutputParameters)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;StatementHandler &lt;span class=&quot;fontstyle2&quot;&gt;(prepare 、parameterize 、batch update 、query)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;My&lt;span class=&quot;fontstyle1&quot;&gt;Batis &lt;span class=&quot;fontstyle1&quot;&gt;插件实现拦截器接口Interceptor&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;，在实现类中对拦截对象和方法进行处理 &lt;span class=&quot;fontstyle1&quot;&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;setProperties：&lt;span class=&quot;fontstyle0&quot;&gt;传递插件的&lt;span class=&quot;fontstyle0&quot;&gt;参数，可以通过参数来改变插件的行为。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;plugin：&lt;span class=&quot;fontstyle0&quot;&gt;参数 target 就是要拦截的对象，作用就是给被拦截对象生成一个代理对象，并返回。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;intercept：会覆盖所拦截对象的原方法，Invocation参数可以反射调度原来对象的方法，可以获取到很多有用的东西。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211143359170-923201614.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;除了需要实现拦截器接口外&lt;span class=&quot;fontstyle0&quot;&gt;，&lt;span class=&quot;fontstyle0&quot;&gt;还需要给实现类配置拦截器签名。 使用 &lt;span class=&quot;fontstyle0&quot;&gt;@Intercepts 和 @&lt;span class=&quot;fontstyle0&quot;&gt;Signature &lt;span class=&quot;fontstyle0&quot;&gt;这两个注解来配置拦截器要拦截的接口&lt;span class=&quot;fontstyle0&quot;&gt;的方法，接口方法对应的签名基本都是固定的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;@&lt;span class=&quot;fontstyle1&quot;&gt;Intercepts 注解的属性是一个 ＠Signature  &lt;span class=&quot;fontstyle1&quot;&gt;数组，可以在同 &lt;span class=&quot;fontstyle1&quot;&gt;一&lt;span class=&quot;fontstyle1&quot;&gt;个拦截器中&lt;span class=&quot;fontstyle1&quot;&gt;同时拦截不同的接口和方法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;@Signature 注解包含以下三个属性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;type：&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;设置拦截&lt;span class=&quot;fontstyle0&quot;&gt;的&lt;span class=&quot;fontstyle0&quot;&gt;接口，可选值是前面提到的4&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;个接口 &lt;span class=&quot;fontstyle0&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;method：&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;设置拦截接口中的方法名， &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;可选值是前面4&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;个接口对应的方法，需要和接口匹配 &lt;span class=&quot;fontstyle0&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;args：&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;设置拦截方法的参数类型数组，&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;通过方法名和参数类型可以确定唯&lt;span class=&quot;fontstyle0&quot;&gt;一一&lt;span class=&quot;fontstyle0&quot;&gt;个方法 。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;3、数据版本插件&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;要实现版本号自动更新，我们需要在SQL被执行前修改SQL，因此我们需要拦截的就是 &lt;span class=&quot;fontstyle0&quot;&gt;StatementHandler &lt;/span&gt; 接口的 prepare 方法，该方法会在数据库执行前被调用，优先于当前接口的其它方法而被执行。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在 core.plugin 包下新建一个VersionPlugin插件，实现Interceptor拦截器接口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;该接口方法签名如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211151113857-1926835998.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在 interceptor 方法中对 UPDATE 类型的操作，修改原SQL，加入version，修改后的SQL类似下图，更新时就会自动将version+1。同时带上version条件，如果该版本号小于数据库记录版本号，则不会更新。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211151551357-1811024067.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;VersionInterceptor插件：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('81794fff-1371-4b4c-a18e-17db4bdbe22e')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_81794fff-1371-4b4c-a18e-17db4bdbe22e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_81794fff-1371-4b4c-a18e-17db4bdbe22e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('81794fff-1371-4b4c-a18e-17db4bdbe22e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_81794fff-1371-4b4c-a18e-17db4bdbe22e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.plugins;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.expression.Expression;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.expression.LongValue;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.expression.operators.arithmetic.Addition;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.expression.operators.conditional.AndExpression;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.expression.operators.relational.EqualsTo;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.parser.CCJSqlParserUtil;
&lt;/span&gt;&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.schema.Column;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.statement.Statement;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; net.sf.jsqlparser.statement.update.Update;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.executor.statement.StatementHandler;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.mapping.BoundSql;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.mapping.MappedStatement;
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.mapping.SqlCommandType;
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.apache.ibatis.plugin.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.reflection.MetaObject;
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.ibatis.reflection.SystemMetaObject;
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.Logger;
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.slf4j.LoggerFactory;
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt; 
&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Proxy;
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.sql.Connection;
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt; 
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt; * 乐观锁：数据版本插件
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-02-10
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;@Intercepts(
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;    @Signature(
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;         type = StatementHandler.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;         method = &quot;prepare&quot;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         args = {Connection.&lt;span&gt;class&lt;/span&gt;, Integer.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 38&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; VersionInterceptor &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Interceptor {
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; 
&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String VERSION_COLUMN_NAME = &quot;version&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt; 
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LoggerFactory.getLogger(VersionInterceptor.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt; 47&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Object intercept(Invocation invocation) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Throwable {
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取 StatementHandler，实际是 RoutingStatementHandler&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;         StatementHandler handler =&lt;span&gt; (StatementHandler) processTarget(invocation.getTarget());
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 包装原始对象，便于获取和设置属性&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;         MetaObject metaObject =&lt;span&gt; SystemMetaObject.forObject(handler);
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; MappedStatement 是对SQL更高层次的一个封装，这个对象包含了执行SQL所需的各种配置信息&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt;         MappedStatement ms = (MappedStatement) metaObject.getValue(&quot;delegate.mappedStatement&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; SQL类型&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt;         SqlCommandType sqlType =&lt;span&gt; ms.getSqlCommandType();
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(sqlType !=&lt;span&gt; SqlCommandType.UPDATE) {
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; invocation.proceed();
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取版本号&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt;         Object originalVersion = metaObject.getValue(&quot;delegate.boundSql.parameterObject.&quot; +&lt;span&gt; VERSION_COLUMN_NAME);
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(originalVersion == &lt;span&gt;null&lt;/span&gt; || Long.valueOf(originalVersion.toString()) &amp;lt;= 0&lt;span&gt;){
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; invocation.proceed();
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 获取绑定的SQL&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;         BoundSql boundSql = (BoundSql) metaObject.getValue(&quot;delegate.boundSql&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 原始SQL&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;         String originalSql =&lt;span&gt; boundSql.getSql();
&lt;/span&gt;&lt;span&gt; 68&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 加入version的SQL&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;         originalSql =&lt;span&gt; addVersionToSql(originalSql, originalVersion);
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 修改 BoundSql&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;         metaObject.setValue(&quot;delegate.boundSql.sql&quot;&lt;span&gt;, originalSql);
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt; 
&lt;span&gt; 73&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; proceed() 可以执行被拦截对象真正的方法，该方法实际上执行了method.invoke(target, args)方法&lt;/span&gt;
&lt;span&gt; 74&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; invocation.proceed();
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; 
&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt; &lt;span&gt;     * Plugin.wrap 方法会自动判断拦截器的签名和被拦截对象的接口是否匹配，只有匹配的情况下才会使用动态代理拦截目标对象.
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; target 被拦截的对象
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 代理对象
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt; 84&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object plugin(Object target) {
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; Plugin.wrap(target, &lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; 
&lt;span&gt; 88&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;     * 设置参数
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setProperties(Properties properties) {
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; 
&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; 
&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;     * 获取代理的原始对象
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; target
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; Object processTarget(Object target) {
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(Proxy.isProxyClass(target.getClass())) {
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;             MetaObject mo =&lt;span&gt; SystemMetaObject.forObject(target);
&lt;/span&gt;&lt;span&gt;105&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; processTarget(mo.getValue(&quot;h.target&quot;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; target;
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; 
&lt;span&gt;110&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;111&lt;/span&gt; &lt;span&gt;     * 为原SQL添加version
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; originalSql 原SQL
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; originalVersion 原版本号
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 加入version的SQL
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String addVersionToSql(String originalSql, Object originalVersion){
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;             Statement stmt =&lt;span&gt; CCJSqlParserUtil.parse(originalSql);
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(!(stmt &lt;span&gt;instanceof&lt;/span&gt;&lt;span&gt; Update)){
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; originalSql;
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;             Update update =&lt;span&gt; (Update)stmt;
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;contains(update)){
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; &lt;span&gt;                buildVersionExpression(update);
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt;             Expression where =&lt;span&gt; update.getWhere();
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(where != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;                 AndExpression and = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AndExpression(where, buildVersionEquals(originalVersion));
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;                update.setWhere(and);
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;             }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; &lt;span&gt;                update.setWhere(buildVersionEquals(originalVersion));
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; stmt.toString();
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;&lt;span&gt;(Exception e){
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt; &lt;span&gt;            logger.error(e.getMessage(), e);
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt;&lt;span&gt; originalSql;
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt; 
&lt;span&gt;141&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; contains(Update update){
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;         List&amp;lt;Column&amp;gt; columns =&lt;span&gt; update.getColumns();
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(Column column : columns){
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(column.getColumnName().equalsIgnoreCase(VERSION_COLUMN_NAME)){
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt; 
&lt;span&gt;151&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; buildVersionExpression(Update update){
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 列 version&lt;/span&gt;
&lt;span&gt;153&lt;/span&gt;         Column versionColumn = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Column();
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; &lt;span&gt;        versionColumn.setColumnName(VERSION_COLUMN_NAME);
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; &lt;span&gt;        update.getColumns().add(versionColumn);
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; 
&lt;span&gt;157&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 值 version+1&lt;/span&gt;
&lt;span&gt;158&lt;/span&gt;         Addition add = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Addition();
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt; &lt;span&gt;        add.setLeftExpression(versionColumn);
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt;         add.setRightExpression(&lt;span&gt;new&lt;/span&gt; LongValue(1&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt; &lt;span&gt;        update.getExpressions().add(add);
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt; 
&lt;span&gt;164&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Expression buildVersionEquals(Object originalVersion){
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt;         Column column = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Column();
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; &lt;span&gt;        column.setColumnName(VERSION_COLUMN_NAME);
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt; 
&lt;span&gt;168&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 条件 version = originalVersion&lt;/span&gt;
&lt;span&gt;169&lt;/span&gt;         EqualsTo equal = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; EqualsTo();
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt; &lt;span&gt;        equal.setLeftExpression(column);
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt;         equal.setRightExpression(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; LongValue(originalVersion.toString()));
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; equal;
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; 
&lt;span&gt;175&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;之后还需配置该插件，只需要在MyBatisConfig中加入该配置即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211152152654-1661003730.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后，如果版本不匹配，更新失败，需要往外抛出异常提醒，所以修改BaseService的update方法，增加检查更新是否失败。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180211152355810-174055710.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后，能不用插件尽量不要用插件，因为它将修改MyBatis的底层设计。插件生成的是层层代理对象的责任链模式，通过反射方法运行，会有一定的性能消耗。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们也可以修改 tk.mapper 生成SQL的方法，加入version，这里通过插件方式实现乐观锁主要是不为了去修改 mapper 的底层源码，比较方便。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;六、Druid数据库连接池&lt;/h2&gt;
&lt;p&gt;创建数据库连接是一个很耗时的操作，也很容易对数据库造成安全隐患。对数据库连接的管理能显著影响到整个应用程序的伸缩性和健壮性，影响程序的性能指标。&lt;/p&gt;
&lt;p&gt;数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。数据库连接池能明显提高对数据库操作的性能。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;　　&lt;a href=&quot;https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&quot; target=&quot;_blank&quot;&gt;Druid常见问题集锦&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a href=&quot;http://www.cnblogs.com/JavaSubin/p/5294721.html&quot; target=&quot;_blank&quot;&gt;常用数据库连接池 (DBCP、c3p0、Druid) 配置说明&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;1、Druid&lt;/h3&gt;
&lt;p&gt;Druid首先是一个数据库连接池，但它不仅仅是一个数据库连接池，它还包含一个ProxyDriver，一系列内置的JDBC组件库，一个SQLParser。Druid支持所有JDBC兼容的数据库，包括Oracle、MySql、Derby、Postgresql、SQLServer、H2等等。 Druid针对Oracle和MySql做了特别优化，比如Oracle的PSCache内存占用优化，MySql的ping检测优化。Druid在监控、可扩展性、稳定性和性能方面都有明显的优势。Druid提供了Filter-Chain模式的扩展API，可以自己编写Filter拦截JDBC中的任何方法，可以在上面做任何事情，比如说性能监控、SQL审计、用户名密码加密、日志等等。&lt;/p&gt;
&lt;h3&gt;2、配置&lt;/h3&gt;
&lt;p&gt;Druid配置到core模块下，只需在application.properties中添加如下配置即可，大部分配置是默认配置，可更改。有详细的注释，比较容易理解。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5cc68521-9690-48ef-9743-2e6d8104058e')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_5cc68521-9690-48ef-9743-2e6d8104058e&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5cc68521-9690-48ef-9743-2e6d8104058e&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5cc68521-9690-48ef-9743-2e6d8104058e',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5cc68521-9690-48ef-9743-2e6d8104058e&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;####################################
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;# Druid
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;####################################
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;spring.datasource.driver-class-name=com.mysql.jdbc.Driver
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;# 初始化连接大小[0]
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;spring.datasource.druid.initial-size=1
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;# 最小空闲连接数[0]
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;spring.datasource.druid.min-idle=1
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;# 最大连接数[8]
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;spring.datasource.druid.max-active=20
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;# 配置获取连接等待超时的时间(毫秒)[-1]
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;spring.datasource.druid.max-wait=60000
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;# 查询超时时间(秒)
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;spring.datasource.druid.query-timeout=90
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;# 用来检测连接是否有效的sql，要求是一个查询语句
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;spring.datasource.druid.validation-query=SELECT 'x'
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;# 申请连接时检测连接可用性[false]
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;spring.datasource.druid.test-on-borrow=false
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;# 归还连接检测[false]
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;spring.datasource.druid.test-on-return=false
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;# 超时是否检测连接可用性[true]
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;spring.datasource.druid.test-while-idle=true
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接 (毫秒)
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;spring.datasource.druid.time-between-eviction-runs-millis=60000
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;#  配置一个连接在池中最小生存的时间(毫秒，默认30分钟)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;spring.datasource.druid.min-evictable-idle-time-millis=300000
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;# 通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；日志用的filter:log4j；防御sql注入的filter:wall
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filters=stat,wall,slf4j
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;# 合并多个DruidDataSource的监控数据
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;spring.datasource.druid.use-global-data-source-stat=true
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; 
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;# 是否缓存PreparedStatement. PSCache对支持游标的数据库性能提升巨大，比如说oracle.在mysql下建议关闭.
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;spring.datasource.druid.pool-prepared-statements=false
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;# 每个连接上PSCache的大小
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt; &lt;span&gt;# StatViewServlet [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE]
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;spring.datasource.druid.stat-view-servlet.enabled=true
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;# 监控页面的用户名和密码
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;spring.datasource.druid.stat-view-servlet.login-username=admin
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;spring.datasource.druid.stat-view-servlet.login-password=admin
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;spring.datasource.druid.stat-view-servlet.reset-enable=false
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;# StatFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter]
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.stat.db-type=mysql
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;#慢SQL记录
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.stat.log-slow-sql=true
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.stat.slow-sql-millis=2000
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;# SQL合并
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.stat.merge-sql=false
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; 
&lt;span&gt;58&lt;/span&gt; &lt;span&gt;# WallFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter]
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.wall.enabled=true
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.wall.db-type=mysql
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;spring.datasource.druid.filter.wall.config.delete-allow=false
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; spring.datasource.druid.filter.wall.config.drop-table-allow=false
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;之后启动项目在地址栏输入/druid/index.html并登录就可以看到Druid监控页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/856154/201802/856154-20180220003548798-1053583590.png&quot; alt=&quot;&quot; width=&quot;1357&quot; height=&quot;774&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;七、Redis缓存&lt;/h2&gt;
&lt;p&gt;对于如今的一个中小型系统来说，至少也需要一个缓存来缓存热点数据，加快数据的访问数据，这里选用Redis做缓存数据库。在以后可以使用Redis做分布式缓存、做Session共享等。&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;1、SpringBoot的缓存支持&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Spring定义了org.springframework.cache.CacheManager和org.springframework.cache.Cache接口来统一不同的缓存技术。CacheManager是Spring提供的各种缓存技术抽象接口，Cache接口包含缓存的各种操作。&lt;/p&gt;
&lt;p&gt;针对不同的缓存技术，需要实现不同的CacheManager，Redis缓存则提供了RedisCacheManager的实现。&lt;/p&gt;
&lt;p&gt;我将redis缓存功能放到sunny-starter-cache模块下，cache模块下可以有多种缓存技术，同时，对于其它项目来说，缓存是可插拔的，想用缓存直接引入cache模块即可。&lt;/p&gt;
&lt;p&gt;首先引入Redis的依赖：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212231413046-1986743467.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;SpringBoot已经默认为我们自动配置了多个CacheManager的实现，在autoconfigure.cache包下。在Spring Boot 环境下，使用缓存技术只需在项目中导入相关的依赖包即可。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在 RedisCacheConfiguration 里配置了默认的 CacheManager；SpringBoot提供了默认的redis配置，RedisAutoConfiguration 是Redis的自动化配置，比如创建连接池、初始化RedisTemplate等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212231824015-1134634603.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212232330187-1147827807.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;2、Redis 配置及声明式缓存支持&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;Redis 默认配置了 RedisTemplate 和 StringRedisTemplate ，其使用的序列化规则是 JdkSerializationRedisSerializer，缓存到redis后，数据都变成了下面这种样式，非常不易于阅读。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212234026531-576283217.png&quot; alt=&quot;&quot; width=&quot;785&quot; height=&quot;228&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此，重新配置RedisTemplate，使用 Jackson2JsonRedisSerializer 来序列化 Key 和 Value。同时，增加HashOperations、ValueOperations等Redis数据结构相关的操作，这样比较方便使用。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('511a4f1a-7962-4969-a18c-bcd5198179b7')&quot; readability=&quot;39.5&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_511a4f1a-7962-4969-a18c-bcd5198179b7&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_511a4f1a-7962-4969-a18c-bcd5198179b7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('511a4f1a-7962-4969-a18c-bcd5198179b7',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_511a4f1a-7962-4969-a18c-bcd5198179b7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.cache.redis;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.cache.annotation.EnableCaching;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Bean;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.redis.cache.RedisCacheManager;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.redis.connection.RedisConnectionFactory;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.springframework.data.redis.core.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.JsonAutoDetect;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.annotation.PropertyAccessor;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.fasterxml.jackson.databind.ObjectMapper;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt; * Redis配置.
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt; * 使用@EnableCaching开启声明式缓存支持. 之后就可以使用 @Cacheable/@CachePut/@CacheEvict 注解缓存数据.
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-02-11
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;@Configuration
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;@EnableCaching
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RedisConfig {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; RedisConnectionFactory redisConnectionFactory;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Jackson2ObjectMapperBuilder jackson2ObjectMapperBuilder;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; 
&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;     * 覆盖默认配置 RedisTemplate，使用 String 类型作为key，设置key/value的序列化规则
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     @SuppressWarnings(&quot;unchecked&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate() {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         RedisTemplate&amp;lt;String, Object&amp;gt; redisTemplate = &lt;span&gt;new&lt;/span&gt; RedisTemplate&amp;lt;&amp;gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;        redisTemplate.setConnectionFactory(redisConnectionFactory);
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用 Jackson2JsonRedisSerialize 替换默认序列化&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;         Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = &lt;span&gt;new&lt;/span&gt; Jackson2JsonRedisSerializer(Object.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         ObjectMapper objectMapper = jackson2ObjectMapperBuilder.createXmlMapper(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;).build();
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; 
&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置value的序列化规则和key的序列化规则&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;        redisTemplate.setKeySerializer(jackson2JsonRedisSerializer);
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;        redisTemplate.setHashKeySerializer(jackson2JsonRedisSerializer);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;        redisTemplate.afterPropertiesSet();
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; 
&lt;span&gt;56&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate;
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; 
&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HashOperations&amp;lt;String, String, Object&amp;gt; hashOperations(RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate) {
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.opsForHash();
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ValueOperations&amp;lt;String, String&amp;gt; valueOperations(RedisTemplate&amp;lt;String, String&amp;gt;&lt;span&gt; redisTemplate) {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.opsForValue();
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; 
&lt;span&gt;69&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ListOperations&amp;lt;String, Object&amp;gt; listOperations(RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate) {
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.opsForList();
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; SetOperations&amp;lt;String, Object&amp;gt; setOperations(RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate) {
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.opsForSet();
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt; 
&lt;span&gt;79&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ZSetOperations&amp;lt;String, Object&amp;gt; zSetOperations(RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate) {
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.opsForZSet();
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt; 
&lt;span&gt;84&lt;/span&gt; &lt;span&gt;    @Bean
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; RedisCacheManager cacheManager() {
&lt;/span&gt;&lt;span&gt;86&lt;/span&gt;         RedisCacheManager cacheManager = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RedisCacheManager(redisTemplate());
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt;         cacheManager.setUsePrefix(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;88&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; cacheManager;
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;90&lt;/span&gt; 
&lt;span&gt;91&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;同时，使用@EnableCaching开启声明式缓存支持，这样就可以使用基于注解的缓存技术。注解缓存是一个对缓存使用的抽象，通过在代码中添加下面的一些注解，达到缓存的效果。&lt;/span&gt;&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;span&gt;@Cacheable：在方法执行前Spring先查看缓存中是否有数据，如果有数据，则直接返回缓存数据；没有则调用方法并将方法返回值放进缓存。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;@CachePut：将方法的返回值放到缓存中。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;span&gt;@CacheEvict：删除缓存中的数据。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212235236859-1821228517.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212235537187-1070623313.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Redis服务器相关的一些配置可在application.properties中进行配置：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/856154/201802/856154-20180212235432140-1131682959.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3、Redis工具类&lt;/h3&gt;
&lt;p&gt;添加一个Redis的统一操作工具，主要是对redis的常用数据类型操作类做了一个归集。&lt;/p&gt;
&lt;p&gt;ValueOperations用于操作String类型，HashOperations用于操作hash数据，ListOperations操作List集合，SetOperations操作Set集合，ZSetOperations操作有序集合。&lt;/p&gt;
&lt;p&gt;关于redis的key命令和数据类型可参考我的学习笔记：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/chiangchou/p/redis-1.html&quot; target=&quot;_blank&quot;&gt;Redis 学习(一) —— 安装、通用key操作命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/chiangchou/p/redis-2.html&quot; target=&quot;_blank&quot;&gt;Redis 学习(二) —— 数据类型及操作&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7f334f98-776f-4eb6-a8b6-400dfddc3040')&quot; readability=&quot;45.5&quot;&gt;&lt;img id=&quot;code_img_closed_7f334f98-776f-4eb6-a8b6-400dfddc3040&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7f334f98-776f-4eb6-a8b6-400dfddc3040&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7f334f98-776f-4eb6-a8b6-400dfddc3040',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7f334f98-776f-4eb6-a8b6-400dfddc3040&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;86&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.cache.redis;
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; 
&lt;span&gt;  3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Value;
&lt;/span&gt;&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.data.redis.connection.DataType;
&lt;/span&gt;&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.springframework.data.redis.core.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Component;
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt; 
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Collection;
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Date;
&lt;/span&gt;&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Set;
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.concurrent.TimeUnit;
&lt;/span&gt;&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.stream.Collectors;
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.stream.Stream;
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt; 
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt; * Redis 操作工具
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt; &lt;span&gt; *
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-02-12
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;@Component
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RedisOperator {
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt; 
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 26&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; redisTemplate;
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 28&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; ValueOperations&amp;lt;String, String&amp;gt;&lt;span&gt; valueOperator;
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; HashOperations&amp;lt;String, String, Object&amp;gt;&lt;span&gt; hashOperator;
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; ListOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; listOperator;
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; SetOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; setOperator;
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; ZSetOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; zSetOperator;
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt; 
&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;     * 默认过期时长，单位：秒
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; DEFAULT_EXPIRE = 60 * 60 * 24&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 42&lt;/span&gt; 
&lt;span&gt; 43&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;&lt;span&gt; 不设置过期时长 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; NOT_EXPIRE = -1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt; 
&lt;span&gt; 46&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;     * Redis的根操作路径
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;     @Value(&quot;${redis.root:sunny}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String category;
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt; 
&lt;span&gt; 52&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; RedisOperator setCategory(String category) {
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.category =&lt;span&gt; category;
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt; 
&lt;span&gt; 57&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt; &lt;span&gt;     * 获取Key的全路径
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;     * 
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; full key
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getFullKey(String key) {
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.category + &quot;:&quot; +&lt;span&gt; key;
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 66&lt;/span&gt; 
&lt;span&gt; 67&lt;/span&gt; 
&lt;span&gt; 68&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; key
&lt;/span&gt;&lt;span&gt; 70&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ------------------------------------------------------------------------------&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt; &lt;span&gt;     * 判断key是否存在
&lt;/span&gt;&lt;span&gt; 73&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;exists key&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt; 76&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; existsKey(String key) {
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.hasKey(getFullKey(key));
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 82&lt;/span&gt; 
&lt;span&gt; 83&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;     * 判断key存储的值类型
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 86&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;type key&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt; 88&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; DataType[string、list、set、zset、hash]
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; DataType typeKey(String key){
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.type(getFullKey(key));
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt; 
&lt;span&gt; 96&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt; &lt;span&gt;     * 重命名key. 如果newKey已经存在，则newKey的原值被覆盖
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;100&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;rename oldKey newKey&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; oldKey oldKeys
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; newKey newKey
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; renameKey(String oldKey, String newKey){
&lt;/span&gt;&lt;span&gt;106&lt;/span&gt; &lt;span&gt;        redisTemplate.rename(getFullKey(oldKey), getFullKey(newKey));
&lt;/span&gt;&lt;span&gt;107&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; 
&lt;span&gt;109&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;110&lt;/span&gt; &lt;span&gt;     * newKey不存在时才重命名.
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;renamenx oldKey newKey&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; oldKey oldKey
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; newKey newKey
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 修改成功返回true
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;119&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; renameKeyNx(String oldKey, String newKey){
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.renameIfAbsent(getFullKey(oldKey), getFullKey(newKey));
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt; 
&lt;span&gt;123&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;124&lt;/span&gt; &lt;span&gt;     * 删除key
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;127&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;del key&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;131&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteKey(String key){
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt; &lt;span&gt;        redisTemplate.delete(key);
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt; 
&lt;span&gt;135&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;136&lt;/span&gt; &lt;span&gt;     * 删除key
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;del key1 key2 ...&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; keys 可传入多个key
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;143&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteKey(String ... keys){
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt;         Set&amp;lt;String&amp;gt; ks = Stream.of(keys).map(k -&amp;gt;&lt;span&gt; getFullKey(k)).collect(Collectors.toSet());
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt; &lt;span&gt;        redisTemplate.delete(ks);
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;147&lt;/span&gt; 
&lt;span&gt;148&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;149&lt;/span&gt; &lt;span&gt;     * 删除key
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;del key1 key2 ...&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; keys key集合
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;156&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; deleteKey(Collection&amp;lt;String&amp;gt;&lt;span&gt; keys){
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;         Set&amp;lt;String&amp;gt; ks = keys.stream().map(k -&amp;gt;&lt;span&gt; getFullKey(k)).collect(Collectors.toSet());
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt; &lt;span&gt;        redisTemplate.delete(ks);
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; 
&lt;span&gt;161&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;162&lt;/span&gt; &lt;span&gt;     * 设置key的生命周期，单位秒
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;expire key seconds&amp;lt;/i&amp;gt;&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;pexpire key milliseconds&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; time 时间数
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; timeUnit TimeUnit 时间单位
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;172&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; expireKey(String key, &lt;span&gt;long&lt;/span&gt;&lt;span&gt; time, TimeUnit timeUnit){
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt; &lt;span&gt;        redisTemplate.expire(key, time, timeUnit);
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt; 
&lt;span&gt;176&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;177&lt;/span&gt; &lt;span&gt;     * 设置key在指定的日期过期
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;expireat key timestamp&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt;183&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; date 指定日期
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;185&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; expireKeyAt(String key, Date date){
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt; &lt;span&gt;        redisTemplate.expireAt(key, date);
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt; 
&lt;span&gt;189&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;190&lt;/span&gt; &lt;span&gt;     * 查询key的生命周期
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;ttl key&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; timeUnit TimeUnit 时间单位
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; 指定时间单位的时间数
&lt;/span&gt;&lt;span&gt;198&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;199&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; getKeyExpire(String key, TimeUnit timeUnit){
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate.getExpire(key, timeUnit);
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt; 
&lt;span&gt;203&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;204&lt;/span&gt; &lt;span&gt;     * 将key设置为永久有效
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;206&lt;/span&gt; &lt;span&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt; &lt;span&gt;     * &amp;lt;i&amp;gt;persist key&amp;lt;/i&amp;gt;
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; key key
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;211&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; persistKey(String key){
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt; &lt;span&gt;        redisTemplate.persist(key);
&lt;/span&gt;&lt;span&gt;213&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt; 
&lt;span&gt;215&lt;/span&gt; 
&lt;span&gt;216&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;217&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; RedisTemplate
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;220&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt;&lt;span&gt; getRedisTemplate() {
&lt;/span&gt;&lt;span&gt;221&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; redisTemplate;
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;223&lt;/span&gt; 
&lt;span&gt;224&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;225&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;226&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; ValueOperations
&lt;/span&gt;&lt;span&gt;227&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;228&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ValueOperations&amp;lt;String, String&amp;gt;&lt;span&gt; getValueOperator() {
&lt;/span&gt;&lt;span&gt;229&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; valueOperator;
&lt;/span&gt;&lt;span&gt;230&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;231&lt;/span&gt; 
&lt;span&gt;232&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;233&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;234&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; HashOperations
&lt;/span&gt;&lt;span&gt;235&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;236&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; HashOperations&amp;lt;String, String, Object&amp;gt;&lt;span&gt; getHashOperator() {
&lt;/span&gt;&lt;span&gt;237&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; hashOperator;
&lt;/span&gt;&lt;span&gt;238&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;239&lt;/span&gt; 
&lt;span&gt;240&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;241&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;242&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; ListOperations
&lt;/span&gt;&lt;span&gt;243&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;244&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ListOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; getListOperator() {
&lt;/span&gt;&lt;span&gt;245&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; listOperator;
&lt;/span&gt;&lt;span&gt;246&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;247&lt;/span&gt; 
&lt;span&gt;248&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;249&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;250&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; SetOperations
&lt;/span&gt;&lt;span&gt;251&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;252&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; SetOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; getSetOperator() {
&lt;/span&gt;&lt;span&gt;253&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; setOperator;
&lt;/span&gt;&lt;span&gt;254&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;255&lt;/span&gt; 
&lt;span&gt;256&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;257&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;258&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; ZSetOperations
&lt;/span&gt;&lt;span&gt;259&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;260&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; ZSetOperations&amp;lt;String, Object&amp;gt;&lt;span&gt; getZSetOperator() {
&lt;/span&gt;&lt;span&gt;261&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; zSetOperator;
&lt;/span&gt;&lt;span&gt;262&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;263&lt;/span&gt; 
&lt;span&gt;264&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;八、Swagger支持API文档&lt;/h2&gt;
&lt;h3&gt;&lt;span&gt;1、Swagger&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;做前后端分离，前端和后端的唯一联系，变成了API接口；API文档变成了前后端开发人员联系的纽带，变得越来越重要，swagger就是一款让你更好的书写API文档的框架。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Swagger是一个简单又强大的能为你的Restful风格的Api生成文档的工具。在项目中集成这个工具，根据我们自己的配置信息能够自动为我们生成一个api文档展示页，可以在浏览器中直接访问查看项目中的接口信息，同时也可以测试每个api接口。&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;2、配置&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;我这里直接使用别人已经整合好的swagger-spring-boot-starter，快速方便。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;参考：&lt;a href=&quot;https://github.com/SpringForAll/spring-boot-starter-swagger&quot; target=&quot;_blank&quot;&gt;spring-boot-starter-swagger&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;新建一个sunny-starter-swagger模块，做到可插拔。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;根据文档，一般只需要做些简单的配置即可：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但如果想要显示swagger-ui.html文档展示页，还必须注入swagger资源：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('33c980fd-5544-4564-a4ef-f62caba203f3')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_33c980fd-5544-4564-a4ef-f62caba203f3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_33c980fd-5544-4564-a4ef-f62caba203f3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('33c980fd-5544-4564-a4ef-f62caba203f3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_33c980fd-5544-4564-a4ef-f62caba203f3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.swagger.config;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.Configuration;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.annotation.PropertySource;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.spring4all.swagger.EnableSwagger2Doc;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@version&lt;/span&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt; * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; bojiangzhou 2018-02-19
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;@Configuration
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;@EnableSwagger2Doc
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; @PropertySource(value = &quot;classpath:application-swagger.properties&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; SunnySwaggerConfig &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; WebMvcConfigurerAdapter {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;     * 注入swagger资源文件
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; addResourceHandlers(ResourceHandlerRegistry registry) {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         registry.addResourceHandler(&quot;swagger-ui.html&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;                 .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         registry.addResourceHandler(&quot;/webjars/**&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;                 .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;3、使用&lt;/span&gt;&lt;/h3&gt;
&lt;div readability=&quot;25.915643955424&quot;&gt;
&lt;div readability=&quot;38.869031975471&quot;&gt;
&lt;p&gt;&lt;span&gt;一般只需要在Controller加上swagger的注解即可显示对应的文档信息，如@Api、@ApiOperation、@ApiParam等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;常用注解参考：&lt;a href=&quot;https://github.com/swagger-api/swagger-core/wiki/Annotations#apiparam&quot; target=&quot;_blank&quot;&gt;swagger-api-annotations&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f2ee7ae8-9a33-415b-9e3c-be6c225b8ff8')&quot; readability=&quot;35&quot;&gt;&lt;span&gt;&lt;img id=&quot;code_img_closed_f2ee7ae8-9a33-415b-9e3c-be6c225b8ff8&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f2ee7ae8-9a33-415b-9e3c-be6c225b8ff8&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f2ee7ae8-9a33-415b-9e3c-be6c225b8ff8',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;
&lt;div id=&quot;cnblogs_code_open_f2ee7ae8-9a33-415b-9e3c-be6c225b8ff8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.lyyzoo.admin.system.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.admin.system.dto.Menu;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.admin.system.service.MenuService;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.BaseController;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.base.Result;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.lyyzoo.core.util.Results;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; io.swagger.annotations.Api;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; io.swagger.annotations.ApiImplicitParam;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; io.swagger.annotations.ApiOperation;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; io.swagger.annotations.ApiParam;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; @Api(tags = &quot;菜单管理&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;@RequestMapping
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;@RestController
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MenuController &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; BaseController {
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; MenuService service;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * 查找单个用户
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; menuId 菜单ID
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; Result
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;     @ApiOperation(&quot;查找单个用户&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     @ApiImplicitParam(name = &quot;menuId&quot;, value = &quot;菜单ID&quot;, paramType = &quot;path&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     @GetMapping(&quot;/sys/menu/get/{menuId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result get(@PathVariable Long menuId){
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         Menu menu =&lt;span&gt; service.selectById(menuId);
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(menu);
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;     * 保存菜单
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; menu 菜单
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; Result
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;     @ApiOperation(&quot;保存菜单&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;     @PostMapping(&quot;/sys/menu/save&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; Result save(@ApiParam(name = &quot;menu&quot;, value = &quot;菜单&quot;&lt;span&gt;)@RequestBody Menu menu){
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;         menu =&lt;span&gt; service.save(menu);
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.successWithData(menu);
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; 
&lt;span&gt;52&lt;/span&gt;     &lt;span&gt;/**&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt; &lt;span&gt;     * 删除菜单
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;     *
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; menuId 菜单ID
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;&lt;span&gt; Result
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;     @ApiOperation(&quot;删除菜单&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;     @ApiImplicitParam(name = &quot;menuId&quot;, value = &quot;菜单ID&quot;, paramType = &quot;path&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;     @PostMapping(&quot;/sys/menu/delete/{menuId}&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Result delete(@PathVariable Long menuId){
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;        service.deleteById(menuId);
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; Results.success();
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; 
&lt;span&gt;66&lt;/span&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;之后访问swagger-ui.html页面就可以看到API文档信息了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/856154/201802/856154-20180220025845957-208464679.png&quot; alt=&quot;&quot; width=&quot;1310&quot; height=&quot;770&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果不需要swagger，在配置文件中配置swagger.enabled=false，或移除sunny-starter-swagger的依赖即可。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;九、项目优化调整&lt;/h2&gt;
&lt;p&gt;到这里，项目最基础的一些功能就算完成了，但由于前期的一些设计不合理及未考虑周全等因素，对项目做一些调整。并参考《阿里巴巴Java开发手册》对代码做了一些优化。&lt;/p&gt;
&lt;h3&gt;1、项目结构&lt;/h3&gt;
&lt;p&gt;目前项目分为5个模块：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/856154/201802/856154-20180220160725477-305652307.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最外层的Sunny作为聚合模块负责管理所有子模块，方便统一构建。并且继承 spring-boot-starter-parent ，其它子模块则继承该模块，方便统一管理 Spring Boot 及本项目的版本。这里已经把Spring Boot的版本升到 1.5.10.RELEASE。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ff47370a-2fc2-455e-95a6-5d016780308a')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_ff47370a-2fc2-455e-95a6-5d016780308a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ff47370a-2fc2-455e-95a6-5d016780308a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ff47370a-2fc2-455e-95a6-5d016780308a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ff47370a-2fc2-455e-95a6-5d016780308a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;span&gt; xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;pom&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Sunny&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Lyyzoo Base Application development platform&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.5.10.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;relativePath&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; 
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.build.sourceEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project.reporting.outputEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;UTF-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project.reporting.outputEncoding&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;java.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;java.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sunny.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sunny.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;springboot.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.5.10.RELEASE&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;springboot.version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modules&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-cache&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-security&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-admin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-swagger&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modules&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; 
&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt; 
&lt;span&gt;48&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;sunny-starter 则引入了其余几个模块，在开发项目时，只需要继承或引入sunny-starter即可，而无需一个个引入各个模块。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5065a254-6175-4a70-a7bd-22787e0eb205')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_5065a254-6175-4a70-a7bd-22787e0eb205&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5065a254-6175-4a70-a7bd-22787e0eb205&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5065a254-6175-4a70-a7bd-22787e0eb205',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5065a254-6175-4a70-a7bd-22787e0eb205&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;project &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;span&gt; xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;         xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;modelVersion&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;parent&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.parent&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jar&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;packaging&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Sunny Parent&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;description&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; core &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-core&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${sunny.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; cache &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.cache&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-cache&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${sunny.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; security &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.security&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-security&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${sunny.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; admin &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.admin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-admin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${sunny.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; swagger &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.lyyzoo.swagger&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;sunny-starter-swagger&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${sunny.version}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; 
&lt;span&gt;51&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;55&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;plugins&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;60&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;61&lt;/span&gt; 
&lt;span&gt;62&lt;/span&gt; 
&lt;span&gt;63&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;project&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;对于一个Spring Boot项目，应该只有一个入口，即 @SpringBootApplication 注解的类。经测试，其它的模块的配置文件application.properties的配置不会生效，应该是引用了入口模块的配置文件。&lt;/p&gt;
&lt;p&gt;所以为了让各个模块的配置文件都能生效，只需使用 @PropertySource 引入该配置文件即可，每个模块都如此。在主模块定义的配置会覆盖其它模块的配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/856154/201802/856154-20180220134808153-1693431947.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2、开发规范&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/856154/201802/856154-20180220163650578-1558941681.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;十、结语&lt;/h2&gt;
&lt;p&gt;到此，基础架构篇结束！学习了很多新东西，如Spring Boot、Mapper、Druid；有些知识也深入地学习了，如MyBatis、Redis、日志框架、Maven等等。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;在这期间，看完两本书，可参考：《MyBatis从入门到精通》、《JavaEE开发的颠覆者 Spring Boot实战》，另外，开发规范遵从《阿里巴巴Java开发手册》，其它的参考资料都在文中有体现。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;紧接着，后面会完成 sunny-starter-security 模块的开发，主要使用spring-security技术，开发用户登录及权限控制等。&lt;/p&gt;

&lt;p&gt;-----&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 13:14:00 +0000</pubDate>
<dc:creator>bojiangzhou</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chiangchou/p/sunny-1.html</dc:identifier>
</item>
<item>
<title>新闻热词:从爬虫到react native应用 - hokolee</title>
<link>http://www.cnblogs.com/hokolee/p/8463474.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hokolee/p/8463474.html</guid>
<description>&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;由于只想了解当天新增的top热词，减少过多信息干扰，打算做一款app实现这个功能。&lt;/li&gt;
&lt;li&gt;架构： 热词抓取 -&amp;gt; mysql &amp;lt;=&amp;gt; nodejs &amp;lt;=&amp;gt; nginx &amp;lt;=&amp;gt; react native应用&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;软件安装&quot;&gt;软件安装：&lt;/h2&gt;
&lt;p&gt;从阿里云申请的CentOS7.4裸机，因此软件安装列表如下：&lt;/p&gt;
&lt;ol readability=&quot;2.6783546864464&quot;&gt;&lt;li&gt;jdk： yum install java-1.7.0-openjdk-devel&lt;/li&gt;
&lt;li&gt;maven： wget apache-maven-3.3.9-bin.tar.gz &amp;amp;&amp;amp; add to /etc/profile &amp;amp;&amp;amp; source&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;ssh免密登录：scp ~/.ssh/id_rsa.pub &lt;a href=&quot;mailto:root@阿里云服务器ip&quot;&gt;root@阿里云服务器ip&lt;/a&gt;:~/.ssh/authorized_keys&lt;/li&gt;
&lt;li&gt;nodejs： sudo yum -y install npm &amp;amp;&amp;amp; sudo npm install -g n &amp;amp;&amp;amp; sudo n 9.4.0&lt;/li&gt;
&lt;li&gt;mysql：&lt;br/&gt;wget &lt;a href=&quot;http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&quot; class=&quot;uri&quot;&gt;http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&lt;/a&gt;&lt;br/&gt;rpm -ivh mysql-community-release-el7-5.noarch.rpm&lt;br/&gt;yum install mysql-community-server&lt;br/&gt;service mysql restart&lt;/li&gt;
&lt;li readability=&quot;8.3857566765579&quot;&gt;
&lt;p&gt;nginx:&lt;br/&gt;wget &lt;a href=&quot;http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&quot; class=&quot;uri&quot;&gt;http://dl.Fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm&lt;/a&gt;&lt;br/&gt;rpm -ivh epel-release-latest-7.noarch.rpm &amp;amp;&amp;amp; yum install nginx -y&lt;br/&gt;vim /etc/nginx/conf.d/nginx.yourservice.conf :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  server {  
  listen   80;  
  server_name 你的域名;  #例如到阿里云申请域名，然后在域名解析设置，使用记录类型A
  access_log /var/log/nginx/yourservice-access.log;
  error_log /var/log/nginx/yourservice-error.log;
  location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host  $http_host;
      proxy_set_header X-Nginx-Proxy true;
      proxy_set_header Connection &quot;&quot;;
      proxy_pass http://127.0.0.1:3000; #nodejs web服务监听的端口
      proxy_redirect default;
  }
  location /static/ {  
  }  
  }  &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;systemctl start nginx.service 启动nginx&lt;br/&gt;&lt;strong&gt;注意&lt;/strong&gt;：使用阿里云服务器遇到个坑，localhost可以访问http接口，用ip无法访问，误以为是防火墙问题，后来在阿里云－实例安全组修改：允许80地址段访问才解决。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;爬虫java&quot;&gt;爬虫(java):&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;数据来源: &lt;a href=&quot;http://top.baidu.com/category?c=513&amp;amp;fr=topbuzz_b344_c513&quot;&gt;百度热词榜&lt;/a&gt;、 &lt;a href=&quot;http://api.m.sm.cn/rest?method=tools.hot&amp;amp;source=home&amp;amp;start=1&quot;&gt;神马热词榜&lt;/a&gt;、&lt;a href=&quot;http://top.sogou.com/hot/shishi_1.html&quot;&gt;搜狗实时热词榜&lt;/a&gt;、&lt;a href=&quot;http://weixin.sogou.com/&quot;&gt;搜狗微信热词榜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;数据处理: 解析使用jsoup(java的HTML解析器),数据存储使用mysql. 具体可参见&lt;a href=&quot;https://github.com/lihonghong/news-app/tree/master/news-app-crawler&quot;&gt;代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;crontab定时job: 设置/var/spool/cron/下的配置文件,每15分钟抓取一次热词:&lt;br/&gt;15 * * * * cd /your path/news-app-crawler/release/bin &amp;amp;&amp;amp; sh crawler.hotquery.sh &amp;gt; crawler.log&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;服务端webnodejs&quot;&gt;服务端web(nodejs):&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;创建node项目，node app.js启动web服务，在浏览器中打开 &lt;a href=&quot;http://localhost:3000/&quot; class=&quot;uri&quot;&gt;http://localhost:3000&lt;/a&gt; 查看结果。&lt;/li&gt;
&lt;li&gt;node连接数据库配置见&lt;a href=&quot;https://github.com/lihonghong/news-app/blob/master/news-app-web/routes/database.js&quot;&gt;代码&lt;/a&gt; 。&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;部署代码到服务器，根据前面配置好域名和nginx，可以在浏览器打开 &lt;a href=&quot;http://hotquery.lbsso.com/&quot; class=&quot;uri&quot;&gt;http://hotquery.lbsso.com/&lt;/a&gt; 获取json格式热词列表。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:mysql连接有时间限制，当连接超过一定时间没有活动后，会自动关闭该连接，因此需要加上重连机制。另外时区设置为UTC，否则获得的时间有偏差。&lt;/p&gt;
&lt;h2 id=&quot;客户端appreact-native&quot;&gt;客户端app(react native):&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;环境准备可以直接参考facebook的文档 &lt;a href=&quot;https://facebook.github.io/react-native/docs/getting-started.html&quot;&gt;react-native&lt;/a&gt; ，很详细。主要是ios要确保xcode8以上版本，android确保java8及android 6.0 sdk。&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;创建react项目：react-native init AwesomeProject&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;运行ios项目：react-native run-ios&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;运行android项目：react-native run-android&lt;/li&gt;
&lt;li&gt;获取web接口热词并展现，参见&lt;a href=&quot;https://github.com/lihonghong/news-app/blob/master/newsAppReact/App.js&quot;&gt;代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;最终热词列表及点击结果如下：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1148302/201802/1148302-20180223205624701-2129836214.png&quot; width=&quot;220&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1148302/201802/1148302-20180223205649079-234682963.png&quot; width=&quot;220&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;转自个人博客：&lt;a href=&quot;http://www.lihonghong.me/app/crawler-to-react/&quot; class=&quot;uri&quot;&gt;http://www.lihonghong.me/app/crawler-to-react/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 13:04:00 +0000</pubDate>
<dc:creator>hokolee</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hokolee/p/8463474.html</dc:identifier>
</item>
<item>
<title>MySQL 存储过程的简单使用 - nnngu</title>
<link>http://www.cnblogs.com/nnngu/p/8463399.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/nnngu/p/8463399.html</guid>
<description>&lt;h2 id=&quot;首先创建一张-students-表&quot;&gt;首先创建一张 students 表&lt;/h2&gt;
&lt;p&gt;SQL脚本如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;25&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;table&lt;/span&gt; students(
    &lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;key&lt;/span&gt; auto_increment,
    age &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;,
    name &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;),
    city &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;)
) &lt;span class=&quot;dt&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; utf8;

&lt;span class=&quot;kw&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'lisa'&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'杭州'&lt;/span&gt;);
&lt;span class=&quot;kw&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'rock'&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'上海'&lt;/span&gt;);
&lt;span class=&quot;kw&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'jack'&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'深圳'&lt;/span&gt;);
&lt;span class=&quot;kw&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'rose'&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'北京'&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519381595914.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519381659110.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;不带参数的存储过程&quot;&gt;不带参数的存储过程&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- 查询学生个数&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;exists&lt;/span&gt; select_students_count;

delimiter ;; &lt;span class=&quot;co&quot;&gt;-- 替换分隔符&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; select_students_count() 
        &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt; 
            &lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; students; 
        &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; select_students_count();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519382375498.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;带参数的存储过程&quot;&gt;带参数的存储过程&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- 根据城市查询总数&lt;/span&gt;
delimiter ;;
    &lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; select_students_by_city_count(&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; _city &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;))
        &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; city = _city;
        &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt;;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; select_students_by_city_count(&lt;span class=&quot;st&quot;&gt;'上海'&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519382991880.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;带有输出参数的存储过程&quot;&gt;带有输出参数的存储过程&lt;/h2&gt;
&lt;p&gt;MySQL 支持 in (传递给存储过程)，out (从存储过程传出) 和 inout (对存储过程传入和传出) 类型的参数。存储过程的代码位于 begin 和 end 语句内，它们是一系列 select 语句，用来检索值，然后保存到相应的变量 (通过 into 关键字)&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;co&quot;&gt;-- 根据姓名查询学生信息，返回学生的城市&lt;/span&gt;
delimiter ;;
&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; select_students_by_name(
    &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; _name &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;),
    &lt;span class=&quot;kw&quot;&gt;out&lt;/span&gt; _city &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;), &lt;span class=&quot;co&quot;&gt;-- 输出参数&lt;/span&gt;
    inout _age &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;)
)
    &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt; 
        &lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; city &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; name = _name &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; age = _age &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; _city;
    &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; @_age = &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;;
&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; @_name = &lt;span class=&quot;st&quot;&gt;'jack'&lt;/span&gt;;
&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; select_students_by_name(@_name, @_city, @_age);
&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; @_city &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; city, @_age &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; age;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519384184008.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;带有通配符的存储过程&quot;&gt;带有通配符的存储过程&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;delimiter ;;
&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; select_students_by_likename(
    &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; _likename &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;)
)
    &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; name &lt;span class=&quot;kw&quot;&gt;like&lt;/span&gt; _likename;
    &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; select_students_by_likename(&lt;span class=&quot;st&quot;&gt;'%s%'&lt;/span&gt;);
&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; select_students_by_likename(&lt;span class=&quot;st&quot;&gt;'%j%'&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519385002267.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用存储过程进行增加修改删除&quot;&gt;使用存储过程进行增加、修改、删除&lt;/h2&gt;
&lt;h3 id=&quot;增加&quot;&gt;增加&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;17&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;delimiter ;;
&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; insert_student(
    _id &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;,
    _name &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;),
    _age &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;,
    _city &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;)
)
    &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;into&lt;/span&gt; students(&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;,name,age,city) &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(_id,_name,_age,_city);
    &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; insert_student(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'张三'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'上海'&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行完后，表中多了一条数据，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519385713796.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;修改&quot;&gt;修改&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;delimiter ;;
&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; update_student(
    _id &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;,
    _name &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;),
    _age &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;,
    _city &lt;span class=&quot;dt&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;255&lt;/span&gt;)
)
    &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;update&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt; name = _name, age = _age, city = _city &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; = _id;
    &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; update_student(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'amy'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;'杭州'&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519386216653.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;删除&quot;&gt;删除&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;delimiter ;;
&lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; delete_student_by_id(
    _id &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;
)
    &lt;span class=&quot;kw&quot;&gt;begin&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; students &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; id=_id;
    &lt;span class=&quot;kw&quot;&gt;end&lt;/span&gt; ;;
delimiter ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行存储过程：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;call&lt;/span&gt; delete_student_by_id(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;students 表中 id 为5的那条记录成功删除。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519386665787.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;查询存储过程&quot;&gt;查询存储过程&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;查询所有的存储过程：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; name &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; mysql.proc &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; db=&lt;span class=&quot;st&quot;&gt;'数据库名'&lt;/span&gt;;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519387077267.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询某个存储过程：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;
&lt;code class=&quot;sourceCode sql&quot;&gt;show &lt;span class=&quot;kw&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;procedure&lt;/span&gt; 存储过程名;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/23/1519387338470.jpg&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;本文永久更新地址：&lt;a href=&quot;https://github.com/nnngu/LearningNotes/blob/master/MySQL/01%20MySQL%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.md&quot;&gt;https://github.com/nnngu/LearningNotes/blob/master/MySQL/01%20MySQL%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8.md&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 23 Feb 2018 12:30:00 +0000</pubDate>
<dc:creator>nnngu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/nnngu/p/8463399.html</dc:identifier>
</item>
<item>
<title>从实现的角度解读区块链 - Pickle</title>
<link>http://www.cnblogs.com/wxisme/p/8463245.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wxisme/p/8463245.html</guid>
<description>&lt;h3&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　随着比特币的起起伏伏，区块链技术越来越受到关注。区块链和比特币是当下和人工智能一样风靡的领域。人们开始寻找区块链技术的用武之地，已经有了不少的尝试。但是区块链的价值所在众说纷纭，特别是一些媒体胡乱吹嘘或者是故意贬低，给大家都带来了不小的困惑。其实作为一名技术人员只需要理解其底层实现原理和运行机制，之后其应用场景和发展前景相信都会有自己的见解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　在阅读完本篇文章对区块链有了一定的了解后可以参考区块链的一个简单的模拟实现来加深自己的理解：（&lt;a title=&quot;toychain&quot; href=&quot;https://github.com/wxisme/toychain&quot; target=&quot;_blank&quot;&gt;toychain&lt;/a&gt;） 欢迎star :)&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;区块链和比特币&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　首先要理清楚区块链和比特币的区别和联系，区块链可以理解为一种有特点的数据存储结构或者说是协议，能够解决一些列的安全、稳定等方面的问题；而比特币是利用区块链技术实现的一种数字货币系统，比特币也是目前唯一一个成熟的区块链应用，这也是二者容易混淆的原因之一。比特币起始于2008年名为中本聪（Satoshi Nakamoto）的人发表的一篇论文《比特币：一种点对点的电子现金系统》（&lt;em&gt;Bitcoin: A Peer-to-Peer Electronic Cash System&lt;/em&gt;）&lt;a title=&quot;原文&quot; href=&quot;https://bitcoin.org/bitcoin.pdf&quot; target=&quot;_blank&quot;&gt;原文&lt;/a&gt; &lt;a title=&quot;译文&quot; href=&quot;http://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system&quot; target=&quot;_blank&quot;&gt;译文&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;　　区块链是一种新型去中心化协议，能安全地存储比特币交易或其它数据，信息不可伪造和篡改，可以自动执行智能合约，无需任何中心化机构的审核。交易既可以是比特币这样的数字货币，也可以是债权、股权、版权等数字资产，区块链技术解决了拜占庭将军问题，大大降低了现实经济的信任成本与会计成本，重新定义了互联网时代的产权制度。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　&lt;span&gt;中本聪提出了提出了这个具有创造力的构想并实现了比特币系统，在越来越多的支持者的参与下，比特币系统稳定运行，在2017年迎来了爆发式的发展，一枚比特币的价格曾经一度突破2万美元大关。越来越多的技术人员、投资者、金融从业者开始关注区块链技术，并试图拓展其应用领域，体现其特点和价值。当前区块链技术在金融领域还在继续深耕，其他领域也开始了不错的尝试，例如游戏，安全等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　下面通过以下几个方面进行逐一讨论和分析：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;区块的基本结构&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;去中心化与点对点网络&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;数据的不可修改性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;共识机制&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;双重花费和拜占庭将军问题&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;隐私保护&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;区块的基本结构&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　区块的结构并不复杂，包含了一些字段，整体上看一个区块的结构类似于双向链表中的节点。可以先直观的感受比特币系统中第&lt;a title=&quot;505156个区块&quot; href=&quot;https://blockchain.info/block/0000000000000000003e1641219b1291b53e0c609d53f4d56aadcf0646cdfd36?spm=a2c4e.11153940.blogcont435326.9.434e463fMboYYg&quot; target=&quot;_blank&quot;&gt;505156个区块&lt;/a&gt;的头信息。&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223155403243-1936882867.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223155451866-763294020.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;这些字段相当一部分可以通过字面意思来理解，对于较为重要的字段进行一一列举。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Number Of Transactions：此区块中所包含的交易数量，&lt;a title=&quot;网页&quot; href=&quot;https://blockchain.info/block/0000000000000000003e1641219b1291b53e0c609d53f4d56aadcf0646cdfd36?spm=a2c4e.11153940.blogcont435326.9.434e463fMboYYg&quot; target=&quot;_blank&quot;&gt;网页&lt;/a&gt;下方显示了846个交易的详细信息，也称为区块体&lt;br/&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Difficulty：难度系数，为了控制区块产生的速度，难度系数代表当前区块产生的难度&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Version：区块链的版本&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Nonce：工作量，在当前难度系数下计算了1683386125次才生成了此区块&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Hash：此区块的Hash签名，唯一且不可更改&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Previous Block：前一个区块的Hash签名，有且只有一个&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Next Block(s)：后一个区块的Hash签名，可以有多个（区块链存在分叉的情况）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Merkle Root：默克尔树根，&lt;a title=&quot;默克尔树&quot; href=&quot;http://java-lang-programming.com/en/articles/29&quot; target=&quot;_blank&quot;&gt;默克尔树&lt;/a&gt;是存储交易签名的数据结构，在Git中也有应用&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;　　这些关键字段的正确维护是区块链实现的基础，也是区块链去中心化，解决双花和拜占庭将军问题的基本结构。有了关键的数据结构，还需要相辅相成的规则和算法才能运行起来。理清楚整个流程之后再回过头看区块结构就能一目了然了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223172839207-2054576494.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　通过结构的观察可以得出结论：&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;一个区块写入后Hash唯一且不可更改，除非把整个区块链中所有区块的Hash，Previous Block，Next Block(s)全部做相应更改&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;一个区块的内容更改后Hash随之更改&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;去中心化与点对点网络&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　去中心化是区块链的核心思想，这也是与其他分布式产品的最大区别，去中心化保证了公平性和安全性。点对点网络就是在去中心化的框架下的互联网，类比现实社会，当今的社会制度就是中心化的，国家的中心是政府，金融系统的中心是央行。假如政府腐败、央行作弊，那么整个社会就无公平可言，所有的数据也是不可信任的。也许去中心化也是人类社会制度发展的终极目标。只要拥有一台电脑就能加入点对点网络成为一个节点，每个节点都能拥有整个区块链的信息（目前达到了上百GB），而且在不断的更新和同步。每一个区块的写入都会广播到整个网络。点对点网络中每个点拥有相同的权利和义务，都是对等的，以CPU作为算力单位每个点都可以参与投票、计算和打包数据，也拥有同步区块信息的权利。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223171306600-2015002865.png&quot; alt=&quot;&quot; width=&quot;455&quot; height=&quot;268&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;数据的不可修改性&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;　　在区块的基本结构中得出了区块内容一旦写入则不可修改的结论。原因非常容易理解，首先一个区块的通过Hash=SHA256(区块头)得出，因此每个区块的Hash都是唯一的。并且区块头中包含Merkle Root字段，区块体中的交易数据存储在默克尔树的叶子节点中，因此Merkle Root可以看做是此区块体中所有交易数据的唯一签名。基于以上事实，不管是对交易数据的修改还是对区块元信息的修改都会导致区块的Hash字段改变，由于除了第一个个最后一个区块外所有节点同时具有Previous Block，Next Block(s)字段，会引起连锁反应。修改一个区块数据的代价是要修改区块链中所有区块的Hash、Previous Block，Next Block(s)字段为相应值。如果不是同时拥有全网一半以上的算力是不可能做到的。因此可以说区块数据一旦写入区块链就是永久写入不可修改。这也保证了数据的安全性和可信任度。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223173059377-1353305055.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;共识机制&lt;/h3&gt;
&lt;p&gt;　　共识机制是区块链中最重要的特点，共识是指对区块数据的认同，也可以看做是投票。只有点对点网络中半数以上的都认为区块数据是真实可靠的才能达成共识。目前有几种主要的共识机制：工作量证明（PoW）、权益证明机制(PoS)、授权股权证明机制(DPOS)和拜占庭共识算法（PBFT）。其中工作量证明是比特币采用的机制。在比特币中工作量证明就是所谓的“挖矿”。&lt;/p&gt;
&lt;p&gt;　　由于每个节点都要去同步最新的区块链数据，所以区块产生的速度不能太快，不然大部分节点根本来不及同步。中本聪为此设计了难度系数调节机制，在区块结构中维护了Nonce和Difficulty两个字段，分别代表计算的次数和难度系数，区块产生设计速度是每10min产生一个，随着算力的提高，这个速度可能会加快，如果区块的产生速度大于设计速度那么下一个区块的难度系数就会增加。因此可以保证区块的产生时间间隔围绕在10min左右。所以在比特币中随着时间推移挖矿会越来越难。&lt;/p&gt;
&lt;p&gt;　　如果有两个区块同时加入区块链，那么区块链就会分叉。哪一个分支长度先达到6个就会把哪一个当做主干，确认交易，另一个分支就会被抛弃（选中大多数节点的共识）。因此确认一次交易的时间要1个小时左右。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/735119/201802/735119-20180223180414141-1174222749.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;双重花费和拜占庭将军问题&lt;/h3&gt;
&lt;p&gt;　　双重花费是指把同一笔资产花费到两个不同的交易中，例如，节点A一共有1个比特币，节点A几乎同时提交了两个交易：向节点B支付1个比特币，向节点C支付一个比特币。在交易记录之前这两笔交易可能都是合法的，可能会有不同的节点将其记录到区块中，如果同时产生了两个区块，那么就按照工作量证明的共识机制来选择。区块链不通过第三方也可以解决双花问题。&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;　　拜占庭帝国想要进攻一个强大的敌人，为此派出了10支军队去包围这个敌人。这个敌人虽不比拜占庭帝国，但也足以抵御5支常规拜占庭军队的同时袭击。基于一些原因，这10支军队不能集合在一起单点突破，必须在分开的包围状态下同时攻击。他们任一支军队单独进攻都毫无胜算，除非有至少6支军队同时袭击才能攻下敌国。他们分散在敌国的四周，依靠通信兵相互通信来协商进攻意向及进攻时间。困扰这些将军的问题是，他们不确定他们中是否有叛徒，叛徒可能擅自变更进攻意向或者进攻时间。在这种状态下，拜占庭将军们能否找到一种分布式的协议来让他们能够远程协商，从而赢取战斗？这就是著名的拜占庭将军问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　拜占庭将军问题再区块链中的描述应该是，在不知道具体的诚实节点的情况下怎么能够达到共识，在区块链中使用主流的共识机制（工作量证明（PoW）、权益证明机制(PoS)、授权股权证明机制(DPOS)和拜占庭共识算法（PBFT））就可以解决拜占庭将军问题。&lt;/p&gt;
&lt;h3&gt; 隐私保护&lt;/h3&gt;
&lt;p&gt; 　　由于在区块链中，所有节点都由全网唯一的SHA256签名代表，这个签名也不能被反向推出信息，因此即使签名在全网广播也不能得到某个节点的信息。基于这一点在所有交易中节点都相当于是匿名的，很好的保护了用户的隐私。但这也是编写勒索软件的黑客们常用的勒索支付方式。&lt;/p&gt;
&lt;h3&gt; 小结&lt;/h3&gt;
&lt;p&gt;　　基于以上对区块链的理解，可以得出结论，区块链技术是去中心化的，区块的结构特点可以很好的保证数据的安全和节点之间的公平性，也可以利用共识机制来解决双花和拜占庭将军等类似问题，比特币的发展也体现出了对区块链价值的认同。但为了实现这些特点，也付出了不小的时间和空间成本：每个节点都需要实时同步整个区块链信息（目前已经达到上百GB）；每个区块的容量有限；平均每10min才能生成一个区块，每小时才能确认一次交易，交易处理速度目前来看是远远不够的。&lt;/p&gt;
&lt;p&gt;　　到目前为止区块链的应用场景非常有限，在目前的技术水平下成熟的尝试还局限在金融货币领域。判断区块链是否能运用到某一个领域只需要判断三点即可：不需要管理中心，不要求数据的实时性，付出的成本小于收益。现在看来区块链带来的改变虽然不足以和人工智能相提并论，但区块链的思想非常值得去研究和参考。&lt;/p&gt;
&lt;p&gt;　　从技术的角度看，任何一个新技术都不是凭空产生的，一定是在已有的技术基础上加以改进和创新得来的。区块链也不例外，如果你对分布式计算（分布式事务，Paxos算法等）和密码学（对称加密，非对称加密，数字签名）稍微有一些了解的话研究区块链时就会非常轻松，区块链和Git的实现也有一些相似的地方（比如都使用了默克尔树）。&lt;/p&gt;

&lt;p&gt;　　由于时间和水平限制，难免有误，请指正。存手打，如果对你有帮助请考虑 &lt;span&gt;“推荐”&lt;/span&gt;。：)&lt;/p&gt;
&lt;p&gt;　　参考资料：&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;一个区块链的模拟实现（Github欢迎star）&quot; href=&quot;https://github.com/wxisme/toychain&quot; target=&quot;_blank&quot;&gt;一个区块链的模拟实现（Github欢迎star）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;比特币入门教程&quot; href=&quot;http://www.ruanyifeng.com/blog/2018/01/bitcoin-tutorial.html&quot; target=&quot;_blank&quot;&gt;比特币入门教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;BitCoin technology Merkle tree(Hash tree)&quot; href=&quot;http://java-lang-programming.com/en/articles/29&quot; target=&quot;_blank&quot;&gt;BitCoin technology Merkle tree(Hash tree)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;比特币：一种点对点的电子现金系统&quot; href=&quot;http://www.8btc.com/wiki/bitcoin-a-peer-to-peer-electronic-cash-system&quot; target=&quot;_blank&quot;&gt;比特币：一种点对点的电子现金系统&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;区块链是什么&quot; href=&quot;http://www.8btc.com/what-is-blockchain&quot; target=&quot;_blank&quot;&gt;区块链是什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;a title=&quot;拜占庭将军问题深入探讨&quot; href=&quot;http://www.8btc.com/baizhantingjiangjun&quot; target=&quot;_blank&quot;&gt;拜占庭将军问题深入探讨&lt;/a&gt;&lt;/p&gt;


</description>
<pubDate>Fri, 23 Feb 2018 11:43:00 +0000</pubDate>
<dc:creator>Pickle</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wxisme/p/8463245.html</dc:identifier>
</item>
</channel>
</rss>