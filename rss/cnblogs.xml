<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>echarts 点击方法总结，点任意一点获取点击数据，举例说明:在多图联动中点击绘制标线 - 漠北桑海</title>
<link>http://www.cnblogs.com/mobeisanghai/p/8025448.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mobeisanghai/p/8025448.html</guid>
<description>&lt;p&gt;关于点击（包括左击，双击，右击等）echarts图形任意一点，获取相关的图形数据，尤其是多图，我想部分人遇到这个问题一直很头大。下面我用举例说明，如何在多图联动基础上，我们点击任意一个图上任意一点，在点击处绘制一条标注线。&lt;br/&gt;多图联动的用法，我就不详细解释，不明白或者感兴趣的同学可以看我上一篇：&lt;a title=&quot;多图联动&quot; href=&quot;http://www.cnblogs.com/mobeisanghai/p/7683158.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/mobeisanghai/p/7683158.html&lt;/a&gt; ，虽然最近很忙，很久没更新，但是基本清晰。&lt;br/&gt;关于引入样式和js,以及初始元素如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;js/colpick/jquery.min.js&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;js/echarts.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        .main&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;margin&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;0 auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
         overflow-y&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; auto&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt; position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;1px #000 solid&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        #mainf&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; #70787b&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        #come&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt; height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 20px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;margin-left&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;50px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 80px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; red&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;  &lt;span&gt;}&lt;/span&gt;&lt;span&gt;
        .startmian&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 100%&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;position&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; relative&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;come&quot;&lt;/span&gt;&lt;span&gt;  style&lt;/span&gt;&lt;span&gt;=&quot;width: 200px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;数据进入 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
       &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;startmian&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;startmian&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其次 初始化的方法和 假数据如下： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;147&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;var&lt;/span&gt; a=[{&quot;F_X&quot;:[&quot;2017-3-1&quot;,&quot;2017-3-15&quot;,&quot;2017-4-1&quot;,&quot;2017-4-12&quot;,&quot;2017-5-21&quot;,&quot;2017-6-5&quot;,&quot;2017-8-12&quot;,&quot;2017-9-1&quot;,&quot;2017-10-11&quot;],&quot;F_Y&quot;:[{&quot;name&quot;:&quot;TT&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;23&quot;,&quot;56&quot;,&quot;32&quot;,&quot;41&quot;,&quot;32&quot;,&quot;45&quot;,&quot;39&quot;,&quot;47&quot;,&quot;58&quot;]},{&quot;name&quot;:&quot;KK&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;233&quot;,&quot;345&quot;,&quot;322&quot;,&quot;251&quot;,&quot;342&quot;,&quot;350&quot;,&quot;233&quot;,&quot;279&quot;,&quot;228&quot;]}],&quot;F_Z&quot;:&quot;温度&quot;},{&quot;F_X&quot;:[&quot;2017-3-1&quot;,&quot;2017-3-15&quot;,&quot;2017-4-1&quot;,&quot;2017-4-12&quot;,&quot;2017-5-21&quot;,&quot;2017-6-5&quot;,&quot;2017-8-12&quot;,&quot;2017-9-1&quot;,&quot;2017-10-11&quot;],&quot;F_Y&quot;:[{&quot;name&quot;:&quot;TT&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;34&quot;,&quot;45&quot;,&quot;32&quot;,&quot;25&quot;,&quot;57&quot;,&quot;45&quot;,&quot;39&quot;,&quot;47&quot;,&quot;58&quot;]},{&quot;name&quot;:&quot;KK&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;345&quot;,&quot;345&quot;,&quot;322&quot;,&quot;251&quot;,&quot;373&quot;,&quot;350&quot;,&quot;290&quot;,&quot;279&quot;,&quot;228&quot;]}],&quot;F_Z&quot;:&quot;水压&quot;},{&quot;F_X&quot;:[&quot;2017-3-1&quot;,&quot;2017-3-15&quot;,&quot;2017-4-1&quot;,&quot;2017-4-12&quot;,&quot;2017-5-21&quot;,&quot;2017-6-5&quot;,&quot;2017-8-12&quot;,&quot;2017-9-1&quot;,&quot;2017-10-11&quot;],&quot;F_Y&quot;:[{&quot;name&quot;:&quot;TT&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;23&quot;,&quot;56&quot;,&quot;32&quot;,&quot;25&quot;,&quot;57&quot;,&quot;45&quot;,&quot;39&quot;,&quot;47&quot;,&quot;58&quot;]},{&quot;name&quot;:&quot;KK&quot;,&quot;type&quot;:&quot;line&quot;,&quot;symbol&quot;:&quot;emptycircle&quot;,&quot;data&quot;:[&quot;33&quot;,&quot;45&quot;,&quot;32&quot;,&quot;51&quot;,&quot;73&quot;,&quot;50&quot;,&quot;90&quot;,&quot;79&quot;,&quot;48&quot;]}],&quot;F_Z&quot;:&quot;气压&quot;&lt;span&gt;}];

        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; dataGoz=[], &lt;span&gt;//&lt;/span&gt;&lt;span&gt;总数据&lt;/span&gt;
         mdataeahars=[]; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;echarts集合 ，用于联动使用&lt;/span&gt;
&lt;span&gt;        require.config({
            paths: {
                echarts: &lt;/span&gt;'js/echarts-2.2.7/src'&lt;span&gt;
            }
        }); 
(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
        $.each(a,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;(i,t){   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加标线样式，这里是绘制多条标线&lt;/span&gt;
            $.each(t.F_Y,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(m,n){
                n.markLine&lt;/span&gt;=&lt;span&gt;{itemStyle:{
                    normal:{lineStyle:{type:&lt;/span&gt;'solid',color:'#000'},label:{show:&lt;span&gt;true&lt;/span&gt;,position:'left'&lt;span&gt;}}
                    },large:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;,silent:&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,data:[]}
        });})
        dataGoz&lt;/span&gt;=a; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;得到赋值&lt;/span&gt;
    startmiandiv();   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;开始制图&lt;/span&gt;
&lt;span&gt;    } 
)();
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开始方法&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; startmiandiv(){
    mdataeahars&lt;/span&gt;=&lt;span&gt;[];
    $(&lt;/span&gt;&quot;#come&quot;).click(&lt;span&gt;function&lt;/span&gt;(){  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击数据进入&lt;/span&gt;
        $(&quot;#come&quot;&lt;span&gt;).hide();
        nstart(dataGoz);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开始入口&lt;/span&gt;
&lt;span&gt;        });   
}  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面是给数据“数据进入&quot;元素一个点击事件，用于后面绘图;下面展示绘图方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;117&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;核心绘图方法  &lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt;  nstart(dataGoz){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  mainheight=0&lt;span&gt;,
    bodyheight&lt;/span&gt;=document.body.clientHeight,  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取总高度&lt;/span&gt;
    mainheight=(bodyheight-40),      &lt;span&gt;//&lt;/span&gt;&lt;span&gt;分配高度&lt;/span&gt;
    startmiandiv=$('#startmian'&lt;span&gt;);
    startmiandiv.empty();
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; maindiv='&amp;lt;div  class=&quot;main&quot;  style=&quot;height:'+mainheight+'px;max-height:'+mainheight+'px&quot;&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;; 
    startmiandiv.append(maindiv);
    mainFn(dataGoz,mdataeahars); 
    linkFn(dataGoz,dataGoz.length);  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;联动方法&lt;/span&gt;
&lt;span&gt;}  
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;charts画图入口方法&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt;  mainFn(data,mdataeahars){ 
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; jing_class='jing'&lt;span&gt;,
    sv&lt;/span&gt;=&quot;&quot;, &lt;span&gt;//&lt;/span&gt;&lt;span&gt;动态生成名称&lt;/span&gt;
    main0=$(&quot;.main&quot;)[0&lt;span&gt;];
       $.each(data,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(i,t){
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  div1='&amp;lt;div class=&quot;'+jing_class+'&quot; style=&quot;height:150px;width:100%;&quot;&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;;
                $(main0).append(div1);
                sv&lt;/span&gt;=jing_class+&lt;span&gt;i;
                youjin(i,t,sv,mdataeahars,data.length,jing_class);             
        });        
}
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;油井封装数据&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; youjin(item,t,tempmyech,mdataeahars,alength,jin_cid){  
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  legendshow=&lt;span&gt;false&lt;/span&gt;; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;只让第一个lengend显示&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt;(item==0&lt;span&gt;){
        legendshow&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }
    require(
            [
                &lt;/span&gt;'echarts'&lt;span&gt;,
                &lt;/span&gt;'echarts/chart/bar', &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用柱状图就加载bar模块，按需加载&lt;/span&gt;
                'echarts/chart/line'&lt;span&gt;
            ],
  &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; (ec){ 
   tempmyech &lt;/span&gt;= ec.init($(&quot;.&quot;+jin_cid)[item]);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 基于准备好的dom，初始化echarts实例 &lt;/span&gt;
    $($(&quot;.&quot;+&lt;span&gt;jin_cid)[item]).contextmenu(
       &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(e){
            e.preventDefault();
            chartcontextmenu()
       }
    );
      $($(&lt;/span&gt;&quot;.&quot;+jin_cid)[item]).bind(&quot;dblclick.a&quot;&lt;span&gt;, chartDbck);  &lt;span&gt;//双击方法，防止事件冲突
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; sj=[]; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;名称集合&lt;/span&gt;
            &lt;span&gt;var&lt;/span&gt; f_y=&lt;span&gt;t.F_Y;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; colors=&lt;span&gt;[
                     &lt;/span&gt;'#ff7f50','#87cefa','#da70d6','#32cd32','#6495ed'&lt;span&gt;,
                     &lt;/span&gt;'#ff69b4','#ba55d3','#cd5c5c','#ffa500','#40e0d0'&lt;span&gt;,
                     &lt;/span&gt;'#1e90ff','#ff6347','#7b68ee','#00fa9a','#ffd700'&lt;span&gt;,
                     &lt;/span&gt;'#6699FF','#ff6666','#3cb371','#b8860b','#30e0e0'&lt;span&gt;
                    ];
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;f_y.length;i++&lt;span&gt;){
                sj.push(f_y[i].name);
               &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; forstr+= &quot;&amp;lt;br/&amp;gt;&amp;lt;font color=&quot;+colors[i]+&quot;&amp;gt;&amp;amp;nbsp;●&amp;amp;nbsp;&amp;lt;/font&amp;gt;{a&quot;+i+&quot;} : {c&quot;+i+&quot;}&quot;&lt;/span&gt;
&lt;span&gt;            }   
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; option =&lt;span&gt; {
                    tooltip: {
                        trigger: &lt;/span&gt;'axis', &lt;span&gt;//&lt;/span&gt;&lt;span&gt;坐标轴触发提示框，多用于柱状、折线图中&lt;/span&gt;
                        formatter:  &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (param){
                         &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; forstr=&quot;&quot;+param[0&lt;span&gt;].name;
                         &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0, h=param.length;i&amp;lt;h;i++&lt;span&gt;){
                        forstr&lt;/span&gt;+= &quot;&amp;lt;br/&amp;gt;&amp;lt;font color=&quot;+colors[i]+&quot;&amp;gt;&amp;amp;nbsp;●&amp;amp;nbsp;&amp;lt;/font&amp;gt;&quot;+param[i].seriesName+&quot; : &quot;+param[i].value+&quot;&quot;&lt;span&gt;
                                    }
                          Fmtresult(param[&lt;/span&gt;0].name,);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;通过它传递值&lt;/span&gt;
                        &lt;span&gt;return&lt;/span&gt;&lt;span&gt;   forstr;         
                  },
                        axisPointer: {
                            type: &lt;/span&gt;'cross'&lt;span&gt;
                        },        
                    },
                    grid: {
                        y:&lt;/span&gt;25&lt;span&gt;,
                        left: &lt;/span&gt;'3%'&lt;span&gt;,
                        right: &lt;/span&gt;'4%'&lt;span&gt;,
                        height:&lt;/span&gt;&quot;64%&quot;&lt;span&gt;,
                        containLabel: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                    },
                    dataZoom : {
                        y:&lt;/span&gt;130&lt;span&gt;,
                        show : &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;,    &lt;span&gt;//
&lt;/span&gt;                        realtime: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                        height:&lt;/span&gt;15&lt;span&gt;,
                        start : &lt;/span&gt;0&lt;span&gt;,
                        end : &lt;/span&gt;100&lt;span&gt;
                    },
            toolbox: {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;工具栏显示             &lt;/span&gt;
                        show: &lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                         x:&lt;/span&gt;900&lt;span&gt;,
                        feature: { 
                            dataZoom : {
                                show : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;,  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;legendshow&lt;/span&gt;
&lt;span&gt;                                title : {
                                    dataZoom : &lt;/span&gt;'区域缩放'&lt;span&gt;,
                                    dataZoomReset : &lt;/span&gt;'区域缩放后退'&lt;span&gt;
                                }
                            },
                             restore : {
                                show : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,  
                                title : &lt;/span&gt;'还原'&lt;span&gt;
                            },           
                        }
                    },
                    xAxis: {
                        type: &lt;/span&gt;'category'&lt;span&gt;,
                        position:&lt;/span&gt;'bottom'&lt;span&gt;,
                        boundaryGap : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                        axisTick: {onGap:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;},
                        splitLine: {show:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;},
                        data: t.F_X ,     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;填入X轴数据&lt;/span&gt;
&lt;span&gt;                    },
                    color:colors,
                    legend: {    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图表上方的类别显示           &lt;/span&gt;
&lt;span&gt;                        show:legendshow,
                        data:sj
                    },
                    series: f_y, 
                    yAxis : [   
                        {
                             type : &lt;/span&gt;'value'&lt;span&gt;,
                             name : t.F_Z                 
                         }                
                    ]
                };   
      &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; ecConfig = require('echarts/config'&lt;span&gt;)
                tempmyech.showLoading();    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据加载完之前先显示一段简单的loading动画&lt;/span&gt;
                tempmyech.hideLoading();    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;隐藏加载动画&lt;/span&gt;
&lt;span&gt;                tempmyech.resize();
                tempmyech.setOption(option);    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;载入图表&lt;/span&gt;
                tempmyech.on(ecConfig.EVENT.CLICK, eConsole);   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;网上经典方法&lt;/span&gt;
                tempmyech.on('click',  conck);  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;精简版方法&lt;/span&gt;
&lt;span&gt;                mdataeahars.push(tempmyech);
          }
    )}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 我想有眼睛亮的同学已经看到某些微妙的点了，例如 右键阻止和绑定方法，以及双击绑定方法，因为浏览自身有右键属性，所以这里先禁用，后添加。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:javascript;gutter:true;&quot;&gt;
   tempmyech = ec.init($(&quot;.&quot;+jin_cid)[item]);  // 基于准备好的dom，初始化echarts实例 
    $($(&quot;.&quot;+jin_cid)[item]).contextmenu(
       function(e){
            e.preventDefault();
            chartcontextmenu()
       }
    );
      $($(&quot;.&quot;+jin_cid)[item]).bind(&quot;dblclick.a&quot;, chartDbck);  //双击方法，防止事件冲突
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　之后我们继续把联动的相关方法补进来：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;生成静态控制图形&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt;  mainFactory(mdataeahars){
     require(
        [  &lt;/span&gt;'echarts'&lt;span&gt;,
                &lt;/span&gt;'echarts/chart/bar',&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 使用柱状图就加载bar模块，按需加载&lt;/span&gt;
&lt;span&gt;                ],
     &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(ec){
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; fmian='&amp;lt;div id=&quot;mainf&quot;&amp;gt;&amp;lt;/div&amp;gt;'&lt;span&gt;
        $(&lt;/span&gt;&quot;#startmian&quot;&lt;span&gt;).append(fmian); 
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; sf=document.getElementById('mainf'&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; main0_ec=&lt;span&gt;ec.init(sf); 
             main0_ec.setTheme(&lt;/span&gt;&quot;macarons&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  option=&lt;span&gt;{
                    grid: {
                        y:&lt;/span&gt;300&lt;span&gt;,
                        left: &lt;/span&gt;'3%'&lt;span&gt;,
                        right: &lt;/span&gt;'4%'&lt;span&gt;,
                        height:&lt;/span&gt;&quot;0%&quot;&lt;span&gt;,
                        containLabel: &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;
                    },
                    dataZoom : {
                        y:&lt;/span&gt;2&lt;span&gt;,
                        show : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
                        height:&lt;/span&gt;20&lt;span&gt;,
                        start : &lt;/span&gt;0&lt;span&gt;,
                        end : &lt;/span&gt;100&lt;span&gt;,
                        backgroundColor:&lt;/span&gt;&quot;#fff&quot;,  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;背景色&lt;/span&gt;
                        dataBackground :&quot;#5285b3&quot;,   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据阴影的样式&lt;/span&gt;
                        fillerColor :&quot;#5285b3&quot;,   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;选中范围的填充颜色。&lt;/span&gt;
&lt;span&gt;                    },     
                    xAxis : [
                        {
                            type : &lt;/span&gt;'category', &lt;span&gt;//&lt;/span&gt;&lt;span&gt;x轴为类目类型&lt;/span&gt;
                            data : ['',''&lt;span&gt;]
 
                    }],
                    yAxis : [
                        {
                            type : &lt;/span&gt;'value'  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;y轴为值类型&lt;/span&gt;
&lt;span&gt;                        }
                    ],
                    series : [{  
                        name:&lt;/span&gt;'ctroller'&lt;span&gt;,
                        type:&lt;/span&gt;'line'&lt;span&gt;,
                        data:[&lt;/span&gt;'',''&lt;span&gt;]
                    }]
            };
                main0_ec.setOption(option);    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;载入图表&lt;/span&gt;
&lt;span&gt;                mdataeahars.push(main0_ec);
     })
    }
 &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;所有图表集合&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; linkFn(adata,adatalength){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; time2= setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(mdataeahars.length==&lt;span&gt;adatalength){ 
        clearInterval(time2) ;
        mainFactory(mdataeahars);            
        &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  sokf; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 接临时删除的数据&lt;/span&gt;
          $.each(mdataeahars,&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(i,t){
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(mdataeahars.length==adatalength+1&lt;span&gt;){
                sokf&lt;/span&gt;=mdataeahars[0&lt;span&gt;];
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  em=arydlt(mdataeahars[0&lt;span&gt;],mdataeahars);
                 mdataeahars.push(sokf);
                linkage(mdataeahars[mdataeahars.length&lt;/span&gt;-1&lt;span&gt;],em); 
            }                            
          }); 
         }
    },&lt;/span&gt;500&lt;span&gt;) 
}
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;联动数组&lt;/span&gt;
 &lt;span&gt;function&lt;/span&gt;&lt;span&gt;  linkage(mit ,em){
    mit.connect(em);
 }
 &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;去除元素&lt;/span&gt;
 &lt;span&gt;function&lt;/span&gt;&lt;span&gt;  arydlt(item,arr){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; dtemparr=arr||&lt;span&gt;[];
         dtemparr.remove(item);
      &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;  dtemparr;
 }
Array.prototype.remove&lt;/span&gt;= &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(val) {
 &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0; i&amp;lt;&lt;span&gt;this&lt;/span&gt;.length; i++&lt;span&gt;) {
      &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;this&lt;/span&gt;[i] ==&lt;span&gt; val) {
          &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.splice(i, 1&lt;span&gt;);
          &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        }
  } 
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你们会发现，怎么多了一个静态的echart图形，不要急，这是在多图联动基础上把 滚动条功能独立出来，用grid定位和压缩方式，让这个静态图变成一个滚动条控制所有图，部分人或许能用到这样的方式；给大家看看效果怎么吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1229612/201712/1229612-20171211230302618-358390962.png&quot; alt=&quot;&quot; width=&quot;1101&quot; height=&quot;338&quot;/&gt;&lt;/p&gt;
&lt;p&gt;好了，估计一部分人已经有点不耐烦了，叫嚣着”给本大人拿出点干货来“；哈哈，不罗嗦，我们继续下面的点击事件为核心进行讲解；&lt;/p&gt;
&lt;p&gt;首先我们先看看网上常用，两种经典点击事件案例说到一下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;常用单击曲线方法&lt;/span&gt;
  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;方法一&lt;/span&gt;
   &lt;span&gt;function&lt;/span&gt;&lt;span&gt; conck (param) {
      console.log(param);
      &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  dataxtime=&lt;span&gt;  param.name;
      alert(dataxtime);
    }
     &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;方法二&lt;/span&gt;
 &lt;span&gt;function&lt;/span&gt;&lt;span&gt; eConsole (param) {
      console.log(param);
      &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  dataxtime=&lt;span&gt;  param.name;
      alert(dataxtime);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这两种，方法一是精简版的：只需要在上面使用&lt;strong&gt;&lt;span&gt;tempmyech.on('click',  conck);  //精简版方法。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;给一个回调就可以了。用法很简洁，我就称其精简版方法吧。第二种需要&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;var&lt;/span&gt; ecConfig = require('echarts/config'&lt;span&gt;);
   tempmyech.on(ecConfig.EVENT.CLICK, eConsole);   &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;网上经典方法&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样申明回调才可以使用，这是最常见的2种，二者性质一样，但是有一个缺点：&lt;strong&gt;&lt;span&gt;都是需要点击折线图的亮点（其他图如柱状图，堆叠等不影响），所谓有亮点，就有隐藏点（亮点之间的点），因折线图大量数据时，上面两种方法就很无语了，因为获取不到隐藏点的数据；&lt;/span&gt;&lt;/strong&gt;需要不断放大才能变成亮点来获取。而右键点击在3.0以下版本是没有的，我的版本2.2.7，所以我在在上面那么搞，当然我也有改过echarts源码，给其添加一个右键方法，效果和上面一样，不太好用。所以我才有下面方案去解决这个问题&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;50&quot;&gt;
&lt;pre&gt;
ar fmtresult=&quot;&quot;,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;随时接收format数据中x轴来源&lt;/span&gt;
      dataxtimeArr=[];&lt;span&gt;//&lt;/span&gt;&lt;span&gt;标线的data数组&lt;/span&gt;
  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;formatter 回掉函数&lt;/span&gt;
  &lt;span&gt;function&lt;/span&gt;&lt;span&gt; Fmtresult(fmtres){
      fmtresult&lt;/span&gt;=&lt;span&gt;fmtres;
  }
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;双击echart地图&lt;/span&gt;
  &lt;span&gt;function&lt;/span&gt;&lt;span&gt;  chartDbck(){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; dataxtime=&lt;span&gt;fmtresult;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(dataxtimeArr.length==0|(dataxtimeArr.length!=0 &amp;amp;&amp;amp;!&lt;span&gt;checkformat(dataxtime))){
            dataxtimeArr.push([
          {name: &lt;/span&gt;&quot;标线&quot;+dataxtime+'起点', xAxis: dataxtime,y: 35&lt;span&gt;},   
          {name: &lt;/span&gt;&quot;标线&quot;+dataxtime+'终点',xAxis: dataxtime, y: 450&lt;span&gt;}          
          ]);
       }
    $.each(dataGoz,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(i,t){
         $.each(t.F_Y,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(m,n){
            n.markLine.data&lt;/span&gt;=&lt;span&gt;dataxtimeArr;
         });
    })  
    nstart(dataGoz);  
  }
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;检测并删除已有标线&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; checkformat(dataxtime){
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt;  fls=&lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i = dataxtimeArr.length - 1; i &amp;gt;= 0; i--) {  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;删除已有的标线&lt;/span&gt;
       &lt;span&gt;if&lt;/span&gt;(dataxtimeArr[i][0].xAxis==&lt;span&gt;dataxtime){
        dataxtimeArr.splice(i,&lt;/span&gt;1&lt;span&gt;); 
        fls&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
          &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        }
      }
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;  fls;
  }
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;echarts右击事件&lt;/span&gt;
  &lt;span&gt;function&lt;/span&gt;&lt;span&gt; chartcontextmenu(){
    checkformat(fmtresult);
   $.each(dataGoz,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(i,t){
        $.each(t.F_Y,&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(m,n){
            n.markLine.data&lt;/span&gt;=&lt;span&gt;dataxtimeArr;
         });
   })  
    nstart(dataGoz);  
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先我们讲解双击方法：双击功能如下：双击任意一个图上任一点，在鼠标处绘制出一条平行Y轴的标线。再次双击则删除标线；&lt;br/&gt;其中通过定义一个全局变量fmtresult接收tooltip 中&lt;strong&gt;&lt;span&gt;formatter&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的&lt;/span&gt;回调函数&lt;strong&gt;&lt;span&gt;Fmtresult（）的X轴值；这个&lt;strong&gt;formatter的回调函数中有我们想要的鼠标点击的数据。&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;部分人看到这样，估计已然豁然开朗了。双击事件中需要说明的是：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1229612/201712/1229612-20171211232813134-730006338.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这个作用是：&lt;strong&gt;&lt;span&gt;1.当标线数据为空则双击添加，2.若不为空，且不重复，则添加；3.若重复则删除。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;若是有人问为什么这样格式去添加标线，其实添加多条标线方式不止种，网上有很多案例，常用定义起始点的2种是 ：1.xAxis和yAxis 数据定义范围；2:x,y位置定位；这里就不再多说了。右键点击功能就是删除标线；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 我们通过双击几条数据画标线和单击所打印的数据展示效果图看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1229612/201712/1229612-20171211233903837-1052307388.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;好，本期就讲解到这里，属作者原创，如有转载，请表明出处：&lt;a title=&quot;echarts点击绘图&quot; href=&quot;http://www.cnblogs.com/mobeisanghai/p/8025448.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/mobeisanghai/p/8025448.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 15:44:00 +0000</pubDate>
<dc:creator>漠北桑海</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mobeisanghai/p/8025448.html</dc:identifier>
</item>
<item>
<title>ViewPager使用记录3——循环展示 - ChardLau</title>
<link>http://www.cnblogs.com/developerdaily/p/8025592.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/developerdaily/p/8025592.html</guid>
<description>&lt;p&gt;ViewPager是v4支持库中的一个控件，相信几乎所有接触Android开发的人都对它不陌生。之所以还要在这里翻旧账，是因为我在最近的项目中有多个需求用到了它，觉得自己对它的认识不够深刻。我计划从最简单的使用场景出发，记录我到目前为止所对ViewPager的使用情况以及有关它的一些知识点。&lt;/p&gt;
&lt;p&gt;这个系列的代码将存放在&lt;a href=&quot;https://github.com/chardlau/viewpager-usage&quot;&gt;Github仓库&lt;/a&gt;中，每篇文章对应一个分支或几个分支。&lt;/p&gt;
&lt;p&gt;这是第三篇文章，将讨论集中有关如何使用ViewPager展示无限循环视图的方法。&lt;/p&gt;

&lt;p&gt;这是最简单的实现方法。关键在于重写&lt;code&gt;PagerAdapter.getCount&lt;/code&gt;方法，将其返回值设置为&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;，然后通通过取模&lt;code&gt;position%count&lt;/code&gt;的方式获取得对应的数据进行视图渲染。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
...
@Override
public int getCount() {  
    return Integer.MAX_VALUE;
}

@Override
public Object instantiateItem(ViewGroup container, int position) {  
    int index = position % 3;
    String text = texts.get(index);
    TextView textView = new TextView(container.getContext());
    textView.setText(text);
    container.addView(textView);
    return textView;
}
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这种方法毕竟不是真实的无限循环，只是虚拟了一个极大的页数，让用户翻页的时候很触及到“世界的尽头”。所以在初始化的时候需要完成一个关键初始化：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
viewPager.setCurrentItem(Integer.MAX_VALUE / 2, false);  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把初始化页面定位到世界的中央。&lt;/p&gt;
&lt;p&gt;相关代码在&lt;a href=&quot;https://github.com/chardlau/viewpager-usage/tree/03-fake-infinite-cycle&quot;&gt;分支：03-fake-infinite-cycle&lt;/a&gt;可以获取。&lt;/p&gt;
&lt;h5 id=&quot;2&quot;&gt;方法2：在数据源首尾添加重复节点&lt;/h5&gt;
&lt;p&gt;这是实现&lt;code&gt;ViewPager&lt;/code&gt;无限循环的另一种方案：通过在数据源的首尾处添加重复的数据（在源数据前插入最后一个数据，其后插入原来的第一个数据），这两个重复数据的作用是在滚动过程中作为中间视图，当滚动停止时立刻切换到最终的视图，进入下一个滚动循环。&lt;/p&gt;
&lt;p&gt;相关代码见&lt;a href=&quot;https://github.com/chardlau/viewpager-usage/tree/03-infinite-cycle-with-additional-views&quot;&gt;分支：03-infinite-cycle-with-additional-views&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先在往PagerAdapter插入数据的时候对数据进行一下处理：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
public void setTexts(List&amp;lt;String&amp;gt; texts) {  
    this.texts.clear();
    if (texts == null) {
        notifyDataSetChanged();
        return;
    }

    // 只有一个数据时不循环
    if (texts.size() == 1) {
        this.texts.addAll(texts);

    // 多个数据，插入重复数据
    } else if (texts.size() &amp;gt; 1) {
        this.texts.add(texts.get(texts.size() - 1));
        this.texts.addAll(texts);
        this.texts.add(texts.get(0));
    }

    notifyDataSetChanged();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其次让ViewPager实现&lt;code&gt;ViewPager.OnPageChangeListener&lt;/code&gt;接口，监听滚动状态。代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
@Override
public void onPageSelected(int position) {  
    int realCount = getCount() - 2;
    // 多于1，才会循环跳转
    if ( getCount() &amp;gt; 1) {
        // 首位之前，跳转到末尾（N）
        if ( position &amp;lt; 1) {
            position = realCount;
            viewPager.setCurrentItem(position,false);
        }
        // 末位之后，跳转到首位（1）
        else if ( position &amp;gt; realCount) {
            position = 1;
            viewPager.setCurrentItem(position,false);
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后组装一下&lt;code&gt;ViewPager&lt;/code&gt;和&lt;code&gt;PagerAdapter&lt;/code&gt;即可：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
viewPager.setAdapter(adapter);  
viewPager.addOnPageChangeListener(adapter);  
if (adapter.getCount() &amp;gt; 1) {  
    viewPager.setCurrentItem(1, false);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意最后的&lt;code&gt;if&lt;/code&gt;语句，它让ViewPager默认显示第一页。否则页面将展示最后一个源数据的内容且无法向右滑动。&lt;/p&gt;
&lt;p&gt;实际上这种方法也是有缺陷的。当用户滑动&lt;code&gt;ViewPager&lt;/code&gt;到源数据的最后一个节点（下标：getCount()-2）并且先要继续滑动显示下一个节点时，这期间&lt;code&gt;ViewPager&lt;/code&gt;首先随用户手指一动正常展示我们插入的重复内容(下标：getCount()-1)，当滚动停止且触发了&lt;code&gt;onPageSelected&lt;/code&gt;回调，ViewPager立即切换到源数据的第一页（下标：1）进入下一个循环。这会导致几个不协调的现象：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;切换到下一个循环的时候会破坏&lt;code&gt;ViewPager&lt;/code&gt;的滚动动画（如：滚动惯性动画）。&lt;/li&gt;
&lt;li&gt;切换前展示的缓存视图在切换时被销毁，切换后的视图需要重新生成。如果这里有需要延迟加载的内容也会导致展示不协调。&lt;/li&gt;
&lt;/ol&gt;&lt;h5 id=&quot;32&quot;&gt;方法3：改进方法2&lt;/h5&gt;
&lt;p&gt;针对上述方法2提出的两个缺点，在此将着重解决缺点1出现的动画不连贯的现象，作为第三种方案进行介绍。至于缺点2可以通过缓存视图的方式解决，就不在此赘述。&lt;/p&gt;
&lt;p&gt;方法3的代码见&lt;a href=&quot;https://github.com/chardlau/viewpager-usage/tree/03-infinite-cycle-better-practise&quot;&gt;分支：03-infinite-cycle-better-practise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该方案已经满足我目前的需求。它的关键点如下：&lt;/p&gt;
&lt;p&gt;首先，如方法2一样在数据源头尾插入重复节点，用于过渡。这里我重新写了&lt;code&gt;setTexts&lt;/code&gt;方法，让只有一个数据的场景也可以循环：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
public void setTexts(List&amp;lt;String&amp;gt; texts) {  
    this.count = 0;
    this.texts.clear();
    if (texts != null &amp;amp;&amp;amp; texts.size() &amp;gt; 0) {
        this.count = texts.size();
        for (int i = 0; i &amp;lt;= count + 1; i++) {
            if (i == 0) {
                this.texts.add(texts.get(count - 1));
            } else if (i == count + 1) {
                this.texts.add(texts.get(0));
            } else {
                this.texts.add(texts.get(i - 1));
            }
        }
    }
    notifyDataSetChanged();
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来解决方法2的动画不连贯的问题。注意到在方法2中在&lt;code&gt;OnPageChangeListener&lt;/code&gt;的&lt;code&gt;onPageSelected&lt;/code&gt;方法中处理了循环的跳转逻辑。然后&lt;code&gt;onPageSelected&lt;/code&gt;是&lt;code&gt;ViewPager&lt;/code&gt;处理&lt;code&gt;ACTION_UP&lt;/code&gt;事件时回调的。也就是说，当用户的手指时快速拖动后离开&lt;code&gt;ViewPager&lt;/code&gt;时，&lt;code&gt;ViewPager&lt;/code&gt;回调了该方法，然后还会继续后续的衰减动画。在这个时间点使用&lt;code&gt;setCurrentItem&lt;/code&gt;跳转到指定视图必然会造成动画停顿的问题。&lt;/p&gt;
&lt;p&gt;把切换循环改在&lt;code&gt;ViewPager&lt;/code&gt;的滚动状态发生变化时进行。怎么做呢？见代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;39&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
// count为源数据的条目
// currentItem为PagerAdapter当前选中项
@Override
public void onPageSelected(int position) {  
    currentItem = position;
}
@Override
public void onPageScrollStateChanged(int state) {  
    switch (state) {
        case ViewPager.SCROLL_STATE_IDLE://No operation
            if (currentItem == 0) {
                viewPager.setCurrentItem(count, false);
            } else if (currentItem == count + 1) {
                viewPager.setCurrentItem(1, false);
            }
            break;
        case ViewPager.SCROLL_STATE_DRAGGING: //start Sliding
            if (currentItem == 0) {
                viewPager.setCurrentItem(count, false);
            } else if (currentItem == count + 1) {
                viewPager.setCurrentItem(1, false);
            }
            break;
        case ViewPager.SCROLL_STATE_SETTLING://end Sliding
            break;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码中在状态变为停止“&lt;code&gt;SCROLL_STATE_IDLE&lt;/code&gt;”或状态变为开始滚动“&lt;code&gt;SCROLL_STATE_DRAGGING&lt;/code&gt;”时处理了循环切换的逻辑。&lt;/p&gt;
&lt;p&gt;这里描述一下整个流程。如果用户处于第一页且继续向右滑动手指，或者处于最后一页且继续向左滑动手指时，在状态由空闲变为开始滚动“&lt;code&gt;SCROLL_STATE_DRAGGING&lt;/code&gt;”进行切换。第一种情况，如果最终成功切换到目标页面，那么在状态变为空闲时由于&lt;code&gt;currentItem&lt;/code&gt;已经发生变化，所以不会重复切换。第二种情况，如果没有成功切换到目标页面，&lt;code&gt;ViewPager&lt;/code&gt;需要在状态变为“&lt;code&gt;SCROLL_STATE_IDLE&lt;/code&gt;”时再次切换回原来的视图。&lt;/p&gt;
&lt;p&gt;注意在初始化&lt;code&gt;ViewPager&lt;/code&gt;时调用一下&lt;code&gt;setCurrentItem(1)&lt;/code&gt;，让它正确显示第一个视图。&lt;/p&gt;
&lt;h5 id=&quot;&quot;&gt;小结&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;ViewPager&lt;/code&gt;循环展示数据的方法目前就介绍到这里。我认为方法1和方法3根据不同场景考虑是否使用。出于某种情结，我更倾向于使用方法3，毕竟方法三是查看了github中的banner库之后总结出来的。&lt;/p&gt;

&lt;p&gt;本文来自作者同步&lt;a href=&quot;http://www.chardlau.com/2017/12/11/infinite-cycle-display/&quot; target=&quot;_blank&quot;&gt;博客&lt;/a&gt;&lt;a href=&quot;http://www.chardlau.com/2017/10/24/display-dynamic-data/&quot; target=&quot;_blank&quot;&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 15:31:00 +0000</pubDate>
<dc:creator>ChardLau</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/developerdaily/p/8025592.html</dc:identifier>
</item>
<item>
<title>CSS书写规范与理论 - GuJinYu</title>
<link>http://www.cnblogs.com/jinyuGu/p/8025587.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jinyuGu/p/8025587.html</guid>
<description>&lt;p&gt;       前端体系的变化可谓是日新月异，短短一年时间，从理论、框架、构建工具、甚至开发语言都发生非常大的变化。&lt;span&gt; 随着新项目就即将启动，我抽时间回顾了一下以往项目的前端架构，零零散散产生了许多想法，尽量一一记录下来，为新的框架搭建做点准备。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;       首先来聊聊CSS的的各种规范与理论。&lt;span&gt;回顾过去的代码，首先让我头痛不已的就是那些不知所谓的类名，以及数不清的难以维护的CSS/LESS代码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;       我曾经对自己和前端小组的成员提出过要求，强制使用BEM方法来书写CSS，但是在使用的过程中，也出现了总总问题。     &lt;/p&gt;
&lt;p&gt;       它带来的好处是显而易见的，每个元素都被清晰描述出来，这也非常符合自文档化代码的要求。&lt;span&gt;但同时也引发很多诸多问题&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;单纯使用BEM方法，并没有很好的去构建CSS的结构&lt;/li&gt;
&lt;li&gt;复杂的业务逻辑带来复杂的页面，导致复杂的类名。&lt;/li&gt;
&lt;li&gt;组件的嵌套以及组件状态使得一个元素上应用大量的类，这让第二个问题更加严重&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;      在这个过程中，我们开始松懈了要求，这使得我们的CSS代码又回到了混乱无序的原始时代。&lt;/p&gt;
&lt;p&gt;      因此我想我必须去重新去探究CSS的各种规范与理论。&lt;/p&gt;
&lt;p&gt;一、OOCSS（面向对象的CSS）&lt;/p&gt;
&lt;p&gt;　　OOCSS有两个主要的原则：分离结构和外观，以及分离容器和内容。&lt;/p&gt;
&lt;p&gt;　　与任何基于对象的编程方法一样，&lt;strong&gt;OOCSS 的目的是鼓励代码复用&lt;/strong&gt;，使得最终的样式可以更快地和更有效地添加和维护。&lt;/p&gt;
&lt;p&gt; 　  OOCSS风格的CSS也可以描述为两点：增加class、不使用继承选择符。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
&amp;lt;div class=&quot;box simple&quot;&amp;gt;
    &amp;lt;div class=&quot;box-content active&quot;&amp;gt;
           &amp;lt;p class=&quot;box-title&quot;&amp;gt;OOCSS&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　上面这段代码是一段遵循OOCSS模式的代码&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;其中&quot;normal&quot;作为外观和结构分离，例如&quot;simple&quot;可用使用的是直角，我将&quot;simple&quot;换成&quot;complex&quot;，就&quot;box&quot;变成了圆角。&lt;/li&gt;
&lt;li&gt;分离容器和内容，是指不再将元素位置作为样式的限定词，比如&quot;box-title&quot;就是文本的样式，无论这个类作用在哪里，都会是相同的样式呈现。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;       &lt;/strong&gt;OOCSS的缺点&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;OOCSS适合真正的大型网站开发，因为大型网站用到的可重用性组件特别的多，如果运用在小型项目中可能见不到什么成效。所以用不用OOCSS应该根据你的项目来决定。&lt;/li&gt;
&lt;li&gt;如果没用巧妙的使用，创建组件可能对于你来说是一堆没用的东西，成为一烂摊子，给你的维护带来意想不到的杯具，说不定还是个维护的噩梦。&lt;/li&gt;
&lt;li&gt;最好给每一个组件备写一份说明文档，有助于调用与维护&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;二、SMACSS（模块化架构可扩展CSS）&lt;/p&gt;
&lt;p&gt;　　我们把上面的代码用SMACSS风格来再次写出来&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
&amp;lt;div class=&quot;box box-simple&quot;&amp;gt;
    &amp;lt;div class=&quot;box-content is-active&quot;&amp;gt;
           &amp;lt;p class=&quot;box-title&quot;&amp;gt;SMACSS&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;   
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　尽管SMACSS和OOCSS有许多相似之处。但不同点是它把样式系统划分为五个具体类别。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;基础
&lt;/li&gt;
&lt;li&gt;布局
&lt;/li&gt;
&lt;li&gt;模块
&lt;ul&gt;&lt;li&gt;设计中的模块化、可复用单元，就如同代码中的&quot;box-title&quot;一样，无论这个类作用在哪里，都会是相同的样式呈现&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;状态
&lt;ul&gt;&lt;li&gt;描述在特定状态或情况下的显示方式，代码中的“is-active”就是一个状态类&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;主题
&lt;ul&gt;&lt;li&gt;一个可选的视觉外观层，可以让你更换不同主题　　　&lt;/li&gt;
&lt;li&gt;主题可以修改前面4个类别的样式，且应和前面4个类别分离开来（便于切换，也就是“换肤”）。&lt;/li&gt;
&lt;li&gt;SMACSS的Theme Rules不要求使用单独的class命名，也就是说，你可以在布局中定义.header{ }，然后在主题中也用.header { }来定义需要修改的部分来覆盖前面的样式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三、BEM（块元素修饰符）&lt;/p&gt;
&lt;p&gt;　　同样的，使用BEM风格，重写上面的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
&amp;lt;div class=&quot;box box--simple&quot;&amp;gt;
    &amp;lt;div class=&quot;box__content box__content--active&quot;&amp;gt;
           &amp;lt;p class=&quot;box__title&quot;&amp;gt;BEM&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　BEM是一个CSS命名的命名规则，它不涉及如何书写CSS的结构，只是建议每个元素都添加带有如下内容的CSS类名&lt;/p&gt;
&lt;p&gt;　　　　　　所属组件的名称&lt;/p&gt;
&lt;p&gt;                     元素在块里面的名称&lt;/p&gt;
&lt;p&gt;　　　　　　任何与块或元素相关联的修饰符&lt;/p&gt;
&lt;p&gt;　　BEM模式下，看起来很累赘、很冗余，但是每一个CSS类名都很好的描述了它的作用，在结合LESS或者SASS使用时，会使它的书写复杂程度降低。&lt;/p&gt;
&lt;p&gt;四、规则文档　&lt;/p&gt;
&lt;p&gt;　　我们往往会非常注重大的方法，而忘记细节，而一份完善的规则文档会时刻提醒我们按照要求书写代码&lt;/p&gt;
&lt;p&gt;　　一份好的规则文档，应该遵循以下规范：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;ul&gt;&lt;li&gt;中包含不可变的规则，而不是笼统的说明&lt;/li&gt;
&lt;li&gt;总是把规则提炼成最简单的表达&lt;/li&gt;
&lt;li&gt;总是首先说明规则 是什么，再说明“如果不这样，那么会如何”&lt;/li&gt;
&lt;li&gt;每个规则必须包含以下词中的一个——总是、永远不要、只有、每一个、不要、要　　&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;五、综合方案&lt;/p&gt;
&lt;p&gt;　　就像开篇所说一样，单纯的使用BEM并没有很好的解决我们在项目中所遇到能再的问题，反而产生了新的问题。&lt;/p&gt;
&lt;p&gt;　　但这并不是BEM的责任，CSS作为前端架构的重要一环，我们必须要针对项目来选择一个合适的解决方案，而不是因为业界流行就去使用它。&lt;/p&gt;
&lt;p&gt;　　往往单一的理论是无法支撑起真实需求的，因此，我们必须结合现有的方法来制定一个新的方案。&lt;span&gt;比如继续坚持BEM风格以及js hook，同时引入SMACSS、OOCSS亦或者其他方法，并且&lt;/span&gt;&lt;span&gt;用一份严格的规则文档来规范整个项目的细节。&lt;/span&gt;&lt;/p&gt;


&lt;hr/&gt;
&lt;p&gt;如果喜欢我的文章，可以扫描二维码关注我的微信公众号&lt;/p&gt;
&lt;p&gt;争取每天都分享一点我自己的开发和练习体验～&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1287894/201712/1287894-20171207160821238-2007856540.jpg&quot; alt=&quot;qrcode_for_gh_a80ae0bf035f_344&quot;/&gt;￼&lt;/p&gt;

</description>
<pubDate>Mon, 11 Dec 2017 15:30:00 +0000</pubDate>
<dc:creator>GuJinYu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jinyuGu/p/8025587.html</dc:identifier>
</item>
<item>
<title>FastDFS教程Ⅲ-文件服务器扩容 - 无涯Ⅱ</title>
<link>http://www.cnblogs.com/wlandwl/p/fastdfsAdd.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wlandwl/p/fastdfsAdd.html</guid>
<description>&lt;h3 class=&quot;para&quot;&gt;1.简介&lt;/h3&gt;
&lt;p&gt;    FastDFS文件服务器在设计时，为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。FastDFS中的文件标识分为两个部分：卷名和文件名，二者缺一不可。&lt;/p&gt;
&lt;p&gt;   基于FastDFS文件服务器的特性，在做文件扩充容量时，可采取如下两种方案：&lt;/p&gt;
&lt;div class=&quot;para&quot;&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;扩充group的存储空间，配置多个存储文件目录地址。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩充存储节点，新加服务器配置多个storage。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class=&quot;para&quot; readability=&quot;20.295863653772&quot;&gt;
&lt;div class=&quot;para&quot; readability=&quot;35.641516660283&quot;&gt;
&lt;h3&gt;2.storage文件存储原理介绍&lt;/h3&gt;
&lt;p&gt;  在处理文件服务器扩充容量的时候，首先需要了解文件服务器存储的关键机制和一些重要参数。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;一般设置一个storage属于一个分组group,一个分组group对应的数据存储目录地址可一个或多个。（这一点保证了group的文件地址容量扩展）&lt;/li&gt;
&lt;li&gt;一个group的一个目录存储地址最多可存储的文件个数为：256*256*1000=65536000。storage文件存储机制中，有小文件合并存储到一个大文件的机制。&lt;/li&gt;
&lt;li&gt;一个storage可以配置多个tracker地址，同理一个tracker可以分配文件存储到多个storage上面。（这一点保证了服务器storage容量扩展）&lt;/li&gt;
&lt;li&gt;当一个storage中有多个文件目录地址时，通过tracker.conf中的关键参数&lt;strong&gt;store_path，&lt;/strong&gt;可以配置一个文件在存储时，多个对应存储目录地址的存储机制，如轮询或选择剩余空间大的文件目录。&lt;/li&gt;
&lt;li&gt;当一个tracker对应的存储storage具有多个时，通过tracker.conf中的&lt;strong&gt;store_lookup，store_server，&lt;/strong&gt;可以配置当文件上传时，对应多个storage服务器的存储机制，如轮询或选择空间大的服务器。&lt;/li&gt;
&lt;li&gt;storage文件服务器默认存储空间配置时，当达到文件目录空间的10%时，便不可以在存储文件，可通过tracker.conf中的&lt;strong&gt;reserved_storage_space&lt;/strong&gt;参数，修改默认值。&lt;/li&gt;
&lt;li&gt;多个storage可以属于一个组或多个组，当两个或多个storage属于一个组时，各个storage中的文件相互备份。这种机制的优点是保证了文件服务器的备份和负载均衡，缺点是两个storage的存储容量是两个中较小storage的存储容量。&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;2.基于group模式的文件存储扩容&lt;/h3&gt;
&lt;p align=&quot;left&quot;&gt;     group模式扩容是通过给group的机器添加硬盘的方式，实现某个group的扩容。fastdfs在一台服务器支持多个store_path，每个store_path指向一个存储路径。如：url “M00/3F/E1/oYYBAFXfyuOABOf5AAAHoDwhqE0491.txt”中M00表示使用store_path0，如果没有配置store_path，就使用base_path的路径。添加了硬盘后，通过把新的store_path指向新硬盘的挂载点，再修改配置文件，就能实现group的扩容。扩容后的地址如：url “M01/3F/E3/oYYBAFXfyuOABOf5AAAHoDwhqE0591.txt”中M01表示使用store_path1。group模式扩容主要步骤如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1.停止现有的tracker服务，storage服务，操作指令如：/etc/init.d/fdfs_trackerd stop ,/etc/init.d/fdfs_storaged stop ；&lt;/li&gt;
&lt;li&gt;2.修改/etc/fdfs/&lt;strong&gt;storage.conf&lt;/strong&gt;配置文件，修改字段store_path_count,新增store_path1文件存储路径，新建store_path1的文件目录；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;              &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211204547118-2032853231.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt; 3.修改/etc/fdfs/storage.conf/&lt;strong&gt;mod_fastdfs.conf&lt;/strong&gt;配置文件，修改字段store_path_count,新增store_path1文件存储路径，设置group1的配置信息；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;           &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211205350727-1855607908.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;4.修改/application/nginx/conf/nginx.conf配置文件，增加store_path1的访问代理；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;          &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211220435712-2033620118.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;5.重新启动tracker,storage,nginx服务，通过命令&lt;strong&gt; /usr/bin/fdfs_monitor /etc/fdfs/storage.conf&lt;/strong&gt;（ /usr/bin/fdfs_monitor为f调用astdfs的命令，根据安装目录而定）可查看文件服务器的运行状态和配置信息。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;         &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211221120212-1298012130.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;      &lt;strong&gt;结果展示&lt;/strong&gt;：调用文件clent.conf配置文件，通过文件上传命令上传文件，查看文件的存储地址信息如下：&lt;/p&gt;
&lt;p&gt;       &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211221621665-1401582851.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.基于storage模式的文件存储扩容&lt;/h3&gt;
&lt;p&gt;   storage扩容主要是通过新增服务器的模式，在一台电脑上安装多个storage的模式不推荐。新增一台服务器的目的是为了扩容，便不能让新加的storage与原来存在的storage属于同一个组，设置为同一个组并不能扩容，只是备份的效果。已有文件系统信息为：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;   单节点文件服务器：&lt;/strong&gt;ip:10.63.0.155  部署tracer,storage,nginx服务；&lt;/p&gt;
&lt;p&gt;   &lt;strong&gt;扩容信息为：&lt;/strong&gt;在服务器10.63.0.154上面新建storage存储文件。具体操作步骤如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;   1.在新的服务器上，安装单节点文件服务器，具体安装教程参考：&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/wlandwl/p/fastdfs.html&quot;&gt;FastDFS教程Ⅰ-文件服务器安装与Nginx配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;   2.安装好文件服务器，nginx等相关软件后，设置配置文件storage.conf的tracker地址为10.63.0.155上面的tracker地址；&lt;/li&gt;
&lt;li&gt;   3.配置storage.conf，mod_fastdfs.conf文件中的group名字，如已经存在的storage属于group2,新加的设置为group1;&lt;/li&gt;
&lt;li&gt;   4.修改已经存在的tracker服务器配置信息，修改文件有mod_fastdfs.conf，nginx.conf,storage_ids.conf文件；&lt;/li&gt;
&lt;li&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211224944821-2008845785.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;5.重新启动tracker,storage,nginx服务，通过命令&lt;strong&gt; /usr/bin/fdfs_monitor /etc/fdfs/storage.conf&lt;/strong&gt;（ /usr/bin/fdfs_monitor为f调用astdfs的命令，根据安装目录而定）可查看文件服务器的运行状态和配置信息。  &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211230510837-1038045801.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt; 结果展示&lt;/strong&gt;：调用文件clent.conf配置文件，通过文件上传命令上传文件，查看文件的存储地址信息如下：&lt;/p&gt;
&lt;p&gt;          &lt;img src=&quot;http://images2017.cnblogs.com/blog/626790/201712/626790-20171211231609446-2039606722.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;4.fastDFS文件系统扩容方案总结&lt;/h3&gt;
&lt;p&gt;    通过上述两种方式均可以达到文件扩容的目的，对于在服务器上面添加硬盘的模式，建议采用方案1，直接在group新加文件存储地址；在具有新的服务器时，可采用方案2处理。在服务器和硬盘信息都有的情况下，可同时采用这两种模式扩充容量。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 11 Dec 2017 15:26:00 +0000</pubDate>
<dc:creator>无涯Ⅱ</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wlandwl/p/fastdfsAdd.html</dc:identifier>
</item>
<item>
<title>运维自动化平台 - 千城program</title>
<link>http://www.cnblogs.com/qianchengprogram/p/8025566.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/qianchengprogram/p/8025566.html</guid>
<description>&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;project_type(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectType &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;project_info(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,unique&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;PackageName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectDir &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.TextField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;300&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;UpsName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Repertory &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;10&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;DeployAddress &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.TextField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;300&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Branch &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;100&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectType &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Port &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;10&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;MavenArgs &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;100&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;LastBuildStatus &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;LastBuildTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;server_project_r(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;InstanceId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;server_info(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;InstanceId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,unique&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;InstanceName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ZoneId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;PrivateIp &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Cpu &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Memory &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;OsType &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;PayType &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Status &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;build_history(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;BuildId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,unique&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Status &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;BuildLog &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.TextField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1000&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Note &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.TextField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1000&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;deploy_build_r(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;BuildId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;DeployId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Status &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;deploy_server(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;DeployId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;InstanceId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;PrivateIp &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ProjectName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, db_index&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;CreationTime &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.IntegerField(default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Note &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.TextField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1000&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Status &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;ecs_type(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;TypeName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;TypeId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;vswitch(models.Model):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;VswitchName &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;  &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;30&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;VswitchId &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;models.CharField(max_length&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, default&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;None&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, null&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;False&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 15:21:00 +0000</pubDate>
<dc:creator>千城program</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/qianchengprogram/p/8025566.html</dc:identifier>
</item>
<item>
<title>技术演讲需要准备什么？ - tylercao</title>
<link>http://www.cnblogs.com/tylercao/p/8025466.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tylercao/p/8025466.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/524680/201712/524680-20171211225456493-1384507594.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最近参加了 SA Summit 2017 的技术大会分享，在这边总结下并分享一下自己是如何准备的。请老司机们多提点建议。&lt;/p&gt;
&lt;h2 id=&quot;一了解观众的诉求&quot;&gt;一、了解观众的诉求&lt;/h2&gt;
&lt;p&gt;了解需求永远是做任何事的第一步，脱离了观众的诉求都是偏题的。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;需要知道这次技术分享的主题大方向是什么？是分布式架构、前端架构，还是运维架构。&lt;/li&gt;
&lt;li&gt;需要考虑到你的听众是谁？是 5 年以上的架构师，还是 3 年左右的工程师，不一样的听众背景决定了分享的侧重点，只有考虑到了听众的技术背景，才能有针对性的思考哪些内容可以详细解释，哪些可以一笔带过。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;二好的开始是成功的一半&quot;&gt;二、好的开始是成功的一半&lt;/h2&gt;
&lt;p&gt;开头的几分钟主要是自我介绍、演讲大纲介绍。一般自我介绍的时候，主要告诉大家&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;我是谁？
来自什么公司？
目前是什么职位及相关的从业经历&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;表达好自我介绍后，一定要告诉听众此次演讲对大家有什么好处。听完之后大家会收获什么知识，能够解决什么问题。&lt;/p&gt;
&lt;p&gt;如果安全的度过开始的三分钟，对应的紧张的情绪会极大的缓解。此时可以全神贯注的进行后面分享的内容。&lt;/p&gt;
&lt;p&gt;举个这次分享用过的例子&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;大家好，我是来自 XX 公司的架构师 XXX 
我原先在百度负责过 XX 系统，具有高并发、大流量的架构经验
接下来我会带着大家介绍 XX 公司 XX 系统的具体实践
通过本次分享，希望大家能学到通过使用 XX 能很好的解决公司 XX 问题&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;同时提点小的建议&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;提前来到现场 ：与前排的听众进行简单的沟通，熟悉一下，可以减少很大的压力&lt;/li&gt;
&lt;li&gt;分享前进行小调查 : 在坐的各位原来使用过这个 XX 技术吗？通过举手来进行互动与反馈&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;三内容思路&quot;&gt;三、内容思路&lt;/h2&gt;
&lt;p&gt;暖场后，最重要的就是演讲的思路，一般技术型演讲通过总分总的结构比较合适&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;问题背景 - 方案对比 - 方案落地 - 方案收益 - 总结&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;问题背景 ： 了解下问题产生的原因是什么？为什么要解决这个问题？&lt;/li&gt;
&lt;li&gt;方案对比 ： 带着听众进行方案的思路以及优劣对比，最好有真实的数据展示&lt;/li&gt;
&lt;li&gt;方案落地 ： 让听众了解具体方案落地，有哪些需要注意的坑，通过什么方法能解决这些问题&lt;/li&gt;
&lt;li&gt;方案收益 ： 落地之后，需要拿出真实的数据，体现出实施该方案的好处&lt;/li&gt;
&lt;li&gt;总结 ： 总结下实施过程的经验，以及后续的一些规划&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;四总结&quot;&gt;四、总结&lt;/h2&gt;
&lt;p&gt;最后演讲结束的时候，一定要进行总结，反复强调需要分享给听众的观点，最好不超过 3 个。这个部分不在多，而在于精，只要听众了解一个哪怕一个观点也是有收货的&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 14:58:00 +0000</pubDate>
<dc:creator>tylercao</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tylercao/p/8025466.html</dc:identifier>
</item>
<item>
<title>前端测试框架Jest系列教程 -- Mock Functions - 不负春光，努力生长</title>
<link>http://www.cnblogs.com/Wolfmanlq/p/8025329.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Wolfmanlq/p/8025329.html</guid>
<description>&lt;h2&gt;写在前面：&lt;/h2&gt;
&lt;p&gt;　　在写单元测试的时候有一个最重要的步骤就是Mock，我们通常会根据接口来Mock接口的实现，比如你要测试某个class中的某个方法，而这个方法又依赖了外部的一些接口的实现，从单元测试的角度来说我只关心我测试的方法的内部逻辑，我并不关注与当前class本身依赖的实现，所以我们通常会Mock掉依赖接口的返回，因为我们的测试重点在于特定的方法，所以在Jest中同样提供了Mock的功能，本节主要介绍Jest的Mock Function的功能。&lt;/p&gt;
&lt;h2&gt;Jest中的Mock Function&lt;/h2&gt;
&lt;p&gt;Mock 函数可以轻松地测试代码之间的连接——这通过擦除函数的实际实现，捕获对函数的调用 ( 以及在这些调用中传递的参数) ，在使用 &lt;code&gt;new&lt;/code&gt; 实例化时捕获构造函数的实例，或允许测试时配置返回值的形式来实现。Jest中有两种方式的Mock Function，一种是利用Jest提供的Mock Function创建，另外一种是手动创建来覆写本身的依赖实现。&lt;/p&gt;
&lt;p&gt;假设我们要测试函数 &lt;code&gt;forEach&lt;/code&gt; 的内部实现，这个函数为传入的数组中的每个元素调用一个回调函数，代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; forEach(items, callback) {
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (let index = 0; index &amp;lt; items.length; index++&lt;span&gt;) {
    callback(items[index]);
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了测试此函数，我们可以使用一个 mock 函数，然后检查 mock 函数的状态来确保回调函数如期调用。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
const mockCallback =&lt;span&gt; jest.fn();
forEach([&lt;/span&gt;0, 1&lt;span&gt;], mockCallback);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 此模拟函数被调用了两次&lt;/span&gt;
expect(mockCallback.mock.calls.length).toBe(2&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 第一次调用函数时的第一个参数是 0&lt;/span&gt;
expect(mockCallback.mock.calls[0][0]).toBe(0&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 第二次调用函数时的第一个参数是 1&lt;/span&gt;
expect(mockCallback.mock.calls[1][0]).toBe(1);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;几乎所有的Mock Function都带有 .mock的属性，它保存了此函数被调用的信息。 &lt;code&gt;.mock&lt;/code&gt; 属性还追踪每次调用时 &lt;code&gt;this&lt;/code&gt;的值，所以也让检视 this 的值成为可能：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
const myMock =&lt;span&gt; jest.fn();

const a &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; myMock();
const b &lt;/span&gt;=&lt;span&gt; {};
const bound &lt;/span&gt;=&lt;span&gt; myMock.bind(b);
bound();

console.log(myMock.mock.instances);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在测试中，需要对函数如何被调用，或者实例化做断言时，这些 mock 成员变量很有帮助意义︰&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个函数只调用一次&lt;/span&gt;
expect(someMockFunction.mock.calls.length).toBe(1&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个函数被第一次调用时的第一个 arg 是 'first arg'&lt;/span&gt;
expect(someMockFunction.mock.calls[0][0]).toBe('first arg'&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个函数被第一次调用时的第二个 arg 是 'second arg'&lt;/span&gt;
expect(someMockFunction.mock.calls[0][1]).toBe('second arg'&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个函数被实例化两次&lt;/span&gt;
expect(someMockFunction.mock.instances.length).toBe(2&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这个函数被第一次实例化返回的对象中，有一个 name 属性，且被设置为了 'test’ &lt;/span&gt;
expect(someMockFunction.mock.instances[0].name).toEqual('test');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mock 函数也可以用于在测试期间将测试值注入您的代码︰&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
const myMock =&lt;span&gt; jest.fn();
console.log(myMock());
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; undefined&lt;/span&gt;
&lt;span&gt;
myMock
  .mockReturnValueOnce(&lt;/span&gt;10&lt;span&gt;)
  .mockReturnValueOnce(&lt;/span&gt;'x'&lt;span&gt;)
  .mockReturnValue(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);

console.log(myMock(), myMock(), myMock(), myMock());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用于函数连续传递风格（CPS）的代码中时，Mock 函数也非常有效。 以这种风格编写的代码有助于避免那种需要通过复杂的中间值，来重建他们在真实组件的行为，这有利于在它们被调用之前将值直接注入到测试中。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
const filterTestFn =&lt;span&gt; jest.fn();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Make the mock return `true` for the first call,&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; and `false` for the second call&lt;/span&gt;
filterTestFn.mockReturnValueOnce(&lt;span&gt;true&lt;/span&gt;).mockReturnValueOnce(&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);

const result &lt;/span&gt;= [11, 12&lt;span&gt;].filter(filterTestFn);

console.log(result);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; [11]&lt;/span&gt;
&lt;span&gt;console.log(filterTestFn.mock.calls);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; [ [11], [12] ]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大多数现实世界的例子实际上都涉及到将一个被依赖的组件上使用 mock 函数替代并进行配置，这在技术上（和上面的描述）是相同的。 在这些情况下，尽量避免在非真正想要进行测试的任何函数内实现逻辑。&lt;/p&gt;
&lt;p&gt;有些情况下超越指定返回值的功能是有用的，并且全面替换了模拟函数的实现。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
const myMockFn = jest.fn(cb =&amp;gt; cb(&lt;span&gt;null&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;));

myMockFn((err, val) &lt;/span&gt;=&amp;gt;&lt;span&gt; console.log(val));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; true&lt;/span&gt;
&lt;span&gt;
myMockFn((err, val) &lt;/span&gt;=&amp;gt;&lt;span&gt; console.log(val));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你需要定义一个模拟的函数，它从另一个模块中创建的默认实现，&lt;code&gt;mockImplementation&lt;/code&gt;方法非常有用︰&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; foo.js&lt;/span&gt;
module.exports = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; some implementation;&lt;/span&gt;
&lt;span&gt;};

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; test.js&lt;/span&gt;
jest.mock('../foo'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; this happens automatically with automocking&lt;/span&gt;
const foo = require('../foo'&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; foo is a mock function&lt;/span&gt;
foo.mockImplementation(() =&amp;gt; 42&lt;span&gt;);
foo();
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; 42&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当你需要重新创建复杂行为的模拟功能，这样多个函数调用产生不同的结果时，请使用 &lt;code&gt;mockImplementationOnce&lt;/code&gt; 方法︰&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
const myMockFn =&lt;span&gt; jest
  .fn()
  .mockImplementationOnce(cb &lt;/span&gt;=&amp;gt; cb(&lt;span&gt;null&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;))
  .mockImplementationOnce(cb &lt;/span&gt;=&amp;gt; cb(&lt;span&gt;null&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;));

myMockFn((err, val) &lt;/span&gt;=&amp;gt;&lt;span&gt; console.log(val));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; true&lt;/span&gt;
&lt;span&gt;
myMockFn((err, val) &lt;/span&gt;=&amp;gt;&lt;span&gt; console.log(val));
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 当指定的mockImplementationOnce 执行完成之后将会执行默认的被jest.fn定义的默认实现，前提是它已经被定义过。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
const myMockFn =&lt;span&gt; jest
  .fn(() &lt;/span&gt;=&amp;gt; 'default'&lt;span&gt;)
  .mockImplementationOnce(() &lt;/span&gt;=&amp;gt; 'first call'&lt;span&gt;)
  .mockImplementationOnce(() &lt;/span&gt;=&amp;gt; 'second call'&lt;span&gt;);

console.log(myMockFn(), myMockFn(), myMockFn(), myMockFn());
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;gt; 'first call', 'second call', 'default', 'default'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于有通常链接的方法（因此总是需要返回&lt;code&gt;this&lt;/code&gt;）的情况，我们有一个语法糖的API以&lt;code&gt;.mockReturnThis()&lt;/code&gt;函数的形式来简化它，它也位于所有模拟器上：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
const myObj =&lt;span&gt; {
  myMethod: jest.fn().mockReturnThis(),
};

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; is the same as&lt;/span&gt;
&lt;span&gt;
const otherObj &lt;/span&gt;=&lt;span&gt; {
  myMethod: jest.fn(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;;
  }),
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你也可以给你的Mock Function起一个准确的名字，这样有助于你在测试错误的时候在输出窗口定位到具体的Function&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
const myMockFn =&lt;span&gt; jest
  .fn()
  .mockReturnValue(&lt;/span&gt;'default'&lt;span&gt;)
  .mockImplementation(scalar &lt;/span&gt;=&amp;gt; 42 +&lt;span&gt; scalar)
  .mockName(&lt;/span&gt;'add42');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后，为了更简单地说明如何调用mock函数，我们为您添加了一些自定义匹配器函数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The mock function was called at least once&lt;/span&gt;
&lt;span&gt;expect(mockFunc).toBeCalled();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The mock function was called at least once with the specified args&lt;/span&gt;
&lt;span&gt;expect(mockFunc).toBeCalledWith(arg1, arg2);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The last call to the mock function was called with the specified args&lt;/span&gt;
&lt;span&gt;expect(mockFunc).lastCalledWith(arg1, arg2);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; All calls and the name of the mock is written as a snapshot&lt;/span&gt;
expect(mockFunc).toMatchSnapshot();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这些匹配器是真的只是语法糖的常见形式的检查 &lt;code&gt;.mock&lt;/code&gt; 属性。 你总可以手动自己如果是更合你的口味，或如果你需要做一些更具体的事情︰&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The mock function was called at least once&lt;/span&gt;
expect(mockFunc.mock.calls.length).toBeGreaterThan(0&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The mock function was called at least once with the specified args&lt;/span&gt;
&lt;span&gt;expect(mockFunc.mock.calls).toContain([arg1, arg2]);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The last call to the mock function was called with the specified args&lt;/span&gt;
expect(mockFunc.mock.calls[mockFunc.mock.calls.length - 1&lt;span&gt;]).toEqual([
  arg1,
  arg2,
]);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; The first arg of the last call to the mock function was `42`&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; (note that there is no sugar helper for this specific of an assertion)&lt;/span&gt;
expect(mockFunc.mock.calls[mockFunc.mock.calls.length - 1][0]).toBe(42&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; A snapshot will check that a mock was invoked the same number of times,&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; in the same order, with the same arguments. It will also assert on the name.&lt;/span&gt;
&lt;span&gt;expect(mockFunc.mock.calls).toEqual([[arg1, arg2]]);
expect(mockFunc.mock.getMockName()).toBe(&lt;/span&gt;'a mock name');
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;写在最后：&lt;/h2&gt;
&lt;p&gt;本文只是简单的介绍了Mock Function的功能，更完整的匹配器列表，请查阅 &lt;a href=&quot;http://facebook.github.io/jest/docs/zh-Hans/expect.html&quot; target=&quot;&quot;&gt;参考文档&lt;/a&gt;。&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 14:57:00 +0000</pubDate>
<dc:creator>不负春光，努力生长</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Wolfmanlq/p/8025329.html</dc:identifier>
</item>
<item>
<title>企业级LNMP架构搭建实例(基于Centos6.x) - 惨绿少年</title>
<link>http://www.cnblogs.com/clsn/p/8025324.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/clsn/p/8025324.html</guid>
<description>&lt;h2&gt;1.1 部署LNMP架构说明&lt;/h2&gt;
&lt;h3&gt;1.1.1 LNMP架构内容&lt;/h3&gt;
&lt;p&gt;　　01.部署linux系统&lt;/p&gt;
&lt;p&gt;　　02.部署nginx网站服务&lt;/p&gt;
&lt;p&gt;　　03.部署mysql数据库服务&lt;/p&gt;
&lt;p&gt;　　04.部署php动态解析服务&lt;/p&gt;
&lt;h3&gt;1.1.2 配置LNMP架构步骤&lt;/h3&gt;
&lt;p&gt;　　01.配置Nginx配置文件&lt;/p&gt;
&lt;p&gt;　　02.配置mysql数据库信息（SQL语句）&lt;/p&gt;
&lt;p&gt;　　03.配置wordpress博客网站&lt;/p&gt;
&lt;h3&gt;1.1.3 架构服务器串联&lt;/h3&gt;
&lt;p&gt;　　01.数据库数据信息迁移（web服务器上的mysql数据 迁移到10.0.0.51 数据库服务器上）&lt;/p&gt;
&lt;p&gt;　　02.将本地储存数据挂载到NFS共享储存服务器里（共享储存用户上传的数据信息）&lt;/p&gt;
&lt;h3&gt;1.1.4 LNMP FastCGI知识说明&lt;/h3&gt;
&lt;p&gt;    &lt;span&gt;工作原理讲解说明:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;         ①. 用户请求的静态文件，由nginx服务自行处理，根据静态的location配置进行处理&lt;/p&gt;
&lt;p&gt;             用户请求的动态文件，由php服务进行处理，根据动态的location配置进行处理&lt;/p&gt;
&lt;p&gt;         ②. nginx服务接收到动态请求，会将请求抛送给fastcgi，类似于nginx服务接收动态请求的秘书，秘书会将动态请求送给PHP程序&lt;/p&gt;
&lt;p&gt;         ③. PHP如果可以处理，会将处理结果直接通过fastcgi返回给nginx程序；如果不可以处理，还会请求后端数据库，最终再把处理结果返回给nginx&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;第2章 LNMP环境搭建步骤&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;2.1 部署linux系统&lt;/h2&gt;
&lt;p&gt;　　基本优化（ip地址 yum更新 字符集）&lt;/p&gt;
&lt;p&gt;　　安全优化完成（iptables关闭  selinux关闭  tmp目录权限777）&lt;/p&gt;

&lt;h2&gt;2.2 部署nginx网站服务&lt;/h2&gt;
&lt;h3&gt;2.2.1 检查软件安装的系统环境&lt;/h3&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# &lt;span&gt;cat&lt;/span&gt; /etc/redhat-&lt;span&gt;release 
CentOS release &lt;/span&gt;&lt;span&gt;6.9&lt;/span&gt;&lt;span&gt; (Final)
[root@web01 &lt;/span&gt;~]# &lt;span&gt;uname&lt;/span&gt; -&lt;span&gt;r
&lt;/span&gt;&lt;span&gt;2.6&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;-&lt;span&gt;696&lt;/span&gt;.el6.x86_64
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.2 安装nginx的依赖包（pcre-devel openssl-devel）&lt;/h3&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; -y pcre-devel openssl-devel
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　pcre：兼容perl语言正则表达式，perl compatible regular expressions&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;      　　rewirte模块 参数信息（perl方式定义正则表达式）&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;　　　　　　openssl：ssh---openssh/openssl---https&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;&lt;span&gt;&lt;strong&gt;总结：所有安装依赖软件，后面都要加上-devel&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.3 下载nginx软件&lt;/h3&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;wget&lt;/span&gt; http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;nginx.org/download/nginx-1.10.2.tar.gz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　说明：软件很小，用心查看一下&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　&lt;strong&gt;　解压软件&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;tar&lt;/span&gt; xf nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;.&lt;span&gt;tar&lt;/span&gt;.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.4 创建管理用户 www&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
useradd -M -s /sbin/nologin www
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.5  nginx软件编译安装过程&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;2.2.5.1 &lt;/strong&gt; &lt;strong&gt;注意&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;14&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;　　软件编译安装步骤&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;　　  a&amp;gt;软件解压配置（将软件程序安装到哪个目录中 开启nginx软件的哪些功能）&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt; 　　 b&amp;gt;软件编译过程&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;  　　c&amp;gt;软件编译安装过程&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;     　　    注意顺序，顺序不对软件安装会出错&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;2.2.5.2 &lt;/strong&gt; &lt;strong&gt;编译安装软件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;　　1、配置软件，在软件的解压目录中&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;]# ./configure --prefix=/application/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt; --user=www --group=www --with-http_stub_status_module --with-http_ssl_module
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;编译参数说明：&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;div readability=&quot;15&quot;&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--prefix            &lt;/span&gt;&lt;span&gt;表示指定软件安装到哪个目录中，指定目录不存在会自动创建&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--user/--group        nginx&lt;/span&gt;&lt;span&gt;工作进程由哪个用户运行管理&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--with-http_stub_status_module    &lt;/span&gt;&lt;span&gt;启动&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;nginx&lt;/span&gt;&lt;span&gt;状态模块功能（用户访问&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;nginx&lt;/span&gt;&lt;span&gt;的网络信息）&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--with-http_ssl_module            &lt;/span&gt;&lt;span&gt;启动&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;https&lt;/span&gt;&lt;span&gt;功能模块&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;通过软件编译过程中的返回值是否正确，确认配置是否正确&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;]# &lt;span&gt;echo&lt;/span&gt; $?
&lt;span&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;         2、编译软件&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;]# &lt;span&gt;make&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;         3、编译安装&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;]# &lt;span&gt;make&lt;/span&gt; &lt;span&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.6 创建软连接&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 application]# &lt;span&gt;ln&lt;/span&gt; -s /application/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;/ /application/nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.7 精简化nginx.conf 主配置文件内容, 编写nginx配置文件&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 conf]# &lt;span&gt;egrep&lt;/span&gt; -v &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#|^$&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; nginx.conf.default &amp;gt;nginx.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.2.8 启动程序&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 application]# /application/nginx/sbin/&lt;span&gt;nginx
[root@web01 application]#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;ad&quot;&gt;检查是否启动&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@web01 application]# &lt;span&gt;ps&lt;/span&gt; -ef |&lt;span&gt;grep&lt;/span&gt;&lt;span&gt; nginx
root      &lt;/span&gt;&lt;span&gt;26548&lt;/span&gt;      &lt;span&gt;1&lt;/span&gt;  &lt;span&gt;0&lt;/span&gt; &lt;span&gt;20&lt;/span&gt;:&lt;span&gt;13&lt;/span&gt; ?        &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt; nginx: master process /application/nginx/sbin/&lt;span&gt;nginx
www       &lt;/span&gt;&lt;span&gt;26549&lt;/span&gt;  &lt;span&gt;26548&lt;/span&gt;  &lt;span&gt;0&lt;/span&gt; &lt;span&gt;20&lt;/span&gt;:&lt;span&gt;13&lt;/span&gt; ?        &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;&lt;span&gt; nginx: worker process        
root      &lt;/span&gt;&lt;span&gt;26551&lt;/span&gt;  &lt;span&gt;23431&lt;/span&gt;  &lt;span&gt;3&lt;/span&gt; &lt;span&gt;20&lt;/span&gt;:&lt;span&gt;13&lt;/span&gt; pts/&lt;span&gt;0&lt;/span&gt;    &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt; &lt;span&gt;grep&lt;/span&gt; --color=auto nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;检查端口信息&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 application]# netstat -lntup |&lt;span&gt;grep&lt;/span&gt; &lt;span&gt;80&lt;/span&gt;&lt;span&gt;
tcp        &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;      &lt;span&gt;0&lt;/span&gt; &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:&lt;span&gt;80&lt;/span&gt;                  &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:*                   LISTEN      &lt;span&gt;26548&lt;/span&gt;/nginx  
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;服务部署完成, 修改hosts解析文件，进行浏览器访问测试&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211214724321-1303615457.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至此软件安装完毕！&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;2.3 部署mysql数据库服务&lt;/h2&gt;
&lt;h3&gt;2.3.1 下载mysql软件&lt;/h3&gt;
&lt;p&gt;这里使用的是5.6.34版本；在下载mysql的时候一定要注意与系统匹配的版本。&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;-linux-glibc2.&lt;span&gt;5&lt;/span&gt;-x86_64.&lt;span&gt;tar&lt;/span&gt;.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;方法一：mysql官网下载地址&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211214845821-742864751.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;尽量使用ftp下载，http的下载方式较为繁琐。下载的时候选择与自己近的服务进行下载即可。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211214854555-1174512644.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;

&lt;h3&gt;2.3.2 【二进制包方式】安装mysql数据库软件&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.1 &lt;/strong&gt; &lt;strong&gt;解压二进制包软件&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd /server/tools/&lt;span&gt;
[root@web01 tools]# &lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; xf mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;-linux-glibc2.&lt;span&gt;5&lt;/span&gt;-x86_64.&lt;span&gt;tar&lt;/span&gt;.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.2 &lt;/strong&gt; &lt;strong&gt;创建储存目录管理用户mysql&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 tools]# useradd -s /sbin/nologin -M mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.3 &lt;/strong&gt; &lt;strong&gt;将解压后的二进制包放置到程序目录中&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;将mysql解压后的程序包搬家到程序目录下，并创建软连接。&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
cd /server/tools/
&lt;span&gt;mv&lt;/span&gt; mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;-linux-glibc2.&lt;span&gt;5&lt;/span&gt;-x86_64 /application/mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;
&lt;span&gt;ln&lt;/span&gt; -s /application/mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;  /application/mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.4 &lt;/strong&gt; &lt;strong&gt;对mysql&lt;/strong&gt;&lt;strong&gt;数据储存目录进行授权&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;让mysql用户管理 /application/mysql/data&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# &lt;span&gt;chown&lt;/span&gt; -R mysql.mysql /application/mysql/data/&lt;span&gt;
[root@web01 &lt;/span&gt;~]# ll /application/mysql/data/ -&lt;span&gt;d
drwxr&lt;/span&gt;-xr-x &lt;span&gt;3&lt;/span&gt; mysql mysql &lt;span&gt;4096&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;26&lt;/span&gt; /application/mysql/data/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.5 &lt;/strong&gt; &lt;strong&gt;初始化数据库服务&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
/application/mysql/scripts/mysql_install_db --basedir=/application/mysql --datadir=/application/mysql/data --user=mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;①始化参数说明：&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--basedir &lt;/span&gt; &lt;span&gt;数据库软件命令，软件安装在哪里&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--datadir &lt;/span&gt; &lt;span&gt;数据存放目录，数据存放在哪里&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;--user    &lt;/span&gt; &lt;span&gt;管理&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;mysql&lt;/span&gt;&lt;span&gt;的用户，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;MySQL&lt;/span&gt;&lt;span&gt;使用的用户谁&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;②【&lt;strong&gt;*&lt;/strong&gt;】&lt;strong&gt;判定初始化命令执行成功的方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　1）确认返回值，看是否为0&lt;/p&gt;
&lt;p&gt;　　　　 &lt;span class=&quot;cnblogs_code&quot;&gt;[root@web01 ~]# &lt;span&gt;echo&lt;/span&gt; $?&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;　　2）确认输出的内容中有两个ok&lt;/p&gt;
&lt;p&gt;　　3）通过数据库初始化操作，在data目录中创建出默认的数据库信息和相关表信息&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# &lt;span&gt;ls&lt;/span&gt; -l /application/mysql/data/&lt;span&gt;
total &lt;/span&gt;&lt;span&gt;110604&lt;/span&gt;
-rw-rw---- &lt;span&gt;1&lt;/span&gt; mysql mysql &lt;span&gt;12582912&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt; ibdata1
&lt;/span&gt;-rw-rw---- &lt;span&gt;1&lt;/span&gt; mysql mysql &lt;span&gt;50331648&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt; ib_logfile0
&lt;/span&gt;-rw-rw---- &lt;span&gt;1&lt;/span&gt; mysql mysql &lt;span&gt;50331648&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt; ib_logfile1
drwx&lt;/span&gt;------ &lt;span&gt;2&lt;/span&gt; mysql mysql     &lt;span&gt;4096&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt; mysql
drwx&lt;/span&gt;------ &lt;span&gt;2&lt;/span&gt; mysql mysql     &lt;span&gt;4096&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;56&lt;/span&gt;&lt;span&gt; performance_schema
drwxr&lt;/span&gt;-xr-x &lt;span&gt;2&lt;/span&gt; mysql mysql     &lt;span&gt;4096&lt;/span&gt; Oct &lt;span&gt;26&lt;/span&gt; &lt;span&gt;11&lt;/span&gt;:&lt;span&gt;26&lt;/span&gt; test
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;③初始化输出的内容信息&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
To start mysqld at boot &lt;span&gt;time&lt;/span&gt;&lt;span&gt; you have to copy
support&lt;/span&gt;-files/mysql.server to the right place &lt;span&gt;for&lt;/span&gt; your system
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　启动mysql服务，可以复制support-files/mysql.server到系统的启动目录中&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　　mysql.server程序自带的启动脚本文件&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !&lt;span&gt;
To &lt;/span&gt;&lt;span&gt;do&lt;/span&gt; so, start the server, &lt;span&gt;then&lt;/span&gt;&lt;span&gt; issue the following commands:
&lt;/span&gt;/application/mysql/bin/mysqladmin -u root password &lt;span&gt;'&lt;/span&gt;&lt;span&gt;new-password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
/application/mysql/bin/mysqladmin -u root -h web01 password &lt;span&gt;'&lt;/span&gt;&lt;span&gt;new-password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　说明： 表示对mysql服务管理源root用户设置密码&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;You can start the MySQL daemon with:
cd . ; &lt;/span&gt;/application/mysql/bin/mysqld_safe &amp;amp;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可以以后台方式运行 mysqld_safe 脚本命令，也可以运行mysql服务&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.6 &lt;/strong&gt; &lt;strong&gt;将启动脚本文件复制到启动目录中&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# &lt;span&gt;cp&lt;/span&gt; -a  /application/mysql/support-files/mysql.server  /etc/init.d/mysqld
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　修改启动服务脚本相关文件内容--&lt;span&gt;更改软件的存放目录&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;  　　　　&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/span&gt; 修改的是两个位置&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;sed&lt;/span&gt; -i &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#/usr/local/mysql#/application/mysql#g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; /application/mysql/bin/mysqld_safe /etc/init.d/mysqld
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;　　添加到开机自启动，让chkconfig 管理，能够开机自启动&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# chkconfig --&lt;span&gt;add mysqld
[root@web01 &lt;/span&gt;~]# chkconfig mysqld on
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.7 &lt;/strong&gt; &lt;strong&gt;设置mysql&lt;/strong&gt;&lt;strong&gt;服务配置文件&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;mysql默认配置文件保存位置&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
/etc/my.cnf
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;从软件中复制出来配置文件，使用软件中自带的配置文件即可&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 \&lt;span&gt;cp&lt;/span&gt; /application/mysql/support-files/my-default.cnf /etc/my.cnf
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.8 &lt;/strong&gt; &lt;strong&gt;启动mysql&lt;/strong&gt;&lt;strong&gt;服务&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# /etc/init.d/&lt;span&gt;mysqld start
Starting MySQL...... SUCCESS&lt;/span&gt;!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.9 &lt;/strong&gt; &lt;strong&gt;检查端口信息，确认服务是否启动&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# netstat -lntup |&lt;span&gt;grep&lt;/span&gt; &lt;span&gt;3306&lt;/span&gt;&lt;span&gt;
tcp    &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;      &lt;span&gt;0&lt;/span&gt; :::&lt;span&gt;3306&lt;/span&gt;               :::*             LISTEN      &lt;span&gt;54042&lt;/span&gt;/mysqld    
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.10    &lt;/strong&gt; &lt;strong&gt;设置root&lt;/strong&gt;&lt;strong&gt;用户密码信息&lt;/strong&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# /application/mysql/bin/mysqladmin -u root password &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
Warning: Using a password on the command line interface can be insecure.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.3.2.11    &lt;/strong&gt; &lt;strong&gt;测试&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# /application/mysql/bin/mysql -uroot -&lt;span&gt;pclsn123
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection &lt;/span&gt;&lt;span&gt;id&lt;/span&gt; is &lt;span&gt;14&lt;/span&gt;&lt;span&gt;
Server version: &lt;/span&gt;&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;&lt;span&gt; MySQL Community Server (GPL)

Copyright (c) &lt;/span&gt;&lt;span&gt;2000&lt;/span&gt;, &lt;span&gt;2016&lt;/span&gt;, Oracle and/&lt;span&gt;or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and&lt;/span&gt;/&lt;span&gt;or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;help;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; or &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\h&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; help. Type &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\c&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; to &lt;span&gt;clear&lt;/span&gt;&lt;span&gt; the current input statement.

mysql&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;登录数据库命令简化方法&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;export PATH=/application/mysql/bin:$PATH&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &amp;gt;&amp;gt;/etc/&lt;span&gt;profile
source &lt;/span&gt;/etc/&lt;span&gt;profile
&lt;/span&gt;&lt;span&gt;which&lt;/span&gt; mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.3.3 管理mysql数据库&lt;/h3&gt;
&lt;h4&gt;2.3.3.1  查看数据库&lt;/h4&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
mysql&amp;gt;&lt;span&gt; show databases;
&lt;/span&gt;+--------------------+
| Database             |
+--------------------+
| information_schema |
| mysql                 |
| performance_schema |
| test                  |
+--------------------+
&lt;span&gt;4&lt;/span&gt; rows &lt;span&gt;in&lt;/span&gt; set (&lt;span&gt;0.26&lt;/span&gt; sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;2.3.3.2  查看数据表信息&lt;/h4&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
mysql&amp;gt;&lt;span&gt; use  mysql;show tables;
Reading table information &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; completion of table and column names
You can turn off this feature to get a quicker startup with &lt;/span&gt;-&lt;span&gt;A

Database changed
&lt;/span&gt;+---------------------------+
| Tables_in_mysql             |
+---------------------------+
| columns_priv                 |
| db                             |
| event                         |
| func                          |
| general_log                  |
| help_category                |
| help_keyword                 |
| help_relation                |
| help_topic                   |
| innodb_index_stats        |
| innodb_table_stats        |
| ndb_binlog_index          |
| plugin                    |
| proc                      |
| procs_priv                |
| proxies_priv              |
| servers                   |
| slave_master_info         |
| slave_relay_log_info      |
| slave_worker_info         |
| slow_log                  |
| tables_priv               |
| time_zone                 |
| time_zone_leap_second     |
| time_zone_name            |
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
&lt;span&gt;28&lt;/span&gt; rows &lt;span&gt;in&lt;/span&gt; set (&lt;span&gt;0.00&lt;/span&gt; sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;2.3.3.3  退出数据库&lt;/h4&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;　　 &lt;span class=&quot;cnblogs_code&quot;&gt;quit | exit&lt;/span&gt; &lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;退出数据库时，尽量不要用ctrl+c进行退出mysql 用ctrl+d进行退出&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;数据库基础操作（数据库框架）&lt;/p&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
show databases;                &amp;lt;---&lt;span&gt; 查询默认的数据库信息
create database clsn;        &lt;/span&gt;&amp;lt;---&lt;span&gt;创建新的数据库
drop database clsn;          &lt;/span&gt;&amp;lt;---&lt;span&gt;删除存在的数据库
use mysql;                     &lt;/span&gt;&amp;lt;---&lt;span&gt; 表示选择使用一个数据库，相当于cd进入一个数据库
show tables；                  &lt;/span&gt;&amp;lt;---&lt;span&gt;查看数据库中表信息
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; database();             &amp;lt;---&lt;span&gt; 表示查看当前所在数据库，类似于pwd命令的功能
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; user();                 &amp;lt;---&lt;span&gt; 查看当前登录数据库的用户，类似于whoami命令
                                    并且mysql还可以限制指定用户可以从哪里进行连接登录数据库
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; * from user\G;          &amp;lt;---&lt;span&gt;查看user表中所有信息，并且纵行显示

&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; user,host from user;         ---&lt;span&gt;查看user表中指定信息，并且横行显示
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; user,host from mysql.user;   ---&lt;span&gt;查看可以登录mysql数据库的目录，以及都可以从哪里进行管理mysql数据库
grant all on &lt;/span&gt;*.* to user@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; identified by &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;           ---&lt;span&gt;创建用户 
grant all on &lt;/span&gt;*.* to Old_Boy@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; identified by &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;   ---&lt;span&gt;创建用户（大写用户）
drop user &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;host&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
flush privileges；                  &lt;/span&gt;--- 刷新权限
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;2.4 部署php服务&lt;/h2&gt;
&lt;h3&gt;2.4.1 解决PHP软件的依赖关系（14个依赖包）&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;2.4.1.1 &lt;/strong&gt; &lt;strong&gt;基于base&lt;/strong&gt;&lt;strong&gt;源的个依赖包&lt;/strong&gt;&lt;/h4&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel libiconv-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel -y
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;检查的方法一：rpm&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
rpm -qa zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel libiconv-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;检查的方法二：&lt;/strong&gt;再安装一遍即可确认是否都安装上&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; -y zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel libiconv-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.4.1.2 &lt;/strong&gt; &lt;strong&gt;libiconv&lt;/strong&gt;&lt;strong&gt;软件&lt;/strong&gt; &lt;strong&gt;和字符集转换相关软件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;　　由于该软件yum安装不上，需要单独安装一下。&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;mkdir&lt;/span&gt; -p /server/&lt;span&gt;tools
cd &lt;/span&gt;/server/&lt;span&gt;tools
#&lt;/span&gt;&lt;span&gt;wget&lt;/span&gt; http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz&lt;/span&gt;
&lt;span&gt;tar&lt;/span&gt; zxf libiconv-&lt;span&gt;1.14&lt;/span&gt;.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.gz
cd libiconv&lt;/span&gt;-&lt;span&gt;1.14&lt;/span&gt;&lt;span&gt;
.&lt;/span&gt;/configure --prefix=/usr/local/&lt;span&gt;libiconv
&lt;/span&gt;&lt;span&gt;make&lt;/span&gt;
&lt;span&gt;make&lt;/span&gt; &lt;span&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;                &lt;span&gt;  说明:此软件在centos6.8之后已经自带此软件功能，可以不进行安装 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;编译好的软件如何删除&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;    　　&lt;span&gt;删除安装后的程序目录即可&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot;&gt;fpm&lt;/span&gt;&lt;/strong&gt; &lt;strong&gt;&lt;span&gt;定制&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;rpm&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;包&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;　　　rpm包制作软件---把编译后的程序目录进行打包，通过fpm相关参数指定rpm解压之前要先安装哪些依赖&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;&lt;strong&gt;2.4.1.3 &lt;/strong&gt; &lt;strong&gt;安装加密相关的依赖软件（3&lt;/strong&gt;&lt;strong&gt;个）&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;　　　　这三个软件依赖与epel源&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;yum&lt;/span&gt; -y &lt;span&gt;install&lt;/span&gt; libmcrypt-&lt;span&gt;devel mhash mcrypt
rpm &lt;/span&gt;-qa libmcrypt-devel mhash mcrypt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.4.2 编译安装php过程&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;解压安装包&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
cd /server/tools/&lt;span&gt;
[root@web01 lnmp]# &lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; xf php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;.&lt;span&gt;tar&lt;/span&gt;.gz 
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;配置php&lt;/strong&gt; &lt;strong&gt;（配置的参数较多）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　mysqlnd本地没有mysql&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
./&lt;span&gt;configure \
&lt;/span&gt;--prefix=/application/php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;&lt;span&gt; \
&lt;/span&gt;--with-mysql=&lt;span&gt;mysqlnd \
&lt;/span&gt;--with-pdo-mysql=&lt;span&gt;mysqlnd \
&lt;/span&gt;--with-iconv-&lt;span&gt;dir&lt;/span&gt;=/usr/local/&lt;span&gt;libiconv \
&lt;/span&gt;--with-freetype-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt; \
&lt;/span&gt;--with-jpeg-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt; \
&lt;/span&gt;--with-png-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt; \
&lt;/span&gt;--with-&lt;span&gt;zlib \
&lt;/span&gt;--with-libxml-&lt;span&gt;dir&lt;/span&gt;=/&lt;span&gt;usr \
&lt;/span&gt;--enable-&lt;span&gt;xml \
&lt;/span&gt;--disable-&lt;span&gt;rpath \
&lt;/span&gt;--enable-&lt;span&gt;bcmath \
&lt;/span&gt;--enable-&lt;span&gt;shmop \
&lt;/span&gt;--enable-&lt;span&gt;sysvsem \
&lt;/span&gt;--enable-inline-&lt;span&gt;optimization \
&lt;/span&gt;--with-&lt;span&gt;curl \
&lt;/span&gt;--enable-&lt;span&gt;mbregex \
&lt;/span&gt;--enable-&lt;span&gt;fpm \
&lt;/span&gt;--enable-&lt;span&gt;mbstring \
&lt;/span&gt;--with-&lt;span&gt;mcrypt \
&lt;/span&gt;--with-&lt;span&gt;gd \
&lt;/span&gt;--enable-gd-native-&lt;span&gt;ttf \
&lt;/span&gt;--with-&lt;span&gt;openssl \
&lt;/span&gt;--with-&lt;span&gt;mhash \
&lt;/span&gt;--enable-&lt;span&gt;pcntl \
&lt;/span&gt;--enable-&lt;span&gt;sockets \
&lt;/span&gt;--with-&lt;span&gt;xmlrpc \
&lt;/span&gt;--enable-&lt;span&gt;soap \
&lt;/span&gt;--enable-&lt;span&gt;short&lt;/span&gt;-&lt;span&gt;tags \
&lt;/span&gt;--enable-&lt;span&gt;static \
&lt;/span&gt;--with-&lt;span&gt;xsl \
&lt;/span&gt;--with-fpm-user=&lt;span&gt;www \
&lt;/span&gt;--with-fpm-group=&lt;span&gt;www \
&lt;/span&gt;--enable-&lt;span&gt;ftp&lt;/span&gt;&lt;span&gt; \
&lt;/span&gt;--enable-opcache=no
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;PHP编译参数详解&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('a4acb392-e71b-448d-89b2-1168c1e66e5c')&quot; readability=&quot;39&quot;&gt;&lt;img id=&quot;code_img_closed_a4acb392-e71b-448d-89b2-1168c1e66e5c&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a4acb392-e71b-448d-89b2-1168c1e66e5c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('a4acb392-e71b-448d-89b2-1168c1e66e5c',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a4acb392-e71b-448d-89b2-1168c1e66e5c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;73&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; ./&lt;span&gt;configure 编译参数
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; –prefix=/application/php5.&lt;span&gt;3.27&lt;/span&gt; 指定php的安装路径为/application/php5.&lt;span&gt;3.27&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; –with-mysql=/application/mysql/ 
&lt;span&gt; 6&lt;/span&gt; 需要指定mysql的安装路径,安装PHP需要的MySQL相关内容。当然如果没有MySQL软件包，也可以不单独安装，这样的情况可使用–with-mysql=mysqlnd替代–with-mysql=/application/&lt;span&gt;mysql,因为PHP软件里面已经自带连接MySQL的客户端工具。    
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; 
&lt;span&gt; 8&lt;/span&gt; –with-iconv-&lt;span&gt;dir&lt;/span&gt;=/usr/local/&lt;span&gt;libiconv    libiconv库,各种字符集间的转换
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; 
&lt;span&gt;10&lt;/span&gt; –with-freetype-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt;    打开对freetype字体库支持
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt; –with-jpeg-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt; 打开对jpeg图片的支持
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; –with-png-&lt;span&gt;dir&lt;/span&gt;&lt;span&gt; 打开对png图片的支持
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; –with-&lt;span&gt;zlib 打开zlib库的支持,用于http压缩传输
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; –with-libxml-&lt;span&gt;dir&lt;/span&gt;=/&lt;span&gt;usr 打开libxml2库的支持
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 
&lt;span&gt;20&lt;/span&gt; –enable-&lt;span&gt;xml    
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; –disable-&lt;span&gt;rpath 关闭额外的运行库文件
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt; –enable-safe-&lt;span&gt;mode 打开安全模式
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; 
&lt;span&gt;26&lt;/span&gt; –enable-&lt;span&gt;bcmath 打开图片大小调整,用zabbix监控时会用到该模块
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; 
&lt;span&gt;28&lt;/span&gt; –enable-&lt;span&gt;shmop 
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt; –enable-&lt;span&gt;sysvsem 使用sysv信号机制,则打开此选项
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; 
&lt;span&gt;32&lt;/span&gt; –enable-inline-&lt;span&gt;optimization 优化线程
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; 
&lt;span&gt;34&lt;/span&gt; –with-&lt;span&gt;curl 打开curl浏览工具的支持
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; 
&lt;span&gt;36&lt;/span&gt; –with-&lt;span&gt;curlwrappers 运维curl工具打开url流
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; 
&lt;span&gt;38&lt;/span&gt; –enable-&lt;span&gt;mbregex     
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; 
&lt;span&gt;40&lt;/span&gt; –enable-&lt;span&gt;mbstring 支持mbstring
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt; –with-&lt;span&gt;mcrypt 编码函数库
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt; –with-&lt;span&gt;gd 打开gd库的支持
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt; –enable-gd-native-&lt;span&gt;ttf 支持TrueType字符串函数库
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; 
&lt;span&gt;48&lt;/span&gt; –with-&lt;span&gt;openl openl的支持,加密传输时用到
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt; –with-&lt;span&gt;mhash mhash算法的扩展
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; 
&lt;span&gt;52&lt;/span&gt; –enable-&lt;span&gt;pcntl freeTDS需要用到,可能是链接mql
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; 
&lt;span&gt;54&lt;/span&gt; –enable-&lt;span&gt;sockets 打开sockets支持
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; 
&lt;span&gt;56&lt;/span&gt; –with-xmlrpc 打开xml-&lt;span&gt;rpc的c语言
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; 
&lt;span&gt;58&lt;/span&gt; –enable-&lt;span&gt;zip&lt;/span&gt;&lt;span&gt; 打开对zip的支持
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; 
&lt;span&gt;60&lt;/span&gt; –enable-&lt;span&gt;soap soap模块的扩展
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; 
&lt;span&gt;62&lt;/span&gt; –enable-&lt;span&gt;short&lt;/span&gt;-&lt;span&gt;tags 开始和标记函数
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt; –enable-zend-&lt;span&gt;multibyte 支持zend的多字节
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; 
&lt;span&gt;66&lt;/span&gt; –enable-&lt;span&gt;static 生成静态链接库
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; 
&lt;span&gt;68&lt;/span&gt; –with-&lt;span&gt;xsl 打开XSLT文件支持,扩展libXML2库,需要libxslt软件
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt; –enable-&lt;span&gt;ftp&lt;/span&gt;&lt;span&gt;    打开ftp的支持
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; 
&lt;span&gt;72&lt;/span&gt; –enable-fpm    表示激活PHP-&lt;span&gt;FPM方式服务,即FactCGI方式运行PHP服务。
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt; –with-fpm-user=www    指定PHP-&lt;span&gt;FPM进程管理的用户为www,此处最好和Nginx服务用户统一。
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; 
&lt;span&gt;76&lt;/span&gt; –with-fpm-group=www    指定PHP-FPM进程管理用户组为www,此处最好和Nginx服务用户组统一。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code PHP编译参数详解&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;      &lt;/strong&gt;&lt;strong&gt;输出的信息&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;Generating files
configure: creating .&lt;/span&gt;/&lt;span&gt;config.status
creating main&lt;/span&gt;/&lt;span&gt;internal_functions.c
creating main&lt;/span&gt;/&lt;span&gt;internal_functions_cli.c
&lt;/span&gt;+--------------------------------------------------------------------+
| License:                                                           |
| This software is subject to the PHP License, available &lt;span&gt;in&lt;/span&gt; this     |
| distribution &lt;span&gt;in&lt;/span&gt; the &lt;span&gt;file&lt;/span&gt; LICENSE.  By continuing this installation |
| process, you are bound by the terms of this license agreement.     |
| If you &lt;span&gt;do&lt;/span&gt; not agree with the terms of this license, you must abort |
| the installation process at this point.                            |
+--------------------------------------------------------------------+&lt;span&gt;

Thank you &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; using PHP.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;防错 &lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ln&lt;/span&gt; -s /application/mysql/lib/libmysqlclient.so.&lt;span&gt;18&lt;/span&gt;  /usr/lib64/
&lt;span&gt;touch&lt;/span&gt; ext/phar/phar.phar
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;编译 &amp;amp;&amp;amp;&lt;/strong&gt; &lt;strong&gt;编译安装&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;make&lt;/span&gt; &amp;amp;&amp;amp; &lt;span&gt;make&lt;/span&gt; &lt;span&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.4.3 PHP软件程序创建软链接&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ln&lt;/span&gt; -s /application/php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;/ /application/php
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.4.4 配置php解析文件/配置php-fpm配置文件&lt;/h3&gt;
&lt;p&gt;两个默认的配置文件区别&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
cd /server/tools/php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;&lt;span&gt;
ll php.ini&lt;/span&gt;*
-rw-r--r--. &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1001&lt;/span&gt; &lt;span&gt;1001&lt;/span&gt; &lt;span&gt;69236&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt; &lt;span&gt;21&lt;/span&gt;:&lt;span&gt;33&lt;/span&gt; php.ini-&lt;span&gt;development
&lt;/span&gt;-rw-r--r--. &lt;span&gt;1&lt;/span&gt; &lt;span&gt;1001&lt;/span&gt; &lt;span&gt;1001&lt;/span&gt; &lt;span&gt;69266&lt;/span&gt; &lt;span&gt;2016&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt;-&lt;span&gt;02&lt;/span&gt; &lt;span&gt;21&lt;/span&gt;:&lt;span&gt;33&lt;/span&gt; php.ini-production
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;配置文件说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　php.ini-developments是开发人员调试用配置文件&lt;/p&gt;
&lt;p&gt;　　　　php.ini-production是生产常见所有配置文件&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;&lt;span&gt;文件区别对比：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;    生产的文件不会输出过多的日志信息，而开发文件会输出大量程序测试日志信息。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;对比俩个文件不同的命令&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;diff&lt;/span&gt; / vimdiff
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;ad&quot;&gt;&lt;strong&gt;复制配置文件(2&lt;/strong&gt;&lt;strong&gt;个)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
# 创建软连接 ： &lt;span&gt;ln&lt;/span&gt; -sf /application/php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt; /application/&lt;span&gt;php
[root@web01 &lt;/span&gt;~]#cd /server/tools/php-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;&lt;span&gt;
[root@web01 php&lt;/span&gt;-&lt;span&gt;5.5&lt;/span&gt;.&lt;span&gt;32&lt;/span&gt;]# &lt;span&gt;cp&lt;/span&gt; php.ini-production /application/php/lib/&lt;span&gt;php.ini
[root@web01 etc]# cd &lt;/span&gt;/application/php/etc/&lt;span&gt;
[root@web01 etc]# &lt;/span&gt;&lt;span&gt;cp&lt;/span&gt; php-fpm.conf.default php-fpm.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.4.5 启动php-fpm程序&lt;/h3&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# /application/php/sbin/php-fpm 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　确认php 9000端口是否正确启动（检查服务是否启动）&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# netstat -lntup |&lt;span&gt;grep&lt;/span&gt; &lt;span&gt;9000&lt;/span&gt;&lt;span&gt;
tcp        &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;      &lt;span&gt;0&lt;/span&gt; &lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;9000&lt;/span&gt;              &lt;span&gt;0.0&lt;/span&gt;.&lt;span&gt;0.0&lt;/span&gt;:*                   LISTEN  
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;2.5 nginx 与 php 建立连接关系&lt;/h2&gt;
&lt;h3&gt;2.5.1 修改nginx配置文件，使nginx程序与php程序建立联系&lt;/h3&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
vim extra/&lt;span&gt;blog.conf
server {
        listen       &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;span&gt;;
        server_name  blog.etiantian.org;
        location &lt;/span&gt;/&lt;span&gt; {
                    root   html&lt;/span&gt;/&lt;span&gt;blog;
                    index  index.php index.html index.htm;       
        }
        location &lt;/span&gt;~* .*\.(php|php5)?&lt;span&gt;$ {
                    root html&lt;/span&gt;/&lt;span&gt;blog;
                    fastcgi_pass  &lt;/span&gt;&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;9000&lt;/span&gt;&lt;span&gt;;
                    fastcgi_index index.php;
                    include fastcgi.conf;
        }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;说明：利用nginx的location区块实现动态请求与静态请求的分别处理&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt; 　　    &amp;lt;-- 需要注意编辑修改默认首页文件  index  index.php index.html index.htm;&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;　　　让nginx服务具有动态请求解析功能。&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;2.5.2 重启服务&lt;/h3&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# /application/nginx/sbin/nginx -&lt;span&gt;t
nginx: the configuration &lt;/span&gt;&lt;span&gt;file&lt;/span&gt; /application/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;/conf/&lt;span&gt;nginx.conf syntax is ok
nginx: configuration &lt;/span&gt;&lt;span&gt;file&lt;/span&gt; /application/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;/conf/&lt;span&gt;nginx.conf test is successful
[root@web01 &lt;/span&gt;~]# /application/nginx/sbin/nginx -s reload
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.5.3 编辑nginx与php连通性测试文件,并进行测试&lt;/h3&gt;
&lt;p&gt;测试动态请求是否可以处理：&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;lt;?php phpinfo(); ?&amp;gt;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;                    &amp;gt;/application/nginx/html/blog/test_info.php
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;测试站点&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
        curl  http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;blog.etiantian.org/index.html            &amp;lt;-- 静态请求站点文件信息测试    &lt;/span&gt;
&lt;span&gt;
        curl  http:&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;blog.etiantian.org/test_info.php         &amp;lt;-- 动态请求站点文件信息测试&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;说明：当php服务停止时，9000端口信息消失，即停止PHP错误报502错误&lt;/p&gt;
&lt;p&gt;            linux系统测试完毕后，建议利用浏览器进行最终测试，测试效果更明显些&lt;/p&gt;
&lt;h3&gt;2.5.4 浏览器测试&lt;/h3&gt;
&lt;p&gt;浏览器访问&lt;/p&gt;
&lt;p&gt;http://blog.znix.top/test_info.php&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211220249399-1514471914.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;2.6 编辑php与mysql连通性测试文件,并进行测试&lt;/h2&gt;
&lt;h3&gt;2.6.1 创建数据库&lt;/h3&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
mysql -uroot -&lt;span&gt;pclsn123;
show databases;                      &lt;/span&gt;&amp;lt;---&lt;span&gt; 查看当前数据库信息
create database wordpress;            &lt;/span&gt;&amp;lt;---创建博客储存数据库    
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.6.2 在mysql中添加用户信息&lt;/h3&gt;
&lt;p&gt;创建数据库授权用户&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
grant all on wordpress.* to &lt;span&gt;'&lt;/span&gt;&lt;span&gt;wordpress&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.0.0.%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; identified by &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
flush privileges;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　授权 所有权限 为 wordpress库的所有表   用户@地址 设置密码  ；   &lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p class=&quot;a4&quot;&gt;　　刷新数据库&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;添加上用于blog使用的mysql用户&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
drop user wordpress@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;172.16.1.8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;    &amp;lt;---&lt;span&gt; 删除用户信息
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; user,host from mysql.user;    &amp;lt;---&lt;span&gt; 查看用户信息
mysql &lt;/span&gt;-uwordpress -p123456           &amp;lt;---&lt;span&gt; 测试创建的用户连接
show databases;                      &lt;/span&gt;&amp;lt;--- 查看当前数据库信息
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;2.7 测试php与数据库连通性&lt;/h2&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
vim test_mysql.&lt;span&gt;php
&lt;/span&gt;&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;$link_id=mysql_connect('主机名','用户','密码');
//mysql -u用户 -p密码 -h 主机&lt;/span&gt;
&lt;span&gt;$link_id&lt;/span&gt;=&lt;span&gt;mysql_connect&lt;/span&gt;('localhost','wordpress','clsn123') or &lt;span&gt;mysql_error&lt;/span&gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&lt;span&gt;$link_id&lt;/span&gt;&lt;span&gt;){
             &lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &quot;mysql successful by clsn !\n&quot;&lt;span&gt;;
            }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
             &lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;mysql_error&lt;/span&gt;&lt;span&gt;();
            }
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.7.1 网站访问测试&lt;/h3&gt;
&lt;p&gt;测试动态请求访问nginx服务是否可以到达数据库&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211220409884-1879003437.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;h2&gt;2.8 下载部署wordpress博客程序&lt;/h2&gt;
&lt;p&gt;　　下载地址：https://cn.wordpress.org&lt;/p&gt;
&lt;h3&gt;2.8.1 解压出来&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
tar xf wordpress-4.7.3-zh_CN.tar.gz  
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.8.2 代码上线&lt;/h3&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 wordpress]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; pwd&lt;/span&gt;
/server/tools/lnmp/&lt;span&gt;wordpress
[root@web01 wordpress]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; mv ./* /application/nginx/html/blog/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.8.3 统一代码属主.属组&lt;/h3&gt;
&lt;p&gt;对站点目录进行 授权&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@web01 wordpress]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; cd /application/nginx/html/blog/&lt;/span&gt;
[root@web01 blog]&lt;span&gt;#&lt;/span&gt;&lt;span&gt; chown www.www -R /application/nginx/html/blog/&lt;/span&gt;
&lt;span&gt;
[root@web01 blog]&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ll&lt;/span&gt;
total 200
-rw-r--r--  1 www www    11 Oct 25 09:20 index.&lt;span&gt;html
&lt;/span&gt;-rw-r--r--  1 www www   418 Sep 25  2013 index.&lt;span&gt;php
……&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;         说明：wp-config.php文件创建需要能够有权限对目录操作。&lt;/p&gt;
&lt;p&gt;                          此文件定义数据库连接信息&lt;/p&gt;
&lt;h3&gt;2.8.4 创建数据库&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;mysql&lt;/span&gt; -uroot -&lt;span&gt;pclsn123;
show databases;              
create database wordpress;    &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.8.5 添加wordpress数据库用户&lt;/h3&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
mysql&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;grant&lt;/span&gt; &lt;span&gt;all&lt;/span&gt; &lt;span&gt;on&lt;/span&gt; wordpress.&lt;span&gt;*&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;wordpress&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;@&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.0.0.%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; identified &lt;span&gt;by&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;; 
Query OK, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt; rows affected (&lt;span&gt;0.16&lt;/span&gt;&lt;span&gt; sec)

mysql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;select&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;,host &lt;span&gt;from&lt;/span&gt; mysql.&lt;span&gt;user&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;---------+-----------+&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; &lt;span&gt;user&lt;/span&gt;      &lt;span&gt;|&lt;/span&gt; host      &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;---------+-----------+&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; wordpress &lt;span&gt;|&lt;/span&gt; &lt;span&gt;10.0&lt;/span&gt;.&lt;span&gt;0&lt;/span&gt;.&lt;span&gt;%&lt;/span&gt;  &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; root      &lt;span&gt;|&lt;/span&gt; &lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; root      &lt;span&gt;|&lt;/span&gt; ::&lt;span&gt;1&lt;/span&gt;       &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt;           &lt;span&gt;|&lt;/span&gt; localhost &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; root      &lt;span&gt;|&lt;/span&gt; localhost &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt;           &lt;span&gt;|&lt;/span&gt; web01     &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; root      &lt;span&gt;|&lt;/span&gt; web01     &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;---------+-----------+&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; rows &lt;span&gt;in&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; (&lt;span&gt;0.00&lt;/span&gt; sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2.8.6 安装wordpress&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;访问网站进行初始化操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;           填写的数据为&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211220643571-299539412.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;连接数据库配置说明&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;19&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;数据库名：指定数据存储到哪一个数据库当中，例如：存储到wordpress数据库中&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;用户名：以什么用户身份管理wordpress数据库&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;密码： 用户的密码&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;数据库主机： 指定连接的数据库服务器地址信息&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;表前缀：标识相应表属于哪一个数据库&lt;/p&gt;
&lt;p class=&quot;a4&quot;&gt;说明：配置完数据连接信息后，会自动创建wp-config.php文件，此文件定义数据库连接配置信息&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;安装完成效果&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1190037/201712/1190037-20171211220711384-942725444.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;

&lt;h2&gt;3.1 mysql数据库迁移&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;　　　　以上的mysql配置都是在web01 上进行 ，现在需要将web01上的mysql数据进行迁移到db01（数据库服务器）上去。&lt;/p&gt;
&lt;/div&gt;
&lt;h3&gt;3.1.1 备份数据库中的数据&lt;/h3&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@db01 ~]# mysqldump -uroot -pclsn123 --all-databases &amp;gt;/tmp/bak.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用mysqldump命令将数据库中的全部数据进行备份 备份到 /tmp/bak.sql 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mysqldump&lt;/strong&gt; &lt;strong&gt;命令参数说明：&lt;/strong&gt;&lt;/p&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;14&quot;&gt;&lt;tr&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot;&gt;
&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--add-drop-table&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;在每个创建数据库表语句前添加删除数据库表的语句；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--add-locks&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;备份数据库表时锁定数据库表；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--all-databases&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;备份MySQL服务器上的所有数据库；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--comments&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot;&gt;
&lt;p&gt;添加注释信息；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--compact&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;压缩模式，产生更少的输出；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--complete-insert&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;输出完成的插入语句；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--databases&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;指定要备份的数据库；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--default-character-set&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot;&gt;
&lt;p&gt;指定默认字符集；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--force&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;当出现错误时仍然继续备份操作；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--host&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;指定要备份数据库的服务器；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--lock-tables &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;备份前，锁定所有数据库表；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--no-create-db&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;禁止生成创建数据库语句；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--no-create-info&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;禁止生成创建数据库库表语句；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--password  &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;连接MySQL服务器的密码；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--port    &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;MySQL服务器的端口号；&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td width=&quot;245&quot;&gt;
&lt;p&gt;&lt;strong&gt;--user   &lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;452&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;连接MySQL服务器的用户名。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;3.1.2 将备份数据传输到mysql服务器（db01）&lt;/h3&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
[root@web01 tools]# rsync  -avz /tmp/bak.sql  &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.51&lt;/span&gt;:/tmp/&lt;span&gt;
The authenticity of host &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;172.16.1.51 (172.16.1.51)&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; can&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t be established.&lt;/span&gt;
RSA key fingerprint is d3:&lt;span&gt;41&lt;/span&gt;:bb:0d:&lt;span&gt;43&lt;/span&gt;:&lt;span&gt;88&lt;/span&gt;:da:a3:2c:e8:&lt;span&gt;36&lt;/span&gt;:&lt;span&gt;91&lt;/span&gt;:&lt;span&gt;11&lt;/span&gt;&lt;span&gt;:c9:e4:9c.
Are you sure you want to continue connecting (yes&lt;/span&gt;/no)?&lt;span&gt; yes
Warning: Permanently added &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;172.16.1.51&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; (RSA) to the list of known hosts.
root@&lt;/span&gt;&lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.51&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s password: &lt;/span&gt;
sending incremental &lt;span&gt;file&lt;/span&gt;&lt;span&gt; list
bak.sql

sent &lt;/span&gt;&lt;span&gt;377261&lt;/span&gt; bytes  received &lt;span&gt;31&lt;/span&gt; bytes  &lt;span&gt;83842.67&lt;/span&gt; bytes/&lt;span&gt;sec
total size is &lt;/span&gt;&lt;span&gt;1483738&lt;/span&gt;  speedup is &lt;span&gt;3.93&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;         使用rsync将数据推送到MySQL服务器的/tmp 目录下面。&lt;/p&gt;
&lt;h3&gt;3.1.3 数据库服务器部署mysql服务(快速部署命令集)&lt;/h3&gt;
&lt;p&gt;mysql服务快速部署过程脚本。详情参见&lt;a href=&quot;http://www.cnblogs.com/clsn/p/8025324.html#_部署mysql数据库服务&quot;&gt;mysql数据库部署安装。&lt;/a&gt;&lt;/p&gt;
&lt;div readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
cd /server/&lt;span&gt;tools
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; xf mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;-linux-glibc2.&lt;span&gt;5&lt;/span&gt;-x86_64.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.gz
useradd &lt;/span&gt;-s /sbin/nologin  -&lt;span&gt;M mysql
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt; -p /application/
&lt;span&gt;mv&lt;/span&gt; /server/tools/mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;-linux-glibc2.&lt;span&gt;5&lt;/span&gt;-x86_64 /application/mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;
&lt;span&gt;ln&lt;/span&gt; -s /application/mysql-&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;/ /application/&lt;span&gt;mysql
&lt;/span&gt;&lt;span&gt;chown&lt;/span&gt; -R mysql.mysql /application/&lt;span&gt;mysql
&lt;/span&gt;/application/mysql/scripts/mysql_install_db --basedir=/application/mysql --datadir=/application/mysql/data --user=&lt;span&gt;mysql
&lt;/span&gt;&lt;span&gt;cp&lt;/span&gt; /application/mysql/support-files/mysql.server  /etc/init.d/&lt;span&gt;mysqld
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; +x /etc/init.d/&lt;span&gt;mysqld 
&lt;/span&gt;&lt;span&gt;sed&lt;/span&gt; -i &lt;span&gt;'&lt;/span&gt;&lt;span&gt;s#/usr/local/mysql#/application/mysql#g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; /application/mysql/bin/mysqld_safe /etc/init.d/&lt;span&gt;mysqld
\&lt;/span&gt;&lt;span&gt;cp&lt;/span&gt; /application/mysql/support-files/my-default.cnf /etc/&lt;span&gt;my.cnf 
&lt;/span&gt;/etc/init.d/&lt;span&gt;mysqld start
&lt;/span&gt;/application/mysql/bin/mysqladmin -u root password &lt;span&gt;'&lt;/span&gt;&lt;span&gt;clsn123&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.1.4 将备份的数据恢复到数据库服务器上&lt;/h3&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@db01 ~]# /application/mysql/bin/mysql -uroot -pclsn123 &amp;lt;/tmp/&lt;span&gt;bak.sql 
Warning: Using a password on the command line interface can be insecure.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意，&lt;/strong&gt;数据库导入之后要刷新数据库，让导入的数据被识别（重要）&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
mysql&amp;gt;&lt;span&gt; flush privileges;
Query OK, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt; rows affected (&lt;span&gt;0.00&lt;/span&gt; sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.1.5 在web01服务器上进行远程登陆数据库测试&lt;/h3&gt;
&lt;div readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[&lt;/span&gt;&lt;span&gt;root@web01 ~&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;# &lt;span&gt;/&lt;/span&gt;application&lt;span&gt;/&lt;/span&gt;mysql&lt;span&gt;/&lt;/span&gt;bin&lt;span&gt;/&lt;/span&gt;mysql &lt;span&gt;-&lt;/span&gt;u wordpress &lt;span&gt;-&lt;/span&gt;pclsn123  &lt;span&gt;-&lt;/span&gt;h &lt;span&gt;10.0&lt;/span&gt;.&lt;span&gt;0.51&lt;/span&gt;&lt;span&gt;
Warning: Using a password &lt;/span&gt;&lt;span&gt;on&lt;/span&gt;&lt;span&gt; the command line interface can be insecure.
Welcome &lt;/span&gt;&lt;span&gt;to&lt;/span&gt; the MySQL monitor.  Commands &lt;span&gt;end&lt;/span&gt; &lt;span&gt;with&lt;/span&gt; ; &lt;span&gt;or&lt;/span&gt;&lt;span&gt; \g.
Your MySQL connection id &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; &lt;span&gt;4&lt;/span&gt;&lt;span&gt;
Server version: &lt;/span&gt;&lt;span&gt;5.6&lt;/span&gt;.&lt;span&gt;34&lt;/span&gt;&lt;span&gt; MySQL Community Server (GPL)

Copyright (c) &lt;/span&gt;&lt;span&gt;2000&lt;/span&gt;, &lt;span&gt;2016&lt;/span&gt;, Oracle &lt;span&gt;and/or&lt;/span&gt; its affiliates. &lt;span&gt;All&lt;/span&gt;&lt;span&gt; rights reserved.

Oracle &lt;/span&gt;&lt;span&gt;is&lt;/span&gt; a registered trademark &lt;span&gt;of&lt;/span&gt; Oracle Corporation &lt;span&gt;and/or&lt;/span&gt;&lt;span&gt; its
affiliates. Other names may be trademarks &lt;/span&gt;&lt;span&gt;of&lt;/span&gt;&lt;span&gt; their respective
owners.

Type &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;help;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;or&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\h&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; help. Type &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\c&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;to&lt;/span&gt; clear the &lt;span&gt;current&lt;/span&gt;&lt;span&gt; input statement.

mysql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 
mysql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; show databases;
&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;------------------+&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; &lt;span&gt;Database&lt;/span&gt;             &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;------------------+&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; information_schema &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; test                  &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;|&lt;/span&gt; wordpress            &lt;span&gt;|&lt;/span&gt;
&lt;span&gt;+&lt;/span&gt;&lt;span&gt;--&lt;/span&gt;&lt;span&gt;------------------+&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; rows &lt;span&gt;in&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; (&lt;span&gt;0.00&lt;/span&gt; sec)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.1.6 修改web服务器php连接数据库主机的配置文件&lt;/h3&gt;
&lt;p&gt;修改wordpress软件的配置，将连接的主机地址改为数据库服务器的地址&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@web01 ~]# vim /application/nginx/html/blog/wp-&lt;span&gt;config.php

……

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* MySQL主机 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;

define(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;DB_HOST&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.0.0.51&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);

……&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;3.2 本地数据挂载到nfs共享储存&lt;/h2&gt;
&lt;h3&gt;3.2.1 确认本地数据的储存位置（三种方法）&lt;/h3&gt;
&lt;p&gt;01.通过网页图片属性信息进行确认路径&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p class=&quot;a4&quot;&gt;　　http://blog.clsn.top/wp-content/uploads/2017/10/cropped-Frog-2.png&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;02.通过find查看数据储存路径信息，上传个图片，查找相同中1分钟以内的文件&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;find&lt;/span&gt; -type f -mmin -&lt;span&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;03.通过inotify软件进行监控&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p class=&quot;ad&quot;&gt;　　确认文件的储存目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
/application/nginx/html/blog/wp-content/uploads
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.2.2 将已有数据进行迁移备份&lt;/h3&gt;
&lt;p&gt;备份数据是因为挂载的时候会将当前的数据全部'覆盖'掉，只显示nfs共享目录的信息。&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 uploads]# &lt;span&gt;pwd&lt;/span&gt;
/application/nginx/html/blog/wp-content/&lt;span&gt;uploads
[root@web01 uploads]# &lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt; /tmp/&lt;span&gt;wordpress_bak
[root@web01 uploads]# &lt;/span&gt;&lt;span&gt;mv&lt;/span&gt; .&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;  /tmp/wordpress_bak/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.2.3 nfs储存服务配置&lt;/h3&gt;
&lt;p&gt;配置nfs服务的时候注意权限的设置&lt;/p&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
[root@nfs01 data]# &lt;span&gt;cat&lt;/span&gt; /etc/&lt;span&gt;exports 
#share user:hzs
&lt;/span&gt;/data &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.0&lt;/span&gt;/&lt;span&gt;24&lt;/span&gt;(rw,&lt;span&gt;sync&lt;/span&gt;,root_squash,no_all_squash,anonuid=&lt;span&gt;501&lt;/span&gt;,anongid=&lt;span&gt;501&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　anonuid 与 anongid 要和web服务器上的www用户的相同&lt;strong&gt;(&lt;/strong&gt;UID与GID相同）&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@nfs01 /]# &lt;span&gt;id&lt;/span&gt;&lt;span&gt; www
uid&lt;/span&gt;=&lt;span&gt;501&lt;/span&gt;(www) gid=&lt;span&gt;501&lt;/span&gt;(www) &lt;span&gt;groups&lt;/span&gt;=&lt;span&gt;501&lt;/span&gt;(www)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;目录的属组要是与nfs配置的anonuid，anongid相同的用户。&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@nfs01 /]# ll /data/ -&lt;span&gt;d
drwxr&lt;/span&gt;-xr-x &lt;span&gt;3&lt;/span&gt; www www &lt;span&gt;4096&lt;/span&gt; Oct &lt;span&gt;27&lt;/span&gt; &lt;span&gt;12&lt;/span&gt;:&lt;span&gt;11&lt;/span&gt; /data/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;3.2.4 将储存目录挂载到nfs共享目录上&lt;/h3&gt;
&lt;p&gt;注：作为nfs客户端需要安装nfs-utils 和 rpcbind&lt;/p&gt;
&lt;p&gt;①先检查是否能挂载，显示可以挂载的目录&lt;/p&gt;
&lt;div readability=&quot;6&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
[root@web01 uploads]# showmount -e &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.31&lt;/span&gt;&lt;span&gt;
Export list &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.31&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;/data &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.0&lt;/span&gt;/&lt;span&gt;24&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;②将磁盘进行挂载&lt;/p&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 uploads]# &lt;span&gt;mount&lt;/span&gt; -t nfs &lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.31&lt;/span&gt;:/data  /application/nginx/html/blog/wp-content/uploads/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;③显示磁盘信息&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
[root@web01 uploads]# &lt;span&gt;df&lt;/span&gt; -&lt;span&gt;h
Filesystem         Size  Used Avail Use&lt;/span&gt;%&lt;span&gt; Mounted on
&lt;/span&gt;/dev/sda3           19G  &lt;span&gt;3&lt;/span&gt;.7G   15G  &lt;span&gt;21&lt;/span&gt;% /&lt;span&gt;
tmpfs              238M     &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;  238M   &lt;span&gt;0&lt;/span&gt;% /dev/&lt;span&gt;shm
&lt;/span&gt;/dev/sda1          190M   40M  141M  &lt;span&gt;22&lt;/span&gt;% /&lt;span&gt;boot
&lt;/span&gt;&lt;span&gt;172.16&lt;/span&gt;.&lt;span&gt;1.31&lt;/span&gt;:/data   19G  &lt;span&gt;1&lt;/span&gt;.5G   17G   &lt;span&gt;9&lt;/span&gt;% /application/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;/html/blog/wp-content/uploads
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;3.2.5 恢复数据（将之前备份的数据还原回来）&lt;/h3&gt;
&lt;div readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
[root@web01 uploads]# &lt;span&gt;pwd&lt;/span&gt;&lt;span&gt;
application&lt;/span&gt;/nginx-&lt;span&gt;1.10&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;/html/blog/wp-content/&lt;span&gt;uploads
[root@web01 uploads]# &lt;/span&gt;&lt;span&gt;mv&lt;/span&gt; /tmp/wordpress_bak&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; ./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

</description>
<pubDate>Mon, 11 Dec 2017 14:19:00 +0000</pubDate>
<dc:creator>惨绿少年</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/clsn/p/8025324.html</dc:identifier>
</item>
<item>
<title>多线程 - pthread、NSThread - 沉江小鱼</title>
<link>http://www.cnblogs.com/chenjiangxiaoyu/p/8025139.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenjiangxiaoyu/p/8025139.html</guid>
<description>&lt;h2&gt;1. pthread&lt;/h2&gt;
&lt;p&gt;pthread 简单介绍下，pthread是一套通用的多线程的API，可以Unix / Linux / Windows 等徐彤跨平台使用，使用C语言编写，需要程序员自己管理线程的生命周期，使用难度较大，所以我们在iOS开发中几乎不适用pthread，这里我们简单了解下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- 来自百度百科的介绍 -&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;POSIX线程，简称Pthreads，是此案城的POSIX标准。该标准定义了创建和操纵线程的一整套API。在类Unix操作系统(Unix、Linux、Mac OSX)中，都使用Pthreads作为操作系统的线程。Windows操作系统也有其移植版pthreads-win32。&lt;/p&gt;
&lt;h3&gt;1.1 pthread的使用方法&lt;/h3&gt;
&lt;p&gt;a. 首先要包含头文件 #import &amp;lt;pthread.h&amp;gt;&lt;/p&gt;
&lt;p&gt;b. 其次要创建线程，并开启线程执行任务&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
// 创建线程——定义一个pthread_t类型变量
pthread_t thread;
// 开启线程——执行任务
pthread_create(&amp;amp;thread, NULL, run, NULL);

void * run(void *param)    // 新线程调用方法，里边为需要执行的任务
{
    NSLog(@&quot;%@&quot;, [NSThread currentThread]);

    return NULL;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; pthread_create(&amp;amp;thread, NULL，run，NULL)；中各项参数：&lt;/p&gt;
&lt;p&gt;a.第一个参数&amp;amp;thread是线程对象&lt;/p&gt;
&lt;p&gt;b.第二个和第四个是线程属性，可赋值NULL&lt;/p&gt;
&lt;p&gt;c.第三个run表示指向函数的指针(run对应函数里是需要在新线程中执行的任务)&lt;/p&gt;
&lt;h2&gt;2. NSThread&lt;/h2&gt;
&lt;p&gt;NSThread是苹果官方提供的，使用起来比pthread更加面向对象，简单易用，可以直接操作线程对象。不过也需要程序员自己管理线程的生命周期（主要是创建），我们在开发过程中偶尔使用NSThread。比如我们经常使用 [NSThread currentThread] 来显示当前的进程信息。&lt;/p&gt;
&lt;h3&gt;2.1 创建、启动线程&lt;/h3&gt;
&lt;p&gt;- 先创建线程，再启动线程，此时线程应为可调度状态，由cpu直接控制&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
NSThread *thread = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];
[thread start];    // 线程一启动，就会在线程thread中执行self的run方法
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; - 创建线程后自启动线程&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
[NSThread detachNewThreadSelector:@selector(run) toTarget:self withObject:nil];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; - 隐式创建并启动线程&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
[self performSelectorInBackground:@selector(run) withObject:nil];
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 2.2 常用的线程相关方法&lt;/h3&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
// 获得主线程
+ (NSThread *)mainThread;    

// 判断是否为主线程(对象方法)
- (BOOL)isMainThread;

// 判断是否为主线程(类方法)
+ (BOOL)isMainThread;    

// 获得当前线程
NSThread *current = [NSThread currentThread];

// 线程的名字——setter方法
- (void)setName:(NSString *)n;    

// 线程的名字——getter方法
- (NSString *)name;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 2.3 线程状态控制方法&lt;/h3&gt;
&lt;p&gt;- 启动线程方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
- (void)start;
// 线程进入就绪状态 -&amp;gt; 运行状态。当线程任务执行完毕，自动进入死亡状态
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; - 阻塞（暂停）线程方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
+ (void)sleepUntilDate:(NSDate *)date;
+ (void)sleepForTimeInterval:(NSTimeInterval)ti;
// 线程进入阻塞状态
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; - 强制停止线程&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
+ (void)exit;
// 线程进入死亡状态
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 2.4 线程的状态转换&lt;/h3&gt;
&lt;p&gt;当我们新建一条线程 &lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:objc;gutter:true;&quot;&gt;
NSThread *thread = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 在内存中的表现为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1031687/201712/1031687-20171211215322305-534871417.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当调用 [thread start] 后，系统把线程对象放入可调度线程池中，线程对象进入就绪状态：如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1031687/201712/1031687-20171211215438602-954854983.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然，可调度线程池中，会有其他的线程对象，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1031687/201712/1031687-20171211215529571-2066100317.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;下面我们来看看当前线程的状态转换&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;如果CPU现在调度当前线程对象，则当前线程对象进入运行状态，如果CPU调度其他线程对象，则当前线程对象回到就绪状态。&lt;/li&gt;
&lt;li&gt;如果CPU在运行当前线程对象的时候调用了 sleep 方法\等待同步锁，则当前线程对象就进入了阻塞状态，等到sleep到时\得到同步锁，则回到就绪状态。&lt;/li&gt;
&lt;li&gt;如果CPU在运行当前线程对象的时候线程任务执行完毕\异常强制退出，则当前线程对象进入死亡状态。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;具体当前线程对象的状态变化如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1031687/201712/1031687-20171211220619993-1162838990.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，当我们创建一个线程对象，并调用run方法的时候，只是将这个线程的状态变成了，就绪状态，调度线程是CPU控制的。&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 14:08:00 +0000</pubDate>
<dc:creator>沉江小鱼</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenjiangxiaoyu/p/8025139.html</dc:identifier>
</item>
<item>
<title>音频传输之Jitter Buffer设计与实现 - davidtym</title>
<link>http://www.cnblogs.com/talkaudiodev/p/8025242.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/talkaudiodev/p/8025242.html</guid>
<description>&lt;p&gt;在语音通信中Jitter Buffer（下面简称JB）是接收侧一个非常重要的模块，它是决定音质的重要因素之一。一方面它会把收到的乱序的语音包排好序放在buffer里正确的位置上，另一方面它把接收到的语音包放在buffer中缓冲一些时间使播放的更平滑从而获得更好的语音质量。下图是JB在接收侧软件框图中的位置。&lt;/p&gt;
&lt;p&gt;                                              &lt;img src=&quot;http://images2017.cnblogs.com/blog/1181527/201712/1181527-20171211213027087-41326367.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出，从网络上收到的语音包会放在JB里（这个操作叫做PUT），在需要的时候便从JB里取出来（这个操作叫做GET）解码直到播放出来。JB有两种模式：adaptive（自适应的）和fixed（固定的）。Adaptive是指buffer的大小可以根据网络环境的状况自适应的调整；fixed是指buffer的大小固定不变。自适应的模式实现难度大，要求高，fixed相对简单，现在基本上都用adaptive的模式。JB在生命周期里也有两种状态：prefetching（预存取）和processing（处理中），只有在processing时才能从JB中取到语音帧。初始化时把状态置成prefetching，当在JB中的语音包个数达到指定的值时便把状态切到processing。如果从JB里取不到语音帧了，它将又回到prefetching。等buffer里语音包个数达到指定值时又重新回到processing状态。&lt;/p&gt;

&lt;p&gt;首先看PUT操作。RTP包有包头和负载（payload），为了便于处理，将包头和payload在buffer中分开保存，保存包头中相关属性的叫attribute buffer，保存payload的叫payload buffer。下图是JB里存RTP包的buffer关系图：&lt;/p&gt;
&lt;p&gt;                                           &lt;img src=&quot;http://images2017.cnblogs.com/blog/1181527/201712/1181527-20171211213806227-1965974612.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;要明确哪几种类型的RTP包会被PUT进JB，我最初设计JB时类型有G711/G722/G729/SID(静音包)/RFC2833（DTMF包）。G711/G722十毫秒payload是80个字节，G729十毫秒payload是10个字节，当VAD使能时十毫秒payload是2个字节（G729 VAD是内置的）或0个字节（DTX），一个SID包payload是1个或11个字节，一个RFC2833包payload是4个字节，明确这些是为了确定payload buffer中一个block的大小（取这些类型中最大的，80个字节），attribute buffer中一个block的大小是固定的，即要保存的属性的个数（这些属性主要用于控制payload的存放和读取，有media type(G711/G722/G729/SID/RFC2833)，sequence number，timestamp，ssrc，payload size，相对应的存放payload的buffer block指针等。每个RTP的包头占一个attribute buffer block，但每个RTP的payload有可能占几个payload buffer block，这跟media type 和packet time有关，例如一个packet time为20ms的G711包，就需要两个payload buffer block，attribute buffer block和payload buffer block之间有一个映射关系。将attribute buffer block和payload buffer block个数都定为256（index从0到255，设定256是为了早到的包绝不会把前面的包给覆盖掉，如果block个数小了则有可能），这样JB 里最少可以存2560ms的语音数据。 &lt;/p&gt;

&lt;p&gt;至于JB里最多能放多少个包（即容量capacity），这取决于media type和packet time。如果media type是G711/G722， capacity = 256*10/packet time，例如当packet time为20ms时，capacity是128，即最多放128个包。这样attribute buffer和payload buffer的映射关系如下图：&lt;/p&gt;
&lt;p&gt;                                                                     &lt;img src=&quot;http://images2017.cnblogs.com/blog/1181527/201712/1181527-20171211213528009-799058858.png&quot; alt=&quot;&quot;/&gt;    &lt;/p&gt;
&lt;p&gt;如果media type是G729，考虑到packet time 通常不会超过160ms, 就设定一个G7299包的payload占2个block（160个字节，一般是存不满的），这样capacity就是128（256/2）。至于SID和RFC2833包，payload只有几个字节，为了处理简单，它们的payload占几个block是跟着语音包走的，比如一个20ms的G711语音包payload占2个block，SID包和RFC2833包的payload也会占2个block。&lt;/p&gt;

&lt;p&gt;从网络上来的RTP包有可能是乱序的，PUT操作要把这些乱序的包（attribute &amp;amp; payload）放在buffer里正确的block里，这主要依靠attribute里的sequence number和timestamp做判断。RTP协议里sequence number数据类型是unsigned short，范围是0~65535，就存在从65535到0的转换，这增加了复杂度。对于收到的RTP包，首先要看它是否来的太迟（相对于上一个已经取出的包），太迟了就要把这个包主动丢弃掉。设上一个已经取出的包的sequence number为 last_got_senq，timestamp 为last_got_timestamp，当前收到的将要放的包的sequence number为 cur_senq，timestamp 为cur_timestamp，当前包的sequence number与上一个取走的sequence number的gap为delta_senq，则delta_senq可以根据下面的逻辑关系得到。&lt;/p&gt;
&lt;p&gt;                                                &lt;img src=&quot;http://images2017.cnblogs.com/blog/1181527/201712/1181527-20171211213737634-1117075961.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果delta_senq小于1，就可以认为这个包来的太迟，就要主动丢弃掉。由于我们的buffer足够大（256个block），如果包早到了也会被放到对应的position上，不会把相应位置上的还没取走的覆盖掉。&lt;/p&gt;

&lt;p&gt;接下来看怎么把包放到正确的位置上。对于收到的第一个包，它的位置（position，范围是0 ~ capacity-1）是sequence number % capacity。后面的包放的position依赖于它上一个已放好的包的position。设上一个已放好的包的sequence number为 last_put_senq，timestamp 为last_put_timestamp，position为last_put_position，当前收到的将要放的包的sequence number为 cur_senq，timestamp 为cur_timestamp，position为cur_position，当前的包的sequence number与上一个放好的sequence number的gap为delta_senq，则cur_position可以根据下面的逻辑关系得到。&lt;/p&gt;
&lt;p&gt;                                               &lt;img src=&quot;http://images2017.cnblogs.com/blog/1181527/201712/1181527-20171211213913993-666015234.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;得到了当前包的position后就可以把包头里的timestamp等放到相应的attribute buffer block里了，payload根据算好的占几个block放到相应的那几个block上（有可能填不满block，不过没关系，取payload时是根据index取的）。如果放进对应block时发现里面已经有包了并且sequence number一样，说明这个包是重复包，就要把这个包主动丢弃掉。&lt;/p&gt;

&lt;p&gt;再来看GET操作。每次从JB里不是取一个包，而是取1帧（能编解码的最小单位，通常是10ms，也有例外，比如AMR-WB是20ms），这主要是因为播放loop是10ms一次（每次都是取一帧语音数据播放）。取时总是从head上取，开始时head为第一个放进JB的包的position，每取完一个包（几帧）后head就会向后移一个位置。如果到某个位置时它的block里没有包，就说明这个包丢了，这时取出的就是payload大小就是0，告诉后续的decoder要做PLC。不同类型的包取法不一样，下面分别加以介绍。&lt;/p&gt;

&lt;p&gt;对于G711/G722，每次从payload buffer里取10ms数据（一个block, 80个字节），一个包取完后取下一个包。对于G729，每次从payload buffer里取10ms数据（10个字节或2个字节（VAD使能后的静音payload）或0个字节（DTX）），一个包取完后取下一个包。至于VAD使能后取10个字节还是2个字节还是0个字节，要取决于当前包以及上一包的payload size。这处理好能显著提高G7229 VAD使能场景下的语音质量MOS值。以packet time为20ms为例，如果上一个包的payload size是20个字节，当前包的payload size是12个字节，在取时前10ms取10个字节，后10ms取2个字节。如果上一个包的payload size是12个字节，当前包的payload size是10个字节，在取时前10ms取0个字节（DTX），后10ms取10个字节。&lt;/p&gt;

&lt;p&gt;对于SID包，每次都是从当前包中取相同的payload一直到发现JB里这个SID包后面又有包并且timestamp又大于等于这个包的timestamp，下一次就会从这个新包里取payload。对于RFC2833包，包里有个duration attribute，当前RFC2833包和上一个RFC2833包的duration相减再除以80就是当前包的packet time，根据这算是从这个包里取得次数，次数到后就从下一个包取。&lt;/p&gt;

&lt;p&gt;上面说过现在JB一般都是用adaptive的mode，即buffer size（缓存包的个数）根据网络环境自适应的调整大小。那怎么来实现呢？JB初始化时会设定一个缓存包的个数值（叫prefetch），并处于prefetching状态，这种状态下是取不到语音帧的。JB里缓存包的个数到达设定的值后就会变成processing状态，同时可以从JB里取语音帧了。在通话过程中由于网络环境变得恶劣，GET的次数比PUT的次数多，GET完最后一帧就进入prefetching状态。当再有包PUT进JB时，先看前面共有多少次连续的GET，从而增大prefetch值，即增大buffer size的大小。如果网络变得稳定了，GET和PUT就会交替出现，当交替出现的次数达到一定值时，就会减小prefetch值，即减小buffer size的大小，交替的次数更多时再继续减小prefetch值。&lt;/p&gt;

&lt;p&gt;再来看一下在哪些情况下需要reset JB，让JB在初始状态下开始运行。&lt;/p&gt;
&lt;p&gt;1）当收到的语音包的媒体类型（G711/G722/G729，不包括SID/RFC2833等）变了，就认为来了新的stream，需要reset JB。&lt;/p&gt;
&lt;p&gt;2）当收到的语音包的SSRC变了，就认为来了新的stream，需要reset JB。&lt;/p&gt;
&lt;p&gt;3）当收到的语音包的packet time变了，就认为来了新的stream，需要reset JB。&lt;/p&gt;

&lt;p&gt;前面说过JB是语音通信接收侧最重要的模块之一，当然它也是容易出问题的模块之一。出问题不怕，关键是怎么快速定位问题。对于JB来说，需要知道当前的运行状态以及一些统计信息等。如果这些信息正常，就说明问题很大可能不是由JB引起的，不正常则说明有很大的可能性。这些信息主要如下：&lt;/p&gt;
&lt;p&gt;1）JB当前运行状态：prefetching / processing&lt;/p&gt;
&lt;p&gt;2）JB里有多少个缓存的包&lt;/p&gt;
&lt;p&gt;3）从JB中取帧的head的位置&lt;/p&gt;
&lt;p&gt;4）缓冲区的capacity是多少&lt;/p&gt;
&lt;p&gt;5）网络丢包的个数&lt;/p&gt;
&lt;p&gt;6）由于来的太迟而被主动丢弃的包的个数&lt;/p&gt;
&lt;p&gt;7）由于JB里已有这个包而被主动丢弃的包的个数&lt;/p&gt;
&lt;p&gt;8）进prefetching状态的次数（除了第一次）&lt;/p&gt;

&lt;p&gt;上面就是JB设计的主要思想，在实现时还有很多细节需要注意，这里就不一一详细说了。我第一次设计实现JB是在2011年，当时从设计实现到调试完成（指标是：bulk call &amp;gt; 10000次，long call time &amp;gt; 60 小时，各种场景下的各种codec的语音质量要达标）总共花了近三个月，还是在对JB有基础的情况下，要是没基础花的时间更多。从设计到能打电话时间不长，主要是后面要过bulk call/long call/voice quality。有好多情况设计时没考虑到，这也是一个迭代的过程，当调试完成了设计也更完整了。最初设计时只支持G711/G722/G729这三种codec，但是机制定了。后来系统要支持AMR-WB，JB这部分根据现有的机制再加上AMR-WB特有的很快就调好了。&lt;/p&gt;
</description>
<pubDate>Mon, 11 Dec 2017 13:58:00 +0000</pubDate>
<dc:creator>davidtym</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/talkaudiodev/p/8025242.html</dc:identifier>
</item>
</channel>
</rss>