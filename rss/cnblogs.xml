<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>springboot整合shiro - javaobject</title>
<link>http://www.cnblogs.com/a8457013/p/7875866.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/a8457013/p/7875866.html</guid>
<description>&lt;p&gt;请大家在看本文之前，先了解如下知识点： &lt;br/&gt;1、Shiro 是什么？怎么用？ &lt;br/&gt;2、Cas 是什么？怎么用？ &lt;br/&gt;3、最好有Spring基础&lt;/p&gt;
&lt;p&gt;可以先看看这两篇文章，按照这2篇文章的内容做一遍： &lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/catoop/article/details/50520958&quot;&gt;Spring Boot Shiro 权限管理&lt;/a&gt; &lt;br/&gt;&lt;a href=&quot;http://blog.csdn.net/catoop/article/details/50530364&quot;&gt;CAS单点登录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先看一下下面这张图： &lt;br/&gt;第一个流程是单纯使用Shiro的流程。 &lt;br/&gt;第二个流程是单纯使用Cas的流程。 &lt;br/&gt;第三个图是Shiro集成Cas后的流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/842651/201711/842651-20171121230900118-490671519.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;PS：流程图急急忙忙画的，整体上应该没有什么问题，具体细节问题还请大家留言指正。&lt;/p&gt;
&lt;p&gt;如果你只是打算用到你的Spring Boot项目中，那么看着如下配置完成便可。 &lt;br/&gt;如果你想进一步了解其中的细节，还是建议大家单独配置Shiro、单独配置Cas，看看官方相关文档。 &lt;br/&gt;Shiro在1.2版本开始提供了对cas的集成，按下面添加依赖到pom.xml中：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!--Apache Shiro所需的jar包 --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;shiro-spring&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;&lt;span&gt;1.2&lt;/span&gt;.&lt;span&gt;4&lt;/span&gt;&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;  
            &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt;  
            &amp;lt;artifactId&amp;gt;shiro-ehcache&amp;lt;/artifactId&amp;gt;  
            &amp;lt;version&amp;gt;&lt;span&gt;1.2&lt;/span&gt;.&lt;span&gt;4&lt;/span&gt;&amp;lt;/version&amp;gt;  
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.shiro&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;shiro-cas&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;&lt;span&gt;1.2&lt;/span&gt;.&lt;span&gt;4&lt;/span&gt;&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;shiro-cas 依赖 shiro-web，shiro-web 依赖 shiro-core，所以添加shiro-cas后shiro-web.jar和shiro-core.jar会自动被引用。 &lt;br/&gt;cas被shiro集成后，其原理就是shiro将casFilter加入到shiroFilter的filterChain中。&lt;/p&gt;
&lt;p&gt;在SpringBoot工程中创建ShiroCasConfiguration.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package org.springboot.sample.config;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

import javax.servlet.Filter;

import org.apache.shiro.cache.ehcache.EhCacheManager;
import org.apache.shiro.cas.CasFilter;
import org.apache.shiro.cas.CasSubjectFactory;
import org.apache.shiro.spring.LifecycleBeanPostProcessor;
import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;
import org.apache.shiro.spring.web.ShiroFilterFactoryBean;
import org.apache.shiro.web.mgt.DefaultWebSecurityManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springboot.sample.dao.IScoreDao;
import org.springboot.sample.security.MyShiroCasRealm;
import org.springboot.sample.service.StudentService;
import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;
import org.springframework.boot.context.embedded.FilterRegistrationBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.filter.DelegatingFilterProxy;

&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * Shiro集成Cas配置 * * @author 单红宇(365384722) * @myblog &lt;/span&gt;&lt;span&gt;http://blog.csdn.net/catoop/&lt;/span&gt;&lt;span&gt; * @create 2016年1月17日 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@Configuration
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShiroCasConfiguration {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final Logger logger = LoggerFactory.getLogger(ShiroCasConfiguration.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; CasServerUrlPrefix&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String casServerUrlPrefix = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;https://localhost:8443/cas&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Cas登录页面地址&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String casLoginUrl = casServerUrlPrefix + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Cas登出页面地址&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String casLogoutUrl = casServerUrlPrefix + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/logout&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当前工程对外提供的服务地址&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String shiroServerUrlPrefix = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://localhost:9090/myspringboot&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; casFilter UrlPattern&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String casFilterUrlPattern = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/shiro-cas&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 登录地址&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final String loginUrl = casLoginUrl + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;?service=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + shiroServerUrlPrefix +&lt;span&gt; casFilterUrlPattern;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; EhCacheManager getEhCacheManager() {  
        EhCacheManager em &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; EhCacheManager();  
        em.setCacheManagerConfigFile(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;classpath:ehcache-shiro.xml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);  
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; em;  
    }  

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * 注册DelegatingFilterProxy（Shiro） * * @param dispatcherServlet * @return * @author SHANHY * @create 2016年1月13日 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Bean
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; FilterRegistrationBean filterRegistrationBean() {
        FilterRegistrationBean filterRegistration &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; FilterRegistrationBean();
        filterRegistration.setFilter(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; DelegatingFilterProxy(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;shiroFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 &lt;/span&gt;
        filterRegistration.addInitParameter(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;targetFilterLifecycle&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        filterRegistration.setEnabled(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        filterRegistration.addUrlPatterns(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; filterRegistration;
    }

    @Bean(name &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;lifecycleBeanPostProcessor&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; LifecycleBeanPostProcessor getLifecycleBeanPostProcessor() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; LifecycleBeanPostProcessor();
    }

    @Bean
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; DefaultAdvisorAutoProxyCreator getDefaultAdvisorAutoProxyCreator() {
        DefaultAdvisorAutoProxyCreator daap &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DefaultAdvisorAutoProxyCreator();
        daap.setProxyTargetClass(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; daap;
    }

    @Bean(name &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;securityManager&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; DefaultWebSecurityManager getDefaultWebSecurityManager(MyShiroCasRealm myShiroCasRealm) {
        DefaultWebSecurityManager dwsm &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DefaultWebSecurityManager();
        dwsm.setRealm(myShiroCasRealm);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; &amp;lt;!-- 用户授权/认证信息Cache, 采用EhCache 缓存 --&amp;gt; &lt;/span&gt;
&lt;span&gt;        dwsm.setCacheManager(getEhCacheManager());
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定 SubjectFactory&lt;/span&gt;
        dwsm.setSubjectFactory(&lt;span&gt;new&lt;/span&gt;&lt;span&gt; CasSubjectFactory());
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; dwsm;
    }

    @Bean
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; AuthorizationAttributeSourceAdvisor getAuthorizationAttributeSourceAdvisor(DefaultWebSecurityManager securityManager) {
        AuthorizationAttributeSourceAdvisor aasa &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AuthorizationAttributeSourceAdvisor();
        aasa.setSecurityManager(securityManager);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; aasa;
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * 加载shiroFilter权限控制规则（从数据库读取然后配置） * * @author SHANHY * @create 2016年1月14日 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; loadShiroFilterChain(ShiroFilterFactoryBean shiroFilterFactoryBean, StudentService stuService, IScoreDao scoreDao){
        &lt;/span&gt;&lt;span&gt;/////////////////////&lt;/span&gt;&lt;span&gt;// 下面这些规则配置最好配置到配置文件中 &lt;/span&gt;&lt;span&gt;/////////////////////&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;
        Map&amp;lt;String, String&amp;gt; filterChainDefinitionMap = &lt;span&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;String, String&amp;gt;&lt;span&gt;();

        filterChainDefinitionMap.put(casFilterUrlPattern, &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;casFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; shiro集成cas后，首先添加该规则

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; authc：该过滤器下的页面必须验证后才能访问，它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter&lt;/span&gt;
        filterChainDefinitionMap.put(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/user&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;authc&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这里为了测试，只限制/user，实际开发中请修改为具体拦截的请求规则
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; anon：它对应的过滤器里面是空的,什么都没做&lt;/span&gt;
        logger.info(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;##################从数据库读取权限规则，加载到shiroFilter中##################&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        filterChainDefinitionMap.put(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/user/edit/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;authc,perms[user:edit]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 这里为了测试，固定写死的值，也可以从数据库或其他配置中读取&lt;/span&gt;
&lt;span&gt;
        filterChainDefinitionMap.put(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;anon&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        filterChainDefinitionMap.put(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;anon&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;anon 可以理解为不拦截&lt;/span&gt;
&lt;span&gt;
        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * CAS过滤器 * * @return * @author SHANHY * @create 2016年1月17日 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Bean(name &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;casFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; CasFilter getCasFilter() {
        CasFilter casFilter &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; CasFilter();
        casFilter.setName(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;casFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        casFilter.setEnabled(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 登录失败后跳转的URL，也就是 Shiro 执行 CasRealm 的 doGetAuthenticationInfo 方法向CasServer验证tiket&lt;/span&gt;
        casFilter.setFailureUrl(loginUrl);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 我们选择认证失败后再打开登录页面&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt;&lt;span&gt; casFilter;
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * ShiroFilter&amp;lt;br/&amp;gt; * 注意这里参数中的 StudentService 和 IScoreDao 只是一个例子，因为我们在这里可以用这样的方式获取到相关访问数据库的对象， * 然后读取数据库相关配置，配置到 shiroFilterFactoryBean 的访问规则中。实际项目中，请使用自己的Service来处理业务逻辑。 * * @param myShiroCasRealm * @param stuService * @param scoreDao * @return * @author SHANHY * @create 2016年1月14日 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Bean(name &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;shiroFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManager securityManager, CasFilter casFilter, StudentService stuService, IScoreDao scoreDao) {
        ShiroFilterFactoryBean shiroFilterFactoryBean &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ShiroFilterFactoryBean();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 必须设置 SecurityManager &lt;/span&gt;
&lt;span&gt;        shiroFilterFactoryBean.setSecurityManager(securityManager);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 如果不设置默认会自动寻找Web工程根目录下的&quot;/login.jsp&quot;页面&lt;/span&gt;
&lt;span&gt;        shiroFilterFactoryBean.setLoginUrl(loginUrl);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 登录成功后要跳转的连接&lt;/span&gt;
        shiroFilterFactoryBean.setSuccessUrl(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/user&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        shiroFilterFactoryBean.setUnauthorizedUrl(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/403&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 添加casFilter到shiroFilter中&lt;/span&gt;
        Map&amp;lt;String, Filter&amp;gt; filters = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span&gt;();
        filters.put(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;casFilter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, casFilter);
        shiroFilterFactoryBean.setFilters(filters);

        loadShiroFilterChain(shiroFilterFactoryBean, stuService, scoreDao);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; shiroFilterFactoryBean;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建权限认证的 MyShiroCasRealm.java&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package org.springboot.sample.security;

import java.util.List;

import javax.annotation.PostConstruct;

import org.apache.shiro.authz.AuthorizationInfo;
import org.apache.shiro.authz.SimpleAuthorizationInfo;
import org.apache.shiro.cas.CasRealm;
import org.apache.shiro.subject.PrincipalCollection;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springboot.sample.config.ShiroCasConfiguration;
import org.springboot.sample.dao.IUserDao;
import org.springboot.sample.entity.Role;
import org.springboot.sample.entity.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;myShiroCasRealm&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
@Transactional
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MyShiroCasRealm extends CasRealm{

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; final Logger logger = LoggerFactory.getLogger(MyShiroCasRealm.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; IUserDao userDao; 

    @PostConstruct
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; initProperty(){
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; setDefaultRoles(&quot;ROLE_USER&quot;);&lt;/span&gt;
&lt;span&gt;        setCasServerUrlPrefix(ShiroCasConfiguration.casServerUrlPrefix);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户端回调地址&lt;/span&gt;
        setCasService(ShiroCasConfiguration.shiroServerUrlPrefix +&lt;span&gt; ShiroCasConfiguration.casFilterUrlPattern);
    }

    &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;* * 权限认证，为当前登录的Subject授予角色和权限 * @see 经测试：本例中该方法的调用时机为需授权资源被访问时 * @see 经测试：并且每次访问需授权资源时都会执行该方法中的逻辑，这表明本例中默认并未启用AuthorizationCache * @see 经测试：如果连续访问同一个URL（比如刷新），该方法不会被重复调用，Shiro有一个时间间隔（也就是cache时间，在ehcache-shiro.xml中配置），超过这个时间间隔再刷新页面，该方法会被执行 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Override
    &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;span&gt; AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {
        logger.info(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;##################执行Shiro权限认证##################&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取当前登录输入的用户名，等价于(String) principalCollection.fromRealm(getName()).iterator().next();&lt;/span&gt;
        String loginName =&lt;span&gt; (String)super.getAvailablePrincipal(principalCollection); 
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;到数据库查是否有此对象&lt;/span&gt;
        User user=userDao.findByName(loginName);&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实际项目中，这里可以根据实际情况做缓存，如果不做，Shiro自己也是有时间间隔机制，2分钟内不会重复执行该方法&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(user!=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;权限信息对象info,用来存放查出的用户的所有的角色（role）及权限（permission）&lt;/span&gt;
            SimpleAuthorizationInfo info=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; SimpleAuthorizationInfo();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用户的角色集合&lt;/span&gt;
&lt;span&gt;            info.setRoles(user.getRolesName());
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;用户的角色对应的所有权限，如果只使用角色定义访问权限，下面的四行可以不要&lt;/span&gt;
            List&amp;lt;Role&amp;gt; roleList=&lt;span&gt;user.getRoleList();
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Role role : roleList) {
                info.addStringPermissions(role.getPermissionsName());
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 或者按下面这样添加
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加一个角色,不是配置意义上的添加,而是证明该用户拥有admin角色 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; simpleAuthorInfo.addRole(&quot;admin&quot;); 
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;添加权限 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; simpleAuthorInfo.addStringPermission(&quot;admin:manage&quot;); 
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; logger.info(&quot;已为用户[mike]赋予了[admin]角色和[admin:manage]权限&quot;);&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt;&lt;span&gt; info;
        }
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 返回null的话，就会导致任何用户访问被拦截的请求时，都会自动跳转到unauthorizedUrl指定的地址&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在Controller中添加一个方法，用于将登录URL简单化，提供一个重定向功能&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
  @RequestMapping(value=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/login&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,method=&lt;span&gt;RequestMethod.GET)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String loginForm(Model model){
        model.addAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; User());
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; return &quot;login&quot;;&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;redirect:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; ShiroCasConfiguration.loginUrl;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本文主要是介绍如何在Spring Boot中集成Shiro+Cas，并非一个从零创建工程到整体完成的介绍。 &lt;br/&gt;上面贴出了2个主要的Java类，整个工程的其他所有代码没有任何与Shiro和Cas耦合的地方。如果需要jsp页面、Controller、实体类、连接数据库测试数据等代码，可以先参考文章：&lt;a href=&quot;http://blog.csdn.net/catoop/article/details/50520958&quot;&gt;http://blog.csdn.net/catoop/article/details/50520958&lt;/a&gt;（建议先看这篇文章再看本文）&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 15:13:00 +0000</pubDate>
<dc:creator>javaobject</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/a8457013/p/7875866.html</dc:identifier>
</item>
<item>
<title>JAVA提高十三：Hashtable&amp;Properties深入分析 - pony1223</title>
<link>http://www.cnblogs.com/pony1223/p/7875606.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pony1223/p/7875606.html</guid>
<description>&lt;p&gt;&lt;span&gt;最近因为一些琐碎的事情，导致一直没时间写博客，正好今天需求开发完的早，所以趁早写下本文，本文主要学习的是Hashtable的分析，因为上面一篇文章研究的是HashMap,而Hashtable和HashMap之间存在相似处，是面试中经常会问到的一个问题，因此进行下分析；而之所以加上Properties,是因为Hashtable 在实际生活中我们用的并不多，但是它的子类Properties 使用的频率相对还是不低的，因此也一起介绍下。好了，言归正传，接下来开始分析。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、Hashtable 的定义&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们翻看下源码中对Hashtable的定义如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Hashtable&amp;lt;K,V&amp;gt;
    &lt;span&gt;extends&lt;/span&gt; Dictionary&amp;lt;K,V&amp;gt;
    &lt;span&gt;implements&lt;/span&gt; Map&amp;lt;K,V&amp;gt;, Cloneable, java.io.Serializable {
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;从中可以看出HashTable继承Dictionary类，实现Map接口。其中Dictionary类是任何可将键映射到相应值的类（如 Hashtable）的抽象父类。每个键和每个值都是一个对象。在任何一个 Dictionary 对象中，每个键至多与一个值相关联。Map是&quot;key-value键值对&quot;接口。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HashTable采用&quot;拉链法&quot;实现哈希表，它定义了几个重要的参数：table、count、threshold、loadFactor、modCount。table：为一个Entry[]数组类型，Entry代表了“拉链”的节点，每一个Entry代表了一个键值对，哈希表的&quot;key-value键值对&quot;都是存储在Entry数组中的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;count：HashTable的大小，注意这个大小并不是HashTable的容器大小，而是他所包含Entry键值对的数量。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;threshold：Hashtable的阈值，用于判断是否需要调整Hashtable的容量。threshold的值=&quot;容量*加载因子&quot;。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;loadFactor：加载因子。 modCount：用来实现“fail-fast”机制的（也就是快速失败）。所谓快速失败就是在并发集合中，其进行迭代操作时，若有其他线程对其进行结构性的修改，这时迭代器会立马感知到，并且立即抛出ConcurrentModificationException异常，而不是等到迭代完成之后才告诉你。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Hashtable 和Map 之间关系图：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121215109555-113818859.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Hashtable继承于Dictionary类，实现了Map接口。Map是&quot;key-value键值对&quot;接口，Dictionary是声明了操作&quot;键值对&quot;函数接口的抽象类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、构造方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 默认构造函数。&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Hashtable() 

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定“容量大小”的构造函数&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; Hashtable(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; initialCapacity) 

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 指定“容量大小”和“加载因子”的构造函数&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; Hashtable(&lt;span&gt;int&lt;/span&gt; initialCapacity, &lt;span&gt;float&lt;/span&gt;&lt;span&gt; loadFactor) 

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 包含“子Map”的构造函数&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; Hashtable(Map&amp;lt;? &lt;span&gt;extends&lt;/span&gt; K, ? &lt;span&gt;extends&lt;/span&gt; V&amp;gt; t)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;上述构造方法中，最核心的其实就是第三个，因为无论是无参构造还是初始化容量构造最后都是调用的第三个，因此有必要看下第三个方法的源码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; Hashtable(&lt;span&gt;int&lt;/span&gt; initialCapacity, &lt;span&gt;float&lt;/span&gt;&lt;span&gt; loadFactor) 
{
         &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;验证初始容量&lt;/span&gt;
    &lt;span&gt;if&lt;/span&gt; (initialCapacity &amp;lt; 0&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException(&quot;Illegal Capacity: &quot;+&lt;span&gt;
                                               initialCapacity);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;验证加载因子&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (loadFactor &amp;lt;= 0 ||&lt;span&gt; Float.isNaN(loadFactor))
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException(&quot;Illegal Load: &quot;+&lt;span&gt;loadFactor);

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (initialCapacity==0&lt;span&gt;)
            initialCapacity &lt;/span&gt;= 1&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.loadFactor =&lt;span&gt; loadFactor;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化table，获得大小为initialCapacity的table数组&lt;/span&gt;
    table = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Entry[initialCapacity];
        &lt;/span&gt;&lt;span&gt;////&lt;/span&gt;&lt;span&gt;计算阀值&lt;/span&gt;
    threshold = (&lt;span&gt;int&lt;/span&gt;)(initialCapacity *&lt;span&gt; loadFactor);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Hashtable 方法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt;                clear()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; Object              clone()
             &lt;/span&gt;&lt;span&gt;boolean&lt;/span&gt;&lt;span&gt;             contains(Object value)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt;             containsKey(Object key)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt;             containsValue(Object value)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; Enumeration&amp;lt;V&amp;gt;&lt;span&gt;      elements()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; Set&amp;lt;Entry&amp;lt;K, V&amp;gt;&amp;gt;&lt;span&gt;    entrySet()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt;             equals(Object object)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; V                   get(Object key)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;                 hashCode()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt;             isEmpty()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; Set&amp;lt;K&amp;gt;&lt;span&gt;              keySet()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; Enumeration&amp;lt;K&amp;gt;&lt;span&gt;      keys()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; V                   put(K key, V value)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;                putAll(Map&amp;lt;? &lt;span&gt;extends&lt;/span&gt; K, ? &lt;span&gt;extends&lt;/span&gt; V&amp;gt;&lt;span&gt; map)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; V                   remove(Object key)
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt;                 size()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; String              toString()
&lt;/span&gt;&lt;span&gt;synchronized&lt;/span&gt; Collection&amp;lt;V&amp;gt;       values()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、主要方法分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HashTable的API对外提供了许多方法，这些方法能够很好帮助我们操作HashTable【如上所示】，但是这里主要介绍的是两个最根本的方法：put、get。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先我们先看put方法：将指定 &lt;code&gt;key&lt;/code&gt; 映射到此哈希表中的指定 &lt;code&gt;value&lt;/code&gt;。注意这里键key和值value都不可为空。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; V put(K key, V value) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 确保value不为null&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (value == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; NullPointerException();
        }

        &lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;
         * 确保key在table[]是不重复的
         * 处理过程：
         * 1、计算key的hash值，确认在table[]中的索引位置
         * 2、迭代index索引位置，如果该位置处的链表中存在一个一样的key，则替换其value，返回旧值
         &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
        Entry tab[] &lt;/span&gt;=&lt;span&gt; table;
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; hash = hash(key);    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;计算key的hash值&lt;/span&gt;
        &lt;span&gt;int&lt;/span&gt; index = (hash &amp;amp; 0x7FFFFFFF) % tab.length;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;迭代，寻找该key，替换&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; (Entry&amp;lt;K,V&amp;gt; e = tab[index] ; e != &lt;span&gt;null&lt;/span&gt; ; e =&lt;span&gt; e.next) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; ((e.hash == hash) &amp;amp;&amp;amp;&lt;span&gt; e.key.equals(key)) {
                V old &lt;/span&gt;=&lt;span&gt; e.value;
                e.value &lt;/span&gt;=&lt;span&gt; value;
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; old;
            }
        }

        modCount&lt;/span&gt;++&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (count &amp;gt;= threshold) {  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果容器中的元素数量已经达到阀值，则进行扩容操作&lt;/span&gt;
&lt;span&gt;            rehash();
            tab &lt;/span&gt;=&lt;span&gt; table;
            hash &lt;/span&gt;=&lt;span&gt; hash(key);
            index &lt;/span&gt;= (hash &amp;amp; 0x7FFFFFFF) %&lt;span&gt; tab.length;
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 在索引位置处插入一个新的节点&lt;/span&gt;
        Entry&amp;lt;K,V&amp;gt; e =&lt;span&gt; tab[index];
        tab[index] &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Entry&amp;lt;&amp;gt;&lt;span&gt;(hash, key, value, e);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;容器中元素+1&lt;/span&gt;
        count++&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;put方法的整个处理流程是：计算key的hash值，根据hash值获得key在table数组中的索引位置，然后迭代该key处的Entry链表，若该链表中存在一个这个的key对象，那么就直接替换其value值即可，否则在将改key-value节点插入该index索引位置处。如下：假设我们现在Hashtable的容量为5，已经存在了(5,5)，(13,13)，(16,16)，(17,17)，(21,21)这 5 个键值对，目前他们在Hashtable中的位置如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121221018618-184864714.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在，我们插入一个新的键值对，put(16,22)，假设key=16的索引为1.但现在索引1的位置有两个Entry了，所以程序会对链表进行迭代。迭代的过程中，发现其中有一个Entry的key和我们要插入的键值对的key相同，所以现在会做的工作就是将newValue=22替换oldValue=16，然后返回oldValue=16.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121221129461-379637768.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我们现在再插入一个，put(33,33)，key=33的索引为3，并且在链表中也不存在key=33的Entry，所以将该节点插入链表的第一个位置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121221205086-628123709.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在HashTabled的put方法中有两个地方需要注意：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;span&gt;1、HashTable的扩容操作，在put方法中，如果需要向table[]中添加Entry元素，会首先进行容量校验，如果容量已经达到了阀值，HashTable就会进行扩容处理rehash()，如下:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; rehash() {
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; oldCapacity =&lt;span&gt; table.length;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;元素&lt;/span&gt;
        Entry&amp;lt;K,V&amp;gt;[] oldMap =&lt;span&gt; table;

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;新容量=旧容量 * 2 + 1&lt;/span&gt;
        &lt;span&gt;int&lt;/span&gt; newCapacity = (oldCapacity &amp;lt;&amp;lt; 1) + 1&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (newCapacity - MAX_ARRAY_SIZE &amp;gt; 0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (oldCapacity ==&lt;span&gt; MAX_ARRAY_SIZE)
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
            newCapacity &lt;/span&gt;=&lt;span&gt; MAX_ARRAY_SIZE;
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;新建一个size = newCapacity 的HashTable&lt;/span&gt;
        Entry&amp;lt;K,V&amp;gt;[] newMap = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Entry[];

        modCount&lt;/span&gt;++&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;重新计算阀值&lt;/span&gt;
        threshold = (&lt;span&gt;int&lt;/span&gt;)Math.min(newCapacity * loadFactor, MAX_ARRAY_SIZE + 1&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;重新计算hashSeed&lt;/span&gt;
        &lt;span&gt;boolean&lt;/span&gt; rehash =&lt;span&gt; initHashSeedAsNeeded(newCapacity);

        table &lt;/span&gt;=&lt;span&gt; newMap;
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将原来的元素拷贝到新的HashTable中&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = oldCapacity ; i-- &amp;gt; 0&lt;span&gt; ;) {
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Entry&amp;lt;K,V&amp;gt; old = oldMap[i] ; old != &lt;span&gt;null&lt;/span&gt;&lt;span&gt; ; ) {
                Entry&lt;/span&gt;&amp;lt;K,V&amp;gt; e =&lt;span&gt; old;
                old &lt;/span&gt;=&lt;span&gt; old.next;

                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (rehash) {
                    e.hash &lt;/span&gt;=&lt;span&gt; hash(e.key);
                }
                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; index = (e.hash &amp;amp; 0x7FFFFFFF) %&lt;span&gt; newCapacity;
                e.next &lt;/span&gt;=&lt;span&gt; newMap[index];
                newMap[index] &lt;/span&gt;=&lt;span&gt; e;
            }
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在这个rehash()方法中我们可以看到容量扩大两倍+1，同时需要将原来HashTable中的元素一一复制到新的HashTable中，这个过程是比较消耗时间的，同时还需要重新计算hashSeed的，毕竟容量已经变了。这里对阀值啰嗦一下：比如初始值11、加载因子默认0.75，那么这个时候阀值threshold=8，当容器中的元素达到8时，HashTable进行一次扩容操作，容量 = 8 * 2 + 1 =17，而阀值threshold=17*0.75 = 13，当容器元素再一次达到阀值时，HashTable还会进行扩容操作，一次类推。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 2、在计算索引位置index时，HashTable进行了一个与运算过程（hash &amp;amp; 0x7FFFFFFF），为什么需要做一步操作，这么做有什么好处？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这是因为在计算hash值得时候可能是负数因此采用了和0X7FFFFFFF相与的操作保证为正数，这个涉及到计算机的二进制数存放正数负数是如何存放的一个逻辑基础知识，正数很容易，负数的存放是采用负数的绝对值取反得到反码然后+1 得到补码然后进行的存放，因此和0X7FFFFFFF相与可保证只改变符号位而不改变其它位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;相关基础知识可以参考：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;负数的二进制表示方法：http://www.360doc.com/content/12/0801/17/6828497_227700914.shtml&lt;/p&gt;
&lt;p&gt;Java 8 种数据类型：http://blog.csdn.net/never_cxb/article/details/47204485&lt;/p&gt;
&lt;p&gt;Java位运算符及二进制常识：http://blog.csdn.net/coffeelifelau/article/details/52433653&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;get方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;相比较于 put 方法，get 方法则简单很多。其过程就是首先通过 hash()方法求得 key 的哈希值，然后根据 hash 值得到 index 索引（上述两步所用的算法与 put 方法都相同）。然后迭代链表，返回匹配的 key 的对应的 value；找不到则返回 null。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;synchronized&lt;/span&gt;&lt;span&gt; V get(Object key) {
        Entry tab[] &lt;/span&gt;=&lt;span&gt; table;
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; hash =&lt;span&gt; hash(key);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; index = (hash &amp;amp; 0x7FFFFFFF) %&lt;span&gt; tab.length;
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Entry&amp;lt;K,V&amp;gt; e = tab[index] ; e != &lt;span&gt;null&lt;/span&gt; ; e =&lt;span&gt; e.next) {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; ((e.hash == hash) &amp;amp;&amp;amp;&lt;span&gt; e.key.equals(key)) {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; e.value;
            }
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; Hashtable 遍历方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;1、使用keys()&lt;/span&gt;
Enumeration&amp;lt;String&amp;gt; en1 =&lt;span&gt; table.keys();
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt;(en1.hasMoreElements()) {
    en1.nextElement();
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;2、使用elements()&lt;/span&gt;
Enumeration&amp;lt;String&amp;gt; en2 =&lt;span&gt; table.elements();
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt;(en2.hasMoreElements()) {
    en2.nextElement();
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;3、使用keySet()&lt;/span&gt;
Iterator&amp;lt;String&amp;gt; it1 =&lt;span&gt; table.keySet().iterator();
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt;(it1.hasNext()) {
    it1.next();
}

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;4、使用entrySet()&lt;/span&gt;
Iterator&amp;lt;Entry&amp;lt;String, String&amp;gt;&amp;gt; it2 =&lt;span&gt; table.entrySet().iterator();
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt;(it2.hasNext()) {
    it2.next();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、HashTable与HashMap的区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HashMap和Hashtable都实现了Map接口，但决定用哪一个之前先要弄清楚它们之间的分别。主要的区别有：线程安全性，同步(synchronization)，以及速度。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.HashMap几乎可以等价于Hashtable，除了HashMap是非synchronized的，并可以接受null(HashMap可以接受为null的键值(key)和值(value)，而Hashtable则不行)。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;2.HashMap是非synchronized，而Hashtable是synchronized，这意味着Hashtable是线程安全的，多个线程可以共享一个Hashtable；而如果没有正确的同步的话，多个线程是不能共享HashMap的。Java 5提供了ConcurrentHashMap，它是HashTable的替代，比HashTable的扩展性更好。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;3.另一个区别是HashMap的迭代器(Iterator)是fail-fast迭代器，而Hashtable的enumerator迭代器不是fail-fast的。所以当有其它线程改变了HashMap的结构（增加或者移除元素），将会抛出ConcurrentModificationException，但迭代器本身的remove()方法移除元素则不会抛出ConcurrentModificationException异常。但这并不是一个一定发生的行为，要看JVM。这条同样也是Enumeration和Iterator的区别。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4.由于Hashtable是线程安全的也是synchronized，所以在单线程环境下它比HashMap要慢。如果你不需要同步，只需要单一线程，那么使用HashMap性能要好过Hashtable。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;HashMap不能保证随着时间的推移Map中的元素次序是不变的。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;我们能否让HashMap同步？&lt;/span&gt;&lt;br/&gt;&lt;span&gt;HashMap可以通过下面的语句进行同步：Map m = Collections.synchronizeMap(hashMap);&lt;/span&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;结论:&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;span&gt;Hashtable和HashMap有几个主要的不同：线程安全以及速度。仅在你需要完全的线程安全的时候使用Hashtable，而如果你使用Java 5或以上的话，请使用ConcurrentHashMap。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt; 五、Properties分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;java.util
类 Properties
java.lang.Object
  java.util.Dictionary&lt;/span&gt;&amp;lt;K,V&amp;gt;&lt;span&gt;
      java.util.Hashtable&lt;/span&gt;&amp;lt;Object,Object&amp;gt;&lt;span&gt;
          java.util.Properties&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;可以看到它是Hashtable的一个子类，是一个使用比父类使用更多的类，Properties类表示了一个持久的属性集，它是在一个文件中存储键值对儿的，其中键值对儿以等号分隔。Properties可保存在流中或从流中加载。属性列表中的每个键及其所对应的值都是字符串。Properties类是线程安全的：多个线程可以共享单个Properties对象而无需进行外部同步。一组属性示例： &lt;/span&gt;&lt;br/&gt;&lt;span&gt;foo=bar &lt;/span&gt;&lt;br/&gt;&lt;span&gt;fu=baz&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一个属性列表可包含另一个属性列表作为它的“默认值”；如果未能在原有的属性列表中搜索到属性键，则搜索第二个属性列表。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;如果在“不安全”的 Properties 对象（即包含非 String 的键或值）上调用 store 或 save 方法，则该调用将失败。类似地，如果在“不安全”的 Properties 对象（即包含非 String 的键）上调用 propertyNames 或 list 方法，则该调用将失败。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了输入/输出流使用 ISO 8859-1 字符编码外，load(InputStream) / store(OutputStream, String)方法与 load(Reader)/store(Writer, String)对的工作方式完全相同。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;loadFromXML(InputStream)和 storeToXML(OutputStream, String, String)方法按简单的 XML 格式加载和存储属性。默认使用 UTF-8 字符编码，但如果需要，可以指定某种特定的编码。XML 属性文档具有以下 DOCTYPE 声明：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;一下列出了Properties的方法摘要，有关每个方法的详细使用情况，请参看API：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;http://www.apihome.cn/api/java/Properties.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121224247118-68509478.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;示例练习一：如何装载属性文件并列出它当前的一组键和值。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;思路：传递属性文件的输入流InputStream给load()方法，会将改属性文件中的每个键值对儿添加到Properties实例中；然后条用list()列出所有属性或者使用getProperty()获取单独的属性。（注意 list() 方法的输出中键-值对的顺序与它们在输入文件中的顺序不一样。 Properties 类在一个散列表（hashtable，事实上是一个 Hashtable 子类）中储存一组键-值对，所以不能保证顺序。 ）&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileInputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileNotFoundException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PropertiesTest {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        Properties properties &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            properties.load(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; FileInputStream(&quot;test.properties&quot;));&lt;span&gt;//&lt;/span&gt;&lt;span&gt;加载属性文件&lt;/span&gt;
            properties.list(System.out);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将属性文件中的键值对儿打印到控制台&lt;/span&gt;
            properties.getProperty(&quot;foo&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (FileNotFoundException e) {
            e.printStackTrace();
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
            e.printStackTrace();
        }
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;示例练习二：如何装载XML版本的属性文件并列出它当前的一组键和值。（只有装载方法有差异，其余完全相同load(),loadFromXML()）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileInputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileNotFoundException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PropertiesTest {

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        Properties properties &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            properties.loadFromXML(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; FileInputStream(&quot;test.xml&quot;));&lt;span&gt;//&lt;/span&gt;&lt;span&gt;加载属性文件&lt;/span&gt;
            properties.list(System.out);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将属性文件中的键值对儿打印到控制台&lt;/span&gt;
            properties.getProperty(&quot;foo&quot;&lt;span&gt;);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (FileNotFoundException e) {
            e.printStackTrace();
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
            e.printStackTrace();
        }
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;示例练习三：如何将文件保存到属性文件中？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt; java.util.*&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt; java.io.*&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StoreXML {
  &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String args[]) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception {
    Properties prop &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
    prop.setProperty(&lt;/span&gt;&quot;one-two&quot;, &quot;buckle my shoe&quot;&lt;span&gt;);
    prop.setProperty(&lt;/span&gt;&quot;three-four&quot;, &quot;shut the door&quot;&lt;span&gt;);
    prop.setProperty(&lt;/span&gt;&quot;five-six&quot;, &quot;pick up sticks&quot;&lt;span&gt;);
    prop.setProperty(&lt;/span&gt;&quot;seven-eight&quot;, &quot;lay them straight&quot;&lt;span&gt;);
    prop.setProperty(&lt;/span&gt;&quot;nine-ten&quot;, &quot;a big, fat hen&quot;&lt;span&gt;);
    prop.storeToXML(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; FileOutputStream(&quot;test.xml&quot;), &quot;saveXML&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将键值对儿保存到XML文件中&lt;/span&gt;
prop.store(&lt;span&gt;new&lt;/span&gt; FileOutputStream(&quot;test.properties&quot;), &quot;saveProperties&quot;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将键值对儿保存到普通的属性文件中&lt;/span&gt;
&lt;span&gt;    fos.close();
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;将键值对儿保存到XML文件中的输出结果如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Rhyme&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;comment&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;seven-eight&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;lay them straight&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;five-six&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;pick up sticks&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;nine-ten&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;a big, fat hen&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;three-four&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;shut the door&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;one-two&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;buckle my shoe&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;将键值对儿保存到普通的属性文件中输出结果如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;one-two=buckle my shoe
three-four=shut the door
five-six=pick up sticks
seven-eight=lay them straight
nine-ten=a big, fat hen&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意：从一个XML文件中装载一组属性，其DTD文件如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; DTD for properties &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT properties ( comment?, entry* ) &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties version CDATA #FIXED &quot;1.0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT comment (#PCDATA) &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT entry (#PCDATA) &lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST entry key CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;在外围 &lt;code&gt;&amp;lt;properties&amp;gt;&lt;/code&gt; 标签中包装的是一个 &lt;code&gt;&amp;lt;comment&amp;gt;&lt;/code&gt; 标签，后面是任意数量的 &lt;code&gt;&amp;lt;entry&amp;gt;&lt;/code&gt;标签。对每一个 &lt;code&gt;&amp;lt;entry&amp;gt;&lt;/code&gt; 标签，有一个键属性，输入的内容就是它的值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意点：路径问题，如下：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileNotFoundException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileReader;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;

&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 使用Properties读取配置文件
 * 资源配置文件:
 * 使用相对与绝对路径读取
 * load(InputStream inStream) 
   load(Reader reader) 
   loadFromXML(InputStream in) 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; Administrator
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo03 {

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; args
     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; IOException 
     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; FileNotFoundException 
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; FileNotFoundException, IOException {
        Properties pro&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取 绝对路径
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;pro.load(new FileReader(&quot;e:/others/db.properties&quot;));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取 相对路径&lt;/span&gt;
        pro.load(&lt;span&gt;new&lt;/span&gt; FileReader(&quot;src/com/bjsxt/others/pro/db.properties&quot;&lt;span&gt;));
        System.out.println(pro.getProperty(&lt;/span&gt;&quot;user&quot;, &quot;bjsxt&quot;&lt;span&gt;));
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;

&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 使用类相对路径读取配置文件
 *  bin  
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; Administrator
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Demo04 {

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; args
     * &lt;/span&gt;&lt;span&gt;@throws&lt;/span&gt;&lt;span&gt; IOException 
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; IOException {
        Properties pro &lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;类相对路径的 / bin 
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;pro.load(Demo04.class.getResourceAsStream(&quot;/com/bjsxt/others/pro/db.properties&quot;));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;&quot; bin &lt;/span&gt;
        pro.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(&quot;com/bjsxt/others/pro/db.properties&quot;&lt;span&gt;));
        System.out.println(pro.getProperty(&lt;/span&gt;&quot;user&quot;, &quot;bjsxt&quot;&lt;span&gt;));
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt; 关于类路径需要注意一下；举个例子：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/401339/201711/401339-20171121225109868-996850756.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.FileInputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.InputStream;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Collection;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Properties;

 &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 使用配置文件读取调用者的类
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; jiqinlin
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ReflectTest {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;使用绝对路径，否则无法读取config.properties
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;InputStream inStream=new FileInputStream(&quot;F:\\android\\test\\src\\com\\ljq\\test\\resource\\config.properties&quot;);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;ReflectTest.class.getClassLoader().getResourceAsStream(String path): 默认则是从ClassPath根下获取，path不能以’/'开头，最终是由ClassLoader获取资源。 
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;InputStream inStream = ReflectTest.class.getClassLoader().getResourceAsStream(&quot;com/ljq/test/resource/config.properties&quot;);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ReflectTest.class.getResourceAsStream(String path)： path不以’/'开头时默认是从此类所在的包下取资源，以’/'开头则是从ClassPath根下获取。
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;其只是通过path构造一个绝对路径，最终还是由ClassLoader获取资源。
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;InputStream inStream = ReflectTest.class.getResourceAsStream(&quot;/com/ljq/test/resource/config.properties&quot;);
        
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;config.properties配置文件所在目录是ReflectTest类所在子目录，才可以；否则报空指针异常&lt;/span&gt;
         InputStream inStream = ReflectTest.&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;resource/config.properties&quot;&lt;span&gt;); 
        
        Properties props&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Properties();
        props.load(inStream);
        inStream.close();
        
        String className&lt;/span&gt;=props.getProperty(&quot;className&quot;&lt;span&gt;);
        Collection collection&lt;/span&gt;=&lt;span&gt;(Collection)Class.forName(className).newInstance();
        collection.add(&lt;/span&gt;&quot;123&quot;&lt;span&gt;);
        System.out.println(&lt;/span&gt;&quot;size=&quot;+collection.size()); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;size=1&lt;/span&gt;
&lt;span&gt;     }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;config.properties配置文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
className=java.util.HashSet
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;getResourceAsStream用法大致有以下几种：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
第一：要加载的文件和.class文件在同一目录下，例如：com.ljq.test目录下有类ReflectTest.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;,同时有资源文件config.properties 

那么，应该有如下代码： 
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;config.properties&quot;&lt;span&gt;); 

第二：在ReflectTest.class目录的子目录下，例如：com.ljq.test下有类ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;,同时在com.ljq.test.resource目录下有资源文件config.properties

那么，应该有如下代码： 
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;resource/config.properties&quot;&lt;span&gt;); 

第三：不在ReflectTest.class目录下，也不在子目录下，例如：com.ljq.test下有类ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ,同时在com.ljq.resource目录下有资源文件config.properties

那么，应该有如下代码： 
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;/com/ljq/resource/config.properties&quot;&lt;span&gt;); 

总结一下，可能只是两种写法 

第一：前面有 “&lt;/span&gt;/” ，“/”代表了工程的根目录，例如工程名叫做test，“/&lt;span&gt;”代表了test
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;/com/ljq/resource/config.properties&quot;&lt;span&gt;); 

第二：前面没有 “&lt;/span&gt;/&lt;span&gt;” ，代表当前类的目录 
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;config.properties&quot;&lt;span&gt;); 
ReflectTest.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;.getResourceAsStream(&quot;resource/config.properties&quot;&lt;span&gt;); 

最后，总结 
getResourceAsStream读取的文件路径只局限在工程的源文件夹中，包括在工程src根目录下，以及类包里面任何位置，但是如果配置文件路径是在除了源文件夹之外的其他文件夹中时，该方法是用不了的。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Properties获取数据乱码解决&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1.原因&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Properties调用load(InputStream)时，读取文件时使用的默认编码为ISO-8859-1；当我们将中文放入到properties文件中，通过getProperty(key)获取值时，取到得数据是ISO-8859-1格式的，但是ISO-8859-1是不能识别中文的。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;2.解决方法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;通过getProperty()获取的数据data既然是ISO-8859-1编码的，就通过data.getByte(“iso-8859-1”)获取获取，使用new String(data.getByte(“iso-8859-1”),”UTF-8”)进行转换。当然properties文件的编码类型需要和new String(Byte[],charset)中的第二个参数的编码类型相同。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;http://wiki.jikexueyuan.com/project/java-collection&lt;/p&gt;
&lt;p&gt;http://blog.csdn.net/chenssy/article/details/22896871&lt;/p&gt;
&lt;p&gt;http://www.cnblogs.com/linjiqin&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 14:59:00 +0000</pubDate>
<dc:creator>pony1223</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/pony1223/p/7875606.html</dc:identifier>
</item>
<item>
<title>Celery 源码解析六：Events 的实现 - 行者酱油君</title>
<link>http://www.cnblogs.com/makor/p/event-implement-in-celery.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/makor/p/event-implement-in-celery.html</guid>
<description>&lt;p&gt;在 Celery 中，除了远程控制之外，还有一个元素可以让我们对分布式中的任务的状态有所掌控，而且从实际意义上来说，这个元素对 Celery 更为重要，这就是在本文中将要说到的 Event。&lt;/p&gt;
&lt;p&gt;在 Celery 中，注册了很多的 Event，这些 Event 将会在 Task/Worker 的状态发生变化的时候被发出，然后被绑定的 Event 消费者（Receiver）所接受，绑定的 Event 消费者可以是一连串的回调函数，相信细心的同学在前面的源码解析过程中也有发现一些关于 event 的蛛丝马迹，但是，我都是忽略了先，下面就正式得给大家介绍 Event。&lt;/p&gt;
&lt;h3 id=&quot;toc_0&quot;&gt;Event 有什么用&lt;/h3&gt;
&lt;p&gt;前面说了，Celery 在 Task/Worker 的状态发生变化的时候就会发出 Event，所以，一个很明显的应用就是监控 Event 的状态，例如 Celery 大家所熟知的基于 WebUI 的管理工具 flower 就用到了 Event，但是，这也是一个比较明显的应用，除此之外，我们还可以利用 Event 来给 Task 做快照，甚至实时对 Task 的状态转变做出响应，例如任务失败之后触发报警，任务成功之后执行被依赖的任务等等，总结一下，其实就是：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;对 Task 的状态做快照&lt;/li&gt;
&lt;li&gt;对 Task 的状态做实时处理&lt;/li&gt;
&lt;li&gt;监控 Celery（Worker/Task） 的执行状态&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;toc_1&quot;&gt;Event 的实现&lt;/h3&gt;
&lt;p&gt;了解完 Event 的功能之后，我们这里直接跳过了 Event 的使用实例，因为这个可以不用实例，而是我们根据前面的介绍，然后我们就明白了需要了解一下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Event 是如何产生的&lt;/li&gt;
&lt;li&gt;Event 的传递机制是如何实现的&lt;/li&gt;
&lt;li&gt;Event 的处理机制如何&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;我也将遵循这几个问题的顺序对 Celery 的实现进行一个总结。&lt;/p&gt;
&lt;h4 id=&quot;toc_2&quot;&gt;Event 是如何产生的&lt;/h4&gt;
&lt;p&gt;现在我们已经知道了 Event 是 Task/Worker 产生的，所以出处必然在这些实现中，这就毫无难度了。不妨，我们就从最简单的地方出发，看看 Worker 的 Event 是如何产生的，据我所知，现在 Worker 拥有的 Event 有三个：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;worker-online&lt;/li&gt;
&lt;li&gt;worker-heartbeat&lt;/li&gt;
&lt;li&gt;worker-offline&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;对于 &lt;code&gt;worker-online&lt;/code&gt; 那么应该就是在 Worker 的启动过程中，所以我们还是回到第一篇文章中的介绍，看看里面有什么可以参考的。如果你回去看了的话，肯定会发现 &lt;strong&gt;Consumer&lt;/strong&gt; 这个 &lt;strong&gt;Blueprint&lt;/strong&gt; 里面有一个叫做 &lt;strong&gt;Event&lt;/strong&gt; 的 &lt;strong&gt;Bootstep&lt;/strong&gt;，这里很可疑，不妨去看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347008-1205195801.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;well，这里看上去没啥有意思的，但是，看 &lt;strong&gt;Line 26&lt;/strong&gt; 我们可以肯定的一点是 Event 是否可用还会取决于我们是否允许 gossip，这个是啥我们还不知道，但是无妨，先继续看下去，这里还有一个东西值得我们关注，那就是 &lt;code&gt;event_dispatcher&lt;/code&gt;，但是这里还没啥可看的，毕竟是 &lt;code&gt;None&lt;/code&gt; 嘛。&lt;/p&gt;
&lt;p&gt;我们只是看到了冰山一角，继续看看 &lt;code&gt;start&lt;/code&gt; 又在干嘛：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223346883-546220169.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里第一句上来就是 &lt;code&gt;close&lt;/code&gt;，有点蒙蔽啊，啥都不知道你就先上来 &lt;code&gt;close&lt;/code&gt; 了，是不是很被动，没关系，我告诉你这里是干啥的，这里就是清除 &lt;code&gt;Celery&lt;/code&gt; 之前的 &lt;code&gt;event_dispatcher&lt;/code&gt;，然后将之前的 &lt;code&gt;event_dispatcher&lt;/code&gt; 返回回来，返回来干啥？在 &lt;strong&gt;Line 47&lt;/strong&gt; 会根据之前的配置设置新的 &lt;code&gt;event_dispatcher&lt;/code&gt; 啊，至于你先知道 &lt;code&gt;event_dispatcher&lt;/code&gt; 是啥，看 &lt;strong&gt;Line 36&lt;/strong&gt; 就知道啦，可以看到这就是一个 &lt;strong&gt;Dispatcher&lt;/strong&gt; 的对象，所以我们需要关注一下这个对象了。&lt;/p&gt;
&lt;p&gt;但是由于 &lt;strong&gt;Dispatcher&lt;/strong&gt; 这个类太复杂，我就不一一摊开讲了，不妨看看我们需要面对的几个方法，第一个是 &lt;code&gt;extend_buffer&lt;/code&gt;，看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223346836-1092174378.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里的 &lt;code&gt;_outbound_buffer&lt;/code&gt; 是一个 &lt;code&gt;deque&lt;/code&gt;，所以我们可以知道其实就是将旧的 event 继承过来，替别人背一下锅。继续看看 &lt;code&gt;flush&lt;/code&gt; 在干些啥：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223346868-333311217.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;哟，这个稍微复杂点了，但是无妨，还是要看看，&lt;strong&gt;Line 204&lt;/strong&gt; 这里只是简单得将 &lt;code&gt;deque&lt;/code&gt; 转换为 &lt;code&gt;list&lt;/code&gt;，然后 &lt;strong&gt;Line 207 、208&lt;/strong&gt; 这里有点意思啦，这里就是发送 Event 了！！！难道我们已经完成任务了？已经发现了如何产生消息了？但是，马上我们在后面又发现了还有一个 groups 的东西，这里发送消息又不一样？不管了，先来看看 &lt;code&gt;_publish&lt;/code&gt; 干啥：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347040-1194005641.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;看一下 &lt;code&gt;_publish&lt;/code&gt; 的代码，感觉没了意思，又是使用 AMQP，Celery 这是讲 MQ 贯彻到底啊！那似乎没办法了，这里就算完了，但是，我们的事情却还没完，因为这里都是针对的旧的任务，我们希望看到的 &lt;code&gt;worker-online&lt;/code&gt; 还没看到呢，但是 Bootstep 的工作却是完成了，似乎这里线索就断了。&lt;/p&gt;
&lt;p&gt;但是，同样细心的同学可能会记得，我们之前曾经说过一个叫做 &lt;strong&gt;Heart&lt;/strong&gt; 的 &lt;strong&gt;Bootstep&lt;/strong&gt;，它的职责是干啥来着？如果忘记了，不妨回到第一篇回顾一下，记得的话，我们进代码看看，哈哈哈&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223346961-2082080328.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;nice，你会发现，这个 &lt;strong&gt;Bootstep&lt;/strong&gt; 是依赖于 &lt;strong&gt;Events&lt;/strong&gt; 的，同时在 &lt;strong&gt;Line 29&lt;/strong&gt; 中给你会发现就用到了我们刚刚初始化的 &lt;code&gt;event_dispatcher&lt;/code&gt;，然后就调用 &lt;code&gt;start&lt;/code&gt; 了，所以不妨一起看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347258-1325022158.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;嘿嘿，看到没，这里就是 &lt;code&gt;worker-online&lt;/code&gt; 的发生地了，而且我们还顺便捕捉到了 &lt;code&gt;worker-heartbeat&lt;/code&gt; 这个 &lt;strong&gt;Event&lt;/strong&gt;，so lucky，但是有个地方我们不明的，那就是这个 &lt;code&gt;_send&lt;/code&gt; 干了什么，如果不出意料的话，应该是调用的 &lt;code&gt;dispatcher._publish&lt;/code&gt;，走，看看去：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347243-494630732.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;好，并没有按照我的套路来，调用的居然是 &lt;code&gt;event_dispatcher&lt;/code&gt; 的 &lt;code&gt;send&lt;/code&gt;，那么它和 &lt;code&gt;_publish&lt;/code&gt; 有什么区别呢？不妨一起看一看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347727-625392613.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里和 &lt;code&gt;_publish&lt;/code&gt; 的唯一不一样的地方就是做了缓存处理，就是在 &lt;strong&gt;Line 185&lt;/strong&gt; 这里，如果需要缓存，那么缓存一波，在 &lt;strong&gt;Line 192&lt;/strong&gt; 这里如果缓存满了，那么就发送呗。有一点值得注意的就是在 &lt;strong&gt;Line 198&lt;/strong&gt;，这里调用的是 &lt;code&gt;publish&lt;/code&gt; 而不是 &lt;code&gt;_publish&lt;/code&gt;，搞那么多事，那么这里有有什么不一样？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223347899-71034424.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;好呗，从这里看似乎除了对 &lt;code&gt;clock&lt;/code&gt; 进行一个操作之外，没有其他特殊之处，那么这个 &lt;code&gt;clock&lt;/code&gt; 又是什么，起到什么作用呢？略微查找就知道了，这又是 Kombu 的东西，然后看解释就知道了这是一个 Counter，可以用来给 Consumer 判定是否接受这个 Event 用的，所以我们可以先 pass。所以，总得来说，我们可以发现，这里已经对 Event 的产生有了一定了解了，这里可以产生的一个比较明显的问题点就是：&lt;strong&gt;Celery 中 Event 的 send、publish 和 _publish&lt;/strong&gt; 的区别是啥？&lt;/p&gt;
&lt;h4 id=&quot;toc_3&quot;&gt;消息的传递机制&lt;/h4&gt;
&lt;p&gt;在跟踪 Event 的产生的过程中我们已经顺便将 Event 的发送给看了，其实还是 Kombu 的 AMQP 在作用，然后通过 Connection 发送到对应的 MQ 中，再后面就被 Consumer 接收，全链路就是这样：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Event&amp;lt;Producer&amp;gt; ------&amp;gt; MQ ---------&amp;gt; Event&amp;lt;Consumer&amp;gt;(Receiver)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;前半部分我们已经清楚了，但是后半部分还不清楚，所以我们的重点就是看看后半部分具体是怎么做的。但是后半部分要从何处入手这是个问题，我这里省去了查找的过程，直接说一下入口吧，位置就在 &lt;code&gt;celery/bin/events.py&lt;/code&gt;，对于任一一种 Events，我们需要关注的是 &lt;code&gt;run_evtop&lt;/code&gt; 这个函数，所以先来看看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223348118-49854373.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里很简短，继续跟下去看看咯：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223348524-127211682.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里有点意思了，但是还是可以比较简单得看到 &lt;strong&gt;Line 529&lt;/strong&gt; 是关键所在：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223348633-1258422340.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;看到这里我们就该偷笑了，看到 &lt;code&gt;while 1&lt;/code&gt; 就意味差不多到最后了，哈哈，&lt;strong&gt;Line 508&lt;/strong&gt; 使用的是 &lt;code&gt;read&lt;/code&gt; 的 Connection，然后 &lt;strong&gt;Line 512&lt;/strong&gt; 创建了一个 &lt;strong&gt;Receiver&lt;/strong&gt;，在 &lt;strong&gt;Line 515&lt;/strong&gt; 进行 &lt;code&gt;capture&lt;/code&gt;，所以我们可以断定，我们想找的就在这两句里面了，直接看 &lt;strong&gt;Line 515&lt;/strong&gt; 吧：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223348602-1557868798.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这里有点意思的就是又是遇到 Kombu 的锅：&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;class kombu.mixins.ConsumerMixin[source]&lt;br/&gt;Convenience mixin for implementing consumer programs.&lt;/p&gt;
&lt;p&gt;It can be used outside of threads, with threads, or greenthreads (eventlet/gevent) too.&lt;/p&gt;
&lt;p&gt;The basic class would need a connection attribute which must be a Connection instance, and define a get_consumers() method that returns a list of kombu.Consumer instances to use. Supporting multiple consumers is important so that multiple channels can be used for different QoS requirements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里其实是有多个 EventReceiver 绑定了这个 Connection，然后 &lt;code&gt;ConsumerMixin&lt;/code&gt; 帮助协调这些 Receiver，每个 Receiver 都可以收到这些 Event，但是能不能处理就看他们的 &lt;code&gt;routing_key&lt;/code&gt; 设置得好不好了。&lt;/p&gt;
&lt;h4 id=&quot;toc_4&quot;&gt;Event 的处理机制&lt;/h4&gt;
&lt;p&gt;看完 Event 的接收机制我们知道了 Event 是以 AMQP 的形式接收的，那么毫无以为，处理逻辑应该在回调机制上回调的，所以关键还是在于 &lt;strong&gt;Line 512&lt;/strong&gt; 中的 &lt;code&gt;handlers&lt;/code&gt;，我们来看着：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/469840/201711/469840-20171121223348555-38369714.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;Receiver&lt;/strong&gt; 中的 &lt;code&gt;process&lt;/code&gt; 我们发现了他是这么用 &lt;code&gt;handlers&lt;/code&gt; 的，那么没问题，&lt;code&gt;state.event&lt;/code&gt; 才是最后的关键，state 中间做了两层的封装，到最后就成了 &lt;code&gt;_create_dispatcher&lt;/code&gt;，但是同样得，这个函数也是比较复杂，所以我这里对他进行精简一下，概括起来是这样的：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;先找 &lt;code&gt;group&lt;/code&gt; 的 handler，有的话就用这个了，否则看下面；这个默认是没东西的，所以可以先pass&lt;/li&gt;
&lt;li&gt;如果是 &lt;code&gt;worker&lt;/code&gt; 的 Event，就执行 worker 对应的处理&lt;/li&gt;
&lt;li&gt;如果是 &lt;code&gt;task&lt;/code&gt; 的 Event，就执行 task 的对应处理&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;OK，这差不多就是 Event 的内容啦，关于 Event，后面有更精彩的应用会说到，不知道用 Celery 的同学平时对这个特性有没有使用的场景？&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 14:34:00 +0000</pubDate>
<dc:creator>行者酱油君</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/makor/p/event-implement-in-celery.html</dc:identifier>
</item>
<item>
<title>如何完全根据官方下载包搭建hibernate框架 - 宇的季节</title>
<link>http://www.cnblogs.com/chenkeyu/p/7874998.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenkeyu/p/7874998.html</guid>
<description>&lt;p&gt;　　好久没有用s2sh的框架了，最近业务需要又要拾起来。在搭框架时，发现之前都是复制配置文件，对具体的细节却很懵懂，所以要从新来一遍，也是一次新的学习。&lt;/p&gt;
&lt;p&gt;　　我使用的版本是hibernate-release-4.3.11.Final，因为需要使用基于&lt;span&gt;xml&lt;/span&gt;的配置，这一版本关于&lt;span&gt;xml&lt;/span&gt;的文档还是很友好的，最新的&lt;span&gt;5.x&lt;/span&gt;主要针对注解，与业务有所出入。&lt;/p&gt;
&lt;p&gt;　　下面开始搭建：&lt;/p&gt;
&lt;p&gt;　　百度云：&lt;a href=&quot;http://pan.baidu.com/s/1kVimYlp&quot; target=&quot;_blank&quot;&gt;jar包链接&lt;/a&gt;  密码：h7o8&lt;/p&gt;
&lt;h2&gt;关于文件结构&lt;/h2&gt;
&lt;p&gt;　　搭建Hibernate的压缩文件解压后就是下面的结构：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121195207383-757290091.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;&lt;strong&gt;jdbc和log4j包&lt;/strong&gt;&lt;/span&gt;是我后加的，其他是就是hibernate的，下面说下他这几个文件夹的大致用途&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;documentation&lt;/span&gt;文件夹：存放了Hibernate的使用文档和框架API等，下面会用到。&lt;/p&gt;
&lt;p&gt;　　lib文件夹：存放的是hibernate所需要的jar包。&lt;/p&gt;
&lt;p&gt;　　project文件夹：存放的是一些小项目实例，里面的etc会用到。&lt;/p&gt;
&lt;h2&gt;关于jar包&lt;/h2&gt;
&lt;p&gt;　　搭建Hibernate，首先就是jar包，而Hibernate的jar包就在lib/required文件夹里，下面是这些jar包的作用&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121194227961-735092913.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　有了这些jar包，Hibernate的功能就全了，但是Hibernate是操作数据库的，所以我们还需要提供我们要使用的数据库的对应的驱动。如mysql的驱动包。&lt;/p&gt;
&lt;p&gt;　　在开发过程中，我们必然还需要记录捕捉项目的运行情况，所以还需要log4j的支持，进官网下载即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121194719727-176444744.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下载完的文件里有很多jar包，用哪个呢，官网的下面说的很清楚。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121194838008-426333349.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到这里，jar包就准备完成了，&lt;/p&gt;
&lt;h2&gt; 创建项目&lt;/h2&gt;
&lt;h3&gt;　　创建一个项目。&lt;/h3&gt;
&lt;p&gt;　　一、file-new-javaProject 填写项目名即可，因为主要说明Hibernate的使用，不需要web，所以直接用JavaProject，如果使用web也是一样的道理。&lt;/p&gt;
&lt;h3&gt;　　导入jar包&lt;/h3&gt;
&lt;p&gt;　　一、创建一个文件夹，将上面Hibernate的required文件夹的jar包、jdbc的jar包、log4j的jar包都copy进来&lt;/p&gt;
&lt;p&gt;　　二、全选，鼠标右键-buildPath-add to build path&lt;/p&gt;
&lt;h3&gt;　　创建一个数据表&lt;/h3&gt;
&lt;p&gt;　　创建一个数据库，并添加一个表，下面是一个示例。也可以自己随意创建。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3495e4ec-197b-40cf-b086-2a1bb7c801e7')&quot; readability=&quot;38&quot;&gt;&lt;img id=&quot;code_img_closed_3495e4ec-197b-40cf-b086-2a1bb7c801e7&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3495e4ec-197b-40cf-b086-2a1bb7c801e7&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3495e4ec-197b-40cf-b086-2a1bb7c801e7',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3495e4ec-197b-40cf-b086-2a1bb7c801e7&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;71&quot;&gt;
&lt;pre&gt;
&lt;span&gt;DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `u_id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(11&lt;span&gt;) NOT NULL AUTO_INCREMENT,
  `u_email` varchar(&lt;/span&gt;60&lt;span&gt;) DEFAULT NULL,
  `u_name` varchar(&lt;/span&gt;100&lt;span&gt;) DEFAULT NULL,
  `u_username` varchar(&lt;/span&gt;100&lt;span&gt;) DEFAULT NULL,
  `u_password` varchar(&lt;/span&gt;70&lt;span&gt;) DEFAULT NULL,
  `u_age` varchar(&lt;/span&gt;255&lt;span&gt;) DEFAULT NULL,
  `u_detail` varchar(&lt;/span&gt;255&lt;span&gt;) DEFAULT NULL,
  `u_avatar` varchar(&lt;/span&gt;255&lt;span&gt;) DEFAULT NULL,
  `is_admin` varchar(&lt;/span&gt;5&lt;span&gt;) DEFAULT NULL,
  `createtime` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `updatetime` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`u_id`)
) ENGINE&lt;/span&gt;=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;　　创建一个表对应的实体类&lt;/h3&gt;
&lt;p&gt;　　先建一个com.xx.domain的包，将实体类放入包中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('e414559d-dd67-40f1-ae6b-c7a1be8a4da3')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_e414559d-dd67-40f1-ae6b-c7a1be8a4da3&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e414559d-dd67-40f1-ae6b-c7a1be8a4da3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('e414559d-dd67-40f1-ae6b-c7a1be8a4da3',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e414559d-dd67-40f1-ae6b-c7a1be8a4da3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.cky.domain;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.sql.Timestamp;

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; User {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer uId;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uEmail;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uName;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uUsername;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uPassword;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uAge;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uDetail;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String uAvatar;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String isAdmin;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Timestamp createtime;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Timestamp updatetime;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getuId() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uId;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuId(Integer uId) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uId =&lt;span&gt; uId;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuEmail() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uEmail;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuEmail(String uEmail) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uEmail =&lt;span&gt; uEmail;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuName() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uName;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuName(String uName) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uName =&lt;span&gt; uName;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuUsername() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uUsername;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuUsername(String uUsername) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uUsername =&lt;span&gt; uUsername;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuPassword() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uPassword;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuPassword(String uPassword) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uPassword =&lt;span&gt; uPassword;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuAge() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uAge;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuAge(String uAge) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uAge =&lt;span&gt; uAge;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuDetail() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uDetail;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuDetail(String uDetail) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uDetail =&lt;span&gt; uDetail;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getuAvatar() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; uAvatar;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setuAvatar(String uAvatar) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.uAvatar =&lt;span&gt; uAvatar;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getIsAdmin() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; isAdmin;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setIsAdmin(String isAdmin) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.isAdmin =&lt;span&gt; isAdmin;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Timestamp getCreatetime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setCreatetime(Timestamp createtime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.createtime =&lt;span&gt; createtime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Timestamp getUpdatetime() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; updatetime;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setUpdatetime(Timestamp updatetime) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.updatetime =&lt;span&gt; updatetime;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; equals(Object o) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;this&lt;/span&gt; == o) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (o == &lt;span&gt;null&lt;/span&gt; || getClass() != o.getClass()) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;

        User user &lt;/span&gt;=&lt;span&gt; (User) o;

        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uId != user.uId) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uEmail != &lt;span&gt;null&lt;/span&gt; ? !uEmail.equals(user.uEmail) : user.uEmail != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uName != &lt;span&gt;null&lt;/span&gt; ? !uName.equals(user.uName) : user.uName != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uUsername != &lt;span&gt;null&lt;/span&gt; ? !uUsername.equals(user.uUsername) : user.uUsername != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uPassword != &lt;span&gt;null&lt;/span&gt; ? !uPassword.equals(user.uPassword) : user.uPassword != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uAge != &lt;span&gt;null&lt;/span&gt; ? !uAge.equals(user.uAge) : user.uAge != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uDetail != &lt;span&gt;null&lt;/span&gt; ? !uDetail.equals(user.uDetail) : user.uDetail != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (uAvatar != &lt;span&gt;null&lt;/span&gt; ? !uAvatar.equals(user.uAvatar) : user.uAvatar != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (isAdmin != &lt;span&gt;null&lt;/span&gt; ? !isAdmin.equals(user.isAdmin) : user.isAdmin != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (createtime != &lt;span&gt;null&lt;/span&gt; ? !createtime.equals(user.createtime) : user.createtime != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (updatetime != &lt;span&gt;null&lt;/span&gt; ? !updatetime.equals(user.updatetime) : user.updatetime != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;User{&quot; +
                &quot;uId=&quot; + uId +
                &quot;, uEmail='&quot; + uEmail + '\'' +
                &quot;, uName='&quot; + uName + '\'' +
                &quot;, uUsername='&quot; + uUsername + '\'' +
                &quot;, uPassword='&quot; + uPassword + '\'' +
                &quot;, uAge='&quot; + uAge + '\'' +
                &quot;, uDetail='&quot; + uDetail + '\'' +
                &quot;, uAvatar='&quot; + uAvatar + '\'' +
                &quot;, isAdmin='&quot; + isAdmin + '\'' +
                &quot;, createtime=&quot; + createtime +
                &quot;, updatetime=&quot; + updatetime +
                &quot;}\n&quot;&lt;span&gt;;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; hashCode() {
        Integer result &lt;/span&gt;=&lt;span&gt; uId;
        result &lt;/span&gt;= 31 * result + (uEmail != &lt;span&gt;null&lt;/span&gt; ? uEmail.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uName != &lt;span&gt;null&lt;/span&gt; ? uName.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uUsername != &lt;span&gt;null&lt;/span&gt; ? uUsername.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uPassword != &lt;span&gt;null&lt;/span&gt; ? uPassword.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uAge != &lt;span&gt;null&lt;/span&gt; ? uAge.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uDetail != &lt;span&gt;null&lt;/span&gt; ? uDetail.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (uAvatar != &lt;span&gt;null&lt;/span&gt; ? uAvatar.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (isAdmin != &lt;span&gt;null&lt;/span&gt; ? isAdmin.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (createtime != &lt;span&gt;null&lt;/span&gt; ? createtime.hashCode() : 0&lt;span&gt;);
        result &lt;/span&gt;= 31 * result + (updatetime != &lt;span&gt;null&lt;/span&gt; ? updatetime.hashCode() : 0&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; result;
    }

    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;span&gt;在创建实体类时，属性最好使用包装类，例如：Integer，因为与基本类型(int)相比，包装类多了一种null状态。可以表示不存在，而基本类型带有默认值（如int默认&lt;span&gt;0&lt;/span&gt;），这时就会有歧义,不知道是值为0还是不存在。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;　　创建Hibernate配置文件&lt;/h3&gt;
&lt;p&gt;　　在项目鼠标右键-new-SourceFolder，创建一个资源文件。&lt;/p&gt;
&lt;p&gt;　　（资源文件是为了方便我们阅读而设计的，当程序编译后，所有的资源文件会进行合并最后全部放到classes文件中，所以我们可以通过classpath进行获取）&lt;/p&gt;
&lt;p&gt;　　创建hibernate.cfg.xml文件（&lt;strong&gt;&lt;span&gt;这个文件名是hibernate默认文件名，当程序启动时，hibernate会自动在classpath中寻找名为hibernate.cfg.xml的文件，如果不是这个名字，就需要后期手动指定，会比较麻烦&lt;/span&gt;&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;　　下面我们需要为文件添加约束，那么约束在哪里呢？&lt;/p&gt;
&lt;p&gt;　　其实hibernate早已经为我们准备好了，打开hibernate核心包下的org.hibernate,最下面会有dtd文件&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121203304915-960819069.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121203412758-1565072888.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　双击打开hibernate-configuration-3.0.dtd文件（&lt;span&gt;3.0向下兼容，4.0不向下兼容，所以要选择3.0的文件&lt;/span&gt;），会发现，上面注释里说明了约束头怎么写：&lt;/p&gt;
&lt;p&gt;　　 &lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121203542196-1782964643.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;复制到配置文件中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121203619649-609683923.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这时我们写一个&amp;lt;然后alt+？，会有提示标签，什么？你没有？那可以看看&lt;a href=&quot;http://www.cnblogs.com/chenkeyu/p/7875367.html&quot; target=&quot;_blank&quot;&gt;另一篇博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　配置文件的基本结构如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE hibernate-configuration PUBLIC
    &quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;
    &quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hibernate-configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 先配置SessionFactory标签，一个数据库对应一个SessionFactory标签 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;session-factory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 必须的配置的参数5个，4大参数，数据库方言  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
        #hibernate.connection.driver_class com.mysql.jdbc.Driver
        #hibernate.connection.url jdbc:mysql:///test
        #hibernate.connection.username gavin
        #hibernate.connection.password 
        数据库方言
        #hibernate.dialect org.hibernate.dialect.MySQLDialect
         &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.connection.driver_class&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.connection.url&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jdbc:mysql:///blog&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.connection.username&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;root&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.connection.password&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;123456&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.dialect&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.hibernate.dialect.MySQLDialect&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 可选配置 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 显示sql语句 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.show_sql&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 格式化sql语句 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.format_sql&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 生成数据库的表结构 
        (hbm2dd全称hibernate mapping to db define language auto create)
        update 没表会自动创建，有表添加数据。
            如果开发中间需要添加字段，可以在实体类添加属性。update会自动在数据库添加字段，并且不改变原来数据库值
        validate 校验实体属性和数据库是否一致
        &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;hibernate.hbm2ddl.auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;update&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 映射配置文件，可以在map配置文件右键copy qualified name&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapping &lt;/span&gt;&lt;span&gt;resource&lt;/span&gt;&lt;span&gt;=&quot;com/cky/domain/User.hbm.xml&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;session-factory&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;hibernate-configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面配置的属性都可以在hibernate-release-4.3.11.Final\project\etc\hibernate.properties文件中找到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1003414/201711/1003414-20171121211452790-1318741122.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;　　创建mapping映射文件&lt;/h2&gt;
&lt;p&gt;关于mapping映射文件的一些默认的规则。&lt;/p&gt;
&lt;p&gt;　　1、&lt;strong&gt;&lt;span&gt;Hibernate的mapping映射文件默认需要和实体类在同一文件夹中&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　2、&lt;strong&gt;&lt;span&gt;mapping映射文件默认命名规则：实体类名.hbm.xml。hbm（全称：hibernate mapping）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;User.hbm.xml文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('89dc41a0-144a-4ab0-876f-f1d45f7ca7cf')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_89dc41a0-144a-4ab0-876f-f1d45f7ca7cf&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_89dc41a0-144a-4ab0-876f-f1d45f7ca7cf&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('89dc41a0-144a-4ab0-876f-f1d45f7ca7cf',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_89dc41a0-144a-4ab0-876f-f1d45f7ca7cf&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE hibernate-mapping PUBLIC 
    &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;
    &quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hibernate-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;class &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;com.cky.domain.User&quot;&lt;/span&gt;&lt;span&gt; table&lt;/span&gt;&lt;span&gt;=&quot;user&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置id
    name实体类属性，column表字段，如果一样，column可以省略。
 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uId&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 主键生成策略 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;generator &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;native&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;generator&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uEmail&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_email&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uName&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_name&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uUsername&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_username&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uPassword&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_password&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uAge&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_age&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uDetail&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_detail&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;uAvatar&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;u_avatar&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;isAdmin&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;is_admin&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;createtime&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;updatetime&quot;&lt;/span&gt;&lt;span&gt; column&lt;/span&gt;&lt;span&gt;=&quot;updatetime&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;hibernate-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;User实体类文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f0c427e0-56a2-4d36-a455-83e02f1d5835')&quot; readability=&quot;37.5&quot;&gt;&lt;img id=&quot;code_img_closed_f0c427e0-56a2-4d36-a455-83e02f1d5835&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f0c427e0-56a2-4d36-a455-83e02f1d5835&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f0c427e0-56a2-4d36-a455-83e02f1d5835',event)&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f0c427e0-56a2-4d36-a455-83e02f1d5835&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;70&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package com.cky.domain;

import java.sql.Timestamp;

public class User {
    private Integer uId;
    private String uEmail;
    private String uName;
    private String uUsername;
    private String uPassword;
    private String uAge;
    private String uDetail;
    private String uAvatar;
    private String isAdmin;
    private Timestamp createtime;
    private Timestamp updatetime;

    public Integer getuId() {
        return uId;
    }

    public void setuId(Integer uId) {
        this.uId = uId;
    }

    public String getuEmail() {
        return uEmail;
    }

    public void setuEmail(String uEmail) {
        this.uEmail = uEmail;
    }

    public String getuName() {
        return uName;
    }

    public void setuName(String uName) {
        this.uName = uName;
    }

    public String getuUsername() {
        return uUsername;
    }

    public void setuUsername(String uUsername) {
        this.uUsername = uUsername;
    }

    public String getuPassword() {
        return uPassword;
    }

    public void setuPassword(String uPassword) {
        this.uPassword = uPassword;
    }

    public String getuAge() {
        return uAge;
    }

    public void setuAge(String uAge) {
        this.uAge = uAge;
    }

    public String getuDetail() {
        return uDetail;
    }

    public void setuDetail(String uDetail) {
        this.uDetail = uDetail;
    }

    public String getuAvatar() {
        return uAvatar;
    }

    public void setuAvatar(String uAvatar) {
        this.uAvatar = uAvatar;
    }

    public String getIsAdmin() {
        return isAdmin;
    }

    public void setIsAdmin(String isAdmin) {
        this.isAdmin = isAdmin;
    }

    public Timestamp getCreatetime() {
        return createtime;
    }

    public void setCreatetime(Timestamp createtime) {
        this.createtime = createtime;
    }

    public Timestamp getUpdatetime() {
        return updatetime;
    }

    public void setUpdatetime(Timestamp updatetime) {
        this.updatetime = updatetime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        User user = (User) o;

        if (uId != user.uId) return false;
        if (uEmail != null ? !uEmail.equals(user.uEmail) : user.uEmail != null) return false;
        if (uName != null ? !uName.equals(user.uName) : user.uName != null) return false;
        if (uUsername != null ? !uUsername.equals(user.uUsername) : user.uUsername != null) return false;
        if (uPassword != null ? !uPassword.equals(user.uPassword) : user.uPassword != null) return false;
        if (uAge != null ? !uAge.equals(user.uAge) : user.uAge != null) return false;
        if (uDetail != null ? !uDetail.equals(user.uDetail) : user.uDetail != null) return false;
        if (uAvatar != null ? !uAvatar.equals(user.uAvatar) : user.uAvatar != null) return false;
        if (isAdmin != null ? !isAdmin.equals(user.isAdmin) : user.isAdmin != null) return false;
        if (createtime != null ? !createtime.equals(user.createtime) : user.createtime != null) return false;
        if (updatetime != null ? !updatetime.equals(user.updatetime) : user.updatetime != null) return false;

        return true;
    }

    @Override
    public String toString() {
        return &quot;User{&quot; +
                &quot;uId=&quot; + uId +
                &quot;, uEmail='&quot; + uEmail + '\'' +
                &quot;, uName='&quot; + uName + '\'' +
                &quot;, uUsername='&quot; + uUsername + '\'' +
                &quot;, uPassword='&quot; + uPassword + '\'' +
                &quot;, uAge='&quot; + uAge + '\'' +
                &quot;, uDetail='&quot; + uDetail + '\'' +
                &quot;, uAvatar='&quot; + uAvatar + '\'' +
                &quot;, isAdmin='&quot; + isAdmin + '\'' +
                &quot;, createtime=&quot; + createtime +
                &quot;, updatetime=&quot; + updatetime +
                &quot;}\n&quot;;
    }

    @Override
    public int hashCode() {
        Integer result = uId;
        result = 31 * result + (uEmail != null ? uEmail.hashCode() : 0);
        result = 31 * result + (uName != null ? uName.hashCode() : 0);
        result = 31 * result + (uUsername != null ? uUsername.hashCode() : 0);
        result = 31 * result + (uPassword != null ? uPassword.hashCode() : 0);
        result = 31 * result + (uAge != null ? uAge.hashCode() : 0);
        result = 31 * result + (uDetail != null ? uDetail.hashCode() : 0);
        result = 31 * result + (uAvatar != null ? uAvatar.hashCode() : 0);
        result = 31 * result + (isAdmin != null ? isAdmin.hashCode() : 0);
        result = 31 * result + (createtime != null ? createtime.hashCode() : 0);
        result = 31 * result + (updatetime != null ? updatetime.hashCode() : 0);
        return result;
    }

    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h2&gt;　　添加测试&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package com.cky.Demo;

import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.junit.Test;

import com.cky.domain.User;
import com.cky.utils.HibernateUtils;

public class DemoTest {
    @Test
    public void testSave() {
        //1.加载配置文件
        Configuration cfg=new Configuration();
        //默认加载src目录下的hibernate.cfg.xml的配置文件
        cfg.configure();
        //2.创建sessionFactory
        SessionFactory sessionFactory = cfg.buildSessionFactory();
        //3.创建session
        Session session = sessionFactory.openSession();
        //4.开启事务
        Transaction tr = session.beginTransaction();
        //5.编写更新代码
        User user=new User();
        user.setuName(&quot;小红&quot;);
        user.setuPassword(&quot;123456&quot;);
        session.save(user);
        
        //6.提交事务
        tr.commit();
        //7.释放资源
        session.close();
        sessionFactory.close();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 21 Nov 2017 13:23:00 +0000</pubDate>
<dc:creator>宇的季节</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenkeyu/p/7874998.html</dc:identifier>
</item>
<item>
<title>eclipse中hibernate和mybatis中xml配置文件的没有标签提醒解决方法 - 宇的季节</title>
<link>http://www.cnblogs.com/chenkeyu/p/7875367.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenkeyu/p/7875367.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Hibernate Mapping DTD.

&amp;lt;!DOCTYPE hibernate-mapping PUBLIC 
    &quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;
    &quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&amp;gt;

An instance of this XML document may contain mappings for an arbitrary 
number of classes. The class mappings may contain associations to classes
mapped in the same document or in another document. No class may be 
mapped more than once. Each document may also contain definitions of an
arbitrary number of queries, and import declarations of arbitrary classes. 

&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    The document root.
 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT hibernate-mapping (
    meta*,
    identifier-generator*,
    typedef*,
    filter-def*,
    import*,
    (class|subclass|joined-subclass|union-subclass)*,
    resultset*,
    (query|sql-query)*,
    filter-def*,
    fetch-profile*,
    database-object*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping default-cascade CDATA &quot;none&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping default-access CDATA &quot;property&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping default-lazy (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping auto-import (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST hibernate-mapping package CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    &amp;lt;meta.../&amp;gt; is used to assign meta-level attributes to a class
    or property.  Is currently used by codegenerator as a placeholder for
    values that is not directly related to OR mappings.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT meta (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST meta attribute CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST meta inherit (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    &amp;lt;identifier-generator.../&amp;gt; allows customized short-naming of IdentifierGenerator implementations.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT identifier-generator EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST identifier-generator name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST identifier-generator class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    &amp;lt;typedef.../&amp;gt; allows defining a customized type mapping for a Hibernate type. May
    contain parameters for parameterizable types.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT typedef (param*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST typedef class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST typedef name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    IMPORT element definition; an explicit query language &quot;import&quot;
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT import EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST import class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST import rename CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified class name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Root entity mapping.  Poorly named as entities do not have to be represented by 
    classes at all.  Mapped entities may be represented via different methodologies 
    (POJO, Map, Dom4j).
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT class (
     meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    tuplizer*,
    (id|composite-id),
    discriminator?,
    natural-id?,
    (version|timestamp)?,
    (property|many-to-one|one-to-one|component|dynamic-component|properties|any|map|set|list|bag|idbag|array|primitive-array)*,
    ((join*,subclass*)|joined-subclass*|union-subclass*),
    loader?,sql-insert?,sql-update?,sql-delete?,
    filter*,
    fetch-profile*,
    resultset*,
    (query|sql-query)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; this is the class name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class proxy CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no proxy interface &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class lazy (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified classname &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class discriminator-value CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified class name | none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class abstract (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class polymorphism (implicit|explicit) &quot;implicit&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class dynamic-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class dynamic-insert (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class select-before-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class optimistic-lock (none|version|dirty|all) &quot;version&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class rowid CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST class node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    TUPLIZER element; defines tuplizer to use for a component/entity for a given entity-mode
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT tuplizer EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST tuplizer entity-mode (pojo|dom4j|dynamic-map) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;   &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; entity mode for which tuplizer is in effect &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST tuplizer class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                           &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; the tuplizer class to use &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    FILTER-DEF element; top-level filter definition.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT filter-def (#PCDATA|filter-param)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter-def name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The filter name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter-def condition CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    FILTER-PARAM element; qualifies parameters found within a FILTER-DEF
    condition.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT filter-param EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter-param name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The parameter name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter-param type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The parameter type &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    FILTER element; used to apply a filter.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT filter (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST filter condition CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;
&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT fetch-profile (fetch*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST fetch-profile name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    The &amp;lt;fetch&amp;gt; element defines a single path to which the fetch
    refers, as well as the style of fetch to apply.  The 'root' of the
    path is different depending upon the context in which the
    containing &amp;lt;fetch-profile/&amp;gt; occurs; within a &amp;lt;class/&amp;gt; element,
    the entity-name of the containing class mapping is assumed...
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT fetch EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST fetch entity CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Implied as long as the containing fetch profile is contained in a class mapping &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST fetch association CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST fetch style (join|select) &quot;join&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A join allows some properties of a class to be persisted to a second table &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT join ( 
    subselect?,
    comment?,
    key,
    (property|many-to-one|component|dynamic-component|any)*,
    sql-insert?,sql-update?,sql-delete?
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join table CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join fetch (join|select) &quot;join&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST join optional (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A natural-id element allows declaration of the unique business key &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT natural-id ( (property|many-to-one|component|dynamic-component|any)* )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST natural-id mutable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares the id type, column and generation algorithm for an entity class.
If a name attribut is given, the id is exposed to the application through the 
named property of the class. If not, the id is only exposed to the application 
via Session.getIdentifier() &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT id (meta*,column*,type?,generator?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST id unsaved-value CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; any|none|null|undefined|0|-1|... &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A composite key may be modelled by a java class with a property for each 
key column. The class must implement java.io.Serializable and reimplement equals() 
and hashCode(). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT composite-id ( meta*, (key-property|key-many-to-one)+, generator? )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id mapped (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-id unsaved-value (undefined|any|none) &quot;undefined&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Polymorphic data requires a column holding a class discriminator value. This
value is not directly exposed to the application. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT discriminator ((column|formula)?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: &quot;class&quot;|none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator type CDATA &quot;string&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator not-null (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator force (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST discriminator insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Versioned data requires a column holding a version number. This is exposed to the
application through a property of the Java class. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT version (meta*,column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version type CDATA &quot;integer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version unsaved-value (null|negative|undefined) &quot;undefined&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version generated (never|always) &quot;never&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST version insert (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT timestamp (meta*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp unsaved-value (null|undefined) &quot;null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp source (vm|db) &quot;vm&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST timestamp generated (never|always) &quot;never&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;


&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Subclass declarations are nested beneath the root class declaration to achieve
    polymorphic persistence with the table-per-hierarchy mapping strategy.

    See the note on the class element regarding &amp;lt;pojo/&amp;gt; vs. @name usage...
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT subclass (
     meta*,
    tuplizer*,
    synchronize*,
    (property|many-to-one|one-to-one|component|dynamic-component|any|map|set|list|bag|idbag|array|primitive-array)*,
    join*, 
    subclass*,
    loader?,sql-insert?,sql-update?,sql-delete?,
    fetch-profile*,
    resultset*,
    (query|sql-query)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass proxy CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no proxy interface &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass discriminator-value CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified class name | none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass dynamic-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass dynamic-insert (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass select-before-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass extends CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: empty when a toplevel, otherwise the nearest class definition &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass lazy (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass abstract (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST subclass node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Joined subclasses are used for the normalized table-per-subclass mapping strategy

    See the note on the class element regarding &amp;lt;pojo/&amp;gt; vs. @name usage...
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT joined-subclass (
    meta*,
    subselect?,
    synchronize*,
    comment?,
    tuplizer*,
    key,
    (property|many-to-one|one-to-one|component|dynamic-component|properties|any|map|set|list|bag|idbag|array|primitive-array)*, 
    joined-subclass*,
    loader?,sql-insert?,sql-update?,sql-delete?,
    fetch-profile*,
    resultset*,
    (query|sql-query)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass proxy CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no proxy interface &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified class name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass dynamic-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass dynamic-insert (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass select-before-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass extends CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none when toplevel, otherwise the nearest class definition &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass lazy (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass abstract (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST joined-subclass node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Union subclasses are used for the table-per-concrete-class mapping strategy

    See the note on the class element regarding &amp;lt;pojo/&amp;gt; vs. @name usage...
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT union-subclass (
     meta*,
    subselect?,
    synchronize*,
    comment?,
    tuplizer*,
    (property|many-to-one|one-to-one|component|dynamic-component|properties|any|map|set|list|bag|idbag|array|primitive-array)*,
    union-subclass*,
    loader?,sql-insert?,sql-update?,sql-delete?,
    fetch-profile*,
    resultset*,
    (query|sql-query)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass proxy CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no proxy interface &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: unqualified class name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass dynamic-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass dynamic-insert (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass select-before-update (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass extends CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none when toplevel, otherwise the nearest class definition &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass lazy (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass abstract (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST union-subclass node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Property of an entity class or component, component-element, composite-id, etc. 
JavaBeans style properties are mapped to table columns. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT property (meta*,(column|formula)*,type?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property precision CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property scale CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property not-null (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property unique-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property index CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; include the columns spanned by this property in an index &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property update (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property insert (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property lazy (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST property generated (never|insert|always) &quot;never&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares the type of the containing property (overrides an eventually existing type
attribute of the property). May contain param elements to customize a ParametrizableType. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT type (param*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST type name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares an association between two entities (Or from a component, component element,
etc. to an entity). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT many-to-one (meta*,(column|formula)*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one not-null (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one unique-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one index CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one fetch (join|select) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one update (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one property-ref CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one lazy (false|proxy|no-proxy) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one not-found (exception|ignore) &quot;exception&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-one embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares a one-to-one association between two entities (Or from a component, 
component element, etc. to an entity). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT one-to-one (meta*,formula*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one fetch (join|select) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one constrained (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one property-ref CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one lazy (false|proxy|no-proxy) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-one embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A property embedded in a composite identifier or map index (always not-null). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT key-property (meta*,column*,type?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-property node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A many-to-one association embedded in a composite identifier or map index 
(always not-null, never cascade). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT key-many-to-one (meta*,column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one lazy (false|proxy) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key-many-to-one on-delete (cascade|noaction) &quot;noaction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; An &quot;any&quot; association is a polymorphic association to any table with
the given identifier type. The first listed column is a VARCHAR column 
holding the name of the class (for that row). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT any (meta*,meta-value*,column,column+)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any id-type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any meta-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;- default: Hibernate.STRING &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any update (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any index CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; include the columns spanned by this association in an index &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any lazy (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST any node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT meta-value EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST meta-value value CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST meta-value class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A component is a user-defined class, persisted along with its containing entity
to the table of the entity class. JavaBeans style properties of the component are
mapped to columns of the table of the containing entity. A null component reference
is mapped to null values in all columns and vice versa. Components do not support
shared reference semantics. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT component (
    meta*,
    tuplizer*,
    parent?,
    (property|many-to-one|one-to-one|component|dynamic-component|any|map|set|list|bag|array|primitive-array)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component update (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component lazy (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST component node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A dynamic-component maps columns of the database entity to a java.util.Map 
at the Java level &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT dynamic-component (
    (property|many-to-one|one-to-one|component|dynamic-component|any|map|set|list|bag|array|primitive-array)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component update (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dynamic-component node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; properties declares that the contained properties form an alternate key. The name
attribute allows an alternate key to be used as the target of a property-ref. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT properties (
    (property|many-to-one|component|dynamic-component)*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties insert (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties update (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST properties node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The parent element maps a property of the component class as a pointer back to
the owning entity. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT parent EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST parent name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Collection declarations nested inside a class declaration indicate a foreign key 
relationship from the collection table to the enclosing class. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT map (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    key, 
    (map-key|composite-map-key|map-key-many-to-many|index|composite-index|index-many-to-many|index-many-to-any), 
    (element|one-to-many|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?,
    filter*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map lazy (true|false|extra) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map sort CDATA &quot;unsorted&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; unsorted|natural|&quot;comparator class&quot;, default: unsorted &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map order-by CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;    
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                        
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT set (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    key, 
    (element|one-to-many|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?,
    filter*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set lazy (true|false|extra) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set sort CDATA &quot;unsorted&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; unsorted|natural|&quot;comparator class&quot; &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set order-by CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                        
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST set embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT bag (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    key, 
    (element|one-to-many|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?,
    filter*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag lazy (true|false|extra) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag order-by CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST bag embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT idbag (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    collection-id,
    key, 
    (element|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?,
    filter*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag lazy (true|false|extra) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag order-by CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST idbag embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT list (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    key, 
    (index|list-index), 
    (element|one-to-many|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?,
    filter*
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list lazy (true|false|extra) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT array (
    meta*,
    subselect?,
    cache?,
    synchronize*,
    comment?,
    key, 
    (index|list-index), 
    (element|one-to-many|many-to-many|composite-element|many-to-any),
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array inverse (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array element-class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array cascade CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST array embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT primitive-array (
    meta*, 
    subselect?,
    cache?, 
    synchronize*,
    comment?,
    key, 
    (index|list-index), 
    element,
    loader?,sql-insert?,sql-update?,sql-delete?,sql-delete-all?
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array table CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array schema CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array catalog CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array subselect CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array mutable (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array batch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array fetch (join|select|subselect) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array persister CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                                                
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array collection-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: none &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array optimistic-lock (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; only supported for properties of a class (not component) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST primitive-array embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares the element type of a collection of basic type &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT element ( (column|formula)*, type? )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element precision CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element scale CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element not-null (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST element unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; One to many association. This tag declares the entity-class
element type of a collection and specifies a one-to-many relational model &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT one-to-many EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-many class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-many not-found (exception|ignore) &quot;exception&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-many node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-many embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST one-to-many entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; No column declaration attributes required in this case. The primary
    key column of the associated class is already mapped elsewhere.&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Many to many association. This tag declares the entity-class
element type of a collection and specifies a many-to-many relational model &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT many-to-many (meta*,(column|formula)*,filter*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many embed-xml (true|false) &quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many not-found (exception|ignore) &quot;exception&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many outer-join (true|false|auto) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many fetch (join|select) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many lazy (false|proxy) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many unique (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many where CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many order-by CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-many property-ref CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A composite element allows a collection to hold instances of an arbitrary 
class, without the requirement of joining to an entity table. Composite elements
have component semantics - no shared references and ad hoc null value semantics. 
Composite elements may not hold nested collections. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT composite-element ( 
    (meta*),
    parent?,
    tuplizer*,
    (property|many-to-one|any|nested-composite-element)* 
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-element class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-element node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT nested-composite-element ( 
    parent?,
    tuplizer*,
    (property|many-to-one|any|nested-composite-element)* 
)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST nested-composite-element class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST nested-composite-element name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST nested-composite-element access CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST nested-composite-element node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares the column name of a foreign key. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT key (column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key property-ref CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key on-delete (cascade|noaction) &quot;noaction&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key not-null (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key update (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST key unique (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Declares the type and column mapping for a collection index (array or
list index, or key of a map). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT list-index (column?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list-index column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST list-index base CDATA &quot;0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT map-key ((column|formula)*,type?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key node CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT index (column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; required for maps &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Many to many association mapped to the key of a map. ie. a map keyed
on entities. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT map-key-many-to-many ((column|formula)*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key-many-to-many class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key-many-to-many entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key-many-to-many column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key-many-to-many formula CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST map-key-many-to-many foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT index-many-to-many (column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-many class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-many entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-many column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-many foreign-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Composite index of a map ie. a map keyed on components. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT composite-map-key ( (key-property|key-many-to-one)+ )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-map-key class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT composite-index ( (key-property|key-many-to-one)+ )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST composite-index class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; A &quot;many to any&quot; defines a polymorphic association to any table 
with the given identifier type. The first listed column is a VARCHAR column 
holding the name of the class (for that row). &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT many-to-any (meta-value*,column, column+)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-any id-type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST many-to-any meta-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;- default: Hibernate.CLASS &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT index-many-to-any (column, column+)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-any id-type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST index-many-to-any meta-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;- default: Hibernate.CLASS &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT collection-id (meta*, column*, generator)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST collection-id column CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST collection-id type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST collection-id length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; Generators generate unique identifiers. The class attribute specifies a Java 
class implementing an id generation algorithm. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT generator (param*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST generator class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT param (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST param name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The column element is an alternative to column attributes and required for 
mapping associations to classes with composite ids. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT column (comment?)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column length CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: 255 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column precision CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column scale CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column not-null (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;             &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: false (except for id properties) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column unique (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: false (except for id properties) &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column unique-key CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no unique key &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column sql-type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; override default column type for hibernate type &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column index CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column check CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no check constraint &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column default CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: no default value &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column read CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                       &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: column name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST column write CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                      &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: parameter placeholder ('?') &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The formula and subselect elements allow us to map derived properties and 
entities. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT formula (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT subselect (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The cache element enables caching of an entity class. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT cache EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST cache usage (read-only|read-write|nonstrict-read-write|transactional) #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST cache region CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;                        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; default: class or collection role name &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST cache include (all|non-lazy) &quot;all&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The comment element allows definition of a database table or column comment. &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT comment (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The loader element allows specification of a named query to be used for fetching
an entity or collection &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT loader EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST loader query-ref CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The query element declares a named Hibernate query string &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT query (#PCDATA|query-param)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query flush-mode (auto|never|always) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query cacheable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query cache-region CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query fetch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query timeout CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query cache-mode (get|ignore|normal|put|refresh) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query read-only (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query comment CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The sql-query element declares a named SQL query string &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT sql-query (#PCDATA|return-scalar|return|return-join|load-collection|synchronize|query-param)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query resultset-ref CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query flush-mode (auto|never|always) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query cacheable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query cache-region CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query fetch-size CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query timeout CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query cache-mode (get|ignore|normal|put|refresh) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query read-only (true|false) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query comment CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-query callable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The query-param element is used only by tools that generate
finder methods for named queries &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT query-param EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query-param name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST query-param type CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; The resultset element declares a named resultset mapping definition for SQL queries &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT resultset (return-scalar|return|return-join|load-collection)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST resultset name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Defines a return component for a sql-query.  Alias refers to the alias
    used in the actual sql query; lock-mode specifies the locking to be applied
    when the query is executed.  The class, collection, and role attributes are mutually exclusive;
    class refers to the class name of a &quot;root entity&quot; in the object result; collection refers
    to a collection of a given class and is used to define custom sql to load that owned collection
    and takes the form &quot;ClassName.propertyName&quot;; role refers to the property path for an eager fetch
    and takes the form &quot;owningAlias.propertyName&quot;
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return (return-discriminator?,return-property)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return alias CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return entity-name CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return class CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return lock-mode (none|read|upgrade|upgrade-nowait|upgrade-skiplocked|write) &quot;read&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return-property (return-column*)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-property name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-property column CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return-column EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-column name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return-discriminator EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-discriminator column CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return-join (return-property)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-join alias CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-join property CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-join lock-mode (none|read|upgrade|upgrade-nowait|upgrade-skiplocked|write) &quot;read&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT load-collection (return-property)*&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST load-collection alias CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST load-collection role CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST load-collection lock-mode (none|read|upgrade|upgrade-nowait|upgrade-skiplocked|write) &quot;read&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT return-scalar EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-scalar column CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST return-scalar type CDATA #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT synchronize EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST synchronize table CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; custom sql operations &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT sql-insert (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-insert callable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-insert check (none|rowcount|param) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT sql-update (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-update callable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-update check (none|rowcount|param) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT sql-delete (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-delete callable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-delete check (none|rowcount|param) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT sql-delete-all (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-delete-all callable (true|false) &quot;false&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST sql-delete-all check (none|rowcount|param) #IMPLIED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    Element for defining &quot;auxiliary&quot; database objects.  Must be one of two forms:

    #1 :
        &amp;lt;database-object&amp;gt;
            &amp;lt;definition class=&quot;CustomClassExtendingAuxiliaryObject&quot;/&amp;gt;
        &amp;lt;/database-object&amp;gt;

    #2 :
        &amp;lt;database-object&amp;gt;
            &amp;lt;create&amp;gt;CREATE OR REPLACE ....&amp;lt;/create&amp;gt;
            &amp;lt;drop&amp;gt;DROP ....&amp;lt;/drop&amp;gt;
        &amp;lt;/database-object&amp;gt;
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT database-object ( (definition|(create,drop)), dialect-scope* )&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT definition EMPTY&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST definition class CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT create (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT drop (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;
    dialect-scope element allows scoping auxiliary-objects to a particular
    Hibernate dialect implementation.
&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ELEMENT dialect-scope (#PCDATA)&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;ATTLIST dialect-scope name CDATA #REQUIRED&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Tue, 21 Nov 2017 13:09:00 +0000</pubDate>
<dc:creator>宇的季节</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenkeyu/p/7875367.html</dc:identifier>
</item>
<item>
<title>RocketMQ集群部署配置 - 匠心零度</title>
<link>http://www.cnblogs.com/lirenzuo/p/7875165.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lirenzuo/p/7875165.html</guid>
<description>&lt;p&gt;目标，使用2台机器部署RocketMQ多Master多Slave模式，异步复制集群模式。&lt;/p&gt;
&lt;h3 id=&quot;第一步修改etchosts文件&quot;&gt;&lt;strong&gt;第一步，修改/etc/hosts文件&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;fl&quot;&gt;192.168.116.115&lt;/span&gt; rocketmq1
&lt;span class=&quot;fl&quot;&gt;192.168.116.116&lt;/span&gt; rocketmq2&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;集群机器配置完成之后，集群内进行ping一下，确保都通。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;编译得到环境&quot;&gt;编译得到环境&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;git clone -b develop https:&lt;span class=&quot;co&quot;&gt;//github.com/apache/rocketmq.git&lt;/span&gt;
cd rocketmq
mvn -Prelease-all -DskipTests clean install -U
cd distribution/target/apache-rocketmq

本版本是基于&lt;span class=&quot;fl&quot;&gt;4.1.0&lt;/span&gt;的，之后apache-rocketmq_4&lt;span class=&quot;fl&quot;&gt;.1.0&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;tar&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;gz&lt;/span&gt;拷贝集群所有机器进行解压
tar -zxvf apache-rocketmq_4&lt;span class=&quot;fl&quot;&gt;.1.0&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;tar&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;gz&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;配置集群模式多master多slave模式异步复制&quot;&gt;配置集群模式【多Master多Slave模式，异步复制】&lt;/h3&gt;
&lt;p&gt;配置的目录说明：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;2m-noslave&lt;/strong&gt;： 多Master模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2m-2s-sync&lt;/strong&gt;： 多Master多Slave模式，同步双写&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2m-2s-async&lt;/strong&gt;：多Master多Slave模式，异步复制&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;配置项一个主的配置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;#所属集群名字
brokerClusterName=rocketmq-cluster
#broker名字，注意此处不同的配置文件填写的不一样
brokerName=broker-a
#&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; 表示 Master，&amp;gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; 表示 Slave
brokerId=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
#nameServer地址，分号分割
namesrvAddr=rocketmq1:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;;rocketmq2:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;
#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数
defaultTopicQueueNums=&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭
autoCreateTopicEnable=&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭
autoCreateSubscriptionGroup=&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
#Broker 对外服务的监听端口
listenPort=&lt;span class=&quot;dv&quot;&gt;10911&lt;/span&gt;
#删除文件时间点，默认凌晨 &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;点
deleteWhen=&lt;span class=&quot;dv&quot;&gt;04&lt;/span&gt;
#文件保留时间，默认 &lt;span class=&quot;dv&quot;&gt;72&lt;/span&gt; 小时
fileReservedTime=&lt;span class=&quot;dv&quot;&gt;120&lt;/span&gt;
#commitLog每个文件的大小默认1G
mapedFileSizeCommitLog=&lt;span class=&quot;dv&quot;&gt;1073741824&lt;/span&gt;
#ConsumeQueue每个文件默认存30W条，根据业务情况调整
mapedFileSizeConsumeQueue=&lt;span class=&quot;dv&quot;&gt;300000&lt;/span&gt;
#destroyMapedFileIntervalForcibly=&lt;span class=&quot;dv&quot;&gt;120000&lt;/span&gt;
#redeleteHangedFileInterval=&lt;span class=&quot;dv&quot;&gt;120000&lt;/span&gt;
#检测物理文件磁盘空间
diskMaxUsedSpaceRatio=&lt;span class=&quot;dv&quot;&gt;75&lt;/span&gt;
#存储路径
storePathRootDir=/appl/rocketmq/store
#commitLog 存储路径
storePathCommitLog=/appl/rocketmq/store/commitlog
#消费队列存储路径存储路径
storePathConsumeQueue=/appl/rocketmq/store/consumequeue
#消息索引存储路径
storePathIndex=/appl/rocketmq/store/index
#checkpoint 文件存储路径
storeCheckpoint=/appl/rocketmq/store/checkpoint
#abort 文件存储路径
abortFile=/appl/rocketmq/store/abort
#限制的消息大小 默认4M
#maxMessageSize=&lt;span class=&quot;dv&quot;&gt;4194304&lt;/span&gt;

#flushCommitLogLeastPages=&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
#flushConsumeQueueLeastPages=&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;
#flushCommitLogThoroughInterval=&lt;span class=&quot;dv&quot;&gt;10000&lt;/span&gt;
#flushConsumeQueueThoroughInterval=&lt;span class=&quot;dv&quot;&gt;60000&lt;/span&gt;
#Broker 的角色
#- ASYNC_MASTER 异步复制Master
#- SYNC_MASTER 同步双写Master
#- SLAVE
brokerRole=ASYNC_MASTER

#刷盘方式
#- ASYNC_FLUSH 异步刷盘
#- SYNC_FLUSH 同步刷盘
flushDiskType=ASYNC_FLUSH&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;配置项另外一个备的配置&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;#所属集群名字
brokerClusterName=rocketmq-cluster
#broker名字，注意此处不同的配置文件填写的不一样
brokerName=broker-b
#&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; 表示 Master，&amp;gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; 表示 Slave
brokerId=&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
#nameServer地址，分号分割
namesrvAddr=rocketmq1:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;;rocketmq2:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;
#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数
defaultTopicQueueNums=&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭
autoCreateTopicEnable=&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭
autoCreateSubscriptionGroup=&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
#Broker 对外服务的监听端口
listenPort=&lt;span class=&quot;dv&quot;&gt;11911&lt;/span&gt;
#删除文件时间点，默认凌晨 &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;点
deleteWhen=&lt;span class=&quot;dv&quot;&gt;04&lt;/span&gt;
#文件保留时间，默认 &lt;span class=&quot;dv&quot;&gt;72&lt;/span&gt; 小时
fileReservedTime=&lt;span class=&quot;dv&quot;&gt;120&lt;/span&gt;
#commitLog每个文件的大小默认1G
mapedFileSizeCommitLog=&lt;span class=&quot;dv&quot;&gt;1073741824&lt;/span&gt;
#ConsumeQueue每个文件默认存30W条，根据业务情况调整
mapedFileSizeConsumeQueue=&lt;span class=&quot;dv&quot;&gt;300000&lt;/span&gt;
#destroyMapedFileIntervalForcibly=&lt;span class=&quot;dv&quot;&gt;120000&lt;/span&gt;
#redeleteHangedFileInterval=&lt;span class=&quot;dv&quot;&gt;120000&lt;/span&gt;
#检测物理文件磁盘空间
diskMaxUsedSpaceRatio=&lt;span class=&quot;dv&quot;&gt;75&lt;/span&gt;
#存储路径
storePathRootDir=/appl/rocketmq-s/store
#commitLog 存储路径
storePathCommitLog=/appl/rocketmq-s/store/commitlog
#消费队列存储路径存储路径
storePathConsumeQueue=/appl/rocketmq-s/store/consumequeue
#消息索引存储路径
storePathIndex=/appl/rocketmq-s/store/index
#checkpoint 文件存储路径
storeCheckpoint=/appl/rocketmq-s/store/checkpoint
#abort 文件存储路径
abortFile=/appl/rocketmq-s/store/abort
#限制的消息大小 默认4M
#maxMessageSize=&lt;span class=&quot;dv&quot;&gt;4194304&lt;/span&gt;

#flushCommitLogLeastPages=&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;
#flushConsumeQueueLeastPages=&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;
#flushCommitLogThoroughInterval=&lt;span class=&quot;dv&quot;&gt;10000&lt;/span&gt;
#flushConsumeQueueThoroughInterval=&lt;span class=&quot;dv&quot;&gt;60000&lt;/span&gt;
#Broker 的角色
#- ASYNC_MASTER 异步复制Master
#- SYNC_MASTER 同步双写Master
#- SLAVE
brokerRole=SLAVE

#刷盘方式
#- ASYNC_FLUSH 异步刷盘
#- SYNC_FLUSH 同步刷盘
flushDiskType=ASYNC_FLUSH&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;备注：由于一台机器部署主备，所以主、备的端口和存储路径会不同，如果多台机器部署就可以保持一样了，主备主要区别在于brokerId、brokerRole配置区别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;**注意到logback.*.xml配置文件中${user.home}需要替换自己指定的目录**&lt;/p&gt;
&lt;p&gt;可以使用sed进行替换：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;sed -i 's#${user.&lt;span class=&quot;fu&quot;&gt;home&lt;/span&gt;}#/appl/rocketmq#g' *.&lt;span class=&quot;fu&quot;&gt;xml&lt;/span&gt;

# sed -i 's#${user.&lt;span class=&quot;fu&quot;&gt;home&lt;/span&gt;}#/appl/rocketmq-s#g' *.&lt;span class=&quot;fu&quot;&gt;xml&lt;/span&gt; 由于一台机器部署了&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;个结点&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;修改启动脚本中的jvm参数&quot;&gt;&lt;strong&gt;修改启动脚本中的JVM参数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;由于RocketMQ4.1.0官方建议使用64bit JDK 1.8+;比如查看runserver.sh文件jvm参数如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;-server -Xms4g -Xmx4g -Xmn2g -XX:PermSize=128m -XX:MaxPermSize=320m&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;需要特别说明下：&lt;/strong&gt;&lt;br/&gt;元数据空间，专门用来存元数据的，它是jdk8以后用来替代perm的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;JVM堆空间大小根据机器情况进行调整，如果测试机器内存太小需要调整，不然启动不了，比如修改为如下&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;-Xms1G -Xmx1G -Xmn512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以使用sed进行替换,把所有PermSize、MaxPermSize替换掉：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;sed -i 's#PermSize#MetaspaceSize#g' *
sed -i 's#MaxPermSize#MaxMetaspaceSize#g' *&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;runbroker.sh里面的jvm：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;-Xms8g -Xmx8g -Xmn4g&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据自己情况进行修改。&lt;/p&gt;
&lt;p&gt;个人建议对于RocketMQ默认的jvm参数除了堆大小其他的先不要调整，后续通过观察分析之后看看是否有必要进行其他参数的调整等，欢迎阅读本人&lt;a href=&quot;https://mp.weixin.qq.com/mp/homepage?__biz=MzU2NjIzNDk5NQ==&amp;amp;hid=1&amp;amp;sn=41380a4a375614ac10eda44613795dd0&amp;amp;scene=18&amp;amp;uin=&amp;amp;key=&amp;amp;devicetype=Windows+7&amp;amp;version=62060028&amp;amp;lang=zh_CN&amp;amp;ascene=7&amp;amp;winzoom=1&quot;&gt;JVM菜鸟进阶高手之路&lt;/a&gt;系列文章。&lt;/p&gt;
&lt;p&gt;其实我有有疑惑，在broker的jvm参数：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -server -Xms1g -Xmx1g -Xmn512m&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:+UseG1GC -XX:G1HeapRegionSize=16m &lt;/span&gt;
-XX:G1ReservePercent=&lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt; -XX:InitiatingHeapOccupancyPercent=&lt;span class=&quot;dv&quot;&gt;30&lt;/span&gt;
-XX:SoftRefLRUPolicyMSPerMB=&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; -XX:SurvivorRatio=&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt; -XX:+DisableExplicitGC&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -verbose:gc -Xloggc:/dev/shm/mq_gc_%p.log &lt;/span&gt;
-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime 
-XX:+PrintAdaptiveSizePolicy&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 &lt;/span&gt;
-XX:GCLogFileSize=30m&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:-OmitStackTraceInFastThrow&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:+AlwaysPreTouch&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:MaxDirectMemorySize=15g&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -XX:-UseLargePages -XX:-UseBiasedLocking&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -Djava.ext.dirs=${BASE_DIR}/lib&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} ${JAVA_OPT_EXT}&quot;&lt;/span&gt;
JAVA_OPT=&lt;span class=&quot;st&quot;&gt;&quot;${JAVA_OPT} -cp ${CLASSPATH}&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;-XX:+DisableExplicitGC，-XX:MaxDirectMemorySize=15g，但是当达到阀值之后会调用System.gc来做一次full gc，关键System.gc都被禁止了。 希望那位大佬知道，在留言区说明下，谢谢。&lt;/p&gt;
&lt;h3 id=&quot;启动服务&quot;&gt;启动服务&lt;/h3&gt;
&lt;p&gt;记住先启动&lt;strong&gt;NameServer&lt;/strong&gt;，再启动&lt;strong&gt;Broker&lt;/strong&gt;，关闭的时候恰好相反，先关闭&lt;strong&gt;Broker&lt;/strong&gt;再关闭&lt;strong&gt;NameServer&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;启动&lt;strong&gt;NameServer&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt; nohup sh /appl/apache-rocketmq/bin/mqnamesrv &amp;amp;
tail -f /appl/rocketmq-s/logs/rocketmqlogs/namesrv.&lt;span class=&quot;fu&quot;&gt;log&lt;/span&gt;
#tail -f /appl/rocketmq/logs/rocketmqlogs/namesrv.&lt;span class=&quot;fu&quot;&gt;log&lt;/span&gt;
INFO main - The Name Server boot success. serializeType=JSON&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;备注：由于namesrv的端口是写死在代码里面的，所以一台机器启动一个namesrv即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;启动&lt;strong&gt;Broker&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;rocketmq1机器:
nohup sh /appl/apache-rocketmq/bin/mqbroker -c /appl/apache-rocketmq/conf/2m-2s-async/broker-a.&lt;span class=&quot;fu&quot;&gt;properties&lt;/span&gt; &amp;gt;/dev/&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &amp;amp;
  
nohup sh /appl/apache-rocketmq-s/bin/mqbroker -c /appl/apache-rocketmq-s/conf/2m-2s-async/broker-b-s.&lt;span class=&quot;fu&quot;&gt;properties&lt;/span&gt; &amp;gt;/dev/&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &amp;amp;  

rocketmq2机器:
nohup sh /appl/apache-rocketmq/bin/mqbroker -c /appl/apache-rocketmq/conf/2m-2s-async/broker-b.&lt;span class=&quot;fu&quot;&gt;properties&lt;/span&gt; &amp;gt;/dev/&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &amp;amp;
  
nohup sh /appl/apache-rocketmq-s/bin/mqbroker -c /appl/apache-rocketmq-s/conf/2m-2s-async/broker-a-s.&lt;span class=&quot;fu&quot;&gt;properties&lt;/span&gt; &amp;gt;/dev/&lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &amp;amp;   
  
  
  
tail -f /appl/rocketmq/logs/rocketmqlogs/broker.&lt;span class=&quot;fu&quot;&gt;log&lt;/span&gt; 
……
INFO main - The broker[broker-a, &lt;span class=&quot;fl&quot;&gt;192.168.116.116&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10911&lt;/span&gt;] boot success. serializeType=JSON and name server is rocketmq1:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;;rocketmq2:&lt;span class=&quot;dv&quot;&gt;9876&lt;/span&gt;
……

tail -f /appl/rocketmq/logs/rocketmqlogs/namesrv.&lt;span class=&quot;fu&quot;&gt;log&lt;/span&gt;
……
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; broker registerd, &lt;span class=&quot;fl&quot;&gt;192.168.116.116&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;11911&lt;/span&gt; HAServer: &lt;span class=&quot;fl&quot;&gt;192.168.116.116&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;11912&lt;/span&gt;
……
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; broker registerd, &lt;span class=&quot;fl&quot;&gt;192.168.116.115&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;11911&lt;/span&gt; HAServer: &lt;span class=&quot;fl&quot;&gt;192.168.116.115&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;11912&lt;/span&gt;
……&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关闭服务：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;sh bin/mqshutdown broker
sh bin/mqshutdown namesrv&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到目前位置，关于RocketMQ的集群环境部署就结束了，未完待续……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果读完觉得有收获的话，欢迎点赞加关注。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;个人公众号，欢迎关注，查阅更多精彩历史！！！&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/7849276-5f48f1430e958383.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;匠心零度公众号&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 12:23:00 +0000</pubDate>
<dc:creator>匠心零度</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lirenzuo/p/7875165.html</dc:identifier>
</item>
<item>
<title>为创业我做了十年的程序员，你告诉我“程序员不适合创业”？！ - 自由飞</title>
<link>http://www.cnblogs.com/freeflying/p/7875014.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/freeflying/p/7875014.html</guid>
<description>&lt;p&gt;&lt;span&gt;今天啥事都不做了，一定要好好的怼一怼这家伙！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为了创业，我一个文科生，一个包工头，27岁学编程，转行做程序员，跳进这坑里已经十年了……十年啊！人生有多少个十年？然后你告诉我&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/liulun/p/7843804.html&quot;&gt;程序员不适合创业&lt;/a&gt;？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我……我先点个反对再说。然后，然后……然后觉得好像说得有那么一点点的道理？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;但是，注意这个但是，有一点点的道理我就不怼你了吗？哈哈哈……too young too simple，你这个标题党！让你抢风头！哼哼 ╭(╯^╰)╮&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;讲道理，没有任何一种职业的人就“适合”创业。然而，程序员创业（这里特指软件/互联网等编程相关领域，如果你是去开餐馆，当我没说）是最有优势的。不然，为什么这句话这么经典：&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;就差一个程序员了！&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt; &lt;/h3&gt;
&lt;p&gt;&lt;span&gt;程序员对这句话各种调侃，看不到“非程序员”创业的艰辛。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我&lt;a href=&quot;http://17bang.ren/Article/8&quot; target=&quot;_blank&quot;&gt;“零基础”课程&lt;/a&gt;QQ群里有一个网友，像个傻子一样（原谅我这样说他吧）花了几万块钱，买回来一套屁用没有的程序源代码，折腾了好久，现在老老实实的学技术。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;很多程序员超级不满他们的领导，“外行领导内行”，整个就一超级大傻逼！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对，他就是一傻逼，但你以为他想当傻逼啊？那他不真是一傻逼了？！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我不是在写《&lt;a href=&quot;https://www.zhihu.com/people/tan-ye-91&quot; target=&quot;_blank&quot;&gt;折腾&lt;/a&gt;》吗？第一次创业我犯过很多错误，各种各样的错误，但90%的错误，都可以归纳为：&lt;strong&gt;不懂行&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有人觉得当老板搞管理非常简单，“管理就是管人”，“找到对的人，让他们做对的事”，“数据说话”，“没有任何借口”……都特么的鬼扯！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“亲贤臣远小人”，说得容易，人家把“小人”两个字刻在脑门上的么？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你凭什么就知道这个人是小人，那个人就是贤臣？我们就不说人家“贤臣”为什么要跟着你混这个更复杂的问题了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;还是要你自己懂才行。要不然，不是“穷庙富方丈”，就是“盲人骑瞎马”，当老板的，很难得到好。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我知道有些人会拿马云来举例。但你知道马云有多能忽悠有多会捞钱么？他和程序员之间的关系，你真的清楚么？你知道他为什么会说“男人的胸怀是委屈撑大的”么？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;外行领导内行，目前我只知道一种勉强行得通的方式，那就是：你啥都别管。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;真的啥都别管！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;估计马云就这么做的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我记得谁啊，另外一个人，没马云这么出名，他说过他怎么管理：每天就在办公室做清洁，端茶倒水之类的把一帮子程序员伺候好了就行。记者问他心里虚不虚？他说：“心虚得很！但没办法，我一插手肯定就出问题，只好赌个‘将心比心’。”当然他赌赢了，但我也看到太多太多赌输了的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;当然，程序员可能也不懂推广，不懂营销，不懂融资……但好歹那是产品做出来之后的事情了。多少项目，产品还没个样子，钱就烧完了！那才是哭都哭不出来。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除非极个别情况，产品都是基础，都是核心。以我有限的阅历，能把产品做出来，你就已经超过50%的竞争对手了。当然，不要高兴得太早，想要最后成功，你得超过99%的竞争对手。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但能超过50%的竞争者，我觉得已经是一个很好的“起手”了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;有感而发，一不小心就写了这么多。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一是自勉，毕竟我现在也在创业，也遇到了很多问题，但无论如何，最基本的问题解决了：&lt;a href=&quot;http://17bang.ren&quot; target=&quot;_blank&quot;&gt;一起帮&lt;/a&gt;上线了，跑起来了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果是十年前，我对编程一窍不通，就做到这个地步，我估计十来万应该是已经扔出去了，这还是乐观的估计，一切顺利，没被人坑。更苦的是接下来怎么办？开发团队你还得养着啊！但养着干嘛呢？总得给人家找点事做吧？所以我严重怀疑有些网站不断的上新功能，把自己搞得臃肿不堪四不像的鬼样子，就是因为这个原因。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以就会有很大的融资，或者盈利的压力。适度的压力是好事，但过度的压力就很容易把企业压垮。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;二是勉励大家：有技术，有想法，就趁着年轻，干特么的一票！万一，我是说万一，你足够聪明，又足够幸运，就成功了呢？！&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 21 Nov 2017 11:41:00 +0000</pubDate>
<dc:creator>自由飞</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/freeflying/p/7875014.html</dc:identifier>
</item>
<item>
<title>Java 中实现方法重试的一种机制 - HarrisonHao</title>
<link>http://www.cnblogs.com/HarrisonHao/p/7874902.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/HarrisonHao/p/7874902.html</guid>
<description>&lt;p&gt;有这样一个需求，当调用某个方法抛出异常，比如通过 HttpClient 调用远程接口时由于网络原因报 TimeOut 异常；或者所请求的接口返回类似于“处理中”这样的信息，需要重复去查结果时，我们希望当前方法能够在这种特定的情况下，重复执行，如果达到了我们的期望，则不重复执行。而且，我们希望能够控制重试次数，不希望无限期执行下去。&lt;/p&gt;
&lt;p&gt;Java 中有各种定时任务的实现，如 Spring 的 Schedule，Quartz 等，稍微想一下，显然不符合我们的需求。递归倒是可以，但是有些问题，先看下递归的实现：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; retryTimes = 3&lt;span&gt;;

    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; upperMethod() {
        method(&lt;/span&gt;&quot;123&quot;, &quot;456&quot;&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; method(String param1, String param2) {
        System.out.println(param1 &lt;/span&gt;+&lt;span&gt; param2);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 其他一些操作，但是没有得到预期的返回结果，或者抛出异常&lt;/span&gt;
        &lt;span&gt;boolean&lt;/span&gt; isException = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isException &amp;amp;&amp;amp; retryTimes &amp;gt; 0&lt;span&gt;){
            retryTimes &lt;/span&gt;--&lt;span&gt;;
            method(param1, param2);
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;method 方法是需要重复执行的，重复执行 3 次，加上第一次执行，一共 4 次。如果异常了，则在 catch 里面递归调用 method。如果返回“处理中”等情况，则进行判断，是否需要递归调用。&lt;/p&gt;
&lt;p&gt;这里的问题是定义了 retryTimes 这样一个全局变量，不优雅，如果需要重复执行的方法较多，而且重复次数不一样，则需定义多个全局变量。递归可以优化一下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; upperMethod() {
        method(&lt;/span&gt;3, &quot;123&quot;, &quot;456&quot;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; method(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; retryTimes,String param1, String param2) {
        System.out.println(param1 &lt;/span&gt;+&lt;span&gt; param2);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 其他一些操作，但是没有得到预期的返回结果，或者抛出异常&lt;/span&gt;
        &lt;span&gt;boolean&lt;/span&gt; isException = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(isException &amp;amp;&amp;amp; retryTimes &amp;gt; 0&lt;span&gt;){
            method(&lt;/span&gt;--&lt;span&gt;retryTimes, param1, param2);
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里去掉了全局变量，但是 method 方法多了一个和自身逻辑无关的 retryTimes 变量，还不优雅。如果参数较多，还会显得混乱。&lt;/p&gt;
&lt;p&gt;下面做了一个还算优雅的方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    @Test
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; mainMethod() {
        subMethod(&lt;/span&gt;&quot;123&quot;, &quot;456&quot;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; subMethod(String param1, String param2) {
        System.out.println(param1 &lt;/span&gt;+&lt;span&gt; param2);
        RetryUtil.setRetryTimes(&lt;/span&gt;3&lt;span&gt;).retry(param1, param2);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;增加了一个 RetryUtil 的工具类，设置重试次数，然后传入当前方法的参数，进行重复执行。这里的重点就是 RetryUtil 的实现：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RetryUtil {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ThreadLocal&amp;lt;Integer&amp;gt; retryTimesInThread = &lt;span&gt;new&lt;/span&gt; ThreadLocal&amp;lt;&amp;gt;&lt;span&gt;();

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 设置当前方法重试次数
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; retryTimes
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; RetryUtil setRetryTimes(Integer retryTimes) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (retryTimesInThread.get() == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            retryTimesInThread.set(retryTimes);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; RetryUtil();
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 重试当前方法
     * &amp;lt;p&amp;gt;按顺序传入调用者方法的所有参数&amp;lt;/p&amp;gt;
     *
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; args
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Object retry(Object... args) {
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            Integer retryTimes &lt;/span&gt;=&lt;span&gt; retryTimesInThread.get();
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (retryTimes &amp;lt;= 0&lt;span&gt;) {
                retryTimesInThread.remove();
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            }
            retryTimesInThread.set(&lt;/span&gt;--&lt;span&gt;retryTimes);
            String upperClassName &lt;/span&gt;= Thread.currentThread().getStackTrace()[2&lt;span&gt;].getClassName();
            String upperMethodName &lt;/span&gt;= Thread.currentThread().getStackTrace()[2&lt;span&gt;].getMethodName();

            Class clazz &lt;/span&gt;=&lt;span&gt; Class.forName(upperClassName);
            Object targetObject &lt;/span&gt;=&lt;span&gt; clazz.newInstance();
            Method targetMethod &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Method method : clazz.getDeclaredMethods()) {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (method.getName().equals(upperMethodName)) {
                    targetMethod &lt;/span&gt;=&lt;span&gt; method;
                    &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
                }
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (targetMethod == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            targetMethod.setAccessible(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; targetMethod.invoke(targetObject, args);
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            e.printStackTrace();
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了防止多线程情况下出现并发问题，这里定义了一个 ThreadLocal 变量来存储当前线程的重试次数。然后通过 setRetryTimes ，一个静态方法来设置这个重试次数，并返回一个 RetryUtil 对象。&lt;/p&gt;
&lt;p&gt;调用者通过返回的 RetryUtil 对象调用 retry 方法实现重试。retry 方法接收一个可变参数，因为调用者实际的参数不确定，这里要求按顺序传入调用者方法的所有参数。&lt;/p&gt;
&lt;p&gt;接下来判断 ThreadLocal 变量是否小于等于 0 ，如果是，则说明重复次数已达到，返回 null；如果不是，则让 ThreadLocal 变量减一。接下来：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
String upperClassName = Thread.currentThread().getStackTrace()[2&lt;span&gt;].getClassName();
String upperMethodName &lt;/span&gt;= Thread.currentThread().getStackTrace()[2].getMethodName();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;来获取当前方法（retry）的上层方法名和上层类名。Thread.currentThread().getStackTrace() 得到线程的方法栈数组，数组的第二个元素 Thread.currentThread().getStackTrace() [1]  为当前方法栈，第三个元素 Thread.currentThread().getStackTrace() [2] 为上层方法栈，通过上层方法的栈帧得到上层方法的方法名和类名。&lt;/p&gt;
&lt;p&gt;下面就是通过反射获取该类的所有方法，循环判断方法名是否等于所要重复执行的方法，如果是的话，执行该方法，参数就是传入可变参数。&lt;/p&gt;
&lt;p&gt;可能大家会说反射会耗时，但我认为对于上述这种需求的情况，重试次数也不会太多，因此性能可以接受。&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 11:17:00 +0000</pubDate>
<dc:creator>HarrisonHao</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/HarrisonHao/p/7874902.html</dc:identifier>
</item>
<item>
<title>实战项目——mysql主从架构的实现 - 珂儿吖</title>
<link>http://www.cnblogs.com/keerya/p/7873502.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/keerya/p/7873502.html</guid>
<description>&lt;h2 id=&quot;一主一从&quot;&gt;一主一从&lt;/h2&gt;
&lt;h3 id=&quot;环境准备&quot;&gt;1.1 环境准备：&lt;/h3&gt;
&lt;p&gt;　　centos系统服务器2台、 一台用户做Mysql主服务器， 一台用于做Mysql从服务器， 配置好yum源、 防火墙关闭、 各节点时钟服务同步、 各节点之间可以通过主机名互相通信&lt;/p&gt;
&lt;h3 id=&quot;准备步骤&quot;&gt;1.2 准备步骤：&lt;/h3&gt;
&lt;p&gt;1）iptables -F &amp;amp;&amp;amp; setenforce 清空防火墙策略，关闭selinux&lt;br/&gt;2）拿两台服务器都使用yum方式安装Mysql服务， 要求版本一致&lt;br/&gt;3）分别启动两台服务器mysql服务， 确保服务正常&lt;br/&gt;　　架构图:&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121185539055-505740669.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;实现步骤&quot;&gt;1.3 实现步骤:&lt;/h3&gt;
&lt;h4 id=&quot;配置master主服务器&quot;&gt;1.3.1 配置master主服务器&lt;/h4&gt;
&lt;p&gt;　　对master进行配置，包括打开二进制日志，指定唯一的servr ID。例如，在配置文件加入如下值&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    server-id=1　　　　　 //配置server-id，让主服务器有唯一ID号
    log-bin=mysql-bin　　//打开Mysql日志，日志格式为二进制
    skip-name-resolve　　//关闭名称解析，（非必须）&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153856586-1726798416.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;创建复制帐号&quot;&gt;1.3.2 创建复制帐号&lt;/h4&gt;
&lt;p&gt;　　在 Master 的数据库中建立一个&lt;strong&gt;备份帐户&lt;/strong&gt;：每个 slave 使用标准的 MySQL 用户名和密码连接 master 。进行复制操作的用户会授予 REPLICATION SLAVE 权限。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    MariaDB [(none)]&amp;gt; grant replication slave,replication client on *.* to slave@'192.168.%.%' identified by 'keer';&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;查看主服务器状态&quot;&gt;1.3.3 查看主服务器状态&lt;/h4&gt;
&lt;p&gt;　　在 Master 的数据库执行 &lt;code&gt;show master status&lt;/code&gt;，查看主服务器二进制日志状态及位置号。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153908274-1567421394.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;配置slave从服务器&quot;&gt;1.3.4 配置slave从服务器&lt;/h4&gt;
&lt;p&gt;　　对 slave 进行配置，打开中继日志，指定唯一的 servr ID，设置只读权限。在配置文件加入如下值：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    server-id=2                 //配置server-id，让从服务器有唯一ID号
    relay_log = mysql-relay-bin //打开Mysql日志，日志格式为二进制
    read_only = 1               //设置只读权限
    log_bin = mysql-bin         //开启从服务器二进制日志
    log_slave_updates = 1       //使得更新的数据写进二进制日志中&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153916399-704830567.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;启动从服务器复制线程&quot;&gt;1.3.5 启动从服务器复制线程&lt;/h4&gt;
&lt;p&gt;　　让 slave 连接 master ，并开始重做 master 二进制日志中的事件。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [(none)]&amp;gt; change master to master_host='192.168.37.111', 
   &amp;gt;master_user='slave', 
   &amp;gt;master_password='keer', 
   &amp;gt;master_log_file='mysql-bin.000001', 
   &amp;gt;master_log_pos=413;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　执行&lt;code&gt;start slave；&lt;/code&gt;，来启动复制线程。&lt;br/&gt;　　&lt;/p&gt;
&lt;h4 id=&quot;查看从服务器状态&quot;&gt;1.3.6 查看从服务器状态&lt;/h4&gt;
&lt;p&gt;　　可使用&lt;code&gt;SHOW SLAVE STATUS\G;&lt;/code&gt;查看从服务器状态，如下所示，也可用&lt;code&gt;show processlist \G;&lt;/code&gt;查看当前复制状态：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    Slave_IO_Running: Yes       //IO线程正常运行
    Slave_SQL_Running: Yes      //SQL线程正常运行&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153926774-1340415416.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;测试&quot;&gt;1.3.7 测试&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1）测试主从同步&lt;/strong&gt;&lt;br/&gt;　　我们在 master 服务器上创建一个数据库，再使用该数据库创建一个表，添加一条记录，来看一看 slave 服务器有没有同步成功。&lt;br/&gt;　　首先，我们先来查看一下两个服务器上有什么数据库：&lt;br/&gt;　　master：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153935477-1786736305.png&quot;/&gt;&lt;br/&gt;　　slave：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153945493-1169700906.png&quot;/&gt;&lt;br/&gt;　　现在，我们在主服务器上创建一个数据库“keer”：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121153952727-920925385.png&quot;/&gt;&lt;br/&gt;　　然后，我们来看看从服务器是否已经更新：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154002790-1911716954.png&quot;/&gt;&lt;br/&gt;　　我们可以看出，数据库已经同步，接下来，我们就来创建表，并在表中插入一条记录：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154012633-162567238.png&quot;/&gt;&lt;br/&gt;　　然后，我们来看看从服务器是否更新：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154022133-1140604599.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2）测试只读属性&lt;/strong&gt;　　&lt;br/&gt;　　我们在从服务器上设置了只读，所以我们来试试看能不能插入数据：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154034680-297885171.png&quot;/&gt;&lt;br/&gt;　　这就很尴尬了，为什么我们设置只读还是可以插入数据呢？这要如何解决呢？&lt;br/&gt;　　因为我们登录的时候使用的是&lt;code&gt;root&lt;/code&gt;超级用户，这个大变态是不受只读设置影响的，所以，我们还是可以往里面去插入数据，当然，如果我们换成其他的普通用户就不会出现这样的问题了。&lt;br/&gt;　　解决方式也很简单，我们只需要把表锁起来就可以了：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [keer]&amp;gt; flush tables with read lock;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　进行锁表操作以后，我们再来插入一条数据：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154048961-2042116331.png&quot;/&gt;&lt;br/&gt;　　这样的话，即使我们是超级用户登录进来的，也不能再插入数据了。这样会安全很多。但是，有利就有弊，这样的话，我们的主从就不能实时同步了，因为我们的主从同步是通过把主上的 sql 语句放在从上再执行一遍来实现的，可是我们锁表的话，sql 语句就不能执行了。想要同步方法也很简单，直接把表解锁就可以了。&lt;br/&gt;　　我们在主上插入一条数据：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154100993-77322353.png&quot;/&gt;&lt;br/&gt;　　此时，我们的从上就要解表以后才能实现同步：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154107211-650157706.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;扩展实现一主多从&quot;&gt;1.4 扩展——实现一主多从&lt;/h3&gt;
&lt;h4 id=&quot;需求分析&quot;&gt;1.4.1 需求分析&lt;/h4&gt;
&lt;p&gt;　　当我们的服务器运行一段时间后，流量变得越来越多，这时，一主一从能够实现的高可用性和负载均衡不能满足我们的需求，我们就要选择再添加一台从服务器。&lt;br/&gt;　　可是现在我们的 master 已经运行很久了，我们也需要对新安装的 slave 进行数据同步，甚至它没有 master 的数据。&lt;br/&gt;　　此时，有几种方法可以使 slave 从另一个服务开始，例如，从 master 拷贝数据，从另一个 slave 克隆，从最近的备份开始一个 slave 。为了加快 slave 与 master 同步，可用以下方式先进行数据同步：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;（1）master的某个时刻的数据快照；&lt;br/&gt;（2）数据库的备份数据；&lt;br/&gt;（3）master的二进制日志文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　架构图：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121185646211-1705484305.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　接下来，我们就来实现一下这个过程：&lt;/p&gt;
&lt;h4 id=&quot;具体实现过程&quot;&gt;1.4.2 具体实现过程&lt;/h4&gt;
&lt;p&gt;1）对 master 进行完全备份&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@master ~]# mkdir /backup
[root@master ~]# mysqldump --all-database &amp;gt; /backup/mysql-backup-`date +%F-%T`-all.sql&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;照例查看一下主的二进制日志状态及位置号。&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154143258-1691023042.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2）把完全备份的数据发到新增的从上&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@master ~]# scp /backup/mysql-backup-2017-11-21-10\:28\:29-all.sql @192.168.37.133:~
root@192.168.37.133's password: 
mysql-backup-2017-11-21-10:28:29-all.sql                                                           100%  504KB 503.9KB/s   00:00 &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3）把这个完全备份导入从的数据库：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154155352-130683461.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;4）查看从是否恢复成功：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154203540-1514470639.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154213071-898596893.png&quot;/&gt;&lt;br/&gt;　　我们来查看一下从的二进制日志状态及位置号：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154247899-1491413852.png&quot;/&gt;&lt;br/&gt;　　我们的数据已经恢复成功&lt;/p&gt;
&lt;p&gt;5）设置主从&lt;br/&gt;接下来就是按照上述步骤，对该从服务器进行设置就好：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@slave2 ~]# vim /etc/my.cnf
    [mysqld]
    server-id = 3
    relay-log = mysql-relay-bin
    read-only = 1
    log-bin = mysql-bin
    log-slave-updates = 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　&lt;br/&gt;　　然后，我们就来设置从服务器：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@slave2 ~]# mysql -uroot -p
Enter password: 
MariaDB [(none)]&amp;gt; change master to master_host='192.168.37.111', 
   &amp;gt;master_user='slave', 
   &amp;gt;master_password='keer', 
   &amp;gt;master_log_file='mysql-bin.000001', 
   &amp;gt;master_log_pos=330;
MariaDB [(none)]&amp;gt; start slave;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　然后我们来查看一下从服务器的状态：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154327446-6264183.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;6）测试&lt;br/&gt;　　设置完毕，我们来测试一下，当主上有操作时，从上是否更新：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154344133-1119904062.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154351430-1264573295.png&quot;/&gt;&lt;br/&gt;　　至此，我们就完成了一主两从。如果有需要，我们还可以继续添加从服务器。&lt;/p&gt;
&lt;h3 id=&quot;扩展实现半同步复制&quot;&gt;1.5 扩展——实现半同步复制&lt;/h3&gt;
&lt;h4 id=&quot;三种复制方式&quot;&gt;1.5.1 三种复制方式&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1）同步复制&lt;/strong&gt;&lt;br/&gt;　　指当主库执行完一个事务，&lt;strong&gt;&lt;span&gt;所有的从库都执行了该事务&lt;/span&gt;&lt;/strong&gt;才返回给客户端。因为需要等待所有从库执行完该事务才能返回，所以全同步复制的&lt;strong&gt;性能必然会收到严重的影响&lt;/strong&gt;。需要有超时时间。&lt;br/&gt;&lt;strong&gt;2）异步复制&lt;/strong&gt;&lt;br/&gt;　　&lt;strong&gt;MySQL默认的复制&lt;/strong&gt;即是异步的，&lt;strong&gt;&lt;span&gt;主库在执行完客户端提交的事务后会立即将结果返给给客户端，并不关心从库是否已经接收并处理，&lt;/span&gt;&lt;/strong&gt;这样就会有一个问题，主如果crash掉了，此时主上已经提交的事务可能并没有传到从上，如果此时，强行将从提升为主，&lt;strong&gt;可能导致新主上的数据不完整。&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;3）半同步复制&lt;/strong&gt;&lt;br/&gt;　　介于异步复制和全同步复制之间，&lt;strong&gt;&lt;span&gt;主库在执行完客户端提交的事务后不是立刻返回给客户端，而是等待至少一个从库接收到并写到relay log中才返回给客户端。&lt;/span&gt;&lt;/strong&gt;相对于异步复制，半同步复制&lt;strong&gt;提高了数据的安全性，同时它也造成了一定程度的延迟，&lt;/strong&gt;这个延迟最少是一个TCP/IP往返的时间。所以，半同步复制最好在低延时的网络中使用。&lt;/p&gt;
&lt;h4 id=&quot;实现半同步复制&quot;&gt;1.5.2 实现半同步复制&lt;/h4&gt;
&lt;p&gt;　　半同步复制是基于特定的模块来实现。不过非常 nice 的一点就是，在我们的 mariadb5.5 以上的版本默认是带有这个模块的。&lt;br/&gt;　　如果我们的 centos7 上安装了 mariadb ，我们就可以进入目录去查看一下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@master ~]# cd /usr/lib64/mysql/plugin/&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154415383-991405354.png&quot;/&gt;&lt;br/&gt;　　找到我们的模块后，我们就可以通过命令来安装，然后进行简单配置即可使用了。下面就是具体方法：&lt;br/&gt;master 服务器上：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [(none)]&amp;gt; INSTALL PLUGIN rpl_semi_sync_master SONAME 'semisync_master.so';
MariaDB [(none)]&amp;gt; SHOW GLOBAL VARIABLES LIKE 'rpl_semi%';
MariaDB [(none)]&amp;gt; SET GLOBAL rpl_semi_sync_master_enabled=ON;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121154526711-1337645704.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;slave 服务器上：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [(none)]&amp;gt; INSTALL PLUGIN rpl_semi_sync_slave SONAME 'semisync_slave.so';
MariaDB [(none)]&amp;gt; SHOW GLOBAL VARIABLES LIKE 'rpl_semi%';
MariaDB [(none)]&amp;gt; SET GLOBAL rpl_semi_sync_slave_enabled = ON ;
MariaDB [(none)]&amp;gt; stop slave;   
MariaDB [(none)]&amp;gt; start slave;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161025040-241263912.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161030805-1189824285.png&quot;/&gt;&lt;br/&gt;　　现在，我们的半同步复制就开启了，我们可以来查看一下日志：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[root@slave ~]# tail -200 /var/log/mariadb/mariadb.log &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161056540-881690629.png&quot;/&gt;&lt;br/&gt;　　从日志里也可以看出我们的半同步复制已经开启。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;　　以上，实验一完成。&lt;/p&gt;
&lt;h2 id=&quot;互为主从双主&quot;&gt;互为主从（双主）&lt;/h2&gt;
&lt;p&gt;　　还有一种数据库的架构为双主模式，也就是互为主从，这种设定在企业中虽不常用，但是我们还是需要掌握的。&lt;br/&gt;　　Master-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。&lt;br/&gt;　　架构图如下：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161108477-1882522444.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;环境准备-1&quot;&gt;2.1 环境准备：&lt;/h3&gt;
&lt;p&gt;　　centos系统服务器2台、 两台用户实现Mysql互为主从， 配置好yum源、 防火墙关闭、 各节点时钟服务同步、 各节点之间可以通过主机名互相通信&lt;/p&gt;
&lt;h3 id=&quot;准备步骤-1&quot;&gt;2.2 准备步骤：&lt;/h3&gt;
&lt;p&gt;1）iptables -F &amp;amp;&amp;amp; setenforce 清空防火墙策略，关闭selinux&lt;br/&gt;2）拿两台服务器都使用yum方式安装Mysql服务， 要求版本一致&lt;br/&gt;3）分别启动两台服务器mysql服务， 确保服务正常&lt;/p&gt;
&lt;h3 id=&quot;实现步骤-1&quot;&gt;2.3 实现步骤：&lt;/h3&gt;
&lt;h4 id=&quot;配置第一台-master-主服务器&quot;&gt;2.3.1 配置第一台 master 主服务器&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;    server-id = 1　　　　　 //配置server-id，让主服务器有唯一ID号
    log-bin = mysql-bin　　//打开Mysql日志，日志格式为二进制
    skip-name-resolve  　　//关闭名称解析，（非必须）
    relay_log = mysql-relay-bin //打开Mysql日志，日志格式为二进制
    read_only = 1               //设置只读权限
    log_slave_updates = 1       //使得更新的数据写进二进制日志中
    auto_increment_offset = 1　　　 //表示自增长字段从那个数开始
    auto_increment_increment = 2　　//表示自增长字段每次递增的量&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161121993-1548014717.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;配置第二台-master-主服务器&quot;&gt;2.3.2 配置第二台 master 主服务器&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;    server-id = 2　　　　　 //配置server-id，让主服务器有唯一ID号
    log-bin = mysql-bin　　//打开Mysql日志，日志格式为二进制
    skip-name-resolve　  　//关闭名称解析，（非必须）
    relay_log = mysql-relay-bin //打开Mysql日志，日志格式为二进制
    read_only = 1               //设置只读权限
    log_slave_updates = 1       //使得更新的数据写进二进制日志中
    auto_increment_offset = 2　　　 //表示自增长字段从那个数开始
    auto_increment_increment = 2　　//表示自增长字段每次递增的量&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161240727-1287274822.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;创建复制账号&quot;&gt;2.3.3 创建复制账号&lt;/h4&gt;
&lt;p&gt;　　因为我们实现的是双主模式，所以我们每一台机器上都要创建复制账号：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161419086-1152838780.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161424446-864126939.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;查看服务器状态&quot;&gt;2.3.4 查看服务器状态&lt;/h4&gt;
&lt;p&gt;　　我们分别查看两台服务器的状态，从而为我们下一步的设置奠下基础：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121161433461-1161307489.png&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121171311008-1727515505.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;启动复制线程&quot;&gt;2.3.5 启动复制线程&lt;/h4&gt;
&lt;p&gt;　　我们来分别对两台机器进行的设置：&lt;br/&gt;　　首先，先对第一台 master 机器进行设置：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [(none)]&amp;gt; change master to master_host='192.168.37.222',master_user='slave',master_password='keer',master_log_file='mysql-bin.000003',master_log_pos=245;
MariaDB [(none)]&amp;gt; start slave;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　接着，我们来查看一下他的状态：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121171320540-1551581045.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　现在，我们来对第二台 master 进行设置：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [(none)]&amp;gt; change master to master_host='192.168.37.111',master_user='slave',master_password='keer',master_log_file='mysql-bin.000002',master_log_pos=245;
MariaDB [(none)]&amp;gt; start slave;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　我们来查看一下他的状态：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121171337618-839081457.png&quot;/&gt; 　　&lt;br/&gt;　　可以看出，我们的两个机器都设置完毕，接下来，我们就可以来测试一下了。&lt;/p&gt;
&lt;h4 id=&quot;测试-1&quot;&gt;2.3.5 测试&lt;/h4&gt;
&lt;p&gt;　　在我们的配置文件中，我们设置了自增长字段的起始值和增长值，现在我们去创建一个自增长的表：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [keer]&amp;gt; create table test(id int PRIMARY KEY AUTO_INCREMENT,name char(20) not null);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　因为我们设置了主从，所以在任一机器使用该命令即可。&lt;br/&gt;　　创建好了表以后，我们就可以插入数据进行测试了，我们一个插入多条数据来看看效果：&lt;br/&gt;第一个服务器：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [keer]&amp;gt; insert into test(name) value('zhao'),('qian'),('sun'),('li');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;第二个服务器：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;MariaDB [keer]&amp;gt; insert into test(name) value('zhou'),('wu'),('zheng'),('wang');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　数据我们都插入了，我们来看看效果如何：&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1204916/201711/1204916-20171121171355415-455961437.png&quot;/&gt;&lt;br/&gt;　　可以看出，两个表插入的数据是不会重复的。&lt;br/&gt;　　但是现在也不是我们想象的连续的 id ，这是因为，我们两台机器都是同时插入4条数据，而且不是同步插入的，这样就会有一个先后顺序，第一台机器上的 sql 语句执行结束以后才执行第二台机器上的。所以会出现这样的情况。&lt;br/&gt;　　但是，这样已经不会插入重复的数据了。我们的目的也是达到了。&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;　　以上，实验二完成。&lt;/p&gt;
&lt;p&gt;　　如有不足之处还请大家多多指教喏٩(๑&amp;gt;◡&amp;lt;๑)۶&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 10:58:00 +0000</pubDate>
<dc:creator>珂儿吖</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/keerya/p/7873502.html</dc:identifier>
</item>
<item>
<title>StackExchange.Redis学习笔记(四) 事务控制和Batch批量操作 - 蓝夏</title>
<link>http://www.cnblogs.com/bluesummer/p/7874788.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bluesummer/p/7874788.html</guid>
<description>&lt;h2&gt;Redis命令实现事务&lt;/h2&gt;
&lt;p&gt;Redis的事物包含在&lt;strong&gt;multi&lt;/strong&gt;和&lt;strong&gt;exec（执行）&lt;/strong&gt;或者&lt;strong&gt;discard（回滚）&lt;/strong&gt;命令中&lt;/p&gt;
&lt;p&gt;和sql事务不同的是，Redis调用Exec只是将所有的命令变成一个单元一起执行，期间不会插入其他的命令。&lt;/p&gt;
&lt;p&gt;这种方式不保证事务的一致性，即使中间有一条命令出错了，其他命令仍然可以正常执行，并且无法回滚&lt;/p&gt;
&lt;p&gt;下面的例子演示了一个基本的事务操作&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
127.0.0.1:6379&amp;gt; multi
OK
127.0.0.1:6379&amp;gt; set name mike
QUEUED
127.0.0.1:6379&amp;gt; set age 20
QUEUED
127.0.0.1:6379&amp;gt; exec
1) OK
2) OK
127.0.0.1:6379&amp;gt; get name
&quot;mike&quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到，直到调用Exec命令时，才开始执行之前的所有命令，同时会返回两个结果，discard 命令类似，就不贴代码了。&lt;/p&gt;
&lt;p&gt;下面模拟一个会报错的命令来看一下&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
127.0.0.1:6379&amp;gt; get age
&quot;20&quot;
127.0.0.1:6379&amp;gt; get name
&quot;mike&quot;
127.0.0.1:6379&amp;gt; multi
OK
127.0.0.1:6379&amp;gt; incr name
QUEUED
127.0.0.1:6379&amp;gt; incr age
QUEUED
127.0.0.1:6379&amp;gt; exec
1) (error) ERR value is not an integer or out of range
2) (integer) 21
127.0.0.1:6379&amp;gt; get age
&quot;21&quot;
127.0.0.1:6379&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们同时将用户name和age 进行自增1操作，然而name不是数字类型，结果执行失败，但是age的自增操作仍然成功了。这无疑是个很令人不舒服的弊端，所以在写相关代码时要注意&lt;/p&gt;
&lt;h2&gt;乐观锁&lt;/h2&gt;
&lt;p&gt;前面说到通过multi命令只是保证一个事物中的所有命令可以在一起执行，显然只是实现这一点的话对于大部分的业务都是无法满足的。&lt;/p&gt;
&lt;p&gt;所以Redis提供了&lt;strong&gt;Watch&lt;/strong&gt;命令来监控一个key以达到乐观锁的效果。关于乐观锁的原理有不了解的小伙伴可以抽十分钟去科普一下&lt;/p&gt;
&lt;p&gt;下面展示一个乐观锁实例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1017082/201711/1017082-20171121114050649-1608569818.png&quot; alt=&quot;&quot;/&gt;                         &lt;img src=&quot;http://images2017.cnblogs.com/blog/1017082/201711/1017082-20171121114105196-1874228377.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这里模拟了两个客户端同时操作一个相同的键&lt;/p&gt;
&lt;p&gt;左边为client1,我们用watch监控了name和age两个键，然后分别设置name和age的值。在exec命令之前，通过另一个客户端client2设置了name的值。&lt;/p&gt;
&lt;p&gt;client1执行exec命令时，Redis检测到name的值已经被其他客户端改过了，因此在事物中的所有命令都会回滚。&lt;/p&gt;
&lt;p&gt;watch命令是对整个连接有效的，用完之后可以用discard、unwatch、exec命令清除监视&lt;/p&gt;


&lt;p&gt;在StackExchange.Redis是无法用watch multi命令来执行的，因为在并发环境下，会产生多个watch multi命令，全混在一起就乱套了。&lt;/p&gt;
&lt;p&gt;但是StackExchange.Redis提供了一套非常简单易懂的创建事物的方式 ，下面为示例代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; TestTran()
        {
            IDatabase db &lt;/span&gt;=&lt;span&gt; StackExchangeRedisHelper.GetDatabase();
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; name = db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; age = db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;NAME:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; name);
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Age:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; age);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; tran =&lt;span&gt; db.CreateTransaction();
            tran.AddCondition(Condition.StringEqual(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, name));
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tran begin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            tran.StringSetAsync(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;leap&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            tran.StringSetAsync(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;12&lt;/span&gt;&lt;span&gt;);
            Thread.Sleep(&lt;/span&gt;&lt;span&gt;4000&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;bool&lt;/span&gt; result =&lt;span&gt; tran.Execute();
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;执行结果：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; result);
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Age:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里通过CreateTransaction函数（multi）来创建一个事物，调用其Execute函数（exec）提交事物，其中的 &lt;span&gt;&quot;Condition.StringEqual(&quot;name&quot;, name)&quot;&lt;/span&gt; 就相当于Redis命令中的&lt;span&gt;watch name。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中睡眠四秒是我需要在事物提交之前打开另一个客户端来修改name的值.最终的执行结果如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
NAME:leo
Age:20
tran begin
执行结果：False
Age:20
Name:mike
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在程序睡眠期间我用另一个客户端将name改成了mike，所以事物最终执行失败&lt;/p&gt;
&lt;p&gt;通过查询Redis的慢日志。其调用的命令也是watch multi exec。（慢日志没有记录Exec命令，实际上是执行了的）&lt;em id=&quot;__mceDel&quot;&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em id=&quot;__mceDel&quot;/&gt;我们可以通过设置&lt;strong&gt;redis.windows-service.conf&lt;/strong&gt;文件中的&lt;strong&gt;slowlog-log-slower-than&lt;/strong&gt;的值为0让Redis记录所有的命令日志&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
127.0.0.1:6379&amp;gt; slowlog get 100
 1) 1) (integer) 293
    2) (integer) 1511257634
    3) (integer) 1
    4) 1) &quot;GET&quot;
       2) &quot;name&quot;
 2) 1) (integer) 292
    2) (integer) 1511257634
    3) (integer) 0
    4) 1) &quot;GET&quot;
       2) &quot;age&quot;
 3) 1) (integer) 291
    2) (integer) 1511257634
    3) (integer) 3
    4) 1) &quot;SELECT&quot;
       2) &quot;0&quot;
 4) 1) (integer) 290
    2) (integer) 1511257634
    3) (integer) 1
    4) 1) &quot;SET&quot;
       2) &quot;age&quot;
       3) &quot;12&quot;
 5) 1) (integer) 289
    2) (integer) 1511257634
    3) (integer) 1
    4) 1) &quot;SET&quot;
       2) &quot;name&quot;
       3) &quot;leap&quot;
 6) 1) (integer) 288
    2) (integer) 1511257634
    3) (integer) 1
    4) 1) &quot;MULTI&quot;
 7) 1) (integer) 287
    2) (integer) 1511257634
    3) (integer) 3
    4) 1) &quot;GET&quot;
       2) &quot;name&quot;
 8) 1) (integer) 286
    2) (integer) 1511257634
    3) (integer) 11
    4) 1) &quot;WATCH&quot;
       2) &quot;name&quot;
 9) 1) (integer) 285
    2) (integer) 1511257634
    3) (integer) 4
    4) 1) &quot;GET&quot;
       2) &quot;age&quot;
10) 1) (integer) 284
    2) (integer) 1511257634
    3) (integer) 6
    4) 1) &quot;GET&quot;
       2) &quot;name&quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这里可能大家会有个疑惑，既然tran是直接调用的watch multi等命令，为什么不会有并发的顺序问题?&lt;/p&gt;
&lt;p&gt;这是因为Tran开启后，所做的watch，stringset等操作，都会再调用Exec函数时把相应的命令封装成一个请求发送给Redis一起执行。这样每个事务之间都是独立的，就不会有问题了。&lt;/p&gt;


&lt;p&gt;StackExchange.Redis中对于连续多次的缓存等请求，我们会多次调用相关的函数来执行Redis命令。然而这种方式有个弊端就是每一次的请求都需要等待返回结果&lt;/p&gt;
&lt;p&gt;如果在网络状况不好的情况下，可能会造成不好的用户体验。 &lt;/p&gt;
&lt;p&gt;对于这种问题可以用StackExchange.Redis提供的CreateBatch()解决&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; TestPipeLine()
        {
            IDatabase db &lt;/span&gt;=&lt;span&gt; StackExchangeRedisHelper.GetDatabase();
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; batch =&lt;span&gt; db.CreateBatch();
            Task t1 &lt;/span&gt;= batch.StringSetAsync(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;bob&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            Task t2 &lt;/span&gt;= batch.StringSetAsync(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;100&lt;/span&gt;&lt;span&gt;);
            batch.Execute();
            Task.WaitAll(t1, t2);
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Age:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
            Console.WriteLine(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + db.StringGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;batch会把所需要执行的命令打包成一条请求发到Redis，然后一起等待返回结果。这样批量操作的速度就大大提升啦！&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 10:35:00 +0000</pubDate>
<dc:creator>蓝夏</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bluesummer/p/7874788.html</dc:identifier>
</item>
</channel>
</rss>