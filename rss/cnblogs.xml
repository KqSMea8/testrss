<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>从零开始学 Web 之 移动Web（四）实现JD分类页面 - Daotin</title>
<link>http://www.cnblogs.com/lvonve/p/9459908.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lvonve/p/9459908.html</guid>
<description>&lt;blockquote readability=&quot;6.9491150442478&quot;&gt;
&lt;p&gt;大家好，这里是「 从零开始学 Web 系列教程 」，并在下列地址同步更新......&lt;/p&gt;
&lt;p&gt;在这里我会从 Web 前端零基础开始，一步步学习 Web 相关的知识点，期间也会分享一些好玩的项目。现在就让我们一起进入 Web 前端学习的探索之旅吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/Daotin/pic/raw/master/fgx.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现jd分类页面&quot;&gt;实现JD分类页面&lt;/h2&gt;
&lt;p&gt;我们先看看要实现的效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/754332/201808/754332-20180811152116542-845170349.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;项目需求&quot;&gt;1、项目需求：&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;全屏页面&lt;/li&gt;
&lt;li&gt;右侧的页面随着页面宽度的变化而变化，左侧栏宽度固定不变。&lt;/li&gt;
&lt;li&gt;左侧栏可以上下滑动，如果滑动超出上下范围自动反弹回去&lt;/li&gt;
&lt;li&gt;点击左侧栏每个项目，自动滚动左侧栏使得项目置顶&lt;/li&gt;
&lt;li&gt;当点击项目可能使得超出滑动范围的时候，以滑动范围为准，当前点击的项目不必置顶。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;项目分析&quot;&gt;2、项目分析&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;如何实现一个全屏页面，没有滚动条？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如下面的结构：大盒子1和大盒子2分为上下结构，小盒子3和小盒子4在大盒子2的内部，分为左右结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/754332/201808/754332-20180811152124814-974600722.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那么如何排布，使得上下左右都没有滚动条呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、要使得大盒子1和大盒子2上下没有滚动条，可以使得大盒子1 的宽度为 100%，高度加入100px，大盒子2的高度 100%；这时会超出100px的高度，如果这时我们让大盒子1定位（position:absolute;），，确实可以实现上下没有滚动条，但是大盒子的头部100px 的位置会被覆盖，所以再让大盒子2 padding-top: 100px; 就可以了。&lt;/p&gt;
&lt;p&gt;2、要使得小盒子3和小盒子4左右没有滚动条，可不可以参考大盒子1和大盒子2的策略呢？让小盒子3 宽度100px，高度100%，小盒子4宽度100%，高度100%，然后小盒子3定位（position:absolute;），这是不可以的，因为小盒子3的高度是100%，参照父盒子（大盒子2）的，所以高度是整个视口的高度，而大盒子1占了位置，所以小盒子3只能往下挪，在底部冲出100px的大小，无法弥补。&lt;/p&gt;
&lt;p&gt;那么怎么办呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一，可以将小盒子3定位（position:absolute;）改为浮动（float:left）；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二，可以取消大盒子2的宽度100%，改为 margin-left:100px；小盒子3依然浮动（float:left），也是可以的。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;示例代码&quot;&gt;3、示例代码：&lt;/h3&gt;
&lt;p&gt;相关源码以放置 Github：&lt;a href=&quot;https://github.com/Daotin/Web/tree/master/Code/src/11/jd.zip&quot; class=&quot;uri&quot;&gt;https://github.com/Daotin/Web/tree/master/Code/src/11/jd.zip&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&amp;gt;
    &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./css/base.css&quot;&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./css/category.css&quot;&amp;gt;
    &amp;lt;script src=&quot;./js/category.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;./js/tap.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div class=&quot;layout&quot;&amp;gt;
        &amp;lt;!-- 头部header --&amp;gt;
        &amp;lt;div class=&quot;header&quot;&amp;gt;
            &amp;lt;div class=&quot;header-back&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;form action=&quot;&quot; class=&quot;header-text&quot;&amp;gt;
                &amp;lt;input type=&quot;text&quot; placeholder=&quot;请输入商品名称&quot;&amp;gt;
            &amp;lt;/form&amp;gt;
            &amp;lt;div class=&quot;header-menu&quot;&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;!-- 主体main --&amp;gt;
        &amp;lt;div class=&quot;main&quot;&amp;gt;
            &amp;lt;div class=&quot;main-left&quot;&amp;gt;
                &amp;lt;span&amp;gt;拉这么多想干嘛？&amp;lt;/span&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;热门推荐&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;潮流女装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;品牌男装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;内衣配饰&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家用电器&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;电脑办公&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;手机数码&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;母婴频道&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;图书&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家居家纺&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;居家生活&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家具建材&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;热门推荐&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;潮流女装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;品牌男装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;内衣配饰&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家用电器&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;电脑办公&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;手机数码&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;母婴频道&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;图书&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家居家纺&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;居家生活&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;javascript:;&quot;&amp;gt;家具建材&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&quot;main-right&quot;&amp;gt;
                &amp;lt;a href=&quot;javascript:;&quot; class=&quot;main-right-img&quot;&amp;gt;
                    &amp;lt;img src=&quot;./uploads/banner_1.jpg&quot; alt=&quot;&quot;&amp;gt;
                &amp;lt;/a&amp;gt;
                &amp;lt;h3&amp;gt;商品分类&amp;lt;/h3&amp;gt;
                &amp;lt;div class=&quot;main-right-cate&quot;&amp;gt;
                    &amp;lt;ul&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                        &amp;lt;li&amp;gt;
                            &amp;lt;a href=&quot;javascript:;&quot;&amp;gt;
                                &amp;lt;img src=&quot;./uploads/nv-fy.jpg&quot; alt=&quot;&quot;&amp;gt;
                                &amp;lt;p&amp;gt;毛衣&amp;lt;/p&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/li&amp;gt;
                    &amp;lt;/ul&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CSS 代码：&lt;/p&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;html, body {
    width: 100%;
    height: 100%;
}

.layout {
    width: 100%;
    height: 100%;
}

/* 头部header */
.header {
    width: 100%;
    height: 50px;
    background-color: #eee;
    border-bottom: 1px solid #ccc;
    position: absolute;
}
.header-back,
.header-menu {
    width: 50px;
    height: 50px;
    background: url(&quot;../images/jd-sprites.png&quot;);
    background-size: 200px 200px;
    position: absolute;
    top: 0;
    padding: 15px;
    background-origin: content-box;
    background-clip: content-box;
}
.header-back {
    background-position: -20px 0;
    left: 0;
}
.header-menu {
    background-position: -60px 0;
    right: 0;
}
.header-text {
    padding: 0 60px;
}
.header-text &amp;gt; input {
    width: 100%;
    height: 30px;
    margin-top: 10px;
    border-radius: 10px;
    padding-left: 10px;
    font-size: 16px;
    color: #aaa;
}


/* 主体main */
.main {
    width: 100%;
    height: 100%;
    padding-top: 50px;
}
.main-left {
    width: 100px;
    height: 100%;
    float: left;
    overflow: hidden;
    position: relative;
    background: #eee;
}
.main-left &amp;gt; span {
    display: inline-block;
    width: 100%;
    font-size: 10px;
    color: #ccc;
    text-align: center;
    margin-top: 80px;
}
.main-left ul {
    width: 100px;
    position: absolute;
    left: 0;
    top: 0;
}
.main-left ul li {
    width: 100%;
    height: 50px;
    line-height: 50px;
    text-align: center;
    border-right: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    background-color: #eee;
}
.main-left li.active {
    background-color: #fff;
    border-bottom: 1px solid #ccc;
    border-right: 1px solid #ccc;
}
.main-left li.active a {
    color: #e92322;
}
.main-left a {
    display: block;
    width: 100%;
    height: 50px;
    color: #666;
}
.main-right {
    /* width: 100%; */
    height: 100%;
    margin-left: 100px;
    /* 设置为伸缩盒子 */
    display: flex;
    flex-direction: column;
}
.main-right-img {
    width: 100%;
}
.main-right-img &amp;gt; img {
    width: 100%;
    /* 消除基线 */
    display: block;
}
.main-right &amp;gt; h3 {
    font-size: 14px;
    font-weight: bold;
    color: #333;
    margin: 10px 0 10px 5px;
}
.main-right-cate {
    width: 100%;
    /* 下面两个一起使得没有上下滚动条 */
    flex: 1;
    overflow: hidden;
}

.main-right-cate&amp;gt; ul {
    width: 100%;
}
.main-right-cate &amp;gt; ul &amp;gt; li {
    width: 33.33%;
    text-align: center;
    float: left;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/754332/201808/754332-20180811152156623-1849214902.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;原生 js 代码：&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;window.onload = function () {  
    leftSlideEffect();
};

// 左侧滑动栏效果和点击效果
function leftSlideEffect() {  
    // 添加左侧栏的滑动效果
    var mainObj = document.querySelector(&quot;.main&quot;);
    var leftUlObj = document.querySelector(&quot;.main-left&quot;).children[1];

    var mainLeftHeight = document.querySelector(&quot;.main-left&quot;).offsetHeight;
    var leftUlObjHeight = leftUlObj.offsetHeight;

    var liObjs = leftUlObj.querySelectorAll(&quot;li&quot;);


    var startY=0; // 起始位置
    var diffY=0;  // 滑动后与起始位置的偏移
    var currentY=0; // 保存每次滑动后的偏移

    var maxTop = 0; // 最大top偏移值
    var minTop = mainLeftHeight-leftUlObjHeight; // 最大top偏移值
    var maxBounceTop = maxTop + 100; //弹性最大高度
    var minBounceTop = minTop - 100; //弹性最小高度
    leftUlObj.addEventListener(&quot;touchstart&quot;, function(e) {
        // 计算起始坐标
        startY = e.targetTouches[0].clientY;
    });

    leftUlObj.addEventListener(&quot;touchmove&quot;, function(e) {
        /*计算距离的差异*/
        diffY = e.targetTouches[0].clientY - startY;
        /*判断滑动的时候是否超出当前指定的滑动区间*/
        if((diffY+currentY &amp;gt; maxBounceTop) || (diffY+currentY &amp;lt; minBounceTop)) {
            return;
        }
        /*先将之前可能添加的过渡效果清除*/
        leftUlObj.style.transition = &quot;none&quot;;
        /*实现偏移操作:应该在之前的滑动距离的基础之上再进行滑动*/
        leftUlObj.style.top = diffY+currentY + &quot;px&quot;;
    });

    leftUlObj.addEventListener(&quot;touchend&quot;, function() {
        
        if(diffY+currentY &amp;gt; maxTop) {
            // 回到maxTop位置，设置currentY当前值
            leftUlObj.style.transition = &quot;top 0.5s&quot;
            leftUlObj.style.top = maxTop + &quot;px&quot;;
            currentY = maxTop;
        } else if(diffY+currentY &amp;lt; minTop) {
            // 回到minTop位置，设置currentY当前值
            leftUlObj.style.transition = &quot;top 0.5s&quot;
            leftUlObj.style.top = minTop + &quot;px&quot;;
            currentY = minTop;
        } else {
            // 记录当前滑动的距离
            currentY += diffY;
        }
    });

   // -----------------------------------------------------
  
    // 左侧滑动栏点击效果
    /*为每一个li元素设置添加一个索引值*/
    for(var i=0; i&amp;lt;liObjs.length; i++) {
        // liObjs是对象，给对象增加属性值
        liObjs[i].index = i;
    }
    // 点击事件
    fingerTap.tap(leftUlObj, function (e) {
        // 清除所有li标签
        for(var i=0; i&amp;lt;liObjs.length; i++) {
            liObjs[i].classList.remove(&quot;active&quot;);
        }
        //设置点击的li标签的样式
        var indexLi = e.target.parentElement;
        
        indexLi.classList.add(&quot;active&quot;);
        // 每个li标签的高度
        var indexLiHeight = indexLi.offsetHeight;

        /*2.移动当前的li元素到父容器的最顶部，但是不能超出之前设定了静止状态下的最小top值*/
        leftUlObj.style.transition = &quot;top 0.5s&quot;;

        if(-indexLiHeight*indexLi.index &amp;lt; minTop) {
            leftUlObj.style.top = minTop + &quot;px&quot;;
            // 记得重置currentY的值
            currentY=minTop;
        } else {
            leftUlObj.style.top = -indexLiHeight*indexLi.index + &quot;px&quot;;
            // 记得重置currentY的值
            currentY=-indexLiHeight*indexLi.index;
        }
    });
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;把点击事件封装成一个单独 js 库，tap.js。&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;// 封装移动端的tap事件

var fingerTap = {
    tap: function (dom, callback) {  
        // 判断dom是否存在
        if((!dom) || (typeof dom != &quot;object&quot;)) {
            return;
        }
        var startX, startY, endX, endY, startTime, endTime;
        dom.addEventListener(&quot;touchstart&quot;, function (e) {  
            // 不止一个手指
            if(e.targetTouches.length &amp;gt; 1) {
                return;
            }
            startX = e.targetTouches[0].clientX;
            startY = e.targetTouches[0].clientY;
            
            // 点击时记录毫秒数
            startTime = Date.now(); 

        });

        dom.addEventListener(&quot;touchend&quot;, function (e) {
            // 不止一个手指
            if(e.changedTouches.length &amp;gt; 1) {
                return;
            }
            // 之所以使用changedTouches，是因为手指离开后就没有targetTouches了
            endX = e.changedTouches[0].clientX;
            endY = e.changedTouches[0].clientY;
            // 记录离开手指的毫秒数
            endTime = Date.now();
            //如果是长按操作就返回
            if(endTime - startTime &amp;gt; 300) {
                return;
            }
            // 判断从按下到抬起手指在一定的范围滑动也算tap事件
            if((Math.abs(endX-startX) &amp;lt;= 6) &amp;amp;&amp;amp; (Math.abs(endY-startY) &amp;lt;= 6)) {
                // tap点击事件的处理函数
                callback &amp;amp;&amp;amp; callback(e);
            }
        });
    }
};&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用-zepto-实现点击操作&quot;&gt;4、使用 Zepto 实现点击操作&lt;/h3&gt;
&lt;p&gt;上面 tap.js 是我们自己封装的点击事件，其实在 Zepto 中，已经封装好了 tap 单击事件，我们可以直接使用。&lt;/p&gt;
&lt;p&gt;只需要将&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;fingerTap.tap(leftUlObj, function (e) {});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;改为：&lt;/p&gt;
&lt;pre class=&quot;js&quot;&gt;
&lt;code&gt;$(leftUlObj).on(&quot;tap&quot;, function() {});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;就可以实现相同的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/Daotin/pic/raw/master/fgx.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 07:26:00 +0000</pubDate>
<dc:creator>Daotin</dc:creator>
<og:description>大家好，这里是「 从零开始学 Web 系列教程 」，并在下列地址同步更新...... github：https://github.com/Daotin/Web 微信公众号：</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lvonve/p/9459908.html</dc:identifier>
</item>
<item>
<title>浮动及清除浮动 - 阿豪的girl</title>
<link>http://www.cnblogs.com/jaelynl/p/9459837.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jaelynl/p/9459837.html</guid>
<description>&lt;h2 id=&quot;h&quot;&gt;一、背景&lt;/h2&gt;
&lt;p&gt;在网页布局中，使用的CSS定位机制有三种：普通流（标准流）、&lt;strong&gt;浮动&lt;/strong&gt;和定位。&lt;/p&gt;
&lt;p&gt;普通流就是网页中的标签元素按照从左到右，从上到下的顺序进行排列的，例如块级元素独占一行，行内元素按顺序依次先后排列，在这种大前提的布局排列之下绝对不会出现例外的情况叫做普通流布局。但是如果一个元素脱离了标准流呢，会出现怎么样的情况，会带来哪些好处与影响、及解决办法，下文将详细介绍：&lt;/p&gt;
&lt;h2 id=&quot;h-1&quot;&gt;二、何为浮动&lt;/h2&gt;
&lt;p&gt;元素的浮动是某一个元素脱离了标准流的束缚，自动移动到其父元素中指定位置的过程，前提是这个元素背设置了浮动属性。&lt;/p&gt;
&lt;p&gt;在CSS中使用float定义浮动：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;css language-css hljs&quot;&gt;选择器{&lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;float:属性值；         &lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h-2&quot;&gt;浮动的特点&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;浮动的元素脱了标准流，不占位置。并且会影响标准流。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;浮动元素影响标准流指的是：浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面。不占位置，自己原来的位置会由标准流的盒子填满。(见下方效果图)&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;一个父盒子里面的子盒子，如果其中一个子级有浮动的，则其他子级都需要浮动。这样才能一行对齐显示。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;浮动元素只会左右浮动。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;元素添加了浮动之后，会有行内块的特性，元素的大小完全取决于定义的大小，或者默认的内容的多少。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/toni/Desktop/private%20/整理/浮动/浮动.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1442304/201808/1442304-20180811150615366-1561471812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浮动首先创建包含块的概念（包裹）。就是说， 浮动的元素总是&lt;strong&gt;找距离它最近的父级元素对齐&lt;/strong&gt;。但是不会超出内边距的范围。&lt;/p&gt;
&lt;h3 id=&quot;h-3&quot;&gt;浮动小总结&lt;/h3&gt;
&lt;p&gt;浮动的目的就是为了&lt;strong&gt;让多个块级元素同一行上显示&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1442304/201808/1442304-20180811150728175-1567378043.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/toni/Desktop/private%20/整理/浮动/对齐.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;h-4&quot;&gt;三、清除浮动&lt;/h2&gt;
&lt;h3 id=&quot;h-5&quot;&gt;浮动的影响&lt;/h3&gt;
&lt;p&gt;由于浮动元素不再占用原文档流的位置，所以它会对后面的&lt;strong&gt;元素排版产生影响&lt;/strong&gt;，为了解决这些问题，此时就需要在该元素中清除浮动。&lt;/p&gt;
&lt;p&gt;准确地说，并不是清除浮动，而是&lt;strong&gt;清除浮动后造成的影响&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;清除浮动的本质：&lt;strong&gt;解决父级元素因为子级浮动引起内部高度为0&lt;/strong&gt; 的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标准流盒子排列布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/toni/Desktop/private%20/整理/浮动/normal.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1442304/201808/1442304-20180811150644717-1598443680.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浮动盒子排列&lt;/strong&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/toni/Desktop/private%20/整理/浮动/float.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1442304/201808/1442304-20180811150656026-1036607808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;h-6&quot;&gt;清除浮动的方法&lt;/h3&gt;
&lt;p&gt;清除浮动就是把&lt;strong&gt;浮动的盒子圈到里面&lt;/strong&gt;，让父盒子闭合出口和入口不让他们出来影响其他元素。&lt;/p&gt;
&lt;p&gt;CSS中清除浮动使用clear属性。语法如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;css language-css hljs&quot;&gt;选择器{&lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;clear:属性值；  &lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h-7&quot;&gt;额外标签法清除浮动&lt;/h3&gt;
&lt;p&gt;即在浮动元素的末尾添加一个空标签，给该空标签清除浮动。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;html language-html hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div &lt;span class=&quot;hljs-attr&quot;&gt;style=&lt;span class=&quot;hljs-string&quot;&gt;”clear:both”&amp;gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;div&amp;gt;，或则其他标签br等亦可。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;hoverfloaw&quot;&gt;父级元素添加overfloaw清除浮动&lt;/h3&gt;
&lt;p&gt;通过触发BFC的方式，实现清除浮动的效果。（BFC具体是什么，后面文章中会介绍）&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;html language-html hljs xml&quot;&gt;直接给父级添加：&lt;br/&gt;父级的选择器{&lt;br/&gt;overflow： hidden；  &lt;br/&gt;}  可以实现。&lt;br/&gt;属性值为scroll  或者auto也可以实现清除浮动&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;hafter&quot;&gt;after伪元素清除浮动&lt;/h3&gt;
&lt;p&gt;使用方法：给&lt;strong&gt;需要清除浮动的盒子使用afte&lt;/strong&gt;伪元素&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;css language-css hljs&quot;&gt; &lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after { &lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;content: &lt;span class=&quot;hljs-string&quot;&gt;&quot;.&quot;;    &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;html language-html hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;div &lt;span class=&quot;hljs-attr&quot;&gt;class=&lt;span class=&quot;hljs-string&quot;&gt;&quot;box clearfix&quot;&amp;gt;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;清除浮动效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1442304/201808/1442304-20180811150811750-601125821.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/toni/Desktop/private%20/整理/浮动/after.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;hbeforeafter&quot;&gt;before 和after 双伪元素清除浮动&lt;/h3&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;css language-css hljs&quot;&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:before,&lt;span class=&quot;hljs-selector-class&quot;&gt;.clearfix&lt;span class=&quot;hljs-selector-pseudo&quot;&gt;:after { &lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;content:&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;;&lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;display:table;  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;清除浮动效果与after的相同，不再演示。&lt;/p&gt;
&lt;h2 id=&quot;h-8&quot;&gt;四、总结&lt;/h2&gt;
&lt;p&gt;总结一下四种清除浮动的优缺点：&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;th&gt;缺点&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;6.5&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;额外标签法&lt;/td&gt;
&lt;td&gt;通俗易懂，书写简单&lt;/td&gt;
&lt;td&gt;需要添加无意义的标签，结构化较差&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;父级添加ovreflow&lt;/td&gt;
&lt;td&gt;代码简洁&lt;/td&gt;
&lt;td&gt;内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。（overflow:hidden;本身是溢出隐藏）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td&gt;after伪元素&lt;/td&gt;
&lt;td&gt;符合闭合浮动思想 结构语义化正确&lt;/td&gt;
&lt;td&gt;由于IE6-7不支持:after，使用 zoom:1&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;双伪元素（推荐）&lt;/td&gt;
&lt;td&gt;代码更简洁&lt;/td&gt;
&lt;td&gt;由于IE6-7不支持:after，使用 zoom:1&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;综合以上优缺点的比较，我们&lt;strong&gt;推荐使用双伪元素清除浮动&lt;/strong&gt;的方法。&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 07:09:00 +0000</pubDate>
<dc:creator>阿豪的girl</dc:creator>
<og:description>一、背景 在网页布局中，使用的CSS定位机制有三种：普通流（标准流）、浮动和定位。 普通流就是网页中的标签元素按照从左到右，从上到下的顺序进行排列的，例如块级元素独占一行，行内元素按顺序依次先后排列，</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jaelynl/p/9459837.html</dc:identifier>
</item>
<item>
<title>day36_Spring学习笔记_04_SVN - 黑泽明军</title>
<link>http://www.cnblogs.com/chenmingjun/p/9459401.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/9459401.html</guid>
<description>&lt;h2 id=&quot;hsvn&quot;&gt;&lt;span&gt;&lt;strong&gt;一、SVN&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h11&quot;&gt;&lt;span&gt;&lt;strong&gt;1.1、版本控制&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h111&quot;&gt;&lt;span&gt;&lt;strong&gt;1.1.1、什么版本控制？&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;版本控制（Revision Control）：是维护&lt;code&gt;工程蓝图&lt;/code&gt;的标准做法，能追踪工程蓝图从诞生一直到定案的过程。是一种记录若干&lt;code&gt;文件内容变化&lt;/code&gt;，以便将来查阅特定版本修订情况的系统。也是一种软体工程技巧，籍以在开发的过程中，确保由不同人所编辑的同一档案都得到更新。&lt;/li&gt;
&lt;li&gt;为什么学习版本控制？硬盘是否坏过。根据&lt;code&gt;经验法则&lt;/code&gt;再加上&lt;code&gt;墨菲定理&lt;/code&gt;，坏事情往往都发生在最重要的时刻。&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;文档控制&lt;/code&gt;（documentation control），能记录任何工程专案内各个模组的改动历程，并为每次改动编上序号。&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;h112&quot;&gt;&lt;span&gt;&lt;strong&gt;1.1.2、版本控制软件&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;CVS（Concurrent Versions System）代表协作版本系统或者并发版本系统，是一种版本控制系统，方便软件的开发和使用者协同工作。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;VSS（Visual Source Safe）只能在windows下，作为 Microsoft Visual Studio 的一名成员，它主要任务就是负责项目文件的管理。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Git是用于Linux内核开发的版本控制工具。它采用了&lt;code&gt;分布式版本库&lt;/code&gt;的方式，不必服务器端软件支持，使源代码的发布和交流极其方便。Git的速度很快，这对于诸如Linux kernel这样的大项目来说自然很重要。Git最为出色的是它的&lt;code&gt;合并跟踪（merge tracing）&lt;/code&gt;能力。&lt;/li&gt;
&lt;li&gt;&lt;span&gt;SVN（Subversion），是一个开放源代码的版本控制系统，采用了分支管理系统，它的设计目标就是取代CVS。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h12svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.2、SVN的特点&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;统一的版本号。CVS是对每个文件顺序编排版本号，在某一时间各文件的版本号各不相同。而Subversion下，任何一次提交都会对所有文件增加到同一个新版本号，即使是提交并不涉及的文件。所以，各文件在某任意时间的版本号是相同的。版本号相同的文件构成软件的一个版本。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;原子提交。一次提交不管是单个还是多个文件，都是作为一个整体提交的。在这当中发生的意外例如传输中断，不会引起数据库的不完整和数据损坏。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;重命名、复制、删除文件等动作都保存在版本历史记录当中。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;对于二进制文件，使用了节省空间的保存方法。（简单的理解，就是只保存和上一版本不同之处）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;目录也有版本历史。整个目录树可以被移动或者复制，操作很简单，而且能够保留全部版本记录。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;分支的开销非常小。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;优化过的数据库访问，使得一些操作不必访问数据库就可以做到。这样减少了很多不必要的和数据库主机之间的网络流量。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;支持元数据（Metadata）管理。每个目录或文件都可以定义属性（Property），它是一些隐藏的键值对，用户可以自定义属性内容，而且属性和文件内容一样在版本控制范围内。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;支持 FSFS 和 Berkeley DB两种资料库格式。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;不足：只能设置目录的访问权限，无法设置单个文件的访问权限。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h13svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.3、SVN的体系结构&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/01.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h14svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.4、安装SVN&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;版本&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/02.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;我一般喜欢安装最新版本的软件。&lt;/li&gt;
&lt;li&gt;测试安装&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/03.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;检查path系统环境变量&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/04.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h15&quot;&gt;&lt;span&gt;&lt;strong&gt;1.5、创建仓库&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;命令格式：svnadmin create 路径&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/05.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;仓库目录结构&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/06.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;注意：&lt;code&gt;创建仓库时，目录必须是空的，即要新建文件夹&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h16svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.6、SVN服务器启动&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;命令格式：svnserve -d -r 仓库的路径&lt;br/&gt;-d 后台执行&lt;br/&gt;-r 版本库的根目录&lt;br/&gt;SVN服务器启动时，指定“仓库路径”不同，就会分成&lt;code&gt;多仓库&lt;/code&gt;和&lt;code&gt;单仓库&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多仓库【掌握】&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/07.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;启动：svnserve -d -r 仓库父目录，表示启动的是多仓库&lt;br/&gt;例如：svnserve -d -r D:\learn\JavaWeb\repository\svn&lt;br/&gt;访问：&lt;code&gt;svn://localhost:3690/bbs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单仓库【了解】&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/08.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;启动：svnserve -d -r 仓库的根，表示启动的是单仓库&lt;br/&gt;例如：svnserve -d -r D:\learn\JavaWeb\repository\svn\bbs&lt;br/&gt;访问：&lt;code&gt;svn://localhost:3690&lt;/code&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;每次启动SVN服务器都要输入很多命令，太麻烦了，有没有解决办法？&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;有，我们可以将操作注册成操作系统的“服务”，我们的电脑开机时SVN服务器就启动了。&lt;br/&gt;1、在“运行”中输入 services.msc 打开“服务”&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/09.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;2、注册“服务”&lt;br/&gt;前提：必须以管理员身份打开命令提示符。&lt;br/&gt;命令格式：sc create svn binpath= &quot;D:\learn\JavaWeb\Subversion\Subversion\bin\svnserve.exe --service -r D:\learn\JavaWeb\repository\svn&quot; displayname= &quot;SVN-Service&quot; start= auto depend= Tcpip&lt;br/&gt;3、删除“服务”&lt;br/&gt;命令格式：sc delete svn&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/10.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;4、将SVN-Service的启动类型设置为&lt;code&gt;手动&lt;/code&gt;后，就可以手动启动或停止“服务”了&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/11.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;测试手动开启SVN和手动停止SVN：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/12.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h17&quot;&gt;&lt;span&gt;&lt;strong&gt;1.7、操作【掌握：思想】&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/13.png&quot; alt=&quot;&quot;/&gt;&lt;h4 id=&quot;h171checkout&quot;&gt;&lt;span&gt;&lt;strong&gt;1.7.1、checkout&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;命令格式：svn checkout 服务器地址 下载地址&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/14.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;h172commit&quot;&gt;&lt;span&gt;&lt;strong&gt;1.7.2、commit&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;命令格式：svn commit 资源&lt;br/&gt;问题1：尚未纳入版本控制&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/15.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;解决办法：使用add子命令，将要提交的文件添加到本地版本库&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/16.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;再次提交&lt;br/&gt;问题2：没有编写日志&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/17.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;解决办法：采用 -m 参数设置日志信息&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/18.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;问题3：没有权限，认证失败&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/18.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;解决办法：修改权限，设置匿名访问&lt;br/&gt;先打开文件：D:\learn\JavaWeb\repository\svn\bbs\conf\svnserve.conf&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/19.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;再次提交，没有问题了&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/20.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;h173update&quot;&gt;&lt;span&gt;&lt;strong&gt;1.7.3、update&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/21_1.png&quot; alt=&quot;&quot;/&gt;&lt;ul&gt;&lt;li&gt;命令格式：svn update&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/21_2.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h18tortoisesvn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.8、图形化：TortoiseSVN 安装&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/22.png&quot; alt=&quot;&quot;/&gt;&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;安装成功之后，以后所有的操作都是“右键”&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/23.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;若在TortoiseSVN的简单使用中若出现如下警告，说明SVN服务器是关闭的，需要我们手动打开SVN服务器（因为我们设置的是手动启动和关闭SVN服务器）：&lt;br/&gt;警告如下：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/24.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;命令格式：net start svn&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/25.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;解决问题成功截图：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/26.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;h19svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.9、svn权限&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;先找到仓库，配置SVN权限需要3个配置文件，位置：D:\learn\JavaWeb\repository\svn\bbs\conf&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/27.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;核心配置文件：svnserve.conf&lt;br/&gt;关闭匿名访问，开启权限认证&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/28.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;确定账号配置文件位置&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/29.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;确定权限认证配置文件位置&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/30.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;账号配置文件：passwd（一行表示一个账号，账号由用户名和密码组成，使用等号分隔）&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/31.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;权限认证配置文件：authz&lt;br/&gt;配置组，配置格式：组名 = 用户1, 用户2, …&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/32.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;权限认证细节配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs perl&quot;&gt;多仓库&lt;br/&gt;[bbs:&lt;span class=&quot;hljs-regexp&quot;&gt;/]         --&amp;gt; 确定仓库名称。[bbs:/doc&lt;/span&gt;]    表示给bbs仓库的doc目录配置权限认证&lt;br/&gt;@itheima = rw   --&amp;gt; 给itheima组设置权限，取值：&lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;'r'&lt;/span&gt;) ，&lt;span class=&quot;hljs-keyword&quot;&gt;read&lt;/span&gt;-&lt;span class=&quot;hljs-keyword&quot;&gt;write&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot;&gt;'rw'&lt;/span&gt;) ，&lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;no&lt;/span&gt; access (&lt;span class=&quot;hljs-string&quot;&gt;''&lt;/span&gt;)&lt;br/&gt;user3 = r       --&amp;gt; 给user3 指定权限&lt;br/&gt;*=              --&amp;gt; 其他用户没有权限&lt;/code&gt;
&lt;/pre&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/33.png&quot; alt=&quot;&quot;/&gt;&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;br/&gt;单仓库&lt;br/&gt;&lt;span class=&quot;hljs-selector-attr&quot;&gt;[/]&lt;/span&gt;             &lt;span class=&quot;hljs-selector-tag&quot;&gt;--&lt;/span&gt;&amp;gt; 表示单仓库的根。&lt;span class=&quot;hljs-selector-attr&quot;&gt;[/doc]&lt;/span&gt;  表示单仓库中的&lt;span class=&quot;hljs-selector-tag&quot;&gt;doc&lt;/span&gt;目录&lt;/code&gt;
&lt;/pre&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/34.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h110tortoisesvn&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;1.10、TortoiseSVN 常见图标&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/35.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h111myeclipsesvn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.11、myeclipse svn 插件【很重要】&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;h1111&quot;&gt;&lt;span&gt;&lt;strong&gt;1.11.1、安装插件&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/36.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;如果3个都不能使用，直接换eclipse。
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;安装方式1：直接复制&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/37.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;eclipse 插件规范&lt;br/&gt;&lt;code&gt;eclipse 目录 -- features目录 -- plugins 目录&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;安装方式2：使用link文件&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs lua&quot;&gt;将插件解压到任意目录（不含中文、空格），在MyEclipse\MyEclipse &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt; CI\dropins目录添加一个link文件&lt;br/&gt;文件名：自定义&lt;br/&gt;文件扩展名：link&lt;br/&gt;文件内容：&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;path&lt;/span&gt; = 插件完整目录，需要指定到eclipse，即可以看到（features、plugins）这两个目录&lt;br/&gt;例如：&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;path&lt;/span&gt; = D:\\learn\\Java\\MyEclipse\\MyEclipse &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt; CI\\dropins\\svn\\eclipse  或者&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;path&lt;/span&gt; = D:/learn/Java/MyEclipse/MyEclipse &lt;span class=&quot;hljs-number&quot;&gt;2017&lt;/span&gt; CI/dropins/svn/eclipse&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;安装方式3：在线安装&lt;br/&gt;在MyEcplise中点击Help --&amp;gt; Install from Site… --&amp;gt; Add… --&amp;gt; Location --&amp;gt; Next 等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装成功标志&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/38.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;h1112myeclipsesvn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.11.2、myeclipse svn插件使用&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h3 id=&quot;h112svn&quot;&gt;&lt;span&gt;&lt;strong&gt;1.12、svn 目录规范&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/39.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;trunk ，主线：用于存放程序整个进度&lt;br/&gt;branches ，分支，例如：bug修复、特殊功能等&lt;br/&gt;tags ，标签（版本），此目录下的内容不能修改&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/40.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;软件开发小图解示例：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pda372ac9.bkt.clouddn.com/41.png&quot; alt=&quot;&quot;/&gt;</description>
<pubDate>Sat, 11 Aug 2018 04:40:00 +0000</pubDate>
<dc:creator>黑泽明军</dc:creator>
<og:description>一、SVN 1.1、版本控制 1.1.1、什么版本控制？ 版本控制（Revision Control）：是维护工程蓝图的标准做法，能追踪工程蓝图从诞生一直到定案的过程。是一种记录若干文件内容变化，以便</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/9459401.html</dc:identifier>
</item>
<item>
<title>SpringBoot | 番外：使用小技巧合集 - oKong_趔趄的猿</title>
<link>http://www.cnblogs.com/okong/p/springboot-tips.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/okong/p/springboot-tips.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;最近工作比较忙，事情也比较多。加班回到家都十点多了，洗个澡就想睡觉了。所以为了不断更太多天，偷懒写个小技巧合集吧。之后有时间都会进行文章更新的。&lt;strong&gt;原创不易，码字不易&lt;/strong&gt;，还希望大家多多支持！话不多说，开始今天的技巧合集吧~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设置网站图标&quot;&gt;设置网站图标&lt;/h2&gt;
&lt;p&gt;原来我们在使用&lt;code&gt;tomcat&lt;/code&gt;开发时，设置网站图片时，即icon图标时，一般都是直接替换&lt;code&gt;root&lt;/code&gt;包下的&lt;code&gt;favicon.ico&lt;/code&gt;替换成自己的，或者在网页的头部设置&lt;code&gt;link&lt;/code&gt;的ref为&lt;code&gt;icon&lt;/code&gt;然后设置其&lt;code&gt;href&lt;/code&gt;值。而在&lt;code&gt;SpringBoot&lt;/code&gt;中，替换图片也是很简单的，只需要将自定义图片放置在&lt;code&gt;静态资源&lt;/code&gt;目录下即可，即默认有&lt;code&gt;static&lt;/code&gt;、&lt;code&gt;public&lt;/code&gt;、&lt;code&gt;resources&lt;/code&gt;、&lt;code&gt;/META-INF/resources&lt;/code&gt;或者自定义的静态目录下即可。&lt;/p&gt;
&lt;p&gt;目录结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/21175470.jpg&quot; alt=&quot;目录结构&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/22377559.jpg&quot; alt=&quot;效果&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;允许跨域访问&quot;&gt;允许跨域访问&lt;/h2&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;CORS是一个W3C标准，全称是&quot;跨域资源共享&quot;（Cross-origin resource sharing）。它允许浏览器向跨源(协议 + 域名 + 端口)服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单来说，跨域问题是可以通过&lt;code&gt;nginx&lt;/code&gt;来解决的，或者通过&lt;code&gt;jsonp(只支持get请求)&lt;/code&gt;来解决。而&lt;code&gt;SpringBoot&lt;/code&gt;中也提供了配置方法。&lt;br/&gt;0.利用&lt;code&gt;@CrossOrigin&lt;/code&gt;注解，可放至在类上或者方法上。类上代表整个控制层所有的映射方法都支持跨域请求。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@CrossOrigin(origins = &quot;http://blog.lqdev.cn&quot;, maxAge = 3600)
@RestController
public class demoController{

   @GetMapper(&quot;/&quot;)
   public String index(){
      return &quot;hello,CORS&quot;;
   }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1.配置全局&lt;code&gt;CORS&lt;/code&gt;配置。&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/1.5.15.RELEASE/reference/htmlsingle/#boot-features-cors&quot; title=&quot;官网&quot;&gt;官网&lt;/a&gt;也有给出实例，具体如下：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Configuration
public class MyConfiguration {

    @Bean
    public WebMvcConfigurer corsConfigurer() {
        return new WebMvcConfigurerAdapter() {
            @Override
            public void addCorsMappings(CorsRegistry registry) {      registry.addMapping(&quot;/api/**&quot;).allowedOrigins(&quot;https://blog.lqdev.cn&quot;);
            }
        };
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;独立tomcat运行&quot;&gt;独立Tomcat运行&lt;/h2&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;讲解了这么久，一般上我们都是通过jar包的方式进行启动的应用的。所以部署在独立的&lt;code&gt;tomcat&lt;/code&gt;时，需要如何解决呢？其实也简单，只需要将项目打包方式修改为&lt;code&gt;war&lt;/code&gt;包，然后修改下启动类配置即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;0.修改pom打包方式为&lt;code&gt;war&lt;/code&gt;，同时排除了内置的&lt;code&gt;tomcat&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;

&amp;lt;!-- 排除内置的tomcat --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-tomcat&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
&amp;lt;!-- 若直接有使用servlet对象时(这是废话，⊙﹏⊙‖∣)，需要将servlet引入，本例是没有的~ --&amp;gt;
       &amp;lt;dependency&amp;gt;
          &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;
          &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
       &amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1.改造下启动类，使其继承&lt;code&gt;SpringBootServletInitializer&lt;/code&gt;,同时覆盖&lt;code&gt;configure&lt;/code&gt;方法。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@SpringBootApplication
@Slf4j
public class ChapterApplication extends SpringBootServletInitializer{

    public static void main(String[] args) {
        SpringApplication.run(ChapterApplication.class, args);
    //    new SpringApplicationBuilder().sources(ChapterApplication.class).web(false).run(args);
    //之后这里设置业务逻辑 比如挂起一个线程 或者设置一个定时任务。保证不退出
        //不然它就是一个启动类，启动后就停止了。
        log.info(&quot;jar,chapter启动!&quot;);
    } 
    
    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
        log.info(&quot;外部tomcat,chapter启动!&quot;);
        return application.sources(ChapterApplication.class);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2.maven打包成war(&lt;code&gt;mvn clean install&lt;/code&gt;),然后放入tomcat中，启动运行即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/99998653.jpg&quot; alt=&quot;外部Servlet启动&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其实这样设置的话，在开发时直接运行启动类也还是可以直接运行的，方便.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/20869347.jpg&quot; alt=&quot;原始方式启动&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;启动不设置端口&quot;&gt;启动不设置端口&lt;/h2&gt;
&lt;p&gt;对一些定时任务服务项目，其本身只是提供一个定时调度功能，不需要其他服务调用，只是去调度其他服务。像这样的服务，正常也就不需要设置端口了。这时候&lt;code&gt;SpringBoot&lt;/code&gt;也是支持的。只需要改下启动方式：&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;new SpringApplicationBuilder().sources(ChapterApplication.class).web(false).run(args);
//之后这里设置业务逻辑 比如挂起一个线程 或者设置一个定时任务。保证不退出
//不然它就是一个启动类，启动后就停止了。&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;或者修改配置文件的属性：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;spring.main.web-environment=false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;最后效果，是不是没有看见端口了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/54581167.jpg&quot; alt=&quot;控制台&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;启动完成前进行业务逻辑&quot;&gt;启动完成前进行业务逻辑&lt;/h2&gt;
&lt;p&gt;利用&lt;code&gt;CommandLineRunner&lt;/code&gt;或者&lt;code&gt;ApplicationRunner&lt;/code&gt;可实现在&lt;code&gt;SpringApplication&lt;/code&gt;的&lt;code&gt;run()&lt;/code&gt;完成前执行一些业务逻辑&lt;/p&gt;
&lt;p&gt;0.修改启动类，实现&lt;code&gt;CommandLineRunner&lt;/code&gt;接口,&lt;code&gt;ApplicationRunner&lt;/code&gt;类似，只是&lt;code&gt;run&lt;/code&gt;的入参不同而已。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Override
    public void run(String... args) throws Exception {
        log.info(&quot;CommandLineRunner运行&quot;);
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1.运行应用，注意查看控制台输出：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/32524168.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然，直接申明一个&lt;code&gt;bean&lt;/code&gt;也是可以的。&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;@Configuration
@Slf4j
public class CommandLineRunnerConfig {
    @Bean  
    public CommandLineRunner runner(){  
      return new CommandLineRunner() {  
        public void run(String... args){  
            log.info(&quot;CommandLineRunner运行2&quot;);
        }  
      };  
    }  
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;若多个时，可设置&lt;code&gt;@Order&lt;/code&gt;来确定执行的顺序。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;动态修改日志级别&quot;&gt;动态修改日志级别&lt;/h2&gt;
&lt;p&gt;通过&lt;code&gt;org.springframework.boot.logging.LoggingSystem&lt;/code&gt;提供的api即可。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;loggingSystem.setLogLevel(null, LogLevel.DEBUG);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如，默认时是&lt;code&gt;info&lt;/code&gt;模式，未修改时，&lt;code&gt;debug&lt;/code&gt;模式是不会输出的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/82194936.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;动态设置后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/44121162.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;热部署&quot;&gt;热部署&lt;/h2&gt;
&lt;p&gt;前面讲了这么多章节，因为功能都很单一，所以一般上都是直接重启服务来进行更新操作。但当服务功能一多，启动速度缓慢时，还是配置个热部署比较方便。在&lt;code&gt;SpringBoot&lt;/code&gt;中，只需要加入一个&lt;code&gt;spring-boot-devtools&lt;/code&gt;即可&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;
        &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;题外话：这里的&lt;code&gt;&amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;&lt;/code&gt;是表示依赖不会传递，依赖了此项目的需要额外引入此包，若需要使用的话。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;若不生效，可试着在打包工具&lt;code&gt;spring-boot-maven-plugin&lt;/code&gt;下的&lt;code&gt;configuration&lt;/code&gt;加入&lt;code&gt;&amp;lt;fork&amp;gt;true&amp;lt;/fork&amp;gt;&lt;/code&gt;看看，具体配置项如下：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                  &amp;lt;fork&amp;gt;true&amp;lt;/fork&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;h2 id=&quot;自定义启动banner&quot;&gt;自定义启动Banner&lt;/h2&gt;
&lt;p&gt;看烦了自带的&lt;code&gt;Banner&lt;/code&gt;，动手修改一个属于自己的&lt;code&gt;Banner&lt;/code&gt;，提现逼格的时候到了~哈哈，以下是官网给的配置指南：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/44960524.jpg&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;文字形式&quot;&gt;文字形式&lt;/h3&gt;
&lt;p&gt;其实，替换很简单，只需要在&lt;code&gt;classpath&lt;/code&gt;路径下创建一个&lt;code&gt;banner.txt&lt;/code&gt;即可。具体的一些变量官网也有给出，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/20672206.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在我们就定制一个自己的&lt;code&gt;Banner&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&quot;txt&quot;&gt;
&lt;code&gt;  _              _   _                       _  __                          _ 
 | |            | | | |                     | |/ /                         | |
 | |__     ___  | | | |   ___         ___   | ' /    ___    _ __     __ _  | |
 | '_ \   / _ \ | | | |  / _ \       / _ \  |  &amp;lt;    / _ \  | '_ \   / _` | | |
 | | | | |  __/ | | | | | (_) |  _  | (_) | | . \  | (_) | | | | | | (_| | |_|
 |_| |_|  \___| |_| |_|  \___/  ( )  \___/  |_|\_\  \___/  |_| |_|  \__, | (_)
                                |/                                   __/ |    
                                                                    |___/     
                                 
${AnsiColor.BRIGHT_RED}
Spring Boot Version: ${spring-boot.version}${spring-boot.formatted-version}       &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/66912864.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;题外话：手输字符画是不太现实的，大家可通过一些网站进行快速生成。可自行搜索下，网上一搜一大把。&lt;/p&gt;
&lt;h3 id=&quot;图片形式&quot;&gt;图片形式&lt;/h3&gt;
&lt;p&gt;若觉得使用文字不够酷炫，当然也可以将图片设置为启动的&lt;code&gt;banner&lt;/code&gt;。目前支持的图片格式有&lt;code&gt;gif&lt;/code&gt;、&lt;code&gt;png&lt;/code&gt;、&lt;code&gt;jpg&lt;/code&gt;。使用也很简单，只需要命名为&lt;code&gt;banner&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;如将头像放入目录中，最后的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/54464544.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当然，若图片是有色彩的，也是可以的，对于太复杂的图片显示效果就不佳了，如下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/85334713.jpg&quot; alt=&quot;原图&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;banner效果图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/18-8-11/59004365.jpg&quot; alt=&quot;banner效果图&quot;/&gt;&lt;/p&gt;
&lt;p&gt;是不是很酷炫~&lt;/p&gt;
&lt;h2 id=&quot;相关资料&quot;&gt;相关资料&lt;/h2&gt;
&lt;p&gt;1、&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/1.5.15.RELEASE/reference/htmlsingle&quot; class=&quot;uri&quot; title=&quot;https://docs.spring.io/spring-boot/docs/1.5.15.RELEASE/reference/htmlsingle&quot;&gt;https://docs.spring.io/spring-boot/docs/1.5.15.RELEASE/reference/htmlsingle&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;本章节主要是简单的介绍了一些&lt;code&gt;SpringBoot&lt;/code&gt;的一些小技巧，一般上也就一句话或者一个注释、一句配置就解决问题的。写这篇文章时，又去翻了翻官网的指南，很不错，每次都去看都有新发现。以上有部分就是看了写下的。确实，在看官网时，一般上是需要了解哪些知识点，就搜索直奔主题了，还没有哪次是从头看的。有时间还是耐心的看一看，就是全是英文看的有点头疼，好在代码是看的懂的，⊙﹏⊙‖∣&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一点吐槽&quot;&gt;一点吐槽&lt;/h2&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;原本是想偷懒，发一点时间完成的。最后本着有图有真相且负责的原则，为了截图展现效果，实际操作了一遍，发现时间没有和写一篇正文来的少，好尴尬。。既然说了，就简单说下，接下来的章节会涉及的知识点吧。接下来还是&lt;code&gt;web开发相关&lt;/code&gt;,会介绍下&lt;code&gt;websocket&lt;/code&gt;相关知识点，这部分本人也不是很熟悉，估计写的也是简单入门的，也希望会来个聊天室的实践，加深下影响。说了&lt;code&gt;webSocket&lt;/code&gt;，那就不能把&lt;code&gt;Servlet3.0&lt;/code&gt;提供的&lt;code&gt;异步请求&lt;/code&gt;机制遗漏了，会介绍下原生的方式及&lt;code&gt;Spring&lt;/code&gt;提供的方式实现，对一些异常处理，比如超时等设置也会进行说明下，既然都说的&lt;code&gt;异步请求&lt;/code&gt;了，顺道也就讲下&lt;code&gt;异步调用&lt;/code&gt;的相关知识点吧。至于&lt;code&gt;Docker&lt;/code&gt;系列，鉴于本人也是初学者，写起来还是比较慢的，有时间就更吧~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;目前互联网上很多大佬都有&lt;code&gt;SpringBoot&lt;/code&gt;系列教程，如有雷同，请多多包涵了。本文是作者在电脑前一字一句敲的，每一步都是实践的。若文中有所错误之处，还望提出，谢谢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;老生常谈&quot;&gt;老生常谈&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;个人QQ：&lt;code&gt;499452441&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;微信公众号：&lt;code&gt;lqdevOps&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.xds123.cn/default/wxgzh8cm.jpg&quot; alt=&quot;公众号&quot;/&gt;&lt;/p&gt;
&lt;p&gt;个人博客：&lt;a href=&quot;http://blog.lqdev.cn/&quot; class=&quot;uri&quot; title=&quot;http://blog.lqdev.cn&quot;&gt;http://blog.lqdev.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;完整实例：&lt;a href=&quot;https://github.com/xie19900123/spring-boot-learning/tree/master/chapter&quot; class=&quot;uri&quot; title=&quot;https://github.com/xie19900123/spring-boot-learning/tree/master/chapter&quot;&gt;https://github.com/xie19900123/spring-boot-learning/tree/master/chapter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;http://blog.lqdev.cn/2018/08/11/springboot/springboot-tips/&quot; class=&quot;uri&quot;&gt;http://blog.lqdev.cn/2018/08/11/springboot/springboot-tips/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 04:31:00 +0000</pubDate>
<dc:creator>oKong_趔趄的猿</dc:creator>
<og:description>前言 最近工作比较忙，事情也比较多。加班回到家都十点多了，洗个澡就想睡觉了。所以为了不断更太多天，偷懒写个小技巧合集吧。之后有时间都会进行文章更新的。 原创不易，码字不易 ，还希望大家多多支持！话不多</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/okong/p/springboot-tips.html</dc:identifier>
</item>
<item>
<title>echarts - 特殊需求实现代码汇总之【线图】篇 - xing.org1^</title>
<link>http://www.cnblogs.com/padding1015/p/9459292.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/padding1015/p/9459292.html</guid>
<description>&lt;p&gt;&lt;span&gt;时间过得好快，刚刚还是7月底，一转眼自己调整（浪费）了大半个月的时间。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来要先总结一下自己之前的知识点，然后清掉自己的待办任务，重新轻装上阵！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;继7月24的echarts-柱图配置汇总后，echarts特殊配置连载第四篇 之 线图终于也被我这个懒家伙放出来了！&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;strong&gt;区域渐变&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114123524-1172666397.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实这种样式在官网的demo中有类似的效果，&lt;/span&gt;&lt;span&gt;像这个 &lt;a href=&quot;http://echarts.baidu.com/examples/editor.html?c=area-basic&amp;amp;theme=light&quot; target=&quot;_blank&quot;&gt;basic area chart&lt;/a&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;的，主要是线图下边的区域设置。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;起作用的是&lt;span&gt;  series(type=line) &lt;/span&gt;下的 &lt;span&gt;&lt;strong&gt;areaStyle&lt;/strong&gt;&lt;/span&gt;（我的字面理解是区域效果）属性的效果。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;而 &lt;strong&gt;渐变效果 &lt;/strong&gt;见另一个图表：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;http://echarts.baidu.com/examples/editor.html?c=line-tooltip-touch&amp;amp;theme=light&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;tooltip and DataZoom on Mobile&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在此有关于渐变的设置：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114336219-284086127.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;不过，在本例中我的最终实现代码为：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114347373-227022619.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;你会发现跟上边贴链接的渐变效果配置不一样，具体注解或者其他的区域填充样式，可以直接去配置项的这个位置查看&lt;/span&gt;：&lt;a href=&quot;http://echarts.baidu.com/option.html#series-line.areaStyle.color&quot; target=&quot;_blank&quot;&gt;┏ (゜ω゜)=☞&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;45&quot;&gt;
&lt;pre class=&quot;brush:javascript;collapse:true;;gutter:true;&quot;&gt;
&lt;span&gt;areaStyle: {
        normal: {
                color: {
                        type: 'linear',
                        x: 0,
                        y: 0,
                        x2: 0,
                        y2: 1,
                        colorStops: [{
                                offset: 0,
                                color: '#638FFF'
                        },
                        {
                                offset: 1,
                                color: 'rgba(248,65,126,0.90)'
                        }],
                        globalCoord: false
                }
        }
}
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;2. &lt;strong&gt;显示加百分号，并作小数点后两位百分比处理&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;同之前的那一篇博文一样，属于同一类问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实有了 &lt;span&gt;&lt;strong&gt;formatter&lt;/strong&gt;&lt;/span&gt; 回调函数，对展示文案的处理怎么都好说，就是js代码的组合拼装了其实。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体见另一片博文：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/padding1015/p/8625168.html&quot;&gt;&lt;span&gt;https://www.cnblogs.com/padding1015/p/8625168.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;配置项位置： &lt;a href=&quot;http://echarts.baidu.com/option.html#series-line.label.formatter&quot; target=&quot;_blank&quot;&gt;┏ (゜ω゜)=☞&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个formatter函数的参数，给了我们几乎所有的好用的值：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114519994-600431862.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114524994-2101510847.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;根据返回的参数，加工处理一下，就能得到我们想要的效果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114535853-1178601573.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 效果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114532576-748030006.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;54&quot;&gt;
&lt;pre class=&quot;brush:javascript;collapse:true;;gutter:true;&quot;&gt;
&lt;span&gt;option = {
        label: {
                show: true,
                formatter: function(params) {
                        return (params.data).toFixed(2) + '%'
                }
        },
        xAxis: {
                type: 'category',
                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
        },
        yAxis: {
                type: 'value'
        },
        series: [{
                data: [820, 932, 901.856, 934.78567, 1290.4, 1330, 1320],
                type: 'line',
                smooth: true
        }]
};
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;3. &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Solid模式的水平线&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;这个对于我来说的难题就是，后台只给我一个值，然后让我连成一条线。【微笑】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有点数学常识的，错，有点生活常识的都知道最起码两点成一线吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;而且在echats图标里，series下的多个对象，他们内部的data值数量应该对应，这样每一个x轴对应的点有数据，整条线才会充满整个x轴，否则就像下边这样：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114613193-1396444840.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;红线的data值数量小于蓝线的，所有红线看上去就短了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果只给我一个数，不用看也知道是下边这样一个点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114624888-917375049.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那我怎么才能让其连成一条和上边的线同等长度的直线呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那我怎么才能让其连成一条和上边的线同等长度的直线呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以我的榆木脑袋，能想到的只有把一个点繁衍成所有需要的点，形式就像这样：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114635278-389644158.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;复制多个直到和上边的数组长度相等。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;没办法，这个活我不干就得后端干。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;困扰我多年，如果各位看客知道ecahrts还有更好的解决办法，恳请指正。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;好了我的主题来了，这里四个520，其实已经是一条直线了，还要做&lt;span&gt;&lt;strong&gt;平均线&lt;/strong&gt;&lt;/span&gt;吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;要做，echarts的平均线很好看，这个四个相同数值画出来的直线没有那个效果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;于是，配置平均线的代码我这样写：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114647519-463450111.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;真正的主角是 &lt;span&gt;&lt;strong&gt;markline&lt;/strong&gt;&lt;/span&gt;，他会根据你的配置，自动计算data里边所有数值和的平均值，你只需要简单地配置就能生成一条美丽的平均线，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;默认平均线的线型是虚线，可以和css的border一样设置为solid（实线），以及颜色美化等都看自己的需要。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里我特地标注了&lt;strong&gt;symbolSize&lt;/strong&gt;，我设置为了0。&lt;/span&gt;&lt;span&gt;他的作用是将上文说的四个520（本文的多个2.6）形成的直线上，每个数值与x轴对应的点的大小设置为0。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不然data里多个数值形成的直线长这样，就像糖葫芦。很明显的能看出来，多个小圆点被直线穿过。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114700063-565390971.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将点的大小设为0，视觉上，线上就没有圆点了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后线的粗细也设置为最小，让其与平均线合二为一。就成了完美的平均线。（见下边的蓝色平均线）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其实红线也是平均线，红线上的黄色区域是我故意突出显示的线条。黄色线条就是多个相同数值连成的直线。如果没有平均线，线条的位置和长短大概就是黄线区域的样子。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114708683-1951038617.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/956663/201808/956663-20180811114712989-1215539957.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;111&quot;&gt;
&lt;pre class=&quot;brush:javascript;collapse:true;;gutter:true;&quot;&gt;
&lt;span&gt;option = {
        title: {
                text: '某地区蒸发量和降水量',
                subtext: '纯属虚构'
        },
        tooltip: {
                trigger: 'axis'
        },
        legend: {
                data: ['蒸发量', '降水量']
        },
        toolbox: {
                show: true,
                feature: {
                        dataView: {
                                show: true,
                                readOnly: false
                        },
                        magicType: {
                                show: true,
                                type: ['line', 'bar']
                        },
                        restore: {
                                show: true
                        },
                        saveAsImage: {
                                show: true
                        }
                }
        },
        calculable: true,
        xAxis: [{
                type: 'category',
                data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
        }],
        yAxis: [{
                type: 'value',
                splitLine: {
                        show: false
                }
        },
        {
                type: 'value',
                splitLine: {
                        show: false
                }
        }],
        series: [{
                name: '蒸发量',
                type: 'line',
                symbolSize: 0,
                markLine: {
                        data: [{
                                type: 'average',
                                name: '平均值'
                        }],
                        lineStyle: {
                                type: 'solid'
                        }
                },
                lineStyle: {
                        width: 0
                },
                data: [12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6, 12.6],
                smooth: true,
        },
        {
                name: '降水量',
                type: 'line',
                symbolSize: 0,
                markLine: {
                        data: [{
                                type: 'average',
                                name: '平均值'
                        }],
                        lineStyle: {
                                type: 'solid',
                                color: 'red'
                        }
                },
                data: [2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6],
                lineStyle: {
                        width: 20
                },
                yAxisIndex: 1
        }]
};
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2018-08-11  11:53:08&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 04:02:00 +0000</pubDate>
<dc:creator>xing.org1^</dc:creator>
<og:description>做数据可视化的页面时需要用到ecahrts图表，记录一些关于图表中线图的效果汇总。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/padding1015/p/9459292.html</dc:identifier>
</item>
<item>
<title>【Java入门提高篇】Day29 Java容器类详解（十一）LinkedHashSet详解 - 弗兰克的猫</title>
<link>http://www.cnblogs.com/mfrank/p/9459247.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mfrank/p/9459247.html</guid>
<description>&lt;p&gt;　　当当当当当当当，本来打算出去浪来着，想想还是把这个先一起写完吧，毕竟这篇的主角跟我一样是一个超级偷懒的角色——LinkedHashSet，有多偷懒？看完你就知道了。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811104139131-650910072.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　本篇将从以下几个方面对LinkedHashSet进行介绍：&lt;/p&gt;
&lt;p&gt;　　1、LinkedHashSet中的特性&lt;/p&gt;
&lt;p&gt;　　2、LinkedHashSet源码分析&lt;/p&gt;
&lt;p&gt;　　3、LinkedHashSet应用场景&lt;/p&gt;
&lt;p&gt;　　本篇预计需要食用10分钟，快的话五分钟也够了，完全取决于各位看官心情。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811104513321-802321742.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;LinkedHashSet中的特性&lt;/h2&gt;
&lt;p&gt;　　前面已经介绍过了HashSet，本篇要介绍的LinkedHashSet正是它的儿子，作为HashSet的唯一法定继承人，可以说是继承了HashSet的全部优点——懒，并且将其发挥到了极致，这一点在之后的源码分析里可以看到。&lt;/p&gt;
&lt;p&gt;　　LinkedHashSet继承了HashSet的全部特性，元素不重复，快速查找，快速插入，并且新增了一个重要特性，那就是有序，可以保持元素的插入顺序，所以可以应用在对元素顺序有要求的场景中。&lt;/p&gt;
&lt;p&gt;　　先来看一个小栗子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; LinkedHashSetTest {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        LinkedHashSet&lt;/span&gt;&amp;lt;String&amp;gt; linkedHashSet = &lt;span&gt;new&lt;/span&gt; LinkedHashSet&amp;lt;&amp;gt;&lt;span&gt;();
        HashSet&lt;/span&gt;&amp;lt;String&amp;gt; hashSet = &lt;span&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;&lt;span&gt;();

        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; 10; i++&lt;span&gt;) {
            linkedHashSet.add(&lt;/span&gt;&quot;I&quot; +&lt;span&gt; i);
            hashSet.add(&lt;/span&gt;&quot;I&quot; +&lt;span&gt; i);
        }

        System.out.println(&lt;/span&gt;&quot;linkedHashSet遍历：&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (String string : linkedHashSet){
            System.out.print(string &lt;/span&gt;+ &quot; &quot;&lt;span&gt;);
        }
        System.out.println();

        System.out.println(&lt;/span&gt;&quot;hashSet遍历：&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (String string : hashSet){
            System.out.print(string &lt;/span&gt;+ &quot; &quot;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;linkedHashSet遍历：
I0 I1 I2 I3 I4 I5 I6 I7 I8 I9 
hashSet遍历：
I9 I0 I1 I2 I3 I4 I5 I6 I7 I8 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可以看到，在HashSet中存储的元素遍历是无序的，而在LinkedHashSet中存储的元素遍历是有序的。嗯，它和HashSet就这唯一的区别了。&lt;/p&gt;
&lt;h2&gt;LinkedHashSet源码分析&lt;/h2&gt;
&lt;p&gt;　　那么问题来了，LinkedHashSet中的元素为什么会是有序的呢？难道也跟LinkedHashMap一样用了链表把元素都拴起来了？&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811110440955-1663595706.png&quot; alt=&quot;&quot;/&gt;别着急，让我们一起来看看源码。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; LinkedHashSet&amp;lt;E&amp;gt;
        &lt;span&gt;extends&lt;/span&gt; HashSet&amp;lt;E&amp;gt;
        &lt;span&gt;implements&lt;/span&gt; Set&amp;lt;E&amp;gt;&lt;span&gt;, Cloneable, java.io.Serializable {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = -2851667679971038690L&lt;span&gt;;

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 使用指定初始容量和装载因子构造一个空的LinkedHashSet实例
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; LinkedHashSet(&lt;span&gt;int&lt;/span&gt; initialCapacity, &lt;span&gt;float&lt;/span&gt;&lt;span&gt; loadFactor) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;(initialCapacity, loadFactor, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 使用指定的初始容量和默认的装载因子构造一个空的LinkedHashSet实例
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; LinkedHashSet(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; initialCapacity) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;(initialCapacity, .75f, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 使用默认的初始容量和默认的装载因子构造一个空的LinkedHashSet实例
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; LinkedHashSet() {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;(16, .75f, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 构造一个与指定集合有相同元素的空LinkedHashSet实例，使用默认的装载因子和能够容纳下指定集合所有元素的合适的容量。
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt; LinkedHashSet(Collection&amp;lt;? &lt;span&gt;extends&lt;/span&gt; E&amp;gt;&lt;span&gt; c) {
        &lt;/span&gt;&lt;span&gt;super&lt;/span&gt;(Math.max(2*c.size(), 11), .75f, &lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
        addAll(c);
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 可分割式迭代器
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Spliterator&amp;lt;E&amp;gt;&lt;span&gt; spliterator() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; Spliterators.spliterator(&lt;span&gt;this&lt;/span&gt;, Spliterator.DISTINCT |&lt;span&gt; Spliterator.ORDERED);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　你没看错，这应该是所有容器类中最短小精悍的了，这也就是开头为什么说这家伙懒到家的原因了。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811110430464-1287383346.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　可是，LinkedHashSet中并没有覆盖add方法，只是加了几个构造函数和一个迭代器，其他全部和HashSet一毛一样，为什么它就能有序呢？？&lt;/p&gt;
&lt;p&gt;　　玄机就藏在这个构造函数中，这几个构造函数其实都是调用了它父类（HashSet）的一个构造函数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
    HashSet(&lt;span&gt;int&lt;/span&gt; initialCapacity, &lt;span&gt;float&lt;/span&gt; loadFactor, &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; dummy) {
        map &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;&lt;span&gt;(initialCapacity, loadFactor);
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　嗯，这个构造函数跟其他构造函数唯一的区别就在于，它创建的是一个LinkedHashMap对象，所以元素之所以有序，完全是LinkedHashMap的功劳。该构造函数是默认访问权限的，所以在HashSet中是不能直接调用的，留给子类去调用或覆盖（讲道理使用protected权限不是更合理吗）。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811111103480-899102727.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;LinkedHashSet应用场景&lt;/h2&gt;
&lt;p&gt; 　　现在假设这样的场景，现在我有一堆商品，商品有名称和价格，但是里面有重复商品，我希望把重复的商品（名称和价格都一样的）过滤掉，只保留一个，并且希望输出后的顺序跟原来的顺序一致。嗯，这时候LinkedHashSet就派上用场了。（废话，那是你特意给主角加的戏&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811111843535-133672443.png&quot; alt=&quot;&quot;/&gt;）&lt;/p&gt;
&lt;p&gt; 　　商品的结构是这样的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Commodity {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Double price;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Commodity(String name, Double price) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.price =&lt;span&gt; price;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Double getPrice() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; price;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPrice(Double price) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.price =&lt;span&gt; price;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;Commodity{&quot; +
                &quot;name='&quot; + name + '\'' +
                &quot;, price=&quot; + price +
                '}'&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　来用LinkedHashSet解决一下这个需求：&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811113556400-1424015395.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CommodityTest {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;有7个商品，A和E、D和G信息完全一样，希望能过滤掉，只保留一个，C和F虽然名称一样，但是价格不同，希望保留&lt;/span&gt;
        Commodity commodityA = &lt;span&gt;new&lt;/span&gt; Commodity(&quot;Iphone6S&quot;, 6666.66&lt;span&gt;);
        Commodity commodityB &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;Iphone7&quot;, 7777.77&lt;span&gt;);
        Commodity commodityC &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;Iphone8&quot;, 8888.88&lt;span&gt;);
        Commodity commodityD &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;IphoneX&quot;, 9999.99&lt;span&gt;);
        Commodity commodityE &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;Iphone6S&quot;, 6666.66&lt;span&gt;);
        Commodity commodityF &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;Iphone8&quot;, 6666.66&lt;span&gt;);
        Commodity commodityG &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Commodity(&quot;IphoneX&quot;, 9999.99&lt;span&gt;);

        LinkedHashSet&lt;/span&gt;&amp;lt;Commodity&amp;gt; commodities = &lt;span&gt;new&lt;/span&gt; LinkedHashSet&amp;lt;&amp;gt;&lt;span&gt;();
        commodities.add(commodityA);
        commodities.add(commodityB);
        commodities.add(commodityC);
        commodities.add(commodityD);
        commodities.add(commodityE);
        commodities.add(commodityF);
        commodities.add(commodityG);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (Commodity commodity : commodities){
            System.out.println(commodity);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　输出如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
Commodity{name='Iphone6S', price=6666.66&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone7', price=7777.77&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone8', price=8888.88&lt;span&gt;}
Commodity{name&lt;/span&gt;='IphoneX', price=9999.99&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone6S', price=6666.66&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone8', price=6666.66&lt;span&gt;}
Commodity{name&lt;/span&gt;='IphoneX', price=9999.99}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811113745855-887035771.png&quot; alt=&quot;&quot;/&gt;翻...翻...翻车了？虽然输出的顺序与插入的顺序是一致的最后一个IphoneX和Iphone6S并没有被去掉，怎么回事呢？说好的可以去重呢？&lt;/p&gt;
&lt;p&gt;　　嗯，别慌，我既然可以让车翻过来，那就有办法让它再翻回去。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811113754372-787966444.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　想要利用LinkedHashSet自动去重性质，那么我们就要先理解它是怎样去重的，其实和HashSet是一样的，往里面添加元素的时候，其实是这样的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; add(E e) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; map.put(e, PRESENT)==&lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　所以当该元素在map中存在的时候，map.put方法就会返回旧值，此时add方法会返回false，在查找map中put元素的时候，会先调用hashCode方法得到该元素的hashCode值，然后查看table中是否存在该hashCode值，如果存在则调用equals方法重新确定是否存在该元素，如果存在，则更新value值，否则将新的元素添加到HashMap中，如果没有覆盖过hashcode方法，那么就会使用对象默认的hashcode，这个值跟对象成员变量的具体值就没有直接关联了，所以我们需要覆盖hashcode方法和equals方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Commodity {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Double price;

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Commodity(String name, Double price) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.price =&lt;span&gt; price;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getName() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; name;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setName(String name) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.name =&lt;span&gt; name;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Double getPrice() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; price;
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setPrice(Double price) {
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.price =&lt;span&gt; price;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;Commodity{&quot; +
                &quot;name='&quot; + name + '\'' +
                &quot;, price=&quot; + price +
                '}'&lt;span&gt;;
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; equals(Object o) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;this&lt;/span&gt; == o) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (o == &lt;span&gt;null&lt;/span&gt; || getClass() != o.getClass()) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        Commodity commodity &lt;/span&gt;=&lt;span&gt; (Commodity) o;
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; Objects.equals(name, commodity.name) &amp;amp;&amp;amp;&lt;span&gt;
                Objects.equals(price, commodity.price);
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; hashCode() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Objects.hash(name, price);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这里用的equals方法和hashCode方法是很通用的，在其他地方也可以使用类似的写法，现在再来重新跑一下程序看下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
Commodity{name='Iphone6S', price=6666.66&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone7', price=7777.77&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone8', price=8888.88&lt;span&gt;}
Commodity{name&lt;/span&gt;='IphoneX', price=9999.99&lt;span&gt;}
Commodity{name&lt;/span&gt;='Iphone8', price=6666.66}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　好的，现在已经达到我们想要的效果了。任务完成，午饭加个蛋。&lt;img src=&quot;https://images2018.cnblogs.com/blog/1043143/201808/1043143-20180811115254825-1829722124.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 11 Aug 2018 03:53:00 +0000</pubDate>
<dc:creator>弗兰克的猫</dc:creator>
<og:description>当当当当当当当，本来打算出去浪来着，想想还是把这个先一起写完吧，毕竟这篇的主角跟我一样是一个超级偷懒的角色——LinkedHashSet，有多偷懒？看完你就知道了。 本篇将从以下几个方面对Linked</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mfrank/p/9459247.html</dc:identifier>
</item>
<item>
<title>老邓重生记 - 程序老炮儿清道夫</title>
<link>http://www.cnblogs.com/limits/p/9459225.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/limits/p/9459225.html</guid>
<description>&lt;p&gt;     &lt;span&gt;上一篇博文写于六月十日，到今天刚好整整两个月，这两个月的时间我去鬼门关走了一遭，很庆幸的是我重生了，往往事情没有自己想得那么困难，下面我先说说我这两月的情况：6月4日因为肿瘤包裹住肝总动脉，手术方案确定不来，怕术中剥离肿瘤会造成大出血，所以华西的专家建议我回家修养一段时间再来手术，然而可怕的事情发生在7月3日，那天下午饭后感觉肚子不舒服，晚上八点突然出现腹部剧痛（每一次发起来都是持续性的剧痛，没有缓解得），当时我就在家人的陪伴下打车去了肿瘤医院（去华西急症的话等到止痛药两小时左右），当时在肿瘤医院打了杜冷丁做止痛，输了点液，第二天一早就直奔华西门诊，找到我上次住院的主管医生，找他开了入院手续，然后就排队等入院，但那天运气好，我的主管医生给科室和入院中心直接打了电话，那天很顺利的入院，入院后由于疼痛厉害在4号晚上又打了一针杜冷丁，后来做了一些相关的辅助检查后，确定了与7月10日手术，7月10日一早我被推进了手术室，在去手术室的路上我就在想，我能顺利的下手术台吗？进了手术室，躺在手术台上的我忐忑不安，时间8点40麻醉师把我麻醉后我就什么都不知道了，醒来后已是下午6点躺在重症监护室（全麻），那时候我流泪了，我身旁的护士问我怎么了，我说到：老师，我还活着？，护士答：你肯定还活着的啊，手术很成功的。我接着说到：很庆幸，我活着。后来切下来的肿瘤做了病检不是恶性的。于7月17日出院，目前还在换药中，另外腹部上的引流管也还没拔，要9月中旬才能拔（附上几张我住院的照片）。在这里要感谢园子里无私帮助我，给我鼓励的朋友，老邓在这里谢谢大家了，感恩你们。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/366535/201808/366535-20180811113428537-1330482664.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/366535/201808/366535-20180811113458637-1514122977.jpg&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/366535/201808/366535-20180811113529847-1292760627.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/366535/201808/366535-20180811113615655-564370175.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/366535/201808/366535-20180811113712262-1041450766.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;这是肝内胆管取出来的结石，也是引起肿瘤的祸&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;　　后记：我知道这是流水账，但这记录了我的重生，希望管理员不要从首页取消，希望园子的朋友从我身上记取教训，良好的生活规律，一定要吃早餐，一定要吃早餐，一定要吃早餐！！！不吃早餐会长结石。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 03:50:00 +0000</pubDate>
<dc:creator>程序老炮儿清道夫</dc:creator>
<og:description>上一篇博文写于六月十日，到今天刚好整整两个月，这两个月的时间我去鬼门关走了一遭，很庆幸的是我重生了，往往事情没有自己想得那么困难，下面我先说说我这两月的情况：6月4日因为肿瘤包裹住肝总动脉，手术方案确</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/limits/p/9459225.html</dc:identifier>
</item>
<item>
<title>毕业入职两个月-职场小白的碎碎念 - 墨小宇</title>
<link>http://www.cnblogs.com/danvic712/p/9458689.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/danvic712/p/9458689.html</guid>
<description>&lt;p&gt;&lt;strong&gt;　　毕业后加入现在的公司快有两个月了，有牢骚，有对自己的想法，如果文章的内容和你产生了共鸣，不胜荣幸，如果让你感到不爽，十分抱歉。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　从实习工作开始算起，工作也有一年半的时间了，18届的应届毕业生，母校是安徽的一家体量偏大型的上市IT公司下的民办本科院校，可能有人就会问了，安徽在哪？安徽有较大型IT上市公司？哈哈哈，反正就是一所不入流的本科院校的毕业生。从学校在编程这方面的教学内容以及自己实习经历来看，虽然自己的学历不如别的学校的毕业生，但自己的在毕业后从事.NET的毕业生里，能力应该能排中等吧，哈哈哈，迷之自信。&lt;/p&gt;
&lt;p&gt;　　大二小学期决定自己的专业方向是.NET后，也就认定自己如果以后从事程序员这个行当，会一直坚持去做.NET，虽然，国内.NET的生态环境现在不怎么好，可是我还是想坚持下去，毕竟这也算我除了喜欢阿森纳，每天给手机充电之外坚持最长的事情了吧。之后，学习、写代码，一股脑的塞入许多理解的不透彻概念，准备着学校为我们提供的实习工作的招聘，当然，因为院校档次的缘故，愿意来学校招聘的公司绝大多数都是那种中小型的公司，还是觉得很幸运的吧，因为学校背后公司和一些大型的公司有合作（我猜的），还是请到了几家国内某些领域排名靠前的公司来我们学校招实习生，哈哈哈，毕竟如果真是校招的话，我们的简历一定第一批就被刷下去了。后来，我被一家做信息化系统的公司录入了，虽然公司不大，能够做.NET，还是很满足的。从2016年12月26号开始，我开始了自己工作的经历。&lt;/p&gt;
&lt;p&gt;　　从12月26号开始，到今年5月初因为毕业设计真的写不完了辞职回校准备毕业的事情，虽然中途换过一家公司，可是还是坚持了自己从事.NET开发的目标。这一年多的实习期间，从最开始的用Web Form做企业信息化系统，到后来去到一家A轮的互联网公司用MVC做互联网项目，一直从事的B/S开发，也认定自己以后期望的方向是从事.NET的B/S开发，当然，做接口自己也能接受，嗯，这也为自己毕业后加入现在的公司埋下了引线。写毕业设计的时候，突然脑子一热，看到.NET Core 2.0的文章也挺多的了，之后.NET的方向肯定也会逐步转移到.NET Core，索性自己边学NET Core，边将自己还没完成的毕业设计用ASP.NET Core MVC重写，哈哈哈，简直了，虽然最后删了很多的功能，幸好最后还是写完了，具体的可以看看我在园子里的这篇文章，欢迎给出意见，链接地址：&lt;a href=&quot;https://www.cnblogs.com/danvic712/p/9349583.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/danvic712/p/9349583.html&lt;/a&gt;，里面也有自己毕业设计的代码git地址。在写这个项目的时候就感觉，.NET Core真的写起来比传统的.NET项目来说更加的令人舒服，呃，反正差不多就是这样的意思，如果自己毕业后进入的公司能够从事.NET Core的开发，那真是极好的。&lt;/p&gt;
&lt;p&gt;　　因为自己之前实习的公司都是那种小型的公司，投简历的时候，默认选择那种稍微大型点的公司，嗯，典型的得不到的永远在骚动。其实，真正面试的，也就两家，两家都在合肥，一家是做医疗信息化的，一家是做投资的公司，后面的那家需要很快就入职，面试时得知产品也准备使用.NET Core做开发了，但是因为自己想毕业后才入职，结果就不了了之了，最终，选择了第一家面试的公司。现在想想，如果当时去了第二家，会不会比现在好点。&lt;/p&gt;
&lt;p&gt;　　毕业后，体检、入职，就加入了这家做医疗信息化的公司，因为之前面试时得知，自己入职后的主要工作是从事web service接口开发，结果入职那天被用人组组长领下去后才发现，好像和我想象的不一样。组长和我说，我们部门需要先从事delphi，后期再转入接口开发，你先和之前来的那些新员工一起学习delphi，熟悉业务吧。嗯，好的，先学delphi，不对，delphi是什么。。。。&lt;/p&gt;
&lt;p&gt;　　从入职之后开始，先学delphi，然后熟悉his的业务、表结构，越来越觉得不爽，我是写C#的啊，不是说做接口的吗，熟悉业务这个我能理解，一直写delphi干嘛，我们用的这个版本his早被C#重构了啊？！！！可能对于我这种用惯VS的人来说，换一个IDE，突然发觉，哇，怎么现在还有这么难用的东西，慢慢的觉得，不会我这几年要一直做这个吧，我不想写delphi啊，我是要做.NET的啊！！！&lt;/p&gt;
&lt;p&gt;　　慢慢的心里就有了想要离职的念头，可是，又觉得我入职还没一年，甚至试用期都没过完，对于后面的找工作会不会不太好，也就压下了这种想法。上周，按例我们几个新员工和组长汇报自己的学习计划，汇报最后，我们组长说了我们部门老大对我们的想法，说需要我们先从医保组开始做起，等把业务真正的完全熟悉后，后面再转入接口组的开发工作，而对于医保接口的开发，则是要使用delphi。突然心里就各种卧槽，也就是说我需要做很长时间的delphi？！！！汇报结束回到自己的座位时，发现我们部门的一个我们学校的学长他好像也是一直在做delphi（因为工位离得比较远，才发现。。。），再看看自己部门群里的工作交流，和之前认识的一个部门同事，他们好像主要的工作还是用delphi，那个认识的同事，入职快两年了，也是一直做delphi，想了下，也就是说，可能至少两三年内，我都要主要做delphi，运气好的话，可能会接触到C#，哇，这真的与我对自己的规划不一样啊！！！&lt;/p&gt;
&lt;p&gt;　　想了想，我还是准备离职，不管别的什么了，我和别人说过这件事，有的人支持我，有的人直接说我脑子有坑，说我你一个那么渣的本科毕业证，有家上市公司愿意要你，现在只是学习，每个月又有工资，天天想那些乱七八糟的干什么，可是，我还是觉得，既然我不能选择不工作，而且我选择了程序员这个行业，我还是想做让自己稍微开心点的，我还是想做.NET 的B/S开发，嗯，就这么简单。&lt;/p&gt;
&lt;p&gt;　　因为也有很长时间没有没有碰.NET的B/S开发了，很多东西也忘的差不多了，就算现在出去面试的话，估计很多问题也答不上来，无奈，还是决定先看看之前的代码，复习复习基础知识，找回之前写B/S的那种感觉吧，笑哭。之前说的学习ASP.NET Core WebAPI也卡在了一个问题上了，现在写好的代码没办法写完一篇文章，也就只能问问别的大佬，寻求解决方案了。&lt;/p&gt;
&lt;p&gt;　　baba了那么多，希望这段时间过了，自己能找到自己想从事的工作，自己学习中遇到的问题也能解决吧。如果在看到这篇文章的合肥的博友所在的公司做.NET的B/S开发，并且有招新人的打算的话，可以稍微丢丢的考虑下我，虽然我的学历可能没办法符合你们公司的要求，但是我面向谷歌编程超6的啊，哈哈哈，开玩笑。&lt;/p&gt;
&lt;p&gt;　　嗯，加油~~~&lt;/p&gt;
</description>
<pubDate>Sat, 11 Aug 2018 03:48:00 +0000</pubDate>
<dc:creator>墨小宇</dc:creator>
<og:description>毕业后加入现在的公司快有两个月了，有牢骚，有对自己的想法，如果文章的内容和你产生了共鸣，不胜荣幸，如果让你感到不爽，十分抱歉。 从实习工作开始算起，工作也有一年半的时间了，18届的应届毕业生，母校是安</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/danvic712/p/9458689.html</dc:identifier>
</item>
<item>
<title>终于入门 - 唯心、tt</title>
<link>http://www.cnblogs.com/weixin-tt/p/9459127.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/weixin-tt/p/9459127.html</guid>
<description>&lt;p&gt;&lt;strong&gt;　　前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;这是一个渣渣专科的菜鸟，学习编程近一年的感悟。&lt;/p&gt;
&lt;p&gt;　　　　终于找到了一份我满意它，它也满意我的工作了，近一年的学习，我终于快入门了。想写下自己这一路来的心路历程与感受，希望可以给后来者一些心灵上的激励。&lt;/p&gt;
&lt;p&gt;　　　　之前准备每次面试完都写个总结的，然而我低估的面试失败对我的打击……那会心态很崩，想想还是面到了再写。&lt;/p&gt;
&lt;p&gt;　　　　先说结论&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;关于java学习&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;不管选不选择培训，自学都是最重要的事情。入门书籍，我觉得head first java就挺好。如果看这之前看过一本从入门到精通之类的书，看起来会更简单。也不需要细读，粗读一遍就好。&lt;/p&gt;
&lt;p&gt;　　　　还有各种论坛，各种公众号，都要去看。最好选个好的技术群进去（问问题能有人回答，而不是整日灌水，毫不讨论技术的。我觉得 码农翻身 就挺好）。&lt;/p&gt;
&lt;p&gt;　　　　当开始去搜索时，各种各样的学习方法，学习路径就会被发现，找到最适合自己的一种吧！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　关于培训&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;从我自己亲身经历的感受来说，在培训机构&lt;strong&gt;确实靠谱，&lt;/strong&gt;需要你自己去花时间去亲自到各个培训机构里转一转，去找培训过的朋友什么的问一问。&lt;/p&gt;
&lt;p&gt;　　　　然后需要自己有这个思想觉悟了。在那学习时，看到不少人上自习时在那边或睡觉或干自己的事情……这显然是觉悟不到家啊！&lt;/p&gt;
&lt;p&gt;　　　　至于说培训和自学之间的抉择，那会我也纠结了许久，主要看自己的选择吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;　　然后说下培训的好处与坏处吧，我认为的&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;strong&gt;坏处&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　　&lt;/strong&gt;　1、钱，2万块，比以前上学时的学费贵多了。&lt;/p&gt;
&lt;p&gt;　　　　　　　　2、时间，将近6个月的学习，如果机构很坑的话……&lt;/p&gt;
&lt;p&gt;　　　　　　　　3、每天早起？会给自己仍然是学生的错觉？&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;strong&gt;好处&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　　　　　&lt;/strong&gt;1、环境，学习氛围说实话，真的挺好，一个班里的人全在学一个东西，别人都在学，你自然会不由自主的学了。我以前从未如此清晰的感觉过这种氛围。&lt;/p&gt;
&lt;p&gt;　　　　　　　　2、人，会认识20多个人，总有几个跟你玩的挺好的吧！而且这20多人大多是会进入这个行业的。在我们培训结束，找工作的那段时间里，每晚几个人开着语音，分享面试题，吐槽公司、面试官……&lt;/p&gt;
&lt;p&gt;　　　　　　　　3、教员，教员是真的挺好，在我专科与接本时的那些老师，有这个教员一半水平与负责的，都寥寥无几，是我近几年遇到过的最好的老师。&lt;/p&gt;
&lt;p&gt;　　　　　　　　4、面试机会，这边有个就业部，整天出去和企业拉关系，这样就每天都可以给学员推 “真实简历“的机会。班里20多人，每周每人都有个三次面试机会吧，偶尔还会有企业来这边做招聘会，我就是在这种招聘会上面上的。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;关于是否包装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;一开始那老师说，让我们别写培训经历，我很疑惑，明明是自己的真实经历，为什么不能写？而且我在这学的也挺好，这边教的也挺好啊？然后事实是我好像做错了。&lt;/p&gt;
&lt;p&gt;　　　　我以为包装肯定会被看出来，然而那些包装过一小下的去面试，那些面试官也并不能看出来的样子。&lt;/p&gt;
&lt;p&gt;　　　　还是包装吧，包装了至少有面试机会，好多同学包装了，第一周每天都2.3场面试机会，一周面10多家，基本上一周就找到了工作。而我莫名其妙的不敢包装，2周自己投的，要我去面试的才2家。要不是学校这边推推，真的就绝望了……&lt;/p&gt;

&lt;p&gt;　　&lt;strong&gt;下面就是我的流水账了……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　实习经历&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　最后一年的学校生活并不能让我继续咸鱼下去了，学校每周只上一节课。逼着人想办法出去工作。继续我的站商场兼职，还是再找个卖体力的？要那点钱有什么用呢。在家人的推荐下，白菜价的去一家创业公司里当软件测试，也是挺感谢这家公司了，毕竟我那会什么都不会。&lt;/p&gt;
&lt;p&gt;　　　　那会焦虑了许久，在知乎上看了不少鸡汤，看到了“虫师”的博客，他现在是测试大牛了，都开起了网上培训班。发现他一开始好像也是步步艰难。又发现了一个叫 stormzhang 的人，也是测试起家，一开始和他女友到上海，公交车都舍不得坐。我突然发现我也没有那么的惨，至少我还能坐得起公交。&lt;/p&gt;
&lt;p&gt;　　　　然后我发现了 python 语言，都说它简单，易入门，适合做新手的入门语言。然后我发现了“小甲鱼”的 python 课程，在B站。又找到了个叫 “cross编程教室” 的公众号，加了个QQ群，一开始还有不少人在说话，还有40多岁人励志学编程的，现在已经成死群了。&lt;/p&gt;
&lt;p&gt;　　　　那会下了本 “和孩子一起学编程” 的电子书，感觉每天无聊的功能测试、写文档之外最开心的事，就是中午午休时插着耳机，边听着网易云给我推荐的歌，边打开那本电子书，开开编译器对着敲代码的时光。&lt;/p&gt;
&lt;p&gt;　　　　以前在学校那么多年，都没看到过这些人。但当我开始主动的去搜索，去找这些大牛时，这些大牛就一个又一个的被找出。他们的经历让我看到了希望。&lt;/p&gt;
&lt;p&gt;　　　　后来我发现软件测试这个工种，特别是功能测试，很容易被替代。这不是我想要的，我要做开发，我想学编程。正好那公司在和那机构合作，考虑了一段时间，去吧。&lt;/p&gt;
&lt;p&gt;　　　　在我有点心疼2万块，想在家自学时。我妈跟我说 “这点钱有什么的呢？以前给你上各种兴趣班的钱可比这个多多了，上吧，能学到东西就行。最不济不就2万块打水漂吗！“&lt;/p&gt;
&lt;p&gt;　　　　想起以前小学中学时上各种课外辅导班，无比厌烦，讨厌学习，实在是有点不应该；在别人家的孩子都上班挣钱，我还得靠家里出钱……&lt;/p&gt;
&lt;p&gt;　　　&lt;strong&gt;培训经历&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　1月到7月，6个月的培训。教员是个30多岁的人，10年工作经验说是，然后说有点受不了加班的压力，出来当个教员，打打太极，每天乐呵呵。他身上的乐观精神也感染了我们，让我学到了一种乐观的精神。无法改变生活，改变自己也很难，但至少能改变自己的心态。他的口头禅就是 “没事诶，这个简单。”&lt;/p&gt;
&lt;p&gt;　　　　刚开始休息时，我还喜欢看小说，毕竟看了很多年，难改了。直到我打开了起点里的 “本章说”，很快，很多小说我就都弃了。&lt;/p&gt;
&lt;p&gt;　　　　虽然开始时发愤图强，想要坚持学习，学好技术。然而总会懈怠。就和亲朋好友说会话，玩会游戏之类。放松过后，再去学，就又有了动力一般。&lt;/p&gt;
&lt;p&gt;　　　　培训班里的人，从一开始28人，走了4、5个，学不下去了。又来了2个线上转线下的。然后到了做班级项目，用servlet+jsp做，做的人是真滴痛苦~&lt;/p&gt;
&lt;p&gt;　　　　每天都觉得很痛苦，一天干了很少的事却感觉很累的样子，直到最后几天才像开窍一样，做出来好多东西。前台页面改了好多次，数据库的表重新设计过好几次。&lt;/p&gt;
&lt;p&gt;　　　　然而做完后，评比完，突然想再做一回。&lt;/p&gt;
&lt;p&gt;　　　　也终于让我感受一次 “学霸” 的滋味，被人问问题的感觉真的挺好，然而慢慢的，当别人总问我百度一下就能解决的问题时，我也懒得说话了。突然明白以前加了个叫 “码农翻身”的群时，问一些傻子问题为什么没人回答了。&lt;/p&gt;
&lt;p&gt;　　　　码农翻身这个公众号里的文章，是我每天上下课，80多分钟路程上的读物。它也是我能 “戒掉“ 小说一部分的动力吧。让人像看小说一样的理解了技术。&lt;/p&gt;
&lt;p&gt;　　　&lt;strong&gt;面试经历&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　7月底，课程结束。我们开始投简历。在包不包装这个问题上，我旁边那整天问我 “傻子问题“ 的同桌说：“ 我傻了才写培训经历啊！我才不写！”然而我就是那种傻子。就看着别人每天都能面2、3场面试，包装这种事情，也是越早越好的，一开始我没敢，到后来我就越来越不敢了……幸好还有个就业老师，每周能给我推个三次机会。我就把每场面试，当成最后一次面试机会。然而老师给我推的基本上也都是些小公司。&lt;/p&gt;
&lt;p&gt;　　　　第一家离我家近，说是做数据分析的，我听了后很感兴趣，还说了个前段时间一个技术大牛把疫苗事件的数据给可视化的事情。那面试官跟我说，这个不难，有机会我教你。那次答得也挺好，他说明天就给我答复。我以为稳了，结果……&lt;/p&gt;
&lt;p&gt;　　　　第二家，做政府项目说是，小公司，面试官打电话打了50分钟，3个人在外面等着。进他们会议室，一个服务器放地上嗡嗡嗡的，哇！头皮发麻！然后好像快到饭点的样子，他也迫不及待的5分钟面一个面完了。&lt;/p&gt;
&lt;p&gt;　　　　第三家，看上去很大，也是做政府项目的，笔试题上写 “如何教会不懂电脑的人玩转我司产品。共享文件怎么共享？”然后面试时就是问笔试题，问除了上面写的那种，你还知道几种方法……&lt;/p&gt;
&lt;p&gt;　　　　第四家，我自己投的让我去的，把机构发的面试宝典背的比我们还熟练，笔试题也全是面试宝典上的。无语……然后和我纠结重写与重载的区别，玩文字游戏，最后说，我们这3年经验才给8000，一年的最多给4000.。&lt;/p&gt;
&lt;p&gt;　　　　……&lt;/p&gt;
&lt;p&gt;　　　　有次早上去机构，老师说给你推了个需要1年经验的，他家公司不在乎这个，只要技术好就可以，你敢去吗。我不太敢……我说我怕把你的合作企业搞黄了。然而晚上5.30有场面试，漫长的白天无所事事，也无处可去……坐在地铁站的椅子上就在想，这些人为什么看不起培训班的，不给面试机会啊！你自己家的孩子不也是从小就各种辅导班吗？又恨自己胆小，不敢包装。许多学的不太好的，包装一下也进去工作了。而我学的还算可以，却苦于没有面试机会。又想起看过的那些 “鸡汤话” 成功人总能即时调整心态，抱怨没有任何作用……&lt;/p&gt;
&lt;p&gt;　　　　也算是运气好吧！正好有个中型的企业来机构招聘，我前面的人出来说 “什么鬼啊！问我什么设计模式！” 或是 “他问我多线程，我说我们课上没学过。” 我突然觉得我有了一丝丝机会。&lt;/p&gt;
&lt;p&gt;　　　　终于遇到问我擅长部分的面试了！真的很激动。java方面的基础，真滴开心。下周一可以入职，接下来就是试用期。&lt;/p&gt;
&lt;p&gt;　　　　学了近一年，我终于入了软件门！感悟就是，技术可能改变的很慢，说话方式思维方式也一时半会改不了了。但可以改变自己的心态。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;努力不一定成功，但不努力真的很舒服。但问题是人不能只活在当下啊，我不想因为房车钱这种东西，而放弃一段感情。面向对象编程。&lt;/p&gt;
&lt;p&gt;　　　　虽说孤独是人的常态，但我觉得， 有一群人向着一个目标努力，有人知晓你的梦想并支持你，才会有自己的自我激励。&lt;/p&gt;
&lt;p&gt;　　　　感谢在我迷茫时，我看到过的那些文章，给了我继续学习的动力与希望。&lt;/p&gt;


</description>
<pubDate>Sat, 11 Aug 2018 03:35:00 +0000</pubDate>
<dc:creator>唯心、tt</dc:creator>
<og:description>前言 这是一个渣渣专科的菜鸟，学习编程近一年的感悟。 终于找到了一份我满意它，它也满意我的工作了，近一年的学习，我终于快入门了。想写下自己这一路来的心路历程与感受，希望可以给后来者一些心灵上的激励。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/weixin-tt/p/9459127.html</dc:identifier>
</item>
<item>
<title>项目微管理29 - 转正 - 沙场秋点兵</title>
<link>http://www.cnblogs.com/dxy1982/p/9458690.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dxy1982/p/9458690.html</guid>
<description>&lt;p&gt;说起来，考核其实是一类活动的统称了，中国的历史上也由来已久，大家非常熟悉的各种选拔人才的制度中非常关键的一项就是“考核”，还有现在大家熟知的“考试”、“考证”、“考评”，其实都是属于这个范畴，它们在本质上并没有什么不同。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;考核是定位和排名&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;考核从本质上来说，都是要解决一个问题：那就是衡量一个人在一个方面的成果，然后给他一个定位和排名。&lt;/p&gt;

&lt;div&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811105507046-2006277820.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;在四代参加工组前，学习和生活基本都是在准备考试和考试中渡过的。接近二十年的考试经历给四代留下了不可磨灭的记忆，尤其是翻来覆去的考试制度改革。&lt;/p&gt;

&lt;p&gt;在四代的记忆中，几乎每过几年，中考，尤其是高考就要进行改革，而改革的重点都是围绕“应试教育”与“素质教育”的争论展开的。到底什么是“应试”和“素质”？&lt;/p&gt;

&lt;p&gt;以前，四代一直认为它们对比很明显，高下也一目了然：“应试”纯粹是填鸭式的教学，一切学都是为了考；“素质”则是强调素质重于分数，分数不代表一切。不过当经历了一些事情以后，四代又对它们一头雾水：分数到底需不需要？如果不用分数，到底如何提高和考评素质呢？&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811105757519-2100477015.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;即使是在工作以后，各种考证仍然充斥在四代的周围，对此，四代一直相当排斥，心里也一直充满不屑，所以四代自打毕业起，除了考驾照，别的没有考取任何的证书，包括前几年炙手可热的PMP证书。&lt;/p&gt;

&lt;p&gt;除了证书外，四代接触到的最频繁的就是每个公司搞的Performance Review，也就是绩效考核，大家对这个都很重视。不过，对于转正考核这件事，大多数公司处理的都很简单，基本上只要不是做不了事，就能正常转正。&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811110004133-802201066.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;这件事四代也考虑了很久，觉的还是加一个明确的考核可能比较好点，这样能让新人的目标感强一点，因为新人毕竟还不是正式的员工，对于公司正常的目标管理可能会有点陌生，所以不能按照考核正式员工那样的方式来考核。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;试用期考核&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;那么如何考核试用期的员工呢？特别是新员工一般在入职以后，都会刻意表现的情况下？&lt;/p&gt;

&lt;p&gt;四代考虑了很久，那就不如搞开放式的考核吧，四代在经过许多次的否定之后，最终把题目定在了产品本身，毕竟程序员做好产品才是最重要的，别的都是扯淡。&lt;/p&gt;

&lt;p&gt;考核的第一部分集中在产品本身，四代最终把题目确定为：“对软件的修改建议”，时间1个小时左右。&lt;/p&gt;

&lt;p&gt;最终选择这个题目，四代是这么考虑的：试用期结束后，新人就要正式深入的参与到团队的日常工作中，所以在转正前，如果能尽最大的可能让新人熟悉软件的各个方面，那无疑对整个团队都是有好处的，而要对软件提出修改建议，他就必须要尽量熟悉软件所有主要功能和实现方式，否则他提不出建议。&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811111359862-291478258.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;建议有无限可能，就看新人是否真的用心投入了。&lt;/p&gt;

&lt;p&gt;另一个方面，有了建议以后，他还必须要以PPT的形式展示出来，同时完成和四代交互的过程，这个过程逼得他必须要好好准备转正考核，否则很容易不合格。同时，精心准备PPT和分享又能展示他对沟通技能的运用。&lt;/p&gt;

&lt;p&gt;考核的第二部分集中在产品周边，四代把题目确定为：“完成软件的一个辅助工具的研发”，时间大概是1个月左右。&lt;/p&gt;

&lt;div&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811110238124-362010064.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;四代也考虑过，在试用期内，确实可以让新人立即参与到正常的开发中来，这样做固然可以帮助团队更快的推进开发的速度，但是也有可能会迟滞开发的进度，因为有人要负责带他，关键是他还不一定能通过考核留下来。&lt;/p&gt;

&lt;p&gt;所以四代觉得，在这样的情况下，不如让他进行一些周边工具的开发，让他逐渐了解团队的风格和成员，如果最后能通过考核并留下，那么开始介入正常开发，这个时候由于已经熟悉了人和事，研发也会顺利一些。最后如果不能留下，他开发的不过就是一些配套工具，也不会留给团队太多产品上的坑，即使有坑，也只是内部用的，可以逐渐完善。&lt;/p&gt;

&lt;p&gt;不过这一项考核不是每次都能实施，因为并不是任何新人入职的时候都有这样的工具需求。&lt;/p&gt;

&lt;p&gt;通过这样一些考核，新人不仅能深入的了解软件和程序，四代还能深入的了解新人各个方面的能力，比如阅读代码的能力，学习新东西的能力，与人沟通的能力，性格等等，足够有意义了。&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811111423338-931628252.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;调整了试用期工作流程，确定了试用期结束后的考核内容，一切看起来似乎很完美，不过四代心里确实忐忑不安，实际这么实行会不会有问题呢？四代从各个方面初步分析后，觉的应该没事，那么接下来就是等待实施，然后接受反馈了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;管理者最头痛的事登场&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;回过头来看，如果说转正的考核还比较简单的话，那么如何去全面的考核团队中每个人的工作，就是一件无比麻烦的事情了。四代想，这件事几乎是每个公司每个部门每个主管最头痛的事情了，因为这件事涉及到实际利益的分配，一旦处理不好，可能会带来大面积的负面效应。&lt;/p&gt;

&lt;div&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/109061/201808/109061-20180811111607904-188551563.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;对应于“应试”与“素质”之争，当前流行的员工考核制度，大致相当于“KPI”与“OKR”之间的关系吧（虽然不准确，但是先这么认为），都是前者强调关键数据考察，后者强调主观参与。那么它们之间到底是个什么关系呢？&lt;/p&gt;

</description>
<pubDate>Sat, 11 Aug 2018 03:31:00 +0000</pubDate>
<dc:creator>沙场秋点兵</dc:creator>
<og:description>转正考核那些事</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dxy1982/p/9458690.html</dc:identifier>
</item>
</channel>
</rss>