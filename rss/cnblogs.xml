<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>从源代码到Runtime发生的重排序 - 钟绍威</title>
<link>http://www.cnblogs.com/wewill/p/8086375.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wewill/p/8086375.html</guid>
<description>&lt;p&gt; 源代码和Runtime时执行的代码很可能不一样，这是因为编译器、处理器常常会为了追求性能对改变执行顺序。然而改变顺序执行很危险，很有可能使得运行结果和预想的不一样，特别是当重排序共享变量时。&lt;/p&gt;
&lt;p&gt; 从源代码到Runtime需要经过三步的重排序：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/CC84D7738F0248F1B33E395EC5934945?method=download&amp;amp;shareKey=c7457c11dcae9bf05cebe8c1749d23be&quot; title=&quot;重排序过程&quot; alt=&quot;重排序过程&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;编译器重排序&quot;&gt;编译器重排序&lt;/h2&gt;
&lt;p&gt; 为了提高性能，在不改变单线程的执行结果下，可以改变语句执行顺序。&lt;/p&gt;
&lt;p&gt; 比如尽可能的减少寄存器的读写次数，充分利用局部性。像下面这段代码这样，交替的读x、y，会导致寄存器频繁的交替存储x和y，最糟的情况下寄存器要存储3次x和3次y。如果能让x的一系列操作一块做完，y的一块做完，理想情况下寄存器只需要存储1次x和1次y。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;//优化前
int x = 1;
int y = 2;
int a1 = x * 1;
int b1 = y * 1;
int a2 = x * 2;
int b2 = y * 2;
int a3 = x * 3;
int b3 = y * 3;

//优化后
int x = 1;
int y = 2;
int a1 = x * 1;
int a2 = x * 2;
int a3 = x * 3;
int b1 = y * 1;
int b2 = y * 2;
int b3 = y * 3;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;指令重排序&quot;&gt;指令重排序&lt;/h2&gt;
&lt;p&gt; 指令重排序是处理器层面做的优化。处理器在执行时往往会因为一些限制而等待，如访存的地址不在cache中发生miss，这时就需要到内存甚至外存去取，然而内存和外区的读取速度比CPU执行速度慢得多。&lt;/p&gt;
&lt;p&gt; 早期处理器是顺序执行(in-order execution)的，在内存、外存读取数据这段时间，处理器就一直处于等待状态。现在处理器一般都是乱序执行(out-of-order execution)，处理器会在等待数据的时候去&lt;strong&gt;执行其他已准备好的操作&lt;/strong&gt;，不会让处理器一直等待。&lt;/p&gt;
&lt;p&gt; 满足乱序执行的条件：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;该缓存的操作数缓存好&lt;/li&gt;
&lt;li&gt;有空闲的执行单元&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt; 对于下面这段汇编代码，操作1如果发生cache miss，则需要等待读取内存外存。看看有没有能优先执行的指令，操作2依赖于操作1，不能被优先执行，操作3不依赖1和2，所以能优先执行操作3。&lt;br/&gt;所以实际执行顺序是3&amp;gt;1&amp;gt;2&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;LDR R1, [R0];//操作1
ADD R2, R1, R1;//操作2
ADD R3, R4, R4;//操作3&lt;/code&gt;
&lt;/pre&gt;
&lt;span id=&quot;neicun&quot;/&gt;
&lt;h2 id=&quot;内存系统重排序&quot;&gt;内存系统重排序&lt;/h2&gt;
&lt;p&gt; 由于处理器有读、写缓存区，&lt;em&gt;写缓存区没有及时刷新到内存&lt;/em&gt;，造成其他处理器读到的值不是最新的，使得&lt;strong&gt;处理器执行的读写操作与内存上反应出的顺序不一致&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt; 如下面这个例子，可能造成处理器A读到的b=0，处理器B读到的a=0。A1写a=1先写到处理器A的写缓存区中，此时内存中a=0。如果这时处理器B从内存中读a，读到的将是0。&lt;/p&gt;
&lt;p&gt; 以处理器A来说，处理器A执行的顺序是A1&amp;gt;A2&amp;gt;A3，但是由于写缓存区没有及时刷新到内存，所以实际顺序为A2&amp;gt;A1&amp;gt;A3。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;初始化：
a = 0;
b = 0;

处理器A执行
a = 1; //A1
read(b); //A2

处理器B执行
b = 2; //B1
read(a); //B2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://note.youdao.com/yws/api/personal/file/8A08AD5E36FA4DE9AB59F2C08781AB9C?method=download&amp;amp;shareKey=c7457c11dcae9bf05cebe8c1749d23be&quot; title=&quot;处理器和内存的交互&quot; alt=&quot;处理器和内存的交互&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;阻止重排序&quot;&gt;阻止重排序&lt;/h2&gt;
&lt;p&gt; 不论哪种重排序都可能造成共享变量中线程间不可见，这会改变程序运行结果。所以需要禁止对那些要求可见的共享变量重排序。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;阻止编译重排序：禁止编译器在某些时候重排序。&lt;/li&gt;
&lt;li&gt;阻止指令重排序和内存系统重排序：使用内存屏障或Lock前缀指令&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Fri, 22 Dec 2017 07:52:00 +0000</pubDate>
<dc:creator>钟绍威</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wewill/p/8086375.html</dc:identifier>
</item>
<item>
<title>java并发编程的艺术——第四章总结 - 萌新啊萌新是我</title>
<link>http://www.cnblogs.com/lilinzhiyu/p/8086235.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lilinzhiyu/p/8086235.html</guid>
<description>&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　java语言是&lt;span&gt;内置&lt;/span&gt;对多线程支持的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　为什么使用多线程：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　首先线程是操作系统最小的调度单元，多核心、多个线程可以同时执行，能够提升程序性能。但是过多的线程也会导致问题（效率下降，死锁）。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;4.1.1什么是线程&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　进程：现代操作系统运行一个程序时，会为其创建一个进程。（进程可以认为是运行着的程序，活着的程序）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　线程：现代操作系统的最新调度单位就是线程，线程也称为轻量级进程（Light Weight Process）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　一个进程中可以包含多个线程，这些线程有自己的计数器、堆栈、和局部变量属性，并且能够访问共享的内存变量。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　为什么线程能够同时执行：处理器在不同的线程间高速切换，让使用者感觉到线程在同时运行。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　java程序天生就是一个多线程，下面展示一个简单的java程序包含哪些最基本的线程：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Main {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取java线程管理MXBean&lt;/span&gt;
        ThreadMXBean threadMXBean =&lt;span&gt; ManagementFactory.getThreadMXBean();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;不需要获取同步的Monitor和synchronizer信息，仅获取线程和线程堆栈信息&lt;/span&gt;
        ThreadInfo[] threadInfos = threadMXBean.dumpAllThreads(&lt;span&gt;false&lt;/span&gt;,&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;遍历线程信息，仅打印线程Id和线程名称&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt;&lt;span&gt; (ThreadInfo ti : threadInfos) {
            System.out.println(&lt;/span&gt;&quot;[&quot; + ti.getThreadId() + &quot;] &quot; +&lt;span&gt; ti.getThreadName());
        }
    }
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222102942881-1363853264.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Signal Dispatcher　　分发处理发送给JVM信号的线程。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finalizer　　　　　　调用对象的finalize方法的线程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Reference Handler　 清除Reference的线程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;main　　　　　　　　主线程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;可以看到一个普通的java程序不仅仅只有主线程，而且还有其他多个线程在运行。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.1.2为什么要使用多线程&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　1）更&lt;span&gt;多&lt;/span&gt;处理器核心：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　一个线程在同一时刻只能运行在一个处理器上，将逻辑分配到多个核心处理器上更加有效率。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2）更&lt;span&gt;快&lt;/span&gt;的响应时间：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　将数据一致性不强的操作分派给其他线程，使响应用户请求的线程尽快完成，缩短响应时间。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　3）更&lt;span&gt;好&lt;/span&gt;的编程模型：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　考虑问题时，仅需将业务建立起合适的模型，而无须考虑复杂的底层实现。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　（这个底层实现在第二章第三章都有描述，实际上在编程语言与操作系统的线程之间是有复杂的映射的，这里JVM帮我们处理好了，我们只需要根据业务建立多线程模型编程即可）&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.1.3线程的优先级&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　现代操作系统采用时分的形式调度运行的线程。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　操作系统分出一个个&lt;span&gt;时间片&lt;/span&gt;，线程会分配到若干时间片，时间片使用完就会发生线程调度，等待下次分配。线程分配的时间片多少也决定了线程使用处理器资源的多少。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　线程优先级就是决定线程需要多或者少分配一些处理器资源的线程属性。 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　在java线程中，有一个整型成员变量priority来控制优先级，范围从1~10，超出就会报出异常。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　构建线程时，默认优先级是5。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　优先级高则分配到的时间片数量多于低的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　策略：针对频繁阻塞（休眠/IO操作）的线程需要设置较高的优先级，针对计算的（占用较多CPU时间或者偏向运算）的设置较低的优先级，这样会避免线程被独占。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注：线程的优先级仅仅是一部分决定因素，因为线程的切换具有随机性，而且针对不同的系统而言，优先级这个概念可能就不存在，他仅仅是决定程序设计的衡量的一个标准。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.1.4线程的状态&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222105139256-1089510747.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　事实上，线程在整个运行过程中是会随着代码的运行而不断变化状态的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222105835943-1257789327.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222105851100-1742169130.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：java将操作系统中的运行和就绪两个状态合并称为运行状态，阻塞状态是线程阻塞在进入synchronized关键字修饰的方法或代码块（竞争锁）时的状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　但是阻塞在java.concurrent包中Lock接口的线程状态却是等待状态，因为Lock接口对于阻塞的实现使用了LockSupport类中相关的方法。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.1.5Daemon线程&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　Daemon线程是一种支持性线程，主要是用在后台程序做一些后台调度与支持性工作。这意味着当JVM中没有非Daemon线程时，JVM将自动退出。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　可以通过调用Thread.setDaemon(true)方法将线程设为Daemon线程。（注：该方法必须在start()或者run()方法前执行，也就是说必须在线程启动前执行）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　Daemon线程被用作，完成支持性工作，但是在java虚拟机退出时，Daemon线程中的finally块并不一定会执行。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：在构建Daemon时，不能依靠finally块中的内容来确保执行关闭或清理资源的逻辑。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;4.2.1构造线程&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　线程运行前需要先构造一个线程，下面是java.lang.Thread中对线程进行初始化的部分&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222111717553-1817383088.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　从这里也能看到父线程与子线程的关系：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　父线程就是当前线程（开启多线程的线程），子线程会具有与父线程一致的优先级， 守护线程，线程组，还会有父线程的可继承ThreadLocal。还会分配给一个唯一的ID。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　init()运行完毕，线程对象就初始化好了，在堆内存中等待运行&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt; 4.2.2启动线程&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt; 　　线程完成初始化后，调用start()方法就可以启动这个线程，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　线程start()的含义：当前线程同步告知JVM，只要线程规划器空闲，应立即启动调用start()方法的线程。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：作为一个习惯，最好为自定义线程起一个好名字。根据构造方法，为自定义线程取个好名字吧。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222112744818-1488732126.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;&lt;span&gt;4.2.3理解中断 &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　中断：一个标识位属性，通过调用线程的interrupt()方法使其进入中断状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　线程可以通过检查自身是否被中断来进行响应。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　线程通过方法isInterrupted()来判断是否被中断，也可以调用静态方法Thread.interrupted()对当前线程的中断进行复位。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：线程已经结束，即使线程曾经处于中断状态，调用线程对象的isInterrupted()依旧会返回false。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　只要线程进入打断状态（调用interrupt()方法），在调用sleep()，会抛出异常InterruptedException。同时JVM会将线程的打断状态清空，此时再调用isInterrupted()会返回false。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt; 4.2.4过期的suspend()、resume()和stop()方法&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　suspend()用于暂停线程、resume()用于恢复线程、stop()用于停止线程，这三个方法都过期了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　原因：suspend()会导致线程占用资源进入休眠状态，容易导致死锁。stop()不能保证线程资源的正确释放，一旦调用直接结束，可能会导致程序运行在不确定的状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　暂停恢复方法可以用后面的等待/通知机制完成。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.2.5安全地终止线程 &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　前面4.2.3提到中断状态是一个线程的标识位。可以利用一个boolean变量来控制是否需要停止任务并终止该线程。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; InterruptTest {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
        Runner one &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runner();
        Thread countThread &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(one,&quot;CountThread&quot;&lt;span&gt;);
        countThread.start();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;睡眠一秒，main线程对CountThread进行中断，使CountThread能够感知并结束。&lt;/span&gt;
        Thread.sleep(1000&lt;span&gt;);
        countThread.interrupt();
        Runner two &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Runner();
        countThread &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(two,&quot;CountThread&quot;&lt;span&gt;);
        countThread.start();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;睡眠一秒，main线程对two进行cancel，使得CountThread能够感知并结束&lt;/span&gt;
        Thread.sleep(1000&lt;span&gt;);
        two.cancel();
    }

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Runner &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Runnable {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;long&lt;/span&gt;&lt;span&gt; i;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; on = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;

        @Override
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
            &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; (on &amp;amp;&amp;amp; !&lt;span&gt;Thread.currentThread().isInterrupted()) {
                i&lt;/span&gt;++&lt;span&gt;;
            }
            System.out.println(&lt;/span&gt;&quot;Count i = &quot; +&lt;span&gt; i);
        }

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; cancel() {
            on &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
        }
    }
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222134043053-1724129059.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　在java多线程编程核心技术中也提到过，使用判断结合interrupt()与isInterrupted()的方式来终止多线程的执行但是当时并没有补充示例，如今已经补充了示例。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;　　线程自启动时，就拥有了自己的栈空间。然后会一直运行直到结束。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　多线程的目的是多条线程执行不同的逻辑业务从而能够提升业务整体的响应速度，如果线程仅仅是孤零零的执行，这些不同的逻辑业务就不能最终汇聚成一个完整的业务那么多线程也就失去了意义，这就是为什么要有线程间通信的存在。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.3.1volatile与synchronized关键字&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　java支持多个线程访问一个对象或对象的成员变量，在不使用关键字时，每一个线程是从自己的内存区域获取相应对象的拷贝的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：线程有自己的内存区域，默认会将共享内存中的数据拷贝到自己的内存区域，然后对拷贝值进行操作。这样可以加速程序的执行，这也是现代多核处理器的一个特点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　但是这也会引出一个问题，即每一个线程获得的变量并不一定是最新值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　关键字volatile可以修饰字段（成员变量），就是告知程序，任何对该变量的访问均需要从共享内存中获取，而对它的改变必须同步刷新回共享内存，它能保证所有线程对变量访问的可见性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　注：过多地使用volatile是不必要的，因为它会降低程序执行的效率。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　（前面已经提到每一个线程都有自己的内存区域，从自己的内存区域对值操作肯定最快的，使用了volatile的话就会对共享内存进行操作，相比之下自然速率就慢了）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　关键字synchronized：修饰代码块、方法、静态方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　实质上是对一个对象的监视器（monitor）的获取，而且这个获取过程是排他的，也就是说同一时刻只有一个线程获取由synchronized所保护对象的监视器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　任何对象都有自己的监视器，当对象由同步块或者对象的同步方法调用时，执行方法的线程必须先获取对象的监视器才能进入同步块或者同步方法，而没有获取监视器的线程会阻塞在同步块与同步方法的入口，进入BLOCKED状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222140724053-1925440197.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.3.2等待/通知机制&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　等待/通知的相关方法是任意java对象都具备的，因为该方法被定义在所有对象的超类上java.lang.Object&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222141046146-43017934.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　等待通知机制：线程A调用了对象O的wait()方法进入了等待状态，而线程B调用了对象O的notify()或者notifyAll()方法，线程A收到通知后从对象O的wait()方法返回，进而执行后续操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：上述两个线程通过对象O来完成交互，而对象的wait()与notify()或notifyAll()的关系就如同开关信号一样，用来完成等待方和通知方之间的交互工作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　使用注意：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　1）使用wait()、notify()、notifyAll()方法都需要先对调用对象加锁。（即锁对象应该为调用对象）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　2）调用wait()方法后，线程状态由RUNNING变为WAITTING，将锁释放，并将当前线程放到对象的等待队列。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　3）notify()或notifyAll()方法调用后，不会立刻释放锁，需要等待调用notify()、notifyAll()的线程释放锁之后，等待线程才可能会拿到锁。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　4）notify()将对象的等待队列中的一个线程随机地移到同步对象，notifyAll()将等待队列中的全部线程都移到同步队列，然后使它们争抢锁，被移动的状态由WAITING变为BLOCKED。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　5）从wait()返回的前提是获取调用对象的锁。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.3.3等待/通知的经典范式&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　经典范式可以分为两部分　　等待方（消费者）与通知方（生产者）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　等待方遵循原则：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　1）获取对象的锁&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　2）如果条件不满足，那么调用对象的wait()方法，被通知后仍要检查条件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　3）条件满足执行对应的逻辑&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222142856459-2138615856.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　通知方遵循原则：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　1）获得对象锁&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　2）改变条件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　　　　　　　3）通知所有等待在对象上的线程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222142916771-263814437.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.3.4管道输入/输出流&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　管道输入/输出流用于线程间的数据传输，传输的媒介是内存。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　PipedOutputStream/PipedIntputStream&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　PipedReader/PipedWriter&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　注：在使用管道流的时候要注意，一定要进行绑定，也就是调用connect()方法，否则会出异常。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StreamTest {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; main(String[] args) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; Exception{
        PipedWriter out &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PipedWriter();
        PipedReader in &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PipedReader();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将输入输出流进行连接，否则会爆出异常IOException&lt;/span&gt;
&lt;span&gt;        out.connect(in);
        Thread printThread &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;new&lt;/span&gt; Print(in),&quot;PrintThread&quot;&lt;span&gt;);
        printThread.start();
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; receive = 0&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; ((receive = System.in.read()) != -1&lt;span&gt;) {
            out.write(receive);
        }
        out.close();
    }

    &lt;/span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Print &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; Runnable {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; PipedReader in;
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Print(PipedReader in) {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.in =&lt;span&gt; in;
        }

        @Override
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; run() {
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; receive = 0&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; ((receive = in.read()) != -1&lt;span&gt;) {
                    System.out.println((&lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt;)receive);
                }
            }&lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (IOException e) {
                e.printStackTrace();
            }
        }
    }
}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h2&gt;&lt;span&gt;4.3.5Thread.join()的使用&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　如果一个线程A执行了thread.join()，含义：当前线程A等待thread线程终止后才从thread.join()返回。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　除了join()外还有join(long millis)和join(long millis,int nanos)两个具备超时的方法，这两个方法表示：如果线程thread没有在指定时间内停止，那么线程A会从该超时方法返回。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　下面是Thread.join()的部分源码：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222144954912-713919840.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;4.3.6ThreadLocal的使用&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　ThreadLocal，即线程变量，是一个以ThreadLocal对象为键，任意对象为值的存储结构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这个结构被附带在线程上，也就是说一个线程可以根据一个ThreadLocal对象查询到绑定在这个线程上的一个值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　可以通过set(T)来设置值，然后在当前线程下使用get()来获取原先设置的值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　不过有点遗憾的是只能放一个值。对你没有看错只能放一个值，再次调用set设置值，会覆盖前一次set的值。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;

&lt;hr/&gt;&lt;h2&gt;&lt;span&gt;4.4.1等待超时模式&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;　　 &lt;span&gt;应用场景：调用一个方法时等待一段时间，如果该方法能够在给定时间段内得到结果，那么将结果返回，否则返回默认值。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　   假设超时时间是T，那么可以推断出在当前时间为now+T时就为超时。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　定义变量如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　等待持续时间：REMAINING = T；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　超时时间：　　FUTURE = now + T；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这时仅需要wait(REMAINING)即可，在wait(REMAINING)返回之后会将执行：REMAINING = FUTURE - now。如果REMAINING = 0，表示超时，直接退出，否则将继续执行wait(REMAINING)。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1254811/201712/1254811-20171222150554709-586705242.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　这样就可以避免执行时间过长，也不会“永久”阻塞调用者，而是按照调用者的要求返回。&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span&gt; 后面的示例过于冗长，而且不太好总结。反而更建议去阅读书籍。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;看到这一章终于算是接触到了多线程方面的知识，比起前几章底层的东西，突然觉得线程部分还是相对简单一些？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这一章主要讲了一些线程的使用基础的部分。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;比如volatile，synchronized，优先度啊，线程启动中断啊，线程通信啊等等。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这本书跟java多线程编程核心技术相比，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;知识点更琐碎也更凝练。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;琐碎表现在：解释一个现象时可能会介绍到关于一些底层的原理而不是直接告诉你表面看到的现象，也会很详细的告诉你一些名词及知识的含义。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;凝练表现在：没有过于多的基础的代码，一些伪代码使用起来反而显得很直观，java多线程编程核心技术有时候会为了讲一个知识点写几页的代码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;java多线程编程核心技术相对来说更适合入门，而这本书在有了一定的线程基础后看起来也更加快，在帮你拓展理解一些更底层的东西时，也会更加轻松一些。&lt;/span&gt;&lt;/p&gt;


&lt;h2&gt;&lt;span&gt;本文内容是书中内容兼具自己的个人看法所成。可能在个人看法上会有诸多问题（毕竟知识量有限，导致认知也有限），如果读者觉得有问题请大胆提出，我们可以相互交流、相互学习，欢迎你们的到来，心成意足，等待您的评价。&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 22 Dec 2017 07:44:00 +0000</pubDate>
<dc:creator>萌新啊萌新是我</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lilinzhiyu/p/8086235.html</dc:identifier>
</item>
<item>
<title>IntelliJ IDEA（四） ：Settings（上） - JaJian</title>
<link>http://www.cnblogs.com/jajian/p/8080612.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jajian/p/8080612.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;IDEA是一个智能开发工具，每个开发者的使用习惯不同，如何个性化自己的IDEA？我们可以通过Settings功能来设置。Settings文件是IDEA的配置文件，通过他可以设置主题，项目，插件，快捷键等。&lt;/p&gt;
&lt;h2&gt;打开方式&lt;/h2&gt;
&lt;p&gt;Settings的界面图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171221145229475-1293467196.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开他的方式有三种：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;菜单栏 - File - Settings&lt;/li&gt;
&lt;li&gt;Ctrl + Alt + s&lt;/li&gt;
&lt;li&gt;工具栏 - Sttings按钮&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;界面列表&lt;/h2&gt;
&lt;p&gt;1、Appearance &amp;amp; Behavior 外观和行为&lt;/p&gt;
&lt;p&gt;2、Keymap 快捷键&lt;/p&gt;
&lt;p&gt;3、Editor 编辑器&lt;/p&gt;
&lt;p&gt;4、Plugins 插件&lt;/p&gt;
&lt;p&gt;5、Version Control 版本控制&lt;/p&gt;
&lt;p&gt;6、Build,Execution,Deployment 构建，执行，部署&lt;/p&gt;
&lt;p&gt;7、Languages &amp;amp; Frameworks 语言和框架&lt;/p&gt;
&lt;p&gt;8、Tools 工具集&lt;/p&gt;

&lt;h2&gt;1、Appearance &amp;amp; Behavior 外观和行为 &lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;Appearance （外观） &lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;配置主题、字体、字号、工具类以及其他视图工具。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222141504381-98590600.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; UI选项&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1390292e131&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1390292e133&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;选项&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;24&quot;&gt;&lt;tr id=&quot;d1390292e142&quot; class=&quot;ijRowOdd&quot; readability=&quot;6&quot;&gt;&lt;td&gt;&lt;span&gt;1.主题&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;&lt;span&gt;使用此下拉列表从列表中选择所需的主题。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;特别是Darcula主题是可用的。更改/从这个主题需要重新启动IntelliJ IDEA。&lt;/span&gt;&lt;/p&gt;
&lt;span/&gt;
&lt;p&gt;&lt;span&gt;在IntelliJ IDEA的社区版中，使用名称的新默认方案 &lt;span class=&quot;emphasis&quot;&gt;使用IntelliJ。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e164&quot; class=&quot;ijRowEven&quot; readability=&quot;6&quot;&gt;&lt;td&gt;&lt;span&gt;2.调整红绿视力不足的颜色&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;选择此选项可调整红绿色缺陷人员的IDE颜色（编辑器中的代码高亮显示，文本通知等）。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;有关更多信息，请参阅 色彩不足调整。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e180&quot; class=&quot;ijRowOdd&quot; readability=&quot;6&quot;&gt;&lt;td&gt;&lt;span&gt;3.覆盖默认字体（不推荐）&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;选中此复选框可以指定使用的字体系列和大小，而不是默认的字体系列和大小。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;首次安装时，IntelliJ IDEA将采用Windows默认字体大小和样式。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e197&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;4.在列表中循环滚动&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可以从最后一项跳转到第一项，反之亦然。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e207&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;5.在快速导航中显示图标&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以在图标中显示图标 快速导航 弹出菜单（&lt;kbd&gt;Ctrl&lt;/kbd&gt;/&lt;kbd&gt;Ctrl+Shift&lt;/kbd&gt;/&lt;kbd data-default=&quot;Ctrl+Shift+Alt+N&quot; data-default_for_gnome=&quot;Ctrl+Shift+Alt+N&quot; data-default_for_kde=&quot;Ctrl+Shift+Alt+N&quot; data-default_for_xwin=&quot;Ctrl+Shift+Alt+N&quot; data-emacs=&quot;Ctrl+Alt+Shift+N&quot; data-jbuilder=&quot;Ctrl+Shift+Alt+N&quot; data-visual_studio=&quot;Ctrl+Alt+Shift+N&quot; data-netbeans_6=&quot;&quot; data-eclipse=&quot;Ctrl+Shift+Alt+N&quot; data-mac_os_x_10=&quot;&quot; data-mac_os_x=&quot;⌥⇧⌘N&quot; data-eclipse_mac_os_x=&quot;⌥⌘O&quot; data-intellij_idea_classic_os_x=&quot;N/A&quot; data-xcode=&quot;N/A&quot; data-resharper=&quot;N/A&quot; data-resharper_osx=&quot;N/A&quot;&gt;Ctrl+Shift+Alt+N&lt;/kbd&gt;）。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e234&quot; class=&quot;ijRowEven&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;6.自动将鼠标光标放置在默认按钮上&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可在打开对话框时将鼠标指针置于默认按钮上。如果未选中复选框，则指针位置不会更改。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e243&quot; class=&quot;ijRowOdd&quot; readability=&quot;7.5&quot;&gt;&lt;td&gt;&lt;span&gt;7.隐藏焦点丢失的导航弹出窗口&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;6&quot;&gt;&lt;span&gt;如果选中此复选框，则导航弹出框（去类/文件/符号）关闭，当任何其他的IntelliJ IDEA组件获得焦点。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;如果未选中此复选框，则导航弹出框会在更改焦点时保持不变，关闭此类弹出窗口的唯一方法是按下&lt;kbd data-default=&quot;Escape&quot; data-default_for_gnome=&quot;Escape&quot; data-default_for_kde=&quot;Escape&quot; data-default_for_xwin=&quot;Escape&quot; data-emacs=&quot;Escape, Escape&quot; data-jbuilder=&quot;Escape&quot; data-visual_studio=&quot;Escape&quot; data-netbeans_6=&quot;&quot; data-eclipse=&quot;Escape&quot; data-mac_os_x_10=&quot;&quot; data-mac_os_x=&quot;⎋&quot; data-eclipse_mac_os_x=&quot;⎋&quot; data-intellij_idea_classic_os_x=&quot;N/A&quot; data-xcode=&quot;N/A&quot; data-resharper=&quot;N/A&quot; data-resharper_osx=&quot;N/A&quot;&gt;Escape&lt;/kbd&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e265&quot; class=&quot;ijRowEven&quot; readability=&quot;7&quot;&gt;&lt;td&gt;&lt;span&gt;8.拖动拖放与ALT按下只&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果未选中此复选框（默认情况下），则IntelliJ IDEA允许移动编辑器选项卡，工具窗口按钮，文件和文件夹 项目工具窗口，使用拖放。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;选中此复选框可避免意外移动文件或文件夹或UI组件。因此，只有在按下ALT键的情况下才能进行拖放操作。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e280&quot; class=&quot;ijRowOdd&quot; readability=&quot;7&quot;&gt;&lt;td&gt;&lt;span&gt;9.工具提示初始延迟（毫秒）&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;使用此滑块可以指定将鼠标悬停在编辑器中的某个项目之间的时间，以及出现工具提示的值。在调试过程中，此设置尤为重要。如果延迟太短，使用鼠标变得不方便，因为每个鼠标在屏幕上移动都会带来许多带有所有变量值的工具提示。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;反混淆&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143002006-1153730890.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;table id=&quot;d1390292e298&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1390292e300&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;选项&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr id=&quot;d1390292e309&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;IDE&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;从此下拉列表中，选择要应用于IDE的Antialising模式（包括菜单，工具窗口等）：&lt;/span&gt;
&lt;ul class=&quot;list _bullet&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;子像素：建议在液晶显示器上使用此选项，并利用彩色液晶显示屏上的每个像素由红色，绿色和蓝色子像素组成的事实。这允许平滑文本并使其更详细地呈现。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;灰度：建议将此选项用于垂直放置的非LCD显示器或显示器。它处理像素级别的文本。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;没有抗锯齿功能：这个选项可以用于高分辨率显示，非抗锯齿字体渲染速度更快，看起来更好。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e320&quot; class=&quot;ijRowEven&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;从此下拉列表中，选择要应用于哪个抗锯齿模式 编辑：&lt;/span&gt;
&lt;ul class=&quot;list _bullet&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;子像素：建议在液晶显示器上使用此选项，并利用彩色液晶显示屏上的每个像素由红色，绿色和蓝色子像素组成的事实。这允许平滑文本并使其更详细地呈现。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;灰度：建议将此选项用于垂直放置的非LCD显示器或显示器。它处理像素级别的文本。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;control&quot;&gt;没有抗锯齿功能：这个选项可以用于高分辨率显示，非抗锯齿字体渲染速度更快，看起来更好。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;窗口选项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222142936912-2128911846.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;table id=&quot;d1390292e340&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1390292e342&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;选项&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;12.5&quot;&gt;&lt;tr id=&quot;d1390292e351&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;动画窗口&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;选中此复选框可使解除锁定的工具窗口与动画效果一起滑动。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;该选项仅适用于工具窗口未连接的情况。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e363&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;显示记忆指示&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以显示内存指示器 状态栏。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e379&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;在菜单中禁用助记符&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可隐藏IntelliJ IDEA菜单中热键的下划线。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e388&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;在控件中禁用助记符&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可隐藏IntelliJ IDEA控件中热键的下划线。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e398&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;在菜单项中显示图标&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果选中此复选框（默认情况下），图标将显示在菜单命令的左侧。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;如果未选中此复选框，则菜单命令将显示为不带图标。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e409&quot; class=&quot;ijRowEven&quot; readability=&quot;9.5&quot;&gt;&lt;td&gt;&lt;span&gt;左侧/右侧并排布局&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;&lt;span&gt;选中这些复选框后，工具窗口的位置将针对宽屏幕显示进行优化。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;并排布局为OFF：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143333287-465991301.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;并排布局为ON：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143342037-1073790208.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;通过  &lt;span class=&quot;cnblogs_code&quot;&gt;Ctrl + MouseClick&lt;/span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt; 工具窗口之间的分离器&lt;/span&gt;&lt;span&gt;切换布局&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这只适用于位于左侧和右侧的工具窗口，但不适用于IntelliJ IDEA窗口的顶部和底部。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table id=&quot;d1390292e340&quot;&gt;&lt;tbody readability=&quot;11&quot;&gt;&lt;tr id=&quot;d1390292e447&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;显示工具窗口栏&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以显示工具窗口栏。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e456&quot; class=&quot;ijRowEven&quot; readability=&quot;8&quot;&gt;&lt;td&gt;&lt;span&gt;显示工具窗口号码&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;&lt;span&gt;选中此复选框可在工具窗口按钮上显示工具窗口快速访问号码。&lt;/span&gt;
&lt;p&gt;&lt;span&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;Alt + number&lt;/span&gt;  无论此设置如何， 都可以使用快捷方式，并更改快捷方式键盘映射页面。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;请注意，工具窗口助记符仅在相应的 键盘绑定具有格式时才显示&lt;code class=&quot;code&quot; data-lang=&quot;Java&quot;&gt;Alt+n&lt;/code&gt; ，其中&lt;code class=&quot;code&quot; data-lang=&quot;Java&quot;&gt;n&lt;/code&gt;是1到9范围内的整数。对于不同的键盘快捷键，不显示助记符。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e489&quot; class=&quot;ijRowOdd&quot; readability=&quot;7&quot;&gt;&lt;td&gt;&lt;span&gt;允许在对话框上合并按钮&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;如果选中此复选框，则对话框中的多个命令将使用向下箭头分组在单个按钮下。您可以通过单击下拉列表或按下来查看所有合并的命令 &lt;span class=&quot;cnblogs_code&quot;&gt;Shift + Alt + Enter&lt;/span&gt; 。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;如果未选中此复选框，则按钮将显示在一行中。比较：&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143719225-1802816673.png&quot; alt=&quot;&quot;/&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e515&quot; class=&quot;ijRowEven&quot; readability=&quot;7.5&quot;&gt;&lt;td&gt;&lt;span&gt;编辑器选项卡中的小标签&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;6&quot;&gt;&lt;span&gt;如果选中此复选框，则编辑器选项卡上的字体大小将设置为较小的值。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;如果未选中此复选框，则编辑器选项卡上的字体大小将设置为默认值，如在项目树视图中。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1390292e529&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;宽屏工具窗口布局&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;&lt;span&gt;如果选中此复选框，则工具窗口的位置将针对宽屏幕显示进行优化。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;宽屏工具窗口布局为OFF：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143741146-2137178325.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;宽屏工具窗口布局为ON：&lt;/span&gt;&lt;/p&gt;
&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222143747662-808770675.png&quot; alt=&quot;&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt; Menus and Toolbars （菜单和工具栏）&lt;/h3&gt;
&lt;p&gt; &lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222144100803-892947604.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.菜单和项目列表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;该列表显示了菜单和工具栏的项目。&lt;/span&gt;&lt;span&gt;这些项目根据其使用领域进行分组。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;要配置项目，请展开相应的节点并选择所需的项目。&lt;/span&gt;&lt;span&gt;之后，页面右侧的按钮将变为可用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.控制&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1397600e77&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1397600e79&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;10%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;90%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;9.5&quot;&gt;&lt;tr id=&quot;d1397600e88&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;添加后&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击这个按钮在选择的菜单之后添加一个新的动作。在里面&lt;span class=&quot;control&quot;&gt;选择操作添加对话框，打开选择所需的操作，并可选择分配一个图标。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e100&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;添加分隔符&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此按钮可在选定项目之后将菜单添加到菜单中。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e109&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;编辑操作图标&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮将图标与选定的菜单项相关联。在里面&lt;span class=&quot;control&quot;&gt;&lt;span class=&quot;control&quot;&gt;选择“打开&lt;span class=&quot;control&quot;&gt;操作图标路径”对话框，打开指定所需图像的路径。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul class=&quot;list _ul&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;图像文件应该有&lt;code class=&quot;code&quot; data-lang=&quot;Java&quot;&gt;.png&lt;/code&gt;扩展名。&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;工具栏图标的大小应该是16x16。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e136&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;去掉&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮从列表中删除选定的项目。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e146&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;提升&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮将选定的项目向上移动一个位置。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e155&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;下移&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮将选定的项目向下移动一个位置。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e164&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;恢复所有默认值&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此按钮可放弃对所有项目所做的所有更改并返回到默认设置。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1397600e173&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;恢复默认&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此按钮可放弃对所选项目所做的所有更改并返回到默认设置。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;System Setting （系统设置）&lt;/h3&gt;
&lt;p&gt;配置启动时是否打开项目，项目打开方式，保持文件方式，退出时的方式等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Startup/Shutdown&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1406799e47&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1406799e51&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr id=&quot;d1406799e60&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;重新启动上一个项目&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以使IntelliJ IDEA在启动时重新打开上次打开的项目。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e69&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;确认申请退出&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框将尝试关闭IntelliJ IDEA时显示警告消息。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Project opening&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1406799e81&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1406799e83&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr id=&quot;d1406799e92&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;在新窗口中打开项目&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮可以在新窗口中始终打开一个新项目。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e101&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;在同一窗口中打开项目&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮可以始终关闭当前项目，并重新使用相同的窗口。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e110&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;确认窗口打开项目&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮让IntelliJ IDEA询问您是要在同一个框架中打开一个新的项目还是新的项目。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Synchronization&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1406799e125&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1406799e127&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;11.5&quot;&gt;&lt;tr id=&quot;d1406799e136&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;在框架或编辑器选项卡激活上同步文件&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果选中此复选框，则在从其他应用程序切换到IntelliJ IDEA时，或切换到其编辑器选项卡时，所有从外部更改的文件都将从磁盘重新加载。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e145&quot; class=&quot;ijRowEven&quot; readability=&quot;7.5&quot;&gt;&lt;td&gt;&lt;span&gt;保存文件在框架停用&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;6&quot;&gt;&lt;span&gt;如果选中此复选框，则从IntelliJ IDEA切换到其他应用程序时，将自动保存所有已修改的文件。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;请注意，通过关闭此选项和以下选项，您无法完全禁用自动保存。看到保存和还原更改。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e161&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;如果应用程序闲置N秒，则自动保存文件&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果选中此复选框，则所有修改的文件都会在内部定期自动保存。也可以看看，保存和还原更改。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1406799e172&quot; class=&quot;ijRowEven&quot; readability=&quot;8.5&quot;&gt;&lt;td&gt;&lt;span&gt;使用“安全写入”（首先保存对临时文件的更改）&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;6&quot;&gt;&lt;span&gt;如果这个复选框是 &lt;span class=&quot;emphasis&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;选择，一个改变的文件首先被保存在一个临时文件中。如果保存操作成功，则将保存的文件替换为保存的文件。（从技术上讲，原始文件被删除，临时文件被重命名。） &lt;br/&gt;此外，这种文件的所有权发生了变化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;如果这个复选框是 &lt;span class=&quot;emphasis&quot;&gt;没有选择，文件的所有权不会改变，但是安全写入的所有优点将会丢失。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;Passwords&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;指定IntelliJ IDEA是否应记住或保存您的密码 - 用于访问受密码保护的资源（如版本控制存储库）的密码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如有必要，请设置主密码。如果你这样做，而不是个人密码 - 如果它们存储在IntelliJ IDEA密码数据库中 - 你可以使用你的主密码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;请注意，此页面上定义的密码存储策略不会影响您的数据库密码。在相应数据源的设置中，是否为每个密码单独指定是否应保存这些密码。例如，请参阅 DB数据源设置。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;密码存储策略&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;磁盘存储保护&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;HTTP Proxy&lt;/h4&gt;
&lt;p&gt;如果要访问Internet IntelliJ IDEA应使用HTTP代理，请在此页面上指定代理设置。&lt;/p&gt;
&lt;table id=&quot;d1888159e49&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1888159e51&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr id=&quot;d1888159e60&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;没有代理&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮可以在没有代理的情况下连接到Internet。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e69&quot; class=&quot;ijRowEven&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;自动检测代理设置&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮以启用使用自动配置URL来配置Web代理设置。当选择此选项时，将启用以下控件：&lt;/span&gt;
&lt;table id=&quot;d1888159e78&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1888159e80&quot; class=&quot;ijRowHead&quot;&gt;&lt;th&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr id=&quot;d1888159e86&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;自动代理配置网址&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果IntelliJ IDEA未自动找到，请选中此复选框以手动指定代理设置文件的位置。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e96&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;清除密码&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮清除指定代理的密码。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e108&quot; class=&quot;ijRowOdd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;手动代理配置&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;单击此单选按钮以启用手动代理配置。当选择此选项时，将启用以下控件：&lt;/span&gt;
&lt;table id=&quot;d1888159e115&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1888159e117&quot; class=&quot;ijRowHead&quot;&gt;&lt;th&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;9&quot;&gt;&lt;tr id=&quot;d1888159e123&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;HTTP&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果您希望IntelliJ IDEA在访问Internet时使用HTTP代理，请单击此单选按钮。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e132&quot; class=&quot;ijRowEven&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;SOCKS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击这个单选按钮，如果你想让IntelliJ IDEA使用 Socket访问Internet时的安全协议。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e144&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;主机名&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;指定代理主机名或IP地址。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e153&quot; class=&quot;ijRowEven&quot;&gt;&lt;td&gt;&lt;span&gt;端口号&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;指定代理端口号。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e163&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;没有代理&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;在此处指定不应指定代理的URL或IP地址的模式。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e172&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;代理认证&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果您的代理需要验证，请选中此复选框。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e181&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;登录&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;指定代表IntelliJ IDEA将连接到代理的用户的名称。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e190&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;密码&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;指定与用户名（登录）关联的密码。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1888159e199&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;记住密码&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果您希望IntelliJ IDEA记住密码，请选中此复选框。否则，每次IntelliJ IDEA连接到代理时，都会要求您提供密码。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;Updates&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;使用此页面：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list _ul&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;启用IntelliJ IDEA的自动更新，并指定更新哪种类型的发行版。&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;获取有关当前IntelliJ IDEA版本的信息以及新版本的可用性。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table id=&quot;d1428967e38&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1428967e40&quot; class=&quot;ijRowHead&quot;&gt;&lt;th&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;8.3276561232766&quot;&gt;&lt;tr id=&quot;d1428967e49&quot; class=&quot;ijRowOdd&quot; readability=&quot;6.2374798061389&quot;&gt;&lt;td&gt;&lt;span&gt;检查更新&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5.7524752475248&quot;&gt;&lt;span&gt;选中此复选框以启用自动更新功能，并选择所需的更新通道（例如，稳定版本）。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;请注意，列表只适用于 &lt;span class=&quot;emphasis&quot;&gt;稳定的版本。对于各种EAP，它被强制执行&lt;span class=&quot;emphasis&quot;&gt;早期访问计划。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1428967e94&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;使用安全连接&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span/&gt;
&lt;ul class=&quot;list _ul&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;如果选中此复选框，则安全连接协议（&lt;span class=&quot;emphasis&quot;&gt;HTTPS）被使用。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;如果这个复选框被清除， &lt;span class=&quot;emphasis&quot;&gt;使用HTTP协议。请注意&lt;span class=&quot;emphasis&quot;&gt;由于安全原因，&lt;span class=&quot;emphasis&quot;&gt;HTTP协议可能会被阻塞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;span&gt;默认情况下，复选框被选中。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1428967e121&quot; class=&quot;ijRowOdd&quot; readability=&quot;4.5&quot;&gt;&lt;td&gt;&lt;span&gt;现在检查&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;6&quot;&gt;&lt;span&gt;点击此按钮立即检查更新。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;你也可以选择 &lt;span class=&quot;control&quot;&gt;帮助| 检查更新（对于Windows或* NIX）或&lt;span class=&quot;control&quot;&gt;IntelliJ IDEA | 检查主菜单上的&lt;span class=&quot;control&quot;&gt;更新（适用于OS X）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1428967e142&quot; class=&quot;ijRowEven&quot; readability=&quot;5&quot;&gt;&lt;td&gt;&lt;span&gt;查看/编辑被忽略的更新&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;按照此链接显示/更改在IntelliJ IDEA更新中被忽略的构建。这些内部版本号包含在忽略的更新列表中，不再提示。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;Usage Statistics&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;使用此页面与JetBrains共享IntelliJ IDEA使用情况的统计信息。&lt;/span&gt;&lt;/p&gt;
&lt;table id=&quot;d1091019e40&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1091019e42&quot; class=&quot;ijRowHead&quot;&gt;&lt;th&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr id=&quot;d1091019e51&quot; class=&quot;ijRowOdd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;允许将使用统计信息发送到JetBrains&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以允许JetBrains收集您的匿名统计信息。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1091019e60&quot; class=&quot;ijRowEven&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;每日，每周或每月&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选择其中一个选项来定义您的使用情况统计信息发送到JetBrains的频率。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;File Colors（文件颜色）&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;使用此页面设置不同的背景颜色，以区分项目文件，文件夹和特定的包 范围。这些设置适用于以下UI元素：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list _bullet&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;编辑器选项卡的标题。&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;导航列表 按照名称搜索文件或类时&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;项目视图&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Common Options&lt;/strong&gt;&lt;/p&gt;
&lt;table id=&quot;d1633307e82&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1633307e84&quot; class=&quot;ijRowHead&quot;&gt;&lt;th&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;5.5&quot;&gt;&lt;tr id=&quot;d1633307e93&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;启用文件颜色&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框以将背景颜色设置应用于 导航列表。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1633307e110&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;在编辑选项卡中启用颜色&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可将背景色设置应用于编辑器选项卡的标题。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1633307e119&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;在项目视图中使用&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可将背景颜色设置应用于“项目”视图。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1633307e128&quot; class=&quot;ijRowEven&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;管理范围&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;点击此按钮打开 “范围”对话框，您可以在其中为各种操作定义自定义范围。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Local Colors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在此区域中，配置要在本地应用的颜色范围关联。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一旦定义，颜色范围关联不能被改变。&lt;/span&gt;&lt;span&gt;要将颜色重新分配给范围，请删除现有的关联并定义一个新的关联。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shared Colors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用此区域中的控件来配置要在团队的所有成员之间共享的颜色范围关联。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一旦定义，颜色范围关联不能被改变。&lt;/span&gt;&lt;span&gt;要将颜色重新分配给范围，请删除现有的关联并定义一个新的关联。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Scopes（领域）&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;一个&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;scope是各种操作适用的一组文件。&lt;/span&gt;&lt;span&gt;使用这个对话框，您可以为各种IntelliJ IDEA操作定义范围，例如， &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;查找用法&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，或 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;代码检查&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。&lt;strong&gt;保持默认即可&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Notifications（通知）&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;使用此页面启用和禁用有关某些事件的通知，更改其演示文稿，并选择启用其日志记录。&lt;strong&gt;保持默认即可。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table id=&quot;d1740685e40&quot;&gt;&lt;thead&gt;&lt;tr id=&quot;d1740685e42&quot; class=&quot;ijRowHead&quot;&gt;&lt;th width=&quot;20%&quot;&gt;&lt;span&gt;项目&lt;/span&gt;&lt;/th&gt;
&lt;th width=&quot;80%&quot;&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;8&quot;&gt;&lt;tr id=&quot;d1740685e51&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;显示气球通知&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;选中此复选框可为IntelliJ IDEA启用事件通知。（一般情况下，通知会在相应事件发生时显示在屏幕上的气球中显示。）&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1740685e60&quot; class=&quot;ijRowEven&quot; readability=&quot;4&quot;&gt;&lt;td&gt;&lt;span&gt;启用系统通知&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;选中此复选框以允许显示系统通知。&lt;/span&gt;
&lt;p&gt;&lt;span&gt;此选项在系统通知不受支持的平台（Windows和某些Unix）上不可用。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1740685e76&quot; class=&quot;ijRowOdd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;&lt;span&gt;组&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;此列列出可能会通知您和/或可能会记录的事件组。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1740685e85&quot; class=&quot;ijRowEven&quot; readability=&quot;6&quot;&gt;&lt;td&gt;&lt;span&gt;弹出&lt;/span&gt;&lt;/td&gt;
&lt;td readability=&quot;5&quot;&gt;&lt;span&gt;如果 &lt;span class=&quot;control&quot;&gt;&lt;span class=&quot;control&quot;&gt;显示气球通知复选框被选中，此列中的设置指定如何显示相应事件组的通知。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;span&gt;可用的显示选项是：&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;list _ul&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;气球：带有通知消息的气球短时间出现在屏幕上，然后自动消失。通知也显示在状态栏中，并添加到通知列表中。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;粘滞气球：通知气球停留在屏幕上，除非关闭它们。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;工具窗口气球：只有在打开适当的工具窗口时才显示通知气球。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;&lt;span&gt;&lt;span class=&quot;keyword&quot;&gt;没有弹出窗口：没有显示相应事件组的通知。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;d1740685e128&quot; class=&quot;ijRowOdd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;&lt;span&gt;日志&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span&gt;如果选中了一组事件的复选框，则会记录相应的事件，并可以在中查看 事件日志工具窗口。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;Quick Lists（快速列表）&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;使用此页面配置快速列表。&lt;/span&gt;&lt;span&gt;一个&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;control&quot;&gt;快速列表&lt;span&gt;&lt;span&gt;是IntelliJ IDEA命令的弹出式菜单，由用户配置并与键盘或鼠标快捷键相关联。&lt;/span&gt;&lt;span&gt;您可以根据需要创建尽可能多的快速列表。&lt;/span&gt;&lt;span&gt;包含在快速列表中的每个命令都由一个序号标识。&lt;/span&gt;&lt;span&gt;编号从数字（0到9）开始，然后按字母顺序继续。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Path Variables（路径变量）&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;在本页：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;保持默认即可。&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Keymap（按键映射）&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;使用此页面可创建，编辑和删除特定环境的自定义键盘映射，并更改与操作相关联的快捷键。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;请注意，默认键盘映射不可编辑。&lt;/span&gt;&lt;span&gt;要重新配置快捷方式关联，请根据所需的默认设置创建子键盘映射，并根据需要进行编辑。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;另一方面，只要尝试更改与某个默认键盘映射中的操作相关的键盘快捷键，就会自动创建相应键盘映射的副本。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;例如从eclipse转来IDEA的刚开始不习惯IDEA快捷键的使用，可以暂时使用Eclipse的，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222154529037-1748130853.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 操作列表&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1162587/201712/1162587-20171222153650365-1249243213.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1、常用编辑快捷键配置&lt;/p&gt;
&lt;p&gt;2、主菜单快捷键配置&lt;/p&gt;
&lt;p&gt;3、工具窗体快捷键配置&lt;/p&gt;
&lt;p&gt;4、...&lt;/p&gt;
&lt;p&gt;5、版本控制系统快捷键配置&lt;/p&gt;
&lt;p&gt;6、扩展构建系统的快捷键配置&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;参考：&lt;a href=&quot;https://www.jetbrains.com/help/idea/2016.2/meet-intellij-idea.html&quot; target=&quot;_blank&quot;&gt;IntelliJ IDEA 2016.2 Help&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 22 Dec 2017 07:26:00 +0000</pubDate>
<dc:creator>JaJian</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jajian/p/8080612.html</dc:identifier>
</item>
<item>
<title>spring boot系列03--spring security (基于数据库)登录和权限控制（上） - _怪蜀黍</title>
<link>http://www.cnblogs.com/zhufu9426/p/7883739.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhufu9426/p/7883739.html</guid>
<description>&lt;p&gt; 这篇打算写一下登陆权限验证相关&lt;/p&gt;
&lt;p&gt;说起来也都是泪，之前涉及权限的比较少所以这次准备起来就比较困难。&lt;/p&gt;
&lt;p&gt;踩了好几个大坑，还好最终都一一消化掉（这是废话你没解决你写个什么劲 😂） 也补充了一下自己在权限知识的的空白，还是很欣慰的。&lt;/p&gt;
&lt;p&gt;试着能把遭遇到的坑都写出来 ，能耐有限 尽力吧&lt;/p&gt;
&lt;p&gt;（因为我是基于上一篇的基础上写的 理论上可以拿着上一版的代码直接用 当然我也会在最后放上这次的代码&lt;/p&gt;
&lt;p&gt;说是&quot;理论上&quot; 是因为这次遭遇的问题太多反复删，改 很多地方我自己也没有做对比 也记不住了😌）&lt;/p&gt;

&lt;p&gt;好了，先从配置开始&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt; 向pom.xml文件里追加数据库用和Security用及mybatis用jar 如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;spring security &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.thymeleaf.extras&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;thymeleaf-extras-springsecurity4&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;postgresql &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.postgresql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;postgresql&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;mybatis &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.mybatis.spring.boot&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mybatis-spring-boot-starter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1.2.0&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数据库连接配置和端口号（我自己电脑上还有别的项目在跑避免多端口冲突 配置了端口号 9090）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;span&gt;###############
## DB
###############
&lt;/span&gt;spring.datasource.url=jdbc:postgresql://localhost:5432/springboot&lt;br/&gt;spring.datasource.username=postgres&lt;br/&gt;spring.datasource.password=postgres&lt;br/&gt;spring.datasource.driver-class-name=org.postgresql.Driver&lt;p&gt;###############&lt;br/&gt;## Server Port&lt;br/&gt;###############&lt;br/&gt;server.port = 9090
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据自己情况调整，换成其他数据库也是改这两个文件&lt;/p&gt;
&lt;p&gt;使用的到的表，主要是用户表和权限表，如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;&lt;span&gt;.mst_authorities
(
  &lt;/span&gt;&lt;span&gt;user_id&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt;&lt;span&gt;,
  authority &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  permission_flag &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;),
  create_user &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  create_date_time &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  update_date_time &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  &lt;/span&gt;&lt;span&gt;CONSTRAINT&lt;/span&gt; authorities_user_id_fkey &lt;span&gt;FOREIGN&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;user_id&lt;/span&gt;&lt;span&gt;)
      &lt;/span&gt;&lt;span&gt;REFERENCES&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;.mst_users (&lt;span&gt;user_id&lt;/span&gt;&lt;span&gt;) MATCH SIMPLE
      &lt;/span&gt;&lt;span&gt;ON&lt;/span&gt; &lt;span&gt;UPDATE&lt;/span&gt; NO ACTION &lt;span&gt;ON&lt;/span&gt; &lt;span&gt;DELETE&lt;/span&gt;&lt;span&gt; NO ACTION
);

&lt;/span&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;public&lt;/span&gt;&lt;span&gt;.mst_users
(
  &lt;/span&gt;&lt;span&gt;user_id&lt;/span&gt; &lt;span&gt;integer&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,
  login_id &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  password &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;&lt;span&gt;),
  display_name &lt;/span&gt;&lt;span&gt;character&lt;/span&gt; &lt;span&gt;varying&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;&lt;span&gt;),
  enabled boolean,
  &lt;/span&gt;&lt;span&gt;CONSTRAINT&lt;/span&gt; users_pkey &lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;user_id&lt;/span&gt;&lt;span&gt;)
);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是我用的数据提供参考 上面是权限下面是用户&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/386083/201712/386083-20171219143601521-207762918.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;画面&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;先说一下登录（login.html）画面&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE HTML&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; thymeleaf 导入 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;xmlns:th&lt;/span&gt;&lt;span&gt;=&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;xmlns:sec&lt;/span&gt;&lt;span&gt;=&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登录&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;../js/jquery-3.2.1.min.js&quot;&lt;/span&gt;&lt;span&gt; th:src&lt;/span&gt;&lt;span&gt;=&quot;@{/js/jquery-3.2.1.min.js}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;../css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span&gt; th:src&lt;/span&gt;&lt;span&gt;=&quot;@{/css/bootstrap.min.css}&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    })
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; common 的 定义好的 header模板 引用  参数 title  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;     Bootstrap的容器Class使用 
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;     container ：用于固定宽度并支持响应式布局的容器 
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;     container-fluid ：用于 100% 宽度，占据全部视口（viewport）的容器。
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt; th:replace&lt;/span&gt;&lt;span&gt;=&quot;common :: header('login') &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;Bootstrap
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;            .row:行控制  一行有12列
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            .clo-md-4:列控制 表示 占 4列
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;            .md-offfset-4:向右侧偏移4
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;          &lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-4 col-md-offset-4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel panel-default&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-heading&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3 &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-title&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Login&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-body&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;frmLogin&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; th:action&lt;/span&gt;&lt;span&gt;=&quot;@{'/login'}&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;                             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group form-inline&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;txtUserName&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;col-md-3 control-label&quot;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;                                    style&lt;/span&gt;&lt;span&gt;=&quot;text-align: right;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户名&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-9&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:60%;&quot;&lt;/span&gt;&lt;span&gt; placeholder&lt;/span&gt;&lt;span&gt;=&quot;请输入用户名 &amp;amp;#8727;&quot;&lt;/span&gt;&lt;span&gt; autofocus&lt;/span&gt;&lt;span&gt;=&quot;autofocus&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;txtUserCd&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt;  value&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;                                    th:id&lt;/span&gt;&lt;span&gt;=&quot;usrCode&quot;&lt;/span&gt;&lt;span&gt; required&lt;/span&gt;&lt;span&gt;=&quot;required&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt;                                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;                             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt;                             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group form-inline&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding-top:45px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;45&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;txtUserPwd&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;col-sm-3 control-label&quot;&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt; &lt;span&gt;                                    style&lt;/span&gt;&lt;span&gt;=&quot;text-align: right;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;密码&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;47&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-9&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;48&lt;/span&gt;                                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width:60%;&quot;&lt;/span&gt;&lt;span&gt; placeholder&lt;/span&gt;&lt;span&gt;=&quot;password &amp;amp;#8727;&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;txtUserPwd&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt; required&lt;/span&gt;&lt;span&gt;=&quot;required&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;49&lt;/span&gt;                                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt;                             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;51&lt;/span&gt;                             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-offset-3 col-md-9&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;53&lt;/span&gt;                                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;                                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;span&gt;请记住我(未实现)
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;                                         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;56&lt;/span&gt;                                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;57&lt;/span&gt;                                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;                             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;59&lt;/span&gt;                             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;60&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-offset-3 col-md-5&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;61&lt;/span&gt;                                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary btn-block&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;action&quot;&lt;/span&gt;
&lt;span&gt;62&lt;/span&gt; &lt;span&gt;                                        value&lt;/span&gt;&lt;span&gt;=&quot;login&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;登录&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt;                                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;64&lt;/span&gt;                             
&lt;span&gt;65&lt;/span&gt;                             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;66&lt;/span&gt;                             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;67&lt;/span&gt;                                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot; col-md-12&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;padding-top:15px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;68&lt;/span&gt;                                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;alert alert-danger&quot;&lt;/span&gt;&lt;span&gt; role&lt;/span&gt;&lt;span&gt;=&quot;alert&quot;&lt;/span&gt;&lt;span&gt; th:if&lt;/span&gt;&lt;span&gt;=&quot;${loginError}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;69&lt;/span&gt;                                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;用户名或者用户密码不正确，请重新输入&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;strong&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;70&lt;/span&gt;                                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;71&lt;/span&gt;                                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;72&lt;/span&gt;                             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;73&lt;/span&gt;                         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;74&lt;/span&gt;                         
&lt;span&gt;75&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;76&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;77&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;78&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;79&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;80&lt;/span&gt; 
&lt;span&gt;81&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; common 的 定义好的 fotter模板引用  无参  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;82&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt; th:replace&lt;/span&gt;&lt;span&gt;=&quot;common :: footer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;83&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;84&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;85&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说一下这个画面遭遇的问题吧&lt;/p&gt;
&lt;p&gt;坑一、L8，9 的资源引用&lt;/p&gt;
&lt;p&gt;spring boot 有自己默认的资源引用文件夹（&lt;strong&gt;/META-INF/resources/ ，/resources/ ，/static/ ，/public/&lt;/strong&gt;）所以用到的资源文件一定要这些&lt;/p&gt;
&lt;p&gt;下面否则会读取不到，当然自己也可以自己定义直接写在application.properties文件里就好了，有一个问题就是 &lt;strong&gt;如果自己配置了默认的就不能用了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;坑二、L40，48 &lt;/p&gt;
&lt;p&gt;这里的用户名和密码的控件的name是和后台传给&lt;/p&gt;
&lt;p&gt;  formLogin().usernameParameter(&quot;txtUserCd&quot;) .passwordParameter(&quot;txtUserPwd&quot;)  这个两个函数的参数要保持一致 &lt;/p&gt;
&lt;p&gt;在网上看到说一定要 用 username 和 password 看来也不是必需  但 保持一致 还是有必要的&lt;/p&gt;

&lt;p&gt;坑三、这次demo里没有用到但遭遇过 关于ajax 被拦截的问题&lt;/p&gt;
&lt;p&gt;参考我这篇 &lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/zhufu9426/p/7814084.html&quot; target=&quot;_blank&quot;&gt;Spring Security Ajax 被拦截&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后说一下登录成功跳转到的main_menu.html画面&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE HTML&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;xmlns:th&lt;/span&gt;&lt;span&gt;=&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;xmlns:sec&lt;/span&gt;&lt;span&gt;=&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;MAIN MENU&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;IE=edge&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;../js/jquery-3.2.1.min.js&quot;&lt;/span&gt;&lt;span&gt; th:src&lt;/span&gt;&lt;span&gt;=&quot;@{/js/jquery-3.2.1.min.js}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;../css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span&gt; th:src&lt;/span&gt;&lt;span&gt;=&quot;@{/css/bootstrap.min.css}&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body &lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&quot;margin:0;&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container-fluid&quot;&lt;/span&gt;&lt;span&gt;  th:replace&lt;/span&gt;&lt;span&gt;=&quot;common :: header('MAIN MENU')&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;margin-top:50px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-offset-2 col-md-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;           &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;th:if&lt;/span&gt;&lt;span&gt;=&quot;${#authorization.expression('hasAnyAuthority(''__${session.authorityKindMap}__'')')}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;                 当前用户权限:&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;th:text&lt;/span&gt;&lt;span&gt;=&quot;${session.authorityKindMap}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;...&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;           
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;stow_menu.html&quot;&lt;/span&gt;&lt;span&gt; th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/stow_menu.html}&quot;&lt;/span&gt;&lt;span&gt; sec:authorize&lt;/span&gt;&lt;span&gt;=&quot;hasAnyAuthority('ROLE_USER',&lt;span&gt;'ROLE_ADMIN'&lt;/span&gt;)&quot;&lt;/span&gt;  
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary  btn-lg btn-block&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;MENU(普通以上权限)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;  sec:authorize&lt;/span&gt;&lt;span&gt;=&quot;!hasAnyAuthority('ROLE_USER','ROLE_ADMIN')&quot;&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary  btn-lg btn-block&quot;&lt;/span&gt;&lt;span&gt; disabled&lt;/span&gt;&lt;span&gt;=&quot;disabled&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;AAAAA&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;      
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;manage_menu.html&quot;&lt;/span&gt;&lt;span&gt; th:href&lt;/span&gt;&lt;span&gt;=&quot;@{/manage_menu.html}&quot;&lt;/span&gt;&lt;span&gt; sec:authorize&lt;/span&gt;&lt;span&gt;=&quot;hasAnyAuthority('ROLE_ADMIN')&quot;&lt;/span&gt;  
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;                class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary btn-lg btn-block&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;MENU(管理员以上权限)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;  sec:authorize&lt;/span&gt;&lt;span&gt;=&quot;!hasAnyAuthority('ROLE_ADMIN')&quot;&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;                class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary btn-lg btn-block&quot;&lt;/span&gt;&lt;span&gt; disabled&lt;/span&gt;&lt;span&gt;=&quot;disabled&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;管理MENU&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt; th:replace&lt;/span&gt;&lt;span&gt;=&quot;common :: footer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;spring security 是可以控制到控件的&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt; L17 authorization.expression 先说这个函数 从网上查 然而并没有发现有效资料 没办法只好去翻一下源码了&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/386083/201712/386083-20171220171810834-2030321002.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;从这里并看不出什么 只能推测返回的是一个Boolean 和 配合 thymeleaf 的 th:if&lt;/p&gt;
&lt;p&gt;继续 看它调用的 函数 AuthUtils.authorizeUsingAccessExpression&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/386083/201712/386083-20171220174540740-170983746.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;源码比较多截取一下关键信息 这里值得注意的就是 L237 这个判断以为都是返回的false&lt;/p&gt;
&lt;p&gt;从 L240 和 L249 的log 来分析看  一个是 Access GRANTED(授予访问权限) 一个是Access DENIED(拒绝访问)&lt;/p&gt;
&lt;p&gt;到此也可以推出你对你传入表达式的权限判断，如果在看一下L237的代码基本就比较明了&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ExpressionUtils {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; evaluateAsBoolean(Expression expr, EvaluationContext ctx) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; ((Boolean) expr.getValue(ctx, Boolean.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)).booleanValue();
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (EvaluationException e) {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException(&quot;Failed to evaluate expression '&quot;
&lt;span&gt; 9&lt;/span&gt;                     + expr.getExpressionString() + &quot;'&quot;&lt;span&gt;, e);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;尤其是&lt;/span&gt; &lt;span&gt;&lt;span&gt;new IllegalArgumentException 这个错误信息 文档里给的描述 [Represent an exception that occurs during expression evaluation.]执行表达式出错&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;当然这样的说还是有些武断的 但这次不是解读源码 所以能服务于我们这次demo就可以了&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;然后是还是当前行&lt;span&gt;&lt;span&gt;(L17)&lt;/span&gt;&lt;/span&gt;的&lt;/span&gt; &lt;span&gt;hasAnyAuthority 这个函数&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;先说一下 研究它的时候一个小插曲&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;我查这函数的时候是英文版和中文版对照着看 发现所谓的中文版就是 谷歌出来 贴上了 我也是无力吐槽了 贴下来感受一下&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;tableblock&quot;&gt;&lt;span&gt;&lt;span&gt;【&lt;/span&gt;&lt;/span&gt;&lt;code&gt;hasAnyAuthority([authority1,authority2])&lt;/code&gt;&lt;/p&gt;
&lt;p class=&quot;tableblock&quot;&gt;如果当前的主体有任何提供的角色（给定的作为一个逗号分隔的字符串列表）的话，返回&lt;code&gt;true&lt;/code&gt;.&lt;span&gt;&lt;span&gt;】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;其实这里就是用这个函数来控制像访问这个控件或者画面所需要的权限可以一个也可以是多个&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;最后再说一个细节也是当前行(L17)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;hasAnyAuthority(''&lt;span&gt;__&lt;/span&gt;${session.authorityKindMap}&lt;span&gt;__&lt;/span&gt;'')&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;就是这个标红的下划线 意思是预处理 如果不这么写 &lt;span&gt;&lt;span&gt;hasAnyAuthority&lt;/span&gt;&lt;/span&gt;会报上面说到的这个&lt;span&gt;EvaluationException错 因为直接 被解析字符串了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;所以加上预处理把session里的内容提前取出来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;然后说加这一行的原因是 下面的都是权限都是硬编码写死的这里写一个从数据库取的动态的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; L21，26&lt;/p&gt;
&lt;p&gt;sec:authorize 这个就是 spring security的标准标签 没什么要说的&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;hasAnyAuthority('ROLE_USER','ROLE_ADMIN') 函数是说当前的这个标签 需要 'ROLE_USER','ROLE_ADMIN' 只有拥有这两个权限的任何一个就能访问&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;然后要说的 这两个参数是取决于你自己定义的是什么 或作说你在后台向这个 Collection&amp;lt;GrantedAuthority&amp;gt; list 放进取的是什么&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;也是不是网上说必须 以 &quot;&lt;span&gt;&lt;span&gt;ROLE_&lt;span&gt;&lt;span&gt;&quot;开头 也可以是其他的&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最后说一下 如果没有权限或者 其他的错误默认被拦截到 error.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;画面本身是没什么可以说的 就是 显示error 或者 提示重新登录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这个 画面名值得说一下 因为 &lt;span&gt;&lt;span&gt;spring security&lt;/span&gt;&lt;/span&gt; 默认 把一些 错比如 404，403 甚至 空指针  直接映射到这个 叫error.html的画面上&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;本来想一篇写完呢 写着写着就多了 还有很多重要的没写 都放到一篇里 篇幅有点多了 那就写两篇吧&lt;/p&gt;
&lt;p&gt;上 就先到这。。。&lt;/p&gt;

</description>
<pubDate>Fri, 22 Dec 2017 07:23:00 +0000</pubDate>
<dc:creator>_怪蜀黍</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhufu9426/p/7883739.html</dc:identifier>
</item>
<item>
<title>beautifulSoup模块 - JeffD</title>
<link>http://www.cnblogs.com/Jeffding/p/8082843.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Jeffding/p/8082843.html</guid>
<description>&lt;p&gt;　　这个库用来对网页进行解析功能，十分强大，有了它我们可以减少对正则的使用，也能顺利的从网页源码中拿到我们要的值。他是一个灵活，方便的网页解析库，处理高效，支持多种解析器。&lt;/p&gt;
&lt;p&gt;　　这个库把HTML源码解析成对象与对象的关系，这样就不需要操作字符串这样简单的繁琐的操作了。&lt;/p&gt;
&lt;p&gt;　　BeautifulSoup是将HTML转化为一个复杂的树形结构，每个节点都是python对象，有前端基础的同学会知道，类似DOM对象。BeautifulSoup中的对象大致有四种，Tag、NavigableString、BeautifulSoup、Comment。&lt;/p&gt;

&lt;p&gt;　　BeautifulSoup解析一个HTML源码，能够得到一个 BeautifulSoup 的对象,并能按照标准的缩进格式的结构输出。在实际操作中，我们会将所需要的标签通过选择器查找出来，然后通过操作Tag对象来获取所需信息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_201d04f7-fc59-4e68-98d0-d5fcba2f8ae6&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_201d04f7-fc59-4e68-98d0-d5fcba2f8ae6&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_201d04f7-fc59-4e68-98d0-d5fcba2f8ae6&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;from&lt;/span&gt; bs4 &lt;span&gt;import&lt;/span&gt;&lt;span&gt; BeautifulSoup

html &lt;/span&gt;= &lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;The Dormouse's story&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p class=&quot;title&quot;&amp;gt;&amp;lt;b&amp;gt;The Dormouse's story&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p class=&quot;story&quot;&amp;gt;Once upon a time there were three little sisters; and their names were
&amp;lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&amp;gt;Elsie&amp;lt;/a&amp;gt;,
&amp;lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&amp;gt;Lacie&amp;lt;/a&amp;gt; and
&amp;lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&amp;gt;Tillie&amp;lt;/a&amp;gt;;
and they lived at the bottom of a well.&amp;lt;/p&amp;gt;
&amp;lt;p class=&quot;story&quot;&amp;gt;...&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
soup &lt;/span&gt;= BeautifulSoup(html,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;html.parser&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(soup.prettify())
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;#############################&lt;/span&gt;
&lt;span&gt;输出的结果：
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;
   The Dormouse's story
  &amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
  &amp;lt;p class=&quot;title&quot;&amp;gt;
   &amp;lt;b&amp;gt;
    The Dormouse's story
   &amp;lt;/b&amp;gt;
  &amp;lt;/p&amp;gt;
  &amp;lt;p class=&quot;story&quot;&amp;gt;
   Once upon a time there were three little sisters; and their names were
   &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&amp;gt;
    Elsie
   &amp;lt;/a&amp;gt;
   ,
   &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&amp;gt;
    Lacie
   &amp;lt;/a&amp;gt;
   and
   &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&amp;gt;
    Tillie
   &amp;lt;/a&amp;gt;
   ;
and they lived at the bottom of a well.
  &amp;lt;/p&amp;gt;
  &amp;lt;p class=&quot;story&quot;&amp;gt;
   ...
  &amp;lt;/p&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;BeautifulSoup解析格式化输出&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　这样我们就可以轻松的找到复杂的网页结构中我们需要的信息了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_eecb0c48-7524-426f-9359-4435e3fe65fe&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_eecb0c48-7524-426f-9359-4435e3fe65fe&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_eecb0c48-7524-426f-9359-4435e3fe65fe&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;包含所有a标签的列表[&amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&amp;gt;Elsie&amp;lt;/a&amp;gt;,...]&lt;/span&gt;
&lt;span&gt;for&lt;/span&gt; link &lt;span&gt;in&lt;/span&gt; soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(link.get(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;取出所有链接&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.get_text())&lt;span&gt;#&lt;/span&gt;&lt;span&gt;取出标签里的文本信息&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;找到所有a标签下的链接&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　可以看出bs4的功能是十分的强大，用起来也非常的简单，较之正则表达式操作起来也是非常的简单。&lt;/p&gt;

&lt;p&gt;　　Beautiful Soup支持Python标准库中的HTML解析器,还支持一些第三方的解析器，推荐我们安装lxml解析器，这个解析器更加强大，速度更快。&lt;/p&gt;
&lt;p&gt;　　几种常见的解析器：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1165242/201712/1165242-20171222124245896-1189616513.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　标签选择器：通过这种soup.标签名 我们就可以获得这个标签的内容。通过这种方式获取标签，如果文档中有多个这样的标签，返回的结果是第一个标签的内容，如上面我们通过soup.p获取p标签，而文档中有多个p标签，但是只返回了第一个p标签内容。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.title)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;title&amp;gt;The Dormouse's story&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(type(soup.title))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;class 'bs4.element.Tag'&amp;gt;是一个bs4的对象&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;取到的第一个标签&amp;lt;p class=&quot;title&quot;&amp;gt;&amp;lt;b&amp;gt;The Dormouse's story&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.a)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&amp;gt;Elsie&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　获取名称：当我们通过soup.title.name的时候就可以获得该title标签的名称，即title。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.title.name)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(type(soup.title.name))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;class 'str'&amp;gt;&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.title.parent.name)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;head（取到了父标签名字）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　获取属性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p.attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;])
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.p[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;])&lt;span&gt;#&lt;/span&gt;&lt;span&gt;['title']把所有的class名存放到一个列表中返回，也有可能属性不是class是其他&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p.attrs[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;])&lt;span&gt;#&lt;/span&gt;&lt;span&gt;['title']&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　获取内容：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(soup.标签.string)
结果就可以获取第一个标签的内容。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.title.string)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;The Dormouse's story&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p.string)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;The Dormouse's story&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　嵌套选择：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.head.title.string)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;The Dormouse's story&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　子节点和子孙节点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.p.contents)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;结果是将一个p标签下的所有子标签存入到了一个列表中&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; link &lt;span&gt;in&lt;/span&gt; soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;):&lt;span&gt;#&lt;/span&gt;&lt;span&gt;soup.p与link都是bs4的p标签的对象&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(link.contents)
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;[&amp;lt;b&amp;gt;The Dormouse's story&amp;lt;/b&amp;gt;]&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt;['Once upon a time there were three little sisters; and their names were\n', &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&amp;gt;Elsie&amp;lt;/a&amp;gt;, ',\n', &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&amp;gt;Lacie&amp;lt;/a&amp;gt;, ' and\n', &amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&amp;gt;Tillie&amp;lt;/a&amp;gt;, ';\nand they lived at the bottom of a well.']&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt;['...']&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　children获取p标签下的所有子节点内容和通过contents获取的结果是一样的，但是不同的地方是soup.p.children是一个迭代对象，而不是列表，只能通过循环的方式获取素有的信息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; link &lt;span&gt;in&lt;/span&gt; soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(link.children.&lt;span&gt;__next__&lt;/span&gt;())&lt;span&gt;#&lt;/span&gt;&lt;span&gt;说明它是一个可迭代对象&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　通过contents以及children都是获取子节点，如果想要获取子孙节点可以通过soup.descendants，这种获取的结果也是一个迭代器。&lt;/p&gt;
&lt;p&gt;　　父节点和祖先节点&lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;通过soup.a.parent就可以获取父节点的信息；&lt;/p&gt;
&lt;p&gt;　　通过list(enumerate(soup.a.parents))可以获取祖先节点，这个方法返回的结果是一个列表，会分别将a标签的父节点的信息存放到列表中，以及父节点的父节点也放到列表中，并且最后还会讲整个文档放到列表中，所有列表的最后一个元素以及倒数第二个元素都是存的整个文档的信息。&lt;/p&gt;
&lt;p&gt;　　兄弟节点：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;soup.a.next_siblings 获取后面的兄弟节点
soup.a.previous_siblings 获取前面的兄弟节点
soup.a.next_sibling 获取下一个兄弟标签
souo.a.previous_sinbling 获取上一个兄弟标签&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_e65f7fc7-f26c-4194-ad06-a6a5f2cf374a&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e65f7fc7-f26c-4194-ad06-a6a5f2cf374a&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e65f7fc7-f26c-4194-ad06-a6a5f2cf374a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
html=&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
&amp;lt;div class=&quot;panel&quot;&amp;gt;
    &amp;lt;div class=&quot;panel-heading&quot;&amp;gt;
        &amp;lt;h4&amp;gt;Hello&amp;lt;/h4&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;panel-body&quot;&amp;gt;
        &amp;lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&amp;gt;
            &amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;
            &amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;
            &amp;lt;li class=&quot;element&quot;&amp;gt;Jay&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
        &amp;lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&amp;gt;
            &amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;
            &amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;假设现在爬取了这样的网页&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　find_all(name,attrs,recursive,text,**kwargs)可以根据标签名，属性，内容查找文档。&lt;/p&gt;
&lt;p&gt;　　参数详解：&lt;/p&gt;
&lt;p&gt;　　name参数：&lt;/p&gt;
&lt;p&gt;　　取出标签为name的所有标签，存放到列表中，索引取出来都是bs4对象。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
soup = BeautifulSoup(html, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;lxml&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;取出所有ul放入一个列表中，每一个ul单独取都是一个bs4对象&lt;/span&gt;
&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
[&amp;lt;ul class=&quot;list&quot; id=&quot;list-1&quot;&amp;gt;
&amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;
&amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;
&amp;lt;li class=&quot;element&quot;&amp;gt;Jay&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;, &amp;lt;ul class=&quot;list list-small&quot; id=&quot;list-2&quot;&amp;gt;
&amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;
&amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;]
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(type(soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)[0]))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;class 'bs4.element.Tag'&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　要获得里面的li标签则需要对每个bs4对象再次使用find_all()方法。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; ul &lt;span&gt;in&lt;/span&gt; soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(ul.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
[&amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;, &amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;, &amp;lt;li class=&quot;element&quot;&amp;gt;Jay&amp;lt;/li&amp;gt;]
[&amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;, &amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;]
&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　name除了可以传字符串以外还可以传正则表达式或者列表。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;name传这三种方式都可以&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.find_all(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.find_all(re.compile(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;^b&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.find_all([&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　attr参数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.find_all(attrs={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;list-1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.find_all(&lt;span&gt;''&lt;/span&gt;,{&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;element&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;}))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;class需要使用这种方式取&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　attrs可以传入字典的方式来查找标签，但是这里有个特殊的就是class,因为class在python中是特殊的字段，所以如果想要查找class相关的可以更改为soup.find_all('',{&quot;class&quot;:&quot;element})或者soup.findAll(class_='class')&lt;/p&gt;
&lt;p&gt;。&lt;/p&gt;
&lt;p&gt;　　text参数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.find_all(text=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Foo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;['Foo', 'Foo']&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.find_all(text=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Fo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;[]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　结果返回的是查到的所有的text='Foo'的文本，必须精确匹配。&lt;/p&gt;
&lt;p&gt;　　recursive参数：&lt;/p&gt;
&lt;p&gt;　　recursive的默认参数为True，BeautifulSoup会查找所有后代节点，而只想搜索子节点时，可设置参数为False。&lt;/p&gt;
&lt;p&gt;　　find的用法：&lt;/p&gt;
&lt;p&gt;　　find(name,attrs,recursive,text,**kwargs)，与find_all()的区别就是find返回的匹配结果的第一个元素。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_a05ac955-44fd-4c79-9970-3e0553239dd8&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_a05ac955-44fd-4c79-9970-3e0553239dd8&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_a05ac955-44fd-4c79-9970-3e0553239dd8&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;find_parents()返回所有祖先节点，find_parent()返回直接父节点。
find_next_siblings()返回后面所有兄弟节点，find_next_sibling()返回后面第一个兄弟节点。
find_previous_siblings()返回前面所有兄弟节点，find_previous_sibling()返回前面第一个兄弟节点。
find_all_next()返回节点后所有符合条件的节点, find_next()返回第一个符合条件的节点
find_all_previous()返回节点后所有符合条件的节点, find_previous()返回第一个符合条件的节点&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;find的用法&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;　　bs4提供select()直接传入CSS选择器就可以完成选择，与前端匹配css的方式基本一致。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;print&lt;/span&gt;(soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.panel .panel-heading&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;[&amp;lt;div class=&quot;panel-heading&quot;&amp;gt;&amp;lt;h4&amp;gt;Hello&amp;lt;/h4&amp;gt;&amp;lt;/div&amp;gt;]&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul li&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#list-2 .element&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;[&amp;lt;li class=&quot;element&quot;&amp;gt;Foo&amp;lt;/li&amp;gt;, &amp;lt;li class=&quot;element&quot;&amp;gt;Bar&amp;lt;/li&amp;gt;]&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(type(soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)[0]))&lt;span&gt;#&lt;/span&gt;&lt;span&gt;&amp;lt;class 'bs4.element.Tag'&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　get_text()获取内容：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; li &lt;span&gt;in&lt;/span&gt; soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(li.get_text())
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　通过[属性名]或者attrs[属性名]获得属性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;for&lt;/span&gt; ul &lt;span&gt;in&lt;/span&gt; soup.select(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(ul[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;])&lt;span&gt;#&lt;/span&gt;&lt;span&gt;两种方法的效果一致&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(ul.attrs[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　可以说这个库是非常的实用的，这里只是一部分常用的操作，还有更多的操作，在使用bs4的时候可以进一步查找官方文档：&lt;a href=&quot;http://beautifulsoup.readthedocs.io/zh_CN/latest/&quot;&gt;Beautiful Soup 4.4.0 文档&lt;/a&gt;。&lt;/p&gt;
</description>
<pubDate>Fri, 22 Dec 2017 07:18:00 +0000</pubDate>
<dc:creator>JeffD</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Jeffding/p/8082843.html</dc:identifier>
</item>
<item>
<title>基于Accord.Audio和百度语言识别 - linbin524</title>
<link>http://www.cnblogs.com/linbin524/p/8086123.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/linbin524/p/8086123.html</guid>
<description>&lt;p&gt;---恢复内容开始---&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;目标需求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;使用录音形式，模拟微信语音聊天。按住录音，松开发送语音，并完成语音识别。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;ps：百度的语言识别有60秒长度限制，需要自己做好控制。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实现方案&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;采用C# winform 程序实现桌面版，采用Accord 实现语音录制停止等基础语音操作，操作停止按钮，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;自动调用百度语言识别接口将识别内容显示在文本框中。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;备注，语音识别需要配套阵列麦克风，（请先注册百度开发者）百度语音识别接口请参考：&lt;a href=&quot;http://ai.baidu.com/docs#/ASR-Online-Csharp-SDK/top&quot; target=&quot;_blank&quot;&gt;http://ai.baidu.com/docs#/ASR-Online-Csharp-SDK/top&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实现效果展示&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/580722/201712/580722-20171222145728881-1302863448.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;实现过程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;1、下载Accord 完成语音操作引用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;accord 官方 地址：&lt;a href=&quot;http://accord-framework.net/intro.html&quot; target=&quot;_blank&quot;&gt;http://accord-framework.net/intro.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官网中有示例demo，笔者的就是在示例demo上做改造的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/580722/201712/580722-20171222151006256-1481462637.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;建立自己的项目，引用包中的dll&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/580722/201712/580722-20171222150811100-364134866.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; 界面代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;84&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Drawing;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.IO;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Windows.Forms;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Accord.Audio;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Accord.Audio.Formats;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Accord.DirectSound;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Accord.Audio.Filters;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Baidu.Aip.API;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; SampleApp
{

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MainForm : Form
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; MemoryStream stream;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; IAudioSource source;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; IAudioOutput output;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; WaveEncoder encoder;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; WaveDecoder decoder;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;float&lt;/span&gt;&lt;span&gt;[] current;

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; frames;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; samples;
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; TimeSpan duration;
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 备注，语音识别需要配套阵列麦克风
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;

        &lt;span&gt;public&lt;/span&gt;&lt;span&gt; MainForm()
        {
            InitializeComponent();

           
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Configure the wavechart&lt;/span&gt;
            chart.SimpleMode = &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            chart.AddWaveform(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wave&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Color.Green, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;&lt;span&gt;);

            updateButtons();
           &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Application.Idle += ProcessFrame;&lt;/span&gt;
&lt;span&gt;        }
     
        &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; ProcessFrame(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e) {

          
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;   从声卡开始录制音频
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; btnRecord_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Create capture device&lt;/span&gt;
            source = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AudioCaptureDevice()//这里是核心
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Listen on 22050 Hz&lt;/span&gt;
                DesiredFrameSize = &lt;span&gt;4096&lt;/span&gt;&lt;span&gt;,
                SampleRate &lt;/span&gt;= &lt;span&gt;16000&lt;/span&gt;,&lt;span&gt;//&lt;/span&gt;&lt;span&gt;采样率 
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;SampleRate = 22050,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;采样率&lt;/span&gt;
                Channels=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; We will be reading 16-bit PCM&lt;/span&gt;
                Format =&lt;span&gt; SampleFormat.Format16Bit
            };

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Wire up some events&lt;/span&gt;
            source.NewFrame +=&lt;span&gt; source_NewFrame;
            source.AudioSourceError &lt;/span&gt;+=&lt;span&gt; source_AudioSourceError;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Create buffer for wavechart control&lt;/span&gt;
            current = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;float&lt;/span&gt;&lt;span&gt;[source.DesiredFrameSize];

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Create stream to store file&lt;/span&gt;
            stream = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MemoryStream();
            encoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WaveEncoder(stream);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Start&lt;/span&gt;
&lt;span&gt;            source.Start();
            updateButtons();
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;   播放录制的音频流。
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; btnPlay_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; First, we rewind the stream&lt;/span&gt;
            stream.Seek(&lt;span&gt;0&lt;/span&gt;&lt;span&gt;, SeekOrigin.Begin);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Then we create a decoder for it&lt;/span&gt;
            decoder = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WaveDecoder(stream);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Configure the track bar so the cursor
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; can show the proper current position&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; (trackBar1.Value &amp;lt;&lt;span&gt; decoder.Frames)
                decoder.Seek(trackBar1.Value);
            trackBar1.Maximum &lt;/span&gt;=&lt;span&gt; decoder.Samples;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Here we can create the output audio device that will be playing the recording&lt;/span&gt;
            output = &lt;span&gt;new&lt;/span&gt; AudioOutputDevice(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.Handle, decoder.SampleRate, decoder.Channels);

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Wire up some events&lt;/span&gt;
            output.FramePlayingStarted +=&lt;span&gt; output_FramePlayingStarted;
            output.NewFrameRequested &lt;/span&gt;+=&lt;span&gt; output_NewFrameRequested;
            output.Stopped &lt;/span&gt;+=&lt;span&gt; output_PlayingFinished;

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Start playing!&lt;/span&gt;
&lt;span&gt;            output.Play();

            updateButtons();
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 停止录制或播放流。
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; btnStop_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Stops both cases&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; (source != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; If we were recording&lt;/span&gt;
&lt;span&gt;                source.SignalToStop();
                source.WaitForStop();
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (output != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; If we were playing&lt;/span&gt;
&lt;span&gt;                output.SignalToStop();
                output.WaitForStop();
            }

            updateButtons();

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Also zero out the buffers and screen&lt;/span&gt;
            Array.Clear(current, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;, current.Length);
            updateWaveform(current, current.Length);
            SpeechAPI speechApi &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; SpeechAPI();

            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; result = speechApi.AsrData(stream,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wav&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            tb_result.Text &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;语音识别结果：&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+&lt;span&gt;result;
        }



        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 当音频有错误时，将调用这个回调函数。 
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;///&lt;/span&gt;   
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; source_AudioSourceError(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, AudioSourceErrorEventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Exception(e.Description);
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;  
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;  每当有新的输入音频帧时，该方法将被调用。
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt;                                                      
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; source_NewFrame(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, NewFrameEventArgs eventArgs)
        {
           
            eventArgs.Signal.CopyTo(current);

        
            updateWaveform(current, eventArgs.Signal.Length);

         
            encoder.Encode(eventArgs.Signal);

          
            duration &lt;/span&gt;+=&lt;span&gt; eventArgs.Signal.Duration;
           
            samples &lt;/span&gt;+=&lt;span&gt; eventArgs.Signal.Samples;
            frames &lt;/span&gt;+=&lt;span&gt; eventArgs.Signal.Length;
        }


        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; output_FramePlayingStarted(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, PlayFrameEventArgs e)
        {
            updateTrackbar(e.FrameIndex);

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (e.FrameIndex + e.Count &amp;lt;&lt;span&gt; decoder.Frames)
            {
                &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; previous =&lt;span&gt; decoder.Position;
                decoder.Seek(e.FrameIndex);

                Signal s &lt;/span&gt;=&lt;span&gt; decoder.Decode(e.Count);
                decoder.Seek(previous);

                updateWaveform(s.ToFloat(), s.Length);
            }
        }

     
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; output_PlayingFinished(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            updateButtons();

            Array.Clear(current, &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;, current.Length);
            updateWaveform(current, current.Length);
        }

     
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; output_NewFrameRequested(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, NewFrameRequestedEventArgs e)
        {
         
            e.FrameIndex &lt;/span&gt;=&lt;span&gt; decoder.Position;

           
            Signal signal &lt;/span&gt;=&lt;span&gt; decoder.Decode(e.Frames);

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (signal == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                
                e.Stop &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
            }

         
            e.Frames &lt;/span&gt;=&lt;span&gt; signal.Length;

          
            signal.CopyTo(e.Buffer);
        }




        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; updateWaveform(&lt;span&gt;float&lt;/span&gt;[] samples, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; length)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (InvokeRequired)
            {
                BeginInvoke(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Action(() =&amp;gt;&lt;span&gt;
                {
                    chart.UpdateWaveform(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wave&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, samples, length);
                }));
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                chart.UpdateWaveform(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;wave&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, current, length);
            }
        }

       
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; 
        &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; updateTrackbar(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; value)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (InvokeRequired)
            {
                BeginInvoke(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Action(() =&amp;gt;&lt;span&gt;
                {
                    trackBar1.Value &lt;/span&gt;=&lt;span&gt; Math.Max(trackBar1.Minimum, Math.Min(trackBar1.Maximum, value));
                }));
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                trackBar1.Value &lt;/span&gt;=&lt;span&gt; Math.Max(trackBar1.Minimum, Math.Min(trackBar1.Maximum, value));
            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateButtons()
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (InvokeRequired)
            {
                BeginInvoke(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Action(updateButtons));
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
            }

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (source != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;span&gt; source.IsRunning)
            {
                btnBwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnFwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnPlay.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnStop.Enabled &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                btnRecord.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                trackBar1.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (output != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;span&gt; output.IsRunning)
            {
                btnBwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnFwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnPlay.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnStop.Enabled &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                btnRecord.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                trackBar1.Enabled &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                btnBwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnFwd.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnPlay.Enabled &lt;/span&gt;= stream != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
                btnStop.Enabled &lt;/span&gt;= &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
                btnRecord.Enabled &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
                trackBar1.Enabled &lt;/span&gt;= decoder != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;

                trackBar1.Value &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; MainFormFormClosed(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, FormClosedEventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (source != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) source.SignalToStop();
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (output != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) output.SignalToStop();
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; saveFileDialog1_FileOk(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, System.ComponentModel.CancelEventArgs e)
        {
            Stream fileStream &lt;/span&gt;=&lt;span&gt; saveFileDialog1.OpenFile();
            stream.WriteTo(fileStream);
            fileStream.Close();
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; saveToolStripMenuItem_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            saveFileDialog1.ShowDialog(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        }

       
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; updateTimer_Tick(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            lbLength.Text &lt;/span&gt;= String.Format(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Length: {0:00.00} sec.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, duration.Seconds);
          
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; aboutToolStripMenuItem_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            &lt;/span&gt;&lt;span&gt;new&lt;/span&gt; AboutBox().ShowDialog(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; closeToolStripMenuItem_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            Close();
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; btnIncreaseVolume_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            adjustVolume(&lt;/span&gt;&lt;span&gt;1.25f&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; btnDecreaseVolume_Click(&lt;span&gt;object&lt;/span&gt;&lt;span&gt; sender, EventArgs e)
        {
            adjustVolume(&lt;/span&gt;&lt;span&gt;0.75f&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; adjustVolume(&lt;span&gt;float&lt;/span&gt;&lt;span&gt; value)
        {
        
            stream.Seek(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;, SeekOrigin.Begin);

     
            decoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WaveDecoder(stream);

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; signal =&lt;span&gt; decoder.Decode();

           
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; volume = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; VolumeFilter(value);
            volume.ApplyInPlace(signal);

   
            stream.Seek(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;, SeekOrigin.Begin);
            encoder &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; WaveEncoder(stream);
            encoder.Encode(signal);
        }

    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; 百度语音识别接口：&lt;/p&gt;

&lt;p&gt;说明：百度已经提供sdk，对于支持语音格式需要说明，&lt;/p&gt;
&lt;h2 id=&quot;1241a153&quot;&gt;支持的语音格式&lt;/h2&gt;
&lt;p&gt;原始 PCM 的录音参数必须符合 8k/16k 采样率、16bit 位深、单声道，支持的格式有：pcm（不压缩）、wav（不压缩，pcm编码）、amr（压缩格式）。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; AsrData(&lt;span&gt;string&lt;/span&gt; filePath, &lt;span&gt;string&lt;/span&gt; format = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pcm&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;int&lt;/span&gt; rate = &lt;span&gt;16000&lt;/span&gt;&lt;span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; data =&lt;span&gt;File.ReadAllBytes(filePath);
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; result = _asrClient.Recognize(data, format, &lt;span&gt;16000&lt;/span&gt;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; result.ToString();
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt; 结果评测：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于普通的语言识别效果不好，需要阵列麦克风才可以。&lt;/p&gt;

</description>
<pubDate>Fri, 22 Dec 2017 07:14:00 +0000</pubDate>
<dc:creator>linbin524</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/linbin524/p/8086123.html</dc:identifier>
</item>
<item>
<title>Java开发小技巧（四）：配置文件敏感信息处理 - kMacro</title>
<link>http://www.cnblogs.com/zkh101/p/8085709.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zkh101/p/8085709.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/5266042-e9660555161d2048.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;

&lt;p&gt;不知道在&lt;a href=&quot;http://www.jianshu.com/p/3fa98dd52520&quot;&gt;上一篇文章&lt;/a&gt;中你有没有发现，&lt;code&gt;jdbc.properties&lt;/code&gt;中的数据库密码配置是这样写的：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;jdbc.password=5EF28C5A9A0CE86C2D231A526ED5B388&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其实这不是真正的密码，而是经过AES加密的。&lt;/p&gt;

&lt;p&gt;AES（高级加密标准）是美国联邦政府采用的一种区块加密标准，其替代原先的&lt;br/&gt;DES加密算法，成为对称密钥加密中最流行的算法之一。&lt;br/&gt;AES加密解密的实现就不具体介绍了，这里直接给出源码：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package com.demo.project.monitor.util;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import javax.crypto.*;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import javax.crypto.spec.SecretKeySpec;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.io.UnsupportedEncodingException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.security.InvalidKeyException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.security.NoSuchAlgorithmException;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;import java.security.SecureRandom;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; AESEncryption {
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password = &lt;span class=&quot;st&quot;&gt;&quot;Password&quot;&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;AESEncryption&lt;/span&gt;(){
    }
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;AESEncryption&lt;/span&gt;(String password){
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt; = password;
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 加密&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param content &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;加密内容&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * @return&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;encrypt&lt;/span&gt;(String content) {
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            KeyGenerator kgen = KeyGenerator.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);
            kgen.&lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SecureRandom(password.&lt;span class=&quot;fu&quot;&gt;getBytes&lt;/span&gt;()));
            SecretKey secretKey = kgen.&lt;span class=&quot;fu&quot;&gt;generateKey&lt;/span&gt;();
            &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] enCodeFormat = secretKey.&lt;span class=&quot;fu&quot;&gt;getEncoded&lt;/span&gt;();
            SecretKeySpec key = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SecretKeySpec(enCodeFormat, &lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);
            Cipher cipher = Cipher.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);&lt;span class=&quot;co&quot;&gt;// 创建密码器&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] byteContent = content.&lt;span class=&quot;fu&quot;&gt;getBytes&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;);
            cipher.&lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;(Cipher.&lt;span class=&quot;fu&quot;&gt;ENCRYPT_MODE&lt;/span&gt;, key);&lt;span class=&quot;co&quot;&gt;// 初始化&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] result = cipher.&lt;span class=&quot;fu&quot;&gt;doFinal&lt;/span&gt;(byteContent);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;parseByte2HexStr&lt;/span&gt;(result); &lt;span class=&quot;co&quot;&gt;// 加密&lt;/span&gt;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (NoSuchAlgorithmException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (NoSuchPaddingException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (InvalidKeyException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (UnsupportedEncodingException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (IllegalBlockSizeException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (BadPaddingException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
    }

    &lt;span class=&quot;co&quot;&gt;/**解密&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param content &lt;/span&gt;&lt;span class=&quot;co&quot;&gt; 解密内容&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * @return&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;decrypt&lt;/span&gt;(String content) {
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            KeyGenerator kgen = KeyGenerator.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);
            kgen.&lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SecureRandom(password.&lt;span class=&quot;fu&quot;&gt;getBytes&lt;/span&gt;()));
            SecretKey secretKey = kgen.&lt;span class=&quot;fu&quot;&gt;generateKey&lt;/span&gt;();
            &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] enCodeFormat = secretKey.&lt;span class=&quot;fu&quot;&gt;getEncoded&lt;/span&gt;();
            SecretKeySpec key = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SecretKeySpec(enCodeFormat, &lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);
            Cipher cipher = Cipher.&lt;span class=&quot;fu&quot;&gt;getInstance&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;AES&quot;&lt;/span&gt;);&lt;span class=&quot;co&quot;&gt;// 创建密码器&lt;/span&gt;
            cipher.&lt;span class=&quot;fu&quot;&gt;init&lt;/span&gt;(Cipher.&lt;span class=&quot;fu&quot;&gt;DECRYPT_MODE&lt;/span&gt;, key);&lt;span class=&quot;co&quot;&gt;// 初始化&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] result = cipher.&lt;span class=&quot;fu&quot;&gt;doFinal&lt;/span&gt;(&lt;span class=&quot;fu&quot;&gt;parseHexStr2Byte&lt;/span&gt;(content));
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; String(result); &lt;span class=&quot;co&quot;&gt;// 解密&lt;/span&gt;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (NoSuchAlgorithmException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (NoSuchPaddingException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (InvalidKeyException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (IllegalBlockSizeException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (BadPaddingException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 将二进制转换成16进制&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param buf&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * @return&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;parseByte2HexStr&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt; buf[]) {
        StringBuffer sb = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; StringBuffer();
        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;; i &amp;lt; buf.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt;; i++) {
            String hex = Integer.&lt;span class=&quot;fu&quot;&gt;toHexString&lt;/span&gt;(buf[i] &amp;amp; &lt;span class=&quot;bn&quot;&gt;0xFF&lt;/span&gt;);
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (hex.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt;() == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) {
                hex = '&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;' + hex;
            }
            sb.&lt;span class=&quot;fu&quot;&gt;append&lt;/span&gt;(hex.&lt;span class=&quot;fu&quot;&gt;toUpperCase&lt;/span&gt;());
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; sb.&lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;();
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 将16进制转换为二进制&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param hexStr&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * @return&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] &lt;span class=&quot;fu&quot;&gt;parseHexStr2Byte&lt;/span&gt;(String hexStr) {
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (hexStr.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt;() &amp;lt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[] result = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;[hexStr.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt;()/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;];
        &lt;span class=&quot;kw&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;;i&amp;lt; hexStr.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt;()/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;; i++) {
            &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; high = Integer.&lt;span class=&quot;fu&quot;&gt;parseInt&lt;/span&gt;(hexStr.&lt;span class=&quot;fu&quot;&gt;substring&lt;/span&gt;(i*&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, i*&lt;span class=&quot;dv&quot;&gt;2+1&lt;/span&gt;), &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;);
            &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; low = Integer.&lt;span class=&quot;fu&quot;&gt;parseInt&lt;/span&gt;(hexStr.&lt;span class=&quot;fu&quot;&gt;substring&lt;/span&gt;(i*&lt;span class=&quot;dv&quot;&gt;2+1&lt;/span&gt;, i*&lt;span class=&quot;dv&quot;&gt;2+2&lt;/span&gt;), &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;);
            result[i] = (&lt;span class=&quot;dt&quot;&gt;byte&lt;/span&gt;) (high * &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt; + low);
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; result;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;既然配置文件部分内容已经进行了加密处理，那我们在填充上下文的占位符时就要对其进行解密，获得真正的密码，还记得之前我们在加载配置文件的时候使用的类&lt;code&gt;PropertyPlaceholderConfigurer&lt;/code&gt;吗？我们可以通过对它的&lt;code&gt;resolvePlaceholder&lt;/code&gt;方法进行重写来实现。&lt;/p&gt;
&lt;h2 id=&quot;实现过程&quot;&gt;实现过程&lt;/h2&gt;
&lt;p&gt;首先创建一个继承自&lt;code&gt;PropertyPlaceholderConfigurer&lt;/code&gt;的类&lt;code&gt;EncryptPropertyPlaceholderConfigurer&lt;/code&gt;，然后重写它的方法：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;package com.demo.project.monitor.util;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;import java.util.Properties;&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; * 解密配置文件敏感内容&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; EncryptPropertyPlaceholderConfigurer &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; PropertyPlaceholderConfigurer {
    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;resolvePlaceholder&lt;/span&gt;(String placeholder, Properties props) {
        String result = props.&lt;span class=&quot;fu&quot;&gt;getProperty&lt;/span&gt;(placeholder);
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(placeholder.&lt;span class=&quot;fu&quot;&gt;endsWith&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;jdbc.password&quot;&lt;/span&gt;)){
            AESEncryption aes = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;AESEncryption&lt;/span&gt;();
            String decrypt = aes.&lt;span class=&quot;fu&quot;&gt;decrypt&lt;/span&gt;(result);
            result = decrypt == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; ? result : decrypt;
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; result;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着在spring上下文中将原来的bean&lt;code&gt;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&lt;/code&gt;修改为我们创建的类即可：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;
&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;bean&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; class=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;com.demo.project.monitor.util.EncryptPropertyPlaceholderConfigurer&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;locations&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;classpath:jdbc.properties&lt;span class=&quot;kw&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;property&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;ignoreResourceNotFound&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样spring在填充占位符的时候就会进行判断，对加密后的敏感信息进行解密处理，得到真实的内容。&lt;/p&gt;
&lt;p&gt;文章项目源码已发布到Github：&lt;a href=&quot;https://github.com/ZKHDEV/MultDependPjo&quot; class=&quot;uri&quot;&gt;https://github.com/ZKHDEV/MultDependPjo&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;2.7127659574468&quot;&gt;
&lt;p&gt;本文为作者&lt;a href=&quot;http://www.jianshu.com/u/7c65dc20fdaa&quot;&gt;kMacro&lt;/a&gt;原创，转载请注明来源：&lt;a href=&quot;http://www.jianshu.com/p/600a4e23c14e&quot; class=&quot;uri&quot;&gt;http://www.jianshu.com/p/600a4e23c14e&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Fri, 22 Dec 2017 06:04:00 +0000</pubDate>
<dc:creator>kMacro</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zkh101/p/8085709.html</dc:identifier>
</item>
<item>
<title>【技术分析】DowginCw病毒家族解析 - 阿里聚安全</title>
<link>http://www.cnblogs.com/alisecurity/p/8085627.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/alisecurity/p/8085627.html</guid>
<description>&lt;p&gt;&lt;strong data-spm-anchor-id=&quot;a313e.7916648.0.i1.5c99f195IobQZt&quot;&gt;作者：钱盾反诈实验室&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x1.背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;近期，钱盾反诈实验室通过钱盾恶意代码智能监测引擎感知并捕获一批恶意应用。由于该批病毒会联网加载“CWAPI”插件，故将其命名为“DowginCw”病毒家族。“DowginCw”通过插件形式集成到大量儿童游戏应用中，然后通过发布于各大应用商店或强制软件更新等手段，将恶意代码植入用户手机设备中，用户一旦运行，设备将不停下载、安装其他恶意应用，直接造成用户手机卡顿，话费资损，个人隐私泄漏等风险等。&lt;/p&gt;
&lt;p&gt;“DowginCw”能上架知名应用商店和长期驻留用户设备，是因为它使用了一套成熟的免杀技术，利用这套技术，免杀病毒可在杀软面前肆无忌惮地实施恶意行为而不被发现，其免杀技术手段包括：代码加固保护、插件化，以及代码延迟加载。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;0x2.影响范围&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相关数据表明，早在去年10月“DowginCw”病毒家族应用就上架应用商店。其中几款应用下载量甚至高达3千万，疑似存在刷榜，刷量和刷评分，来诱骗用户下载。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/de8amj18ec4.jpg&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;354&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejbc04tt00.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;142&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejblej4nj0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;293&quot;/&gt;&lt;/p&gt;
&lt;p&gt;目前，钱盾反诈实验室已拦截查杀“DowginCw”病毒家族2603款应用。下图近两月病毒感染设备次数已达93w，平均每日感染用户过万，共计感染87w用户设备。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejc799rgg0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;280&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下表感染用户top10的应用。&lt;/p&gt;

&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;应用名&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;包名&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;感染量&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;魔仙公主换装&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.cocoplay.iceskater&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;107543&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;大球吃小球烧烤&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.mahjong.sichuang&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;39403&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;魔仙公主装扮游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.colorme.game.gongzhuhuayuano&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;28339&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;巴拉拉公主蛋糕&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.fcl.anaadwqra&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;22798&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;奇妙蛋糕屋游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.qiyou.kxct_MM&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;19951&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;小芭比公主游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;air.com.empiregames.fungirlgames&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;14619&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;公主化妆和换装&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.cocoplay.ryenpncocoiceprincess_googleplay&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;12940&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;叶萝莉美甲师（免费版）&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.fc.mhklmjslnad&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;12249&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;可爱公主医生小游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.andromo.dev249143.app236834&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;12058&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;151&quot;&gt;
&lt;p&gt;丛林发型制作世界&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;331&quot;&gt;
&lt;p&gt;com.fancywing.s3&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;78&quot;&gt;
&lt;p&gt;11697&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x3恶意样本分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对“DowginCw”病毒家族其中一样本分析。&lt;/p&gt;
&lt;p&gt;应用名：王子结婚换装小游戏&lt;/p&gt;
&lt;p&gt;包名：com.brainsterapps.google.katyinternational&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1主包解析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先将主包脱壳，拿到加固前代码。下图主包功能模块。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejcu2hgni0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;149&quot;/&gt;&lt;/p&gt;
&lt;p&gt;l   启动恶意代码；&lt;/p&gt;
&lt;p&gt;l   从云端获取恶意推广插件信息；&lt;/p&gt;
&lt;p&gt;l   加载执行恶意推广行为；&lt;/p&gt;
&lt;p&gt;l   监听应用安装、网络改变，进而调用子包，执行恶意行为；&lt;/p&gt;

&lt;p&gt;1.恶意代码是在入口activity的attachBaseContext被加载的，也就是应用一启动就会加载恶意代码块。为了躲避动态沙盒监测，恶意行为会延迟30s执行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejd3s5pqm0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;193&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejda5v4op0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;162&quot;/&gt;&lt;/p&gt;

&lt;p&gt;2.访问http://mail[.]zbmcc.cn/s获取插件Json数据。数据如下，a:插件包下载地址；b:版本号；c:设备sd卡存放位置；d:恶意弹窗控制指令数据，函数call的参数。&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;       &quot;a&quot;: &quot;http://d2[.]chunfeifs[.]com/jfile/ter.jar&quot;,&lt;/p&gt;
&lt;p&gt;       &quot;b&quot;: &quot;5.0&quot;,&lt;/p&gt;
&lt;p&gt;       &quot;c&quot;: &quot;download/br/&quot;,&lt;/p&gt;
&lt;p&gt;       &quot;d&quot;: &quot;1=2,1;3=2;4=2,1;7=3,2,1,30;8=1,1;&quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;3.插件下载地址来自xiongjiong[.]com或chunfeifs[.]com。成功下载后，随后动态加载ter5.0.jar，并反射执行“init”方法完成恶意推广行为初始化，下图“CWAPI”的静态代码块，可知DowginCw的弹窗方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejdiari500.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;475&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后主包通过反射执行子包“call”函数启动恶意推广。&lt;/p&gt;
&lt;p&gt;4.应用安装成功、网络改变广播监听，通过反射调用子包LCReceiver类onReceive函数实现。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2子包恶意推广&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下图子包工作图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejdpkfgps0.png&quot; alt=&quot;&quot; width=&quot;650&quot; height=&quot;93&quot;/&gt;&lt;/p&gt;
&lt;p&gt;设置恶意推送模式和定时弹应用安装提示窗的指令数据，来自mail[.]zbmcc[.]cn返回的json数据中的b字段值，例如数据指令“1=2,1;3=2;4=2,1;7=3,2,1,30;8=1,1;”会开启以下3种推送模式和设定弹应用安装提示窗口定时器：&lt;/p&gt;
&lt;p&gt;内插轮番，在指定的间隔时间在主包应用窗口弹推送窗；&lt;/p&gt;
&lt;p&gt;解锁，设备解锁弹推送窗；&lt;/p&gt;
&lt;p&gt;外插轮番，在指定的间隔时间在任意应用窗口弹推送窗；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejdst4js20.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;288&quot;/&gt;&lt;/p&gt;
&lt;p&gt;“DowginCw”每发起一次恶意推送，都会从go[.]1mituan[.]com获取加密的待推送应用数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46eje31jtif0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;144&quot;/&gt;&lt;/p&gt;
&lt;p&gt;经解压解密可获取数据如下，包括应用编号、弹窗图片地址、推送应用下载地址：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46eje8cr62f0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;39&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为了能够在设备解锁，任意应用界面弹窗，病毒需要获取当前运行Activity实例。“DowginCw”通过反射获取ActivityThread中所有的ActivityRecord，从ActivityRecord中获取状态不是pause的Activity。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejeb0f04t0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;235&quot;/&gt;&lt;/p&gt;
&lt;p&gt;成功弹出恶意推广窗，用户触屏图片区域，甚至点击“取消”也会下载准备的应用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejejgnhdp0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;360&quot;/&gt;&lt;/p&gt;
&lt;p&gt;安装提示窗也是定时执行，若监测到下载应用没被安装，则会弹窗诱导用户安装应用。当应用成功安装，LCReceiver会接受处理“android.intent.action.PACKAGE_ADDED”广播，实现应用自启动。如此环环相扣，完成一个又一个恶意应用植入用户设备。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejem3n3mr0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;360&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们发现恶意推送的应用全部来自域名：xiongjiong[.]com和youleyy[.]com，下载的应用以伪装成游戏和色情类app为主，大部分属于SmsPay家族（启动发送扣费短信），部分Rootnik家族（root设备向系统目录注入恶意应用）,下表部分推送应用:&lt;/p&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;应用名&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot;&gt;
&lt;p&gt;包名&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;我的世界&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.xiaodong.android.mc.chwan0724&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;绝地求生&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;il.fhatiazsfv.f.k2be42121f2539.f9b1&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;复仇者联盟&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.union.theavenger20713&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;贪吃蛇大作战&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;yoq.yvlha.tfyz.HX2017_728&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;私密空间&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;com.simsiskongj20088ian.cdsqcgpmdpfm&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;女神来了&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot;&gt;
&lt;p&gt;ymju567_thjtyu.juki&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;我的安吉拉&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot;&gt;
&lt;p&gt;bgbg_67_n_6666.ghgyh&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;越野飙车&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot;&gt;
&lt;p&gt;com.kkpo.iibs61108&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;137&quot;&gt;
&lt;p&gt;我的世界&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;274&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;cdf.khyhkgdgd.lfdbvbhbngx&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;0x4黑色产业链分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如下图所示，由制马人、广告平台、多渠道分发、转账洗钱构成了“DowginCw”黑色产业链的关键环节。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejfv3amvn0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;429&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中制马人团队负责开发维护，以及免杀处理，目前病毒已迭代到5.0版本，特点包括：能以插件形式集成到任意app；代码延迟加载，由云端下发恶意插件；字符串加密，代码强混淆等技术，可见“DowginCw”开发团队专业度之高。“广告平台”角色是“DowginCw”病毒的主要赚钱方式，通过在黑市宣传推广能力，以成功下载应用或成功安装病毒木马收费。“多渠道分发”团队在整个链条中处于相对核心的地位，通过与某些应用合作，成功集成“DowginCw”插件，致使能上架知名应用商店。从实际运作来看，整个圈子除了上述几个重要角色外，一些环节还会有其他黑产人员参与其中，比如上架应用商店后，想要让app曝光诱骗用户下载，会请专业人员进行刷榜，刷量，涮好评。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ox5团伙溯源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们通过钱盾恶意代码智能监测引擎，从“DowginCw”病毒家族中提取出如下C&amp;amp;C地址：zbmcc.cn、smfoja.cn、typipe.cn、unfoot.com、yuchanglou.com.cn、inehzk.cn、chunfeifs.com、xiongjiong.com.cn、1mituan.cn、elianke.cn、youleyy.com、cd.zciec.com。从域名的注册邮箱分析，可挖掘出该产业链部分人员，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejg5abmrj0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;557&quot;/&gt;&lt;/p&gt;
&lt;p&gt;分析发现：&lt;/p&gt;
&lt;p&gt;1、黑产团伙使用ailantian198*@126.com、lantian198*@foxmail.com、30854789*@qq.com作为“DowginCw”域名地址的公共邮箱，并使用这些邮箱注册大量其他恶意域名。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejga53gh70.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;118&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejgckjt4l0.png&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;116&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2、其团伙成员包括：黄某、余某、程某、石某、齐某等9名成员，其中黄某负责平台推广；余某负责已注册的老域名购买；石某和齐某疑是病毒插件开发人员；其余人员属于下游工作者。&lt;/p&gt;
&lt;p&gt;3、根据该团伙黄某，石某在公网泄漏的QQ账号308547893@qq.com，21543345@qq.com，发现团伙的“根据地”应该在福建。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejgflirb10.jpg&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;652&quot;/&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejgn72nsp0.jpg&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;651&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;0x6清理方案&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目前，钱盾全面支持“DowginCw”病毒家族清理；建议用户开启全盘扫描模式，清理下载的恶意应用安装包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://epo.alicdn.com/image/46ejgt2l6hr0.png&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;711&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本文由阿里聚安全发布，转载请注明出处。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://jaq.alibaba.com/community/art/show&amp;amp;articleid=1283&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 22 Dec 2017 05:42:00 +0000</pubDate>
<dc:creator>阿里聚安全</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/alisecurity/p/8085627.html</dc:identifier>
</item>
<item>
<title>kgtemp文件转mp3工具 - JadePeng</title>
<link>http://www.cnblogs.com/xiaoqi/p/8085563.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaoqi/p/8085563.html</guid>
<description>&lt;p&gt;kgtemp文件是酷我音乐软件的缓存文件，本文从技术层面探讨如何解密该文件为mp3文件，并通过读取ID3信息来重命名。&lt;/p&gt;
&lt;h2 id=&quot;kgtemp解密&quot;&gt;kgtemp解密&lt;/h2&gt;
&lt;p&gt;kgtemp文件前1024个字节是固定的包头信息，解密方案详细可以参见(&lt;a href=&quot;http://www.cnblogs.com/KMBlog/p/6877752.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/KMBlog/p/6877752.html&lt;/a&gt;)：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Program
    {
        static void Main(string[] args)
        {

            byte[] key={0xAC,0xEC,0xDF,0x57};
            using (var input = new FileStream(@&quot;E:\KuGou\Temp\236909b6016c6e98365e5225f488dd7a.kgtemp&quot;, FileMode.Open, FileAccess.Read))
            {
                var output = File.OpenWrite(@&quot;d:\test.mp3&quot;);//输出文件
                input.Seek(1024, SeekOrigin.Begin);//跳过1024字节的包头
                byte[] buffer = new byte[key.Length];
                int length;
                while((length=input.Read(buffer,0,buffer.Length))&amp;gt;0)
                {
                    for(int i=0;i&amp;lt;length;i++)
                    {
                        var k = key[i];
                        var kh = k &amp;gt;&amp;gt; 4;
                        var kl = k &amp;amp; 0xf;
                        var b = buffer[i];
                        var low = b &amp;amp; 0xf ^ kl;//解密后的低4位
                        var high = (b &amp;gt;&amp;gt; 4) ^ kh ^ low &amp;amp; 0xf;//解密后的高4位
                        buffer[i] = (byte)(high &amp;lt;&amp;lt; 4 | low);
                    }
                    output.Write(buffer, 0, length);
                }
                output.Close();
            }
            Console.WriteLine(&quot;按任意键退出...&quot;);
            Console.ReadKey();
        }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样解密出来就是mp3文件了&lt;/p&gt;
&lt;h2 id=&quot;读取id3信息&quot;&gt;读取ID3信息&lt;/h2&gt;
&lt;p&gt;解密出来的文件还需要手动命名，不是很方便，可以读取ID3V1信息重命名文件。&lt;br/&gt;ID3V1比较简单，它是存放在MP3文件的末尾，用16进制的编辑器打开一个MP3文件，查看其末尾的128个顺序存放字节，数据结构定义如下：&lt;br/&gt;char Header&lt;a href=&quot;http://oyqmmpkcm.bkt.clouddn.com/1513919861693.jpg&quot; title=&quot;1513919861693&quot;&gt;3&lt;/a&gt;; /&lt;em&gt;标签头必须是&quot;TAG&quot;否则认为没有标签&lt;/em&gt;/&lt;br/&gt;char Title[30]; /&lt;em&gt;标题&lt;/em&gt;/&lt;br/&gt;char Artist[30]; /&lt;em&gt;作者&lt;/em&gt;/&lt;br/&gt;char Album[30]; /&lt;em&gt;专集&lt;/em&gt;/&lt;br/&gt;char Year&lt;a href=&quot;http://oyqmmpkcm.bkt.clouddn.com/1513920067729.jpg&quot; title=&quot;1513920067729&quot;&gt;4&lt;/a&gt;; /&lt;em&gt;出品年代&lt;/em&gt;/&lt;br/&gt;char Comment[30]; /&lt;em&gt;备注&lt;/em&gt;/&lt;br/&gt;char Genre; /&lt;em&gt;类型，流派&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;解析代码比较简单，注意中文歌曲用GBK编码就可以了：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  private static Mp3Info FormatMp3Info(byte[] Info, System.Text.Encoding Encoding)
        {
            Mp3Info myMp3Info = new Mp3Info();
            string str = null;
            int i;
            int position = 0主要代码jia，; //循环的起始值
            int currentIndex = 0; //Info的当前索引值

            //获取TAG标识
            for (i = currentIndex; i &amp;lt; currentIndex + 3; i++)
            {
                str = str + (char)Info[i];
                position++;
            }
            currentIndex = position;
            myMp3Info.identify = str;

            //获取歌名
            str = null;
            byte[] bytTitle = new byte[30]; //将歌名部分读到一个单独的数组中
            int j = 0;
            for (i = currentIndex; i &amp;lt; currentIndex + 30; i++)
            {
                bytTitle[j] = Info[i];
                position++;
                j++;
            }
            currentIndex = position;
            myMp3Info.Title = ByteToString(bytTitle, Encoding);

            //获取歌手名
            str = null;
            j = 0;
            byte[] bytArtist = new byte[30]; //将歌手名部分读到一个单独的数组中
            for (i = currentIndex; i &amp;lt; currentIndex + 30; i++)
            {
                bytArtist[j] = Info[i];
                position++;
                j++;
            }
            currentIndex = position;
            myMp3Info.Artist = ByteToString(bytArtist, Encoding);

            //获取唱片名
            str = null;
            j = 0;
            byte[] bytAlbum = new byte[30]; //将唱片名部分读到一个单独的数组中
            for (i = currentIndex; i &amp;lt; currentIndex + 30; i++)
            {
                bytAlbum[j] = Info[i];
                position++;
                j++;
            }
            currentIndex = position;
            myMp3Info.Album = ByteToString(bytAlbum, Encoding);

            //获取年
            str = null;
            j = 0;
            byte[] bytYear = new byte[4]; //将年部分读到一个单独的数组中
            for (i = currentIndex; i &amp;lt; currentIndex + 4; i++)
            {
                bytYear[j] = Info[i];
                position++;
                j++;
            }
            currentIndex = position;
            myMp3Info.Year = ByteToString(bytYear, Encoding);

            //获取注释
            str = null;
            j = 0;
            byte[] bytComment = new byte[28]; //将注释部分读到一个单独的数组中
            for (i = currentIndex; i &amp;lt; currentIndex + 25; i++)
            {
                bytComment[j] = Info[i];
                position++;
                j++;
            }
            currentIndex = position;
            myMp3Info.Comment = ByteToString(bytComment, Encoding);

            //以下获取保留位
            myMp3Info.reserved1 = (char)Info[++position];
            myMp3Info.reserved2 = (char)Info[++position];
            myMp3Info.reserved3 = (char)Info[++position];

            //
            return myMp3Info;
        }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;转换小工具&quot;&gt;转换小工具&lt;/h2&gt;
&lt;p&gt;写了一个小工具，来进行转换&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oyqmmpkcm.bkt.clouddn.com/1513919861693.jpg&quot; title=&quot;1513919861693&quot; alt=&quot;装换工具&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://pan.baidu.com/s/1o7FIsPk&quot; class=&quot;uri&quot;&gt;https://pan.baidu.com/s/1o7FIsPk&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;blockquote readability=&quot;7.3156342182891&quot;&gt;
&lt;p&gt;作者：Jadepeng&lt;br/&gt;出处：jqpeng的技术记事本--&lt;a href=&quot;http://www.cnblogs.com/xiaoqi&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/xiaoqi&lt;/a&gt;&lt;br/&gt;您的支持是对博主最大的鼓励，感谢您的认真阅读。&lt;br/&gt;本文版权归作者所有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的博客即将搬运同步至腾讯云+社区，邀请大家一同入驻：&lt;a href=&quot;https://cloud.tencent.com/developer/support-plan&quot; class=&quot;uri&quot;&gt;https://cloud.tencent.com/developer/support-plan&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 22 Dec 2017 05:24:00 +0000</pubDate>
<dc:creator>JadePeng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiaoqi/p/8085563.html</dc:identifier>
</item>
<item>
<title>Git 二分调试法，火速定位疑难Bug！ - 承香墨影</title>
<link>http://www.cnblogs.com/plokmju/p/8072971.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/plokmju/p/8072971.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037bf72bcc6?w=900&amp;amp;h=500&amp;amp;f=jpeg&amp;amp;s=58219&quot;/&gt;&lt;/p&gt;
&lt;p&gt;你一定遇到过，一个很久没修改过的功能，莫名其妙的出现了问题？肉眼查代码、屡逻辑完全找不到问题点？前两天还好好的功能，怎么这个今天就不行了？这两天改动了这么多代码，到底是那一次改动引发的 Bug？&lt;/p&gt;
&lt;p&gt;这样非崩溃的 Bug，有时候想要排查出问题，并不是一件容易的事情。我想，这个时候你会需要 git bisect !&lt;/p&gt;
&lt;h2 id=&quot;一git-bisect-基础使用&quot;&gt;一、git bisect 基础使用&lt;/h2&gt;
&lt;p&gt;git bisect 是 Git 提供的一种 &lt;strong&gt;二分法&lt;/strong&gt; 的调试工具，它可以按照我们选定的提交，进行二分分割，快速定位出出错的提交。来帮我们缩小最小改动的代码，从而快速定位问题。&lt;/p&gt;
&lt;p&gt;git bisect 其实很简单，主要是基于几个基本命令：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;git bisect start：准备进行 bisect debug。&lt;/li&gt;
&lt;li&gt;git bisect good：标记一个提交为 &quot;good&quot;。&lt;/li&gt;
&lt;li&gt;git bisect bad：标记一个提交为 “bad”。&lt;/li&gt;
&lt;li&gt;git bisect reset：退出 bisect debug 的状态。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;git bisect 涉及到的命令，非常的清晰简单，下面举个实际的例子，结合上面的解释，就更清晰了。&lt;/p&gt;
&lt;h2 id=&quot;二git-bisect-工作流&quot;&gt;二、git bisect 工作流&lt;/h2&gt;
&lt;p&gt;我自己生造出 6 个 commit，然后使用 &lt;code&gt;git log&lt;/code&gt; 看看我的提交记录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037c09286ba?w=796&amp;amp;h=1336&amp;amp;f=jpeg&amp;amp;s=220668&quot; alt=&quot;gitlog&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里假设我正常开发的阶段，到 &lt;strong&gt;v6&lt;/strong&gt; 提交的时候，突然发现有个 Bug ，无法定位到问题，但是能明确的知道，在 &lt;strong&gt;v1&lt;/strong&gt; 提交阶段，并没有这个 Bug。&lt;/p&gt;
&lt;p&gt;那么，在这样的情况下，&lt;strong&gt;v6&lt;/strong&gt; 就是一个有问题的版本，而 &lt;strong&gt;v1&lt;/strong&gt; 则是一个好的版本，我们就可以借助 &lt;code&gt;git bisect&lt;/code&gt; 来进行二分超找定位问题来自哪个提交。&lt;/p&gt;
&lt;p&gt;还记得刚才的命令吗？&lt;/p&gt;
&lt;p&gt;我们先用 &lt;code&gt;git bisect start&lt;/code&gt; 标记开始 &lt;strong&gt;bisect debug&lt;/strong&gt; ，然后使用 &lt;code&gt;git bisect good&lt;/code&gt; 和 &lt;code&gt;git bisect bad&lt;/code&gt; 分别标记出正确的和错误的提交。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037bfacf38d?w=1058&amp;amp;h=204&amp;amp;f=jpeg&amp;amp;s=63962&quot; alt=&quot;biscet-start&quot;/&gt;&lt;/p&gt;
&lt;p&gt;每个提交，都有一个针对这个提交唯一的 &lt;strong&gt;SHA-1&lt;/strong&gt; 值，因为太长不方便输入和阅读，这里可以直接使用前几位作为简写。&lt;/p&gt;
&lt;p&gt;当标记处正确的和错误的提交之后，&lt;code&gt;git bisect&lt;/code&gt; 立刻就可以帮我们定位出中间提交 &lt;strong&gt;v3&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在 &lt;strong&gt;HEAD&lt;/strong&gt; 就已经指向了 &lt;strong&gt;v3&lt;/strong&gt; 提交的代码了，这个可以使用 &lt;code&gt;git status&lt;/code&gt; 查看当前的状态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037bfcf125d?w=1168&amp;amp;h=232&amp;amp;f=jpeg&amp;amp;s=58060&quot; alt=&quot;git-status&quot;/&gt;&lt;/p&gt;
&lt;p&gt;所以我们可以基于 &lt;strong&gt;v3&lt;/strong&gt; 版本的代码，直接运行项目，测试看该提交是否有问题。&lt;/p&gt;
&lt;p&gt;经过测试之后，发现 &lt;strong&gt;v3&lt;/strong&gt; 的提交代码版本，并没有复现 Bug，那我们就可以缩小错误提交的范围，大概落在了 &lt;strong&gt;v4&lt;/strong&gt;、&lt;strong&gt;v5&lt;/strong&gt;、&lt;strong&gt;v6&lt;/strong&gt; 之间。&lt;/p&gt;
&lt;p&gt;此时，我们只需要使用 &lt;code&gt;git good&lt;/code&gt; 标记 &lt;strong&gt;v3&lt;/strong&gt; 版本是正确的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037bf8b02f3?w=1144&amp;amp;h=126&amp;amp;f=jpeg&amp;amp;s=42227&quot; alt=&quot;bisect-good-v3&quot;/&gt;&lt;/p&gt;
&lt;p&gt;标记好 &lt;strong&gt;v3&lt;/strong&gt; 为 &lt;strong&gt;good&lt;/strong&gt; 之后，立刻又会进行一次二分，此次标记的为中间提交 &lt;strong&gt;v5&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;经过对 &lt;strong&gt;v5&lt;/strong&gt; 提交的版本代码，进行测试之后发现，它是有问题的。我们继续使用 &lt;code&gt;git bisect bad&lt;/code&gt; 对它进行标记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037bf3e005f?w=1186&amp;amp;h=118&amp;amp;f=jpeg&amp;amp;s=39208&quot; alt=&quot;bisect-bad-v4&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当 &lt;strong&gt;v5&lt;/strong&gt; 有问题的时候，现在只中间一个 &lt;strong&gt;v4&lt;/strong&gt; 版本，所以会立刻指向 &lt;strong&gt;v4&lt;/strong&gt; 提交。&lt;/p&gt;
&lt;p&gt;我们继续对 &lt;strong&gt;v4&lt;/strong&gt; 版本的代码进行测试，发现 &lt;strong&gt;v4&lt;/strong&gt; 版本也有问题，继续标记它为 &lt;strong&gt;bad&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037e278e3fc?w=1806&amp;amp;h=350&amp;amp;f=jpeg&amp;amp;s=98157&quot; alt=&quot;bisect-bad&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此时就很明确了，出错的提交就是 &lt;strong&gt;v4&lt;/strong&gt;，而 Git 也直接帮我们指出来出错的提交。&lt;/p&gt;
&lt;p&gt;虽然这里定位到，出错的提交就是 &lt;strong&gt;v4&lt;/strong&gt; 的问题，我们只需要仔细阅读 &lt;strong&gt;v4&lt;/strong&gt; 提交的代码，然后定位出问题代码，就达到了我们的目的。但是我们并不应该在 &lt;strong&gt;v4&lt;/strong&gt; 提交上直接修改 Bug，我们应该退出 bisect debug 状态，在最新的提交版本上进行修改，这里使用 &lt;code&gt;git bisect reset&lt;/code&gt; 退出，再进行修改即可。&lt;/p&gt;
&lt;p&gt;到这里，就是 &lt;code&gt;git bisect&lt;/code&gt; 的完整工作流程。&lt;/p&gt;
&lt;h2 id=&quot;三bisect的后悔药&quot;&gt;三、bisect的后悔药&lt;/h2&gt;
&lt;p&gt;对提交进行 &lt;strong&gt;good&lt;/strong&gt; 和 &lt;strong&gt;bad&lt;/strong&gt; 的标记，都是人为来进行的，难免有出错的情况。而提交比较少的时候，大不了就是 reset 之后，重头来过。&lt;/p&gt;
&lt;p&gt;但是如果有几十个提交，再从头进行一次 bisect 就比较麻烦了。Git 考虑到这一点，已经为我们配好了后悔药。&lt;/p&gt;
&lt;p&gt;想要擦除之前的标记状态，就涉及到一个命令：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;git bisect replay：重置到某个状态。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;replay 需要制定一个回退的点，这个点是需要使用 &lt;code&gt;git bisect log &amp;gt; log.txt&lt;/code&gt; 输出的 Log 文件， 我们需要通过修改这个 Log 文件，来确定回退的点。&lt;/p&gt;
&lt;p&gt;举个例子，我们使用 log 命令，输出一个 &lt;strong&gt;log.txt&lt;/strong&gt; 文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037e469619f?w=938&amp;amp;h=486&amp;amp;f=jpeg&amp;amp;s=182410&quot; alt=&quot;log&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到，这个 log.txt 文件，记录了我们刚才所有的操作。&lt;/p&gt;
&lt;p&gt;在这个例子中，假如我们的操作，对 &lt;strong&gt;v5&lt;/strong&gt; 进行 &lt;strong&gt;bad&lt;/strong&gt; 的这个标记错了，那么，我们把这个操作之下的 Log 全部删除掉，然后执行 &lt;code&gt;git bisect replay log.txt&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/12/20/16072037e221b7c7?w=1080&amp;amp;h=198&amp;amp;f=jpeg&amp;amp;s=61760&quot; alt=&quot;replay&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样就将回退到判断 &lt;strong&gt;v5&lt;/strong&gt; 提交好坏的地方，重新进行标记。&lt;/p&gt;
&lt;p&gt;在修改 Log.txt 文件的时候，最好只执行删除操作，不要对其中的顺序有所修改，毕竟我们只是想要一个回滚的动作，并不是要改动我们之前的某些操作。&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;今天在&lt;strong&gt;承香墨影&lt;/strong&gt;公众号的后台，回复『&lt;strong&gt;成长&lt;/strong&gt;』。我会送你一些我整理的学习资料，包含：Android反编译、算法、设计模式、虚拟机、Linux、Kotlin、Python、爬虫、Web项目源码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;推荐阅读：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/11/13/15fb3c95b1f1f263?w=600&amp;amp;h=600&amp;amp;f=jpeg&amp;amp;s=54770&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 22 Dec 2017 05:05:00 +0000</pubDate>
<dc:creator>承香墨影</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/plokmju/p/8072971.html</dc:identifier>
</item>
</channel>
</rss>