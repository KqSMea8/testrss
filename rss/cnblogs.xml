<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>重新打包用户量过亿的开源截图软件——加入图片自动上传到图床的功能 - HarlanC</title>
<link>http://www.cnblogs.com/harlanc/p/8434070.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/harlanc/p/8434070.html</guid>
<description>&lt;p&gt;有点标题党的感觉，但是我今天说的这个软件确实很多人都用，叫做Greenshot。咨询了它的作者，用户量竟然过亿。&lt;/p&gt;
&lt;h2 id=&quot;先展示一下成果&quot;&gt;先展示一下成果&lt;/h2&gt;
&lt;p&gt;为了更方便的使用七牛云的图床服务，去年实现了一个开源截图工具的插件，专门用来上传图片到七牛图床。操作过程如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;第一步：打开截图工具进行截图，然后选择“upload to qiniu”传送到七牛图床服务器中。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://oq8nryefp.bkt.clouddn.com/greenshot_cutpic_and_upload_to_qiniu.gif&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;第二步：接完图后连接会生成markdown连接并且拷贝到剪贴板中，写博客直接粘贴链接即可：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://oq8nryefp.bkt.clouddn.com/greenshot_paste.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;比手动操作方便多了。当时写了一个帖子:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/harlanc/p/6923500.html#_label6&quot;&gt;写markdown博客如何将截图快速上传到图床——记一个工具插件的实现（2017-05-31 20:23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上次使用是把插件和相关的库文件拷贝到Greenshot的安装目录下面。对这些文件也做了分享，看了看百度网盘，有几十个人下载，没有反馈。但是手动拷贝终究还是不太方便的。&lt;/p&gt;
&lt;h2 id=&quot;说明一下自己打包的原因&quot;&gt;说明一下自己打包的原因&lt;/h2&gt;
&lt;p&gt;本来想把代码提交PL给原作者，然后放到官方安装包中release。但原作者说此软件用户量大概有1个亿（竟然有一个亿），他说怕七牛的服务器撑不住，最后会影响其它功能，这是个开源的免费软件，他们人力有限，所以暂时他还没有approve。当然这个一亿应该是全世界的用户量，中国有多少他没说，我然后在github上提交了issues给七牛SDK开发人员，但是没有反馈。后来想想干脆自己出包算了。&lt;/p&gt;
&lt;h2 id=&quot;分享&quot;&gt;分享&lt;/h2&gt;
&lt;p&gt;最终出的包放在了网盘中：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1smfd9iX&quot;&gt;链接:&lt;/a&gt; 密码: 1749&lt;/p&gt;
&lt;h2 id=&quot;如何使用&quot;&gt;如何使用&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;安装，qiniu插件是默认选中的,把exe安装包下载下来之后，默认安装即可。&lt;/li&gt;
&lt;li&gt;配置，看之前的&lt;a href=&quot;http://www.cnblogs.com/harlanc/p/6923500.html&quot;&gt;帖子&lt;/a&gt;，直接看配置这一节就可以了。这次打包加了一个Zone的配置项，例如我的Zone为华北，选择CN_North即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原作者是用powershell脚本进行打包的，一个是prebuild.ps1，另外一个是build.ps1，把这个流程弄懂后，以后可以方便的实现功能，打包分享了。&lt;br/&gt;我们的目标是把qiniu的插件成功的打包到exe安装包中，过程中的某些问题以能被解决为最终目的，有些细节弄的也不是很清楚。&lt;/p&gt;
&lt;h2 id=&quot;prebuild&quot;&gt;prebuild&lt;/h2&gt;
&lt;p&gt;prebuild是用来build前的准备工作的，卡住的地方在生成签名文件的地方：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Write the certificate to a file
[System.Convert]::FromBase64String($env:Certificate) | set-content &quot;greenshot.pfx&quot; -encoding byte
# Decode password to secure string
$password = ConvertTo-SecureString $env:CertificatePassword -AsPlainText -Force
# Import pfx
Import-PfxCertificate -FilePath .\Greenshot.pfx -CertStoreLocation Cert:\CurrentUser\My -Password $password`&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;怎么也生不成pfx文件，最后用openssl自己生成了一个，然后替换了Greenshot.pfx,也替换了相关的环境变量：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Write the certificate to a file
[System.Convert]::FromBase64String($env:Certificate) | set-content &quot;greenshot.pfx&quot; -encoding byte
# Decode password to secure string
$password = ConvertTo-SecureString '123456' -AsPlainText -Force
# Import pfx
Import-PfxCertificate -FilePath .\Greenshotca.pfx -CertStoreLocation Cert:\CurrentUser\My -Password $password&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;期间还碰到一个命令不能被识别的问题，如下：&lt;br/&gt;&lt;img src=&quot;http://oq8nryefp.bkt.clouddn.com/win7_20180208231933.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;网上搜索了相关资料，说是powershell版本太低，在win7上把版本升到最新还是没有解决，最后看到有人提到到win10下执行，试了一下居然成功了。&lt;/p&gt;
&lt;p&gt;最后执行成功后会是下面这个样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oq8nryefp.bkt.clouddn.com/vm_win10_20180208232917.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;build&quot;&gt;build&lt;/h2&gt;
&lt;p&gt;期间也是遇到了各种问题，最后总结成三点：&lt;/p&gt;
&lt;h3 id=&quot;编译七牛插件&quot;&gt;编译七牛插件&lt;/h3&gt;
&lt;p&gt;打包的过程中Greenshot如果使用了外来程序库的话会将其注入到插件中，所以在安装greenshot后你会看不到qiniu.dll.这样打包的时候也方便，只要打包插件就可以了。&lt;/p&gt;
&lt;h3 id=&quot;签名工具&quot;&gt;签名工具&lt;/h3&gt;
&lt;p&gt;greenshot中的签名工具调用过程中使用了自己定义的一个环境变量，我也就从网上下载了最新的signtool.exe。自己设置环境变量指向这个签名工具即可。&lt;/p&gt;
&lt;h3 id=&quot;template&quot;&gt;template&lt;/h3&gt;
&lt;p&gt;加一个新的插件进来需要更新setup.iss.template文件。把插件名字和路径等信息加上即可。关于多过语言我只添加了英文和中文。&lt;/p&gt;
&lt;p&gt;有关代码可以看我的&lt;a href=&quot;https://github.com/harlanc/greenshot&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功之后会生成下面的文件列表。&lt;br/&gt;&lt;img src=&quot;http://oq8nryefp.bkt.clouddn.com/vm_win10_20180208234148.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 08 Feb 2018 23:04:00 +0000</pubDate>
<dc:creator>HarlanC</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/harlanc/p/8434070.html</dc:identifier>
</item>
<item>
<title>基于 React + Webpack 的音乐相册项目（下） - nnngu</title>
<link>http://www.cnblogs.com/nnngu/p/8434066.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/nnngu/p/8434066.html</guid>
<description>&lt;p&gt;上一篇我们完成了音乐相册里面的播放图片的功能，这一篇主要完成的是音乐相册里面的音乐播放器功能。最终让我们基于 React 的音乐相册图文并茂、有声有色。&lt;/p&gt;
&lt;p&gt;我们主要从以下几个部分来展开：&lt;/p&gt;
&lt;p&gt;数据准备&lt;/p&gt;
&lt;p&gt;进度条功能&lt;/p&gt;
&lt;p&gt;创建播放器组件&lt;/p&gt;
&lt;p&gt;最终效果&lt;/p&gt;
&lt;h2 id=&quot;数据准备&quot;&gt;数据准备&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;src/data&lt;/code&gt;目录添加音乐数据文件：&lt;code&gt;musicDatas.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;const&lt;/span&gt; MUSIC_LIST &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; [
  &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'童话镇'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'陈一发儿'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'https://raw.githubusercontent.com/nnngu/SharedResource/master/music/%E7%AB%A5%E8%AF%9D%E9%95%87.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'https://raw.githubusercontent.com/nnngu/FigureBed/master/2018/2/6/tong_hua_zhen.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'天使中的魔鬼'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'田馥甄'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E9%AD%94%E9%AC%BC%E4%B8%AD%E7%9A%84%E5%A4%A9%E4%BD%BF.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E9%AD%94%E9%AC%BC%E4%B8%AD%E7%9A%84%E5%A4%A9%E4%BD%BF.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'风继续吹'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'张国荣'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E9%A3%8E%E7%BB%A7%E7%BB%AD%E5%90%B9.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E9%A3%8E%E7%BB%A7%E7%BB%AD%E5%90%B9.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'恋恋风尘'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'老狼'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%81%8B%E6%81%8B%E9%A3%8E%E5%B0%98.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%81%8B%E6%81%8B%E9%A3%8E%E5%B0%98.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'我要你'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'任素汐'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%88%91%E8%A6%81%E4%BD%A0.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%88%91%E8%A6%81%E4%BD%A0.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'成都'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'赵雷'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%88%90%E9%83%BD.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/%E6%88%90%E9%83%BD.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'sound of silence'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'Simon &amp;amp; Garfunkel'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/sound-of-silence.mp3'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dt&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'http://oj4t8z2d5.bkt.clouddn.com/sound-of-silence.jpg'&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;进度条功能&quot;&gt;进度条功能&lt;/h2&gt;
&lt;p&gt;1、在&lt;code&gt;src/index.html&lt;/code&gt;文件中添加一个div，作为jPlayer（音乐播放插件）的容器。如下图红色框里面的就是新添加的代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/9/1518121965642.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2、继续在&lt;code&gt;src/index.html&lt;/code&gt;文件中应用 jQuery 和 jPlayer 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/9/1518122145709.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;3、添加进度条组件：在&lt;code&gt;src/components/music&lt;/code&gt; 目录添加 &lt;code&gt;progress.js&lt;/code&gt;，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/9/1518122335010.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;progress.js&lt;/code&gt;的代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;at&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'./progress.less'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; Progress &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createClass&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;getDefaultProps&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;barColor&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'#2f9842'&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;changeProgress&lt;/span&gt;(e) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; progressBar &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;progressBar&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; progress &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clientX&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;progressBar&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&quot;at&quot;&gt;left&lt;/span&gt;) / &lt;span class=&quot;va&quot;&gt;progressBar&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;props&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onProgressChange&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;props&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;onProgressChange&lt;/span&gt;(progress)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;// ......&lt;/span&gt;
  
  &lt;span class=&quot;co&quot;&gt;// 省略了一部分代码&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;// 完整的代码请参照项目的源代码&lt;/span&gt;
  
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; Progress&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在同一个目录下创建Progress 的样式文件 &lt;code&gt;progress.less&lt;/code&gt;，代码如下：&lt;/p&gt;
&lt;pre class=&quot;less&quot;&gt;
&lt;code&gt;.components-progress {
    display: inline-block;
    width: 100%;
    height: 3px;
    position: relative;
    background: #aaa;
    cursor: pointer;

    .progress {
        width: 0%;
        height: 3px;
        left: 0;
        top: 0;
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;创建播放器组件&quot;&gt;创建播放器组件&lt;/h2&gt;
&lt;p&gt;播放器组件分别对应&lt;code&gt;player.js&lt;/code&gt; 和 &lt;code&gt;player.less&lt;/code&gt; 两个文件。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/9/1518127202415.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;player.js&lt;/code&gt; 的代码如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; Progress &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'./progress'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;im&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;MUSIC_LIST&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'../../data/musicDatas'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; PubSub &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'pubsub-js'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;at&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'./player.less'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; duration &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; Player &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createClass&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 生命周期方法 componentDidMount&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;componentDidMount&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;timeupdate&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; (e) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      duration &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;currentPercentAbsolute&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;volume&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;options&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;volume&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;leftTime&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;formatTime&lt;/span&gt;(duration &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;status&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;currentPercentAbsolute&lt;/span&gt; / &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;))
      &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ended&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; (e) &lt;span class=&quot;op&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;playNext&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 生命周期方法 componentWillUnmount&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;componentWillUnmount&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;unbind&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;jPlayer&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;event&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;timeupdate&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;formatTime&lt;/span&gt;(time) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    time &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;floor&lt;/span&gt;(time)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; miniute &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;floor&lt;/span&gt;(time / &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; seconds &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;floor&lt;/span&gt;(time &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; miniute &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; (seconds &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; seconds : seconds)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 进度条被拖动的处理方法&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;progress&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;changeProgressHandler&lt;/span&gt;(progress) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; duration &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; progress)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;isPlay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 获取转圈的封面图片&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;imgAnimation&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'animation-play-state: running'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 音量条被拖动的处理方法&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;progress&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;changeVolumeHandler&lt;/span&gt;(progress) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'volume'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; progress)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 播放或者暂停方法&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   **/&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;play&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;isPlay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;isPlay&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 获取转圈的封面图片&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; imgAnimation &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;imgAnimation&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;isPlay&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'pause'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'animation-play-state: paused'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'play'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;va&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'animation-play-state: running'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 下一首&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   **/&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;next&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'PLAY_NEXT'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;isPlay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 开始播放下一首&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;playNext&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 获取转圈的封面图片&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;imgAnimation&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'animation-play-state: running'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * 上一首&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   **/&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;prev&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'PLAY_PREV'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;isPlay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 开始播放上一首&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;playNext&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'prev'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;// 获取转圈的封面图片&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; imgAnimation &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;refs&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;imgAnimation&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;imgAnimation&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'animation-play-state: running'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;playNext&lt;/span&gt;(type &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'next'&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; index &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;findMusicIndex&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;currentMusitItem&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; (type &lt;span class=&quot;op&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'next'&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      index &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (index &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      index &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; (index &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; musicItem &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;musicList&lt;/span&gt;[index]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;currentMusitItem&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; musicItem
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;playMusic&lt;/span&gt;(musicItem)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;playMusic&lt;/span&gt;(item) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'#player'&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'setMedia'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;mp3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;file&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;jPlayer&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'play'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;setState&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;currentMusitItem&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; item
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;findMusicIndex&lt;/span&gt;(music) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; index &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;musicList&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;indexOf&lt;/span&gt;(music)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; index)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;changeRepeat&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;PubSub&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;publish&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'CHANAGE_REPEAT'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;// constructor() {&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//   return {&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//     progress: 0,&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//     volume: 0,&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//     isPlay: true,&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//     leftTime: ''&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;//   }&lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;// },&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;componentWillMount&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getInitialState&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;at&quot;&gt;getInitialState&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;musicList&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; MUSIC_LIST&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;currentMusitItem&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; MUSIC_LIST[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;repeatType&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'cycle'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;

      &lt;span class=&quot;dt&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;volume&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;isPlay&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dt&quot;&gt;leftTime&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;''&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * render 渲染方法&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@returns&lt;/span&gt;&lt;span class=&quot;co&quot;&gt; {*}&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;   */&lt;/span&gt;
  &lt;span class=&quot;at&quot;&gt;render&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; (
      &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;player-page&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot; row&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;controll-wrapper&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;h2 className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;music-title&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;{&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;            &amp;lt;h3 className=&quot;music-artist mt10&quot;&amp;gt;{this.state.currentMusitItem.artist}&amp;lt;/h3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;row mt10&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;left-time -col-auto&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;-{&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;leftTime&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;              &amp;lt;div className=&quot;volume-container&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;                &amp;lt;i className=&quot;icon-volume rt&quot; style={{top: 5, left: -5}}&amp;gt;&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;volume-wrapper&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;

                  &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;/* 音量条 */&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                  &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Progress
                    progress&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;volume&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                    onProgressChange&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;changeVolumeHandler&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;co&quot;&gt;// barColor='#aaa'&lt;/span&gt;
                  &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Progress&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;                &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;            &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div style&lt;span class=&quot;op&quot;&gt;={{&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;lineHeight&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'10px'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}}&amp;gt;&lt;/span&gt;

              &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;/* 播放进度条 */&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;Progress
                progress&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                onProgressChange&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;changeProgressHandler&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/Progress&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;            &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;mt35 row&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;icon prev&quot;&lt;/span&gt; onClick&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/i&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;                &amp;lt;i className={`icon ml20 ${this.state.isPlay &lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt; 'pause' : 'play'}`} onClick={this.play}&amp;gt;&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;icon next ml20&quot;&lt;/span&gt; onClick&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/i&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;              &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;-col-auto&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;/* 播放模式按钮：单曲、循环、随机 */&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;i className&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;vs&quot;&gt;`repeat-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;repeatType&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;vs&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; onClick&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;changeRepeat&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/i&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;              &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;          &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;-col-auto cover&quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;img ref&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;imgAnimation&quot;&lt;/span&gt; src&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; alt&lt;span class=&quot;op&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;state&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;currentMusitItem&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;          &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;      &amp;lt;/div&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;
    )&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;im&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;im&quot;&gt;default&lt;/span&gt; Player&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;player.less&lt;/code&gt; 的代码如下：&lt;/p&gt;
&lt;pre class=&quot;less&quot;&gt;
&lt;code&gt;.player-page {
    width: 550px;
  height: 210px;
    //margin: auto;
    //margin-top: 0px;

  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
  bottom: 20px;
  z-index: 101;
  //width: 100%;

    //.caption {
    //  font-size: 16px;
    //  color: rgb(47, 152, 66);
    //}

    .cover {
        width: 180px;
        height: 180px;
        margin-left: 20px;

        img {
            width: 180px;
            height: 180px;
            border-radius: 50%;
            animation: roate 20s infinite linear; // 旋转专辑封面
            border:2px solid #808080b8;
        }
    }

    .volume-container {
        position: relative;
        left: 20px;
        top: -3px;
    }

    .volume-container .volume-wrapper {
        opacity: 0;
        transition: opacity .5s linear;
    }

    .volume-container:hover .volume-wrapper {
        opacity: 1;
    }

    .music-title {
        font-size: 25px;
        font-weight: 400;
        color: rgb(3, 3, 3);
        height: 6px;
        line-height: 6px;
    }

    .music-artist {
        font-size: 15px;
        font-weight: 400;
        color: rgb(74, 74, 74);
    }

    .left-time {
        font-size: 14px;
        color: #999;
        font-weight: 400;
        width: 40px;
    }

    .icon {
        cursor: pointer;
    }

    .ml20 {
        margin-left: 20px;
    }

    .mt35 {
        margin-top: 35px;
    }

    .volume-wrapper {
        width: 60px;
        display: inline-block;
    }
}

@keyframes roate {
    0% {
        transform: rotateZ(0)
    }
    100% {
        transform: rotateZ(360deg)
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后在&lt;code&gt;src/components/Main.js&lt;/code&gt;中添加音乐播放器组件 &lt;code&gt;Player&lt;/code&gt; ，完整的代码请参照我发布到 Github 上的源代码。&lt;/p&gt;
&lt;h2 id=&quot;最终效果&quot;&gt;最终效果&lt;/h2&gt;
&lt;p&gt;到此，基于 React 的音乐相册的全部功能已经完成了。最终的运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/nnngu/FigureBed/raw/master/2018/2/9/1518128437105.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;源代码：&lt;a href=&quot;https://github.com/nnngu/MusicPhoto&quot; class=&quot;uri&quot;&gt;https://github.com/nnngu/MusicPhoto&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;笔记仓库：&lt;a href=&quot;https://github.com/nnngu/LearningNotes&quot; class=&quot;uri&quot;&gt;https://github.com/nnngu/LearningNotes&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 08 Feb 2018 22:39:00 +0000</pubDate>
<dc:creator>nnngu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/nnngu/p/8434066.html</dc:identifier>
</item>
<item>
<title>鸡蛋该放在哪些篮子里？多少合适？ - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/8429931.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/8429931.html</guid>
<description>&lt;p&gt;这篇文章是接着前面《IT人士如何避免中年危机？》和《我所参加的最贵的培训》的思路来的。&lt;br/&gt;《IT人士如何避免中年危机？》讨论了价值投资的必要性，并给出了方法论：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;&lt;li&gt;找到优质的公司&lt;/li&gt;
&lt;li&gt;在它股价合理或低估的时候买入&lt;/li&gt;
&lt;li&gt;耐心等待其升值&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;《我所参加的最贵的培训》具体讨论了如何通过上市公司的财务报表筛选优质的企业，并计算股价的合理区间，给出了价值投资的具体实践方法。&lt;br/&gt;今天要讨论的问题是：该拿多少钱来做投资？&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;什么是资产配置？&lt;/h2&gt;
&lt;p&gt;资产配置解决下面这些问题：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;拿多少钱来投资？&lt;br/&gt;投哪些资产？&lt;br/&gt;分别投多少？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为啥要资产配置？答案是为了追求 &lt;em&gt;风险和收益的平衡&lt;/em&gt;。&lt;br/&gt;投资是为了回报，不然投它干嘛？&lt;br/&gt;投资是有风险的，所以要尽量规避，保护本金。&lt;br/&gt;投资品种很多，风险等级和预期回报率都不一样，需要通过组合投资来寻求平衡，即 &lt;em&gt;把鸡蛋放在多个篮子里&lt;/em&gt;。&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;推荐的资产配置&lt;/h2&gt;
&lt;p&gt;下面的资产配置是 &lt;em&gt;超级数字力&lt;/em&gt; 老师推荐的，我觉得很合理。&lt;/p&gt;
&lt;p&gt;25% — 现金&lt;br/&gt;10% — 保险&lt;br/&gt;50% — 股票价值投资&lt;br/&gt;15% — 高风险高收益&lt;/p&gt;
&lt;p&gt;上面四项加起来 100%，但请一定注意：100% 不是指你的总资产，而是你 &lt;em&gt;可自由支配的资金&lt;/em&gt;。&lt;br/&gt;如果你已经成家立业，有房有车，可自由支配的资金就是除去每月家用、车贷房贷、赡养老人、子女教育之后剩下的钱。&lt;br/&gt;如果你是一个人吃饱全家不饿，可自由支配的资金则是除去吃喝拉撒、房租水电、把妹泡妞之后剩下的钱。&lt;/p&gt;
&lt;p&gt;下面我们分别细说这四项。&lt;/p&gt;
&lt;h3 id=&quot;-25-&quot;&gt;始终保留 25% 的现金&lt;/h3&gt;
&lt;p&gt;资产中，现金的流动性最高，现金能够买到其他所有的资产。缺点是收益最低。&lt;br/&gt;保留 25% 的现金是为了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;&lt;li&gt;保命。&lt;/li&gt;
&lt;li&gt;安神。&lt;/li&gt;
&lt;li&gt;极端情况下抄底。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;保命好理解，入不敷出月月光抗风险能力太弱。一有风吹草动第一个受伤的就是月光族。所以得留些现金以备不时之需。&lt;br/&gt;手中有粮，心中不慌。&lt;/p&gt;
&lt;p&gt;投资后，正常人都会时不时关注一下价格波动。&lt;br/&gt;如果所有身家都在里面，注意力和情绪会被价格牵引，智商也会跟着波动，搞得不好会影响工作和生活，甚至神经衰弱。如果是这样，就违背了我们投资的初衷，就不值得了。&lt;/p&gt;
&lt;p&gt;如果手上有足够现金，会淡定很多。价格波动不会影响到自己和家庭的生活质量，能够从容穿越牛熊，获得长期稳定的收益。&lt;br/&gt;当资本市场发生极端行情时，所有的资产都会大幅缩水，即使是好企业的股票也会被错杀（巴菲特的伯克希尔哈撒韦也曾被多次腰斩）。手上有现金的好处是：&lt;em&gt;不需要贱卖，但可以贱买&lt;/em&gt;。现金为王说的就是这个意思。&lt;/p&gt;
&lt;p&gt;补充一点，这里的现金并不是让你把钱放到银行存活期，而是指具备超高流动性的现金等价物，比如余额宝。&lt;/p&gt;
&lt;h3 id=&quot;10-&quot;&gt;10% 买保险&lt;/h3&gt;
&lt;p&gt;月有阴晴圆缺，人有旦夕祸福。&lt;br/&gt;有些事情概率虽小，一旦发生我们却承受不起。&lt;br/&gt;所以要买点保险规避这类风险。&lt;br/&gt;两类保险应该买：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;&lt;li&gt;人身意外伤害&lt;/li&gt;
&lt;li&gt;大病重疾。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;一般情况下，25% 的现金很难抵御这两类风险。如果没有保险只能从另外那 75% 的资产中折现贱卖，很不划算。&lt;br/&gt;用保险以小博大，进行风险防范是对自己和家庭负责。&lt;br/&gt;不同家庭成员，可根据重要性分配保险的比例。越是家里的顶梁柱和主要经济来源，比例就应该越高。&lt;br/&gt;还有一条建议：保险的唯一目的就是保险。那些掺杂了分红、理财概念的保险就算了，因为这些已经体现在我们其他的投资品种中了。&lt;/p&gt;
&lt;h3 id=&quot;50-&quot;&gt;50% 用于股票价值投资&lt;/h3&gt;
&lt;p&gt;请注意我们这里强调的是 &lt;em&gt;价值投资&lt;/em&gt;。博短线，炒热点顶多只能放在下一节的 15% 中。&lt;br/&gt;关于这部分，在《IT人士如何避免中年危机？》和《我所参加的最贵的培训》中有详细的讨论，这里就不赘述了。&lt;/p&gt;
&lt;h3 id=&quot;-15-&quot;&gt;用 15% 去博高风险高收益&lt;/h3&gt;
&lt;p&gt;有道是：马无夜草不肥，人无横财不富。&lt;/p&gt;
&lt;p&gt;80年我们太小没赶上下海经商，90年不够胆去倒卖股票认购证，00年错过了互联网泡沫，10年没本钱炒不起房。&lt;br/&gt;我们完美地错过了这些一夜暴富的机会，后悔吗？&lt;/p&gt;
&lt;p&gt;其实不用。当时能抓住机会的毕竟是少数，如果有机会大家再来一次，大概率也还是那些人能成功。为什么？&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;认知决定了你对机会的判断。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同样的事情，A看到的是机会，B看到的是风险，最后谁能成功？&lt;/p&gt;
&lt;p&gt;既不是A也不是B，而是同时看到机会和风险的C。&lt;br/&gt;A忽视了风险，all in，十赌九输。&lt;br/&gt;B觉得风险太大，于是闪了。&lt;br/&gt;唯有C，仔细调研并只投入少量资金，最终获得丰厚的回报。&lt;/p&gt;
&lt;p&gt;那你要问了，现在还有哪些高风险高收益的标的？&lt;br/&gt;我先给你两个选项你花1分钟思考一下。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;买彩票&lt;/li&gt;
&lt;li&gt;去澳门赌博&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote&gt;
&lt;p&gt;这&lt;/p&gt;
&lt;p&gt;是&lt;/p&gt;
&lt;p&gt;给&lt;/p&gt;
&lt;p&gt;你&lt;/p&gt;
&lt;p&gt;思&lt;/p&gt;
&lt;p&gt;考&lt;/p&gt;
&lt;p&gt;的&lt;/p&gt;
&lt;p&gt;时&lt;/p&gt;
&lt;p&gt;间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你两个都没选，恭喜你！&lt;br/&gt;买彩票被称作 &lt;em&gt;交智商税&lt;/em&gt;，具体可以 google。&lt;br/&gt;澳门赌场很正规，不会出老千，但即便是这样你也赢不了。因为这是个数学问题，庄家赢的概率比你大，只要你一直参与，必输无疑！&lt;/p&gt;
&lt;p&gt;好了，不卖关子了，目前我们至少可以 &lt;em&gt;尝试&lt;/em&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块链&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先强调一个观点：&lt;em&gt;区块链 ≠ 比特币&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;对于比特币是否有价值，目前分歧很大，我们这里就不讨论了。不过对于比特币底层使用的区块链技术，大家的看法是一致的：&lt;em&gt;靠谱！&lt;/em&gt;&lt;br/&gt;区块链行业目前处于发展非常早期的阶段，还处于技术成熟度曲线的第一个坡上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/775365/201802/775365-20180208063324888-78486443.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://www.cnblogs.com/CloudMan6/p/images/12.png&quot; alt=&quot;&quot;/&gt;这意味着：&lt;em&gt;目前投资区块链风险非常高，当然收益也可能很高。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;你可能会问：既然都是高风险高收益，那跟赌博有什么不同？&lt;br/&gt;最主要的区别在于：区块链本身具有 &lt;strong&gt;增长性&lt;/strong&gt;。区块链可以为社会创造巨大价值，只是现在技术不成熟，还处于概念炒作阶段。&lt;/p&gt;
&lt;p&gt;当前的区块链就像2000年的互联网，概念满天飞。一家公司只要域名后缀是 .com，随随便便就能融资几百万美元。Paypal 创始人彼得蒂尔说他当年创办公司的时候收到一张从韩国寄来的 $500万 支票要投资 Paypal。彼得蒂尔告诉对方钱够了，要退回去，对方死活不告诉他地址，请他务必收下这笔投资。&lt;/p&gt;
&lt;p&gt;后来的事大家都知道了，泡沫破了，跑路的跑路，倒闭的倒闭。新浪股价直接从 $42 掉到 $0.9，风险之大可想而知。&lt;br/&gt;区块链现在就像极了当年的互联网。我的建议是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;&lt;li&gt;只投懂的项目。如果你连白皮书都没看懂，投进去跟赌博没有区别。&lt;/li&gt;
&lt;li&gt;只投很少的资金，决不能超过 15%。&lt;/li&gt;
&lt;li&gt;分散投资，投不同应用方向的项目。&lt;/li&gt;
&lt;li&gt;然后忘掉这笔投资，当已经丢了。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;投区块链有点像风险投资，这个行业未来一定会有很大发展，但难的是你不知道哪个项目会是未来的 Google 和 Facebook。&lt;br/&gt;如果对区块链没有把握，没关系，把这 15% 放回到现金资产中，&lt;em&gt;不懂千万不要乱投&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;另外一个建议是：&lt;br/&gt;&lt;em&gt;有可能的话把自己投资到区块链行业中，特别是开发人员。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在不久的将来，这个行业需要大量能够在区块链上开发智能合约的程序员，目前缺口很大。据我调研，要掌握智能合约的开发技术其实并不难。虽然开发平台和模式有所不同，但核心的开发理念跟现在的互联网应用没有本质的区别，对程序员来说可能是个机会。&lt;br/&gt;要知道区块链项目个个都是大金主。&lt;/p&gt;
&lt;p&gt;对于这 15%，可能还有人会问：&lt;em&gt;能不能炒股，做短线，追热点？&lt;/em&gt;&lt;br/&gt;从我的角度看：&lt;em&gt;最好不要。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最主要的原因倒不是风险，风险来了无非是亏点钱，更可惜的是浪费了宝贵的注意力和时间。有这么个公式：&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意力 &amp;gt; 时间 &amp;gt; 金钱&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对一个人来说，正真能创造价值的是我们的注意力，我们应该把注意力更多地放在自我成长上。炒短线会消耗很多注意力，而且还会影响心情甚至智商。&lt;br/&gt;好的投资不应该占用我们陪伴家人和享受生活的时间，好的投资应该是放在那里不用过多关注，让价值慢慢发酵。&lt;/p&gt;
&lt;h3 id=&quot;-&quot;&gt;具体操作&lt;/h3&gt;
&lt;p&gt;假如已经按照前面的建议完成了资金分配，具体操作建议用 &lt;em&gt;定投&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;比如有100万，其中50万投资股票，可以分成5份（或者更多），每份10万，每个月固定时间（比如9号）买入10万的股票。&lt;br/&gt;定投的好处是获得一个市场平均的持仓成本，避免买在较高的价位。&lt;/p&gt;
&lt;p&gt;如果资产贬值了，不用管，我们是价值投资，只要标的的基本面没变就不需要操作。而且我们有 25% 的现金，市场的波动不会影响到自己的生活。&lt;br/&gt;如果资产大幅升值，这时需要将一部分利润转换为现金，保持 25% 的比例。如果大势好，资产翻倍了，你应该撤出之前投入的所有本金，放回到现金中，将持仓成本变成零，剩下的都是利润，爱咋地咋地。&lt;/p&gt;
&lt;p&gt;现金多了怎么办？安心的放在那里，现在你的持仓成本已经很低了，不要想着再进去赚一把，你要做的是耐心的等待。&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;等待牛市继续，让利润飞奔。&lt;br/&gt;或者出现黑天鹅，市场崩盘！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;价值投资者都喜市场出现剧烈波动，因为这意味着有机会以极低的价格买到优质资产。&lt;br/&gt;现在你手上应该有足够的现金，正好用来捡便宜。&lt;br/&gt;以上操作同样适合那 15% 的高风险资产。&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;今天给大家介绍了我学到的资产配置的方法。&lt;br/&gt;将可自由支配的资金分成四部分：&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;25% 的现金，这是我们安身立命的保障。&lt;/p&gt;
&lt;p&gt;10% 的保险，用于防范极端不利的情况。&lt;/p&gt;
&lt;p&gt;50% 价值投资，是做大做强的基石。&lt;/p&gt;
&lt;p&gt;15% 高风险高收益投资，博取意外的惊喜，当然没发生也很正常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上是我的个人建议，供参考。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/775365/201802/775365-20180208064201326-209369280.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
</description>
<pubDate>Thu, 08 Feb 2018 22:08:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/8429931.html</dc:identifier>
</item>
<item>
<title>架构的组成部分 - 石育群</title>
<link>http://www.cnblogs.com/shiyuqun/p/8433976.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/shiyuqun/p/8433976.html</guid>
<description>
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;这篇随笔，是我在阅读《代码大全》这本书的【前期准备】这一章节的时候，所作的笔记。&lt;/p&gt;
&lt;p&gt;因为翻译著作通常比较冗长，因此我将这一部分简单归纳了一下。&lt;/p&gt;
&lt;p&gt;其中，我略去了在现在的软件开发中一般不会遇到的问题，斜体部分是我结合个人工作经历的一些理解（我主要从事的是java-web系统开发）。&lt;/p&gt;
&lt;p&gt;原文见于《代码大全》P45。&lt;/p&gt;

&lt;p&gt;在进行架构设计之前，我们首先应该明白架构应当由哪些部分组成，这样在每一次自行设计架构，或运用别人设计好的架构的时候，都能够迅速地找到最重要的组成部分。&lt;/p&gt;
&lt;p&gt;1、程序组织。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　以概括的形式对整个系统作一个综述，描述组织结构。&lt;/li&gt;
&lt;li&gt;　系统由哪些构造块（子系统）组成。比如用户界面、命令解释、封装业务规则、访问数据。&lt;em&gt;在Java web中，他们分别为前端、MVC框架、服务器接口，以及mybatis或jdbc等数据库操作工具。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;　应该明确每一个构造块的责任和负责的区域，不同的构造块之间应该尽量独立。&lt;em&gt;比如我们常见的前后端分离式开发，controller、service、dao三层设计（如果用jsp等技术做界面展示，则为四层）等。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;　应该明确不同构造块之间的通信规则，对于每个构造块，架构应该指出它能使用哪些构造块，或者不能使用哪些构造块。&lt;em&gt;比如规定controller和service层传参必须使用POJO类，controller能使用service层，但不允许直接调用dao层等。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;2、&lt;/em&gt;数据设计&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　数据库设计时采用何种规范？为何如此设计？&lt;em&gt;比如是使用自增 id还是由代码生成 id等。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;数据通常只应由一个或一组类来访问。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;3、业务规则&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　架构是否依赖特定的规则，以及架构需要作哪些特别设计来适应这种规则？&lt;em&gt;比如同步问题&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;4、&lt;/em&gt;安全性&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;应该描述实现设计层面和代码层面的安全性的方法。比如如何处理缓存，如何处理非受信数据，如何加密等等。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;5、性能&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;应该详细定义性能指标。&lt;/li&gt;
&lt;li&gt;应该详细定义不同性能之间的优先顺序。（如响应速度、内存、并发数等等）&lt;/li&gt;
&lt;li&gt;详细描述：
&lt;ul&gt;&lt;li&gt;　　在当前设计下，为什么能达到性能要求？&lt;/li&gt;
&lt;li&gt;系统所能承受的最大负荷？&lt;/li&gt;
&lt;li&gt;当业务量增大时，哪些部分可能会最先达不到性能指标，风险最大？&lt;/li&gt;
&lt;li&gt;为了满足性能指标，需要在哪些地方进行特殊的算法/结构设计，对开发成本和周期有何影响？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;6、可伸缩性&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　架构应该描述系统如何应对诸如用户数量增长、访问量增长、数据库记录数增长等业务不断增长的情况。&lt;/li&gt;
&lt;li&gt;如果预计业务不会增长（或增长不会超出预期），则架构应当明确地列出这一假设，比如一些公司内部使用的erp软件、财务系统等。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;7、国际化/本地化&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　将一些提示信息、帮助信息、错误信息等等集中管理，而不是分散在代码各处，以便在不同的语言环境中能够轻易替换。&lt;/li&gt;
&lt;li&gt;尽量做到让不懂技术的人也能去维护这些字符串&lt;/li&gt;
&lt;li&gt;决定是在配置文件中配置这些信息，还是可以通过数据库动态修改？为什么？&lt;/li&gt;
&lt;li&gt;总之，要尽量做到在不修改源代码，或者不重启服务器（假如有的话）的情况下，就能做到全部替换。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;8、输入/输出    Input/Output&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　定义读取和写入策略&lt;/li&gt;
&lt;li&gt;应该描述在那一层检测I/O错误：在字段、记录、流、或者文件的层次。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;9、错误处理&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　在什么层次上处理错误？是否规定某一个层次无权处理异常，必须全部将其抛出？&lt;/li&gt;
&lt;li&gt;指出在进行数据验证的时候，是每个类都需要进行数据验证，还是规定只需要某一个层次或某一些类需要进行验证，并且另外的类则可以直接假设数据是被验证过的、值得完全相信的。&lt;/li&gt;
&lt;li&gt;是使用环境內建的异常机制，还是自己建立一整套新的机制？&lt;em&gt;比如在java中，自定义一些继承自Exception类的异常类。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;10、&lt;/em&gt;容错性&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在遇到错误的时候，是否能迅速从错误中恢复（比如关机、重启），并清除其不利影响？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;11、可行性&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　架构师多半会关注系统的各种能力，例如是否达到性能目标，能够在有限的资源下运转，实现环境（运行环境）是否有足够的支持。&lt;/li&gt;
&lt;li&gt;架构应该论证系统的技术可行性。如果在任何一个方面不可行都会导致项目无法实施，那么架构应该说明这些问题是如何考虑的。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;12、过度工程&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;　　过度工程师指程序员为了使系统拥有超过需求中定义的能力而进行的额外工作。&lt;/li&gt;
&lt;li&gt;　　“健壮性”是指“系统在发生错误之后继续运行”的能力。&lt;/li&gt;
&lt;li&gt;架构描述的系统应该比需求描述的系统更健壮。&lt;/li&gt;
&lt;li&gt;组成系统的各部分不应该只在最低限度上满足健壮性要求。&lt;/li&gt;
&lt;li&gt;应该将精力均匀地花费在系统各部分的“过度工程”上面，不应该因为个人好恶，出现“某些部分异常健壮，某些部分勉强健壮”。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;13、不要重复造轮子&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;关注行业里已有的各种组件、技术，看是否可以满足自己的需求；&lt;/li&gt;
&lt;li&gt;自己需要的组件、技术是否开源？如果不开源，成本多少？&lt;/li&gt;
&lt;li&gt;自己重新开发，和直接购买相比，哪一个更有优势？&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Thu, 08 Feb 2018 16:55:00 +0000</pubDate>
<dc:creator>石育群</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/shiyuqun/p/8433976.html</dc:identifier>
</item>
<item>
<title>------- 软件调试——还原 QQ 过滤驱动对关键内核设施所做的修改 ------- - f1yin9_0x5hark</title>
<link>http://www.cnblogs.com/flying-shark/p/8433972.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/flying-shark/p/8433972.html</guid>
<description>&lt;p&gt;————————————————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在前一篇博文中，我们已经处理完最棘手的部分：杀掉 QQFrmMgr.sys 创建的系统线程。剩余的工作就轻松多了——移除 QQFrmMgr.sys 和 QQProtect.sys&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;安装的 SSDT（系统服务调度表）钩子与 SSDT Shadow 钩子、销毁它们注册的事件通知 callback，&lt;/span&gt;&lt;span&gt;从而将系统恢复至干净状态。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在此之前，按照惯例，还是先来检查一下这两个 QQ 驱动是否 &lt;span&gt;attach&lt;/span&gt; 到了其它设备栈中的设备上，因为 rootkit 或恶意软件&lt;/span&gt;&lt;span&gt;通常会挂载到其它合法驱动创建的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设备上，以便拦截或修改途经的 IRP（I/O 请求包）中携带的敏感数据，比如用户的击键数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果发现了任何挂载迹象，则可以通过前一篇介绍的 APC 机制结合 &lt;span&gt;IoDetachDevice()&lt;/span&gt; 例程，把恶意设备从设备栈中清理掉。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于这两个 QQ 驱动会向 Windows 对象管理器维护的全局名称空间中，注册相应的设备对象名，如下图所示：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209002601013-1643568117.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;————————————————————————————————————————————————————————————————&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Windows I/O 管理器导出的两个例程 &lt;span&gt;IoCreateDevice()&lt;/span&gt; 与 &lt;span&gt;IoCreateSymbolicLink()&lt;/span&gt; 普遍被驱动程序用来向 NT 名称空间中&lt;/span&gt;&lt;span&gt;注册设备对象名，以及相应的符&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;号链接。&lt;/span&gt;&lt;span&gt;用户态进程使用符号链接访问该对象；而在内核空间中，可以直接通过对象名进行访问，所以我们先用内核调试器的“!devstack”&lt;/span&gt;&lt;span&gt;扩展命令，后接这&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;两个 QQ 设备对象的名称，查询它们是否挂载到了任何系统现存的设备栈上：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209002802310-38203416.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如你所见，这两个设备对象各自所在的设备栈中，都只有它们自身——如果它们挂载到了任何其它设备上，“!devstack”的输出&lt;/span&gt;&lt;span&gt;中就会含有那些“&lt;span&gt;受害&lt;/span&gt;”的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;设备。&lt;/span&gt;&lt;span&gt;其中，“!DevObj”栏位下的 4 字节 16 进制数是该设备对象的“&lt;span&gt;nt!_DEVICE_OBJECT&lt;/span&gt;”结构地址；&lt;/span&gt;&lt;span&gt;“!DrvObj”栏位下的则是创建它们的驱动对象名&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;称。&lt;/span&gt;&lt;span&gt;其实这两个 QQ 设备对象还算是“良性”的——某些 rootkit 创建设备对象时，根本不注册名字到 NT 名称空间（通过向 &lt;/span&gt;&lt;span&gt;IoCreateDevice() 的第三个参&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数传入 NULL，就可以做到这一点），对于此类“恶性”的匿名设备，需要获悉它的&lt;/span&gt;&lt;span&gt;“nt!_DEVICE_OBJECT”结构地址，然后才能用“!devstack”遍历设备&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;栈，这个难度就不小了。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;言归正传，接下来先检查系统的 SSDT，寻找有无被挂钩的系统服务，如下图，SSDT 的起始地址为 0x83c80f7c，一共有 &lt;/span&gt;&lt;span&gt;0x191（401）个系统服务，其中一&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;部分已经被替换成 QQFrmMgr.sys 的钩子函数：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209003313216-1834081443.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209003340654-178371200.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;本来可以利用“&lt;span&gt;!chkimg&lt;/span&gt;”扩展命令执行自动化检查，&lt;span&gt;将 nt 模块（ntoskrnl.exe）的内存映像与磁盘文件比较，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从而找出那些被修改了的部分&lt;/span&gt;，但不知为何我&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;的宿主机上 WinDbg 无法对 nt 模块实施检查，总是提示 ntkrpamp.exe/ntoskrnl.exe &lt;/span&gt;&lt;span&gt;的版本不匹配。（——还请成功执行“!chkimg”命令检查 nt 模块的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;各位提供经验——）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一种最原始的方法就是先记录下受感染机器上 QQFrmMgr.sys 的钩子函数在 SSDT 中的位置，&lt;/span&gt;&lt;span&gt;然后把它与另一个干净系统上的 SSDT 对比，以得知被 hook&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;的是哪个系统服务——前面那张截图就是用这种脏累的体力活实现的。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;注意，系统每次初始化时，SSDT 的基地址，以及其中的系统服务入口点地址都是随机变化的，因而我们不能记录它们的内核地址，而是&lt;/span&gt;&lt;span&gt;要记录函数名，在复&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;原前用反汇编指令“u”，即可强制解析原始系统服务在&lt;span&gt;本次启动&lt;/span&gt;时分配到的内核地址，&lt;/span&gt;&lt;span&gt;然后以“eb”指令编辑还原被 hook 的表项——言词苍白无力，还是&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;看图有真相吧：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209003647716-238681463.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004011107-506066808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;注意，Intel x86/x64 体系结构的微处理器采用“&lt;span&gt;小端字节序&lt;/span&gt;”在内存中放置数据，换言之，一个“双字”（DWORD）数据的&lt;/span&gt;&lt;span&gt;最低有效字节位于连续的四字节&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;存储空间中的最小地址处；最高有效位则存放在最大地址处。以上图为例，系统服务&lt;/span&gt;&lt;span&gt;“nt!NtCreateSection”的入口点地址——83e5583b，其中最低有效字&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;节是“3b”，所以我们在编辑时把它放在最前面（最小地址处）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;这个游戏规则是处理器硬件厂商规定的，如果不遵守它来办事就无法正确地恢复被挂钩的系统函数！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;此外，通过分析我们还得知：QQFrmMgr.sys 利用“&lt;span&gt;inline hook&lt;/span&gt;”技术硬挂钩了 &lt;span&gt;KeUserModeCallback()&lt;/span&gt; 内核例程中的正常函数调用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;，由于我机器上的“!chkimg”不能工作，无法依赖它检测处挂钩前的原始函数调用，但是我们可以用 IDA PRO 逆向 &lt;/span&gt;&lt;span&gt;ntkrpamp.exe/ntoskrnl.exe 的磁盘文&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;件，定位到 KeUserModeCallback() 中的原始函数调用——这种不修改函数指针数组&lt;/span&gt;&lt;span&gt;（如 SSDT，一般位于 .data section），而是修改特定函数（一般位于&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;.text section）中的调用逻辑，就称为“inline hook”。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如下两张截图，手工比较“ntkrnlpa.exe”的磁盘文件与内存映像，两者的 KeUserModeCallback() 初始逻辑（机器指令序列）基本相同，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了内存映像中的首条 call 指令目标被替换成了“QQFrmMgr+0x503e”之外。。。。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004122263-923638814.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004213654-616755204.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;击败“inline hook”的方法也是用前面介绍过的“eb”内存编辑指令，根据上图 IDA PRO 中的原始信息来还原。同样需要留心字节序的问题！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;（事实上，“!chkimg”有一个开关选项为“-f”，能够把二进制文件的内存映像中所有被篡改或损坏之处还原成与磁盘文件上的一致，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;“一键还原所有 hook”，无需前面介绍的繁杂手工操作；但既然该指令用在 nt 模块上如此令人蛋疼，这里也就无法演示了，请各位自行测试！）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;——————————————————————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;span&gt;清理完 SSDT 中的病毒后，让我们来关注 SSDT Shadow——内核全局变量“KeServiceDescriptorTableShadow”持有该表的基地址，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;该表由 Win32 子系统的内核模式部分—— Win32k.sys 填写，负责实现 GUI 线程请求的所有涉及窗口绘图，鼠标指针，以及其它图形操作。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;由于多数正规应用程序为了与用户交互，都会请求图形操作，因此该表也成了 rootkit 们重点 hook 的系统数据结构之一。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如下图所示，我们在检查 SSDT Shadow 中的函数时遇到了无效的内存地址（显示为问号），&lt;span&gt;这是因为断入调试器的当前线程不是一个&lt;/span&gt;&lt;/span&gt;&lt;span&gt;“GUI 线程”，所以它&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;的 SSDT Shadow 起始虚拟地址（图中的 9a94c000）没有映射到物理内存中的实际 SSDT Shadow（您可以看到&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;描述该虚拟地址的页表条目是非法的）&lt;/span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004503404-1354388536.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;如果当前线程的“nt!_KTHREAD”结构的“Win32Thread”字段为“NULL”，那么它就不是一个 GUI 线程，从而它的页表中，描述&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;SSDT Shadow 虚拟地址的那一项 PTE 就是无效的，没法用来转译物理地址：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004555013-919403198.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;为了“看见”Win32k.sys 实现的 SSDT Shadow，我们可以在绝大多数用户、内核模式线程都频繁调用的例程—— &lt;span&gt;nt!NtWaitForSingleObject()&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下一个&lt;span&gt;条件断点&lt;/span&gt;，仅在调用线程的“Win32Thread”字段不为空时，才断入内核调试器，这样我们就能够窥视 SSDT Shadow 了！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如下一系列截图所示：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004703216-1947587801.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004719638-1034036941.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004735748-1189650756.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209004805029-1613625356.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;综上截图所述，QQFrmMgr.sys 在 SSDT Shadow 中仅安装了一枚钩子，我们计算出该钩子例程在整个 Win32k.sys 内存映像中的偏移量为&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;0x20c630&lt;/span&gt;——该信息相当关键，它用于在 Win32k.sys 磁盘文件中定位原始的 SSDT Shadow 函数入口地址。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;再次以 IDA PRO 打开 Win32k.sys，从该模块的描述信息可知，它的基地址为 0xBF800000，把这个值加上 0x20c630 得出&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;0xBFA0C630&lt;/span&gt;——也就是持有“受害”函数入口点的位置，于是我们在 IDA PRO 中执行“&lt;span&gt;Jump to address&lt;/span&gt;”菜单选项，跳转到该地址，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;真相大白，被 hook 的就是“&lt;span&gt;win32k!NtUserFindWindowEx&lt;/span&gt;”，请注意它的前后两个例程与内存映像中钩子例程的前后两个完全一致。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;反汇编“win32k!NtUserFindWindowEx”来获取它在本次引导实例中的内核地址，然后用“eb”移除掉可恶的 QQ 钩子函数，至此大功告成！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209005021748-1789987133.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209005051591-285662229.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1318637/201802/1318637-20180209005107732-830546916.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;—————————————————————————————————————————————————————————————————————————————————————————&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;小结：本篇博文演示了如何通过调试手段，将被恶意修改的关键系统设施还原成初始状态。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;限于篇幅，最后一部分内容——销毁 QQ 驱动注册的事件通知回调函数——将放在下一篇博文中介绍，&lt;/span&gt;&lt;span&gt;有任何疑问或者建议请在下方评论处反馈。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;—————————————————————————————————————————————————————————————————————————————————————————&lt;/p&gt;

</description>
<pubDate>Thu, 08 Feb 2018 16:53:00 +0000</pubDate>
<dc:creator>f1yin9_0x5hark</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/flying-shark/p/8433972.html</dc:identifier>
</item>
<item>
<title>CRM项目-1模型与站点管理 - 娄先生</title>
<link>http://www.cnblogs.com/louhui/p/8433862.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/louhui/p/8433862.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; django.db &lt;span&gt;import&lt;/span&gt;&lt;span&gt; models
&lt;/span&gt;&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; django.contrib.auth.models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; User
&lt;/span&gt;&lt;span&gt;  3&lt;/span&gt; 
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt; Create your models here.&lt;/span&gt;
&lt;span&gt;  5&lt;/span&gt; 
&lt;span&gt;  6&lt;/span&gt; 
&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Customer(models.Model):
&lt;/span&gt;&lt;span&gt;  8&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;客户信息表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;  9&lt;/span&gt;     name = models.CharField(max_length=32, blank=True, null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 10&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;32个字节，中文10个,第一次来不会告诉你为空,blank是在django-admin里面的限制。一般都是成对出现&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt;     qq = models.CharField(max_length=64,unique=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;以qq为主，可以是手机，微信&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt;     phone = models.CharField(max_length=64,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 14&lt;/span&gt;     source_choices =&lt;span&gt; (
&lt;/span&gt;&lt;span&gt; 15&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;转介绍&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 16&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QQ群&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 17&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;官网&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 18&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;百度推广&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 19&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;51CTO&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 20&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;知乎&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 21&lt;/span&gt;         (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;市场推广&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt; 23&lt;/span&gt;     source = models.SmallIntegerField(choices=&lt;span&gt;source_choices)
&lt;/span&gt;&lt;span&gt; 24&lt;/span&gt;     referral_name = models.CharField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;转介绍人qq&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,max_length=64,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 25&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;咨询的课程&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt;     consult_course = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;咨询课程&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 27&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;描述客户信息&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt;     content = models.TextField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;咨询详情&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 29&lt;/span&gt;     consultant = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 30&lt;/span&gt;     memo = models.TextField(blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 31&lt;/span&gt;     tags = models.ManyToManyField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Tag&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 32&lt;/span&gt;     date = models.DateField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 33&lt;/span&gt; 
&lt;span&gt; 34&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt; 35&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.qq
&lt;/span&gt;&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt; 37&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;客户表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt; 
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Tag(models.Model):
&lt;/span&gt;&lt;span&gt; 40&lt;/span&gt;     name = models.CharField(unique=True,max_length=32&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 41&lt;/span&gt; 
&lt;span&gt; 42&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt; 43&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name
&lt;/span&gt;&lt;span&gt; 44&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt; 45&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;标签表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt; 
&lt;span&gt; 47&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerFollowUp(models.Model):
&lt;/span&gt;&lt;span&gt; 48&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;客户跟进表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;     customer = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Customer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 50&lt;/span&gt;     content = models.TextField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;跟进内容&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 51&lt;/span&gt;     consultant = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 52&lt;/span&gt;     intention_choices =&lt;span&gt; (
&lt;/span&gt;&lt;span&gt; 53&lt;/span&gt;         (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;两周内报名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 54&lt;/span&gt;         (1,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1个月内报名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 55&lt;/span&gt;         (2,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;近期无报名计划&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 56&lt;/span&gt;         (3,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已在其他机构报名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 57&lt;/span&gt;         (4,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已报名&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 58&lt;/span&gt;         (5,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已拉黑&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 59&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt; 60&lt;/span&gt;     intention = models.SmallIntegerField(choices=&lt;span&gt;intention_choices)
&lt;/span&gt;&lt;span&gt; 61&lt;/span&gt;     date = models.DateTimeField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 62&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt; 63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;%s :%s&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.customer,self.intention)
&lt;/span&gt;&lt;span&gt; 64&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt; 65&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;客户跟进表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt; 
&lt;span&gt; 67&lt;/span&gt; 
&lt;span&gt; 68&lt;/span&gt; 
&lt;span&gt; 69&lt;/span&gt; 
&lt;span&gt; 70&lt;/span&gt; 
&lt;span&gt; 71&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Course(models.Model):
&lt;/span&gt;&lt;span&gt; 72&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;课程表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt;     name = models.CharField(max_length=64,unique=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 74&lt;/span&gt;     price =&lt;span&gt; models.PositiveIntegerField()
&lt;/span&gt;&lt;span&gt; 75&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;周期&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;     period = models.PositiveIntegerField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;周期（月）&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 77&lt;/span&gt;     outline =&lt;span&gt; models.TextField()
&lt;/span&gt;&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name
&lt;/span&gt;&lt;span&gt; 80&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt; 81&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;课程表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 82&lt;/span&gt;     
&lt;span&gt; 83&lt;/span&gt; 
&lt;span&gt; 84&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ClassList(models.Model):
&lt;/span&gt;&lt;span&gt; 85&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;班级表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt;     branch = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Branch&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 87&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;创建班级的时候，关联课程&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt;     course = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 89&lt;/span&gt;     class_type_choices =&lt;span&gt; (
&lt;/span&gt;&lt;span&gt; 90&lt;/span&gt;         (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;面授-脱产&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 91&lt;/span&gt;         (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;面授-周末&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 92&lt;/span&gt;         (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;面授-周末&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt; 94&lt;/span&gt;     class_type = models.SmallIntegerField(choices=class_type_choices,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;授课方式&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 95&lt;/span&gt;     semester = models.PositiveSmallIntegerField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 96&lt;/span&gt;     teachers = models.ManyToManyField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 97&lt;/span&gt;     star_date =  models.DateField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;开班日期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 98&lt;/span&gt;     end_date =  models.DateField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;结业日期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt; 99&lt;/span&gt; 
&lt;span&gt;100&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;101&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.branch,self.course,self.semester)
&lt;/span&gt;&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;103&lt;/span&gt;         unique_together = (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;branch&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;course&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;semester&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;104&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;班级表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt; 
&lt;span&gt;106&lt;/span&gt; 
&lt;span&gt;107&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Branch(models.Model):
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;校区&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;109&lt;/span&gt;     name = models.CharField(max_length=128,unique=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt;     addr = models.CharField(max_length=128&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;112&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;校区&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;115&lt;/span&gt; 
&lt;span&gt;116&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CourseRecord(models.Model):
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;上课记录&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;118&lt;/span&gt;     from_class = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClassList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;班级&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt;     day_num = models.PositiveSmallIntegerField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;第几节&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt;     teacher = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;     has_homework = models.BooleanField(default=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;122&lt;/span&gt;     homework_tittle = models.CharField(max_length=128,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;     homework_content = models.TextField(blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt;     outline = models.TextField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;本节课程大纲&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;125&lt;/span&gt;     date = models.DateField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;126&lt;/span&gt;     
&lt;span&gt;127&lt;/span&gt;     
&lt;span&gt;128&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.from_class,self.day_num)
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt;     
&lt;span&gt;131&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;132&lt;/span&gt;         unique_together = (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;from_class&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;day_num&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;上课记录&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;134&lt;/span&gt;         
&lt;span&gt;135&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudyRecord(models.Model):
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;学习记录表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;137&lt;/span&gt;     student = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Enrollment&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;138&lt;/span&gt;     course_record = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;CourseRecord&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt;     attendance_choices =&lt;span&gt; (
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt;         (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已签到&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt;         (1,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;迟到&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;         (2,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;缺钱&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;143&lt;/span&gt;         (3,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;早退&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;    )
&lt;/span&gt;&lt;span&gt;145&lt;/span&gt;     attendance = models.SmallIntegerField(choices=&lt;span&gt;attendance_choices)
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;使用数字便于统计&lt;/span&gt;
&lt;span&gt;147&lt;/span&gt;     score_choices = ((100,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;148&lt;/span&gt;                      (90,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt;                      (85,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt;                      (80,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt;                      (75,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;B-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt;                      (70,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;                      (60,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt;                      (40,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;C-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt;                      (-50,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt;                      (-100,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;COPY&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt;                      (0,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;N/A&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt; &lt;span&gt;                     )
&lt;/span&gt;&lt;span&gt;159&lt;/span&gt;     score = models.SmallIntegerField(choices=&lt;span&gt;score_choices)
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt;     memo = models.TextField(blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;161&lt;/span&gt;     date = models.DateField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;(self.student,self.course_record,self.score)
&lt;/span&gt;&lt;span&gt;164&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;165&lt;/span&gt;         unique_together = (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;student&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;course_record&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学习记录表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;167&lt;/span&gt;     
&lt;span&gt;168&lt;/span&gt; 
&lt;span&gt;169&lt;/span&gt; &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;170&lt;/span&gt; &lt;span&gt;一个学生报完名，需要合同（可以报名多个）
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt; &lt;span&gt;上课记录等等，所以需要一个报名表
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;学生本人的信息在  客户信息表  中，
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt; &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;174&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Enrollment(models.Model):
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;报名表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;176&lt;/span&gt;     customer = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Customer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt;     enrolled_class = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ClassList&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;所报班级&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt;     consultant = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;课程顾问&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt;     contract_agreed = models.BooleanField(default=False,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;学院已同意合同条款&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt;     contract_approved = models.BooleanField(default=False,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;合同与审核&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt;     date = models.DateTimeField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt;     
&lt;span&gt;183&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.customer,self.enrolled_class)
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;186&lt;/span&gt;         unique_together = (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;customer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;enrolled_class&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;报名表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;188&lt;/span&gt;         
&lt;span&gt;189&lt;/span&gt;         
&lt;span&gt;190&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Payment(models.Model):
&lt;/span&gt;&lt;span&gt;191&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;缴费记录&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;192&lt;/span&gt;     customer = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Customer&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt;     course = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;所报课程&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt;     amount = models.PositiveIntegerField(verbose_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;金额&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,default=500)&lt;span&gt;#&lt;/span&gt;&lt;span&gt;定金500&lt;/span&gt;
&lt;span&gt;195&lt;/span&gt;     consultant = models.ForeignKey(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;196&lt;/span&gt;     date = models.DateTimeField(auto_now_add=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt;     
&lt;span&gt;198&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt;(self.customer,self.amount)
&lt;/span&gt;&lt;span&gt;200&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;缴费记录表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;202&lt;/span&gt;     
&lt;span&gt;203&lt;/span&gt; 
&lt;span&gt;204&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserProfile(models.Model):
&lt;/span&gt;&lt;span&gt;205&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;账号表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;206&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;跟djaogo的user表进行关联，这样认证等问题，就可以很简单的解决了&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;207&lt;/span&gt;     user =&lt;span&gt; models.OneToOneField(User)
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt;     name = models.CharField(max_length=32&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;209&lt;/span&gt;     roles = models.ManyToManyField(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Role&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,blank=True,null=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;账号表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;212&lt;/span&gt;     
&lt;span&gt;213&lt;/span&gt; 
&lt;span&gt;214&lt;/span&gt; 
&lt;span&gt;215&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Role(models.Model):
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt;     &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;角色表&lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;217&lt;/span&gt;     name = models.CharField(max_length=32,unique=&lt;span&gt;True)
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt;     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name
&lt;/span&gt;&lt;span&gt;220&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
&lt;/span&gt;&lt;span&gt;221&lt;/span&gt;         verbose_name_plural = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;角色表&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Thu, 08 Feb 2018 15:48:00 +0000</pubDate>
<dc:creator>娄先生</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/louhui/p/8433862.html</dc:identifier>
</item>
<item>
<title>java配置context.xml文件 - Mr.right少年</title>
<link>http://www.cnblogs.com/shaonian404/p/8433811.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/shaonian404/p/8433811.html</guid>
<description>&lt;p&gt;&lt;strong&gt;2018-02-08   23:32:23&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;修改context.xml文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;自从学习了&lt;span&gt;servlet后，每次修改里面的内容后，想要访问都要重启服务器，这样感觉很麻烦的，所以今天就教大家一个方法，只需要一行代码就解决“&lt;strong&gt;&lt;span&gt;无需重新启动服务器&lt;/span&gt;&lt;/strong&gt;”。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;请看下面的图示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1173558/201802/1173558-20180208232009060-967568509.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/1173558/201802/1173558-20180208232213716-1337086266.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在第&lt;span&gt;&lt;strong&gt;19行&lt;/strong&gt;&lt;/span&gt;代码处&lt;strong&gt;&lt;span&gt;&amp;lt;Context&amp;gt;&lt;/span&gt;&lt;/strong&gt;里面写上&lt;span&gt;reloadable=&quot;true&quot;&lt;/span&gt;,然后进行保存。    reloadable=&quot;true&quot;意思是&lt;strong&gt;&lt;span&gt;重新加载（自动刷新）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样就可以实现无论修改什么都&lt;strong&gt;&lt;span&gt;不需要重新启动服务器&lt;/span&gt;&lt;/strong&gt;，就可以直接访问了。&lt;/p&gt;
&lt;p&gt;是不是很简单又实用，喜欢的关注下，谢谢支持！！！&lt;/p&gt;

</description>
<pubDate>Thu, 08 Feb 2018 15:34:00 +0000</pubDate>
<dc:creator>Mr.right少年</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/shaonian404/p/8433811.html</dc:identifier>
</item>
<item>
<title>cdh版本的hive安装以及配置 - 小宁哥</title>
<link>http://www.cnblogs.com/xningge/p/8433792.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xningge/p/8433792.html</guid>
<description>&lt;p&gt;hive依赖hadoop&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要的软件包：hive-0.13.1-cdh5.3.6.tar.gz 、hadoop-2.5.0-cdh5.3.6.tar.gz&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、hadoop的安装步骤请访问：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　http://www.cnblogs.com/xningge/articles/8433297.html&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、将hive软件包上传到Linux系统指定的目录：/opt/softwares/cdh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、解压hive-0.13.1-cdh5.3.6.tar.gz到指定的目录：/opt/modules/cdh/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;tar -zxvf hive-0.13.1-cdh5.3.6.tar.gz -C /opt/modules/cdh/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、重命名hive-env.sh (去掉.template)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;HADOOP_HOME=/opt/modules/cdh/hadoop-2.5.0-cdh5.3.6&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export HIVE_CONF_DIR=/opt/modules/cdh/hive-0.13.1-cdh5.3.6/conf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、重命名hive-site.xml (去掉.template，修改为site)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;property&amp;gt;&lt;br/&gt;　　&amp;lt;name&amp;gt;javax.jdo.option.ConnectionURL&amp;lt;/name&amp;gt;&lt;br/&gt;　　&amp;lt;value&amp;gt;jdbc:mysql://&lt;span&gt;&lt;strong&gt;hadoop01.xningge.com&lt;/strong&gt;&lt;/span&gt;:3306/&lt;strong&gt;&lt;span&gt;cdhmetastore&lt;/span&gt;&lt;/strong&gt;?createDatabaseIfNotExist=true&amp;lt;/value&amp;gt;&lt;br/&gt;&amp;lt;/property&amp;gt;&lt;br/&gt;&amp;lt;property&amp;gt;&lt;br/&gt;　　&amp;lt;name&amp;gt;javax.jdo.option.ConnectionDriverName&amp;lt;/name&amp;gt;&lt;br/&gt;　　&amp;lt;value&amp;gt;com.mysql.jdbc.Driver&amp;lt;/value&amp;gt;&lt;br/&gt;&amp;lt;/property&amp;gt;&lt;br/&gt;&amp;lt;property&amp;gt;&lt;br/&gt;　　&amp;lt;name&amp;gt;javax.jdo.option.ConnectionUserName&amp;lt;/name&amp;gt;&lt;br/&gt;　　&amp;lt;value&amp;gt;&lt;strong&gt;&lt;span&gt;xningge&lt;/span&gt;&lt;/strong&gt;&amp;lt;/value&amp;gt;&lt;br/&gt;&amp;lt;/property&amp;gt;&lt;br/&gt;&amp;lt;property&amp;gt;&lt;br/&gt;　　&amp;lt;name&amp;gt;javax.jdo.option.ConnectionPassword&amp;lt;/name&amp;gt;&lt;br/&gt;　　&amp;lt;value&amp;gt;&lt;strong&gt;&lt;span&gt;???&lt;/span&gt;&lt;/strong&gt;&amp;lt;/value&amp;gt;&lt;br/&gt;&amp;lt;/property&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;**注意：模板文件有一个bug，在hive-site.xml的2781行少了一个&amp;lt;property&amp;gt;开始标记&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6、重命名hive-log4j.properties (去掉.template)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ mkdir logs&lt;/span&gt;&lt;br/&gt;** 修改hive-log4j.properties&lt;br/&gt;&lt;span&gt;hive.log.dir=/opt/modules/cdh/hive-0.13.1-cdh5.3.6/logs&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;7、拷贝jdbc driver&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　** 将驱动文件复制到lib/&lt;br/&gt;　　&lt;span&gt;$ cp /opt/software/mysql-connector-java-5.1.27-bin.jar lib/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8、切换到CDH Hadoop目录，建立目录，并修改权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　** /user/hive/warehouse为Hive存放数据的目录&lt;br/&gt;&lt;span&gt;　　$ bin/hdfs dfs -mkdir -p /user/hive/warehouse&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　$ bin/hdfs dfs -chmod g+w /user/hive/warehouse&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　$ bin/hdfs dfs -chmod g+w /tmp&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9、启动客户端使用Hive&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　eg:把profile里HIVE_HOME注解掉(如果有配置这个全局变量的话，则注释)&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;$ bin/hive&lt;/span&gt;&lt;br/&gt;&lt;span&gt;　　hive&amp;gt; show databases;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 08 Feb 2018 15:29:00 +0000</pubDate>
<dc:creator>小宁哥</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xningge/p/8433792.html</dc:identifier>
</item>
<item>
<title>python可用ORM之Pony - 我走的很慢</title>
<link>http://www.cnblogs.com/liao-lin/p/8433785.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liao-lin/p/8433785.html</guid>
<description>&lt;p&gt;Pony是Python的一种ORM，它允许使用生成器表达式来构造查询，通过将生成器表达式的抽象语法树解析成SQL语句。它也有在线ER图编辑器可以帮助你创建Model。&lt;/p&gt;
&lt;p&gt;示例分析&lt;/p&gt;
&lt;p&gt;Pony语句：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select(p for p in Person if p.age &amp;gt; 20)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;翻译成sql语句就是：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT p.id, p.name, p.age, p.classtype, p.mentor, p.gpa, p.degree

FROM person p

WHERE p.classtype IN ('Student', 'Professor', 'Person')

AND p.age &amp;gt; 20&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Pony语句：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select(c for c in Customer
         if sum(c.orders.price) &amp;gt; 1000)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;翻译成sql语句就是:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT &quot;c&quot;.&quot;id&quot;
FROM &quot;Customer&quot; &quot;c&quot;
  LEFT JOIN &quot;Order&quot; &quot;order-1&quot;
    ON &quot;c&quot;.&quot;id&quot; = &quot;order-1&quot;.&quot;customer&quot;
GROUP BY &quot;c&quot;.&quot;id&quot;
HAVING coalesce(SUM(&quot;order-1&quot;.&quot;total_price&quot;), 0) &amp;gt; 1000&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;安装Pony&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;pip install pony&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使用Pony&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#!/usr/bin/env python
#-*- coding:utf-8 -*-

import datetime
import pony.orm as pny
import sqlite3

# conn = sqlite3.connect('D:\日常python学习PY2\Pony学习\music.sqlite')
# print conn

# database = pny.Database()
# database.bind(&quot;sqlite&quot;,&quot;music.sqlite&quot;,create_db=True)

# 路径建议写绝对路径。我这边开始写相对路径报错 unable to open database file
database = pny.Database(&quot;sqlite&quot;,&quot;D:\日常python学习PY2\Pony学习\music.sqlite&quot;,create_db=True)

########################################################################
class Artist(database.Entity):
    &quot;&quot;&quot;
    Pony ORM model of the Artist table
    &quot;&quot;&quot;
    name = pny.Required(unicode)
    #被外键关联
    albums = pny.Set(&quot;Album&quot;)

########################################################################
class Album(database.Entity):
    &quot;&quot;&quot;
    Pony ORM model of album table
    &quot;&quot;&quot;
    #外键字段artlist,外键关联表Artist，Artist表必须写Set表示被外键关联
    #这个外键字段默认就是index=True,除非自己指定index=False才不会创建索引，索引名默认为[idx_表名__字段](artist)
    artist = pny.Required(Artist)
    title = pny.Required(unicode)
    release_date = pny.Required(datetime.date)
    publisher = pny.Required(unicode)
    media_type = pny.Required(unicode)

# turn on debug mode
pny.sql_debug(True)      # 显示debug信息(sql语句)

# map the models to the database
# and create the tables, if they don't exist
database.generate_mapping(create_tables=True)       # 如果数据库表没有创建表&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行之后生成sqlite如下:&lt;/p&gt;
&lt;p&gt;上述代码对应的sqlite语句是：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;GET CONNECTION FROM THE LOCAL POOL
PRAGMA foreign_keys = false
BEGIN IMMEDIATE TRANSACTION
CREATE TABLE &quot;Artist&quot; (
  &quot;id&quot; INTEGER PRIMARY KEY AUTOINCREMENT,
  &quot;name&quot; TEXT NOT NULL
)
 
CREATE TABLE &quot;Album&quot; (
  &quot;id&quot; INTEGER PRIMARY KEY AUTOINCREMENT,
  &quot;artist&quot; INTEGER NOT NULL REFERENCES &quot;Artist&quot; (&quot;id&quot;),
  &quot;title&quot; TEXT NOT NULL,
  &quot;release_date&quot; DATE NOT NULL,
  &quot;publisher&quot; TEXT NOT NULL,
  &quot;media_type&quot; TEXT NOT NULL
)
 
CREATE INDEX &quot;idx_album__artist&quot; ON &quot;Album&quot; (&quot;artist&quot;)
 
SELECT &quot;Album&quot;.&quot;id&quot;, &quot;Album&quot;.&quot;artist&quot;, &quot;Album&quot;.&quot;title&quot;, &quot;Album&quot;.&quot;release_date&quot;, &quot;Album&quot;.&quot;publisher&quot;, &quot;Album&quot;.&quot;media_type&quot;
FROM &quot;Album&quot; &quot;Album&quot;
WHERE 0 = 1
 
SELECT &quot;Artist&quot;.&quot;id&quot;, &quot;Artist&quot;.&quot;name&quot;
FROM &quot;Artist&quot; &quot;Artist&quot;
WHERE 0 = 1
 
COMMIT
PRAGMA foreign_keys = true
CLOSE CONNECTION&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;插入/增加数据&lt;/p&gt;
&lt;p&gt;详情见：&lt;a href=&quot;https://github.com/flowpig/daily_demos&quot; class=&quot;uri&quot;&gt;https://github.com/flowpig/daily_demos&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#!/usr/bin/env python
#-*- coding:utf-8 -*-

import datetime
import pony.orm as pny
from models import Album, Artist
from database import PonyDatabase


# ----------------------------------------------------------------------
@pny.db_session
def add_data():
    &quot;&quot;&quot;&quot;&quot;&quot;

    new_artist = Artist(name=u&quot;Newsboys&quot;)
    bands = [u&quot;MXPX&quot;, u&quot;Kutless&quot;, u&quot;Thousand Foot Krutch&quot;]
    for band in bands:
        artist = Artist(name=band)

    album = Album(artist=new_artist,
                  title=u&quot;Read All About It&quot;,
                  release_date=datetime.date(1988, 12, 01),
                  publisher=u&quot;Refuge&quot;,
                  media_type=u&quot;CD&quot;)

    albums = [{&quot;artist&quot;: new_artist,
               &quot;title&quot;: &quot;Hell is for Wimps&quot;,
               &quot;release_date&quot;: datetime.date(1990, 07, 31),
               &quot;publisher&quot;: &quot;Sparrow&quot;,
               &quot;media_type&quot;: &quot;CD&quot;
               },
              {&quot;artist&quot;: new_artist,
               &quot;title&quot;: &quot;Love Liberty Disco&quot;,
               &quot;release_date&quot;: datetime.date(1999, 11, 16),
               &quot;publisher&quot;: &quot;Sparrow&quot;,
               &quot;media_type&quot;: &quot;CD&quot;
               },
              {&quot;artist&quot;: new_artist,
               &quot;title&quot;: &quot;Thrive&quot;,
               &quot;release_date&quot;: datetime.date(2002, 03, 26),
               &quot;publisher&quot;: &quot;Sparrow&quot;,
               &quot;media_type&quot;: &quot;CD&quot;}
              ]

    for album in albums:
        a = Album(**album)


if __name__ == &quot;__main__&quot;:
    db = PonyDatabase()
    db.bind(&quot;sqlite&quot;, &quot;D:\日常python学习PY2\Pony学习\music.sqlite&quot;, create_db=True)
    db.generate_mapping(create_tables=True)


    add_data()

    # use db_session as a context manager
    with pny.db_session:
        a = Artist(name=&quot;Skillet&quot;)


'''
您会注意到我们需要使用一个装饰器db_session来处理数据库。 
它负责打开连接，提交数据并关闭连接。 你也可以把它作为一个上
下文管理器，with pny.db_session
'''&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;更新数据&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#!/usr/bin/env python
#-*- coding:utf-8 -*-

import pony.orm as pny

from models import Artist, Album
from database import PonyDatabase

db = PonyDatabase()
db.bind(&quot;sqlite&quot;, &quot;D:\日常python学习PY2\Pony学习\music.sqlite&quot;, create_db=True)
db.generate_mapping(create_tables=True)


with pny.db_session:
    band = Artist.get(name=&quot;Newsboys&quot;)
    print band.name

    for record in band.albums:
        print record.title

    # update a record
    band_name = Artist.get(name=&quot;Kutless&quot;)
    band_name.name = &quot;Beach Boys&quot;
    
    #使用生成器形式查询
    '''
    result = pny.select(i.name for i in Artist)
    result.show()
    
    结果：
    i.name              
    --------------------
    Newsboys            
    MXPX                
    Beach Boys          
    Thousand Foot Krutch
    Skillet             

    '''&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;删除记录&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;import pony.orm as pny
 
from models import Artist
 
with pny.db_session:
    band = Artist.get(name=&quot;MXPX&quot;)
    band.delete()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Pony补充&lt;/p&gt;
&lt;p&gt;可以连接的数据库：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;##postgres

db.bind('postgres', user='', password='', host='', database='')

##sqlite         create_db:如果数据库不存在创建数据库文件

db.bind('sqlite', 'filename', create_db=True)

##mysql

db.bind('mysql', host='', user='', passwd='', db='')

##Oracle

db.bind('oracle', 'user/password@dsn')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Entity(实体)类似mvc里面的model&lt;/p&gt;
&lt;p&gt;在创建实体实例之前，需要将实体映射到数据库表，生成映射后，可以通过实体查询数据库并创建新的实例。db.Entity自己定义新的实体必须从db.Entity继承&lt;/p&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Customer(db.Entity):
    name = Required(str)
    picture = Optional(buffer)

sql_debug(True)  # 显示debug信息(sql语句)
db.generate_mapping(create_tables=True)  # 如果数据库表没有创建表&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;属性类型&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Required&lt;/li&gt;
&lt;li&gt;Optional&lt;/li&gt;
&lt;li&gt;PrimaryKey&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Required and Optional&lt;/p&gt;
&lt;p&gt;通常实体属性分为Required(必选)和Optional(可选)&lt;/p&gt;
&lt;p&gt;PrimaryKey(主键)&lt;/p&gt;
&lt;p&gt;默认每个实体都有一个主键，默认添加了id=PrimaryKey(int,auto=True)属性&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Product(db.Entity):
    name = Required(str, unique=True)
    price = Required(Decimal)
    description = Optional(str)
    
#等价于下面

class Product(db.Entity):
    id = PrimaryKey(int, auto=True)
    name = Required(str, unique=True)
    price = Required(Decimal)
    description = Optional(str)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Set&lt;/p&gt;
&lt;p&gt;定义了一对一，一对多，多对多等数据结构&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# 一对一
class User(db.Entity):
    name = Required(str)
    cart = Optional(&quot;Cart&quot;) #必须Optional-Required or Optional-Optional

class Cart(db.Entity):
    user = Required(&quot;User&quot;)
    
# 多对多
class Student(db.Entity):
    name = pny.Required(str)
    courses = pny.Set(&quot;Course&quot;)

class Course(db.Entity):
    name = pny.Required(str)
    semester = pny.Required(int)
    students = pny.Set(Student)
    pny.PrimaryKey(name, semester)      #联合主键

pny.sql_debug(True)      # 显示debug信息(sql语句)
db.generate_mapping(create_tables=True)     # 如果数据库表没有创建表
#-------------------------------------------------------
#一对多
class Artist(database.Entity):
    &quot;&quot;&quot;
    Pony ORM model of the Artist table
    &quot;&quot;&quot;
    name = pny.Required(unicode)
    #被外键关联
    albums = pny.Set(&quot;Album&quot;)

class Album(database.Entity):
    &quot;&quot;&quot;
    Pony ORM model of album table
    &quot;&quot;&quot;
    #外键字段artlist,外键关联表Artist，Artist表必须写Set表示被外键关联
    #这个外键字段默认就是index=True,除非自己指定index=False才不会创建索引，索引名默认为[idx_表名__字段](artist)
    artist = pny.Required(Artist)       #外键字段(数据库显示artist)
    title = pny.Required(unicode)
    release_date = pny.Required(datetime.date)
    publisher = pny.Required(unicode)
    media_type = pny.Required(unicode)

# Compositeindexes(复合索引)
class Example1(db.Entity):
    a = Required(str)
    b = Optional(int)
    composite_index(a, b)
    #也可以使用字符串composite_index(a, 'b')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;属性数据类型&lt;/p&gt;
&lt;p&gt;格式为 ：&lt;/p&gt;
&lt;p&gt;属性名 = 属性类型(数据类型)&lt;/p&gt;
&lt;ul readability=&quot;7&quot;&gt;&lt;li&gt;str&lt;/li&gt;
&lt;li&gt;unicode&lt;/li&gt;
&lt;li&gt;int&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;Decimal&lt;/li&gt;
&lt;li&gt;datetime&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;timedelta&lt;/li&gt;
&lt;li&gt;bool&lt;/li&gt;
&lt;li&gt;buffer ---used for binary data in Python 2 and 3&lt;/li&gt;
&lt;li&gt;bytes ---used for binary data in Python 3&lt;/li&gt;
&lt;li&gt;LongStr ---used for large strings&lt;/li&gt;
&lt;li&gt;LongUnicode ---used for large strings&lt;/li&gt;
&lt;li readability=&quot;17&quot;&gt;
&lt;p&gt;UUID&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;attr1 = Required(str)
# 等价
attr2 = Required(unicode)

attr3 = Required(LongStr)
# 等价
attr4 = Required(LongUnicode)

attr1 = Required(buffer) # Python 2 and 3

attr2 = Required(bytes) # Python 3 only

#字符串长度,不写默认为255
name = Required(str,40)     #VARCHAR(40)

#整数的大小，默认32bit
attr1 = Required(int, size=8)   # 8 bit - TINYINT in MySQL
attr2 = Required(int, size=16)  # 16 bit - SMALLINT in MySQL
attr3 = Required(int, size=24)  # 24 bit - MEDIUMINT in MySQL
attr4 = Required(int, size=32)  # 32 bit - INTEGER in MySQL
attr5 = Required(int, size=64)  # 64 bit - BIGINT in MySQL

#无符号整型
attr1 = Required(int, size=8, unsigned=True) # TINYINT UNSIGNED in MySQL

# 小数和精度
price = Required(Decimal, 10, 2)        #DECIMAL(10,2)

# 时间
dt = Required(datetime,6)

# 其它参数
unique   是否唯一
auto    是否自增
default     默认值
sql_default 
created_at = Required(datetime, sql_default=’CURRENT_TIMESTAMP’)
index   创建索引
index='index_name'  指定索引名称
lazy    延迟加载的属性加载对象
cascade_delete      关联删除对象
column      映射到数据库的列名
columns Set(多对多列名)
table   多对多中间表的表名字
nullable    允许该列为空
py_check    可以指定一个函数，检查数据是否合法和修改数据

class Student(db.Entity): 
    name = Required(str) 
    gpa = Required(float, py_check=lambda val: val &amp;gt;= 0 and val &amp;lt;= 5)&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;实例操作&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# 获取实例

p = Person.get(name=&quot;Person&quot;)   #返回单个实例，如同
Django ORM的get
#------------------------------
# 查询
persons = Person.select()
'''
select并没有连接数据库查询，只是返回一个Query object，调用persons[:]返回所有Person实例
'''

# limit
persons [1:5]

# show
persons.show()

# 生成器表达式查询，然后解析AST树的方式构造SQL语句

select(p for p in Person) 
#和Person.select()一样返回Query object

select((p.id, p.name) for p in Person)[:]

# 带where条件查询
select((p.id, p.name) for p in Person if p.age ==20)[:]

# 分组聚合查询
select((max(p.age)) for p in Person)[:] #[25]

max(p.age for p in Person) #25

select(p.age for p in Person).max() #25
#-----------------------------
# 修改实例
@db_session
def update_persons():
  p = Person.get(id=2)
  p.page = 1000
  commit()
  
# 删除
@db_session
def delete_persons():
    p = Person.get(id=2)
    p.delete()
    commit()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;pony使用还可以使用游标操作(这样就可以写原生sql语句了)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;result = db.execute('''select name from Artist''')
print result.fetchall()&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;类似Django ORM的save函数&lt;/p&gt;
&lt;p&gt;before_insert()&lt;/p&gt;
&lt;p&gt;Is called only for newly created objects before it is inserted into the database.&lt;/p&gt;
&lt;p&gt;before_update()&lt;/p&gt;
&lt;p&gt;Is called for entity instances before updating the instance in the database.&lt;/p&gt;
&lt;p&gt;before_delete()&lt;/p&gt;
&lt;p&gt;Is called before deletion the entity instance in the database.&lt;/p&gt;
&lt;p&gt;after_insert()&lt;/p&gt;
&lt;p&gt;Is called after the row is inserted into the database.&lt;/p&gt;
&lt;p&gt;after_update()&lt;/p&gt;
&lt;p&gt;Is called after the instance updated in the database.&lt;/p&gt;
&lt;p&gt;after_delete()&lt;/p&gt;
&lt;p&gt;Is called after the entity instance is deleted in the database.&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Message(db.Entity):
    title = Required(str)
    content = Required(str)

    def before_insert(self):
        print(&quot;Before insert! title=%s&quot; % self.title)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;http://www.blog.pythonlibrary.org/2014/07/21/python-101-an-intro-to-pony-orm/&quot; class=&quot;uri&quot;&gt;http://www.blog.pythonlibrary.org/2014/07/21/python-101-an-intro-to-pony-orm/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 08 Feb 2018 15:27:00 +0000</pubDate>
<dc:creator>我走的很慢</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liao-lin/p/8433785.html</dc:identifier>
</item>
<item>
<title>小白如何运行Faster RCNN的tensorflow代码 - ToOnE</title>
<link>http://www.cnblogs.com/toone/p/8433581.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/toone/p/8433581.html</guid>
<description>&lt;p&gt;　　刚刚学习faster rcnn目标检测算法，在尝试跑通github上面Xinlei Chen的tensorflow版本的faster rcnn代码时候遇到很多问题（我真是太菜），代码地址如下：&lt;/p&gt;
&lt;p&gt;https://github.com/endernewton/tf-faster-rcnn&lt;/p&gt;

&lt;p&gt;　　代码的README里面说明了，环境要求既有是这个git里面的，还有就是rbg的caffe代码中也有了一些环境。基本上包括：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;python2.7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;CUDA（并行计算库）&amp;gt;=6.0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;cudnn（深度学习库）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;cython&lt;/code&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;opencv-pyt&lt;/code&gt;&lt;span&gt;&lt;code&gt;hon&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;easydict=1.6&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　当然这只是跑通代码的环境，并没有那么苛刻的。&lt;/p&gt;
&lt;h2&gt;1.1 检查环境&lt;/h2&gt;
&lt;p&gt;　　检查环境的目的是为了安装TensorFlow，首先是&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1.1 Linux 内核和发行版&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　需要查看 linux内核和发行版，来确定后续一些软件的安装版本选择。《如何查看LINUX发行版的名称及其版本号》：https://www.qiancheng.me/post/coding/show-linux-issue-version&lt;/p&gt;
&lt;p&gt;　　查看Linux内核&lt;/p&gt;

&lt;p&gt;　　查看Linux发行版&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cat /etc/redhat-release #centos下面的命令
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208164841716-1978396645.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　我用的是 centos，在运行demo期间没发现什么问题，但最好是用Ubutu 14或者16吧&lt;/p&gt;

&lt;h3&gt;1.1.2 检查cuda 和cudnn的版本&lt;/h3&gt;
&lt;p&gt;chen 推荐的是 TensorFlow 的 r1.2 版本，应该是安装r1.2推荐的cuda和cudnn，但是因为我没有服务器的root权限，无法更改cuda和cudnn，所以只能选择一个和本机环境相对应的tensorflow版本了。&lt;/p&gt;
&lt;p&gt;注意这里如果不安装匹配的版本，可能会出现cudnn库找不到的情况，（别问我怎么知道的），https://stackoverflow.com/questions/42013316/after-building-tensorflow-from-source-seeing-libcudart-so-and-libcudnn-errors，如果有root权限的，最好是装r1.2版本的，当然要查好r1.2支持的cuda和cudnn，方法也在下面。&lt;/p&gt;
&lt;p&gt;查看cuda的版本：http://blog.csdn.net/zhangjunhit/article/details/76532196&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cat /usr/local/cuda/version.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看cudnn版本：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208165517388-1854114946.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　我的cuda=8，cudnn=6&lt;/p&gt;
&lt;p&gt;　　到tensorflow 的官网上查对应的TF版本：https://www.tensorflow.org/install/install_sources#common_installation_problems&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208165651670-1487329580.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果没有GPU的就安装cpu版本，README里面说cpu也是能运行的，我没试。&lt;/p&gt;
&lt;h2&gt;1.2 安装Anaconda 和TensorFlow&lt;/h2&gt;
&lt;p&gt;　　tensorflow r1.4的安装教程：https://www.tensorflow.org/versions/r1.4/install/install_linux?hl=zh-cn，我是按照Anaconda的方法弄的，比较简单。&lt;/p&gt;
&lt;p&gt;　　因为我的系统上面安装了anaconda，之前装了python3。为了方便，直接用anaconda新开了一个环境，装了python2.7。教程：https://www.jianshu.com/p/d2e15200ee9b&lt;/p&gt;
&lt;p&gt;　　创建环境：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
conda create -n tensorflow python=2.7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　进入环境：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
source activate tensorflow 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208165253545-1667418273.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　前面这样显示就对了（我的名字叫python27，你的应该是tensorflow）&lt;/p&gt;
&lt;p&gt;　　使用pip安装tensorflow：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;strong&gt;pip install --ignore-installed --upgrade&lt;/strong&gt; &lt;em&gt;tfBinaryURL&lt;/em&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　注意这里的 &lt;em&gt;tfBinaryURL 是 &lt;a href=&quot;https://www.tensorflow.org/versions/r1.4/install/install_linux?hl=zh-cn#the_url_of_the_tensorflow_python_package&quot;&gt;URL of the TensorFlow Python package&lt;/a&gt; &lt;/em&gt;，但这里面都是谷歌的镜像，要是没挂科学上网的话应该是访问不到的，我是用的阿里的镜像：http://mirrors.aliyun.com/pypi/simple，自己找合适的版本，我用的是http://mirrors.aliyun.com/pypi/packages/68/b4/8731e144a68a6044b8eba47f51f0a862c696b0c016c8512ca2aa3916f62a/tensorflow_gpu-1.4.0rc1-cp27-cp27mu-manylinux1_x86_64.whl。&lt;/p&gt;
&lt;p&gt;　　更多镜像在：https://www.jianshu.com/p/502638407add&lt;/p&gt;
&lt;p&gt;　　输入上面的命令之后就成功了，运行了一下官方的测试：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208222725513-1178234338.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　成功输出：Hello，TensorFlow！&lt;/p&gt;
&lt;h2&gt;1.3 安装其他依赖&lt;/h2&gt;
&lt;p&gt;　　保持在tensorflow这个环境中，继续用pip安装&lt;code&gt;cython&lt;/code&gt;, &lt;code&gt;opencv-python&lt;/code&gt;, &lt;code&gt;easydict这三个库。&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
pip install cython
pip install opencv-python
pip install easydict==1.6
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208171336795-838178540.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　链接cython模块的时候出现了一个警告，具体什么原因我也不太清楚，就暂时没有管它，最后也是能运行demo的。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;43&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cc1plus: 警告：command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [默认启用]
In file included from /home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/numpy/core/include/numpy/ndarraytypes.h:1816:0,
                 from /home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/numpy/core/include/numpy/ndarrayobject.h:18,
                 from /home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                 from nms/gpu_nms.cpp:346:
/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: 警告：#warning &quot;Using deprecated NumPy API, disable it by &quot; &quot;#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION&quot; [-Wcpp]
 #warning &quot;Using deprecated NumPy API, disable it by &quot; \
  ^
g++ -pthread -shared -L/home/luoguiyang/env/anaconda3/envs/python27/lib -Wl,-rpath=/home/luoguiyang/env/anaconda3/envs/python27/lib,--no-as-needed build/temp.linux-x86_64-2.7/nms/nms_kernel.o build/temp.linux-x86_64-2.7/nms/gpu_nms.o -L/usr/local/cuda/lib64 -L/home/luoguiyang/env/anaconda3/envs/python27/lib -Wl,-R/usr/local/cuda/lib64 -lcudart -lpython2.7 -o /home/luoguiyang/projects/3dcnn/branch/tf-faster-rcnn/lib/nms/gpu_nms.so
rm -rf build
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 　　到这一步，按照README里面的提示一步一步走就应该没问题了（如果在本地测试的话）。&lt;/p&gt;
&lt;p&gt;　　1、clone github的仓库&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
git clone https://github.com/endernewton/tf-faster-rcnn.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2、更新GPU的架构配置，到setup.py中找到 -arch 这个参数，改成自己的GPU架构就行了&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cd tf-faster-rcnn/lib
# Change the GPU architecture (-arch) if necessary
vim setup.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　对应的配置如右图，github里面可能会对一些其他的显卡更新参数。　&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208223549716-1178912485.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　3、链接cython 模块，注意这也是在上一步那个lib 文件夹中进行的&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
make clean
make
cd ..
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　4、安装 Python COCO API，这是为了使用COCO数据库&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
cd data
git clone https://github.com/pdollar/coco.git
cd coco/PythonAPI
make
cd ../../..
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　1、下载预训练模型&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
# Resnet101 for voc pre-trained on 07+12 set
./data/scripts/fetch_faster_rcnn_models.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　README里面也说了，下载链接可能会失效，sh文件里面给了一个备用链接也是不管用的，但是readme里面还给了备份的Google Drive的地址，我把其中的要用的模型 voc_0712_80k-110k.tgz 这个文件手动下载了（百度云备份：https://pan.baidu.com/s/1kWkF3fT），下载之后放到 data文件夹中就行，（但是md5sum校验值对不上，估计是下载地址不一样的问题，也暂时忽略吧），运行以下命令解压：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
tar xvf voc_0712_80k-110k.tgz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2、建立预训练模型的软连接&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
NET=res101
TRAIN_IMDB=voc_2007_trainval+voc_2012_trainval
mkdir -p output/${NET}/${TRAIN_IMDB}
cd output/${NET}/${TRAIN_IMDB}
ln -s ../../../data/voc_2007_trainval+voc_2012_trainval ./default
cd ../../..
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　3、运行以下代码就能测试demo了，主义是在tf-faster-rcnn 这个根文件夹中运行&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
# at repository root
GPU_ID=0
CUDA_VISIBLE_DEVICES=${GPU_ID} ./tools/demo.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这里还有一个问题，demo里面一个文件 import matlibplot.pyplot ，这时候如果是用终端连接的服务器的话，可能会出现DISPLAY 变量未设置这个bug，echo $DISPLAY 命令这时候肯定是什么不显示的。错误如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;64&quot;&gt;
&lt;pre class=&quot;brush:bash;gutter:true;&quot;&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Demo for data/demo/000456.jpg
Detection took 1.316s for 300 object proposals
Traceback (most recent call last):
  File &quot;./tools/demo.py&quot;, line 153, in &amp;lt;module&amp;gt;
    demo(sess, net, im_name)
  File &quot;./tools/demo.py&quot;, line 100, in demo
    vis_detections(im, cls, dets, thresh=CONF_THRESH)
  File &quot;./tools/demo.py&quot;, line 50, in vis_detections
    fig, ax = plt.subplots(figsize=(12, 12))
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/pyplot.py&quot;, line 1177, in subplots
    fig = figure(**fig_kw)
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/pyplot.py&quot;, line 527, in figure
    **kwargs)
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/backends/backend_qt4agg.py&quot;, line 46, in new_figure_manager
    return new_figure_manager_given_figure(num, thisFig)
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/backends/backend_qt4agg.py&quot;, line 53, in new_figure_manager_given_figure
    canvas = FigureCanvasQTAgg(figure)
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/backends/backend_qt4agg.py&quot;, line 76, in __init__
    FigureCanvasQT.__init__(self, figure)
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/backends/backend_qt4.py&quot;, line 68, in __init__
    _create_qApp()
  File &quot;/home/luoguiyang/env/anaconda3/envs/python27/lib/python2.7/site-packages/matplotlib/backends/backend_qt5.py&quot;, line 138, in _create_qApp
    raise RuntimeError('Invalid DISPLAY variable')
&lt;span&gt;RuntimeError: Invalid DISPLAY variable
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这是因为matplotlib 输出的图像没有输出出来，有两种方法：&lt;/p&gt;
&lt;p&gt;　　解决方法（1）设置X11转发，具体方法Google一下，因为我的服务器没有配置Xauth，我也没有root权限，所以对我不适用了&lt;/p&gt;
&lt;p&gt;　　解决方法（2）改代码，不要让图像show了，而是把图像保存起来。错误里面可以看出引入matplotlib 的是 ./tools/demo.py 这个文件，教程：http://rootlu.com/blog/2017/10/08/MatplotlibInLinux.html/&lt;/p&gt;
&lt;p&gt;　　　　更改了两处&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208225522170-1844950870.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208225503029-98879402.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 　　改完之后，图片就保存在 tf-faster-rcnn 这里了，下载下来是这样的（没仔细改代码，只保存了一幅）&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2017.cnblogs.com/blog/737444/201802/737444-20180208225733482-466871475.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　基础的demo就可以运行了。后面调试的部分研究明白了再补上。&lt;/p&gt;

</description>
<pubDate>Thu, 08 Feb 2018 14:59:00 +0000</pubDate>
<dc:creator>ToOnE</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/toone/p/8433581.html</dc:identifier>
</item>
</channel>
</rss>