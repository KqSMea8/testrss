<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>ASP.NET Core 处理 404 Not Found - Sweet-Tang</title>
<link>http://www.cnblogs.com/tdfblog/p/handling-404-not-found-in-asp-net-core.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tdfblog/p/handling-404-not-found-in-asp-net-core.html</guid>
<description>&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;在没有修改任何配置的情况下，这是用户使用 Chrome 访问不存在的URL时会看到的内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/162090/201710/162090-20171014121949418-1077022313.png&quot; alt=&quot;Chrome Default 404 Screen&quot;/&gt;&lt;/p&gt;
&lt;p&gt;幸运的是，处理错误状态代码非常简单，我们将在下面介绍三种技术。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;在以前的ASP.NET MVC版本中，主要在 &lt;em&gt;web.config&lt;/em&gt; 中处理404错误的。&lt;/p&gt;
&lt;p&gt;您可能记得在 &lt;em&gt;&amp;lt;customErrors&amp;gt;&lt;/em&gt; 节点中配置ASP.NET管道处理404错误，以及在低版本的IIS中通过 &lt;em&gt;&amp;lt;httpErrors&amp;gt;&lt;/em&gt; 节点处理 404错误。好像有点混乱。&lt;/p&gt;
&lt;p&gt;在.Net Core中，情况就不同了，没有必要使用XML配置（尽管如果您是通过IIS代理，您仍然可以在web.config中使用 &lt;em&gt;httpErrors&lt;/em&gt;，并且您真的想这样吗:-)）。&lt;/p&gt;
&lt;p&gt;在处理 &lt;strong&gt;not-found&lt;/strong&gt; 错误时，我们需要处理两种不同的情况。&lt;/p&gt;
&lt;p&gt;URL与任何路由不匹配的情况。在这种情况下，如果我们无法确定用户正在访问什么，我们需要返回一个通用的未找到的页面。有两种常见的处理方法，但首先我们将讨论第二种情况。URL与路由匹配的情况，但是一个或多个参数无效，我们可以用自定义视图来解决这个问题。&lt;/p&gt;
&lt;h2 id=&quot;自定义视图&quot;&gt;自定义视图&lt;/h2&gt;
&lt;p&gt;这种情况的一个例子是具有无效或过期ID的产品页面。在这里，我们知道用户正在查看产品，而不是返回通用错误，我们可以更友好的页面，返回自定义未找到产品的的页面。这仍然需要返回404状态代码，但是使用不通用的页面，同时也可以向用户显示类似或受欢迎的产品。&lt;/p&gt;
&lt;p&gt;处理这些情况是非常琐碎，我们需要做的是在返回我们的自定义视图之前设置状态代码：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public async Task&amp;lt;IActionResult&amp;gt; GetProduct(int id)
    {
        var viewModel = await _db.Get&amp;lt;Product,GetProductViewModel&amp;gt;(id);
    
        if (viewModel == null)
        {
            Response.StatusCode = 404;
            return View(&quot;ProductNotFound&quot;);
        }
    
        return View(viewModel);
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当然，您可能更喜欢将其包装成自定义ActionResult：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public class NotFoundViewResult : ViewResult
    {
        public NotFoundViewResult(string viewName)            
        {
            ViewName = viewName;
            StatusCode = (int)HttpStatusCode.NotFound;
        }
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这简化了我们的Action：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public async Task&amp;lt;IActionResult&amp;gt; GetProduct(int id)
    {
        var viewModel = await _db.Get&amp;lt;Product,GetProductViewModel&amp;gt;(id);
    
        if (viewModel == null)
        {
            return new NotFoundViewResult(&quot;ProductNotFound&quot;);
        }
    
        return View(viewModel);
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这个简单的技术涵盖了特定的404页，现在来看看通用的404错误，我们无法弄清楚用户想要查看的内容。&lt;/p&gt;
&lt;h2 id=&quot;通配路由&quot;&gt;通配路由&lt;/h2&gt;
&lt;p&gt;在先前版本的MVC，创建一个通配符路由来处理，在.NET Core中，也可以使用相同的方式。这个方式是，您有一个通配符路由，它会接收任何其它路由尚未处理的URL。使用特性路由，方式如下：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    [Route(&quot;{*url}&quot;, Order = 999)]
    public IActionResult CatchAll()
    {
        Response.StatusCode = 404;
        return View();
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;重要的是指定顺序，以确保其它路由优先。&lt;/p&gt;
&lt;p&gt;一个通配符路由的方式非常不错，但它不是.NET Core中的首选。虽然全部路由将处理404，但下一个方式将处理任何非成功状态代码，以便您可以执行以下Action（可能在生产中的Action过滤器中）：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    public async Task&amp;lt;IActionResult&amp;gt; GetProduct(int id)
    {
        ...
    
        if (RequiresThrottling())
        {
            return new StatusCodeResult(429)
        }
    
        if (!HasPermission(id))
        {
            return Forbid();
        }
    
        ...
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;statuscodepageswithreexecute方法-中件间&quot;&gt;StatusCodePagesWithReExecute方法 中件间&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;UseStatusCodePagesWithReExecute&lt;/code&gt;使用了一个非常聪明的中间件(&lt;code&gt;StatusCodePagesMiddleware&lt;/code&gt;)，在未输出响应前，它能处理非成功状态代码。这意味着如果您使用上面详细描述的自定义视图技术，则404状态代码将不会被中间件处理（这正是我们想要的）。&lt;/p&gt;
&lt;p&gt;当从内部中间件组件返回错误代码（如404）时，&lt;code&gt;UseStatusCodePagesWithReExecute&lt;/code&gt;允许您执行另一个控制器Action来处理状态代码。&lt;/p&gt;
&lt;p&gt;您可以在&lt;code&gt;startup.cs&lt;/code&gt;中使用一行代码将其添加到管道中：&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    app.UseStatusCodePagesWithReExecute(&quot;/error/{0}&quot;);
    ...
    app.UseMvc();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;中间件定义的顺序很重要，您需要确保在可能返回错误代码的任何中间件（如MVC中间件）之前注册&lt;code&gt;StatusCodeWithReExecute&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;您可以指定一个固定路径来执行或使用状态代码值的占位符，如上所述。&lt;/p&gt;
&lt;p&gt;您还可以指向静态页面（假设您已经具有&lt;code&gt;StaticFileMiddleware&lt;/code&gt;中间件）和控制器Action。&lt;/p&gt;
&lt;p&gt;在这个例子中，我们有一个单独的Action处理404。任何其它非成功状态代码，使用 &lt;code&gt;Error&lt;/code&gt; Action。&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;    [Route(&quot;error/404&quot;)]
    public IActionResult Error404()
    {
        return View();
    }
    
    [Route(&quot;error/{code:int}&quot;)]
    public IActionResult Error(int code)
    {
        // handle different codes or just return the default error view
        return View();
    }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;显然，您可以根据您的需要量身定制。例如，如果您正在使用上一节所示的请求限制，那么您可以返回一个解释为什么请求失败的429页面。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;处理404页面的具体问题最好用自定义视图来处理，并设置状态代码（直接或通过自定义操作结果）。&lt;/p&gt;
&lt;p&gt;通过使用&lt;code&gt;StatusCodePagesMiddleware&lt;/code&gt;中间件，可以非常容易地处理通用404错误（或实际上是任何非成功状态代码）。一般来说，这两种技术是在ASP.NET Core中处理非成功HTTP状态代码的首选方法。&lt;/p&gt;
&lt;blockquote readability=&quot;3.2619047619048&quot;&gt;
&lt;p&gt;原文：《Handling 404 Not Found in Asp.Net Core》&lt;a href=&quot;https://www.devtrends.co.uk/blog/handling-404-not-found-in-asp.net-core&quot; class=&quot;uri&quot;&gt;https://www.devtrends.co.uk/blog/handling-404-not-found-in-asp.net-core&lt;/a&gt;&lt;br/&gt;翻译：&lt;a href=&quot;http://www.cnblogs.com/tdfblog&quot;&gt;Sweet Tang&lt;/a&gt;&lt;br/&gt;本文地址：&lt;a href=&quot;http://www.cnblogs.com/tdfblog/p/handling-404-not-found-in-asp-net-core.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/tdfblog/p/handling-404-not-found-in-asp-net-core.html&lt;/a&gt;&lt;br/&gt;欢迎转载，请在明显位置给出出处及链接。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Sun, 15 Oct 2017 23:45:00 +0000</pubDate>
<dc:creator>Sweet-Tang</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tdfblog/p/handling-404-not-found-in-asp-net-core.html</dc:identifier>
</item>
<item>
<title>Weave Scope 多主机监控 - 每天5分钟玩转 Docker 容器技术（81） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/7674011.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/7674011.html</guid>
<description>&lt;p&gt;&lt;span&gt;除了监控容器，Weave Scope 还可以监控 Docker Host。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;点击顶部 &lt;/span&gt;&lt;code&gt;&lt;span&gt;HOSTS&lt;/span&gt;&lt;/code&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt; 菜单项，地图将显示当前 host。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835413068540.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835413068540.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;与容器类似，点击该 host 图标将显示详细信息。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835580012913.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835580012913.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;host 当前的资源使用情况和历史曲线一览无余。除此之外也能很方便地查看 host 上运行的进程和容器列表，点击容器名字还可以打开此容器的信息页面。&lt;/p&gt;
&lt;p&gt;host 页面上部有一个按钮，点击可直接打开 host 的 shell 窗口，这个远程管理功能真的很贴心。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835530014357.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835530014357.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;-&quot;&gt;&lt;strong&gt;&lt;span&gt;多主机监控&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;前面我们已经领略了 Weave Scope 的丰富功能和友好的操作界面。不过它还有一个重要功能：多主机监控。&lt;/p&gt;
&lt;p&gt;真正的部署环境都不可能只有一个 host，如果能在一个界面上监控整个容器环境，那绝对是件非常有效率的事情。下面我们就来实践这个功能。&lt;/p&gt;
&lt;p&gt;两个 Docker Host:&lt;/p&gt;
&lt;p&gt;ubuntu: 192.168.56.102&lt;br/&gt;ubuntu2: 192.168.56.103&lt;/p&gt;
&lt;p&gt;在两个 host 上都执行如下命令：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;scope launch 192.168.56.102 192.168.56.103&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这样，无论访问 http://192.168.56.102:4040 还是 http://192.168.56.103:4040，都能监控到两个 host。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835800032019.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835800032019.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;code&gt;&lt;span&gt;CONTAINERS&lt;/span&gt;&lt;/code&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;菜单项，将显示部署环境中所有的容器。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836142082326.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836142082326.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;容器图标下面标明了所在的 host。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836007079616.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836007079616.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果部署的容器数量太多（很常见），Weave Scope 还提供了强悍的搜索功能。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835956089202.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068835956089202.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;输入关键词&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;code&gt;&lt;span&gt;sysd&lt;/span&gt;&lt;/code&gt;，立刻会在地图中定位到容器&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;code&gt;&lt;span&gt;sysdig&lt;/span&gt;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836452074897.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836452074897.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Weave Scope 还支持逻辑条件查询，比如输入&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;code&gt;&lt;span&gt;cpu &amp;gt; 2&lt;/span&gt;&lt;/code&gt;，立刻回找出 CPU 利用率高于 2% 的容器。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836904032729.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836904032729.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;更多过滤方法可点击搜索框下面的&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;&lt;img src=&quot;http://www.cnblogs.com/Users/wanglei/百度云同步盘/容器/images/393.png&quot; alt=&quot;&quot;/&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836653029728.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836653029728.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836637076668.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836637076668.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面是参考帮助以及示例。&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836983036909.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171015-1508068836983036909.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Weave Scope 就讨论到这里，更多的功能，大家可以自己去发现。&lt;/p&gt;
&lt;p&gt;下一节我们学习 cAdvisor。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;书籍：&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;1.《每天5分钟玩转Docker容器技术》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/16936307278.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; src=&quot;https://image.ipaiban.com/upload-ueditor-image-20171010-1507627732322012171.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 23:35:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/7674011.html</dc:identifier>
</item>
<item>
<title>读Zepto源码之Stack模块 - 对角另一面</title>
<link>http://www.cnblogs.com/hefty/p/7675374.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hefty/p/7675374.html</guid>
<description>&lt;p&gt;&lt;code&gt;Stack&lt;/code&gt; 模块为 &lt;code&gt;Zepto&lt;/code&gt; 添加了 &lt;code&gt;addSelf&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;读 Zepto 源码系列文章已经放到了github上，欢迎star: &lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto&quot;&gt;reading-zepto&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;源码版本&quot;&gt;源码版本&lt;/h2&gt;
&lt;p&gt;本文阅读的源码为 &lt;a href=&quot;https://github.com/madrobby/zepto/tree/v1.2.0&quot;&gt;zepto1.2.0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;改写原有的方法&quot;&gt;改写原有的方法&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;st&quot;&gt;'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;','&lt;/span&gt;).&lt;span class=&quot;at&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(property) &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; fn &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;[property]
  &lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fn&lt;/span&gt;[property] &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; ret &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;apply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; arguments)
    &lt;span class=&quot;va&quot;&gt;ret&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;prevObject&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;
    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; ret
  &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Stack&lt;/code&gt; 模块改写了以上这些方法，这些方法在调用的时候，会为返回的结果 &lt;code&gt;ret&lt;/code&gt; 添加 &lt;code&gt;prevObject&lt;/code&gt; 的属性，用来保存原来的集合。&lt;/p&gt;
&lt;h2 id=&quot;addself&quot;&gt;.addSelf()&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;andSelf&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;prevObject&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;())
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;addSelf&lt;/code&gt; 方法是在链式调用以上方法的时候，将原来的集合添加到当前的集合中。&lt;code&gt;add&lt;/code&gt; 方法的分析可以看《&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BCallbacks%E6%A8%A1%E5%9D%97.md#add&quot;&gt;读Zepto源码之Callbacks模块&lt;/a&gt;》。&lt;/p&gt;
&lt;h2 id=&quot;end&quot;&gt;.end()&lt;/h2&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;&lt;span class=&quot;va&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;fn&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;() &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;prevObject&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;$&lt;/span&gt;()
&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;end&lt;/code&gt; 方法是将集合还原到前一个状态，其实就是将上一个集合返回。&lt;/p&gt;
&lt;h2 id=&quot;gitbook&quot;&gt;GitBook&lt;/h2&gt;
&lt;p&gt;《&lt;a href=&quot;https://yeyuqiudeng.gitbooks.io/reading-zepto/content/&quot;&gt;reading-zepto&lt;/a&gt;》&lt;/p&gt;
&lt;h2 id=&quot;系列文章&quot;&gt;系列文章&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.md&quot;&gt;读Zepto源码之代码结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E5%86%85%E9%83%A8%E6%96%B9%E6%B3%95.md&quot;&gt;读Zepto源码之内部方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0.md&quot;&gt;读Zepto源码之工具函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E7%A5%9E%E5%A5%87%E7%9A%84%24.md&quot;&gt;读Zepto源码之神奇的$&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E9%9B%86%E5%90%88%E6%93%8D%E4%BD%9C.md&quot;&gt;读Zepto源码之集合操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E9%9B%86%E5%90%88%E5%85%83%E7%B4%A0%E6%9F%A5%E6%89%BE.md&quot;&gt;读Zepto源码之集合元素查找&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E6%93%8D%E4%BD%9CDOM.md&quot;&gt;读Zepto源码之操作DOM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C.md&quot;&gt;读Zepto源码之样式操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8B%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C.md&quot;&gt;读Zepto源码之属性操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BEvent%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Event模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BIE%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之IE模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BCallbacks%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Callbacks模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BDeferred%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Deferred模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BAjax%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Ajax模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8Bassets%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Assets模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BSelector%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Selector模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BTouch%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Touch模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BGesture%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Gesture模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BIOS3%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之IOS3模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8BFx%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之Fx模块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeyuqiudeng/reading-zepto/blob/master/src/%E8%AF%BBZepto%E6%BA%90%E7%A0%81%E4%B9%8Bfx_methods%E6%A8%A1%E5%9D%97.md&quot;&gt;读Zepto源码之fx_methods模块&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;附文&quot;&gt;附文&lt;/h3&gt;
&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际 (CC BY-NC-ND 4.0)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：对角另一面&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 23:30:00 +0000</pubDate>
<dc:creator>对角另一面</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hefty/p/7675374.html</dc:identifier>
</item>
<item>
<title>开源API集成测试工具 Hitchhiker v0.2更新 - 压力测试 - 布鲁克石</title>
<link>http://www.cnblogs.com/brookshi/p/7671057.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/brookshi/p/7671057.html</guid>
<description>&lt;p&gt;Hitchhiker 是一款开源的 Restful Api 集成测试工具，支持Schedule, 数据对比，压力测试，可以轻松部署到本地，和你的team成员一起管理Api。&lt;/p&gt;
&lt;p&gt;详细介绍请看： &lt;a href=&quot;http://www.cnblogs.com/brookshi/p/7440663.html&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/brookshi/p/7440663.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在线体验： &lt;a href=&quot;http://www.hitchhiker-api.com/&quot; class=&quot;uri&quot;&gt;http://www.hitchhiker-api.com/&lt;/a&gt;， 可以用 &lt;code&gt;try without login&lt;/code&gt; 来免登录使用 （在线演示不支持压力测试，虚拟机单核的，撑不住）。&lt;/p&gt;
&lt;h2 id=&quot;这次发布的算是一个大版本主要增加一个重磅功能---压力测试&quot;&gt;这次发布的算是一个大版本，主要增加一个重磅功能 - 压力测试：&lt;/h2&gt;

&lt;p&gt;双11快到了，经常会有整点秒杀的活动，秒杀就是一个典型的压力场景，所以建了一个简单的Case来表现这种场景，来展示Hitchhiker压力测试功能：&lt;br/&gt;&lt;img src=&quot;https://raw.githubusercontent.com/brookshi/images/master/Hitchhiker/stresstest.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Hitchhiker使用一个基于Golang的分布式压力节点，这是一个单独的项目：&lt;a href=&quot;https://github.com/brookshi/Hitchhiker-Node&quot;&gt;Hitchhiker-Node&lt;/a&gt;。得益于Golang的交叉编译，轻松跨平台生成文件，所以只有一个可执行文件和一个配置文件，没有环境依赖，直接执行。&lt;/p&gt;
&lt;p&gt;使用时在&lt;a href=&quot;https://github.com/brookshi/Hitchhiker-Node/releases/tag/v0.1&quot;&gt;release页面&lt;/a&gt;先选择对应平台的zip文件下载下来，解压后会有两个文件，一个可执行文件和一个配置文件config.json，打开配置文件，把&lt;code&gt;Address&lt;/code&gt;的值从localhost改为部署Hitchhiker机器的ip，然后再执行Hitchhiker-Node文件，这样就弄好了一个压力点。&lt;/p&gt;
&lt;p&gt;如果想压出很大的请求就可以考虑部署到多台机器上，Hitchhiker会自动根据机器的CPU核数来分配任务，当然，一般情况下直接部署到Hitchhiker同一台机器就够用了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/brookshi/images/master/Hitchhiker/stress_config.PNG&quot;/&gt;&lt;br/&gt;压力测试用的也是&lt;code&gt;Collection&lt;/code&gt;的&lt;code&gt;Request&lt;/code&gt;，可以选择性的挑出合适的&lt;code&gt;Request&lt;/code&gt;用来做Case，压力测试的参数有：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;Repeat: 运行整套请求的次数&lt;/li&gt;
&lt;li&gt;Concurrency: 并发个数&lt;/li&gt;
&lt;li&gt;QPS: 1秒内限制单个节点请求的个数，默认为0，即没有限制&lt;/li&gt;
&lt;li&gt;Timeout: 请求的超时时间设置，单位为秒，默认为0，即没有超时设置&lt;/li&gt;
&lt;li&gt;Keeplive: 设置请求是否使用Keeplive&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;运行压力测试任务时会实时显示运行状态，包括节点的状态（闪烁表示正在工作），当前任务及任务的数量，下方有三个图表，分别表示&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;当前的运行进度，包括完成的数量及TPS&lt;/li&gt;
&lt;li&gt;各个&lt;code&gt;Request&lt;/code&gt;的请求消耗时间，包括 DNS, Connect, Request, Min, Max 这五个&lt;/li&gt;
&lt;li&gt;请求失败的状态，包括 No Response, Server Error(500), Test失败 这三种情况&lt;/li&gt;
&lt;/ol&gt;
&lt;ol readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;源码部署时支持改端口，之前固定用的8080，要改需要改js文件，现在只需在部署文件时改就好了。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;改正Schedule空跑时的异常。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;压力测试在国庆后总算做出来，后来又花了一些时间来测试，0.2这个版本算是告一段落。&lt;br/&gt;接下来版本计划要改下，涉及新功能的都是大版本，bug是小版本。&lt;br/&gt;下个模块功能是支持API文档，希望能是一个自定义的，所见即所得，支持导出常用格式的API文档系统。&lt;br/&gt;小功能和bug会持续改进。&lt;/p&gt;
&lt;p&gt;Github: &lt;strong&gt;&lt;a href=&quot;https://github.com/brookshi/Hitchhiker&quot; class=&quot;uri&quot;&gt;https://github.com/brookshi/Hitchhiker&lt;/a&gt;&lt;/strong&gt;， 觉得不错的话麻烦 &lt;strong&gt;Star&lt;/strong&gt; 支持下，谢谢。&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 23:30:00 +0000</pubDate>
<dc:creator>布鲁克石</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/brookshi/p/7671057.html</dc:identifier>
</item>
<item>
<title>SSM框架整合项目 ：租房管理系统 - 谁将新樽辞旧月，今月曾经照古人</title>
<link>http://www.cnblogs.com/jiangwz/p/7673738.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jiangwz/p/7673738.html</guid>
<description>&lt;p&gt; 使用ssm框架整合，oracle数据库&lt;/p&gt;
&lt;p&gt;框架：&lt;/p&gt;
&lt;p&gt;Spring&lt;/p&gt;
&lt;p&gt;SpringMVC&lt;/p&gt;
&lt;p&gt;MyBatis&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1176316/201710/1176316-20171015191443949-1378954782.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;导包:&lt;/p&gt;
&lt;p&gt;1, spring&lt;/p&gt;
&lt;p&gt;2, MyBatis&lt;/p&gt;
&lt;p&gt;3, mybatis-spring&lt;/p&gt;
&lt;p&gt;4, fastjson&lt;/p&gt;
&lt;p&gt;5, aspectweaver----AspectJ框架&lt;/p&gt;
&lt;p&gt;6, log4j-----打印日志信息&lt;/p&gt;
&lt;p&gt;7, ojdbc6.jar&lt;/p&gt;
&lt;p&gt;8, jstl.jar, standard.jar----标准标签库&lt;/p&gt;
&lt;p&gt;9, commons-logging-1.2.jar&lt;/p&gt;
&lt;p&gt;10,……&lt;/p&gt;
&lt;p&gt;项目结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1176316/201710/1176316-20171015212103105-713332189.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置文件同前面：http://www.cnblogs.com/jiangwz/p/7674275.html&lt;/p&gt;
&lt;p&gt;项目代码：&lt;/p&gt;
&lt;p&gt;model：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.hanqi.model;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; House {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer id;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String keyword;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String area;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer squaremeter;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer rent;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String renttype;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String housetype;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; House(Integer id, String keyword, String area, Integer squaremeter, Integer rent, String renttype,
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;            String housetype) {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.keyword =&lt;span&gt; keyword;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.area =&lt;span&gt; area;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.squaremeter =&lt;span&gt; squaremeter;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.rent =&lt;span&gt; rent;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.renttype =&lt;span&gt; renttype;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.housetype =&lt;span&gt; housetype;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; House() {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;super&lt;/span&gt;&lt;span&gt;();
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated constructor stub&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; 
&lt;span&gt;30&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getId() {
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; 
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setId(Integer id) {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.id =&lt;span&gt; id;
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; 
&lt;span&gt;38&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getKeyword() {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; keyword;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setKeyword(String keyword) {
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.keyword =&lt;span&gt; keyword;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getArea() {
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; area;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; 
&lt;span&gt;50&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setArea(String area) {
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.area =&lt;span&gt; area;
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; 
&lt;span&gt;54&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getSquaremeter() {
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; squaremeter;
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; 
&lt;span&gt;58&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setSquaremeter(Integer squaremeter) {
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.squaremeter =&lt;span&gt; squaremeter;
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; 
&lt;span&gt;62&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; Integer getRent() {
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; rent;
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; 
&lt;span&gt;66&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setRent(Integer rent) {
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.rent =&lt;span&gt; rent;
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getRenttype() {
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; renttype;
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt; 
&lt;span&gt;74&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setRenttype(String renttype) {
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.renttype =&lt;span&gt; renttype;
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; 
&lt;span&gt;78&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String getHousetype() {
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; housetype;
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; 
&lt;span&gt;82&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; setHousetype(String housetype) {
&lt;/span&gt;&lt;span&gt;83&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.housetype =&lt;span&gt; housetype;
&lt;/span&gt;&lt;span&gt;84&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt; 
&lt;span&gt;86&lt;/span&gt; &lt;span&gt;    @Override
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String toString() {
&lt;/span&gt;&lt;span&gt;88&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;House [id=&quot; + id + &quot;, keyword=&quot; + keyword + &quot;, area=&quot; + area + &quot;, SQUAREMETER=&quot; +&lt;span&gt; squaremeter
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt;                 + &quot;, rent=&quot; + rent + &quot;, renttype=&quot; + renttype + &quot;, housetype=&quot; + housetype + &quot;]&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;90&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;91&lt;/span&gt; 
&lt;span&gt;92&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;dao层：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.hanqi.dao;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.hanqi.model.House;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; HouseDao {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt;     List&amp;lt;House&amp;gt;&lt;span&gt; selectAll();
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; inserthouse(House house);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; delhouse(Integer id);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; updatehouse(House house);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 
&lt;span&gt;17&lt;/span&gt;     List&amp;lt;House&amp;gt;&lt;span&gt; selectinfo(House house);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;dao层实现方法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;com.hanqi.dao.HouseDao&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectAll&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;House&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        select t.*from TABLE_HOUSE t
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;insert &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;inserthouse&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;House&quot;&lt;/span&gt;&lt;span&gt; useGeneratedKeys&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt; keyProperty&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; keyColumn&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;        insert into TABLE_HOUSE values(test1.nextval,#{keyword},#{area},#{squaremeter},#{rent},#{renttype},#{housetype})
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;     
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;delhouse&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;Map&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        delete TABLE_HOUSE t where t.id=#{id}
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;     
&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;update &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updatehouse&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;Map&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        update TABLE_HOUSE t set t.keyword=#{keyword},t.area=#{area},t.squaremeter=#{squaremeter},t.rent=#{rent},t.renttype=#{renttype},t.housetype=#{housetype} where t.id=#{id}
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;update&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;selectinfo&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;House&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;House&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        select t.* from TABLE_HOUSE t
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;keyword!=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;                and t.keyword like #{keyword}
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;area!=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt; &lt;span&gt;                and t.area=#{area}
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;renttype!=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;                and t.renttype in #{renttype}
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;housetype!=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt; &lt;span&gt;                and t.housetype=#{housetype}
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;         
&lt;span&gt;40&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;controller控制器：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.hanqi.controller;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.beans.factory.annotation.Autowired;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.stereotype.Controller;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.ui.Model;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.RequestMapping;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.ResponseBody;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.bind.annotation.SessionAttributes;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.web.servlet.ModelAndView;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.alibaba.fastjson.JSONObject;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.hanqi.dao.HouseDao;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.hanqi.model.House;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;@Controller
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; @SessionAttributes(&quot;currentUser&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; @RequestMapping(&quot;/house&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; HouseController {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt; &lt;span&gt;    @Autowired
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt;&lt;span&gt; HouseDao houseDao;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     
&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;     @RequestMapping(&quot;/selectAll&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; JSONObject selectAll() {
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         JSONObject jo = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; JSONObject();
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         List&amp;lt;House&amp;gt; list =&lt;span&gt; houseDao.selectAll();
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         jo.put(&quot;total&quot;&lt;span&gt;, list.size());
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;         jo.put(&quot;rows&quot;&lt;span&gt;, list);
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         
&lt;span&gt;34&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; jo;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     @RequestMapping(&quot;/selectinfo&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView  selectinfo(House house){
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         
&lt;span&gt;41&lt;/span&gt;         house.setKeyword(&quot;%&quot;+house.getKeyword()+&quot;%&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;         List&amp;lt;House&amp;gt; list =&lt;span&gt; houseDao.selectinfo(house);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         ModelAndView modelAndView = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; ModelAndView();
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;         modelAndView.setViewName(&quot;houselook3&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         modelAndView.addObject(&quot;list&quot;&lt;span&gt;,list);
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; 
&lt;span&gt;47&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; modelAndView;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;         
&lt;span&gt;49&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;     
&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;     @RequestMapping(&quot;/selectAll1&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView selectAll1(Model model) {
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;List&amp;lt;House&amp;gt; list = houseDao.selectAll();
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;System.out.println(list);
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;         
&lt;span&gt;57&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;model.addAttribute(&quot;list&quot;, list);&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt; 
&lt;span&gt;59&lt;/span&gt;         ModelAndView mv = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;redirect:/houselook.jsp&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mv;
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;         
&lt;span&gt;62&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; 
&lt;span&gt;64&lt;/span&gt;     @RequestMapping(&quot;/selectAll2&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String selectAll2(Model model) {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;         List&amp;lt;House&amp;gt; list =&lt;span&gt; houseDao.selectAll();
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;        System.out.println(list);
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;         model.addAttribute(&quot;list&quot;&lt;span&gt;, list);
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &quot;houselook2&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt;     
&lt;span&gt;73&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;     @RequestMapping(&quot;/addhouse&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView addhouse(House house) {
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;houseDao.inserthouse(house);
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;         
&lt;span&gt;78&lt;/span&gt;         ModelAndView mv = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;redirect:/index.jsp&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mv;
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;         
&lt;span&gt;81&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt;     
&lt;span&gt;83&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;84&lt;/span&gt;     @RequestMapping(&quot;/delhouse&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;85&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView delhouse(Integer id) {
&lt;/span&gt;&lt;span&gt;86&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;houseDao.delhouse(id);
&lt;/span&gt;&lt;span&gt;87&lt;/span&gt;         ModelAndView mv = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;redirect:/index.jsp&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;88&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mv;
&lt;/span&gt;&lt;span&gt;89&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;90&lt;/span&gt;     
&lt;span&gt;91&lt;/span&gt; &lt;span&gt;    @ResponseBody
&lt;/span&gt;&lt;span&gt;92&lt;/span&gt;     @RequestMapping(&quot;/updatehouse&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;93&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt;&lt;span&gt; ModelAndView updatehouse(House house) {
&lt;/span&gt;&lt;span&gt;94&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;houseDao.updatehouse(house);
&lt;/span&gt;&lt;span&gt;95&lt;/span&gt;         ModelAndView mv = &lt;span&gt;new&lt;/span&gt; ModelAndView(&quot;redirect:/index.jsp&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;96&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; mv;
&lt;/span&gt;&lt;span&gt;97&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;98&lt;/span&gt;     
&lt;span&gt;99&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前台：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;98&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  1&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;  2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;  3&lt;/span&gt;     &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  4&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ taglib uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jsp/jstl/core&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;  5&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;  9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;js/jquery-3.2.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;
&lt;span&gt; 11&lt;/span&gt; &lt;span&gt;    src&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/jquery.easyui.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;shortcut icon&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;img/logo1.jpg&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt; 13&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;
&lt;span&gt; 14&lt;/span&gt; &lt;span&gt;    href&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/themes/icon.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 15&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;
&lt;span&gt; 16&lt;/span&gt; &lt;span&gt;    href&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/themes/default/easyui.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 17&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;
&lt;span&gt; 18&lt;/span&gt; &lt;span&gt;    src&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/locale/easyui-lang-zh_CN.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 19&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;租房管理&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 20&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;
&lt;span&gt; 21&lt;/span&gt;     &lt;span&gt;String&lt;/span&gt;&lt;span&gt; basePath &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; request.getContextPath();
&lt;/span&gt;&lt;span&gt; 22&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 23&lt;/span&gt; &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; &amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/index.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 24&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;style &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 25&lt;/span&gt; &lt;span&gt;.datagrid-btable tr &lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span&gt; 26&lt;/span&gt; &lt;span&gt;    height&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 30px&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt; 27&lt;/span&gt; &lt;span&gt;}&lt;/span&gt;
&lt;span&gt; 28&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;style&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 29&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 30&lt;/span&gt; 
&lt;span&gt; 31&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;easyui-layout&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 32&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 添加商品 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 33&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;data-options&lt;/span&gt;&lt;span&gt;=&quot;region:'north',split:true&quot;&lt;/span&gt;
&lt;span&gt; 34&lt;/span&gt; &lt;span&gt;        style&lt;/span&gt;&lt;span&gt;=&quot;height: 50px; background-color: cornflowerblue&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 35&lt;/span&gt;         
&lt;span&gt; 36&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 37&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 对话框开始 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 38&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;data-options&lt;/span&gt;&lt;span&gt;=&quot;region:'center',split:true&quot;&lt;/span&gt;
&lt;span&gt; 39&lt;/span&gt; &lt;span&gt;        style&lt;/span&gt;&lt;span&gt;=&quot;padding: 5px; background: #eee&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 40&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;tabs&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-tabs&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;width: 100%; height: 100%;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 41&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&quot;主页&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 42&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 43&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 添加的表单 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 44&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;zhong&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;display: none&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 45&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;addhouse&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;
&lt;span&gt; 46&lt;/span&gt; &lt;span&gt;                        style&lt;/span&gt;&lt;span&gt;=&quot;width: 600px; padding: 20px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 47&lt;/span&gt;                         关键字：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;keyword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 48&lt;/span&gt;                         地区：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;area&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 49&lt;/span&gt;                         面积：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;squaremeter&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 50&lt;/span&gt;                         租金：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;rent&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 51&lt;/span&gt;                         租赁方式：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;renttype&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 52&lt;/span&gt;                         房屋类型：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;housetype&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 53&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 54&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;reset&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;重置&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 55&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 56&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 57&lt;/span&gt;                 &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 修改的表单 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 58&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;gai&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;display: none&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 59&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;gaihouse&quot;&lt;/span&gt;&lt;span&gt; action&lt;/span&gt;&lt;span&gt;=&quot;house/updatehouse.do&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;
&lt;span&gt; 60&lt;/span&gt; &lt;span&gt;                        style&lt;/span&gt;&lt;span&gt;=&quot;width: 600px; padding: 20px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 61&lt;/span&gt;                         id：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 62&lt;/span&gt;                         关键字：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;keyword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 63&lt;/span&gt;                         地区：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;area&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 64&lt;/span&gt;                         面积：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;squaremeter&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 65&lt;/span&gt;                         租金：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;rent&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 66&lt;/span&gt;                         租赁方式：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;renttype&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 67&lt;/span&gt;                         房屋类型：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;housetype&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 68&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;提交&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 69&lt;/span&gt;                         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;reset&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;重置&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 70&lt;/span&gt;                     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 71&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 72&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 73&lt;/span&gt; 
&lt;span&gt; 74&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 75&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 76&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 对话框结束 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 77&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 目录开始 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 78&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;data-options&lt;/span&gt;&lt;span&gt;=&quot;region:'west',split:true&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=210&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 79&lt;/span&gt;         &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;aa&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-accordion&quot;&lt;/span&gt;
&lt;span&gt; 80&lt;/span&gt; &lt;span&gt;            style&lt;/span&gt;&lt;span&gt;=&quot;width: 200px; height: 543px&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 81&lt;/span&gt;             
&lt;span&gt; 82&lt;/span&gt;             &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;=&quot;用户管理&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;overflow: auto; padding: 10px&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 83&lt;/span&gt;                 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 84&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lis&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;addhouse&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton ab&quot;&lt;/span&gt;
&lt;span&gt; 85&lt;/span&gt; &lt;span&gt;                        plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;添加房屋信息(先用右边按钮)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 86&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lis&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;%=basePath %&amp;gt;/houselook.jsp&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton ab&quot;&lt;/span&gt;
&lt;span&gt; 87&lt;/span&gt; &lt;span&gt;                        plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查看租房信息2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 88&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lis&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;&amp;lt;%=basePath %&amp;gt;/house/selectAll2.do&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton ab&quot;&lt;/span&gt;
&lt;span&gt; 89&lt;/span&gt; &lt;span&gt;                        plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查看租房信息3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 90&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lis&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;houselook3.jsp&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton ab&quot;&lt;/span&gt;
&lt;span&gt; 91&lt;/span&gt; &lt;span&gt;                        plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;前往租房页面&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 92&lt;/span&gt;                     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;lis&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;easyui-linkbutton ab&quot;&lt;/span&gt;
&lt;span&gt; 93&lt;/span&gt; &lt;span&gt;                        plain&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;修改用户&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 94&lt;/span&gt;                 &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 95&lt;/span&gt;             &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 96&lt;/span&gt;         &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 97&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 98&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 底部声明 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt; 99&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;data-options&lt;/span&gt;&lt;span&gt;=&quot;region:'south',split:true&quot;&lt;/span&gt;
&lt;span&gt;100&lt;/span&gt; &lt;span&gt;        style&lt;/span&gt;&lt;span&gt;=&quot;height: 40px; line-height: 40px; vertical-align: center; text-align: center;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;101&lt;/span&gt;         玛雅网络版权声明&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;102&lt;/span&gt;     &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 目录结束 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;103&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;104&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;105&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;106&lt;/span&gt; 
&lt;span&gt;107&lt;/span&gt; &lt;span&gt;    $(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
&lt;/span&gt;&lt;span&gt;108&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#addhouse&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).form({    
&lt;/span&gt;&lt;span&gt;109&lt;/span&gt; &lt;span&gt;            url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;house/addhouse.do&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;110&lt;/span&gt; &lt;span&gt;            onSubmit: &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;111&lt;/span&gt;                 &lt;span&gt;return&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#addhouse&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).form(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;validate&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果有为空则返回false阻止提交&lt;/span&gt;
&lt;span&gt;112&lt;/span&gt; &lt;span&gt;            },
&lt;/span&gt;&lt;span&gt;113&lt;/span&gt; &lt;span&gt;            success:&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(data){    
&lt;/span&gt;&lt;span&gt;114&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(data&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;115&lt;/span&gt; &lt;span&gt;                    alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;添加成功&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;116&lt;/span&gt; &lt;span&gt;                }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(data&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;117&lt;/span&gt; &lt;span&gt;                    alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请检查信息正确！&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;118&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;119&lt;/span&gt; &lt;span&gt;            }    
&lt;/span&gt;&lt;span&gt;120&lt;/span&gt; &lt;span&gt;        });
&lt;/span&gt;&lt;span&gt;121&lt;/span&gt;         
&lt;span&gt;122&lt;/span&gt; &lt;span&gt;        $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#table&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).datagrid({    
&lt;/span&gt;&lt;span&gt;123&lt;/span&gt; &lt;span&gt;            url : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;house/selectAll.do&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;124&lt;/span&gt; &lt;span&gt;            striped:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;显示斑马线&lt;/span&gt;
&lt;span&gt;125&lt;/span&gt; &lt;span&gt;            autoRowHeight:&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;定义设置行的高度，根据该行的内容。设置为false可以提高负载性能。这里不设置，css中设置的行高无效&lt;/span&gt;
&lt;span&gt;126&lt;/span&gt; &lt;span&gt;            singleSelect:&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;只允许选择一行&lt;/span&gt;
&lt;span&gt;127&lt;/span&gt; &lt;span&gt;            pagination : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;128&lt;/span&gt; &lt;span&gt;            pageNumber : &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;129&lt;/span&gt; &lt;span&gt;            pageSize : &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;130&lt;/span&gt; &lt;span&gt;            pageList : [ &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt; ],
&lt;/span&gt;&lt;span&gt;131&lt;/span&gt;             
&lt;span&gt;132&lt;/span&gt; &lt;span&gt;            toolbar : [{
&lt;/span&gt;&lt;span&gt;133&lt;/span&gt; &lt;span&gt;                iconCls : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;icon-edit&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;134&lt;/span&gt; &lt;span&gt;                text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;添加&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;135&lt;/span&gt; &lt;span&gt;                handler : &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {    
&lt;/span&gt;&lt;span&gt;136&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; a &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;).text();
&lt;/span&gt;&lt;span&gt;137&lt;/span&gt;                     
&lt;span&gt;138&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#zhong&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).dialog({
&lt;/span&gt;&lt;span&gt;139&lt;/span&gt; &lt;span&gt;                        width : &lt;/span&gt;&lt;span&gt;800&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;140&lt;/span&gt; &lt;span&gt;                        height : &lt;/span&gt;&lt;span&gt;500&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;141&lt;/span&gt; &lt;span&gt;                        title : a,
&lt;/span&gt;&lt;span&gt;142&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;closed : false,&lt;/span&gt;
&lt;span&gt;143&lt;/span&gt; &lt;span&gt;                        cache : &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;144&lt;/span&gt; &lt;span&gt;                        modal : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;
&lt;span&gt;145&lt;/span&gt; &lt;span&gt;                    });
&lt;/span&gt;&lt;span&gt;146&lt;/span&gt;                     
&lt;span&gt;147&lt;/span&gt;                     
&lt;span&gt;148&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;149&lt;/span&gt; &lt;span&gt;            },  &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,{
&lt;/span&gt;&lt;span&gt;150&lt;/span&gt; &lt;span&gt;                iconCls : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;icon-edit&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;151&lt;/span&gt; &lt;span&gt;                text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;修改&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;152&lt;/span&gt; &lt;span&gt;                handler : &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
&lt;/span&gt;&lt;span&gt;153&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; a &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;).text();
&lt;/span&gt;&lt;span&gt;154&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#gai&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).dialog({
&lt;/span&gt;&lt;span&gt;155&lt;/span&gt; &lt;span&gt;                        width : &lt;/span&gt;&lt;span&gt;800&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;156&lt;/span&gt; &lt;span&gt;                        height : &lt;/span&gt;&lt;span&gt;500&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;157&lt;/span&gt; &lt;span&gt;                        title : a,
&lt;/span&gt;&lt;span&gt;158&lt;/span&gt;                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;closed : false,&lt;/span&gt;
&lt;span&gt;159&lt;/span&gt; &lt;span&gt;                        cache : &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;160&lt;/span&gt; &lt;span&gt;                        modal : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;
&lt;span&gt;161&lt;/span&gt; &lt;span&gt;                    });
&lt;/span&gt;&lt;span&gt;162&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#gai&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).dialog(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;open&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;163&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; r &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#table&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).datagrid(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;getSelected&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取被选中的行，返回对象&lt;/span&gt;
&lt;span&gt;164&lt;/span&gt; &lt;span&gt;                    $(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;#gaihouse&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).form(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;load&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, r);&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将被选中的信息放到弹出的的表单中，富文本编辑器的内容无法显示&lt;/span&gt;
&lt;span&gt;165&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;166&lt;/span&gt; &lt;span&gt;            }, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;167&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;168&lt;/span&gt; &lt;span&gt;                iconCls : &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;icon-cancel&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;169&lt;/span&gt; &lt;span&gt;                text : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;删除&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;170&lt;/span&gt; &lt;span&gt;                handler : &lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
&lt;/span&gt;&lt;span&gt;171&lt;/span&gt;                     &lt;span&gt;var&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;172&lt;/span&gt; &lt;span&gt;                    id &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; $(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;#table&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).datagrid(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;getSelected&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).id;
&lt;/span&gt;&lt;span&gt;173&lt;/span&gt;                     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(id&lt;/span&gt;&lt;span&gt;&amp;gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;174&lt;/span&gt;                         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; r1 &lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt; confirm(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;确定删除编号为  &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 的房屋信息吗？&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;175&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(r1) {
&lt;/span&gt;&lt;span&gt;176&lt;/span&gt; &lt;span&gt;                            window.location.href&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;house/delhouse.do?id=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;id;
&lt;/span&gt;&lt;span&gt;177&lt;/span&gt; &lt;span&gt;                            alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;删除成功&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;178&lt;/span&gt; &lt;span&gt;                        }
&lt;/span&gt;&lt;span&gt;179&lt;/span&gt; &lt;span&gt;                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;180&lt;/span&gt; &lt;span&gt;                        alert(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请选中需要删除的商品&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;181&lt;/span&gt; &lt;span&gt;                    }
&lt;/span&gt;&lt;span&gt;182&lt;/span&gt;                     
&lt;span&gt;183&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;184&lt;/span&gt; &lt;span&gt;            } ],
&lt;/span&gt;&lt;span&gt;185&lt;/span&gt; 
&lt;span&gt;186&lt;/span&gt; &lt;span&gt;             frozenColumns : [ [ {
&lt;/span&gt;&lt;span&gt;187&lt;/span&gt; &lt;span&gt;                 field : &lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;188&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;189&lt;/span&gt; &lt;span&gt;                width : &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;190&lt;/span&gt; &lt;span&gt;                checkbox : &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;
&lt;span&gt;191&lt;/span&gt; &lt;span&gt;            } ] ], 
&lt;/span&gt;&lt;span&gt;192&lt;/span&gt; &lt;span&gt;            columns : [ [ {
&lt;/span&gt;&lt;span&gt;193&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;194&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;信息编号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;195&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;
&lt;span&gt;196&lt;/span&gt; &lt;span&gt;            },{
&lt;/span&gt;&lt;span&gt;197&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;keyword&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;198&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;关键字&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;199&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;180&lt;/span&gt;
&lt;span&gt;200&lt;/span&gt; &lt;span&gt;            },  
&lt;/span&gt;&lt;span&gt;201&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;202&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;area&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;203&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;地区&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;204&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;
&lt;span&gt;205&lt;/span&gt; &lt;span&gt;            }, {
&lt;/span&gt;&lt;span&gt;206&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;squaremeter&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;207&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;面积&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;208&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;
&lt;span&gt;209&lt;/span&gt; &lt;span&gt;            }, {
&lt;/span&gt;&lt;span&gt;210&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;rent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;211&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;租金&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;212&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;
&lt;span&gt;213&lt;/span&gt; &lt;span&gt;            } , {
&lt;/span&gt;&lt;span&gt;214&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;renttype&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;215&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;租赁方式&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;216&lt;/span&gt; &lt;span&gt;                width:&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;
&lt;span&gt;217&lt;/span&gt; &lt;span&gt;            } ,{
&lt;/span&gt;&lt;span&gt;218&lt;/span&gt; &lt;span&gt;                field : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;housetype&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;219&lt;/span&gt; &lt;span&gt;                title : &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;房屋类型&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt;220&lt;/span&gt; &lt;span&gt;                width : &lt;/span&gt;&lt;span&gt;60&lt;/span&gt;
&lt;span&gt;221&lt;/span&gt; &lt;span&gt;            } ] ],
&lt;/span&gt;&lt;span&gt;222&lt;/span&gt;             
&lt;span&gt;223&lt;/span&gt; &lt;span&gt;        }); 
&lt;/span&gt;&lt;span&gt;224&lt;/span&gt; &lt;span&gt;    });
&lt;/span&gt;&lt;span&gt;225&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ page language&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; contentType&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;text/html; charset=UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    pageEncoding&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;UTF-8&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; import&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;java.util.List,com.hanqi.model.House,com.hanqi.controller.HouseController&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;@ taglib prefix&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; uri&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;http://java.sun.com/jstl/core&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;Content-Type&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Insert title here&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;js/jquery-3.2.1.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    src&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/jquery.easyui.min.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;rel&lt;/span&gt;&lt;span&gt;=&quot;shortcut icon&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;img/logo1.jpg&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    href&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/themes/icon.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;link &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/css&quot;&lt;/span&gt;&lt;span&gt; rel&lt;/span&gt;&lt;span&gt;=&quot;stylesheet&quot;&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    href&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/themes/default/easyui.css&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;link&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text/javascript&quot;&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    src&lt;/span&gt;&lt;span&gt;=&quot;jquery-easyui-1.5.1/locale/easyui-lang-zh_CN.js&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;=&quot;house/selectinfo.do&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt;     区域：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;area&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s1&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;张店&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;张店&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;area&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s2&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;淄川&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;淄川&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;area&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s0&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;周村&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;周村&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;28&lt;/span&gt;     租赁类型：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;renttype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s3&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;整租&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;整租&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;renttype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s4&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;合租&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;合租&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;32&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;checkbox&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;renttype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s5&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;其他&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s5&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;其他&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;34&lt;/span&gt;     房屋类型：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;housetype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s6&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;三室一厅&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;35&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s6&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;三室一厅&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;housetype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s7&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;自建房&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s7&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;自建房&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; 　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;radio&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;housetype&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;s8&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;其他&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt; 　　　　&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;s8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;其他&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;br&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;40&lt;/span&gt;     关键字：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;keyword&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;41&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;查询&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;42&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt; &lt;span&gt;&amp;lt;%&lt;/span&gt;    
&lt;span&gt;45&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;HouseController hc&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; HouseController();
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;    List&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;House&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; list&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;(List&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;House&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;)request.getAttribute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(list!&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;        out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;table border='1'&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(House h:list){
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getKeyword()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getArea()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getSquaremeter()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getRent()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getRenttype()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;h.getHousetype()&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;            out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;        out.print(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;%&amp;gt;&lt;/span&gt;
&lt;span&gt;62&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1176316/201710/1176316-20171015212511918-519712884.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 15 Oct 2017 23:18:00 +0000</pubDate>
<dc:creator>谁将新樽辞旧月，今月曾经照古人</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jiangwz/p/7673738.html</dc:identifier>
</item>
<item>
<title>Java命令模式以及来自lambda的优化 - 祈求者-</title>
<link>http://www.cnblogs.com/invoker-/p/7675320.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/invoker-/p/7675320.html</guid>
<description>&lt;p&gt;   设计模式是软件工程中一些问题的统一解决方案的模型,它的出现是为了解决一些普遍存在的,却不能被语言特性直接解决的问题,随着软件工程的发展,设计模式也会不断的进行更新,本文介绍的是经典设计模式-命令模式以及来自java8的lambda的对它的优化。&lt;/p&gt;
&lt;h3 id=&quot;什么是命令模式&quot;&gt;什么是命令模式&lt;/h3&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;命令模式把一个请求或者操作封装到一个对象中。命令模式允许系统使用不同的请求把客户端参数化，对请求排&lt;br/&gt;队或者记录请求日志，可以提供命令的撤销和恢复功能。 (摘自&amp;lt;大话设计模式&amp;gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  我不想把问题弄的特别复杂,我的理解是,命令模式就是对一段命令的封装,而命令,就是行为,行为在java语言里可以理解为方法,所以说命令模式就是对一些行为或者说是一些方法的封装。下面我举一个简单的例子来描述这种模式,然后再讲解它的特点。&lt;/p&gt;

&lt;h2 id=&quot;场景描述&quot;&gt;场景描述&lt;/h2&gt;
&lt;p&gt;  有一家路边的小摊,做的小本经营,只有一个做饭的师傅,师傅饭做的还不错,可来吃饭的人们总是抱怨老板记性不好,有时候订单一多就给忘了，路人甲:&quot;老板!来份牛肉饭!&quot;,老板:&quot;好勒!马上给您做!&quot;，路人乙:&quot;老板!来份啤酒鸭!&quot;,老板:&quot;没问题!&quot;,路人丙:&quot;老板!一份西红柿炒鸡蛋!&quot;,老板:&quot;ok!&quot;,路人丁:&quot;老板!两份啤酒鸭!&quot;,老板:&quot;好的好的!&quot;(内心：我晕,怎么有点记不过来了...)&lt;/p&gt;
&lt;h2 id=&quot;基础实现&quot;&gt;基础实现&lt;/h2&gt;
&lt;p&gt;老板在这里同时扮演了做饭的角色 对于一个餐馆来说也就是厨房类&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Kitchen {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份牛肉饭做好了!&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;scrambledEggsWithTomatoes&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份西红柿炒鸡蛋做好了!&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份啤酒鸭做完啦!&quot;&lt;/span&gt;);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端代码&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;main&lt;/span&gt;(String[] args){
    Kitchen boss = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Kitchen&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;();
    boss.&lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码十分的简单,可是通过观察发现,客户和厨房直接交互了,如果一旦请求多了起来,就如同上面老板说的,怎么感觉头有点晕那...从代码的角度来说,这样的耦合度也太高了,举个例子,如果现在有一个客户不想点了,那应该怎么办呢?取消订单代码写在Kitchen类里,显然不现实,写在客户端里,似乎又不太靠谱.... 再举一个例子,鸡蛋已经用完了,不能给客户提供西红柿炒鸡蛋了,那这个拒绝的代码又写在哪里呢?写在Kitchen？可以是可以,但是你把业务逻辑和基础领域模型混在一起真的好吗?写在客户端里？所有的逻辑都丢在客户端第一层显然是不明智的。&lt;/p&gt;
&lt;p&gt;废话了半天,终于有一个顾客受不了了:&quot;老板你这样也太累了吧!不如招个服务员给你记我们要点的饭的订单,记完了送到厨房给你,你按照这个订单做就行了,这样你全身心的投入做饭,这样能提高做饭的效率,也不会出现先点的顾客您忘记做等了半天嚷嚷着要退钱了！至于取消修改订单还是拒绝订单,都交给服务员去处理,处理好了送过来给您,这样各司其职,效率变高了,大家不是都开心嘛!&quot;&lt;/p&gt;
&lt;p&gt;那么很显然故事中的这个顾客就很有软件工程的天赋 :)&lt;/p&gt;
&lt;h2 id=&quot;使用传统命令模式实现&quot;&gt;使用传统命令模式实现&lt;/h2&gt;
&lt;p&gt;命令模式,就是上文中的顾客所提出的建议,下面就是具体的实现类。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;首先要添加服务员类,负责添加,拒绝,修改或者删除订单,或者增加订单的日志相关信息,其实非常简单,简单的增加逻辑即可,这里为了演示,只演示拒绝订单和输出日志&lt;/li&gt;
&lt;li&gt;其次既然是命令模式,那肯定要有命令类,这里将厨房做饭的三个方法分别构造成三个命令对象,将他们的共同部分抽象成公共的抽象命令类,方便后面向上转型。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;以下为代码&lt;br/&gt;抽象命令类,包含一个执行命令的对象和方法,子类继承该类,对抽象的实现方法进行不同的实现&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; BaseCommand {
    &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; Kitchen kitchen;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;BaseCommand&lt;/span&gt;(Kitchen kitchen) {
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;kitchen&lt;/span&gt; = kitchen;
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;executeCommand&lt;/span&gt;();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是三个继承抽象命令类的具体命令,也就是将来客户端要添加的具体的独立的订单命令,结构完全一样&lt;/p&gt;
&lt;p&gt;做牛肉饭命令类&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; beefRiceCommand &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; BaseCommand {

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beefRiceCommand&lt;/span&gt;(Kitchen kitchen) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;(kitchen);
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;executeCommand&lt;/span&gt;() {
       kitchen.&lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;做啤酒鸭命令类&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; beerDuckCommand &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; BaseCommand {

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beerDuckCommand&lt;/span&gt;(Kitchen kitchen) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;(kitchen);
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;executeCommand&lt;/span&gt;() {
       kitchen.&lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;做西红柿炒鸡蛋命令类&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; EggsWithTomatoesCommand &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; BaseCommand {

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;EggsWithTomatoesCommand&lt;/span&gt;(Kitchen kitchen) {
        &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;(kitchen);
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;executeCommand&lt;/span&gt;() {
        kitchen.&lt;span class=&quot;fu&quot;&gt;scrambledEggsWithTomatoes&lt;/span&gt;();
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面是服务员类,这里为了演示使用队列实现了增加订单与拒绝订单和添加日志,删除中间订单也很简单,数据结构换成linkedList或者arrayList即可,拒绝订单为了演示只是简单的通过类名来判断&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Waiter {
    &lt;span class=&quot;co&quot;&gt;/** 用于存储订单命令的队列 */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; Queue&amp;lt;BaseCommand&amp;gt; orders ;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;Waiter&lt;/span&gt;() {
        orders = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; ArrayDeque&amp;lt;&amp;gt;();
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 添加订单&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param baseCommand &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;客户端传来的命令类,向上转型&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(BaseCommand baseCommand){
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (baseCommand.&lt;span class=&quot;fu&quot;&gt;getClass&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(EggsWithTomatoesCommand.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;())) {
            System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;啤酒鸭卖完了，换一个点点吧!&quot;&lt;/span&gt;);
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            String[] names = baseCommand.&lt;span class=&quot;fu&quot;&gt;getClass&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getName&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;split&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.&quot;&lt;/span&gt;);
            System.&lt;span class=&quot;fu&quot;&gt;out.printf&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;添加订单: &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; 订单时间: &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;, names[names.&lt;span class=&quot;fu&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], LocalDateTime.&lt;span class=&quot;fu&quot;&gt;now&lt;/span&gt;());
            orders.&lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;(baseCommand);
        }
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 通知厨房开始做饭,遍历队列,做完了的订单移出队列&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;notifyKitchen&lt;/span&gt;(){
        &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (orders.&lt;span class=&quot;fu&quot;&gt;peek&lt;/span&gt;() != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
            orders.&lt;span class=&quot;fu&quot;&gt;peek&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;executeCommand&lt;/span&gt;();
            orders.&lt;span class=&quot;fu&quot;&gt;remove&lt;/span&gt;();
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端类&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Client {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;main&lt;/span&gt;(String[] args) {
        &lt;span class=&quot;co&quot;&gt;//准备厨房,服务员,菜单命令工作&lt;/span&gt;
        Kitchen kitchen = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Kitchen&lt;/span&gt;();
        Waiter waiter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Waiter&lt;/span&gt;();
        BaseCommand beefRiceCommand = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beefRiceCommand&lt;/span&gt;(kitchen);
        BaseCommand beerDuckCommand = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beerDuckCommand&lt;/span&gt;(kitchen);
        BaseCommand eggsWithTomatoesCommand = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;EggsWithTomatoesCommand&lt;/span&gt;(kitchen);

        &lt;span class=&quot;co&quot;&gt;//开始营业&lt;/span&gt;
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;=======================添加订单环节=======================&quot;&lt;/span&gt;);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份牛肉饭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(beefRiceCommand);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份啤酒鸭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(beerDuckCommand);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份西红柿炒鸡蛋!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(eggsWithTomatoesCommand);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 两份啤酒鸭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(beerDuckCommand);
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(beerDuckCommand);

        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;==========服务员将订单送至厨房,厨房按照订单顺序开始做饭=========&quot;&lt;/span&gt;);
        &lt;span class=&quot;co&quot;&gt;//服务员通知厨房按照订单顺序开始做&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;notifyKitchen&lt;/span&gt;();

    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;=======================添加订单环节=======================
添加订单: beefRiceCommand 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T02:&lt;span class=&quot;dv&quot;&gt;44&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;13.631&lt;/span&gt; 
添加订单: beerDuckCommand 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T02:&lt;span class=&quot;dv&quot;&gt;44&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;13.650&lt;/span&gt; 
啤酒鸭卖完了，换一个点点吧!
添加订单: beerDuckCommand 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T02:&lt;span class=&quot;dv&quot;&gt;44&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;13.650&lt;/span&gt; 
添加订单: beerDuckCommand 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T02:&lt;span class=&quot;dv&quot;&gt;44&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;13.650&lt;/span&gt; 
==========服务员将订单送至厨房,厨房按照订单顺序开始做饭=========
一份牛肉饭做好了!
一份啤酒鸭做完啦!
一份啤酒鸭做完啦!
一份啤酒鸭做完啦!

Process finished with exit code &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;总结与思考&quot;&gt;总结与思考&lt;/h2&gt;
&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;
&lt;p&gt;上面的例子应该并不难理解,这里列出命令模式的uml图&amp;lt;来源于《head first》&amp;gt;&lt;br/&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1132218/201710/1132218-20171016034727615-2136034143.png&quot; width=&quot;512&quot; height=&quot;256&quot;/&gt;&lt;/p&gt;
&lt;p&gt;命令模式涉及到五个角色，它们分别是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;客户端(Client)角色：具体执行程序的地方,创建一个具体命令(ConcreteCommand)对象并确定其接收者。&lt;/li&gt;
&lt;li&gt;命令(Command)角色 : 声明了一个给所有具体命令类的抽象接口,在上面的例子中是BaseCommand类,这里的抽象接口只是一个概念,我使用抽象类来代替也是可以的。&lt;/li&gt;
&lt;li&gt;具体命令(ConcreteCommand)角色 : 定义一个接收者和行为之间的弱耦合；实现execute()方法，负责调用接收者的相应操作。execute()方法通常叫做执行方法。在这里就是牛肉饭,啤酒鸭,番茄炒鸡蛋等命令....&lt;/li&gt;
&lt;li&gt;请求者(Invoker)角色：负责调用命令对象执行请求，相关的方法叫做行动方法。在这里就是服务员,负责收集这些命令,从uml图也可以看出来他和command角色的关系是聚合关系&lt;/li&gt;
&lt;li&gt;接收者(Receiver)角色：负责具体实施和执行一个请求。任何一个类都可以成为接收者，实施和执行请求的方法叫做行动方法。在这里就是厨房了,喜欢我更喜欢称之为执行者,因为他是最终负责执行这些命令的人,当然反过来说,对于命令来说,他也是这些命令的接收者。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;下面谈一谈命令模式的优缺点&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;优点&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;最大的作用是将请求者与执行者分割开,在上面的例子中就是将顾客和厨房给分开了,顾客负责向服务员点菜,服务员负责将订单交给厨房,厨房安心做饭,顾客安心点菜,这样分工明确。&lt;/li&gt;
&lt;li&gt;在有需要的情况下,可以很方便的进行日志的记录,如上面的例子所示&lt;/li&gt;
&lt;li&gt;对于客户端的请求,可以选择撤销请求与重新记录请求,也是十分方便的&lt;/li&gt;
&lt;li&gt;可以十分容易的实现一个命令队列,例如上文所示&lt;/li&gt;
&lt;li&gt;每一个命令类互不关联,添加新的命令类或者修改旧有的命令类十分容易&lt;/li&gt;
&lt;li&gt;总结几点就是 解耦,复合命令,动态的控制,易于扩展&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;缺点&quot;&gt;缺点&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;增加的类太多了,事实上很多设计模式都有这样的毛病,与其说是缺点,不如说是不可避免,因为程序语言特性的缺陷不得不用更多资源来变着法子完成,就拿上文的例子来说,最初的基本实现虽然问题很多,但是只有两个类,厨房类和客户端类,可使用命令模式完成了扩展之后,除开原先的两个类,新增了服务员类,抽象命令类,以及它下面具体的三个命令,那么假设这个厨房类可以做100道菜,难道我就要加100个子命令类???&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;思考&quot;&gt;思考&lt;/h3&gt;
&lt;p&gt;命令模式的优点是显而易见的,结构复合易扩展动态控制,简直棒!可他的这个缺点似乎有时候也挺头疼的,那么具体的进行分析与思考,命令模式的优点几乎全部集中于这个服务员类,也就是invoke角色里,而剩下的1个抽象接口与它下面的n个子类只是为了将厨房类(receiver角色)里的每一个行为(方法)给抽象出来。问题来了,为什么要用类去包装这个行为才能抽象呢？事实上,行为抽象是函数式语言的特性之一,java此前并没有这个语言特性,所以没办法,只能用包装类来代替了,可是这一点自从Java8出来之后就不一样了，Java8的函数式特性完全可以将命令模式的这一缺点给优化掉!因此,我们只需要保留服务员类,剩余的行为命令包装类使用尝试使用函数接口来代替,这一既保持了优点,又规避了缺点!&lt;/p&gt;

&lt;p&gt;将这些做饭的命令抽象成函数接口,然后指定一个执行者,这样的接口在Java8 4大函数接口中属于Consumer接口,也就是消费者接口,下面就用Consumer接口进行行为抽象&lt;br/&gt;厨房类依旧不变&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Kitchen {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beefRice&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份牛肉饭做好了!&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;scrambledEggsWithTomatoes&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份西红柿炒鸡蛋做好了!&quot;&lt;/span&gt;);
    }

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;beerDuck&lt;/span&gt;(){
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;一份啤酒鸭做完啦!&quot;&lt;/span&gt;);
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务员类也很容易,原先装的是一个个命令对象,现在直接一点,直接将行为放进去&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Waiter {
    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 此时队列装载的不再是命令对象了,而是更直接的厨房类的行为&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; Queue&amp;lt;Consumer&amp;lt;Kitchen&amp;gt;&amp;gt; orders;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Waiter&lt;/span&gt;() {
        orders = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; ArrayDeque&amp;lt;&amp;gt;();
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 添加订单&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param kitchenAction &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;厨房的具体行为&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Consumer&amp;lt;Kitchen&amp;gt; kitchenAction) {
        System.&lt;span class=&quot;fu&quot;&gt;out.printf&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;添加订单成功! 订单时间: &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;, LocalDateTime.&lt;span class=&quot;fu&quot;&gt;now&lt;/span&gt;());
        orders.&lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;(kitchenAction);
    }

    &lt;span class=&quot;co&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * 这里增加一个执行者参数,来对队列中的行为进行操作&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     * &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;@param kitchen &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;执行者,用于执行队列中的行为&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;notifyKitchen&lt;/span&gt;(Kitchen kitchen) {
        &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (orders.&lt;span class=&quot;fu&quot;&gt;peek&lt;/span&gt;() != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
            orders.&lt;span class=&quot;fu&quot;&gt;peek&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;accept&lt;/span&gt;(kitchen);
            orders.&lt;span class=&quot;fu&quot;&gt;remove&lt;/span&gt;();
        }
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;客户端代码,简单、清晰的惊人,代码自带注释效果,无论是简短性还是可阅读性,都比之前的要好上很多,中间的营业代码很直观,直接阅读代码就很清楚的看到添加了哪些行为到订单队里中&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Client {
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;main&lt;/span&gt;(String[] args) {
        &lt;span class=&quot;co&quot;&gt;//准备厨房,服务员,菜单命令工作&lt;/span&gt;
        Kitchen kitchen = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Kitchen&lt;/span&gt;();
        Waiter waiter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;Waiter&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//开始营业&lt;/span&gt;
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;=======================添加订单环节=======================&quot;&lt;/span&gt;);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份牛肉饭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Kitchen::beefRice);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份啤酒鸭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Kitchen::beerDuck);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 一份西红柿炒鸡蛋!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Kitchen::scrambledEggsWithTomatoes);
        &lt;span class=&quot;co&quot;&gt;// 顾客：服务员 两份啤酒鸭!&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Kitchen::beerDuck);
        waiter.&lt;span class=&quot;fu&quot;&gt;setOrders&lt;/span&gt;(Kitchen::beerDuck);

        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;==========服务员将订单送至厨房,厨房按照订单顺序开始做饭=========&quot;&lt;/span&gt;);
        &lt;span class=&quot;co&quot;&gt;//服务员通知厨房按照订单顺序开始做&lt;/span&gt;
        waiter.&lt;span class=&quot;fu&quot;&gt;notifyKitchen&lt;/span&gt;(kitchen);

    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;=======================添加订单环节=======================
添加订单成功! 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T03:&lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;40.003&lt;/span&gt; 
添加订单成功! 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T03:&lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;40.019&lt;/span&gt; 
添加订单成功! 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T03:&lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;40.020&lt;/span&gt; 
添加订单成功! 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T03:&lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;40.020&lt;/span&gt; 
添加订单成功! 订单时间: &lt;span class=&quot;dv&quot;&gt;2017-10&lt;/span&gt;-16T03:&lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;fl&quot;&gt;40.021&lt;/span&gt; 
==========服务员将订单送至厨房,厨房按照订单顺序开始做饭=========
一份牛肉饭做好了!
一份啤酒鸭做完啦!
一份西红柿炒鸡蛋做好了!
一份啤酒鸭做完啦!
一份啤酒鸭做完啦!

Process finished with exit code &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里,已经没有其他类的代码了!类的数量由原先的7个变成了3个,并且由于服务员类(Invoke角色)依然存在,原先的解耦复合控制扩展等优点,一个都没少，与此同时客户端的代码也清爽了不少。试想一下,假如现在厨房有100道做菜的方法,按照原先的方法实现的类的数量应该是3(客户端+厨房+服务员) + 1(抽象命令接口) + 100(具体命令接口) = 104个类,而采用lambda之后,依旧只需要三个类！并且原先的优点完全保留了下来。&lt;/p&gt;

&lt;p&gt;   使用lambda优化之后的命令模式在保证优点的同时极大的减少了代码量,简直完美。这就是语言特性所带来的力量,简单的几处修改就能获得如此多的受益,这也是我为什么这么喜欢lambda的原因。&lt;/p&gt;
</description>
<pubDate>Sun, 15 Oct 2017 19:40:00 +0000</pubDate>
<dc:creator>祈求者-</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/invoker-/p/7675320.html</dc:identifier>
</item>
<item>
<title>Spring ——依赖注入配置一些知识点 - 坚持到底gl</title>
<link>http://www.cnblogs.com/zhouguanglin/p/7668613.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhouguanglin/p/7668613.html</guid>
<description>&lt;hr/&gt;
&lt;p&gt;　　依赖注入的原理与实现 依赖注入（DI）和依赖查找（Dependency Lookup）共同组成 控制反转（IoC）。从原理的角度来说，依赖注入和控制反转是没 有不同的，可以看作是从两个角度来阐述一个概念，即基于 Spring 的架构系统中，在一个对象（调用者）为另一个对象（被调用者） 协助工作（调用）时，不用创建，该调用由 Spring 的 Bean 完成， 也就是控制反转。&lt;/p&gt;
&lt;p&gt;　　依赖注入是使用 Reflection 实现的，在 Java 1.3 以后，有一个 重要特性是 Reflection 可以当执行系统的时候，进行动态的创建、 运行和修改实例，依赖注入不仅可以在容器中注入一般属性值，也能将其他引 用注入。&lt;/p&gt;
&lt;p&gt;　　依赖注入起到的作用就是讲对象之间的依赖关系从原先的代码中解耦出来，通过配置文件或注解等方式加上Spring框架的处理让我们对依赖关系灵活集中的进行管理。&lt;/p&gt;
&lt;p&gt;借网上一张图一用就明白为什么松耦合了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1190778/201710/1190778-20171014205410465-1281966622.png&quot; alt=&quot;&quot; width=&quot;517&quot; height=&quot;219&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在我看来就是把东西都放在了配置文件，一些关系都在配置文件给你配好了，只管调用，这是肤浅的理解，底层的是反射的机制&lt;/p&gt;
&lt;p&gt;先看一下XML是怎么配置的吧！&lt;/p&gt;
&lt;h3&gt;构造方法注入&lt;/h3&gt;
&lt;hr/&gt;
&lt;p&gt;简单一些的注入&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;user&quot;&lt;/span&gt;&lt;span&gt;   class&lt;/span&gt;&lt;span&gt;=&quot;com.spring.bean.User&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;使用构造方法注入  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
              &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;admin&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;123456&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;constructor-arg&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;构造参数值设置有很多方式：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 按类型设置&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;  
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg  &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;java.lang.String&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;Jack&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 按顺序设置&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;  
 &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg &lt;/span&gt;&lt;span&gt;index&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;Jack&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 按属性名设置&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;  
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;Jack&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以引申出来一些其他的&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;UserDao&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.zejian.spring.impl.UserDaoImpl&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 通过构造注入依赖 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;UserService&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.zejian.spring.service.impl.UserServiceImpl&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 构造方法方式注入UserDao对象,&lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;constructor-arg  &lt;/span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;span&gt;=&quot;UserDao&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在你的业务实现类中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; 坚持到你GL
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; UserServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; UserService{
  &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;需要注入的对象Dao&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt;&lt;span&gt; UserDao userDao;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;通过构造注入得到&lt;/span&gt;
    &lt;span&gt;public&lt;/span&gt;&lt;span&gt; UserServiceImpl(UserDao userDao){
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将传过来的值设置到自己的属性中去&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;.userDao=&lt;span&gt;userDao;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;bean中各种属性注入方式&lt;/h3&gt;
&lt;hr/&gt;
&lt;p&gt;正常属性&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;属性注入  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;info&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.spring.bean.Info&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;id&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;1&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
          &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;adress&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;浙江&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组类型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置数组类型  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;arr&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;array&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;张三&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;李四&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;王五&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;array&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;list类型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
  &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置list类型  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;week&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;周一&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;周二&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;周三&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;map类型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置map类型  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;infos&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;admin&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;entry &lt;/span&gt;&lt;span&gt;key&lt;/span&gt;&lt;span&gt;=&quot;age&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;23&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;entry&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;map&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;set类型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
   &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt;配置set类型  &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;word&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hello&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;world&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;hi&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;property&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;还要一个小知识点&lt;/p&gt;
&lt;p&gt;properties文件的读取&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
   &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;propertyConfigurer&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;location&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;jdbc.properties&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;实例化的三种方式&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;其实也没啥就是三种不同方式创建实例&lt;/p&gt;
&lt;p&gt;先看一下三个Java文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.spring.factory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.spring.action.HelloWorldImpl;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; 坚持到你GL
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; HelloFactory {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; HelloWorldImpl createHello() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; HelloWorldImpl();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.spring.factory;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.spring.action.HelloWorldImpl;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; 坚持到你GL
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; WorldFactory {
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;  HelloWorldImpl createWorld() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&lt;span&gt; HelloWorldImpl();
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.spring.action;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; 坚持到你GL
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; HelloWorldImpl  &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; HelloWorld{
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String sayHi() {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; TODO Auto-generated method stub&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &quot;实例化-----Hello World!!!&quot;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再看一下配置文件xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 构造器实例化 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;helloworld&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.spring.action.HelloWorldImpl&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 静态工厂实例化 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;staticworld&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.spring.factory.HelloFactory&quot;&lt;/span&gt;&lt;span&gt;  factory-method&lt;/span&gt;&lt;span&gt;=&quot;createHello&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 实例化工厂实例 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;world&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.spring.factory.WorldFactory&quot;&lt;/span&gt; &lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;worlds&quot;&lt;/span&gt;&lt;span&gt; factory-bean&lt;/span&gt;&lt;span&gt;=&quot;world&quot;&lt;/span&gt;&lt;span&gt;  factory-method&lt;/span&gt;&lt;span&gt;=&quot;createWorld&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.spring.action;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.ApplicationContext;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.springframework.context.support.ClassPathXmlApplicationContext;
&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; 坚持到你GL
 *
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Mytest {
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args    ) {
    ApplicationContext ac&lt;/span&gt;=&lt;span&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&quot;springXML/app.xml&quot;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;构造器实例化&lt;/span&gt;
    HelloWorld world=(HelloWorld)ac.getBean(&quot;helloworld&quot;&lt;span&gt;);
    System.out.println(world.sayHi());
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;静态工厂实例化&lt;/span&gt;
    HelloWorld hWorld=(HelloWorld)ac.getBean(&quot;staticworld&quot;&lt;span&gt;);
    System.out.println(hWorld.sayHi()&lt;/span&gt;+&quot;----&quot;&lt;span&gt;);    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实例工厂&lt;/span&gt;
    HelloWorld hello=(HelloWorld)ac.getBean(&quot;worlds&quot;&lt;span&gt;);
    System.out.println(hello.sayHi()&lt;/span&gt;+&quot;***&quot;&lt;span&gt;);
}
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可能一起给出来不咋好，但是认真看就会看出一点门道&lt;/p&gt;


&lt;p&gt;  &lt;span&gt;   &lt;/span&gt;  【版本声明】本文为博主原创文章，转载请注明出处&lt;/p&gt;

</description>
<pubDate>Sun, 15 Oct 2017 16:49:00 +0000</pubDate>
<dc:creator>坚持到底gl</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhouguanglin/p/7668613.html</dc:identifier>
</item>
<item>
<title>原生JS实现音乐播放器！ - 一个柠檬</title>
<link>http://www.cnblogs.com/1996zy/p/7675232.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/1996zy/p/7675232.html</guid>
<description>&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;  前  言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;          &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最近在复习JS，觉得音乐播放器是个挺有意思的东西，今天就来用我们最原生的JS写一个小小的音乐播放器~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;主要功能：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       1、支持循环、随机播放&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2、在播放的同时支持图片的旋转&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       3、支持点击进度条调整播放的位置，以及调整音量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       4、显示音乐的播放时间&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       5、支持切歌：上一首、下一首、点击歌名切歌；暂停播放等~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1176850/201710/1176850-20171016001315293-1778006474.png&quot; alt=&quot;&quot; width=&quot;764&quot; height=&quot;438&quot;/&gt;&lt;/p&gt;

&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;添加音乐有两种方式：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①可以用一个audo标签，这样应该把音乐的地址存放到一个数组中；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;②第二种方式是，有几首歌就添加几个audo标签，然后获取所有的背景音乐(示例中我们先添加三首音乐，放到一个数组中，当然，大家可以挑选自己喜欢的任何歌曲）。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;        &amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;play1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;auto/旅行.mp3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;play2&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;auto/薛明媛,朱贺 - 非酋.mp3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;audio &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;play3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;source &lt;/span&gt;&lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&quot;auto/杨宗纬 - 越过山丘.mp3&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;source&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;audio&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
        play1=document.getElementById(&quot;play1&quot;&lt;span&gt;);
        play2&lt;/span&gt;=document.getElementById(&quot;play2&quot;&lt;span&gt;);
        play3&lt;/span&gt;=document.getElementById(&quot;play3&quot;&lt;span&gt;);
        play&lt;/span&gt;=[play1,play2,play3];
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;1&lt;/span&gt;&lt;span&gt;点击播放、暂停&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt; 首选我们应该清楚的是，在点击按钮播放的时候应该实现的有：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①音乐开始播放；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;②进度条开始随歌曲的播放往前走；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;③图片开始随歌曲播放旋转；&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;④播放时间开始计时；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;那么相对应的，再次点击播放按钮的时候，我们就可以让它实现暂停：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;①歌曲暂停；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;②让进度条同时暂停；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;③让播放时间计时同时暂停；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;④图片停止旋转；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;注意：&lt;/span&gt;上述开始暂停操作一定要同步！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;理清楚我们的思路以后，就可以来一 一实现了~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;点击播放/暂停&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击播放、暂停&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; start(){
                    minute&lt;/span&gt;=0&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(flag){
                        imagePause();
                        play[index].pause();
                    }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                        rotate();
                        play[index].play();
                        reducejindutiao();
                        addtime();
                        jindutiao();
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;play.length;i++&lt;span&gt;) {
                            audioall[i].style.color&lt;/span&gt;=&quot;white&quot;&lt;span&gt;;
                        }
                        audioall[index].style.color&lt;/span&gt;=&quot;red&quot;&lt;span&gt;;
                    }
                }&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;因为播放和暂停在同一个按钮上，所以都会调用上述方法，我们来详细看一下各个函数都实现了怎样的功能：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;图片旋转&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;图片旋转，每30毫米旋转5度&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; rotate(){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; deg=0&lt;span&gt;;
                    flag&lt;/span&gt;=1&lt;span&gt;;
                    timer&lt;/span&gt;=setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        image.style.transform&lt;/span&gt;=&quot;rotate(&quot;+deg+&quot;deg)&quot;&lt;span&gt;;
                        deg&lt;/span&gt;+=5&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(deg&amp;gt;360&lt;span&gt;){
                            deg&lt;/span&gt;=0&lt;span&gt;;
                        }
                    },&lt;/span&gt;30&lt;span&gt;);
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;上述是图片转动的函数，当音乐播放的时候调用rotate（）函数，就可以实现图片的旋转！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;同样清除定时器的函数，当音乐暂停的时候调用imagePause()，图片旋转的定时器被清除掉：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　　　　　function&lt;/span&gt;&lt;span&gt; imagePause(){
                    clearInterval(timer);
                    flag&lt;/span&gt;=0&lt;span&gt;;
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这样图片旋转的功能我们就已经实现了~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;进度条&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;       先定义两个宽度长度大小一样 颜色不同的两个div，利用currenttime属性来过去当前的播放的时间，设一个div一开始的长度为零，然后通过当前播放的事件来调整div长度大小就能实现滚动条的效果了。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; jindutiao(){
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取当前歌曲的歌长&lt;/span&gt;
                    &lt;span&gt;var&lt;/span&gt; lenth=&lt;span&gt;play[index].duration;
                    timer1&lt;/span&gt;=setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        cur&lt;/span&gt;=play[index].currentTime;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取当前的播放时间&lt;/span&gt;
                        fillbar.style.width=&quot;&quot;+parseFloat(cur/lenth)*300+&quot;px&quot;;
                    },50&lt;span&gt;)
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;这样，进度条就完成啦~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;播放时间&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;音乐的播放时间也是利用currenttime来随时改变，不过应该注意currenttime的计时单位为秒。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//播放&lt;/span&gt;&lt;span&gt;时间&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; addtime(){
                    timer2&lt;/span&gt;=setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        cur&lt;/span&gt;=parseInt(play[index].currentTime);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;秒数&lt;/span&gt;
                        &lt;span&gt;var&lt;/span&gt; temp=&lt;span&gt;cur;
                        minute&lt;/span&gt;=parseInt(temp/60);
                        &lt;span&gt;if&lt;/span&gt;(cur%60&amp;lt;10&lt;span&gt;){
                            time.innerHTML&lt;/span&gt;=&quot;&quot;+minute+&quot;:0&quot;+cur%60+&quot;&quot;&lt;span&gt;;
                        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
                            time.innerHTML&lt;/span&gt;=&quot;&quot;+minute+&quot;:&quot;+cur%60+&quot;&quot;&lt;span&gt;;
                        }
                    },&lt;/span&gt;1000&lt;span&gt;);
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;2&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;切歌&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;我做了两种方式实现切歌：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;①点击上一曲、下一曲按钮实现切歌；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;上一曲&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; reduce(){
                    qingkong();
                    reducejindutiao();
                    pauseall();
                    index&lt;/span&gt;--&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(index==-1&lt;span&gt;){
                        index&lt;/span&gt;=play.length-1&lt;span&gt;;
                    }
                    start();
                }
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;下一曲&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; add(){
                    qingkong();
                    reducejindutiao();
                    pauseall();
                    index&lt;/span&gt;++&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(index&amp;gt;play.length-1&lt;span&gt;){
                        index&lt;/span&gt;=0&lt;span&gt;;
                    }
                    start();
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;②点击歌名，实现歌曲的切换；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;点击文字切歌&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; change(e){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; musicName=&lt;span&gt;e.target;
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;先清空所有的&lt;/span&gt;
                    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;audioall.length;i++&lt;span&gt;) {
                        audioall[i].style.color&lt;/span&gt;=&quot;white&quot;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(audioall[i]==&lt;span&gt;musicName){
                            musicName.style.color&lt;/span&gt;=&quot;red&quot;&lt;span&gt;;
                            qingkong();
                            reducejindutiao();
                            pauseall();
                            index&lt;/span&gt;=&lt;span&gt;i;
                            start();
                        }
                    }
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注意：在切歌时不要忘了我们的进度条！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将进度条滚动的定时器清除掉，然后div的长度还原为0；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将进度条置0&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; reducejindutiao(){
                    clearInterval(timer1);
                    fillbar.style.width&lt;/span&gt;=&quot;0&quot;&lt;span&gt;;
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;同时音乐停止：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;音乐停止&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; pauseall(){
                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;play.length;i++&lt;span&gt;) {
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(play[i]){
                            play[i].pause();
                        }
                    }
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;清空所有定时器：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;function&lt;/span&gt; qingkong(){&lt;span&gt;//&lt;/span&gt;&lt;span&gt;清空所有的计时器&lt;/span&gt;
&lt;span&gt;                    imagePause();
                    clearInterval(timer2);
                }
                &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;3&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;点击进度条调整播放进度及音量&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;首先应该理清一下逻辑：当点击进度条的时候，滚动条的宽度应该跟鼠标的offsetX一样长，然后根据进度条的长度来调整听该显示的时间。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(1) 给滚动条的div添加一个事件，当滚动条长度变化的时候歌曲的当前播放的时间调整，300是滚动条的总长度；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;调整播放进度&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; adjust(e){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; bar=&lt;span&gt;e.target;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x=&lt;span&gt;e.offsetX;
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; lenth=&lt;span&gt;play[index].duration;
                    fillbar.style.width&lt;/span&gt;=x+&quot;px&quot;&lt;span&gt;;
                    play[index].currentTime&lt;/span&gt;=&quot;&quot;+parseInt(x*lenth/300)+&quot;&quot;;
&lt;span&gt;                    play[index].play();
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;(2) 改变音量的滚动条，跟改变播放时间类似，利用volume属性（值为零到一）；&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;调整音量大小&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; changeVolume(e){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x=e.offsetX+20&lt;span&gt;;
                    play[index].volume&lt;/span&gt;=parseFloat(x/200)*1;
                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;改变按钮的位置&lt;/span&gt;
                    volume3.style.left=&quot;&quot;+x+&quot;px&quot;&lt;span&gt;;
                }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;span&gt;&lt;span class=&quot;autonum&quot; title=&quot;&quot; data-original-title=&quot;&quot;&gt;4&lt;/span&gt;&lt;span&gt;&lt;strong class=&quot;135brush&quot; data-brushtype=&quot;text&quot;&gt;随机、循环播放&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;循环播放音乐的时候，直接index++当index的范围超过歌曲的长度的时候，index=0重新开始。随机播放的函数类似，当歌曲播放完毕的时候，随机产生一个0到play.length的数字就可以了。&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;随机播放歌曲&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; suiji(e){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; img=&lt;span&gt;e.target;
                    img2.style.border&lt;/span&gt;=&quot;&quot;&lt;span&gt;;
                    img.style.border&lt;/span&gt;=&quot;1px solid red&quot;&lt;span&gt;;
                }
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;顺序播放&lt;/span&gt;
                &lt;span&gt;function&lt;/span&gt;&lt;span&gt; shunxu(e){
                    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; img=&lt;span&gt;e.target;
                    img1.style.border&lt;/span&gt;=&quot;&quot;&lt;span&gt;;
                    img.style.border&lt;/span&gt;=&quot;1px solid red&quot;&lt;span&gt;;
                    clearInterval(suijiplay);
                    shunxuplay&lt;/span&gt;=setInterval(&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
                        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(play[index].ended){
                            add();
                        }
                    },&lt;/span&gt;1000&lt;span&gt;);
                }
    &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;这样我们整个音乐播放器就完成了，大家可以自己写一个好看的界面，就更完美了~&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 15 Oct 2017 16:49:00 +0000</pubDate>
<dc:creator>一个柠檬</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/1996zy/p/7675232.html</dc:identifier>
</item>
<item>
<title>MySql5.7安装及配置 - 搬起地球的小蚂蚁</title>
<link>http://www.cnblogs.com/rimmy/p/7675182.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rimmy/p/7675182.html</guid>
<description>&lt;p&gt;　　MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下公司。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。体积小、速度快、成本低、开放源代码等特点。&lt;/p&gt;
&lt;p&gt;好了，废话不多说。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、MySQL安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;首先去官网下载对应版本MySql，这里以Windows最新的MySql5.7版本为例，安装方式文件分为两种&lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　一种是msi格式的，这种格式直接点击安装，按照提示一步一步来就行，一般会将MySql安装在C:\Program Files\MySQL\MySQL Server 5.7目录中；&lt;/p&gt;
&lt;p&gt;　　一种是zip格式的。zip格式是自己解压，解压缩之后其实MySQL就可以使用了，但是要进行配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、MySql配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;完成上述步骤之后，很多用户开始使用MySQL，但会出现图示的错误。&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;http://images2017.cnblogs.com/blog/1199374/201710/1199374-20171015234432074-47778791.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　这是因为没有配置环境变量所致。配置环境变量很简单：&lt;/p&gt;
&lt;p&gt;　　我的电脑-&amp;gt;属性-&amp;gt;高级-&amp;gt;环境变量，选择PATH,在其后面添加: 你的mysql bin文件夹的路径 (如:F:\Program Files\mysql-5.7.19-winx64\bin（我的安装目录，你们可自行解压到自己喜欢的目录）)PATH=.......;F:\Program Files\mysql-5.7.19-winx64\bin (注意是追加,不是覆盖)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1199374/201710/1199374-20171015233827824-1149876534.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;　　环境变量配置完毕后，先别着急启动MySql，我们还需要修改一下配置文件（如果没有配置，之后启动的时候就会出现图中的错误哦！:错误2 系统找不到文件），mysql-5.6.1X默 认的配置文件是在C:\Program Files\MySQL\MySQL Server 5.6\my-default.ini，&lt;strong&gt;注意：mysql-5.7.1X是没有改配置文件的，需要自己建立一个my.ini文件，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在其中添加以下配置： &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;[&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;
# 设置mysql客户端默认字符集
default-character-set&lt;/span&gt;=&lt;span&gt;utf8 
&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;mysqld&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;
#设置3306端口
port &lt;/span&gt;= 3306&lt;span&gt; 
# 设置mysql的安装目录
basedir&lt;/span&gt;=F:\Program Files\mysql-5.7.19&lt;span&gt;-winx64
# 设置mysql数据库的数据的存放目录
datadir&lt;/span&gt;=F:\Program Files\mysql-5.7.19&lt;span&gt;-winx64\data
# 允许最大连接数
max_connections&lt;/span&gt;=200&lt;span&gt;
# 服务端使用的字符集默认为8比特编码的latin1字符集
character-set-server&lt;/span&gt;=&lt;span&gt;utf8
# 创建新表时将使用的默认存储引擎
default-storage-engine&lt;/span&gt;=INNODB
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），输入：cd F:\Program Files\mysql-5.7.19-winx64\bin 进入mysql的bin文件夹(不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误2)，输入mysqld -install(如果不用管理员身份运行，将会因为权限不够而出现错误：Install/Remove of the Service Denied!) &lt;/p&gt;
&lt;p&gt;　　安装成功后就要启动服务了，继续在cmd中输入:net start mysql（如图）,服务启动成功！&lt;/p&gt;
&lt;p&gt;　　此时很多人会出现错误，请看注意：&lt;/p&gt;
&lt;p&gt;　　注意：这个时候经常会出现错误2和错误1067。&lt;/p&gt;
&lt;p&gt;　　如果出现“错误2 系统找不到文件”，检查一下是否修改过配置文件或者是否进入在bin目录下操作，如果配置文件修改正确并且进入了bin文件夹，需要先删除mysql（输入 mysqld -remove）再重新安装（输入 mysqld -install）；&lt;/p&gt;
&lt;p&gt;　　如果出现错误1067，那就是配置文件修改错误，确认一下配置文件是否正确。&lt;/p&gt;
&lt;p&gt;　　如果出现服务启动失败，服务没有报任何错误，请看这里：&lt;a href=&quot;https://jingyan.baidu.com/article/da1091fb1a46a6027849d6a8.html&quot;&gt;https://jingyan.baidu.com/article/da1091fb1a46a6027849d6a8.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　至此，MySql配置完成了，服务启动成功之后，就可以登录了，如图，输入mysql -u root -p（第一次登录没有密码，直接按回车过）,登录成功！&lt;/p&gt;
&lt;p&gt;　&lt;img src=&quot;http://images2017.cnblogs.com/blog/1199374/201710/1199374-20171016000058621-431425086.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 15 Oct 2017 16:05:00 +0000</pubDate>
<dc:creator>搬起地球的小蚂蚁</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rimmy/p/7675182.html</dc:identifier>
</item>
<item>
<title>全面解读JavaScript入门到进阶，100%基础知识掌握！ - ../..随风</title>
<link>http://www.cnblogs.com/xyq1107/p/7674571.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xyq1107/p/7674571.html</guid>
<description>&lt;p&gt;Undefined 这个值表示变量不含有值。&lt;/p&gt;
&lt;p&gt;可以通过将变量的值再一次设置为 null 来清空变量。&lt;/p&gt;
&lt;h3&gt;三、JavaScript 中的数值函数&lt;/h3&gt;
&lt;p&gt; 1、isNaN（）：判断一个变量或常量，是否是NaN( not a num 非数值)；&lt;br/&gt; 使用isNaN()判断时，会尝试使用Number（）函数进行转换，如果最终结果能够转换数字，则不是NaN,结果为false；&lt;br/&gt; 2、number()函数： 将其他类型的数据，尝试转为数值型；&lt;br/&gt;   [字符串类型]&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;字符串为纯数值字符串，会转为对应的数字；&quot;111&quot;→111&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;字符串为空字符串，会转为0： &quot; &quot;-&amp;gt; 0&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;字符串包含任何其它字符时，都不能转；&quot;1a&quot;-&amp;gt;NaN&lt;br/&gt; [Boolean类型]&lt;br/&gt; true-&amp;gt;1 false-&amp;gt;0&lt;br/&gt; [Null/Undefined]&lt;br/&gt; Null-&amp;gt;0 Undefined-&amp;gt;NaN&lt;br/&gt; [Object]&lt;br/&gt; (后续讲解)&lt;br/&gt; 3、ParseInt():将字符串转为整数类型；&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;纯数值字符串，能转。&quot;12&quot;-&amp;gt;12;&quot;12.9&quot;-&amp;gt;12(小数转化时，直接抹掉小数点，不进行四舍五入)&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;空字符串，不能转。&quot; &quot;-&amp;gt;NaN&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;包含其它字符的字符串，会截取第一个非数值字符串前的数字部分；&lt;br/&gt; &quot;123a456&quot;-&amp;gt;123;&quot;a123b456&quot;-&amp;gt;NaN&lt;br/&gt;  &amp;gt;&amp;gt;&amp;gt;ParseInt()只能转字符串，转其它类型，全是NaN.&lt;br/&gt; [number函数与ParseInt函数的区别]&lt;br/&gt;   1、Number函数可以转各种数据的类型，ParseInt函数只能转字符串；&lt;br/&gt;   2、两者在转字符串时，结果不完全相同。(详见上面解释)&lt;br/&gt; 4、ParseFloat：将字符串转为数值型；&lt;br/&gt; 转换规则与ParseInt相同，只是如果有小数，则保留小数点；如果没有小数，则依然是整数；&quot;12.5&quot;-&amp;gt;12.5;&quot;12&quot;-&amp;gt;12&lt;br/&gt; 5、typeof：检测变量的数据类型：&lt;br/&gt; 字符串-&amp;gt;String 数值-&amp;gt;Number 未定义-&amp;gt;Undefined 对象/NULL-&amp;gt;object 函数-&amp;gt;function&lt;br/&gt; true/false-&amp;gt;Boolean&lt;/p&gt;
&lt;h3&gt;四、JavaScript  中的输入和输出语句&lt;/h3&gt;
&lt;p&gt;1、prompt（）  弹窗输入语句&lt;/p&gt;
&lt;p&gt; 接受两部分参数：&lt;br/&gt; ①输入框上面的提示内容，可选；&lt;br/&gt; ②输入框里面的默认信息，可选；&lt;br/&gt; 当只写一部分时，表示输入框上面的提示内容；&lt;br/&gt; 可以定义变量，接受输入的内容。点击确定按钮，变量将被赋值为输入的内容；点击取消按钮，变量将被赋值为null；&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;var  name = promopt&lt;/strong&gt;(&quot;请输入您的姓名&quot;,&quot; &quot;);&lt;/p&gt;
&lt;p&gt;2、JavaScript 可以通过不同的方式来输出数据：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用 &lt;strong&gt;window.alert()&lt;/strong&gt; 弹出警告框。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;document.write()&lt;/strong&gt; 方法将内容写到 HTML 文档中。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;innerHTML&lt;/strong&gt; 写入到 HTML 元素。&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;console.log()&lt;/strong&gt; 写入到浏览器的控制台。&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;五、JavaScript  中的运算符&lt;/h3&gt;
&lt;p&gt;1、算术运算(单目运算符)&lt;br/&gt;+  加、- 减、* 乘、 / 除、 % 取余、++ 自增 、-- 自减&lt;/p&gt;&lt;p&gt;+号：有两种作用，连接字符串/加法运算。当+两边连接数字时，进行加法运算；当+两边有任意一边为字符串时，起连接字符串作用，&lt;br/&gt;链接之后的结果为字符串；&lt;br/&gt;除+外，其余符号运算时，会先尝试将左右两边的变量用Number函数转为数字；&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;/:结果保留小数点；&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;++:自增运算时，将变量在原有基础上+1；&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;--:自减运算符，将变量在自身基础上-1；&lt;/p&gt;
&lt;p&gt;【a++和++a的异同点】&lt;br/&gt;①相同点：无论a++还是++a，运算完以后，a的值均会+1；&lt;br/&gt;②不同点： a++，先用a的值去运算，再把a+1；&lt;br/&gt;++a，先把a+1，再用a+1以后的值去运算。&lt;br/&gt;eg：量、var a=3，b，c；&lt;br/&gt;b=a++ +2；//先用a运算，b=3+2 再把a+1，a=4；&lt;br/&gt;c=++a +2；//先把a+1，a=5再用a+1以后的值去运算，c=5+2；&lt;/p&gt;&lt;p&gt;2、赋值运算&lt;br/&gt;=   +=  -=   *=   /=  %=&lt;br/&gt;+=：a+=b；相当于a=a+b；但是前者的运算效率要比后者快，所以推荐使用+=的写法；&lt;br/&gt;3、关系运算&lt;br/&gt;==、 ！=、&amp;gt;、&amp;lt;、&amp;gt;=、&amp;lt;=&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; 关系运算符，运算之后的结果，只能是Boolean类型；&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; 判断一个数字是否处于一个区间，必须用&amp;amp;&amp;amp;链接；&lt;br/&gt;a&amp;lt;10 &amp;amp;&amp;amp; a&amp;gt;0 √ ; 10&amp;gt;a&amp;gt;0 x&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; ===:严格等于；要求不但类型要相同，值也必须相同；类型不同结果直接为false，类型相同，再进行下一步判断；&lt;br/&gt;== ：等于。类型相同，同===一样，类型不同时，会先尝试用Number将两边转为数字，然后再进行判断。&lt;br/&gt;但是，有个别特例： Null==false x ；Null==Undefined √&lt;br/&gt;！=：不等、！== 不全等&lt;/p&gt;&lt;p&gt;4、条件运算符(多目运算)&lt;br/&gt;a&amp;gt;b?true:false &lt;/p&gt;&lt;p&gt;有两个重要符号： ？ 和 ：&lt;br/&gt;当？前面部分，运算结果为true时，执行：前面的代码；&lt;br/&gt;当？前面部分，运算结果为false时，执行：后面的代码；&lt;/p&gt;&lt;p&gt;冒号两边可以为数值，则整个式子可用于赋值。Var a= 1&amp;lt;2?1:2&lt;br/&gt;冒号两边可以为代码块，将直接执行代码。1&amp;lt;2?alert(1):alert(2);&lt;/p&gt;&lt;p&gt;多目运算符可以多层嵌套。var a = 1&amp;lt;2?alert(1):(1&amp;gt;0?4:5)&lt;/p&gt;&lt;p&gt;5、 位运算符、 逻辑运算符&lt;br/&gt;&amp;amp;、|、~ &amp;amp;&amp;amp;与、||或、！非&lt;/p&gt;&lt;p&gt;&amp;amp;&amp;amp; 两边都成立，结果为true&lt;/p&gt;&lt;p&gt;|| 两边有任意一个成立，结果为true&lt;br/&gt;6、运算符的优先级&lt;br/&gt;（）小括号最高&lt;br/&gt;！ ++ -- &lt;br/&gt;* / %&lt;br/&gt;+ -&lt;br/&gt;&amp;lt; &amp;gt; &amp;gt;= &amp;lt;=&lt;br/&gt;== !=&lt;br/&gt;&amp;amp;&amp;amp; //与或同时存在时，&amp;amp;&amp;amp;比|| 高&lt;br/&gt;||&lt;br/&gt;= += -= *= /= 最低的是各种赋值&lt;/p&gt;
&lt;h3&gt;六、JavaScript  中的条件语句&lt;/h3&gt;
&lt;h4&gt;在 JavaScript 中，我们可使用以下条件语句：&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;if 语句&lt;/strong&gt; - 只有当指定条件为 true 时，使用该语句来执行代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;if...else 语句&lt;/strong&gt; - 当条件为 true 时执行代码，当条件为 false 时执行其他代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;if...else if....else 语句&lt;/strong&gt;- 使用该语句来选择多个代码块之一来执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;switch 语句&lt;/strong&gt; - 使用该语句来选择多个代码块之一来执行&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;1、If 语句     只有当指定条件为 true 时，该语句才会执行代码。&lt;/h4&gt;
&lt;p&gt;if 的（）中的判断条件，支持的情况：&lt;br/&gt;  ①Boolean：true为真；false为假；&lt;br/&gt;  ②String：空字符串为假&lt;br/&gt;  ③Number：0为假；一切非零数字为真；&lt;br/&gt;  ④null/Undefined/NaN:全为假；&lt;br/&gt;  ⑤object：全为真；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;如果时间早于 20:00，会获得问候 &quot;Good day&quot;。&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;myFunction()&quot;&amp;gt;点击这里&amp;lt;/button&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(){
    var x=&quot;&quot;&lt;span&gt;;
    var time=new&lt;span&gt; Date().getHours();
    if (time&amp;lt;20&lt;span&gt;){
        x=&quot;Good day&quot;&lt;span&gt;;
    }
    document.getElementById(&quot;demo&quot;).innerHTML=&lt;span&gt;x;
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2、使用 if....else 语句在条件为 true 时执行代码，在条件为 false 时执行其他代码。&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击这个按钮，获得基于时间的问候。&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;myFunction()&quot;&amp;gt;点击这里&amp;lt;/button&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(){
    var x=&quot;&quot;&lt;span&gt;;
    var time=new&lt;span&gt; Date().getHours();
    if (time&amp;lt;20&lt;span&gt;){
         x=&quot;Good day&quot;&lt;span&gt;;
     }
    else&lt;span&gt;{
         x=&quot;Good evening&quot;&lt;span&gt;;
     }
    document.getElementById(&quot;demo&quot;).innerHTML=&lt;span&gt;x;
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;3、使用 if....else if...else 语句来选择多个代码块之一来执行。&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
var d = new&lt;span&gt; Date();
var time =&lt;span&gt; d.getHours();
if (time&amp;lt;10&lt;span&gt;)
{
    document.write(&quot;&amp;lt;b&amp;gt;早上好&amp;lt;/b&amp;gt;&quot;&lt;span&gt;);
}
else if (time&amp;gt;=10 &amp;amp;&amp;amp; time&amp;lt;16&lt;span&gt;)
{
    document.write(&quot;&amp;lt;b&amp;gt;今天好&amp;lt;/b&amp;gt;&quot;&lt;span&gt;);
}
else&lt;span&gt;
{
    document.write(&quot;&amp;lt;b&amp;gt;晚上好!&amp;lt;/b&amp;gt;&quot;&lt;span&gt;);
}
&amp;lt;/script&amp;gt;
&amp;lt;p&amp;gt;&lt;span&gt;
这个例子演示了 if..else if...else&lt;span&gt; 语句。
&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;4、JavaScript &lt;span class=&quot;color_h1&quot;&gt;switch 语句&lt;/span&gt;&lt;/h4&gt;
&lt;p class=&quot;intro&quot;&gt;switch 语句用于基于不同的条件来执行不同的动作。&lt;/p&gt;
&lt;p class=&quot;intro&quot;&gt;工作原理：首先设置表达式 &lt;em&gt;n&lt;/em&gt;（通常是一个变量）。随后表达式的值会与结构中的每个 case 的值做比较。如果存在匹配，则与该 case 关联的代码块会被执行。请使用 &lt;strong&gt;break &lt;/strong&gt;来阻止代码自动地向下一个 case 运行。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击下面的按钮来显示今天是周几：&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;myFunction()&quot;&amp;gt;点击这里&amp;lt;/button&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(){
    var&lt;span&gt; x;
    var d=new&lt;span&gt; Date().getDay();
    switch&lt;span&gt; (d){
          case 0:x=&quot;今天是星期日&quot;&lt;span&gt;;
        break&lt;span&gt;;
         case 1:x=&quot;今天是星期一&quot;&lt;span&gt;;
        break&lt;span&gt;;
          case 2:x=&quot;今天是星期二&quot;&lt;span&gt;;
        break&lt;span&gt;;
        case 3:x=&quot;今天是星期三&quot;&lt;span&gt;;
            break&lt;span&gt;;
          case 4:x=&quot;今天是星期四&quot;&lt;span&gt;;
        break&lt;span&gt;;
          case 5:x=&quot;今天是星期五&quot;&lt;span&gt;;
        break&lt;span&gt;;
          case 6:x=&quot;今天是星期六&quot;&lt;span&gt;;
        break&lt;span&gt;;&lt;br/&gt;　　　　　&lt;span&gt;　default：x=&quot;未知错误&quot;；&lt;br/&gt;&lt;span&gt;　　　　　break；&lt;span&gt;&lt;br/&gt;}
    document.getElementById(&quot;demo&quot;).innerHTML=&lt;span&gt;x;
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;七、JavaScript 中的循环结构&lt;/h3&gt;
&lt;h4&gt;1、【while(){}循环结构的步骤】&lt;/h4&gt;
&lt;p&gt; 1、声明循环变量&lt;br/&gt; 2、判断循环条件&lt;br/&gt; 3、执行循环体操作&lt;br/&gt; 4、更新循环变量&lt;br/&gt; 然后循环执行2-4，直到条件不成立时跳出循环。&lt;br/&gt; while循环()中的表达式，运算结果可以是多种类型，但是最终都会转为真假，转换规则同if结构&lt;br/&gt; （1）、boolean类型：true为真，false为假&lt;br/&gt; （2）、string类型：所有非空字符串为真，空字符串为假&lt;br/&gt; （3）、number类型：一切非零数字为真，零为假&lt;br/&gt; （4）、null、undefined、NaN：全为假&lt;br/&gt; （5）、object类型：全为真。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
            var num=1;  //声明循环变量
            while (num&amp;lt;=10){  //判断循环条件
                document.write(num+&quot;&amp;lt;br /&amp;gt;&quot;);//执行循环体操作
                num++;  //更新循环变量
            }
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt; 【 while循环与do-while循环的区别:】：&lt;/h4&gt;
&lt;p&gt; while循环是先判断再循环;  &lt;/p&gt;
&lt;p&gt; do-while循环是先执行再判断,即便是条件不成立,该循环也最少执行一次.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
var num=10&lt;span&gt;;
 do&lt;span&gt;{
 document.write(num+&quot;&amp;lt;br /&amp;gt;&quot;&lt;span&gt;);
 num--&lt;span&gt;;
 }
 while(num&amp;gt;=0);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2、【for(){}循环结构的步骤】&lt;/h4&gt;
&lt;p&gt;1、for循环有三个表达式：&lt;br/&gt; ① 声明循环变量;&lt;br/&gt; ② 判断循环条件;&lt;br/&gt; ③ 更新循环变量;&lt;br/&gt; 三个表达式之间用;分隔开,三个表达式可以省略,但是两个分号不能省略.&lt;br/&gt; 2、for循环的执行特点:先判断再执行，和while相同；&lt;br/&gt; 执行顺序：1、初始语句 2、执行条件是否符合？ 3、循环体 4、增加增量 ；&lt;br/&gt; 3、for循环三个表达式均可以由多部分组成，第二部分多个判断条件用&amp;amp;&amp;amp; 、||连接，其他部分可以用，连接。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击按钮循环代码5次。&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;myFunction()&quot;&amp;gt;点击这里&amp;lt;/button&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(){
    var x=&quot;&quot;&lt;span&gt;;
    for (var i=0;i&amp;lt;5;i++&lt;span&gt;){
        x=x + &quot;该数字为 &quot; + i + &quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
    }
    document.getElementById(&quot;demo&quot;).innerHTML=&lt;span&gt;x;
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;八、JacaScript 中的函数&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一、JacaScript 函数&lt;/strong&gt;：函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、函数的声明及调用：&lt;/strong&gt;&lt;br/&gt; 1、函数的标准声明格式：&lt;br/&gt; function 函数名（参数一，参数二，...）{&lt;br/&gt; //函数体代码&lt;br/&gt; return 返回值；&lt;br/&gt; }&lt;br/&gt; 函数的调用：&lt;br/&gt; ① 直接调用：函数名加（参数一的值，参数二的值,.......)；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;本例调用的函数会执行一个计算，然后返回结果：&amp;lt;/p&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(a,b){
    return a*&lt;span&gt;b;
}
document.getElementById(&quot;demo&quot;).innerHTML=myFunction(4,3&lt;span&gt;);
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; ② 事件调用：HTML标签中，使用事件名=&quot;函数名（）&quot;&lt;br/&gt;  &amp;lt;button onclick=&quot;saySth('hah ha','yellow')&quot;&amp;gt;点击按钮，打印内容&amp;lt;/button&amp;gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;    
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击这个按钮，来调用带参数的函数。&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;myFunction('Harry Potter','Wizard')&quot;&amp;gt;点击这里&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
function&lt;span&gt; myFunction(name,job){
    alert(&quot;Welcome &quot; + name + &quot;, the &quot; +&lt;span&gt; job);
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、函数的注意事项：&lt;br/&gt; ① 函数必须要符合小驼峰法则！！！（首字母小写，之后每个人单词首字母大写）&lt;br/&gt; ② 函数名后面的（）中，可以有参数，也可以没有参数。分别称为有参函数和无参函数；&lt;br/&gt; ③ 声明函数时的参数列表，称为型参列表，形式参数。（变量的名字）&lt;br/&gt; function saySth(str,color){}&lt;br/&gt; 调用函数时的参数列表，称为实参列表，实际参数。（变量的赋值）&lt;br/&gt; saySth(&quot;哈哈哈&quot;,&quot;red&quot;);&lt;br/&gt; ④ 函数的形参列表个数和实参列表个数没有实际关系。&lt;br/&gt; 函数参数的个数，取决于实参列表。&lt;br/&gt; 如果实参列表的个数&amp;lt;形参列表,则未赋值的形参，将为Undefined。&lt;br/&gt; ⑤ 函数可以有返回值，使用return返回结果；&lt;br/&gt; 调回函数时，可以使用一个变量接受函数的返回结果。如果函数没有返回值，则接受的结果为undefined；&lt;br/&gt; function func(){&lt;br/&gt;   return = &quot;hahaha&quot;;&lt;br/&gt; }&lt;br/&gt;  var num = func()；//num = &quot;hahaha&quot;&lt;br/&gt; ⑥ 函数变量的作用域：&lt;br/&gt; 在函数中，使用var声明的变量，为局部变量，只能在函数内部访问；&lt;br/&gt; 不使用var声明的变量，为全局变量，在函数外边也能访问；&lt;br/&gt; 函数的形象列表，默认为函数的局部变量，只能在函数内部使用；&lt;br/&gt; ⑦ 函数的声明与函数的调用，没有先后之分。即，可以在声明函数之前，调用函数。&lt;br/&gt; func（）；//声明func之前调用也是可以的。&lt;br/&gt; function func(){}；&lt;/p&gt;
&lt;h4&gt;【匿名函数的声明和使用】：&lt;/h4&gt;
&lt;p&gt;1、声明一个匿名函数直接赋值给某一个事件；&lt;br/&gt;     window.onload = function(){} ；&lt;br/&gt;2、使用匿名函数表达式；将匿名函数，赋值给一个变量。&lt;br/&gt; 声明：var func = function(){}&lt;br/&gt; 调用：func()；&lt;br/&gt; 注意：使用匿名函数表达时，函数的调用语句，必须放在函数声明语句之后！！！（与普通函数的区别！！！）&lt;br/&gt;3、自执行函数&lt;br/&gt; ① !function(){}();//可以使用多种运算符开头，单一版用！；&lt;br/&gt; !function(形参列表){}(实参列表)；&lt;br/&gt; ② (function(){}());//使用()将函数及函数后的括号包起来；&lt;br/&gt; ③ (function(){})();//使用()值包裹函数部分；&lt;br/&gt; 三种写法的特点：&lt;br/&gt; ① 第一种使用!开头，结构清晰，不容易混乱，推荐使用；&lt;br/&gt; ② 第二种写法能够表明匿名函数与调用的()为一个整体，官方推荐使用；&lt;br/&gt; ③ 第三种无法表明函数之后的()的整体性，不推荐使用；&lt;/p&gt;
&lt;h3&gt;九、JavaScript  中的 BOM &lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;BOM:&lt;/strong&gt;浏览器对象模型（&lt;strong&gt;B&lt;/strong&gt;rowser &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;M&lt;/strong&gt;odel (BOM)，浏览器对象模型 (BOM) 使 JavaScript 有能力与浏览器&quot;对话&quot;。&lt;/p&gt;
&lt;p&gt;由于现代浏览器已经（几乎）实现了 JavaScript 交互性方面的相同方法和属性，因此常被认为是 BOM 的方法和属性。&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;1、【location对象】：&lt;/strong&gt;取到浏览器的URL地址信息。&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt; 使用location提供的方法跳转页面的方式:&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;    
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击这个按钮，实现页面的跳转。&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;assign()&quot;&amp;gt;assign&amp;lt;/button&amp;gt;
             &amp;lt;button onclick=&quot;replace()&quot;&amp;gt;replace&amp;lt;/button&amp;gt;
             &amp;lt;button onclick=&quot;reload()&quot;&amp;gt;repload&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
　　　　　　　　   //加载新的文档，加载之后，可以回退。
                
                function&lt;span&gt; assign(){
                    location.assign(&quot;http://www.baidu.com&quot;&lt;span&gt;);
                }
                
                //使用新的文档替换当前文档。替换以后，不能回退。
                
                function&lt;span&gt; replace(){
                    location.replace(&quot;http://www.baidu.com&quot;&lt;span&gt;);
                }
                function&lt;span&gt; reload(){
                    /*从新加载当前文档。刷新页面
                     *reload():在本地刷新当前页面，相当于F5
                     *reload(true):强制刷新，从服务器端从新加载页面，相当于ctrl+F5
                     */&lt;span&gt;
                    location.reload();
                }
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2、【history浏览历史】&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;    
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击这个按钮，实现页面的历史记录。&amp;lt;/p&amp;gt;
　　　　　　　　&amp;lt;button onclick=&quot;back()&quot;&amp;gt;后退一步&amp;lt;/button&amp;gt;
              &amp;lt;button onclick=&quot;forward()&quot;&amp;gt;前进一步&amp;lt;/button&amp;gt;
              &amp;lt;button onclick=&quot;go()&quot;&amp;gt;&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
　　　　　　　　　function&lt;span&gt; back(){
                    history.back();//后退按钮
&lt;span&gt;                }
                function&lt;span&gt; forward(){
                    history.forward();//前进按钮
&lt;span&gt;                }
                function&lt;span&gt; go(){
                    /* 跳转到浏览历史的任意页面
                     * 0表示当前页面-1表示后一个页面（back），1表示前一页（forward）
                     */&lt;span&gt;
                    history.go();//
&lt;span&gt;                }
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;3、【window对象】：在window对象中的所有方法和属性，均可以省略window关键字；window.alert();--&amp;gt; alert(); √&lt;/h4&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&quot;Apple-tab-span&quot;&gt;window对象的常用方法：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 1、alert()：弹出一个警告提示框：&lt;br/&gt; 2、prompt()：弹窗接受用户的输入：&lt;br/&gt; 3、confirm():弹出带有&quot;确定&quot;&quot;取消&quot;按钮的对话框，点击按钮返回true/false&lt;br/&gt; 4、close():关闭当前浏览器窗口。在个别浏览器中，只能关闭在当前脚本新打开的页面(使用超链接、window.open()等方式打开的页面)&lt;br/&gt; 5、打开一个新窗口&lt;br/&gt;      参数一：新窗口的地址；&lt;br/&gt;      参数二：新窗口的名字，并没有什么作用；&lt;br/&gt;      参数三：新窗口的各种属性设置，&quot;属性1=值1，属性2=值2,属性3=值3，属性4=值4&quot;；&lt;br/&gt; 6、setTimeout：设置延时执行，只会执行一次；&lt;br/&gt;      setInterval：设置定时器，每隔n毫秒执行一次；&lt;br/&gt;      接受两个参数：需要执行的function、毫秒数；&lt;/p&gt;&lt;p&gt; 7、clearTimeout：清除延时器；&lt;br/&gt;    clearInterval：清除定时器；&lt;br/&gt;    * 使用方法:设置延时器或定时器时，可以使用变量接受定时器ID；&lt;br/&gt;    * var id = setInterval；&lt;br/&gt;    * 调用clearIntertval，将id传入，即可清除对应的定时器；&lt;br/&gt;    * clearIntertval(id);&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;    
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;点击这个按钮，实现window对象方法。&amp;lt;/p&amp;gt;&lt;br/&gt;　　　　　　　　　　　　&amp;lt;button onclick=&quot;close()&quot;&amp;gt;window.close&amp;lt;/button&amp;gt;
                    &amp;lt;button onclick=&quot;lopen()&quot;&amp;gt;window.open&amp;lt;/button&amp;gt;   
                    &amp;lt;button onclick=&quot;setTimeout1()&quot;&amp;gt;setTimeout   设置延时器&amp;lt;/button&amp;gt;
                    &amp;lt;button onclick=&quot;setInterval1()&quot;&amp;gt;setInterval 设置定时器&amp;lt;/button&amp;gt;
                    &amp;lt;button onclick=&quot;clearsetInterval1()&quot;&amp;gt;清除延时器&amp;lt;/button&amp;gt;&lt;br/&gt;&amp;lt;script&amp;gt;
　　　　　　　　　function&lt;span&gt; close(){
                    window.close();
                }
                function&lt;span&gt; lopen(){
                    window.open(&quot;http://www.baidu.com&quot;,&quot;baidu&quot;,&quot;width=1000px,height=600px,left=100px,top=50px&quot;&lt;span&gt;);
                }
                
                
                var  setTimeoutID = 0&lt;span&gt;;
                function&lt;span&gt; setTimeout1(){
                    
                    //setTimeout(function(){console.log(&quot;延时器成功执行&quot;);},3000);
&lt;span&gt;                    
                        setTimeoutID = setTimeout(lopen,3000&lt;span&gt;);
                        
                }    
                function&lt;span&gt; clearTimeout1(){
                    
                    clearTimeout(setTimeoutID);
                    
                }&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;十、JavaScript中的——DOM&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、HTML DOM (文档对象模型)：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML DOM&lt;/strong&gt; 模型被构造为&lt;strong&gt;对象&lt;/strong&gt;的树：&lt;/p&gt;
&lt;div class=&quot;example&quot;&gt;
&lt;p class=&quot;example_head&quot;&gt;&lt;strong&gt;HTML DOM 树：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;example_code notranslate&quot;&gt;&lt;img src=&quot;http://www.runoob.com/images/pic_htmltree.gif&quot; alt=&quot;DOM HTML tree&quot; width=&quot;486&quot; height=&quot;266&quot; border=&quot;0&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;通过可编程的对象模型，JavaScript 获得了足够的能力来创建动态的 HTML。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JavaScript 能够改变页面中的所有 HTML 元素&lt;/li&gt;
&lt;li&gt;JavaScript 能够改变页面中的所有 HTML 属性&lt;/li&gt;
&lt;li&gt;JavaScript 能够改变页面中的所有 CSS 样式&lt;/li&gt;
&lt;li&gt;JavaScript 能够对页面中的所有事件做出反应&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;【DOM树节点】&lt;br/&gt; DOM节点分为三大类： 元素节点、 属性节点、 文本节点；&lt;br/&gt; 文本节点、属性节点属于元素节点的子节点。操作时，均需要先取到元素节点，再操作子节点；&lt;br/&gt; 可以使用getElement系列方法，取到元素节点。&lt;br/&gt;【查看元素节点】&lt;br/&gt;      getElementById：通过id取到唯一节点。如果ID重名，只能取到第一个。     例如：   var x=document.getElementById(&quot;xxx&quot;);&lt;br/&gt;      getElementsByName()： 通过name属性 。　　　　　　　　　　　　　　例如：   var x=document.getElementsByClassName(&quot;xxx&quot;);&lt;br/&gt;      getElementsByTagName()： 通过标签名 。　　　　　　　　　　　　　   例如：   var y=document.getElementsByTagName(&quot;p&quot;);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、JavaScript &lt;span class=&quot;color_h1&quot;&gt;HTML DOM - 改变 HTML：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、改变 HTML 输出流：&lt;/p&gt;
&lt;p&gt;JavaScript 能够创建动态的 HTML 内容：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今天的日期是： Sun Oct 15 2017 22:53:40 GMT+0800 (中国标准时间)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 JavaScript 中，document.write() 可用于直接向 HTML 输出流写内容。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt; &amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;script&amp;gt;&lt;span&gt;
document.write(Date());
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、改变 HTML 内容&lt;/p&gt;
&lt;p&gt;修改 HTML 内容的最简单的方法时使用 innerHTML 属性。&lt;/p&gt;
&lt;p&gt;如需改变 HTML 元素的内容，请使用这个语法：&lt;/p&gt;
&lt;p&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;).innerHTML=&lt;em&gt;新的 HTML&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本例改变了 &amp;lt;p&amp;gt;元素的内容：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p id=&quot;p1&quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&quot;p1&quot;).innerHTML=&quot;新文本!&quot;&lt;span&gt;;
&amp;lt;/script&amp;gt;
&amp;lt;p&amp;gt;以上段落通过脚本修改文本。&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3、改变 HTML 属性&lt;/p&gt;
&lt;p&gt;如需改变 HTML 元素的属性，请使用这个语法：&lt;/p&gt;
&lt;p&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;).&lt;em&gt;attribute=新属性值&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本例改变了 &amp;lt;img&amp;gt; 元素的 src 属性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;img id=&quot;image&quot; src=&quot;smiley.gif&quot; width=&quot;160&quot; height=&quot;120&quot;&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&quot;image&quot;).src=&quot;landscape.jpg&quot;&lt;span&gt;;
&amp;lt;/script&amp;gt;
&amp;lt;p&amp;gt;原图片为 smiley.gif,脚本将图片修改为 landscape.jpg&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、JavaScript &lt;span class=&quot;color_h1&quot;&gt;HTML DOM - 改变CSS&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、改变 HTML 样式&lt;/p&gt;
&lt;p&gt;如需改变 HTML 元素的样式，请使用这个语法：&lt;/p&gt;
&lt;p&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;).style.&lt;em&gt;property&lt;/em&gt;=&lt;em&gt;新样式&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下面的例子会改变 &amp;lt;p&amp;gt; 元素的样式：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p id=&quot;p1&quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&amp;lt;p id=&quot;p2&quot;&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&quot;p2&quot;).style.color=&quot;blue&quot;&lt;span&gt;;
document.getElementById(&quot;p2&quot;).style.fontFamily=&quot;Arial&quot;&lt;span&gt;;
document.getElementById(&quot;p2&quot;).style.fontSize=&quot;larger&quot;&lt;span&gt;;
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、使用事件&lt;/p&gt;
&lt;p&gt;HTML DOM 允许我们通过触发事件来执行代码。&lt;/p&gt;
&lt;p&gt;比如以下事件：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;元素被点击。&lt;/li&gt;
&lt;li&gt;页面加载完成。&lt;/li&gt;
&lt;li&gt;输入框被修改。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h1 id=&quot;id1&quot;&amp;gt;我的标题 1&amp;lt;/h1&amp;gt;
&amp;lt;button type=&quot;button&quot; onclick=&quot;document.getElementById('id1').style.color='red'&quot;&amp;gt;&lt;span&gt;
点我!&amp;lt;/button&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、JavaScript &lt;span class=&quot;color_h1&quot;&gt;HTML DOM 事件&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HTML DOM 使 JavaScript 有能力对 HTML 事件做出反应。&lt;/p&gt;
&lt;p&gt;我们可以在事件发生时执行 JavaScript，比如当用户在 HTML 元素上点击时。&lt;/p&gt;
&lt;p&gt;如需在用户点击某个元素时执行代码，请向一个 HTML 事件属性添加 JavaScript 代码：&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;
&lt;p&gt;onclick=&lt;em&gt;JavaScript&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;HTML 事件的例子：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;当用户点击鼠标时&lt;/li&gt;
&lt;li&gt;当网页已加载时&lt;/li&gt;
&lt;li&gt;当图像已加载时&lt;/li&gt;
&lt;li&gt;当鼠标移动到元素上时&lt;/li&gt;
&lt;li&gt;当输入字段被改变时&lt;/li&gt;
&lt;li&gt;当提交 HTML 表单时&lt;/li&gt;
&lt;li&gt;当用户触发按键时&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt; 1、HTML 事件属性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; 如需向 HTML 元素分配 事件，您可以使用事件属性。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt; 
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; 
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; 
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击按钮执行 &amp;lt;em&amp;gt;displayDate()&amp;lt;/em&amp;gt; 函数.&amp;lt;/p&amp;gt;
&amp;lt;button onclick=&quot;displayDate()&quot;&amp;gt;点这里&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; displayDate(){
    document.getElementById(&lt;/span&gt;&quot;demo&quot;).innerHTML=&lt;span&gt;Date();
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;2、使用 HTML DOM 来分配事件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;HTML DOM 允许您使用 JavaScript 来向 HTML 元素分配事件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;点击按钮执行 &amp;lt;em&amp;gt;displayDate()&amp;lt;/em&amp;gt; 函数.&amp;lt;/p&amp;gt;
&amp;lt;button id=&quot;myBtn&quot;&amp;gt;点这里&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&lt;/span&gt;&quot;myBtn&quot;).onclick=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){displayDate()};
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; displayDate(){
    document.getElementById(&lt;/span&gt;&quot;demo&quot;).innerHTML=&lt;span&gt;Date();
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;3、onload 和 onunload 事件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;      onload 和 onunload 事件会在用户进入或离开页面时被触发。&lt;/p&gt;
&lt;p&gt;      onload 事件可用于检测访问者的浏览器类型和浏览器版本，并基于这些信息来加载网页的正确版本。&lt;/p&gt;
&lt;p&gt;      onload 和 onunload 事件可用于处理 cookie。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body onload=&quot;checkCookies()&quot;&amp;gt;

&amp;lt;script&amp;gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; checkCookies(){
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (navigator.cookieEnabled==&lt;span&gt;true&lt;/span&gt;&lt;span&gt;){
        alert(&lt;/span&gt;&quot;Cookies 可用&quot;&lt;span&gt;)
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
        alert(&lt;/span&gt;&quot;Cookies 不可用&quot;&lt;span&gt;)
    }
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;p&amp;gt;弹窗-提示浏览器 cookie 是否可用。&amp;lt;/p&amp;gt;
    
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4、onchange 事件&lt;/p&gt;
&lt;p&gt;    onchange 事件常结合对输入字段的验证来使用。&lt;/p&gt;
&lt;p&gt;    下面是一个如何使用 onchange 的例子。当用户改变输入字段的内容时，会调用 upperCase() 函数。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; myFunction(){
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; x=document.getElementById(&quot;fname&quot;&lt;span&gt;);
    x.value&lt;/span&gt;=&lt;span&gt;x.value.toUpperCase();
}
&lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;&lt;span&gt;

输入你的名字: &lt;/span&gt;&amp;lt;input type=&quot;text&quot; id=&quot;fname&quot; onchange=&quot;myFunction()&quot;&amp;gt;
&amp;lt;p&amp;gt;当你离开输入框后，函数将被触发，将小写字母转为大写字母。&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;五、JavaScript &lt;span class=&quot;color_h1&quot;&gt;HTML DOM EventListener&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span class=&quot;color_h1&quot;&gt;一、&lt;/span&gt;&lt;/strong&gt;addEventListener() 方法：在用户点击按钮时触发监听事件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;addEventListener() 方法用于向指定元素添加事件句柄。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;addEventListener() 方法添加的事件句柄不会覆盖已存在的事件句柄。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可以向一个元素添加多个事件句柄。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可以向同个元素添加多个同类型的事件句柄，如：两个 &quot;click&quot; 事件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可以向任何 DOM 对象添加事件监听，不仅仅是 HTML 元素。如： window 对象。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;addEventListener() 方法可以更简单的控制事件（冒泡与捕获）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当你使用 addEventListener() 方法时, JavaScript 从 HTML 标记中分离开来，可读性更强， 在没有控制HTML标记时也可以添加事件监听。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可以使用 removeEventListener() 方法来移除事件的监听。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;二、&lt;/span&gt;语法&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;element&lt;/em&gt;.addEventListener(&lt;em&gt;event, function, useCapture&lt;/em&gt;);&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;第一个参数是事件的类型 (如 &quot;click&quot; 或 &quot;mousedown&quot;).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第二个参数是事件触发后调用的函数。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第三个参数是个布尔值用于描述事件是冒泡还是捕获。该参数是可选的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;三、&lt;/span&gt;向原元素添加事件句柄&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;该实例使用 addEventListener() 方法在按钮中添加点击事件。 &amp;lt;/p&amp;gt;
&amp;lt;button id=&quot;myBtn&quot;&amp;gt;点我&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&lt;/span&gt;&quot;myBtn&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    alert(&lt;/span&gt;&quot;Hello World!&quot;&lt;span&gt;);
});
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;四、向同一个元素中添加多个事件句柄&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;addEventListener() 方法允许向同个元素添加多个事件，且不会覆盖已存在的事件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;该实例使用 addEventListener() 方法向同个按钮中添加两个点击事件。&amp;lt;/p&amp;gt;
&amp;lt;button id=&quot;myBtn&quot;&amp;gt;点我&amp;lt;/button&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;var&lt;/span&gt; x = document.getElementById(&quot;myBtn&quot;&lt;span&gt;);
x.addEventListener(&lt;/span&gt;&quot;click&quot;&lt;span&gt;, myFunction);
x.addEventListener(&lt;/span&gt;&quot;click&quot;&lt;span&gt;, someOtherFunction);
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; myFunction() {
    alert (&lt;/span&gt;&quot;Hello World!&quot;&lt;span&gt;)
}
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; someOtherFunction() {
    alert (&lt;/span&gt;&quot;函数已执行!&quot;&lt;span&gt;)
}
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;五、向 Window 对象添加事件句柄&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;addEventListener() 方法允许你在 HTML DOM 对象添加事件监听， HTML DOM 对象如： HTML 元素, HTML 文档, window 对象。或者其他支出的事件对象如: xmlHttpRequest 对象。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;实例在 window 对象中使用 addEventListener() 方法。&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;尝试重置浏览器的窗口触发 &quot;resize&quot; 事件句柄。&amp;lt;/p&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
window.addEventListener(&lt;/span&gt;&quot;resize&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    document.getElementById(&lt;/span&gt;&quot;demo&quot;).innerHTML =&lt;span&gt; Math.random();
});
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;六、传递参数&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;当传递参数值时，使用&quot;匿名函数&quot;调用带参数的函数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;实例演示了在使用 addEventListener() 方法时如何传递参数。&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;点击按钮执行计算。&amp;lt;/p&amp;gt;
&amp;lt;button id=&quot;myBtn&quot;&amp;gt;点我&amp;lt;/button&amp;gt;
&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;var&lt;/span&gt; p1 = 5&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; p2 = 7&lt;span&gt;;
document.getElementById(&lt;/span&gt;&quot;myBtn&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    myFunction(p1, p2);
});
&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; myFunction(a, b) {
    &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; result = a *&lt;span&gt; b;
    document.getElementById(&lt;/span&gt;&quot;demo&quot;).innerHTML =&lt;span&gt; result;
}
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; 七、事件捕获和事件冒泡：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、事件冒泡&lt;br/&gt; 当某DOM元素触发一种事件时，会从当前节点开始，逐级往上触发其祖先节点的同类型事件，直到DOM根节点；&lt;br/&gt; &amp;gt;&amp;gt;&amp;gt;什么情况下会产生事件冒泡？&lt;br/&gt; ①DOM0模型绑定事件，全部都是冒泡；&lt;br/&gt; ②IE8之前，使用attachEvent()绑定的事件，全部是冒泡；&lt;br/&gt; ③其他浏览器，使用addEventLinstener()添加事件，当第三个参数省略或者为false时，为事件冒泡；&lt;/p&gt;
&lt;p&gt; 2、事件捕获：当某DOM元素触发一种事件时，会从文档根节点开始，逐渐向下触发其祖先节点的同类型事件，直到 该节点自身；&lt;br/&gt; &amp;gt;&amp;gt;&amp;gt;什么情况下会产生事件捕获？&lt;br/&gt; ①使用addEventLinstener()添加事件，当第三个参数为true时，为事件捕获；&lt;/p&gt;
&lt;p&gt;3、addEventListener() 方法可以指定 &quot;useCapture&quot; 参数来设置传递类型：&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;     addEventListener(&lt;em&gt;event&lt;/em&gt;, &lt;em&gt;function&lt;/em&gt;, &lt;span class=&quot;marked&quot;&gt;&lt;em&gt;useCapture&lt;/em&gt;);&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;     默认值为 false, 即冒泡传递，当值为 true 时, 事件使用捕获传递。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;&lt;span&gt;
div {
    background&lt;/span&gt;-&lt;span&gt;color: coral;
    border: 1px solid;
    padding: 50px;
}
&lt;/span&gt;&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;实例演示了在添加不同事件监听时，冒泡与捕获的不同。&amp;lt;/p&amp;gt;
&amp;lt;div id=&quot;myDiv&quot;&amp;gt;
    &amp;lt;p id=&quot;myP&quot;&amp;gt;点击段落，我是冒泡。&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;div id=&quot;myDiv2&quot;&amp;gt;
    &amp;lt;p id=&quot;myP2&quot;&amp;gt;点击段落，我是捕获。 &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&lt;/span&gt;&quot;myP&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 P 元素!&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myDiv&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot; 你点击了 DIV 元素 !&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myP2&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 P2 元素!&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myDiv2&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 DIV2 元素 !&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;六、removeEventListener() 方法&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;removeEventListener() 方法移除由 addEventListener() 方法添加的事件句柄:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;&lt;span&gt;
div {
    background&lt;/span&gt;-&lt;span&gt;color: coral;
    border: 1px solid;
    padding: 50px;
}
&lt;/span&gt;&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;实例演示了在添加不同事件监听时，冒泡与捕获的不同。&amp;lt;/p&amp;gt;
&amp;lt;div id=&quot;myDiv&quot;&amp;gt;
    &amp;lt;p id=&quot;myP&quot;&amp;gt;点击段落，我是冒泡。&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;div id=&quot;myDiv2&quot;&amp;gt;
    &amp;lt;p id=&quot;myP2&quot;&amp;gt;点击段落，我是捕获。 &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;&lt;span&gt;
document.getElementById(&lt;/span&gt;&quot;myP&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 P 元素!&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myDiv&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot; 你点击了 DIV 元素 !&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myP2&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 P2 元素!&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
document.getElementById(&lt;/span&gt;&quot;myDiv2&quot;).addEventListener(&quot;click&quot;, &lt;span&gt;function&lt;/span&gt;&lt;span&gt;() {
    alert(&lt;/span&gt;&quot;你点击了 DIV2 元素 !&quot;&lt;span&gt;);
}, &lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;七、JavaScript &lt;span class=&quot;color_h1&quot;&gt;HTML DOM 元素(节点)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span class=&quot;color_h1&quot;&gt;1、&lt;/span&gt;&lt;/strong&gt;创建新的 HTML 元素&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div id=&quot;div1&quot;&amp;gt;
&amp;lt;p id=&quot;p1&quot;&amp;gt;这是一个段落。&amp;lt;/p&amp;gt;
&amp;lt;p id=&quot;p2&quot;&amp;gt;这是另一个段落。&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;var&lt;/span&gt; para=document.createElement(&quot;p&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; node=document.createTextNode(&quot;这是一个新段落。&quot;&lt;span&gt;);
para.appendChild(node);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; element=document.getElementById(&quot;div1&quot;&lt;span&gt;);
element.appendChild(para);
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这段代码创建新的&amp;lt;p&amp;gt; 元素：&lt;/p&gt;
&lt;div class=&quot;code notranslate&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;var para=document.createElement(&quot;p&quot;);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;如需向 &amp;lt;p&amp;gt; 元素添加文本，您必须首先创建文本节点。这段代码创建了一个文本节点：&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;var node=document.createTextNode(&quot;这是一个新段落。&quot;);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;然后您必须向 &amp;lt;p&amp;gt; 元素追加这个文本节点：&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;
&lt;p&gt;para.appendChild(node);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;最后您必须向一个已有的元素追加这个新元素。&lt;/p&gt;
&lt;p&gt;这段代码找到一个已有的元素：&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;var element=document.getElementById(&quot;div1&quot;);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;以下代码在已存在的元素后添加新元素：&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;element.appendChild(para);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;2、删除已有的 HTML 元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div id=&quot;div1&quot;&amp;gt;
    &amp;lt;p id=&quot;p1&quot;&amp;gt;这是一个段落。&amp;lt;/p&amp;gt;
    &amp;lt;p id=&quot;p2&quot;&amp;gt;这是另一个段落。&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
&lt;span&gt;var&lt;/span&gt; parent=document.getElementById(&quot;div1&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; child=document.getElementById(&quot;p1&quot;&lt;span&gt;);
parent.removeChild(child);
&lt;/span&gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个 HTML 文档含有拥有两个子节点（两个 &amp;lt;p&amp;gt; 元素）的 &amp;lt;div&amp;gt; 元素：&lt;/p&gt;
&lt;div class=&quot;code notranslate&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&amp;lt;div id=&quot;div1&quot;&amp;gt;&lt;br/&gt;&amp;lt;p id=&quot;p1&quot;&amp;gt;这是一个段落。&amp;lt;/p&amp;gt;&lt;br/&gt;&amp;lt;p id=&quot;p2&quot;&amp;gt;这是另一个段落。&amp;lt;/p&amp;gt;&lt;br/&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;找到 id=&quot;div1&quot; 的元素：&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;var parent=document.getElementById(&quot;div1&quot;);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;找到 id=&quot;p1&quot; 的 &amp;lt;p&amp;gt; 元素：&lt;/p&gt;
&lt;div class=&quot;code notranslate&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;var child=document.getElementById(&quot;p1&quot;);&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;从父元素中删除子元素：&lt;/p&gt;
&lt;div class=&quot;code notranslate&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;parent.removeChild(child);&lt;/p&gt;
&lt;h2&gt; 三、结束语：&lt;/h2&gt;
&lt;p&gt;     希望能够给各位博主有所帮助！！！&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Sun, 15 Oct 2017 16:00:00 +0000</pubDate>
<dc:creator>../..随风</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xyq1107/p/7674571.html</dc:identifier>
</item>
</channel>
</rss>