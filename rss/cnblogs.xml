<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>小程序参数二维码生成 - 廉伟mike</title>
<link>http://www.cnblogs.com/mikelian/p/8952923.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mikelian/p/8952923.html</guid>
<description>&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;总所周知，小程序无法分享到朋友圈，但是图片可以。只要小程序能生成包含信息与小程序参数二维码，即可达到很好的传播效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例：拉勾网。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/980558/201804/980558-20180426152856058-223071931.png&quot; alt=&quot;&quot; width=&quot;314&quot; height=&quot;167&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;appid与appsecret&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/980558/201804/980558-20180426154232861-1996314687.jpg&quot; alt=&quot;&quot; width=&quot;879&quot; height=&quot;417&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;&quot;access_token&quot;;&lt;/h2&gt;
&lt;p&gt;移步：&lt;a href=&quot;https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;amp;id=mp1421140183&quot; target=&quot;_blank&quot;&gt;微信官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;小程序二维码生成接口&lt;/h2&gt;
&lt;p&gt;有3个接口哦：&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/api/qrcode.html&quot; target=&quot;_blank&quot;&gt;小程序二维码文档&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;52&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php 
&lt;/span&gt;&lt;span&gt;$appid&lt;/span&gt; = &lt;span&gt;$_POST&lt;/span&gt;[&quot;appid&quot;&lt;span&gt;]; // 获取appid
&lt;/span&gt;&lt;span&gt;$appsecret&lt;/span&gt; = &lt;span&gt;$_POST&lt;/span&gt;[&quot;appsecret&quot;&lt;span&gt;]; // 获取appsecret
&lt;/span&gt;&lt;span&gt;$url&lt;/span&gt; = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;amp;appid='.&lt;span&gt;$appid&lt;/span&gt;.'&amp;amp;secret='.&lt;span&gt;$appsecret&lt;/span&gt;&lt;span&gt;; // 获取access_token
&lt;/span&gt;&lt;span&gt;$wxToken&lt;/span&gt; =json_decode(&lt;span&gt;file_get_contents&lt;/span&gt;(&lt;span&gt;$url&lt;/span&gt;), &lt;span&gt;true&lt;/span&gt;&lt;span&gt;) ;
&lt;/span&gt;&lt;span&gt;$token&lt;/span&gt; = &lt;span&gt;$wxToken&lt;/span&gt;['access_token'&lt;span&gt;]; // 取access_token 的值
&lt;/span&gt;&lt;span&gt;$api&lt;/span&gt; = 'https://api.weixin.qq.com/wxa/getwxacode?access_token='.&lt;span&gt;$token&lt;/span&gt;&lt;span&gt;; // 获取小程序二维码post地址;
&lt;/span&gt;&lt;span&gt;$itemid&lt;/span&gt; = &lt;span&gt;$_POST&lt;/span&gt;[&quot;itemid&quot;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;$post_data&lt;/span&gt; = '{&quot;path&quot;: &quot;pages/signup/content/index?itemid='.&lt;span&gt;$itemid&lt;/span&gt;.'&quot;, &quot;width&quot;: 430}'&lt;span&gt;; // post 数据
&lt;/span&gt;&lt;span&gt;$res&lt;/span&gt; = http_request(&lt;span&gt;$api&lt;/span&gt;,&lt;span&gt;$post_data&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;file_put_contents&lt;/span&gt;('img.jpg', &lt;span&gt;$res&lt;/span&gt;&lt;span&gt;); 、、存入本地文件
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; '&amp;lt;img src=&quot;img.jpg&quot;&amp;gt;'&lt;span&gt;; // 打印

&lt;/span&gt;&lt;span&gt;function&lt;/span&gt; http_request(&lt;span&gt;$url&lt;/span&gt;, &lt;span&gt;$data&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt; =&lt;span&gt; curl_init();
    curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_URL, &lt;span&gt;$url&lt;/span&gt;&lt;span&gt;);
    curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_SSL_VERIFYPEER, &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;);
    curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_SSL_VERIFYHOST, &lt;span&gt;FALSE&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;empty&lt;/span&gt;(&lt;span&gt;$data&lt;/span&gt;&lt;span&gt;)){
        curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_POST, 1&lt;span&gt;);
        curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_POSTFIELDS, &lt;span&gt;$data&lt;/span&gt;&lt;span&gt;);
    }
    curl_setopt(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;, CURLOPT_RETURNTRANSFER, &lt;span&gt;TRUE&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;$output&lt;/span&gt; = curl_exec(&lt;span&gt;$curl&lt;/span&gt;&lt;span&gt;);
    curl_close(&lt;/span&gt;&lt;span&gt;$curl&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;$output&lt;/span&gt;&lt;span&gt;;
}
&lt;/span&gt;?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ps：有个问题，如果页面是小程序子页面，返回小程序主页会非常不友好。 好在想到了一个办法，成功了再分享出来哦！&lt;/p&gt;

</description>
<pubDate>Thu, 26 Apr 2018 07:48:00 +0000</pubDate>
<dc:creator>廉伟mike</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mikelian/p/8952923.html</dc:identifier>
</item>
<item>
<title>读书笔记-《Maven实战》-关于Maven依赖传递的思考 2018/4/26 - dengchengchao</title>
<link>http://www.cnblogs.com/dengchengchao/p/8952890.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dengchengchao/p/8952890.html</guid>
<description>&lt;p&gt;&lt;a title=&quot;上次读书笔记中&quot; href=&quot;http://www.cnblogs.com/dengchengchao/p/8881291.html&quot; target=&quot;_blank&quot;&gt;上次读书笔记中&lt;/a&gt;，提到了依赖传递。看着依赖传递表，一直在思考为什么会是这样。&lt;/p&gt;
&lt;p&gt;先看传递表：&lt;/p&gt;
&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr&gt;&lt;td&gt;

&lt;/td&gt;
&lt;td&gt;compile&lt;/td&gt;
&lt;td&gt;test&lt;/td&gt;
&lt;td&gt;provided&lt;/td&gt;
&lt;td&gt;runtime&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td&gt;
&lt;p&gt;compile&lt;/p&gt;
&lt;p&gt;test&lt;/p&gt;
&lt;p&gt;provided&lt;/p&gt;
&lt;p&gt;runtime&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;compile&lt;/p&gt;
&lt;p&gt;test&lt;/p&gt;
&lt;p&gt;provided&lt;/p&gt;
&lt;p&gt;runtime&lt;/p&gt;

&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;

&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;

&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;runtime&lt;/p&gt;
&lt;p&gt;test&lt;/p&gt;
&lt;p&gt;provided&lt;/p&gt;
&lt;p&gt;runtime&lt;/p&gt;



&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;(最左边一列表示第一依赖范围，最上边一行表示第二依赖范围)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;需要详细理解的知识点&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1&lt;/strong&gt;.首先看看scope的作用:scope是用来排除多余的依赖范围的。&lt;/span&gt;按我自己的理解，不能理解一个字段在什么时候有用，而是在什么时候不需要它,在什么时候，添加了这个范围就会出现操作失败的情况： &lt;/p&gt;
&lt;p&gt;compile:所有阶段都有用，&lt;/p&gt;
&lt;p&gt;provided:在运行的时候不需要使用这个依赖，更官方的说法为期望在运行时由运行环境提供api。&lt;/p&gt;
&lt;p&gt;test:在编译和运行的时候都不要使用这个依赖【具体理解应该是在正式的使用mvn package或者mvn compile的时候无效，但是对于编译器来说，是一直有效的，因为测试也需要编译和运行的】&lt;/p&gt;
&lt;p&gt;runtime:对于编译的时候不需要使用这个依赖【例：JDBC驱动，在编译的时候只需要提供一个接口，具体使用在运行的时候再提供就行】&lt;/p&gt;
&lt;p&gt;理解记忆的话：&lt;/p&gt;
&lt;p&gt;test算是一个独立的模块。如果对于上面的依赖传递表格不理解的话，可以先把test行和test列给去除，再结合2,3知识点，就很容易理解了&lt;/p&gt;
&lt;p&gt;priovided和runtime是对立的，一个对运行时不需要，一个对编译时不需要。 参考理解jdk和jre&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;.编译时和运行时具体区别在哪里？&lt;/p&gt;
&lt;p&gt;具体的可以看看《深入理解JVM》&lt;/p&gt;
&lt;p&gt;只说一点关键的：&lt;/p&gt;
&lt;p&gt;编译过程中，对于依赖，可以没有具体的实现，但是需要有这个接口文件，不需要有具体的实现。[可以只有interface文件]&lt;/p&gt;
&lt;p&gt;运行过程中，对于依赖，必须要有具体的实现。[还要有具体的implement文件]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt;依赖是指的依赖编译好的二进制文件，编译过程会把所有的依赖编译进生成的二进制文件中，这一点很重要&lt;/p&gt;
&lt;p&gt;而依赖是否传递，主要看是否需要运行或编译文件，与test无关&lt;/p&gt;

&lt;p&gt;因此：&lt;/p&gt;
&lt;p&gt;先看看第一依赖为&lt;strong&gt;compile&lt;/strong&gt;的时候：（运行和编译都需要此依赖）&lt;/p&gt;
&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;compile&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;表示任何时候都需要这个lib，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此&lt;/p&gt;
&lt;p&gt;现在的库对于第二依赖在编译的时候，不需要再编译一次，因此应该是在运行时和测试时有效，所以应该为runtime，但是官方解释：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;it is intended that this should be runtime scope instead, so that all compile dependencies must be explicitly listed - however, there is the case where the library you depend on extends a class from another library, forcing you to have available at compile time. For this reason, compile time dependencies remain as compile scope even when they are transitive.&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;test&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖的运行和编译都不需要这个库，因此，依赖是不会传递的&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;provided&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖在运行时不需要这个库，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此编译运行都不需要这个库，因此，依赖不会传递&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;runtime&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖在编译的时候不需要这个库，但是在运行和测试的时候需要这个库，那么同理第一依赖编译的时候是不需要这个库的。因此为runtime。&lt;/p&gt;

&lt;p&gt;第一依赖为&lt;strong&gt;test&lt;/strong&gt;的时候：（运行和编译都需要此库）&lt;/p&gt;
&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;compile&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖只需要用第二依赖进行测试，第二依赖对这个依赖任何时候都需要（其实只需要再运行的时候用它，因为已经被编译到二进制文件中了），因此在只需要在测试的时候，运行这个包，因此为test&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;test&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖只需要用第二依赖进行测试，第二依赖运行和编译的时候都不需要他，因为依赖不传递&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;provided&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖对第二依赖进行测试，第二依赖在运行的时候不需要这个这个库，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此依赖不传递。&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;runtime&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖在编译的时候不需要这个库，而在运行和测试的时候需要这个库，而在测试的时候需要运行这个库，因此为test&lt;/p&gt;
&lt;p&gt;可以看出来compile和test很像，在proivde和test都不传递。而在compile和runtime都会传递，因为proivde对于被依赖项来说已经编译好了，所以不再需要传递&lt;/p&gt;

&lt;p&gt;第一依赖为&lt;strong&gt;provided&lt;/strong&gt;的时候：（在编译和运行测试代码的时候需要此库）&lt;/p&gt;
&lt;p&gt;provided算是一个比较特殊的依赖。需要注意的是，我们的代码并不是在运行时不需要这个库，而是表示在运行时让运行环境提供这个api。&lt;/p&gt;
&lt;p&gt;因此如果按照表示主代码在运行时让运行环境提供这个依赖的运行api，那么在第一依赖需要运行第二依赖的时候，依赖都为provided&lt;/p&gt;

&lt;p&gt;第二依赖为&lt;strong&gt;compile&lt;/strong&gt;的时候：（运行和编译都需要此库）&lt;/p&gt;
&lt;p&gt;按照上面的说法，应该为provided&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;test&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖只需要用第二依赖进行测试，第二依赖运行和编译的时候都不需要他，因为依赖不传递&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;provided&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖对第二依赖进行测试，第二依赖在运行的时候不需要这个这个库，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此依赖不传递。&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;runtime&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖在运行的时候需要这个库，因此为provided&lt;/p&gt;

&lt;p&gt;第一依赖为&lt;strong&gt;runtime&lt;/strong&gt;的时候：（在运行的时候需要此库）&lt;/p&gt;
&lt;p&gt;第二依赖为&lt;strong&gt;compile&lt;/strong&gt;的时候：（运行和编译都需要此库）&lt;/p&gt;
&lt;p&gt;表示任何时候都需要这个lib，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此&lt;/p&gt;
&lt;p&gt;现在的库对于第二依赖在编译的时候，不需要再编译一次，因此应该是在运行时和测试时有效，因此为runtime&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;test&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖只需要用第二依赖进行测试，第二依赖运行和编译的时候都不需要他，因为依赖不传递&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;provided&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第一依赖对第二依赖进行测试，第二依赖在运行的时候不需要这个这个库，而编译的时候这个lib已近被第二依赖编译进二进制文件，因此依赖不传递。&lt;/p&gt;

&lt;p&gt;第二依赖对库的依赖为&lt;strong&gt;runtime&lt;/strong&gt;的时候：&lt;/p&gt;
&lt;p&gt;第二依赖在编译的时候不需要这个库，而在运行和测试的时候需要这个库,因此为runtime&lt;/p&gt;
</description>
<pubDate>Thu, 26 Apr 2018 07:45:00 +0000</pubDate>
<dc:creator>dengchengchao</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dengchengchao/p/8952890.html</dc:identifier>
</item>
<item>
<title>CRM客户关系管理系统（一） - zhang_derek</title>
<link>http://www.cnblogs.com/derek1184405959/p/8946936.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/derek1184405959/p/8946936.html</guid>
<description>&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; crm/model.py&lt;/span&gt;
&lt;span&gt;__author__&lt;/span&gt; = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;derek&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; django.db &lt;span&gt;import&lt;/span&gt;&lt;span&gt; models
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; django.contrib.auth.models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; User


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Role(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;角色表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    name &lt;/span&gt;= models.CharField(max_length=64,unique=True)    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;不能重&lt;/span&gt;


&lt;span&gt;class&lt;/span&gt;&lt;span&gt; UserProfile(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;用户信息表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;关联django自带的User，可以自己扩展字段&lt;/span&gt;
    user = models.ForeignKey(User,on_delete=&lt;span&gt;models.CASCADE)
    name &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;姓名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;一个用户可以有多个角色，一个角色可以对应多个用户&lt;/span&gt;
    role = models.ManyToManyField(Role,blank=True,null=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerInfo(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;客户信息表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    name &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;姓名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64,default=&lt;span&gt;None)
    contact_type_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;qq&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;微信&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;手机&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    contact_type &lt;/span&gt;= models.SmallIntegerField(choices=contact_type_choices,default=&lt;span&gt;0)
    contact &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;联系方式&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64,unique=&lt;span&gt;True)
    source_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;qq群&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;51CTO&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;百度推广&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(3,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;知乎&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(4,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;转介绍&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(5,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;其它&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),)
    source &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;客户来源&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=&lt;span&gt;source_choices)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;关联自己，如果是转介绍（介绍人已经是学员，然后介绍别人过来学习），需要填写转介绍人的信息，不是转介绍，这里就可以为空&lt;/span&gt;
    referral_from = models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;self&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,blank=True,null=True,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;转介绍&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;可以咨询多个课程&lt;/span&gt;
    consult_courses = models.ManyToManyField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;咨询课程&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    consult_content &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;咨询内容&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    status_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;未报名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已报名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已经退学&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    status &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;客户状态&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=&lt;span&gt;status_choices)
    consultant &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程顾问&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    date &lt;/span&gt;= models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建的时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,auto_now_add=&lt;span&gt;True)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Student(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;学员表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    customer &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;CustomerInfo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;客户&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    class_grades &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ClassList&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;班级&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.customer


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerFollowUp(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;客户跟踪记录表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    customer &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;CustomerInfo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    content &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;跟踪内容&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    user &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;跟进人&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    status_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;近期无报名计划&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;一个月内报名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;半个月报名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(3,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已报名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),)
    status &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;客户状态&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=&lt;span&gt;status_choices)
    date &lt;/span&gt;= models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建的时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, auto_now_add=&lt;span&gt;True)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Course(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;课程表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    name &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64,unique=&lt;span&gt;True)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;价格必须为整数&lt;/span&gt;
    price = models.PositiveSmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;价格&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    period &lt;/span&gt;= models.PositiveSmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程周期（月）&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,default=5&lt;span&gt;)
    outline &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;大纲&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; self.name


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ClassList(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;班级列表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    branch &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Branch&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;校区&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;一个班级只能有一个课程，一个课程可以有多个班级&lt;/span&gt;
    course = models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Course&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    class_type_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;脱产&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;周末&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),(2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;网络班&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    class_type &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;班级类型&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=class_type_choices,default=&lt;span&gt;0)
    semester &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;学期&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    teachers &lt;/span&gt;= models.ManyToManyField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;讲师&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    start_date &lt;/span&gt;= models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;开班日期&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;毕业日期因为不固定，所以可以为空&lt;/span&gt;
    graduate_date = models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;毕业日期&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,blank=True,null=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;班级名是课程名+第几期拼接起来的&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s(%s)期&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.course.name,self.semester)

    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;联合唯一，班级不能重复&lt;/span&gt;
        unique_together = (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;branch&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;class_type&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;course&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;semester&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; CourseRecord(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;上课记录&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    class_grade &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ClassList&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;上课班级&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    day_num &lt;/span&gt;= models.PositiveSmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程节次&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    teacher &lt;/span&gt;= models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;UserProfile&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;讲师&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    title &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;本节主题&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64&lt;span&gt;)
    content &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;本节内容&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,)
    has_homework &lt;/span&gt;= models.BooleanField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;本节有作业&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,default=&lt;span&gt;True)
    homework &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;作业需求&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,blank=True,null=&lt;span&gt;True)
    date &lt;/span&gt;= models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建的时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, auto_now_add=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;上课班级+课程节次&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s第(%s)节&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.class_grade,self.day_num)

    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        unique_together &lt;/span&gt;= (&lt;span&gt;'&lt;/span&gt;&lt;span&gt;class_grade&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;day_num&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; StudyRecord(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;学习记录表&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;一节课对应多个学生&lt;/span&gt;
    course_record = models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;CourseRecord&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;课程&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;一个学生有多个上课记录&lt;/span&gt;
    student = models.ForeignKey(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Student&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,verbose_name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;学生&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,on_delete=&lt;span&gt;models.CASCADE)
    score_choices &lt;/span&gt;= ((100,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;A+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;90,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;85,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;B+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;80,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;75,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;B-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;70,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;C+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;60,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;40,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;C-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (&lt;/span&gt;-50,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                     (0,&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;N/A&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),         &lt;span&gt;#&lt;/span&gt;&lt;span&gt;not avaliable&lt;/span&gt;
                     (-100,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;COPY&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;),     &lt;span&gt;#&lt;/span&gt;&lt;span&gt;抄作业&lt;/span&gt;
&lt;span&gt;                     )
    score &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;得分&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=score_choices,default=&lt;span&gt; 0)
    show_choices &lt;/span&gt;= ((0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;缺勤&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                    (&lt;/span&gt;1,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已签到&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                    (&lt;/span&gt;2,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;迟到&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                    (&lt;/span&gt;3,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;早退&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;),
                    )
    show_status &lt;/span&gt;= models.SmallIntegerField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;出勤&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,choices=show_choices,default=1&lt;span&gt;)
    note &lt;/span&gt;= models.TextField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;成绩备注&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,blank=True,null=&lt;span&gt;True)
    date &lt;/span&gt;= models.DateField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;创建的时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, auto_now_add=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s %s %s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%&lt;span&gt;(self.course_record,self.student,self.score)


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Branch(models.Model):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;校区分支&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    name &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;校区名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=64,unique=&lt;span&gt;True)
    addr &lt;/span&gt;= models.CharField(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;地址&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,max_length=128,blank=True,null=&lt;span&gt;True)

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__str__&lt;/span&gt;&lt;span&gt;(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; self.name
&lt;/pre&gt;</description>
<pubDate>Thu, 26 Apr 2018 07:39:00 +0000</pubDate>
<dc:creator>zhang_derek</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/derek1184405959/p/8946936.html</dc:identifier>
</item>
<item>
<title>Windows转Linux总结（附带常用Linux命令-LinuxMint） - 左羽</title>
<link>http://www.cnblogs.com/1214804270hacker/p/8952698.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/1214804270hacker/p/8952698.html</guid>
<description>&lt;p&gt;　　这是我在Linux系统下写的第一篇博客，花了一周的时间从Windows系统转到Linux并且可以完成日常操作，能在Linux系统下完成开发，运用各种开发工具，写各种语言小程序和JavaEE。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;经过这一周后，我的感觉就是，Linux太好玩了！！！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;span&gt;感受一下我的桌面：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426152522935-2117183239.png&quot; alt=&quot;&quot; width=&quot;805&quot; height=&quot;450&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;　&lt;span&gt;Linux和Windows最大的区别在于，你可以自己定制属于自己的个人计算机，这是我最大的感悟——比如，我不需要微软的各种服务进程，我需要的只是我要用我需要的服务进程。我在Windows下开机，会有226个进程，内存占用率达到40%；而当我在Linux下开机（现在附开Firefox浏览器、音乐播放器和wine QQ）：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426131108914-1018230309.png&quot; alt=&quot;&quot; width=&quot;459&quot; height=&quot;288&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;感受一下，这是我的电脑配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426131431400-251138854.png&quot; alt=&quot;&quot; width=&quot;476&quot; height=&quot;296&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　Linux下的Java IDE我安装了MyEclipse、IntelliJ IDEA，然后我发现Linux系统下的MyEclipse实在是太烂了，写个代码都一卡一卡的，翻页看代码就像翻PPT一样，实在不能忍，然后就卸载了，专心用IntelliJ IDEA写Java代码。Linux下的git比在Windows下使用好多了，不存在git bash，在哪打开终端都是git bash，而且tab还有提示，maven也有提示，非常舒服。&lt;/p&gt;
&lt;h2&gt;　　&lt;strong&gt;Linux下的不同之处总结：&lt;/strong&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;strong&gt;　　一、环境变量配置：&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;　　在Windows中的环境变量配置还是很友好的，在系统设置直接有环境变量配置，但是在Linux下不是这样的：在/etc/.profile中，必须以root身份打开&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426134121638-1868487254.png&quot; alt=&quot;&quot; width=&quot;325&quot; height=&quot;27&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　环境变量配置方法如下：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426134400469-1611822216.png&quot; alt=&quot;&quot; width=&quot;453&quot; height=&quot;263&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　其中的PATH才是真正的环境变量根配置，其他都是变量引用，好好看就能明白了。&lt;/p&gt;
&lt;p&gt;　　不过这个环境变量的配置是全局的环境变量，就是不论以哪个身份登陆都可以使用该设置。&lt;/p&gt;
&lt;p&gt;　　不过如果经常使用一个用户，推荐在该用户的HOME中配置.bash_profile，这样比较安全，不至于环境变量配置错误连开机都开不了。我曾经把环境变量配置错了，开机后登陆不上去，进不去系统，最后用命令行登陆进去后，花了一天时间对着满屏的命令，找到了原因，是环境变量配置错误了。因为Linux开机后，是要检查一次环境变量的，如果环境变量出错，是进不去系统的。&lt;/p&gt;
&lt;h2&gt;　　&lt;strong&gt;二、划分swap空间&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;swap空间是Linux特有的一个概念，Linux系统的内存不仅仅需要物流内存条的大小，也需要硬盘中划分出一块区域供系统使用。Swap分区在系统的物理内存不够用的时候，把物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap分区中，等到那些程序要运行时，再从Swap分区中恢复保存的数据到内存中。这样可以节省系统开销，甚至越过系统瓶颈。但是这块区域并不是越大越好，小了又不够用，最好划分的和物理内存一样大。&lt;/p&gt;
&lt;h2&gt;　　三、权限的控制&lt;/h2&gt;
&lt;p&gt;　　也许会认为，Windows下也有权限，不过Windows的权限控制在Linux的权限控制面前简直弱爆了，看一下就知道了：&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426142640474-160476669.png&quot; alt=&quot;&quot; width=&quot;498&quot; height=&quot;316&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　清晰可见，现在的我只有权限使用opt文件夹里面的东西，我甚至连读取一下里面的文本都没有权限：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1113894/201804/1113894-20180426143113262-1832367132.png&quot; alt=&quot;&quot; width=&quot;533&quot; height=&quot;129&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　由此可见Linux系统是多么的安全！&lt;/p&gt;
&lt;h2&gt;　　四&lt;strong&gt;、强大的终端命令&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;span&gt;如果说出最大的区别，莫过于无所不能的终端命令了，强大无比，而且可通过各种编程语言做成可执行的.sh脚本，现在列出一系列常用命令（部分摘自&lt;a id=&quot;Header1_HeaderTitle&quot; class=&quot;headermaintitle&quot; href=&quot;http://www.cnblogs.com/fnlingnzb-learner/&quot;&gt;Boblim的博客&lt;/a&gt;&lt;span class=&quot;headermaintitle&quot;&gt;，自己又添加一些&lt;/span&gt;&lt;span class=&quot;headermaintitle&quot;&gt;）：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;span class=&quot;headermaintitle&quot;&gt;　　1、关于用户切换&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;headermaintitle&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;su&lt;/span&gt;&lt;span&gt;    切换到root用户
&lt;/span&gt;&lt;span&gt;su&lt;/span&gt; -&lt;span&gt; user    切换至user用户
&lt;/span&gt;&lt;span&gt;sudo&lt;/span&gt; -&lt;span&gt;i    切换到root用户
&lt;/span&gt;&lt;span&gt;sudo&lt;/span&gt;&lt;span&gt; xxx    暂时用sudo身份执行命令
exit    退回上一身份&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　2、关于系统信息&lt;/h3&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
arch     显示机器的处理器架构(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) 
&lt;/span&gt;&lt;span&gt;uname&lt;/span&gt; -m     显示机器的处理器架构(&lt;span&gt;2&lt;/span&gt;&lt;span&gt;) 
&lt;/span&gt;&lt;span&gt;uname&lt;/span&gt; -&lt;span&gt;r     显示正在使用的内核版本 
dmidecode &lt;/span&gt;-q     显示硬件系统部件 - (SMBIOS /&lt;span&gt; DMI) 
hdparm &lt;/span&gt;-i /dev/&lt;span&gt;hda     罗列一个磁盘的架构特性 
hdparm &lt;/span&gt;-tT /dev/&lt;span&gt;sda     在磁盘上执行测试性读取操作 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;cpuinfo     显示CPU info的信息 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;interrupts     显示中断 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;meminfo     校验内存使用 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;swaps     显示哪些swap被使用 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;version     显示内核的版本 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/net/&lt;span&gt;dev     显示网络适配器及统计 
&lt;/span&gt;&lt;span&gt;cat&lt;/span&gt; /proc/&lt;span&gt;mounts     显示已加载的文件系统 
lspci &lt;/span&gt;-&lt;span&gt;tv     罗列 PCI设备 
lsusb &lt;/span&gt;-&lt;span&gt;tv     显示 USB 设备 
&lt;/span&gt;&lt;span&gt;date&lt;/span&gt;&lt;span&gt;     显示系统日期 
cal &lt;/span&gt;&lt;span&gt;2007&lt;/span&gt;&lt;span&gt;     显示2007年的日历表 
&lt;/span&gt;&lt;span&gt;date&lt;/span&gt; &lt;span&gt;041217002007.00&lt;/span&gt;     设置日期和时间 -&lt;span&gt; 月日时分年.秒 
clock &lt;/span&gt;-&lt;span&gt;w&lt;/span&gt;     将时间修改保存到 BIOS 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　3、&lt;strong&gt;关机 (系统的关机、重启以及登出 )&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
shutdown -h now     关闭系统(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) 
init &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;     关闭系统(&lt;span&gt;2&lt;/span&gt;&lt;span&gt;) 
telinit &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;     关闭系统(&lt;span&gt;3&lt;/span&gt;&lt;span&gt;) 
shutdown &lt;/span&gt;-h hours:minutes &amp;amp;&lt;span&gt;     按预定时间关闭系统 
shutdown &lt;/span&gt;-&lt;span&gt;c     取消按预定时间关闭系统 
shutdown &lt;/span&gt;-r now     重启(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) 
reboot     重启(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;) 
logout     注销 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;　　4、&lt;/strong&gt;文件和目录的操作&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
cd /home     进入 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/ home&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 目录&lt;span&gt;'&lt;/span&gt; 
&lt;span&gt;cd ..     返回上一级目录 
cd ..&lt;/span&gt;/&lt;span&gt;..     返回上两级目录 
cd     进入个人的主目录 
cd &lt;/span&gt;~&lt;span&gt;user1     进入个人的主目录 
cd &lt;/span&gt;-&lt;span&gt;     返回上次所在的目录 
&lt;/span&gt;&lt;span&gt;pwd&lt;/span&gt;&lt;span&gt;     显示工作路径 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt;&lt;span&gt;     查看目录中的文件 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; -&lt;span&gt;F     查看目录中的文件 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; -&lt;span&gt;l     显示文件和目录的详细资料 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; -&lt;span&gt;a     显示隐藏文件 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; *[&lt;span&gt;0&lt;/span&gt;-&lt;span&gt;9&lt;/span&gt;]*&lt;span&gt;     显示包含数字的文件名和目录名 
tree     显示文件和目录由根目录开始的树形结构(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) 
lstree     显示文件和目录由根目录开始的树形结构(&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;) 
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt; dir1     创建一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 的目录&lt;span&gt;'&lt;/span&gt; 
&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt; dir1 dir2     同时创建两个目录 
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt; -p /tmp/dir1/&lt;span&gt;dir2     创建一个目录树 
&lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -f file1     删除一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 的文件&lt;span&gt;'&lt;/span&gt; 
&lt;span&gt;rmdir&lt;/span&gt; dir1     删除一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 的目录&lt;span&gt;'&lt;/span&gt; 
&lt;span&gt;rm&lt;/span&gt; -rf dir1     删除一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的目录并同时删除其内容 
&lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -&lt;span&gt;rf dir1 dir2     同时删除两个目录及它们的内容 
&lt;/span&gt;&lt;span&gt;mv&lt;/span&gt; dir1 new_dir     重命名/&lt;span&gt;移动 一个目录 
&lt;/span&gt;&lt;span&gt;cp&lt;/span&gt;&lt;span&gt; file1 file2     复制一个文件 
&lt;/span&gt;&lt;span&gt;cp&lt;/span&gt; &lt;span&gt;dir&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; .     复制一个目录下的所有文件到当前工作目录 
cp -a /tmp/dir1 .     复制一个目录到当前工作目录 
cp -a dir1 dir2     复制一个目录 
ln -s file1 lnk1     创建一个指向文件或目录的软链接 
ln file1 lnk1     创建一个指向文件或目录的物理链接 
touch -t 0712250000 file1     修改一个文件或目录的时间戳 - (YYMMDDhhmm) 
iconv -l     列出已知的编码 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　5、&lt;strong&gt;文件搜索&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;find&lt;/span&gt; / -name file1     从 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 开始进入根文件系统搜索文件和目录 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; / -user user1     搜索属于用户 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;user1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的文件和目录 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; /home/user1 -name \*.bin     在目录 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;/ home/user1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 中搜索带有&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.bin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 结尾的文件 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; /usr/bin -type f -atime +&lt;span&gt;100&lt;/span&gt;&lt;span&gt;     搜索在过去100天内未被使用过的执行文件 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; /usr/bin -type f -mtime -&lt;span&gt;10&lt;/span&gt;&lt;span&gt;     搜索在10天内被创建或者修改过的文件 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; / -name \*.rpm -exec &lt;span&gt;chmod&lt;/span&gt; &lt;span&gt;755&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; \;     搜索以 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.rpm&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 结尾的文件并定义其权限 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; / -xdev -name \*.rpm     搜索以 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.rpm&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 结尾的文件，忽略光驱、捷盘等可移动设备 
&lt;/span&gt;&lt;span&gt;locate&lt;/span&gt; \*.&lt;span&gt;ps&lt;/span&gt;     寻找以 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.ps&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 结尾的文件 - 先运行 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;updatedb&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 命令 
&lt;/span&gt;&lt;span&gt;whereis&lt;/span&gt;&lt;span&gt; halt     显示一个二进制文件、源码或man的位置 
&lt;/span&gt;&lt;span&gt;which&lt;/span&gt; halt     显示一个二进制文件或可执行文件的完整路径 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　6、&lt;strong&gt;磁盘空间&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;df&lt;/span&gt; -&lt;span&gt;h     显示已经挂载的分区列表 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; -lSr |&lt;span&gt;more&lt;/span&gt;&lt;span&gt;     以尺寸大小排列文件和目录 
&lt;/span&gt;&lt;span&gt;du&lt;/span&gt; -&lt;span&gt;sh&lt;/span&gt; dir1     估算目录 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 已经使用的磁盘空间&lt;span&gt;'&lt;/span&gt; 
&lt;span&gt;du&lt;/span&gt; -sk * | &lt;span&gt;sort&lt;/span&gt; -rn     以容量大小为依据依次显示文件和目录的大小 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　7、&lt;strong&gt;用户和群组&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;groupadd group_name     创建一个新用户组 
groupdel group_name     删除一个用户组 
groupmod &lt;/span&gt;-&lt;span&gt;n new_group_name old_group_name     重命名一个用户组 
useradd &lt;/span&gt;-c &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Name Surname &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; -g admin -d /home/user1 -s /bin/bash user1     创建一个属于 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 用户组的用户 
useradd user1     创建一个新用户 
userdel &lt;/span&gt;-r user1     删除一个用户 ( &lt;span&gt;'&lt;/span&gt;&lt;span&gt;-r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 排除主目录) 
usermod &lt;/span&gt;-c &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;User FTP&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; -g system -d /&lt;span&gt;ftp&lt;/span&gt;/user1 -s /bin/&lt;span&gt;nologin user1     修改用户属性 
&lt;/span&gt;&lt;span&gt;passwd&lt;/span&gt;&lt;span&gt;     修改口令 
&lt;/span&gt;&lt;span&gt;passwd&lt;/span&gt;&lt;span&gt; user1     修改一个用户的口令 (只允许root执行) 
chage &lt;/span&gt;-E &lt;span&gt;2005&lt;/span&gt;-&lt;span&gt;12&lt;/span&gt;-&lt;span&gt;31&lt;/span&gt;&lt;span&gt; user1     设置用户口令的失效期限 
pwck     检查 &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/etc/passwd&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的文件格式和语法修正以及存在的用户 
grpck     检查 &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/etc/passwd&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的文件格式和语法修正以及存在的群组 
newgrp group_name     登陆进一个新的群组以改变新创建文件的预设群组 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　8、&lt;strong&gt;文件的权限 - 使用 &quot;+&quot; 设置权限，使用 &quot;-&quot; 用于取消&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;ls&lt;/span&gt; -&lt;span&gt;lh     显示权限 
&lt;/span&gt;&lt;span&gt;ls&lt;/span&gt; /tmp | &lt;span&gt;pr&lt;/span&gt; -T5 -&lt;span&gt;W$COLUMNS     将终端划分成5栏显示 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; ugo+rwx directory1     设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(&lt;span&gt;w&lt;/span&gt;&lt;span&gt;)和执行(x)的权限 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; go-&lt;span&gt;rwx directory1     删除群组(g)与其他人(o)对目录的读写执行权限 
&lt;/span&gt;&lt;span&gt;chown&lt;/span&gt;&lt;span&gt; user1 file1     改变一个文件的所有人属性 
&lt;/span&gt;&lt;span&gt;chown&lt;/span&gt; -&lt;span&gt;R user1 directory1     改变一个目录的所有人属性并同时改变改目录下所有文件的属性 
&lt;/span&gt;&lt;span&gt;chgrp&lt;/span&gt;&lt;span&gt; group1 file1     改变文件的群组 
&lt;/span&gt;&lt;span&gt;chown&lt;/span&gt;&lt;span&gt; user1:group1 file1     改变一个文件的所有人和群组属性 
&lt;/span&gt;&lt;span&gt;find&lt;/span&gt; / -perm -u+&lt;span&gt;s     罗列一个系统中所有使用了SUID控制的文件 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; u+s /bin/file1     设置一个二进制文件的 SUID 位 -&lt;span&gt; 运行该文件的用户也被赋予和所有者同样的权限 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; u-s /bin/&lt;span&gt;file1     禁用一个二进制文件的 SUID位 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; g+s /home/public     设置一个目录的SGID 位 -&lt;span&gt; 类似SUID ，不过这是针对目录的 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; g-s /home/&lt;span&gt;public     禁用一个目录的 SGID 位 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; o+t /home/public     设置一个文件的 STIKY 位 -&lt;span&gt; 只允许合法所有人删除文件 
&lt;/span&gt;&lt;span&gt;chmod&lt;/span&gt; o-t /home/public     禁用一个目录的 STIKY 位 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　9、&lt;strong&gt;文件的特殊属性 - 使用 &quot;+&quot; 设置权限，使用 &quot;-&quot; 用于取消&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;a file1     只允许以追加方式读写文件 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +c file1     允许这个文件能被内核自动压缩/&lt;span&gt;解压 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;d file1     在进行文件系统备份时，dump程序将忽略这个文件 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;i file1     设置成不可变的文件，不能被删除、修改、重命名或者链接 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;s file1     允许一个文件被安全地删除 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;S file1     一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 
&lt;/span&gt;&lt;span&gt;chattr&lt;/span&gt; +&lt;span&gt;u file1     若文件被删除，系统会允许你在以后恢复这个被删除的文件 
&lt;/span&gt;&lt;span&gt;lsattr&lt;/span&gt;     显示特殊的属性 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　10、&lt;strong&gt;打包和压缩文件&lt;br/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;bunzip2&lt;/span&gt; file1.bz2     解压一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1.bz2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;的文件 
&lt;/span&gt;&lt;span&gt;bzip2&lt;/span&gt; file1     压缩一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的文件 
&lt;/span&gt;&lt;span&gt;gunzip&lt;/span&gt; file1.gz     解压一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1.gz&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;的文件 
&lt;/span&gt;&lt;span&gt;gzip&lt;/span&gt; file1     压缩一个叫做 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;的文件 
&lt;/span&gt;&lt;span&gt;gzip&lt;/span&gt; -&lt;span&gt;9&lt;/span&gt;&lt;span&gt; file1     最大程度压缩 
rar a file1.rar test_file     创建一个叫做 &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1.rar&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 的包 
rar a file1.rar file1 file2 dir1     同时压缩 &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 以及目录 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; 
rar x file1.rar     解压rar包 
unrar x file1.rar     解压rar包 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -cvf archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt; file1     创建一个非压缩的 tarball 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -cvf archive.&lt;span&gt;tar&lt;/span&gt; file1 file2 dir1     创建一个包含了 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;file2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; 以及 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;dir1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;的档案文件 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -tf archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;     显示一个包中的内容 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -xvf archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;     释放一个包 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -xvf archive.&lt;span&gt;tar&lt;/span&gt; -C /tmp     将压缩包释放到 /&lt;span&gt;tmp目录下 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -cvfj archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.bz2 dir1     创建一个bzip2格式的压缩包 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -xvfj archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.bz2     解压一个bzip2格式的压缩包 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -cvfz archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.gz dir1     创建一个gzip格式的压缩包 
&lt;/span&gt;&lt;span&gt;tar&lt;/span&gt; -xvfz archive.&lt;span&gt;tar&lt;/span&gt;&lt;span&gt;.gz     解压一个gzip格式的压缩包 
&lt;/span&gt;&lt;span&gt;zip&lt;/span&gt; file1.&lt;span&gt;zip&lt;/span&gt;&lt;span&gt; file1     创建一个zip格式的压缩包 
&lt;/span&gt;&lt;span&gt;zip&lt;/span&gt; -r file1.&lt;span&gt;zip&lt;/span&gt;&lt;span&gt; file1 file2 dir1     将几个文件和目录同时压缩成一个zip格式的压缩包 
&lt;/span&gt;&lt;span&gt;unzip&lt;/span&gt; file1.&lt;span&gt;zip&lt;/span&gt;     解压一个zip格式压缩包 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　11、&lt;strong&gt;DEB 包&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
dpkg -i package.deb     安装/&lt;span&gt;更新一个 deb 包 
dpkg &lt;/span&gt;-&lt;span&gt;r package_name     从系统删除一个 deb 包 
dpkg &lt;/span&gt;-&lt;span&gt;l     显示系统中所有已经安装的 deb 包 
dpkg &lt;/span&gt;-l | &lt;span&gt;grep&lt;/span&gt; httpd     显示所有名称中包含 &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;httpd&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 字样的deb包 
dpkg &lt;/span&gt;-&lt;span&gt;s package_name     获得已经安装在系统中一个特殊包的信息 
dpkg &lt;/span&gt;-&lt;span&gt;L package_name     显示系统中已经安装的一个deb包所提供的文件列表 
dpkg &lt;/span&gt;--&lt;span&gt;contents package.deb     显示尚未安装的一个包所提供的文件列表 
dpkg &lt;/span&gt;-S /bin/&lt;span&gt;ping&lt;/span&gt;     确认所给的文件由哪个deb包提供 
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;　　12、&lt;strong&gt;APT 软件工具&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
apt-get &lt;span&gt;install&lt;/span&gt; package_name     安装/&lt;span&gt;更新一个 deb 包 
apt&lt;/span&gt;-cdrom &lt;span&gt;install&lt;/span&gt; package_name     从光盘安装/&lt;span&gt;更新一个 deb 包 
apt&lt;/span&gt;-&lt;span&gt;get update     升级列表中的软件包 
apt&lt;/span&gt;-&lt;span&gt;get upgrade     升级所有已安装的软件 
apt&lt;/span&gt;-&lt;span&gt;get remove package_name     从系统删除一个deb包 
apt&lt;/span&gt;-&lt;span&gt;get check     确认依赖的软件仓库正确 
apt&lt;/span&gt;-&lt;span&gt;get clean     从下载的软件包中清理缓存 
apt&lt;/span&gt;-cache search searched-package     返回包含所要搜索字符串的软件包名称 &lt;br/&gt;add-apt-repository ppa:&amp;lt;ppa_name&amp;gt; 　添加 ppa 到当前的库中并且自动导入公钥
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;span&gt;欢迎评论和转载。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Apr 2018 07:28:00 +0000</pubDate>
<dc:creator>左羽</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/1214804270hacker/p/8952698.html</dc:identifier>
</item>
<item>
<title>详解linux进程间通信-管道 popen函数 dup2函数 - liudw</title>
<link>http://www.cnblogs.com/liudw-0215/p/8952609.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liudw-0215/p/8952609.html</guid>
<description>&lt;p&gt;&lt;strong&gt;　　前言：&lt;/strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;进程之间交换信息的&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;唯一方法是经由&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;f&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;o r k&lt;span class=&quot;fontstyle0&quot;&gt;或&lt;span class=&quot;fontstyle1&quot;&gt;e x e c&lt;span class=&quot;fontstyle0&quot;&gt;传送打开文件，或通过文件系统。本章将说明进程之间相互通信的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;其他技术—&lt;span class=&quot;fontstyle1&quot;&gt;I P C&lt;span class=&quot;fontstyle0&quot;&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;InterProcess&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;Communicatio&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;n&lt;span class=&quot;fontstyle0&quot;&gt;）。今天&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;将介绍半双工的管道。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　一、匿名管道&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　1、匿名管道介绍：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;管道有两种限制；&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　(1) &lt;span class=&quot;fontstyle0&quot;&gt;它们是半双工的。数据只能在一个方向上流动。&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　(2)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;它们只能在具有公共祖先的进程之间使用。通常，一个管道由一个进程创建，然后该&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;进程调用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;o r k&lt;span class=&quot;fontstyle0&quot;&gt;，此后父、子进程之间就可应用该管道。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　&lt;span class=&quot;fontstyle0&quot;&gt;管道是由调用&lt;span class=&quot;fontstyle1&quot;&gt;p i p e&lt;span class=&quot;fontstyle0&quot;&gt;函数而创建的:&lt;br/&gt;&lt;span class=&quot;fontstyle3&quot;&gt;　　#include &amp;lt;unistd.h&amp;gt;&lt;br/&gt;　　int pipe(int&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s [ 2 ]&lt;span class=&quot;fontstyle3&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　返回：若成功则为&lt;span class=&quot;fontstyle3&quot;&gt;0&lt;span class=&quot;fontstyle0&quot;&gt;，若出错则为 &lt;span class=&quot;fontstyle3&quot;&gt;- 1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;　　&lt;span class=&quot;fontstyle0&quot;&gt;经由参数&lt;span class=&quot;fontstyle1&quot;&gt;f i l e d e s&lt;span class=&quot;fontstyle0&quot;&gt;返回两个文件描述符： &lt;span class=&quot;fontstyle1&quot;&gt;f i l e d e s [ 0 ]&lt;span class=&quot;fontstyle0&quot;&gt;为读而打开， &lt;span class=&quot;fontstyle1&quot;&gt;f i l e d e s [ 1 ]&lt;span class=&quot;fontstyle0&quot;&gt;为写而打开。 &lt;span class=&quot;fontstyle1&quot;&gt;f i l e d e s [ 1 ]&lt;br/&gt;&lt;span class=&quot;fontstyle0&quot;&gt;的输出是&lt;span class=&quot;fontstyle1&quot;&gt;f i l e d e s [ 0 ]&lt;span class=&quot;fontstyle0&quot;&gt;的输入。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;　　&lt;span class=&quot;fontstyle0&quot;&gt;程序&lt;span class=&quot;fontstyle1&quot;&gt;1- 1&lt;span class=&quot;fontstyle0&quot;&gt;创建了一个从父进程到子进程的管道，并且父进程经由该管道向子进程传送数据。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; pfd[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;],ret;
    ret &lt;/span&gt;=&lt;span&gt; pipe(pfd);//创建管道
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(ret&amp;lt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pipe error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }   
    pid_t pid &lt;/span&gt;=&lt;span&gt; fork();
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pid&amp;lt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;fork error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }   
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(pid&amp;gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)//父进程
    {   
        close(pfd[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
        puts(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;please input your num:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        scanf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&amp;amp;&lt;span&gt;num);
        write(pfd[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;],&amp;amp;num,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(num));
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;wait(NULL);&lt;/span&gt;
&lt;span&gt;    }   
    &lt;/span&gt;&lt;span&gt;else //子进程&lt;/span&gt;&lt;span&gt;
    {   
        close(pfd[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
        read(pfd[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;],&amp;amp;num,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(num));
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;num:%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,num);
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　注：头文件my.h见这篇博客：http://www.cnblogs.com/liudw-0215/p/8946879.html &lt;/p&gt;
&lt;p&gt;　　运行示例，如下图：&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1249620/201804/1249620-20180426134553210-29702316.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　接下来介绍几个跟管道有关的函数。&lt;/p&gt;
&lt;p&gt;　　2、dup&lt;span class=&quot;fontstyle1&quot;&gt;和&lt;span class=&quot;fontstyle0&quot;&gt;d u p 2&lt;span class=&quot;fontstyle1&quot;&gt;函数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;下面两个函数都可用来复制一个现存的文件描述符：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;　　int dup(int&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d es&lt;span class=&quot;fontstyle3&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle3&quot;&gt;　　int dup2(int &lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s&lt;span class=&quot;fontstyle3&quot;&gt;, int &lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s 2&lt;span class=&quot;fontstyle3&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　两函数的返回：若成功为新的文件描述符，若出错为- &lt;span class=&quot;fontstyle5&quot;&gt;1&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　由&lt;span class=&quot;fontstyle5&quot;&gt;d u p&lt;span class=&quot;fontstyle1&quot;&gt;返回的新文件描述符一定是当前可用文件描述符中的最小数值。用 &lt;span class=&quot;fontstyle5&quot;&gt;d u p 2&lt;span class=&quot;fontstyle1&quot;&gt;则可以用&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s 2&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　参数指定新描述符的数值。如果 &lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s 2&lt;span class=&quot;fontstyle1&quot;&gt;已经打开，则先将其关闭。如若&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s&lt;span class=&quot;fontstyle1&quot;&gt;等于&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s 2&lt;span class=&quot;fontstyle1&quot;&gt;，则&lt;br/&gt;&lt;span class=&quot;fontstyle5&quot;&gt;　　d u p 2&lt;span class=&quot;fontstyle1&quot;&gt;返回&lt;span class=&quot;fontstyle4&quot;&gt;f i l e d e s 2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;，而不关闭它。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　优化程序1-1，程序1-2如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; pfd[&lt;span&gt;2&lt;/span&gt;&lt;span&gt;],ret;
    ret &lt;/span&gt;=&lt;span&gt; pipe(pfd);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(ret&amp;lt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pipe error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }   
    pid_t pid &lt;/span&gt;=&lt;span&gt; fork();
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pid&amp;lt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;fork error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }   
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(pid&amp;gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        close(pfd[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]);
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
        puts(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;please input your num:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        scanf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&amp;amp;&lt;span&gt;num);
        write(pfd[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;],&amp;amp;num,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(num));
        wait(NULL);
    }   
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {   
        close(pfd[&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
        dup2(pfd[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;],STDIN_FILENO);//pfd[0]复制到标准输入
        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; num;
        read(STDIN_FILENO,&lt;/span&gt;&amp;amp;num,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(num));
        printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;num:%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,num);
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;
3、&lt;span class=&quot;fontstyle0&quot;&gt;popen&lt;span class=&quot;fontstyle1&quot;&gt;和&lt;span class=&quot;fontstyle0&quot;&gt;p c l o s e&lt;span class=&quot;fontstyle1&quot;&gt;函数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;因为常见的操作是创建一个连接到另一个进程的管道，然后读其输出或向其发送输入，所&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;以标准&lt;span class=&quot;fontstyle3&quot;&gt;I / O&lt;span class=&quot;fontstyle1&quot;&gt;库为实现这些操作提供了两个函数 &lt;span class=&quot;fontstyle3&quot;&gt;p o p e n&lt;span class=&quot;fontstyle1&quot;&gt;和&lt;span class=&quot;fontstyle3&quot;&gt;p c l o s e&lt;span class=&quot;fontstyle1&quot;&gt;。这两个函数实现的操作是：创建&lt;br/&gt;一个管道， &lt;span class=&quot;fontstyle3&quot;&gt;f o r k&lt;span class=&quot;fontstyle1&quot;&gt;一个子进程，关闭管道的不使用端， &lt;span class=&quot;fontstyle3&quot;&gt;e x e c&lt;span class=&quot;fontstyle1&quot;&gt;一个&lt;span class=&quot;fontstyle3&quot;&gt;s h e l l&lt;span class=&quot;fontstyle1&quot;&gt;以执行命令，等待命令终止。&lt;br/&gt;&lt;span class=&quot;fontstyle4&quot;&gt;　　#include &amp;lt;stdio.h&amp;gt;&lt;br/&gt;　　FILE *popen(const char * &lt;span class=&quot;fontstyle5&quot;&gt;c m d s t r i n g&lt;span class=&quot;fontstyle4&quot;&gt;, const char * &lt;span class=&quot;fontstyle5&quot;&gt;t y p e&lt;span class=&quot;fontstyle4&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　返回：若成功则为文件指针，若出错则为 &lt;span class=&quot;fontstyle4&quot;&gt;N U L L&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;　　&lt;br/&gt;&lt;span class=&quot;fontstyle4&quot;&gt;　　int pclose(FILE * &lt;span class=&quot;fontstyle5&quot;&gt;f p&lt;span class=&quot;fontstyle4&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　返回： &lt;span class=&quot;fontstyle5&quot;&gt;c m d s t r i n g&lt;span class=&quot;fontstyle1&quot;&gt;的终止状态，若出错则为 &lt;span class=&quot;fontstyle4&quot;&gt;- 1&lt;br/&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　函数&lt;span class=&quot;fontstyle3&quot;&gt;popen &lt;span class=&quot;fontstyle1&quot;&gt;先执行&lt;span class=&quot;fontstyle3&quot;&gt;f o r k&lt;span class=&quot;fontstyle1&quot;&gt;，然后调用&lt;span class=&quot;fontstyle3&quot;&gt;e x e c&lt;span class=&quot;fontstyle1&quot;&gt;以执行&lt;span class=&quot;fontstyle5&quot;&gt;c m d s t r i n g&lt;span class=&quot;fontstyle1&quot;&gt;，并且返回一个标准 &lt;span class=&quot;fontstyle3&quot;&gt;I / O&lt;span class=&quot;fontstyle1&quot;&gt;文件指针。&lt;br/&gt;　　如果&lt;span class=&quot;fontstyle5&quot;&gt;t y p e&lt;span class=&quot;fontstyle1&quot;&gt;是&lt;span class=&quot;fontstyle4&quot;&gt;&quot;&lt;span class=&quot;fontstyle7&quot;&gt;r&lt;span class=&quot;fontstyle4&quot;&gt;&quot;&lt;span class=&quot;fontstyle1&quot;&gt;，则文件指针连接到&lt;span class=&quot;fontstyle5&quot;&gt;c m d s t r i n g&lt;span class=&quot;fontstyle1&quot;&gt;的标准输出&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;。&lt;br/&gt;　　如果&lt;span class=&quot;fontstyle5&quot;&gt;t y p e &lt;span class=&quot;fontstyle1&quot;&gt;是&lt;span class=&quot;fontstyle4&quot;&gt;&quot;&lt;span class=&quot;fontstyle7&quot;&gt;w&lt;span class=&quot;fontstyle4&quot;&gt;&quot;&lt;span class=&quot;fontstyle3&quot;&gt;,&lt;span class=&quot;fontstyle1&quot;&gt;则文件指针连接到&lt;span class=&quot;fontstyle5&quot;&gt;c m d s t r i n g &lt;span class=&quot;fontstyle1&quot;&gt;的标准输入&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;em id=&quot;__mceDel&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　程序1-3将用popen函数实现下图功能：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1249620/201804/1249620-20180426135311627-1943175912.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle6&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle7&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; c;
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;((c = getchar()) !=&lt;span&gt; EOF)
    {   
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(isupper(c))　　//是否有大写
            c &lt;/span&gt;=&lt;span&gt; tolower(c);　　//转为小写
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(putchar(c) ==&lt;span&gt; EOF)
            puts(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;put error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(c == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
            fflush(stdout);　　//刷新标准输出
    }   
    exit(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
}&lt;p&gt;---isupper.c---&lt;/p&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;#define&lt;/span&gt; MAXLINE 4096

&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;&lt;span&gt; line[MAXLINE];
    FILE &lt;/span&gt;*&lt;span&gt;fpin;

    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;((fpin = popen(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;./upper&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)) ==&lt;span&gt; NULL)
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;popen error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(;;){
        fputs(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;prompt &amp;gt; &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,stdout);
        fflush(stdout);
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fgets(line,MAXLINE,fpin) ==&lt;span&gt; NULL)
            &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fputs(line,stdout) ==&lt;span&gt; EOF)
            perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;puts error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);    
    }   
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pclose(fpin) == -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) 
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pclose error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

    putchar(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;

}&lt;p&gt;---popen.c---&lt;/p&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　运行演示如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1249620/201804/1249620-20180426135956913-795038211.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　二、有名管道（命名管道）&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　1、简介&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;　　命名管道&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;有时被称为FIFO。管道只能由相关进程使用，它们共同的祖先进程创建了管道。&lt;br/&gt;但是，通过&lt;span class=&quot;fontstyle0&quot;&gt;F I F O&lt;span class=&quot;fontstyle2&quot;&gt;，不相关的进程也能交换数据。&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;br/&gt;&lt;span class=&quot;fontstyle3&quot;&gt;#include &amp;lt;sys/types.h&amp;gt;&lt;br/&gt;#include &amp;lt;sys/stat.h&amp;gt;&lt;br/&gt;int mkfifo(const char * &lt;span class=&quot;fontstyle4&quot;&gt;p a t h n a m e&lt;span class=&quot;fontstyle3&quot;&gt;, mode_t&lt;span class=&quot;fontstyle4&quot;&gt;m o d e&lt;span class=&quot;fontstyle3&quot;&gt;) ;&lt;br/&gt;&lt;span class=&quot;fontstyle2&quot;&gt;返回：若成功则为&lt;span class=&quot;fontstyle3&quot;&gt;0&lt;span class=&quot;fontstyle2&quot;&gt;，若出错则为 &lt;span class=&quot;fontstyle3&quot;&gt;- 1&lt;br/&gt;&lt;span class=&quot;fontstyle0&quot;&gt;m k f i f o&lt;span class=&quot;fontstyle2&quot;&gt;函数中&lt;span class=&quot;fontstyle4&quot;&gt;m o d&lt;span class=&quot;fontstyle0&quot;&gt;e&lt;span class=&quot;fontstyle2&quot;&gt;参数的规格说明与&lt;span class=&quot;fontstyle0&quot;&gt;o p e n&lt;span class=&quot;fontstyle2&quot;&gt;函数中的&lt;span class=&quot;fontstyle4&quot;&gt;m o d e&lt;span class=&quot;fontstyle2&quot;&gt;相同&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;。&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;br/&gt;一旦已经用 &lt;span class=&quot;fontstyle0&quot;&gt;m k f i f o&lt;span class=&quot;fontstyle2&quot;&gt;创建了一个 &lt;span class=&quot;fontstyle0&quot;&gt;F I F O&lt;span class=&quot;fontstyle2&quot;&gt;，就可用 &lt;span class=&quot;fontstyle0&quot;&gt;o p e n&lt;span class=&quot;fontstyle2&quot;&gt;打开它。确实，一般的文件 &lt;span class=&quot;fontstyle0&quot;&gt;I / O&lt;span class=&quot;fontstyle2&quot;&gt;函数&lt;br/&gt;（&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span&gt;c l o s e&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span&gt;、&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span&gt;r e a d&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span&gt;、&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span&gt;w r i t e&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span&gt;、&lt;/span&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;span&gt;u n l i n k&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;等）都可用于&lt;span class=&quot;fontstyle0&quot;&gt;F I F O&lt;span class=&quot;fontstyle2&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle5&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle4&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;　　程序2-1演示有名管道通信，一个写端、一个读端：&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

typedef &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt;&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; name[&lt;span&gt;16&lt;/span&gt;&lt;span&gt;];
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; age;
    &lt;/span&gt;&lt;span&gt;double&lt;/span&gt;&lt;span&gt; height;
}Person;

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    mkfifo(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pipe&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;0644&lt;/span&gt;);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建管道 名字为pipe&lt;/span&gt;
    &lt;span&gt;int&lt;/span&gt; fd = open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pipe&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,O_WRONLY);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fd &amp;lt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;open error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);    
    }   
    
    Person p;
    puts(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;please input your name,age,height:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    scanf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%s%d%lf&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,p.name,&amp;amp;p.age,&amp;amp;&lt;span&gt;p.height);
    write(fd,&lt;/span&gt;&amp;amp;p,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(p));
    close(fd);

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
}&lt;br/&gt;---fwrite.c---&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

typedef &lt;/span&gt;&lt;span&gt;struct&lt;/span&gt;&lt;span&gt;{
    &lt;/span&gt;&lt;span&gt;char&lt;/span&gt; name[&lt;span&gt;16&lt;/span&gt;&lt;span&gt;];
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; age;
    &lt;/span&gt;&lt;span&gt;double&lt;/span&gt;&lt;span&gt; height;
}Person;

&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
{
    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; fd = open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;pipe&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,O_RDONLY);
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(fd &amp;lt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
    {   
        perror(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;open error!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        exit(&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
    }   

    Person p;
    read(fd,&lt;/span&gt;&amp;amp;p,&lt;span&gt;sizeof&lt;/span&gt;&lt;span&gt;(p));
    printf(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;name:%-5sage:%-5dheight:%-5lf\n &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,p.name,p.age,p.height);
    close(fd);&lt;br/&gt;　　 unlink(&quot;pipe&quot;);//删除管道文件

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;

}&lt;br/&gt;--- fread.c ---&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　运行演示：先编译fwrite.c生成w可执行用户，./w执行，再编译fread.c然后执行，写端输入数据，读端输出数据：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1249620/201804/1249620-20180426145903049-77267629.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1249620/201804/1249620-20180426145908636-1418459259.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;总结：主要介绍了进程间通信的管道，主要分为匿名管道和有名管道，还介绍了popen等函数&lt;/p&gt;



</description>
<pubDate>Thu, 26 Apr 2018 07:16:00 +0000</pubDate>
<dc:creator>liudw</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/liudw-0215/p/8952609.html</dc:identifier>
</item>
<item>
<title>2018春招实习笔试面试总结（PHP） - zlnevsto</title>
<link>http://www.cnblogs.com/zlnevsto/p/8949678.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zlnevsto/p/8949678.html</guid>
<description>&lt;p&gt;　　博主双非渣本计算机软件大三狗一枚，眼看着春招就要结束了，现将自己所经历的的整个春招做一个个人总结。&lt;/p&gt;
&lt;p&gt;　　首先就是关于&lt;strong&gt;投递计划&lt;/strong&gt;，博主自己整理了一份各大公司的春招信息，包括网申地址，开始时间，结束时间，以及自己的求职状况，附图如下：&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;春招时刻表&quot; src=&quot;https://images2018.cnblogs.com/blog/1185479/201804/1185479-20180426094039000-1623188918.png&quot; alt=&quot;春招时刻表&quot; width=&quot;744&quot; height=&quot;300&quot;/&gt;    &lt;/p&gt;
&lt;p&gt;　　由图可以看出，博主的求职历程有多么的艰辛（其他还有一些直接简历就被筛掉的我就不附图了。。。），在春招刚开始，博主根据自己安排的计划表一家一家公司的投递简历（简历在寒假时已经做好），根据不同的公司对于简历也要进行不同的修改，争取做到一家公司一份简历，给每家公司投递的简历都不同。可能是由于博主在简历中写的项目经历的内容还可以，所以简历只是被一部分公司给筛掉了，还有一部分公司还是让博主进入到了笔试环节。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;笔试环节&lt;/strong&gt;，在这个环节上，博主也是十分感慨的，因为虽然简历通过的公司不少，但是在笔试上感觉自己掉进了一个大坑。。一共投了二十几家公司，简历通过的有大概十几家，然后，笔试基本上就全军覆没了o(╥﹏╥)o。到最后博主接到面试通知的只有三家，百度，360，京东。关于笔试的具体内容，博主简单说一下，各个公司的笔试题题型大多数都差不多，一般都是10-20道选择题，2-3道编程题，当然如果是顶尖公司的话，他们的笔试会有很多内容，包括数学能力测试，逻辑能力测试，性格测评等等，也有比较令人“难忘”的公司的笔试题，比如字节跳动（今日头条），头条的笔试题十分豪爽，上来就甩到我脸上五道编程题，一道20分，刚拿到题的时候，我的内心是崩溃的。博主算法能力不是很强，五道编程题，最后只做出来一道，令我尴尬的是其余四道中还有两道题看不懂题o(╥﹏╥)o。。。故，卒。不提伤心事，在做好总结的同时，我详细说下我接下来的面试过程。&lt;/p&gt;
&lt;p&gt;　　激动人心的&lt;strong&gt;面试环节。&lt;/strong&gt;接到这三家的面试邀请的时间顺序，先是京东，4月9日的笔试通过后，接到4月13日在上海的现场面试，接到通知时已经是12日，博主身处异地，无法赶到现场对此很遗憾，但又不想错过这次机会，就尝试性的给京东的面试通知邮件发了一封回复，告知本人十分想参加面试但无法按时到达，可不可以转为视频或电面，然后那边在傍晚的时候给我发来邮件，说我的请求已经转发至面试官，具体是否可以视频或电面请等待面试官通知。在13日上午，我收到了面试官的电话，告知下午两点半进行电面。这是我第一次电面，十分激动，一边等待一边进行着复习，面试具体细节情节就不再赘述，这里只把面试问题列出，供大家参考。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;京东-PHP开发工程师-实习-一面&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　1.自我介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　2.介绍项目，访问量，数据库表有多大&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　3.数组和链表的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　数组静态分配内存，链表动态分配内存；数组在内存中连续，链表不连续；数组元素在栈区，链表元素在堆区；数组利用下标定位，时间复杂度为O(1)，链表定位元素时间复杂度O(n)；数组插入或删除元素的时间复杂度O(n)，链表的时间复杂度O(1)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　4.实现单链表的查询，找出重复元素&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　这道题博主当时因紧张过度，答得很烂，只回答出了暴力遍历的方法，优化没想到。&lt;/p&gt;
&lt;p&gt;　　暴力方法，链表依次遍历，每当读取一个值，让他与前面的值进行比较，看是否重复，时间复杂度为n的平方。&lt;strong&gt;改进&lt;/strong&gt;：使用hash表实现，时间复杂度为n，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　5.简述hash表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　是根据键值对直接进行访问的数据结构，可以提供快速的插入操作和查找操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　6.http请求码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　401：请求需要认证  403：访问请求被拒绝  404：找不到页面  301：请求重定向，永久性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　7.tcp/udp区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　博主答的：TCP面向连接，UDP无连接；TCP可靠，UDP不可靠；TCP传递字节流，UDP传递报文段；TCP适用于安全性较高如邮件传输，文件传输，UDP适用于速度较快如语音视频等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　8.简述tcp三次握手&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　　　这个博主感觉自己回答的也很烂，印象中自己说的是第一次握手客户端向服务端发送一个请求，第二次握手服务端向客户端发送一个请求，第三次握手客户端向服务端发送一个请求。。。。&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;　　　　博主后来查资料找到的自认为完美的&lt;strong&gt;答案&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;　　　　　　客户端–发送带有SYN标志的数据包–一次握手–服务端（此时服务端确认了客户端可以发送东西，确认了自己可以接收东西）&lt;/p&gt;
&lt;p&gt;　　　　　　服务端–发送带有SYN/ACK标志的数据包–二次握手–客户端（此时客户端确认了自己可以发送以及接收，服务端可以发送以及接收东西）&lt;/p&gt;
&lt;p&gt;　　　　　　客户端–发送带有带有ACK标志的数据包–三次握手–服务端（此时服务端也确认了客户端可以发送以及接收，自己可以发送以及接收，连接建立）&lt;/p&gt;
&lt;p&gt;　　　　也就是说，TCP三次握手的实质就是客户端以及服务端分别确认双方发送以及接收正常，然后连接建立。（有没有感觉瞬间思路清晰了呢？）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　9.数据库索引是什么？索引和主键的区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;博主答的依旧很烂。。&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;正解&lt;/strong&gt;：一个索引是存储的表中一个特定列的值数据结构。&lt;/p&gt;
&lt;p&gt;　　　　索引和主键的区别：1:主键是为了标识数据库记录唯一性,不允许记录重复,且键值不能为空,主键也是一个特殊索引.2:数据表中只允许有一个主键,但是可以有多个索引.3.使用主键会数据库会自动创建主索引,也可以在非主键上创建索引,方便查询效率.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　10.使用sql语句实现对一张表的去重总数查询（表中有两个字段，id和name，name可重复）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;博主的心都是碎的，“mysql了解吧？”，“了解”，“说一下去重查询吧”，“......”&lt;/p&gt;
&lt;p&gt;　　　　&lt;strong&gt;正解&lt;/strong&gt;：Select count(distinct name) from 表名&lt;/p&gt;
&lt;p&gt;　　接下来的问题就比较常规了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　11.平常如何学习？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　12.了解过最新的前沿技术？了解过深度学习？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　13.知道设计模式吗？设计模式的优点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　设计模式（Design pattern）：是针对设计问题的通用解决方案。使用设计模式：可以把它应用到特定的应用中，用于解决相似的问题。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。&lt;/p&gt;
&lt;p&gt;　　就这样，博主人生中的第一次电面就结束了，结束前人家问我还有什么问题吗？我好死不死的问了一句，您觉得我表现怎么样，能通过这轮面试吗？答：还不算太差，至于结果等通知。当然，结果不用等博主也已经猜到了。至此，我的京东PHP实习生求职道路凉凉。&lt;/p&gt;
&lt;p&gt;　　经过了这次面试（虽然只是一面），我深刻意识到了自己的不足，尤其是在基础知识方面的不足，有些东西自己知道，但是说不出来，还有些东西自己根本就不知道o(╥﹏╥)o......于是决定发愤图强，在接下来好好表现。360的笔试是在3月31日的，博主在4月12日收到了自己笔试通过的喜讯，并被告知将在4月25日进行远程视频面试（时间间隔确实有点长，不过也让自己有了充足的准备时间），在等待360面试的过程中，博主迎来了百度的面试邀请。百度的效率还是没的说的，博主4月18日笔试，4月20日被告知笔试通过，参加4月21日的远程视频面试（比360的都早。。），在经过了精心的准备后，博主上战场了。由于那几天时间仓促，没有来得及做记录，所以博主能想到什么问题就记录下来，想不到的也没办法了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;百度-测试开发工程师-实习-一面&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;strong&gt;1.自我介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　2.项目介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　3.挑一个项目里的功能简单说一下，如何实现，遇到什么困难&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　4.手撸快排&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　当时博主脑子抽了，硬生生没写出来，当时想扇自己脸（之后的几天每天都手撸两遍）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　5.进程与线程的区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　6.两张表，a表有name，addr字段，b表有name，grade字段，addr字段是地址，如北京市海淀区，焦作市山阳区，grade是分数，现在给定一个区域，如 山阳区，用sql语句查找出符合要求的学生及其分数，以及各分数段的学生人数，60-70,70-80...&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这道题博主答的也不好，语句使用不够熟练&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　&lt;strong&gt;正解&lt;/strong&gt;：&lt;/span&gt;select b.`name`,b.grade from b left join a on b.name=a.name where a.addr like '%山阳区%'; select count(*) from b where b.grade between 60 and 70;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　7.OSI七层协议（答出来了五个。。）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　8.Cookie和Session区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　9.Linux基本命令（如何查看进程，如何查看一个进程的cpu占用率）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;基本命令回答的还算可以，查看一个进程的cpu占用率当时不会，后来查资料发现可以先ps找到进程号，再top -p id来查看&lt;/span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　10.使用过哪些PHP扩展&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;MySQL，Mysqli，PDO，JSON，PHP_ZIP，MEMCACHE&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　11.PHP支持多继承吗？为何？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;　　&lt;strong&gt;正解&lt;/strong&gt;：不支持，一个子类只能继承一个父类，如果想要实现多继承，可以使用接口实现。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　12.垃圾回收机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;zval容器的知识，不多说。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　13.require和include区别，和_once的区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　正解&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;Require读取先读取，include放在哪在哪读；Require无返回值，include有返回值；错误处理方式不同，include出错会报一个警告，程序继续执行，Require出错会报一个致命错误，程序终止。&lt;/p&gt;
&lt;p&gt;　　　　　　　_once指只执行一次。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;14.思维逻辑题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　题目：两根长度粗细不均匀的香，烧完都是一个小时，如何判断15分钟这个节点？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　　　&lt;/strong&gt;博主刚听到这道题的时候是一脸懵逼的，第一次遇到还会有这种类型的问题，然后脑子没转过来弯，想不出，面试官小姐姐给我提示，从两端烧，我才领悟过来。&lt;/p&gt;
&lt;p&gt;　　　　答案：一根香从两端烧，另一根一端烧（同时开始），当第一根烧完时，第二根剩下30分钟，此时记下这个时间节点，把第二根的另一端点燃，最后烧完的时间就是十五分钟。&lt;/p&gt;
&lt;p&gt;　　博主记起来的大概就这么多，当时自我感觉答的也不是很好，不过比京东一面时候要强，等待了一会发现对面没有再次发起视频邀请，以为自己凉了，正打算收拾书包去上课（当时逃了课在寝室面试），二面邀请发过来了（幸亏没走早）。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;百度-测试开发工程师-实习-二面&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　1.自我介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　2.项目介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　3.挑一个印象深刻的功能说一下&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　4.项目中遇到高并发问题如何解决&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　5.使用Mysql，如何优化？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　答：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;之前针对这类问题，博主有好好整理自己的解决思路，所以感觉回答的还算可以。答：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　　　选取最适用的字段属性：极可能缩小类型大小，比如邮编，定义为char（6）即可，不必太大，比如开关之类的字段定义tinyint长度设为1就行；&lt;/p&gt;
&lt;p&gt;　　　　在可能的情况下把字段尽量不要设置为null，减少查询时需要比较null值；&lt;/p&gt;
&lt;p&gt;　　　　使用join来代替子查询；&lt;/p&gt;
&lt;p&gt;　　　　对用于join where判断和order by的字段建立索引，尽量不对那种大量重复的字段建立索引，比如性别。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　6.当一张表中的数据足够多时，如何优化？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这条博主没有回答上来，直接说的不清楚，没有了解过，面试官很友善的跟我说可以下去了解下。之后了解到使用&lt;strong&gt;分表&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　7.思维逻辑题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　题目：给你一个3L的杯子和5L的杯子，如何倒出4L的水？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这是博主遇到的第二道逻辑题，因为有了一次的经验，所以很快就想出了解决方案：将5L倒满，用5L往3L倒满（此时5L剩2L），将3L杯子水倒掉，将5L中剩余的2L水倒入3L中，将5L倒满（此时3L杯中有2L水），用5L向3L倒把3L倒满，5L杯子内的水就是4L。我说完面试官又问我如果反过来倒呢？这个其实也简单，大家可以思考一下。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　自我感觉二面很不错，面试官也很和蔼，聊的很开心，二面通过。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;百度-测试开发工程师-实习-三面（HR面）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;&lt;span&gt;激动！到了三面能不激动吗？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　1.自我介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　2.项目介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　3.两个有序数组的合并&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　4.对上面那个函数进行测试&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　5.对一只圆珠笔进行测试&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　6.给两部相同手机，在100层楼中，如何操作可以判断手机会摔碎的最低楼层？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　7.个人学习能力如何？举个直接的例子&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　8.身为班长，如何处理班内事务&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　9.你觉得你和其他人相比你的优势是什么？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　10.除了我们公司有没有投递其他公司？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　大概问的问题就这么多，之后就是对我实习时长的询问，以及问我有什么问题，然后，就没有然后了，等结果！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　在我看来，等待才是最煎熬的，尤其是博主在面试时忘记询问结果什么时候会通知，导致一天登录三次百度的个人招聘中心，看着那个大大的“安排面试中”，心里纠结的要死，以为很快能得到的结果，却一直没有消息，来到了4月24日的晚上，当时博主心里已经放下了，不论成不成，还是要复习面对25日上午的360的面试的，就在博主专心致志看缓存相关的知识的时候，北京打来电话，HR告知我三面通过，两天内会给我发来电子offer，瞬间感觉自己满血复活了，泪流满面〒▽〒，我容易吗（不过在面试过程中踩的坑，不会的题，还是要怪自己在大学三年以来没有好好学，因为是实习面试，所以综合来看各个公司的面试问的问题也都是最基础的问题，并没有过难的问题，不会？那就是自己没有学好的原因了。）。兴奋归兴奋，还是要好好准备明天的面试，让室友上课帮我请好假，专心复习。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;360-PHP开发工程师-实习-一面　　&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　1.自我介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　2.项目介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　3.项目功能具体介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　4.项目遇到的难点&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　5.通过项目提高了什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;360的一面给我的感觉看似简单，没有问过多的基础性的问题，但全程都在围绕着自己做的项目展开，问的特别细，甚至当博主在回答自己遇到的困难，自己如何解决的时候，面试官还会提出自己的疑问，“这个知识点不是应该怎么怎么样吗？”，然后又跟上一句，“不过你作为实习生来说，做到这个程度也还算不错了”，吓得博主一身冷汗，一面过。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;360-PHP开发工程师-实习-二面&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;span&gt;1.&lt;/span&gt;&lt;span&gt;自我介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　2.项目介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　3.简述你了解的网络协议&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　4.有使用到缓存吗&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　5.有做过单元测试吗&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;　　6.对我们部门有什么想问的么&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　二面自我感觉还是很顺利的，和面试官聊的很嗨，最后他还给了我一些接下来学习方向性的建议（针对我投的这个职位），人很好。二面过。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;360-PHP开发工程师-实习-三面（HR面）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　1.自我介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　2.项目介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　3.自己和他人比有什么优势&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　4.学习能力如何&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　5.有没有投其他公司&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　6.你对于你们学校的计算机相关专业的课程怎么看？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　7.对于我们还有什么问题吗？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;三面HR小姐姐人也很好，360的三次面试给我的整体感觉就是很和蔼，很友好，在视频面试结束没多久，他们那边就打过来电话，告知我三面都过了，等待通知吧。我在这里想说明一点，大家可能觉得360的面试过于简单，其实不然，首先，他们对于项目的挖掘很深，其次，我投递的部门并不属于360的核心部门，因此面试可能会相对来说容易一些，如果是360的核心部门，比如安全，比如搜索，面试的难度将会大大的提升（博主当初投递时懵懂无知，并没有考虑到部门的因素，大家投简历如果条件允许，一定要先考虑部门怎么样。）。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;　　至此，博主的春招实习求职历程算是告一段落了，当然，如果有机会，博主还会继续投递简历，毕竟各个公司的面试不同，多面可以提升自己的经验，让自己在秋招的时候总不至于什么都不知道，有了这些宝贵的经验， 相信大家在秋招时一定能斩获更多的offer，一起朝着梦想加油！（若还有公司的面试经验，博主会继续更新。）　　&lt;/p&gt;




</description>
<pubDate>Thu, 26 Apr 2018 07:06:00 +0000</pubDate>
<dc:creator>zlnevsto</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zlnevsto/p/8949678.html</dc:identifier>
</item>
<item>
<title>指尖大冒险H5小游戏 - herorest</title>
<link>http://www.cnblogs.com/coderhero/p/8952498.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/coderhero/p/8952498.html</guid>
<description>&lt;p&gt;前些天看了一篇很赞的&lt;a title=&quot;文章&quot; href=&quot;https://aotu.io/notes/2017/11/28/h5_game_jumping/&quot; target=&quot;_blank&quot;&gt;文章&lt;/a&gt;，又因为想学习phaser，所以有了这个案例，在线预览可以点下方链接。&lt;/p&gt;
&lt;p&gt;本案例中，核心原理是按文章中所提到的内容制作，整体遵循“大道至简”的原则开发，其实是懒的去封装模块。。。&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;在线预览&quot; href=&quot;http://www.winqee.com/backup/phaser1&quot; target=&quot;_blank&quot;&gt;在线预览&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文中代码可以访问本人&lt;a title=&quot;github&quot; href=&quot;https://github.com/herorest/jumpGame&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;&lt;br/&gt;------&lt;/p&gt;
&lt;h2&gt;关键技术点&lt;/h2&gt;
&lt;p&gt;除去上面提到的文章中的技术点外，还有几处需要注意的地方：&lt;/p&gt;
&lt;h3&gt;1. 元素渲染层级&lt;/h3&gt;
&lt;p&gt;开发时候不注意的话，某些情况下可能会出现后面的装饰物，被前面的挡住，或者是机器人被石头挡住等尴尬的局面。对此，不同的框架不同的处理方式，以phaser为例，使用sort及分组来进行处理&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
stoneStopFlagGroup.sort('y'&lt;span&gt;,Phaser.Group.SORT_ASCENDING);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;普通阶梯组&lt;/span&gt;
stonesGroup =&lt;span&gt; game.add.group();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;阻碍阶梯组&lt;/span&gt;
stoneStopGroup =&lt;span&gt; game.add.group();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;装饰组&lt;/span&gt;
stoneStopFlagGroup =&lt;span&gt; game.add.group();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;全局组，包括robot，各种阶梯，装饰&lt;/span&gt;
groupItem = game.add.group();
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. 行走动画&lt;/h3&gt;
&lt;p&gt;看素材里，原本是有这段动画的，也就是sprite中的0-9帧，但原案例中不知什么原因去掉了，这里我重新加上了这部分动画。&lt;br/&gt;重新加上后，就有了行走与跳跃动画切换的问题，如何调整使得动作连贯不突兀，就需要使用不同框架的童鞋自行研究了。&lt;br/&gt;phaser中，尝试出来的最连贯的写法：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
robot.animations.stop('walk',20,&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
robot.animations.play(&lt;/span&gt;'stand',30,&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
robot.animations.play(&lt;/span&gt;'jump',30,&lt;span&gt;false&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt; 3. 断点续传&lt;/h3&gt;
&lt;p&gt;其实就是一开始只加载数量不多的阶梯，然后随着进度加多加多再加多，达到玩不完的效果&lt;br/&gt;此处要注意结合渲染层级，保证后续添加进来的阶梯能正确的绘制，而不会挡住机器人。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; randomNum(num){
&lt;/span&gt;&lt;span&gt;  //&lt;/span&gt;&lt;span&gt;无阻碍阶梯数组&lt;/span&gt;
  stoneRandomNum = stoneRandomNum.concat(utils.createRandomArr(num,2,0&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;  //&lt;/span&gt;&lt;span&gt;阻碍阶梯数组&lt;/span&gt;
  stoneRandomNum2 = stoneRandomNum2.concat(utils.getRandomPool(num,3&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;  //&lt;/span&gt;&lt;span&gt;阻碍阶梯装饰品&lt;/span&gt;
  stoneRandomFlag = stoneRandomFlag.concat(utils.createRandomArr(num,6,1&lt;span&gt;));
}

&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; addRandomNum(num){
&lt;/span&gt;&lt;span&gt;  var&lt;/span&gt; len =&lt;span&gt; stoneRandomNum.length;
  randomNum(num);
&lt;/span&gt;&lt;span&gt;  //&lt;/span&gt;&lt;span&gt;创建无阻碍阶梯&lt;/span&gt;
&lt;span&gt;  stoneCreate(stoneRandomNum,len);
&lt;/span&gt;&lt;span&gt;  //&lt;/span&gt;&lt;span&gt;创建阻碍阶梯&lt;/span&gt;
&lt;span&gt;  stoneStopCreate(stoneRandomNum,stoneRandomNum2,len);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;问题&lt;/h2&gt;
&lt;p&gt;代码中的阶梯掉落处理比较耗费资源，有想法的童鞋可以给点优化建议&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;阶梯掉落处理&lt;/span&gt;
&lt;span&gt;function&lt;/span&gt;&lt;span&gt; dropStone(pos){
  (&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
    setTimeout(&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(){
&lt;/span&gt;&lt;span&gt;      if&lt;/span&gt;(currentPos ==&lt;span&gt; pos){
        gameoverFun();
      }
&lt;/span&gt;&lt;span&gt;      var&lt;/span&gt; stone =&lt;span&gt; stoneArr[pos];
      game.add.tween(stone).to( { x:stone.x,y:stone.y &lt;/span&gt;+&lt;span&gt; game.height },stoneDropStep, Phaser.Easing.Quadratic.In).start();
&lt;/span&gt;&lt;span&gt;      for&lt;/span&gt;(&lt;span&gt;var&lt;/span&gt; i=0;i&amp;lt;stoneStopArr.length;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;        if&lt;/span&gt;(stoneStopArr[i] &amp;amp;&amp;amp; (stoneStopArr[i].y ==&lt;span&gt; stone.y)){
          game.add.tween(stoneStopArr[i]).to( { x:stoneStopArr[i].x,y:stoneStopArr[i].y &lt;/span&gt;+&lt;span&gt; game.height },stoneDropStep, Phaser.Easing.Quadratic.In).start();
          game.add.tween(stoneStopFlagArr[i]).to( { x:stoneStopFlagArr[i].x,y:stoneStopFlagArr[i].y &lt;/span&gt;+&lt;span&gt; game.height },stoneDropStep, Phaser.Easing.Quadratic.In).start();
        }
      }
    },&lt;/span&gt;500&lt;span&gt;);
  })(pos);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 26 Apr 2018 07:04:00 +0000</pubDate>
<dc:creator>herorest</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/coderhero/p/8952498.html</dc:identifier>
</item>
<item>
<title>Exchange Server 2010升级到Exchange Server 2016 - Carolinelee</title>
<link>http://www.cnblogs.com/lilu1222/p/8952308.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lilu1222/p/8952308.html</guid>
<description>&lt;p&gt;Hello各位小伙伴们，失踪人口回归啦~~~这次和大家分享Exchange Server 2010升级到Exchange Server 2016的方法。正式开始前先啰嗦几句，为什么我要写这篇文章呢？一方面有客户有exchange 服务器升级的需求，另一方面，如果客户使用的21V世纪互联运营的Office 365并且邮箱要做混合部署的话，也需要把本地已有的Exchange服务器升级到2013版本或者以上。考虑到这两个方面，我打算为大家分享本地Exchange服务器升级的方法。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;h2&gt;准备环境&lt;/h2&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;div&gt;
&lt;table border=&quot;0&quot;&gt;&lt;colgroup&gt;&lt;col/&gt;&lt;/colgroup&gt;&lt;tbody valign=&quot;top&quot;&gt;&lt;tr&gt;&lt;td&gt;
&lt;h2&gt;服务器&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Exchange Server 2010&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Exchange Server 2016&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;
&lt;p&gt;域控服务器DC&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;在进行升级之前，我们需要对目前已有的环境作相应的配置。我们需要配置默认脱机通讯簿，&lt;span&gt;&lt;span&gt;创建用于将&lt;/span&gt;&lt;span&gt;Exchange 2010&lt;/span&gt;&lt;span&gt;升级到&lt;/span&gt;&lt;span&gt;Exchange 2016&lt;/span&gt;&lt;span&gt;的管理员帐户。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在域控服务器上，以管理员的身份运行Powershell，依次运行以下命令行来重置授权状态：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Restart-Service CertSvc&lt;/li&gt;
&lt;li&gt;slmgr -rearm&lt;/li&gt;
&lt;li&gt;slmgr EX2010 -rearm&lt;/li&gt;
&lt;li&gt;slmgr EX2016 -rearm&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144510238-1875788182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;切换到&lt;span&gt;Exchange 2010&lt;/span&gt; ，以Exchange管理员的身份登录，打开Exchange Management Shell，依次运行以下的命令行：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-OfflineAddressBook&lt;/li&gt;
&lt;li&gt;Get-MailboxDatabase | Format-Table Name, Server, OfflineAddressBook -Auto&lt;/li&gt;
&lt;li&gt;Get-MailboxDatabase | Set-MailboxDatabase -OfflineAddressBook &quot;Default Offline Address Book&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;//&lt;/span&gt;这条命令将验证EX2010服务器上的每个邮箱数据库都分配了默认脱机通讯簿。 这些步骤将在安装Exchange 2016之前完成。由于我们的主题是升级EX2010到EX2016，所以我提前已经安装好了Exchange 2016。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-MailboxDatabase | Format-Table Name, Server, OfflineAddressBook -Auto&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144510748-810477561.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以&lt;/span&gt;&lt;span&gt;Exchange&lt;/span&gt;&lt;span&gt;管理员的身份登录&lt;/span&gt;&lt;span&gt;Exchange 2016&lt;/span&gt;&lt;span&gt;。由于此时我们处于&lt;/span&gt;&lt;span&gt;EX2010&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;EX2016&lt;/span&gt;共存的状态，管理员帐户不处于Exchange 2016中的数据库中，因此我们必须使用特定的URL，将管理员路由到Exchange 2016管理中心。打开游览器，输入特定的URL，这里我们输入Exchange 2016登录URL &lt;a href=&quot;https://ex2016/ecp?ExchClientVer=15&quot;&gt;&lt;span&gt;https://EX2016/ecp?ExchClientVer=15&lt;/span&gt;&lt;/a&gt;登录Exchange 2016管理员中心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144511251-1172265415.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在收件人（Recipients）功能下，单击新建用户邮箱，在这里我们的取名为Upgrade Admin。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144511654-1229152404.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;点击权限（permissions），在角色组下添加我们刚刚创建的用户Upgrade Admin&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144512353-684544596.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;创建了新的Exchange管理员账户之后，我们还需要做以下几个准备工作：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;为新Exchange Server 2016服务器添加和更新内部和外部URL&lt;/li&gt;
&lt;li&gt;更新Exchange Server 2010 URL&lt;/li&gt;
&lt;li&gt;为新的Exchange组织申请证书&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;使用Upgrade Admin登录exchange 2016，点击服务器（Server），选择&lt;span&gt;EX2016，点击编辑。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144512891-982992202.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;指定外部主机名称框中，在这里我们统一内外部主机名称均为mail.Contoso.local，指定外部客户端登录组织的验证方式，这里我们选择NTLM，点击Save保存更改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144513454-3417306.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;单击虚拟目录（virtual directories）选项卡，点击配置。输入外部客户端访问服务器使用的域名，这里我们键入mail.Contoso.local，然后单击保存，这将为所有Exchange 2016虚拟目录配置外部URL。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144513959-1901620168.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在工具栏上面，筛选服务器为EX2016，系统将列出和EX2016相关的所有目录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144514275-1385125615.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;双击&lt;/span&gt;&lt;span&gt;owa (Default Web Site)&lt;/span&gt;&lt;span&gt;，我们发现外部&lt;/span&gt;&lt;span&gt;URL&lt;/span&gt;&lt;span&gt;已经被配置成为刚刚所设置的&lt;/span&gt;&lt;span&gt;URL&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144514755-716509846.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;还是在EX2016的环境，我们启动&lt;span&gt;Exchange Management Shell&lt;/span&gt;，依次运行以下命令符。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;$HostName = &quot;EX2016&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;//&lt;/span&gt;根据外部URL上设置的值设置内部URL&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set-EcpVirtualDirectory &quot;$HostName\ECP (Default Web Site)&quot; -InternalUrl ((Get-EcpVirtualDirectory &quot;$HostName\ECP (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;li&gt;Set-WebServicesVirtualDirectory &quot;$HostName\EWS (Default Web Site)&quot; -InternalUrl ((Get-WebServicesVirtualDirectory &quot;$HostName\EWS (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;li&gt;Set-ActiveSyncVirtualDirectory &quot;$HostName\Microsoft-Server-ActiveSync (Default Web Site)&quot; -InternalUrl ((Get-ActiveSyncVirtualDirectory &quot;$HostName\Microsoft-Server-ActiveSync (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;li&gt;Set-OabVirtualDirectory &quot;$HostName\OAB (Default Web Site)&quot; -InternalUrl ((Get-OabVirtualDirectory &quot;$HostName\OAB (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;li&gt;Set-OwaVirtualDirectory &quot;$HostName\OWA (Default Web Site)&quot; -InternalUrl ((Get-OwaVirtualDirectory &quot;$HostName\OWA (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;li&gt;Set-PowerShellVirtualDirectory &quot;$HostName\PowerShell (Default Web Site)&quot; -InternalUrl ((Get-PowerShellVirtualDirectory &quot;$HostName\PowerShell (Default Web Site)&quot;).ExternalUrl)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//配置OAB&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-OfflineAddressBook | Where {$_.ExchangeVersion.ExchangeBuild.Major -Eq 15} | Set-OfflineAddressBook -GlobalWebDistributionEnabled $True -VirtualDirectories $Null&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144515450-2065419816.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们运行完了这些命令后，可以返回Exchange 管理员中心，可以看到内外部URL已经设置为一样的值了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144516039-1868831078.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;新建（New）一个Exchange证书， &lt;span&gt;为证书命名，在这里我们命名为&lt;/span&gt;&lt;span&gt;Exchange Services&lt;/span&gt; &lt;strong&gt;，&lt;/strong&gt;点击下一步。&lt;/p&gt;
&lt;p&gt;确保没有选中&quot;请求通配符证书&quot;，然后单击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144516544-314708296.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;选择证书需要安装的组织EX2016，点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144517158-452052082.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在证书列表中查看你想要包含的域，单击下一步，进入域编辑器Domain Editor。在&quot;域编辑器&quot;窗口中的&quot;域名&quot;框中，键入你要添加的域，这里我们写如EX2010.Contoso.local，然后单击&quot;确定&quot;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144518249-1123196946.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;指定要保存证书的路径。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144518760-368062562.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这里我们省略申请CA证书的步骤。Exchange 服务器可以使用自签名的证书，或者第三方权威机构颁发的证书，这里我们推荐大家申请后者，如果要与Office 365混合部署的话，则需要第三方权威机构颁发的证书。&lt;span&gt;申请好证书后，在状态栏点击完成（&lt;/span&gt;&lt;span&gt;Complete&lt;/span&gt;&lt;span&gt;）导入证书。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144519440-1678872292.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在Exchange证书界面，导入我们刚刚申请好的证书，点击确认。双击进入exchange service，你可以查看证书相关信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144520045-1688729338.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击&quot;services&quot;服务，勾选&lt;span&gt;SMTP&lt;/span&gt;and&lt;span&gt;IIS&lt;/span&gt;，点击保存。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144520835-3769819.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;h2&gt;准备服务切换&lt;/h2&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;做完了以上准备工作之后，我们开始切换服务。我们将更新Exchange 2010和Exchange 2016服务器的服务连接点（service connection points），更新DNS 记录，将DNS记录指向Exchange Server 2016，并验证组织内部的邮件流。我们将配置运行在新的Exchange server 2016上的Outlook Anywhere 以及客户端验证（Client Authentication）。&lt;/p&gt;
&lt;p&gt;在Exchange 2010环境下，打开Exchange Management Shell，依次运行以下命令符。&lt;/p&gt;
&lt;p&gt;//设置Outlook Anywhere 参数&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set-OutlookAnywhere &quot;EX2010\RPC (Default Web Site)&quot; -ClientAuthenticationMethod Basic -SSLOffloading $False -ExternalHostName mail.Contoso.local -IISAuthenticationMethods NTLM, Basic&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//设置Autodiscover内部URI&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set-ClientAccessServer -Identity EX2010 -AutoDiscoverServiceInternalUri https://autodiscover.Contoso.local/Autodiscover/Autodiscover.xml&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//重新设置IIS&lt;/p&gt;

&lt;p&gt;在Exchange 2016环境下，打开Exchange Management Shell，依次运行以下命令符。&lt;/p&gt;
&lt;p&gt;//设置Autodiscover内部URI&lt;/p&gt;
&lt;p&gt;//重新设置IIS&lt;/p&gt;

&lt;p&gt;返回域控服务器，打开服务器管理Server Manager console，右上角点击工具（Tools），选择DNS。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144521647-1161126229.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在DNS管理员下，点击Forward Lookup Zones，选择Contoso.local。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144522334-721626767.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;双击&lt;/span&gt;&lt;span&gt;mail&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144523247-1043383738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;更新IP地址，这将把来自mail.contoso.local的请求导向Exchange Server 2016。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144524026-556820054.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;做完了以上步骤，我们回到EX2010刷新DNS。&lt;/p&gt;
&lt;p&gt;打开Exchange Management Shell，输入IPConfig /flushdns&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144524844-1733618242.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在EX2016也做同样的事情，刷新DNS。打开Exchange Management Shell，输入IPConfig /flushdns&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144525749-1288599127.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;h2&gt;邮箱迁移&lt;/h2&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;打开游览器，输入邮箱登录URL，输入用户名和密码之后，可以看到用户是登录到Exchange 2010的Outlook Web App ，这是因为用户邮箱目前还位于Exchange 2010 邮箱数据库中。我们需要把位于Exchange server2010的邮箱迁移到Exchange 2016。&lt;/p&gt;
&lt;p&gt;打开Exchange server 2016 Exchange Management Shell，运行以下命令符，验证邮箱数据库内容索引状态。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-MailboxDatabaseCopyStatus&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;确保在&lt;span&gt;ContentIndexState&lt;/span&gt;列上，状态显示为&lt;span&gt;Healthy&lt;/span&gt;。如果显示为&lt;span&gt;Failed&lt;/span&gt;&lt;span&gt;或者&lt;/span&gt; &lt;span&gt;Suspended&lt;/span&gt;&lt;span&gt;，我们需要运行以下命令符。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;$MDBName = Get-MailboxDatabase -Server EX2016&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//停止Exchange搜索服务&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Stop-Service MSExchangeFastSearch&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//停止Host Controller Service&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Stop-Service HostControllerService&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//创建一个可用于存放索引的位置&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;$IndexFolder = Get-ChildItem -Path &quot;C:\Program Files\Microsoft\Exchange Server\V15\Mailbox\$MDBName&quot; | Where-Object {($_.PSIsContainer) -and ($_.Name -like &quot;*.Single&quot;)}&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//移除索引文件夹&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove-Item &quot;C:\Program Files\Microsoft\Exchange Server\V15\Mailbox\$MDBName\$IndexFolder&quot; -Force -Recurse&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//重新开启Exchange 搜索服务&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Start-Service MSExchangeFastSearch&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//重新开启ost Controller Service&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Start-Service HostControllerService&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;运行完成之后，我们接着输入以下命令符：&lt;/p&gt;
&lt;p&gt;//创建一个新的迁移请求&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;New-MoveRequest -Identity Administrator -TargetDatabase (Get-MailboxDatabase -Server EX2016).Name&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//验证迁移请求&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-MoveRequest&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;//移除迁移请求&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get-MoveRequest | Remove-MoveRequest&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144526659-482630817.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开游览器，输入&lt;a href=&quot;https://mail.contoso.local/ecp&quot;&gt;&lt;span&gt;https://mail.Contoso.local/ecp&lt;/span&gt;&lt;/a&gt;进入Exchange 2016管理中心。以管理员的身份登录，点击迁移（Migration）。在工具栏上，点击&lt;span&gt;New&lt;/span&gt;新建一个迁移请求，选择&lt;span&gt;Move to a different database&lt;/span&gt;。选择位于Exchange server 2010的用户，点击Add添加。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144529156-1717283140.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加好之后，点击下一步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144530742-795605563.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;为迁移批次命名，选择归档规则以及目标数据库。这里我们选择Exchange server 2016作为我们的目标数据库。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144532345-1899814985.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;指定迁移完成后，接收迁移报告的对象。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144536340-1340006375.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们可以查看迁移的进度，点击View Details查看详情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144539246-1553936987.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144541236-543321091.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;等待迁移完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144544438-492376926.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;登录原本位于exchange 2010的邮箱SaraD，此时我们可以看到，SaraD的邮箱已经位于Exchange 2016，迁移完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1306946/201804/1306946-20180426144547532-1470154032.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Apr 2018 06:47:00 +0000</pubDate>
<dc:creator>Carolinelee</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lilu1222/p/8952308.html</dc:identifier>
</item>
<item>
<title>Golang学习笔记：channel - {-）大傻逼</title>
<link>http://www.cnblogs.com/s-b-b/p/8952032.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/s-b-b/p/8952032.html</guid>
<description>&lt;h2 id=&quot;channel&quot;&gt;channel&lt;/h2&gt;
&lt;p&gt;channel是goroutine之间的通信机制，它可以让一个goroutine通过它给另一个goroutine发送数据，每个channel在创建的时候必须指定一个类型，指定的类型是任意的。&lt;br/&gt;使用内置的make函数，可以创建一个channel类型：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ch := make(chan int)&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;发送和接受&quot;&gt;发送和接受&lt;/h2&gt;
&lt;p&gt;channel主要的操作有发送和接受：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// 发送数据到channel
ch &amp;lt;- 1
// 从channel接受数据
x := &amp;lt;- ch&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如向channel发送数据的时候，该goroutine会一直阻塞直到另一个goroutine接受该channel的数据，反之亦然，goroutine接受channel的数据的时候也会一直阻塞直到另一个goroutine向该channel发送数据，如下面操作：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;func main() {
    ch := make(chan string)
    // 在此处阻塞，然后程序会弹出死锁的报错
    c &amp;lt;- &quot;hello&quot;
    fmt.Println(&quot;channel has send data&quot;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;正确的操作：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;func main() {
    ch := make(chan string)
    go func(){
        // 在执行到这一步的时候main goroutine才会停止阻塞
        str := &amp;lt;- ch
        fmt.Println(&quot;receive data：&quot; + str)
    }()
    ch &amp;lt;- &quot;hello&quot;
    fmt.Println(&quot;channel has send data&quot;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;说到channel的阻塞，就不得不说到有缓冲的channel。&lt;/p&gt;
&lt;h2 id=&quot;带缓冲的channel&quot;&gt;带缓冲的channel&lt;/h2&gt;
&lt;p&gt;带缓冲的channel的创建和不带缓冲的channel（也就是上面用的channel）的创建差不多，只是在make函数的第二个参数指定缓冲的大小。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// 创建一个容量为10的channel
ch := make(chan int, 10)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;带缓冲的channel就像一个队列，遵从先进先从的原则，发送数据向队列尾部添加数据，从头部接受数据。&lt;br/&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/727cfec0gy1fqor2cc923j20ax04x3zb.jpg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;p&gt;goroutine向channel发送数据的时候如果缓冲还没满，那么该goroutine就不会阻塞。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ch := make(chan int, 2)
// 前面两次发送数据不会阻塞，因为缓冲还没满
ch &amp;lt;- 1
ch &amp;lt;- 2
// goroutine会在这里阻塞
ch &amp;lt;- 3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;反之如果接受该channel数据的时候，如果缓冲有数据，那么该goroutine就不会阻塞。&lt;/p&gt;
&lt;p&gt;channel与goroutine之间的应用可以想象成某个工厂的流水线工作，流水线上面有打磨，上色两个步骤（两个goroutine），负责打磨的工人生产完成后会传给负责上色的工人，上色的生产依赖于打磨，两个步骤之间的可能存在存放槽（channel），如果存放槽存满了，打磨工人就不能继续向存放槽当中存放产品，直到上色工人拿走产品，反之上色工人如果把存放槽中的产品都上色完毕，那么他就只能等待新的产品投放到存放槽中。&lt;/p&gt;
&lt;h4 id=&quot;备注&quot;&gt;备注&lt;/h4&gt;
&lt;p&gt;其实在实际应用中，带缓冲的channel用的并不多，继续拿刚才的流水线来做案例，如果打磨工人生产速度比上色工人工作速度要快，那么即便再多容量的channel，也会迟早被填满然后打磨工人会被阻塞，反之如果上色工人生产速度大于打磨工人速度，那么有缓冲的channel也是一直处于没有数据，上色工人很容易长时间处于阻塞的状态。&lt;/p&gt;
&lt;p&gt;因此比较好的解决方法还是针对生产速度较慢的一方多加人手，也就是多开几个goroutine来进行处理，有缓冲的channel最好用处只是拿来防止goroutine的完成时间有一定的波动，需要把结果缓冲起来，以平衡整体channel通信。&lt;/p&gt;
&lt;h2 id=&quot;单方向的channel&quot;&gt;单方向的channel&lt;/h2&gt;
&lt;p&gt;使用channel来使不同的goroutine去进行通信，很多时候都和消费者生产者模式很相似，一个goroutine生产的结果都用channel传送给另一个goroutine，一个goroutine的执行依赖与另一个goroutine的结果。&lt;br/&gt;因此很多情况下，channel都是单方向的，在go里面可以把一个无方向的channel转换为只接受或者只发送的channel，但是却不能反过来把接受或发送的channel转换为无方向的channel，适当地把channel改成单方向，可以达到程序强约束的做法，类似于下面例子：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;fuc main(){
    ch := make(ch chan string)
    
    go func(out chan&amp;lt;- string){
        out &amp;lt;- &quot;hello&quot;
    }(ch)
    
    go func(in &amp;lt;-chan string){
        fmt.Println(in)
    }(ch)
    
    time.Sleep(2 * time.Second)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;select多路复用&quot;&gt;select多路复用&lt;/h2&gt;
&lt;p&gt;在一个goroutine里面，对channel的操作很可能导致我们当前的goroutine阻塞，而我们之后的操作都进行不了。而如果我们又需要在当前channel阻塞进行其他操作，如操作其他channel或直接跳过阻塞，可以通过select来达到多个channel（可同时接受和发送）复用。如下面我们的程序需要同时监听多个频道的信息：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;broadcaster1 := make(chan string) // 频道1
broadcaster2 := make(chan string) // 频道2
select {
    case mess1 := &amp;lt;-broadcaster1:
        fmt.Println(&quot;来自频道1的消息：&quot; + mess1)
    case mess2 := &amp;lt;-broadcaster2:
        fmt.Println(&quot;来自频道2的消息：&quot; + mess2)
    default:
        fmt.Println(&quot;暂时没有任何频道的消息，请稍后再来~&quot;)
        time.Sleep(2 * time.Second)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;select和switch语句有点相似，channel的匹配会依次从上到下进行，找到匹配的case就会执行对应的语句块，如果都不匹配就会执行default语句块（如果含有default的部分的话）。&lt;/p&gt;
&lt;h2 id=&quot;关闭&quot;&gt;关闭&lt;/h2&gt;
&lt;p&gt;channel可以接受和发送数据，也可以被关闭。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;close(ch)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;关闭channel后，所有向channel发送数据的操作都会引起panic，而被close之后的channel仍然可以接受之前已经发送成功的channel数据，如果数据全部接受完毕，那么再从channel里面接受数据只会接收到零值得数据。&lt;/p&gt;
&lt;p&gt;channel的关闭可以用来操作其他goroutine退出，在运行机制方面，goroutine只有在自身所在函数运行完毕，或者主函数运行完毕才会打断，所以我们可以利用channel的关闭作为程序运行入口的一个标志位，如果channel关闭则停止运行。&lt;/p&gt;
&lt;p&gt;无法直接让一个goroutine直接停止另一个goroutine，但可以使用&lt;span&gt;通信&lt;/span&gt;的方法让一个goroutine停止另一个goroutine，如下例子就是程序一边运行，一边监听用户的输入，如果用户回车，则退出程序。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;func main() {
    shutdown := make(chan struct{})
    var n sync.WaitGroup
    n.Add(1)
    go Running(shutdown, &amp;amp;n) 
    n.Add(1)
    go ListenStop(shutdown, &amp;amp;n) 
    n.Wait()
}

func Running(shutdown &amp;lt;-chan struct{}, n *sync.WaitGroup) {
    defer n.Done()
    for {
        select {
        case &amp;lt;-shutdown:
            // 一旦关闭channel，则可以接收到nil。
            fmt.Println(&quot;shutdown goroutine&quot;)
            return
        default:
            fmt.Println(&quot;I am running&quot;)
            time.Sleep(1 * time.Second)
        }   
    }   
}

func ListenStop(shutdown chan&amp;lt;- struct{}, n *sync.WaitGroup) {
    defer n.Done()
    os.Stdin.Read(make([]byte, 1)) 
    // 如果用户输入了回车则退出关闭channel
    close(shutdown)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;利用channel关闭时候的传送的零值信号可以有效地退出其他goroutine，特别是关闭多个goroutine的时候，就不需要向channel传输多个信息了。&lt;/p&gt;
</description>
<pubDate>Thu, 26 Apr 2018 06:27:00 +0000</pubDate>
<dc:creator>{-）大傻逼</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/s-b-b/p/8952032.html</dc:identifier>
</item>
<item>
<title>数据挖掘_requests模块的get方法 - susmote</title>
<link>http://www.cnblogs.com/susmote/p/8948087.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/susmote/p/8948087.html</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425223320437-1314974598.jpg&quot; alt=&quot;&quot; width=&quot;407&quot; height=&quot;229&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;关于requests模块&lt;/h3&gt;
&lt;p&gt;之前在跟大家讲通过字典列表批量获取数据的时候用过这个模块&lt;/p&gt;
&lt;p&gt;安装过程就不再讲解了&lt;/p&gt;
&lt;p&gt;requests模块是python的http库，可以完成绝大部分与http应用相关的工作，所以我们可以用它来进行数据抓取工作&lt;/p&gt;
&lt;p&gt;requests模块有两个常用的方法，get 和 post 我们也主要只是围绕这两个方法来讲解requests模块&lt;/p&gt;

&lt;p&gt;注意:requests不能模拟浏览器的全部行为&lt;/p&gt;

&lt;h2&gt;get方法&lt;/h2&gt;
&lt;p&gt;在requests模块中，我们可以通过get和post两种形式去向服务器发出http请求&lt;/p&gt;
&lt;p&gt;例如，还是用我自己的网站做例子，来简单演示这个方法&lt;/p&gt;

&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# coding=utf-8
__Author__ = &quot;susmote&quot;

import requests

url = &quot;http://www.susmote.com&quot;
resp = requests.get(url)

with open(&quot;home.html&quot;, 'w', encoding='utf8') as f:
    f.write(resp.text) 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在命令行运行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425224548765-1481151737.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;我们得到了一个文件，也就是我的网站的首页的源码&lt;/p&gt;
&lt;p&gt;我们通过浏览器打开，如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425224729728-268344171.png&quot; alt=&quot;&quot; width=&quot;736&quot; height=&quot;341&quot;/&gt;&lt;/p&gt;

&lt;p&gt;resp还有一些其他的属性，你可通过help(resp)查看response的各种属性和方法&lt;/p&gt;
&lt;p&gt;返回如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425225257597-1585479318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;我们试一下里面的一些属性&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425225212856-657770718.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h3&gt;编码问题&lt;/h3&gt;
&lt;p&gt;在这里要特别注意一下编码的问题&lt;/p&gt;
&lt;p&gt;通过resp.encoding 可以返回默认编码，resp.text就是按照这个进行编码的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425225653259-369226899.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;但如果将编码改为gb2312，就会出现乱码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425225926709-2065962641.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;response具有content属性，会以二进制的方式返回响应的内容，返回内容如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425230141078-1305079217.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;response还有json方法，可以将返回的文本内容以json的方式进行解析&lt;/p&gt;
&lt;p&gt;http://jsonip.com 这个网站在接受get请求后，作为响应会向请求方法返回一个json格式的文本，里面会有发起请求的ip地址等信息&lt;/p&gt;
&lt;p&gt;例如下面这个例子&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;34&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
# coding=utf-8
__Author__ = &quot;susmote&quot;

import requests

url = &quot;http://jsonip.com/&quot;
resp_ip = requests.get(url)

print(&quot;字符串格式&quot;)
print(resp_ip.text)
print(type(resp_ip))

print(&quot;字典格式&quot;)
print(resp_ip.json())
print(type(resp_ip))

print(resp_ip.text) 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;下面我们在命令行运行这个文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1266253/201804/1266253-20180425231400662-1574334814.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在这个例子中，resp_ip的text包含了返回的文本信息，json格式的信息也是以文本的方式返回的，这个可以从返回结果中看出&lt;/p&gt;
&lt;p&gt;resp_ip.json(）是使用json方法对返回的内容进行解析，将json解析的结果以字典的形式返回，但要注意的是json方法只是解析，并不会对resp.text造成影响，也就是之前的resp.text的内容是不变的&lt;/p&gt;

&lt;p&gt;关与get方法大概就是这些，还有一些后面再讲&lt;/p&gt;

&lt;p&gt;官方博客 www.susmote.com&lt;/p&gt;

</description>
<pubDate>Thu, 26 Apr 2018 06:12:00 +0000</pubDate>
<dc:creator>susmote</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/susmote/p/8948087.html</dc:identifier>
</item>
</channel>
</rss>