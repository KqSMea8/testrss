<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>通过 Service 访问 Pod - 每天5分钟玩转 Docker 容器技术（136） - CloudMan</title>
<link>http://www.cnblogs.com/CloudMan6/p/8486913.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/CloudMan6/p/8486913.html</guid>
<description>&lt;p&gt;&lt;span&gt;本节开始学习 Service。&lt;br/&gt;我们不应该期望 Kubernetes Pod 是健壮的，而是要假设 Pod 中的容器很可能因为各种原因发生故障而死掉。Deployment 等 controller 会通过动态创建和销毁 Pod 来保证应用整体的健壮性。换句话说，Pod 是脆弱的，但应用是健壮的。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;每个 Pod 都有自己的 IP 地址。当 controller 用新 Pod 替代发生故障的 Pod 时，新 Pod 会分配到新的 IP 地址。这样就产生了一个问题：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果一组 Pod 对外提供服务（比如 HTTP），它们的 IP 很有可能发生变化，那么客户端如何找到并访问这个服务呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Kubernetes 给出的解决方案是 Service。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;创建 Service&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Kubernetes Service 从逻辑上代表了一组 Pod，具体是哪些 Pod 则是由 label 来挑选。Service 有自己 IP，而且这个 IP 是不变的。客户端只需要访问 Service 的 IP，Kubernetes 则负责建立和维护 Service 与 Pod 的映射关系。无论后端 Pod 如何变化，对客户端不会有任何影响，因为 Service 没有变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;来看个例子，创建下面的这个 Deployment：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094112741-845480300.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;我们启动了三个 Pod，运行 httpd 镜像，label 是 &lt;/span&gt;&lt;code&gt;&lt;span&gt;run: httpd&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，Service 将会用这个 label 来挑选 Pod。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094130123-1205742970.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pod 分配了各自的 IP，这些 IP 只能被 Kubernetes Cluster 中的容器和节点访问。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094142150-507749719.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来创建 Service，其配置文件如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094155633-1904292389.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;① &lt;/span&gt;&lt;code&gt;&lt;span&gt;v1&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 是 Service 的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;② 指明当前资源的类型为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;Service&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;③ Service 的名字为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;httpd-svc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;④ &lt;/span&gt;&lt;code&gt;&lt;span&gt;selector&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 指明挑选那些 label 为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;run: httpd&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的 Pod 作为 Service 的后端。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;⑤ 将 Service 的 8080 端口映射到 Pod 的 80 端口，使用 TCP 协议。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;执行 &lt;/span&gt;&lt;code&gt;&lt;span&gt;kubectl apply&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 创建 Service &lt;/span&gt;&lt;code&gt;&lt;span&gt;httpd-svc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094211727-992856613.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;httpd-svc&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 分配到一个 CLUSTER-IP &lt;/span&gt;&lt;code&gt;&lt;span&gt;10.99.229.179&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。可以通过该 IP 访问后端的 httpd Pod。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094237220-1662031408.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;根据前面的端口映射，这里要使用 8080 端口。另外，除了我们创建的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;httpd-svc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，还有一个 Service &lt;/span&gt;&lt;code&gt;&lt;span&gt;kubernetes&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，Cluster 内部通过这个 Service 访问 kubernetes API Server。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;通过 &lt;/span&gt;&lt;code&gt;&lt;span&gt;kubectl describe&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 可以查看 &lt;/span&gt;&lt;code&gt;&lt;span&gt;httpd-svc&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 与 Pod 的对应关系。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/775365/201803/775365-20180301094248811-1887495835.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;Endpoints&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 罗列了三个 Pod 的 IP 和端口。我们知道 Pod 的 IP 是在容器中配置的，那么 Service 的 Cluster IP 又是配置在哪里的呢？CLUSTER-IP 又是如何映射到 Pod IP 的呢？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;答案是 iptables，我们下节讨论。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;书籍：&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;1.《每天5分钟玩转Docker容器技术》&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://item.jd.com/16936307278.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://item.jd.com/16936307278.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;2.《每天5分钟玩转OpenStack》&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;a href=&quot;https://item.jd.com/12086376.html&quot; target=&quot;_blank&quot;&gt;https://item.jd.com/12086376.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img title=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; src=&quot;https://i.imgsafe.org/68/68da21ce15.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 01 Mar 2018 21:25:00 +0000</pubDate>
<dc:creator>CloudMan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/CloudMan6/p/8486913.html</dc:identifier>
</item>
<item>
<title>利用FileReader实现上传图片前本地预览 - 西风瘦码</title>
<link>http://www.cnblogs.com/wancheng7/p/8491151.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wancheng7/p/8491151.html</guid>
<description>&lt;h5 id=&quot;引子&quot;&gt;引子&lt;/h5&gt;
&lt;p&gt;      平时做图片上传预览时如果没有特殊的要求就直接先把图片传到后台去，成功之后拿到URL再渲染到页面上，这样做在图片比较小的时候没什么问题，大一点的话就会比较慢才能看到预览了，而且还产生了垃圾文件，所以比较好的是上传之前先在本地预览一下。&lt;/p&gt;&lt;p&gt;      之前做项找插件的时候就知道纯前端可以实现图片本地预览，可今天面试的时候被问到时竟然一脸懵逼，然后竟然无意中就在电脑桌面发现了实现的demo，然后根据demo查了一下API，稍微总结下：&lt;/p&gt;
&lt;h5 id=&quot;首先得拿到file对象&quot;&gt;首先得拿到File对象&lt;/h5&gt;
&lt;p&gt;      当用input标签上传图片时event对象中会包含file对象的一个集合&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;event.target.files&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;核心是filereader对象&quot;&gt;核心是FileReader对象&lt;/h5&gt;
&lt;h5 id=&quot;完整代码&quot;&gt;完整代码&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    
  &amp;lt;form action=&quot;&quot;&amp;gt;  
   &amp;lt;input type=&quot;file&quot; name=&quot;files&quot; id=&quot;fileTog&quot; accept=&quot;image/*&quot;  multiple=&quot;multiple&quot; onchange=&quot;changImg(event)&quot;&amp;gt;  
   &amp;lt;img alt=&quot;暂无图片&quot; id=&quot;myImg&quot; src=&quot;&quot; height=&quot;100px&quot; width=&quot;100px&quot;&amp;gt;  
  &amp;lt;/form&amp;gt;
    
  &amp;lt;script&amp;gt;
    function changImg(e){  
      var myImg = document.getElementById('myImg');
      for (var i = 0; i &amp;lt; e.target.files.length; i++) {  
        var file = e.target.files[i]; 
        console.log(file); 
        if (!(/^image\/.*$/i.test(file.type))) {  
            continue; //不是图片 就跳出这一次循环  
        }  
        //实例化FileReader API  
        var freader = new FileReader();  
        freader.readAsDataURL(file);  
        freader.onload = function(e) {  
          console.log(e);
          myImg.setAttribute('src', e.target.result);  
        }  
      }  
    }
  &amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;后记&quot;&gt;后记&lt;/h5&gt;
&lt;p&gt;      通过这件事就暴露了我学习新东西的一个问题，就是查出来看一遍觉得知道了就行了，这种习惯是特别害人的，以后每当有个疑问查出来之后不仅要查是怎么做的，还要了解一下为什么可以这么做，所谓知其然知其所以然。还有就是平时的代码能用手敲的尽量别复制，复制一时是爽了，可要手写的时候写不出来也是听尴尬的。&lt;/p&gt;&lt;p&gt;      今天是来杭州的第三天，面试的第二天，这两天的面试中暴露出的一个重要问题就是平时太依赖搜索引擎，用脑太少，连一些简单API就没记全，前端确实还是有很多东西就是要牢牢记住的，没什么捷径可走，这些东西就是基础，没记住就是基础差。虽然你并不影响你做出东西来，但会影响开发效率，技术要往上走，这个基石必须稳，加油记吧！&lt;/p&gt;
&lt;p&gt;关于图片上传本地预览的就写到这里了，如果有什么我理解的不对的地方欢迎大家在评论中指出！&lt;/p&gt;
</description>
<pubDate>Thu, 01 Mar 2018 16:00:00 +0000</pubDate>
<dc:creator>西风瘦码</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wancheng7/p/8491151.html</dc:identifier>
</item>
<item>
<title>Python操作 RabbitMQ、Redis、Memcache、SQLAlchemy - 听风。</title>
<link>http://www.cnblogs.com/huchong/p/8491107.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huchong/p/8491107.html</guid>
<description>&lt;p&gt;Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高动态、数据库驱动网站的速度。Memcached基于一个存储键/值对的&lt;a href=&quot;http://baike.baidu.com/view/1487140.htm&quot; target=&quot;_blank&quot;&gt;hashmap&lt;/a&gt;。其&lt;a href=&quot;http://baike.baidu.com/view/53123.htm&quot; target=&quot;_blank&quot;&gt;守护进程&lt;/a&gt;（daemon ）是用&lt;a href=&quot;http://baike.baidu.com/subview/10075/6770152.htm&quot; target=&quot;_blank&quot;&gt;C&lt;/a&gt;写的，但是客户端可以用任何语言来编写，并通过memcached协议与守护进程通信。&lt;/p&gt;
&lt;p&gt;Memcached安装和基本使用&lt;/p&gt;
&lt;h2&gt;Memcached安装：&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_258274&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;wget http:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;memcached.org&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;latest&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;tar&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;zxvf memcached&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.x&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.x.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;cd memcached&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.x&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make test &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;PS：依赖libevent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;       &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;yum install libevent&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;devel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;       &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;apt&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;get install libevent&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;dev&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;启动Memcached&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_758439&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;23&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;memcached&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;d&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;m&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10&lt;/code&gt;    &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;u root&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;l&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10.211&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;55.4&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;p&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;12000&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;c&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;256&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;P&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;tmp&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;memcached.pid&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;参数说明:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;d 是启动一个守护进程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;m 是分配给Memcache使用的内存数量，单位是MB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;u 是运行Memcache的用户&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;l 是监听的服务器IP地址&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;p 是设置Memcache监听的端口,最好是&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1024&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;以上的端口&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;c 选项是最大运行的并发连接数，默认是&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1024&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;，按照你服务器的负载量来设定&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;P 是设置保存Memcache的pid文件&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Memcached命令&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_360512&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;存储命令:&lt;/code&gt; &lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;add&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;replace&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;append&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;prepend&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;cas&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;获取命令: get&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;gets&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;其他命令: delete&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;stats..&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Python操作Memcached&lt;/h2&gt;
&lt;p&gt;安装API&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_920207&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;python操作Memcached使用Python&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;memcached模块&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;下载安装：https:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pypi.python.org&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pypi&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;python&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;memcached&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1、第一次操作&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_13697&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;foo&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;bar&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;ret&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;mc.get(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'foo'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;ret&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;Ps：debug = True 表示运行出现错误时，现实错误信息，上线后移除该参数。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、天生支持集群&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;python-memcached模块原生支持集群操作，其原理是在内存维护一个主机列表，且集群中主机的权重值和主机在列表中重复出现的次数成正比&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_599315&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;主机    权重&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.1&lt;/code&gt;   &lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.2&lt;/code&gt;   &lt;code class=&quot;python value&quot;&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1.3&lt;/code&gt;   &lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;那么在内存中主机列表为：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;host_list&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;[&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;1.1.1.1&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;1.1.1.2&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;1.1.1.2&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;1.1.1.3&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, ]&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果用户根据如果要在内存中创建一个键值对（如：k1 = &quot;v1&quot;），那么要执行一下步骤：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;根据算法将 k1 转换成一个数字&lt;/li&gt;
&lt;li&gt;将数字和主机列表长度求余数，得到一个值 N（ 0 &amp;lt;= N &amp;lt; 列表长度 ）&lt;/li&gt;
&lt;li&gt;在主机列表中根据 第2步得到的值为索引获取主机，例如：host_list[N]&lt;/li&gt;
&lt;li&gt;连接 将第3步中获取的主机，将 k1 = &quot;v1&quot; 放置在该服务器的内存中&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;代码实现如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_629966&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;14&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'1.1.1.1:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;), (&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'1.1.1.2:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;2&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;), (&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'1.1.1.3:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'v1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3、add&lt;/strong&gt;&lt;br/&gt;添加一条键值对，如果已经存在的 key，重复执行add操作异常&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_231756&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.add(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'v1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4、replace&lt;/strong&gt;&lt;br/&gt;replace 修改某个key的值，如果key不存在，则异常&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_943943&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.replace(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'kkkk'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'999'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;5、set 和 set_multi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;set            设置一个键值对，如果key不存在，则创建，如果key存在，则修改&lt;br/&gt;set_multi   设置多个键值对，如果key不存在，则创建，如果key存在，则修改&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_768287&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;14&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'key0'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'wupeiqi'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.set_multi({&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'key1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;:&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'val1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'key2'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;:&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'val2'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;})&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;6、delete 和 delete_multi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;delete             在Memcached中删除指定的一个键值对&lt;br/&gt;delete_multi    在Memcached中删除指定的多个键值对&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_96626&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.delete(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'key0'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.delete_multi([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'key1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'key2'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;])&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;7、get 和 get_multi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;get            获取一个键值对&lt;br/&gt;get_multi   获取多一个键值对&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_691742&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;12&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;val&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;mc.get(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'key0'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;item_dict&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;mc.get_multi([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;key1&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;key2&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;key3&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;])&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;8、append 和 prepend&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;append    修改指定key的值，在该值 后面 追加内容&lt;br/&gt;prepend   修改指定key的值，在该值 前面 插入内容&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_30736&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.append(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'after'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.prepend(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'before'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;9、decr 和 incr　&lt;/strong&gt;　&lt;/p&gt;
&lt;p&gt;incr  自增，将Memcached中的某一个值增加 N （ N默认为1 ）&lt;br/&gt;decr 自减，将Memcached中的某一个值减少 N （ N默认为1 ）&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_929610&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;4.5&quot;&gt;&lt;tr readability=&quot;9&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;8&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'777'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.incr(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.incr(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.decr(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.decr(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;10、gets 和 cas&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如商城商品剩余个数，假设改值保存在memcache中，product_count = 900&lt;br/&gt;A用户刷新页面从memcache中读取到product_count = 900&lt;br/&gt;B用户刷新页面从memcache中读取到product_count = 900&lt;/p&gt;
&lt;p&gt;如果A、B用户均购买商品&lt;/p&gt;
&lt;p&gt;A用户修改商品剩余个数 product_count＝899&lt;br/&gt;B用户修改商品剩余个数 product_count＝899&lt;/p&gt;
&lt;p&gt;如此一来缓存内的数据便不在正确，两个用户购买商品后，商品剩余还是 899&lt;br/&gt;如果使用python的set和get来操作以上过程，那么程序就会如上述所示情况！&lt;/p&gt;
&lt;p&gt;如果想要避免此情况的发生，只要使用 gets 和 cas 即可，如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_15648&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;14&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;memcache.Client([&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4:12000'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;], debug&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, cache_cas&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;v&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;mc.gets(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'product_count'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;mc.cas(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'product_count'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;899&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Ps：本质上每次执行gets时，会从memcache中获取一个自增的数字，通过cas去修改gets的值时，会携带之前获取的自增值和memcache中的自增值进行比较，如果相等，则可以提交，如果不想等，那表示在gets和cas执行之间，又有其他人执行了gets（获取了缓冲的指定值）， 如此一来有可能出现非正常数据，则不允许修改。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.oschina.net/news/26691/memcached-timeout&quot; target=&quot;_blank&quot;&gt;Memcached 真的过时了吗？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;redis是一个key-value&lt;a href=&quot;http://baike.baidu.com/view/51839.htm&quot; target=&quot;_blank&quot;&gt;存储系统&lt;/a&gt;。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(&lt;a href=&quot;http://baike.baidu.com/view/549479.htm&quot; target=&quot;_blank&quot;&gt;链表&lt;/a&gt;)、set(集合)、zset(sorted set --有序集合)和hash（哈希类型）。这些&lt;a href=&quot;http://baike.baidu.com/view/675645.htm&quot; target=&quot;_blank&quot;&gt;数据类型&lt;/a&gt;都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('12803403-3b37-495f-844f-61eb2346fcf6')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_12803403-3b37-495f-844f-61eb2346fcf6&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_12803403-3b37-495f-844f-61eb2346fcf6&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('12803403-3b37-495f-844f-61eb2346fcf6',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_12803403-3b37-495f-844f-61eb2346fcf6&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
1&lt;span&gt;. 使用Redis有哪些好处？

(&lt;/span&gt;1) 速度快，因为数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(1&lt;span&gt;)

(&lt;/span&gt;2&lt;span&gt;) 支持丰富数据类型，支持string，list，set，sorted set，hash

(&lt;/span&gt;3&lt;span&gt;) 支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行

(&lt;/span&gt;4&lt;span&gt;) 丰富的特性：可用于缓存，消息，按key设置过期时间，过期后将会自动删除


&lt;/span&gt;2&lt;span&gt;. redis相比memcached有哪些优势？

(&lt;/span&gt;1&lt;span&gt;) memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型

(&lt;/span&gt;2&lt;span&gt;) redis的速度比memcached快很多

(&lt;/span&gt;3&lt;span&gt;) redis可以持久化其数据


&lt;/span&gt;3&lt;span&gt;. redis常见性能问题和解决方案：

(&lt;/span&gt;1&lt;span&gt;) Master最好不要做任何持久化工作，如RDB内存快照和AOF日志文件

(&lt;/span&gt;2&lt;span&gt;) 如果数据比较重要，某个Slave开启AOF备份数据，策略设置为每秒同步一次

(&lt;/span&gt;3&lt;span&gt;) 为了主从复制的速度和连接的稳定性，Master和Slave最好在同一个局域网内

(&lt;/span&gt;4&lt;span&gt;) 尽量避免在压力很大的主库上增加从库

(&lt;/span&gt;5) 主从复制不要用图状结构，用单向链表结构更为稳定，即：Master &amp;lt;- Slave1 &amp;lt;- Slave2 &amp;lt;-&lt;span&gt; Slave3...

这样的结构方便解决单点故障问题，实现Slave对Master的替换。如果Master挂了，可以立刻启用Slave1做Master，其他不变。



 

&lt;/span&gt;4&lt;span&gt;. MySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据

 相关知识：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。redis 提供 6种数据淘汰策略：

voltile&lt;/span&gt;-&lt;span&gt;lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰

volatile&lt;/span&gt;-&lt;span&gt;ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰

volatile&lt;/span&gt;-&lt;span&gt;random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰

allkeys&lt;/span&gt;-&lt;span&gt;lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰

allkeys&lt;/span&gt;-&lt;span&gt;random：从数据集（server.db[i].dict）中任意选择数据淘汰

no&lt;/span&gt;-&lt;span&gt;enviction（驱逐）：禁止驱逐数据

 

&lt;/span&gt;5&lt;span&gt;. Memcache与Redis的区别都有哪些？

&lt;/span&gt;1&lt;span&gt;)、存储方式

Memecache把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。

Redis有部份存在硬盘上，这样能保证数据的持久性。

&lt;/span&gt;2&lt;span&gt;)、数据支持类型

Memcache对数据类型支持相对简单。

Redis有复杂的数据类型。


&lt;/span&gt;3&lt;span&gt;），value大小

redis最大可以达到1GB，而memcache只有1MB



&lt;/span&gt;6&lt;span&gt;. Redis 常见的性能问题都有哪些？如何解决？

 

&lt;/span&gt;1&lt;span&gt;).Master写内存快照，save命令调度rdbSave函数，会阻塞主线程的工作，当快照比较大时对性能影响是非常大的，会间断性暂停服务，所以Master最好不要写内存快照。


&lt;/span&gt;2&lt;span&gt;).Master AOF持久化，如果不重写AOF文件，这个持久化方式对性能的影响是最小的，但是AOF文件会不断增大，AOF文件过大会影响Master重启的恢复速度。Master最好不要做任何持久化工作，包括内存快照和AOF日志文件，特别是不要启用内存快照做持久化,如果数据比较关键，某个Slave开启AOF备份数据，策略为每秒同步一次。

 
&lt;/span&gt;3&lt;span&gt;).Master调用BGREWRITEAOF重写AOF文件，AOF在重写的时候会占大量的CPU和内存资源，导致服务load过高，出现短暂服务暂停现象。

&lt;/span&gt;4&lt;span&gt;). Redis主从复制的性能问题，为了主从复制的速度和连接的稳定性，Slave和Master最好在同一个局域网内




&lt;/span&gt;7&lt;span&gt;, redis 最适合的场景


Redis最适合所有数据in&lt;/span&gt;-momory的场景，虽然Redis也提供持久化功能，但实际更多的是一个disk-&lt;span&gt;backed的功能，跟传统意义上的持久化有比较大的差别，那么可能大家就会有疑问，似乎Redis更像一个加强版的Memcached，那么何时使用Memcached,何时使用Redis呢?

       如果简单地比较Redis与Memcached的区别，大多数都会得到以下观点：

     &lt;/span&gt;1 、Redis不仅仅支持简单的k/&lt;span&gt;v类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
     &lt;/span&gt;2 、Redis支持数据的备份，即master-&lt;span&gt;slave模式的数据备份。
     &lt;/span&gt;3&lt;span&gt; 、Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。

（&lt;/span&gt;1&lt;span&gt;）、会话缓存（Session Cache）

最常用的一种使用Redis的情景是会话缓存（session cache）。用Redis缓存会话比其他存储（如Memcached）的优势在于：Redis提供持久化。当维护一个不是严格要求一致性的缓存时，如果用户的购物车信息全部丢失，大部分人都会不高兴的，现在，他们还会这样吗？

幸运的是，随着 Redis 这些年的改进，很容易找到怎么恰当的使用Redis来缓存会话的文档。甚至广为人知的商业平台Magento也提供Redis的插件。

（&lt;/span&gt;2&lt;span&gt;）、全页缓存（FPC）

除基本的会话token之外，Redis还提供很简便的FPC平台。回到一致性问题，即使重启了Redis实例，因为有磁盘的持久化，用户也不会看到页面加载速度的下降，这是一个极大改进，类似PHP本地FPC。

再次以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。

此外，对WordPress的用户来说，Pantheon有一个非常好的插件  wp&lt;/span&gt;-&lt;span&gt;redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。

（&lt;/span&gt;3&lt;span&gt;）、队列

Reids在内存存储引擎领域的一大优点是提供 list 和 set 操作，这使得Redis能作为一个很好的消息队列平台来使用。Redis作为队列使用的操作，就类似于本地程序语言（如Python）对 list 的 push&lt;/span&gt;/&lt;span&gt;pop 操作。

如果你快速的在Google中搜索“Redis queues”，你马上就能找到大量的开源项目，这些项目的目的就是利用Redis创建非常好的后端工具，以满足各种队列需求。例如，Celery有一个后台就是使用Redis作为broker，你可以从这里去查看。

（&lt;/span&gt;4），排行榜/&lt;span&gt;计数器

Redis在内存中对数字进行递增或递减的操作实现的非常好。集合（Set）和有序集合（Sorted Set）也使得我们在执行这些操作的时候变的非常简单，Redis只是正好提供了这两种数据结构。所以，我们要从排序集合中获取到排名最靠前的10个用户–我们称之为“user_scores”，我们只需要像下面一样执行即可：

当然，这是假定你是根据你用户的分数做递增的排序。如果你想返回用户及用户的分数，你需要这样执行：

ZRANGE user_scores 0 &lt;/span&gt;10&lt;span&gt; WITHSCORES

Agora Games就是一个很好的例子，用Ruby实现的，它的排行榜就是使用Redis来存储数据的，你可以在这里看到。

（&lt;/span&gt;5）、发布/&lt;span&gt;订阅

最后（但肯定不是最不重要的）是Redis的发布&lt;/span&gt;/订阅功能。发布/订阅的使用场景确实非常多。我已看见人们在社交网络连接中使用，还可作为基于发布/订阅的脚本触发器，甚至用Redis的发布/&lt;span&gt;订阅功能来建立聊天系统！（不，这是真的，你可以去核实）。

Redis提供的所有特性中，我感觉这个是喜欢的人最少的一个，虽然它为用户提供如果此多功能。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;h2&gt;一、Redis安装和基本使用&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_193230&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;wget http:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;download.redis.io&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;releases&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;3.0&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6.tar&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;tar xzf redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;3.0&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6.tar&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.gz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;cd redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;3.0&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;启动服务端&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_919663&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;src&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;启动客户端&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_964692&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;src&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;cli&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;redis&amp;gt;&lt;/code&gt; &lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;foo bar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;OK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;redis&amp;gt; get foo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python string&quot;&gt;&quot;bar&quot;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;二、Python操作Redis&lt;/h2&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_921132&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;sudo pip install redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;or&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;sudo easy_install redis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;or&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;源码安装&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;详见：https:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;github.com&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;WoLpH&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;py&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;API使用&lt;/p&gt;
&lt;p&gt;redis-py 的API的使用可以分类为：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;连接方式&lt;/li&gt;
&lt;li&gt;连接池&lt;/li&gt;
&lt;li&gt;操作
&lt;ul&gt;&lt;li&gt;String 操作&lt;/li&gt;
&lt;li&gt;Hash 操作&lt;/li&gt;
&lt;li&gt;List 操作&lt;/li&gt;
&lt;li&gt;Set 操作&lt;/li&gt;
&lt;li&gt;Sort Set 操作&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;管道&lt;/li&gt;
&lt;li&gt;发布订阅&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1、操作模式&lt;/p&gt;
&lt;p&gt;redis-py提供两个类Redis和StrictRedis用于实现Redis的命令，StrictRedis用于实现大部分官方的命令，并使用官方的语法和命令，Redis是StrictRedis的子类，用于向后兼容旧版本的redis-py。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_585297&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;8&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;r&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis.Redis(host&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, port&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6379&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;r.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'foo'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'Bar'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;r.get(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'foo'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;2、连接池&lt;/p&gt;
&lt;p&gt;redis-py使用connection pool来管理对一个redis server的所有连接，避免每次建立、释放连接的开销。默认，每个Redis实例都会维护一个自己的连接池。可以直接建立一个连接池，然后作为参数Redis，这样就可以实现多个Redis实例共享一个连接池。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_202904&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;5.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;10&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pool&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis.ConnectionPool(host&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, port&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6379&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;r&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis.Redis(connection_pool&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pool)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;r.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'foo'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'Bar'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;r.get(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'foo'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;3、操作&lt;/p&gt;
&lt;p&gt;String操作，r&lt;span&gt;edis中的String在在内存中按照一个name对应一个value来存储。如图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201602/425762-20160222213200645-359371350.png&quot; alt=&quot;&quot; width=&quot;312&quot; height=&quot;202&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;45.744294909304&quot;&gt;
&lt;p&gt;set(name, value, ex=None, px=None, nx=False, xx=False)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_265617&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;在Redis中设置值，默认，不存在则创建，存在则修改&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;参数：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;ex，过期时间（秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;px，过期时间（毫秒）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;nx，如果设置为True，则只有name不存在时，当前set操作才执行&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;xx，如果设置为True，则只有name存在时，岗前set操作才执行&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;setnx(name, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_183859&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;设置值，只有name不存在时，执行设置操作（添加）&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;setex(name, value, time)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_698407&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 设置值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 参数：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# time，过期时间（数字秒 或 timedelta对象）&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;psetex(name, time_ms, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_696693&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 设置值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 参数：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# time_ms，过期时间（数字毫秒 或 timedelta对象）&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;mset(*args, **kwargs)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_144856&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;批量设置值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;如：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;mset(k1=&lt;/code&gt;&lt;code class=&quot;javascript string&quot;&gt;'v1'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;, k2=&lt;/code&gt;&lt;code class=&quot;javascript string&quot;&gt;'v2'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;或&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;mget({&lt;/code&gt;&lt;code class=&quot;javascript string&quot;&gt;'k1'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;:&lt;/code&gt; &lt;code class=&quot;javascript string&quot;&gt;'v1'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;javascript string&quot;&gt;'k2'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;:&lt;/code&gt; &lt;code class=&quot;javascript string&quot;&gt;'v2'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;})&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;get(name)&lt;/p&gt;

&lt;p&gt;mget(keys, *args)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_919332&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;批量获取&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;如：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;mget(&lt;/code&gt;&lt;code class=&quot;javascript string&quot;&gt;'ylr'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;javascript string&quot;&gt;'wupeiqi'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;或&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;r.mget([&lt;/code&gt;&lt;code class=&quot;javascript string&quot;&gt;'ylr'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;javascript string&quot;&gt;'wupeiqi'&lt;/code&gt;&lt;code class=&quot;javascript plain&quot;&gt;])&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;getset(name, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_239419&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript plain&quot;&gt;设置新值并获取原来的值&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;getrange(key, start, end)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_977544&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 获取子序列（根据字节获取，非字符）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 参数：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# name，Redis 的 name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# start，起始位置（字节）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# end，结束位置（字节）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 如： &quot;武沛齐&quot; ，0-3表示 &quot;武&quot;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;setrange(name, offset, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_354537&quot; class=&quot;syntaxhighlighter javascript&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 修改字符串内容，从指定字符串索引开始向后替换（新值太长时，则向后添加）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# 参数：&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# offset，字符串的索引，字节（一个汉字三个字节）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;javascript spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;javascript preprocessor&quot;&gt;# value，要设置的值&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;setbit(name, offset, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_141898&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;p&gt;26&lt;/p&gt;
&lt;p&gt;27&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;17&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;33&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;那么字符串foo的二进制表示为：&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;01100110&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;01101111&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;01101111&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;所以，如果执行 setbit(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'n1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;7&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)，则就会将第&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;7&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;位设置为&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;1&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;，&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;那么最终二进制则变成&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;01100111&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;01101111&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;01101111&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;，即：&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;goo&quot;&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;source&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;foo&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;for&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;i&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;in&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;source:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;num&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python functions&quot;&gt;ord&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(i)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python functions&quot;&gt;bin&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(num).replace(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'b'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,'')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;特别的，如果source是汉字&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;武沛齐&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;怎么办？&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;答：对于utf&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;8&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;，每一个汉字占&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;3&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;个字节，那么&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;武沛齐&quot;&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;则有&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;9&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;个字节&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;       &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;对于汉字，&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;for&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;循环时候会按照 字节 迭代，那么在迭代时，将每一个字节转换 十进制数，然后再将十进制数转换成二进制&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;11100110&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10101101&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10100110&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;11100110&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10110010&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10011011&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;11101001&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10111101&lt;/code&gt; &lt;code class=&quot;python value&quot;&gt;10010000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;                    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;武                         沛                           齐&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;getbit(name, offset)&lt;/p&gt;

&lt;p&gt;bitcount(key, start=None, end=None)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_27721&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;bitop(operation, dest, *keys)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_388425&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;bitop(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;AND&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'new_name'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'n1'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'n2'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'n3'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;strlen(name)&lt;/p&gt;

&lt;p&gt;incr(self, name, amount=1)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_822945&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;incrbyfloat(self, name, amount=1.0)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_555497&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;decr(self, name, amount=1)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_868857&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;append(key, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_430704&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;key, redis的name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;value, 要追加的字符串&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;p&gt;Hash操作，redis中Hash在内存中的存储格式如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201602/425762-20160223115506630-113443460.png&quot; alt=&quot;&quot; width=&quot;345&quot; height=&quot;232&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;19.671361502347&quot;&gt;
&lt;p&gt;hset(name, key, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_702476&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hmset(name, mapping)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_513646&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hget(name,key)&lt;/p&gt;

&lt;p&gt;hmget(name, keys, *args)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_949468&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hgetall(name)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_70556&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;获取name对应&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;hash&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;的所有键值&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hlen(name)&lt;/p&gt;

&lt;p&gt;hkeys(name)&lt;/p&gt;

&lt;p&gt;hvals(name)&lt;/p&gt;

&lt;p&gt;hexists(name, key)&lt;/p&gt;

&lt;p&gt;hdel(name,*keys)&lt;/p&gt;

&lt;p&gt;hincrby(name, key, amount=1)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_447469&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hincrbyfloat(name, key, amount=1.0)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_299488&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hscan(name, cursor=0, match=None, count=None)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_774559&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hscan_iter(name, match=None, count=None)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_975384&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
&lt;p&gt;List操作，redis中的List在在内存中按照一个name对应一个List来存储。如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201602/425762-20160223172249115-189393001.png&quot; alt=&quot;&quot; width=&quot;280&quot; height=&quot;177&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;39.354120267261&quot;&gt;
&lt;p&gt;lpush(name,values)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_632571&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;lpushx(name,value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_511216&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;llen(name)&lt;/p&gt;

&lt;p&gt;linsert(name, where, refvalue, value))&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_447963&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;r.lset(name, index, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_839899&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;r.lrem(name, value, num)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_593873&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;           &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;           &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;lpop(name)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_143553&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;lindex(name, index)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_818307&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;在name对应的列表中根据索引获取列表元素&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;lrange(name, start, end)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_506986&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;ltrim(name, start, end)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_752178&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;rpoplpush(src, dst)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_140697&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;blpop(keys, timeout)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_863959&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;brpoplpush(src, dst, timeout=0)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_147607&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;自定义增量迭代&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_110284&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr readability=&quot;7&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;14&quot;&gt;

&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;def&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;list_iter(name):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;list_count&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;r.llen(name)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;for&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;index&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;in&lt;/code&gt; &lt;code class=&quot;python functions&quot;&gt;xrange&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(list_count):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;yield&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;r.lindex(name, index)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;for&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;item&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;in&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;list_iter(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'pp'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;item&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Set操作，Set集合就是不允许重复的列表&lt;/p&gt;
&lt;p&gt;sadd(name,values)&lt;/p&gt;

&lt;p&gt;scard(name)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_939715&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;获取name对应的集合中元素个数&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;sdiff(keys, *args)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_48759&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;在第一个name对应的集合中且不在其他name对应的集合的元素集合&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;sdiffstore(dest, keys, *args)&lt;/p&gt;

&lt;p&gt;sinter(keys, *args)&lt;/p&gt;

&lt;p&gt;sinterstore(dest, keys, *args)&lt;/p&gt;

&lt;p&gt;sismember(name, value)&lt;/p&gt;

&lt;p&gt;smembers(name)&lt;/p&gt;

&lt;p&gt;smove(src, dst, value)&lt;/p&gt;

&lt;p&gt;spop(name)&lt;/p&gt;

&lt;p&gt;srandmember(name, numbers)&lt;/p&gt;

&lt;p&gt;srem(name, values)&lt;/p&gt;

&lt;p&gt;sunion(keys, *args)&lt;/p&gt;

&lt;p&gt;sunionstore(dest,keys, *args)&lt;/p&gt;

&lt;p&gt;sscan(name, cursor=0, match=None, count=None)&lt;br/&gt;sscan_iter(name, match=None, count=None)&lt;/p&gt;


&lt;/blockquote&gt;
&lt;p&gt;有序集合，在集合的基础上，为每元素排序；元素的排序需要根据另外一个值来进行比较，所以，对于有序集合，每一个元素有两个值，即：值和分数，分数专门用来做排序。&lt;/p&gt;
&lt;blockquote readability=&quot;53.20197044335&quot;&gt;
&lt;p&gt;zadd(name, *args, **kwargs)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_664304&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;     &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;     &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;     &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;zcard(name)&lt;/p&gt;

&lt;p&gt;zcount(name, min, max)&lt;/p&gt;

&lt;p&gt;zincrby(name, value, amount)&lt;/p&gt;

&lt;p&gt;r.zrange( name, start, end, desc=False, withscores=False, score_cast_func=float)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_669465&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;zrank(name, value)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_474814&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;zrangebylex(name, min, max, start=None, num=None)&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_505152&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;




&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;zrem(name, values)&lt;/p&gt;

&lt;p&gt;zremrangebyrank(name, min, max)&lt;/p&gt;

&lt;p&gt;zremrangebyscore(name, min, max)&lt;/p&gt;

&lt;p&gt;zremrangebylex(name, min, max)&lt;/p&gt;

&lt;p&gt;zscore(name, value)&lt;/p&gt;

&lt;p&gt;zinterstore(dest, keys, aggregate=None)&lt;/p&gt;

&lt;p&gt;zunionstore(dest, keys, aggregate=None)&lt;/p&gt;

&lt;p&gt;zscan(name, cursor=0, match=None, count=None, score_cast_func=float)&lt;br/&gt;zscan_iter(name, match=None, count=None,score_cast_func=float)&lt;/p&gt;


&lt;/blockquote&gt;
&lt;p&gt;其他常用操作&lt;/p&gt;
&lt;blockquote readability=&quot;7.7464788732394&quot;&gt;
&lt;p&gt;delete(*names)&lt;/p&gt;

&lt;p&gt;exists(name)&lt;/p&gt;

&lt;p&gt;keys(pattern='*')&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_415938&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;div class=&quot;container&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;expire(name ,time)&lt;/p&gt;

&lt;p&gt;rename(src, dst)&lt;/p&gt;

&lt;p&gt;move(name, db))&lt;/p&gt;

&lt;p&gt;randomkey()&lt;/p&gt;

&lt;p&gt;type(name)&lt;/p&gt;

&lt;p&gt;scan(cursor=0, match=None, count=None)&lt;br/&gt;scan_iter(match=None, count=None)&lt;/p&gt;


&lt;/blockquote&gt;
&lt;p&gt;4、管道&lt;/p&gt;
&lt;p&gt;redis-py默认在执行每次请求都会创建（连接池申请连接）和断开（归还连接池）一次连接操作，如果想要在一次请求中指定多个命令，则可以使用pipline实现一次请求指定多个命令，并且默认情况下一次pipline 是原子性操作。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_680823&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;4.5&quot;&gt;&lt;tr readability=&quot;9&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;12&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pool&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis.ConnectionPool(host&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'10.211.55.4'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, port&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6379&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;r&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis.Redis(connection_pool&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pool)&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pipe&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;r.pipeline(transaction&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pipe.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'name'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'alex'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pipe.&lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;set&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'role'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'sb'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pipe.execute()&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;5、发布订阅&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201601/425762-20160121152411125-1838441844.png&quot; alt=&quot;&quot; width=&quot;467&quot; height=&quot;273&quot;/&gt;&lt;/p&gt;
&lt;p&gt;发布者：服务器&lt;/p&gt;
&lt;p&gt;订阅者：Dashboad和数据处理&lt;/p&gt;
&lt;p&gt;Demo如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3f28f3d6-94f0-4f19-aaa4-dfbc0a8172bd')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_3f28f3d6-94f0-4f19-aaa4-dfbc0a8172bd&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3f28f3d6-94f0-4f19-aaa4-dfbc0a8172bd&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3f28f3d6-94f0-4f19-aaa4-dfbc0a8172bd',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3f28f3d6-94f0-4f19-aaa4-dfbc0a8172bd&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt;&lt;span&gt; redis


&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; RedisHelper:

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self):
        self.&lt;/span&gt;&lt;span&gt;__conn&lt;/span&gt; = redis.Redis(host=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.211.55.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        self.chan_sub &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt;&lt;span&gt;fm104.5&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
        self.chan_pub &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt;&lt;span&gt;fm104.5&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;

    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; public(self, msg):
        self.&lt;/span&gt;&lt;span&gt;__conn&lt;/span&gt;&lt;span&gt;.publish(self.chan_pub, msg)
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; True

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; subscribe(self):
        pub &lt;/span&gt;= self.&lt;span&gt;__conn&lt;/span&gt;&lt;span&gt;.pubsub()
        pub.subscribe(self.chan_sub)
        pub.parse_response()
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; pub
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;RedisHelper&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;订阅者：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_466475&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;monitor.RedisHelper&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;RedisHelper&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;obj&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;RedisHelper()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;redis_sub&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;obj.subscribe()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;while&lt;/code&gt; &lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;msg&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;redis_sub.parse_response()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;msg&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;发布者：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_654962&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;monitor.RedisHelper&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;RedisHelper&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;obj&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;RedisHelper()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;obj.public(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'hello'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;更多参见：https://github.com/andymccurdy/redis-py/&lt;/p&gt;
&lt;p&gt;http://doc.redisfans.com/&lt;/p&gt;

&lt;p&gt;RabbitMQ是一个在AMQP基础上完整的，可复用的企业消息系统。他遵循Mozilla Public License开源协议。&lt;/p&gt;
&lt;p&gt;MQ全称为Message Queue, &lt;a href=&quot;http://baike.baidu.com/view/262473.htm&quot; target=&quot;_blank&quot;&gt;消息队列&lt;/a&gt;（MQ）是一种应用程序对应用程序的通信方法。应用程序通过读写出入队列的消息（针对应用程序的数据）来通信，而无需专用连接来链接它们。消 息传递指的是程序之间通过在消息中发送数据进行通信，而不是通过直接调用彼此来通信，直接调用通常是用于诸如&lt;a href=&quot;http://baike.baidu.com/view/431455.htm&quot; target=&quot;_blank&quot;&gt;远程过程调用&lt;/a&gt;的技术。排队指的是应用程序通过 队列来通信。队列的使用除去了接收和发送应用程序同时执行的要求。&lt;/p&gt;
&lt;p&gt;RabbitMQ安装&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_941868&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;安装配置epel源&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;   &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;$ rpm&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;ivh http:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;dl.fedoraproject.org&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pub&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;epel&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;i386&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;epel&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;release&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;6&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;8.noarch&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;.rpm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;安装erlang&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;   &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;$ yum&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;y install erlang&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;安装RabbitMQ&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;   &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;$ yum&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;y install rabbitmq&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：service rabbitmq-server start/stop&lt;/p&gt;
&lt;p&gt;安装API&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_850643&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;4&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pip install pika&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;or&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;easy_install pika&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;or&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;源码&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;https:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pypi.python.org&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pypi&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pika&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用API操作RabbitMQ&lt;/p&gt;
&lt;p&gt;基于Queue实现生产者消费者模型&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('447226ca-aea7-4d9b-bd98-24f0f099759c')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_447226ca-aea7-4d9b-bd98-24f0f099759c&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_447226ca-aea7-4d9b-bd98-24f0f099759c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('447226ca-aea7-4d9b-bd98-24f0f099759c',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_447226ca-aea7-4d9b-bd98-24f0f099759c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; Queue
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; threading


message &lt;/span&gt;= Queue.Queue(10&lt;span&gt;)


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; producer(i):
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
        message.put(i)


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; consumer(i):
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
        msg &lt;/span&gt;=&lt;span&gt; message.get()


&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(12&lt;span&gt;):
    t &lt;/span&gt;= threading.Thread(target=producer, args=&lt;span&gt;(i,))
    t.start()

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(10&lt;span&gt;):
    t &lt;/span&gt;= threading.Thread(target=consumer, args=&lt;span&gt;(i,))
    t.start()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;对于RabbitMQ来说，生产和消费不再针对内存里的一个Queue对象，而是某台服务器上的RabbitMQ Server实现的消息队列。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_414556&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;4.5&quot;&gt;&lt;tr readability=&quot;9&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;12&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;23&quot;&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;pika&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;connection&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;pika.BlockingConnection(pika.ConnectionParameters(&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;host&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'localhost'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;connection.channel()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel.queue_declare(queue&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'hello'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel.basic_publish(exchange&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;'',&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;                      &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;routing_key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'hello'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;                      &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;body&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'Hello World!'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot; [x] Sent 'Hello World!'&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;connection.close()&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_935586&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;16.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;32&quot;&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;pika&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;connection&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;pika.BlockingConnection(pika.ConnectionParameters(&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;        &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;host&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'localhost'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;connection.channel()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel.queue_declare(queue&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'hello'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;def&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;callback(ch, method, properties, body):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot; [x] Received %r&quot;&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;%&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;body)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel.basic_consume(callback,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;                      &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;queue&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'hello'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;                      &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;no_ack&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python functions&quot;&gt;print&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;' [*] Waiting for messages. To exit press CTRL+C'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;channel.start_consuming()&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;1、acknowledgment 消息不丢失&lt;/p&gt;
&lt;p&gt;no-ack ＝ False，如果消费者遇到情况(its channel is closed, connection is closed, or TCP connection is lost)挂掉了，那么，RabbitMQ会重新将该任务添加到队列中。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('726b00f9-c85c-4449-9f4c-6ed859d97e38')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_726b00f9-c85c-4449-9f4c-6ed859d97e38&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_726b00f9-c85c-4449-9f4c-6ed859d97e38&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('726b00f9-c85c-4449-9f4c-6ed859d97e38',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_726b00f9-c85c-4449-9f4c-6ed859d97e38&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.211.55.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.queue_declare(queue&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Received %r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; body)
    &lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; time
    time.sleep(&lt;/span&gt;10&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    ch.basic_ack(delivery_tag &lt;/span&gt;=&lt;span&gt; method.delivery_tag)

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      no_ack&lt;/span&gt;=&lt;span&gt;False)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for messages. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;消费者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;2、&lt;span class=&quot;n&quot;&gt;durable   消息不丢失&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('00cdc5f3-e5dc-4780-913b-93b5167d3c2c')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_00cdc5f3-e5dc-4780-913b-93b5167d3c2c&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_00cdc5f3-e5dc-4780-913b-93b5167d3c2c&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('00cdc5f3-e5dc-4780-913b-93b5167d3c2c',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_00cdc5f3-e5dc-4780-913b-93b5167d3c2c&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika

connection &lt;/span&gt;= pika.BlockingConnection(pika.ConnectionParameters(host=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.211.55.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; make message persistent&lt;/span&gt;
channel.queue_declare(queue=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, durable=&lt;span&gt;True)

channel.basic_publish(exchange&lt;/span&gt;=&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
                      routing_key&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      body&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello World!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      properties&lt;/span&gt;=&lt;span&gt;pika.BasicProperties(
                          delivery_mode&lt;/span&gt;=2, &lt;span&gt;#&lt;/span&gt;&lt;span&gt; make message persistent&lt;/span&gt;
&lt;span&gt;                      ))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Sent 'Hello World!'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
connection.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;生产者&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5d197d62-92e0-4631-aba0-ec94b2d34a28')&quot; readability=&quot;35.5&quot;&gt;&lt;img id=&quot;code_img_closed_5d197d62-92e0-4631-aba0-ec94b2d34a28&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5d197d62-92e0-4631-aba0-ec94b2d34a28&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5d197d62-92e0-4631-aba0-ec94b2d34a28',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5d197d62-92e0-4631-aba0-ec94b2d34a28&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika

connection &lt;/span&gt;= pika.BlockingConnection(pika.ConnectionParameters(host=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.211.55.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; make message persistent&lt;/span&gt;
channel.queue_declare(queue=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, durable=&lt;span&gt;True)


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Received %r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; body)
    &lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; time
    time.sleep(&lt;/span&gt;10&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    ch.basic_ack(delivery_tag &lt;/span&gt;=&lt;span&gt; method.delivery_tag)

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      no_ack&lt;/span&gt;=&lt;span&gt;False)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for messages. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;消费者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;n&quot;&gt;3、消息获取顺序&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;n&quot;&gt;默认消息队列里的数据是按照顺序被消费者拿走，例如：消费者1 去队列中获取 奇数 序列的任务，消费者1去队列中获取 偶数 序列的任务。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;channel.basic_qos(prefetch_count=1) 表示谁来谁取，不再按照奇偶数排列&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5badc327-1ded-43b8-8e29-52ad8e3c17b3')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_5badc327-1ded-43b8-8e29-52ad8e3c17b3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5badc327-1ded-43b8-8e29-52ad8e3c17b3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5badc327-1ded-43b8-8e29-52ad8e3c17b3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5badc327-1ded-43b8-8e29-52ad8e3c17b3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika

connection &lt;/span&gt;= pika.BlockingConnection(pika.ConnectionParameters(host=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;10.211.55.4&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; make message persistent&lt;/span&gt;
channel.queue_declare(queue=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Received %r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; body)
    &lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; time
    time.sleep(&lt;/span&gt;10&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;ok&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
    ch.basic_ack(delivery_tag &lt;/span&gt;=&lt;span&gt; method.delivery_tag)

channel.basic_qos(prefetch_count&lt;/span&gt;=1&lt;span&gt;)

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      no_ack&lt;/span&gt;=&lt;span&gt;False)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for messages. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;消费者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;4、发布订阅&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201607/425762-20160717140730998-2143093474.png&quot; alt=&quot;&quot; width=&quot;634&quot; height=&quot;189&quot;/&gt;&lt;/p&gt;
&lt;p&gt;发布订阅和简单的消息队列区别在于，发布订阅会将消息发送给所有的订阅者，而消息队列中的数据被消费一次便消失。所以，RabbitMQ实现发布和订阅时，会为每一个订阅者创建一个队列，而发布者发布消息时，会将消息放置在所有相关队列中。&lt;/p&gt;
&lt;p&gt; exchange type = fanout&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('2eea3285-d8ef-4298-bd21-e4b61b941ff3')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_2eea3285-d8ef-4298-bd21-e4b61b941ff3&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_2eea3285-d8ef-4298-bd21-e4b61b941ff3&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('2eea3285-d8ef-4298-bd21-e4b61b941ff3',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_2eea3285-d8ef-4298-bd21-e4b61b941ff3&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;fanout&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

message &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;.join(sys.argv[1:]) &lt;span&gt;or&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;info: Hello World!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
channel.basic_publish(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      routing_key&lt;/span&gt;=&lt;span&gt;''&lt;/span&gt;&lt;span&gt;,
                      body&lt;/span&gt;=&lt;span&gt;message)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Sent %r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; message)
connection.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;发布者&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('45a79d14-c0e5-42a3-a8a2-0fbe6212a1ae')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_45a79d14-c0e5-42a3-a8a2-0fbe6212a1ae&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_45a79d14-c0e5-42a3-a8a2-0fbe6212a1ae&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('45a79d14-c0e5-42a3-a8a2-0fbe6212a1ae',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_45a79d14-c0e5-42a3-a8a2-0fbe6212a1ae&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;fanout&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

result &lt;/span&gt;= channel.queue_declare(exclusive=&lt;span&gt;True)
queue_name &lt;/span&gt;=&lt;span&gt; result.method.queue

channel.queue_bind(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                   queue&lt;/span&gt;=&lt;span&gt;queue_name)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for logs. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] %r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; body)

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;queue_name,
                      no_ack&lt;/span&gt;=&lt;span&gt;True)

channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;订阅者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;5、关键字发送&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201607/425762-20160717140748795-1181706200.png&quot; alt=&quot;&quot; width=&quot;585&quot; height=&quot;191&quot;/&gt;&lt;/p&gt;
&lt;p&gt; exchange type = direct&lt;/p&gt;
&lt;p&gt;之前事例，发送消息时明确指定某个队列并向其中发送消息，RabbitMQ还支持根据关键字发送，即：队列绑定关键字，发送者将数据根据关键字发送到消息exchange，exchange根据 关键字 判定应该将数据发送至指定队列。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('37d73d0f-4bbb-4bfe-9d81-7e83bd82a8fe')&quot; readability=&quot;37&quot;&gt;&lt;img id=&quot;code_img_closed_37d73d0f-4bbb-4bfe-9d81-7e83bd82a8fe&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_37d73d0f-4bbb-4bfe-9d81-7e83bd82a8fe&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('37d73d0f-4bbb-4bfe-9d81-7e83bd82a8fe',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_37d73d0f-4bbb-4bfe-9d81-7e83bd82a8fe&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;69&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

result &lt;/span&gt;= channel.queue_declare(exclusive=&lt;span&gt;True)
queue_name &lt;/span&gt;=&lt;span&gt; result.method.queue

severities &lt;/span&gt;= sys.argv[1&lt;span&gt;:]
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; severities:
    sys.stderr.write(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Usage: %s [info] [warning] [error]\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; sys.argv[0])
    sys.exit(&lt;/span&gt;1&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; severity &lt;span&gt;in&lt;/span&gt;&lt;span&gt; severities:
    channel.queue_bind(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                       queue&lt;/span&gt;=&lt;span&gt;queue_name,
                       routing_key&lt;/span&gt;=&lt;span&gt;severity)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for logs. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] %r:%r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (method.routing_key, body))

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;queue_name,
                      no_ack&lt;/span&gt;=&lt;span&gt;True)

channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;消费者&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('cf00e6e7-8759-4b79-a1d3-9267c2f9812b')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_cf00e6e7-8759-4b79-a1d3-9267c2f9812b&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_cf00e6e7-8759-4b79-a1d3-9267c2f9812b&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('cf00e6e7-8759-4b79-a1d3-9267c2f9812b',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_cf00e6e7-8759-4b79-a1d3-9267c2f9812b&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

severity &lt;/span&gt;= sys.argv[1] &lt;span&gt;if&lt;/span&gt; len(sys.argv) &amp;gt; 1 &lt;span&gt;else&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;info&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
message &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;.join(sys.argv[2:]) &lt;span&gt;or&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello World!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
channel.basic_publish(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;direct_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      routing_key&lt;/span&gt;=&lt;span&gt;severity,
                      body&lt;/span&gt;=&lt;span&gt;message)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Sent %r:%r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (severity, message))
connection.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;生产者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;6、模糊匹配&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201607/425762-20160717140807232-1395723247.png&quot; alt=&quot;&quot; width=&quot;544&quot; height=&quot;181&quot;/&gt;&lt;/p&gt;
&lt;p&gt; exchange type = topic&lt;/p&gt;
&lt;p&gt;在topic类型下，可以让队列绑定几个模糊的关键字，之后发送者将数据发送到exchange，exchange将传入”路由值“和 ”关键字“进行匹配，匹配成功，则将数据发送到指定队列。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;# 表示可以匹配 0 个 或 多个 单词&lt;/li&gt;
&lt;li&gt;*  表示只能匹配 一个 单词&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_79562&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;发送者路由值              队列中&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;old.boy.python          old.&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;*&lt;/code&gt;  &lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;不匹配&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;old.boy.python          old.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('d01b3cba-828d-4b0f-a563-f88f702acc71')&quot; readability=&quot;37&quot;&gt;&lt;img id=&quot;code_img_closed_d01b3cba-828d-4b0f-a563-f88f702acc71&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_d01b3cba-828d-4b0f-a563-f88f702acc71&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('d01b3cba-828d-4b0f-a563-f88f702acc71',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_d01b3cba-828d-4b0f-a563-f88f702acc71&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;69&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

result &lt;/span&gt;= channel.queue_declare(exclusive=&lt;span&gt;True)
queue_name &lt;/span&gt;=&lt;span&gt; result.method.queue

binding_keys &lt;/span&gt;= sys.argv[1&lt;span&gt;:]
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; &lt;span&gt;not&lt;/span&gt;&lt;span&gt; binding_keys:
    sys.stderr.write(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Usage: %s [binding_key]...\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; sys.argv[0])
    sys.exit(&lt;/span&gt;1&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; binding_key &lt;span&gt;in&lt;/span&gt;&lt;span&gt; binding_keys:
    channel.queue_bind(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                       queue&lt;/span&gt;=&lt;span&gt;queue_name,
                       routing_key&lt;/span&gt;=&lt;span&gt;binding_key)

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt; [*] Waiting for logs. To exit press CTRL+C&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; callback(ch, method, properties, body):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] %r:%r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (method.routing_key, body))

channel.basic_consume(callback,
                      queue&lt;/span&gt;=&lt;span&gt;queue_name,
                      no_ack&lt;/span&gt;=&lt;span&gt;True)

channel.start_consuming()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;消费者&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('e128608f-08f2-4921-b8c5-f3a1993f433f')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_e128608f-08f2-4921-b8c5-f3a1993f433f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_e128608f-08f2-4921-b8c5-f3a1993f433f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('e128608f-08f2-4921-b8c5-f3a1993f433f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_e128608f-08f2-4921-b8c5-f3a1993f433f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; pika
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; sys

connection &lt;/span&gt;=&lt;span&gt; pika.BlockingConnection(pika.ConnectionParameters(
        host&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;localhost&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
channel &lt;/span&gt;=&lt;span&gt; connection.channel()

channel.exchange_declare(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                         type&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)

routing_key &lt;/span&gt;= sys.argv[1] &lt;span&gt;if&lt;/span&gt; len(sys.argv) &amp;gt; 1 &lt;span&gt;else&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;anonymous.info&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
message &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;.join(sys.argv[2:]) &lt;span&gt;or&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello World!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
channel.basic_publish(exchange&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;topic_logs&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
                      routing_key&lt;/span&gt;=&lt;span&gt;routing_key,
                      body&lt;/span&gt;=&lt;span&gt;message)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; [x] Sent %r:%r&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; (routing_key, message))
connection.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;生产者&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('bb167bb0-526c-4724-8488-4f1b64fe0e82')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_bb167bb0-526c-4724-8488-4f1b64fe0e82&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_bb167bb0-526c-4724-8488-4f1b64fe0e82&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('bb167bb0-526c-4724-8488-4f1b64fe0e82',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_bb167bb0-526c-4724-8488-4f1b64fe0e82&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
sudo rabbitmqctl add_user alex 123
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 设置用户为administrator角色&lt;/span&gt;
&lt;span&gt;sudo rabbitmqctl set_user_tags alex administrator
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 设置权限&lt;/span&gt;
sudo rabbitmqctl set_permissions -p &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; alex &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;''&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 然后重启rabbiMQ服务&lt;/span&gt;
sudo /etc/init.d/rabbitmq-&lt;span&gt;server restart
 
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 然后可以使用刚才的用户远程连接rabbitmq server了。&lt;/span&gt;


------------------------------&lt;span&gt;
credentials &lt;/span&gt;= pika.PlainCredentials(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;alex&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;123&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

connection &lt;/span&gt;= pika.BlockingConnection(pika.ConnectionParameters(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;192.168.14.47&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,credentials=credentials))
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;SQLAlchemy是&lt;a href=&quot;http://baike.baidu.com/subview/21087/21087.htm&quot; target=&quot;_blank&quot;&gt;Python&lt;/a&gt;编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2015.cnblogs.com/blog/425762/201601/425762-20160117042127803-263417768.png&quot; alt=&quot;&quot; width=&quot;539&quot; height=&quot;377&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_486402&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr readability=&quot;7&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;15&quot;&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;MySQL&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;mysql&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;+&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;mysqldb:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;]&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;dbname&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;pymysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;mysql&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;+&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;pymysql:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;dbname&amp;gt;[?&amp;lt;options&amp;gt;]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;MySQL&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;-&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Connector&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;mysql&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;+&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;mysqlconnector:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;]&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;&amp;lt;dbname&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;cx_Oracle&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;oracle&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;+&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;cx_oracle:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;user:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;pass&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;@host:port&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;dbname[?key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;value&amp;amp;key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;value...]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;更多详见：http:&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;docs.sqlalchemy.org&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;en&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;latest&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;dialects&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;/&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;index.html&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;步骤一：&lt;/p&gt;
&lt;p&gt;使用 Engine/ConnectionPooling/Dialect 进行数据库操作，Engine使用ConnectionPooling连接数据库，然后再通过Dialect执行SQL语句。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_119088&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;10.5&quot;&gt;&lt;tr readability=&quot;21&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;18&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;35&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;mysql+mysqldb://root:123@127.0.0.1:3306/s11&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, max_overflow&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;5&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine.execute(&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;INSERT INTO ts_test (a, b) VALUES ('2', 'v1')&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine.execute(&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;     &lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;INSERT INTO ts_test (a, b) VALUES (%s, %s)&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;((&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;555&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;v1&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;),(&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;666&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;&quot;v1&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;),)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine.execute(&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;INSERT INTO ts_test (a, b) VALUES (%(id)s, %(name)s)&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;id&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;999&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, name&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;v1&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;result&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;engine.execute(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'select * from ts_test'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;result.fetchall()&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('bcbfef61-88d4-49f1-8289-685072590b71')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_bcbfef61-88d4-49f1-8289-685072590b71&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_bcbfef61-88d4-49f1-8289-685072590b71&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('bcbfef61-88d4-49f1-8289-685072590b71',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_bcbfef61-88d4-49f1-8289-685072590b71&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; sqlalchemy &lt;span&gt;import&lt;/span&gt;&lt;span&gt; create_engine


engine &lt;/span&gt;= create_engine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mysql+mysqldb://root:123@127.0.0.1:3306/s11&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, max_overflow=5&lt;span&gt;)


&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 事务操作&lt;/span&gt;
&lt;span&gt;with engine.begin() as conn:
    conn.execute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;insert into table (x, y, z) values (1, 2, 3)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    conn.execute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;my_special_procedure(5)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
    
    
conn &lt;/span&gt;=&lt;span&gt; engine.connect()
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 事务操作 &lt;/span&gt;
&lt;span&gt;with conn.begin():
       conn.execute(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;some statement&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:5, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:10})
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;事务操作&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;注：查看数据库连接：show status like 'Threads%';&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;步骤二：&lt;/p&gt;
&lt;p&gt;使用 Schema Type/SQL Expression Language/Engine/ConnectionPooling/Dialect 进行数据库操作。Engine使用Schema Type创建一个特定的结构对象，之后通过SQL Expression Language将该对象转换成SQL语句，然后通过 ConnectionPooling 连接数据库，再然后通过 Dialect 执行SQL，并获取结果。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_60359&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;14&quot;&gt;&lt;tr readability=&quot;28&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;22.5&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;44&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine, Table, Column, Integer, String, MetaData, ForeignKey&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;metadata&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;MetaData()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;user&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Table(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'user'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, metadata,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Column(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'id'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, Integer, primary_key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Column(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'name'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, String(&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;20&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;color&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Table(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'color'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, metadata,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Column(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'id'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, Integer, primary_key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;Column(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;'name'&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, String(&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;20&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;mysql+mysqldb://root:123@127.0.0.1:3306/s11&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, max_overflow&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;5&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;metadata.create_all(engine)&lt;/code&gt;&lt;/p&gt;


&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c90b1fa4-fe6f-4cee-9853-ecfd25589857')&quot; readability=&quot;47&quot;&gt;&lt;img id=&quot;code_img_closed_c90b1fa4-fe6f-4cee-9853-ecfd25589857&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c90b1fa4-fe6f-4cee-9853-ecfd25589857&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c90b1fa4-fe6f-4cee-9853-ecfd25589857',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c90b1fa4-fe6f-4cee-9853-ecfd25589857&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;89&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/usr/bin/env python&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; -*- coding:utf-8 -*-&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; sqlalchemy &lt;span&gt;import&lt;/span&gt;&lt;span&gt; create_engine, Table, Column, Integer, String, MetaData, ForeignKey

metadata &lt;/span&gt;=&lt;span&gt; MetaData()

user &lt;/span&gt;= Table(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, metadata,
    Column(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, Integer, primary_key=&lt;span&gt;True),
    Column(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, String(20&lt;span&gt;)),
)

color &lt;/span&gt;= Table(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;color&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, metadata,
    Column(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, Integer, primary_key=&lt;span&gt;True),
    Column(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, String(20&lt;span&gt;)),
)
engine &lt;/span&gt;= create_engine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;mysql+mysqldb://root:123@127.0.0.1:3306/s11&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, max_overflow=5&lt;span&gt;)

conn &lt;/span&gt;=&lt;span&gt; engine.connect()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 创建SQL语句，INSERT INTO &quot;user&quot; (id, name) VALUES (:id, :name)&lt;/span&gt;
conn.execute(user.insert(),{&lt;span&gt;'&lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:7,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;seven&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;})
conn.close()

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; sql = user.insert().values(id=123, name='wu')&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; conn.execute(sql)&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; conn.close()&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; sql = user.delete().where(user.c.id &amp;gt; 1)&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; sql = user.update().values(fullname=user.c.name)&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; sql = user.update().where(user.c.name == 'jack').values(name='ed')&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; sql = select([user, ])&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; sql = select([user.c.id, ])&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; sql = select([user.c.name, color.c.name]).where(user.c.id==color.c.id)&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; sql = select([user.c.name]).order_by(user.c.name)&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; sql = select([user]).group_by(user.c.name)&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt; result = conn.execute(sql)&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; print result.fetchall()&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; conn.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;增删改查&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;更多内容详见：&lt;/p&gt;
&lt;p&gt;    http://www.jianshu.com/p/e6bba189fcbd&lt;/p&gt;
&lt;p&gt;    http://docs.sqlalchemy.org/en/latest/core/expression_api.html&lt;/p&gt;
&lt;p&gt;注：SQLAlchemy无法修改表结构，如果需要可以使用SQLAlchemy开发者开源的另外一个软件Alembic来完成。&lt;/p&gt;
&lt;p&gt;步骤三：&lt;/p&gt;
&lt;p&gt;使用 ORM/Schema Type/SQL Expression Language/Engine/ConnectionPooling/Dialect 所有组件对数据进行操作。根据类创建对象，对象转换成SQL，执行SQL。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter sh-gutter&quot;&gt;
&lt;div&gt;
&lt;div id=&quot;highlighter_592094&quot; class=&quot;syntaxhighlighter python&quot;&gt;

&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;6&lt;/p&gt;
&lt;p&gt;7&lt;/p&gt;
&lt;p&gt;8&lt;/p&gt;
&lt;p&gt;9&lt;/p&gt;
&lt;p&gt;10&lt;/p&gt;
&lt;p&gt;11&lt;/p&gt;
&lt;p&gt;12&lt;/p&gt;
&lt;p&gt;13&lt;/p&gt;
&lt;p&gt;14&lt;/p&gt;
&lt;p&gt;15&lt;/p&gt;
&lt;p&gt;16&lt;/p&gt;
&lt;p&gt;17&lt;/p&gt;
&lt;p&gt;18&lt;/p&gt;
&lt;p&gt;19&lt;/p&gt;
&lt;p&gt;20&lt;/p&gt;
&lt;p&gt;21&lt;/p&gt;
&lt;p&gt;22&lt;/p&gt;
&lt;p&gt;23&lt;/p&gt;
&lt;p&gt;24&lt;/p&gt;
&lt;p&gt;25&lt;/p&gt;
&lt;p&gt;26&lt;/p&gt;
&lt;p&gt;27&lt;/p&gt;
&lt;p&gt;28&lt;/p&gt;
&lt;p&gt;29&lt;/p&gt;
&lt;p&gt;30&lt;/p&gt;
&lt;p&gt;31&lt;/p&gt;
&lt;p&gt;32&lt;/p&gt;
&lt;p&gt;33&lt;/p&gt;
&lt;p&gt;34&lt;/p&gt;
&lt;p&gt;35&lt;/p&gt;
&lt;p&gt;36&lt;/p&gt;
&lt;p&gt;37&lt;/p&gt;
&lt;p&gt;38&lt;/p&gt;
&lt;p&gt;39&lt;/p&gt;
&lt;p&gt;40&lt;/p&gt;
&lt;p&gt;41&lt;/p&gt;
&lt;p&gt;42&lt;/p&gt;
&lt;p&gt;43&lt;/p&gt;
&lt;p&gt;44&lt;/p&gt;
&lt;p&gt;45&lt;/p&gt;
&lt;p&gt;46&lt;/p&gt;
&lt;p&gt;47&lt;/p&gt;
&lt;p&gt;48&lt;/p&gt;
&lt;p&gt;49&lt;/p&gt;
&lt;p&gt;50&lt;/p&gt;
&lt;p&gt;51&lt;/p&gt;
&lt;p&gt;52&lt;/p&gt;
&lt;p&gt;53&lt;/p&gt;
&lt;p&gt;54&lt;/p&gt;
&lt;p&gt;55&lt;/p&gt;
&lt;p&gt;56&lt;/p&gt;
&lt;p&gt;57&lt;/p&gt;
&lt;p&gt;58&lt;/p&gt;
&lt;p&gt;59&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;code&quot; readability=&quot;15&quot;&gt;
&lt;div class=&quot;container&quot; readability=&quot;29&quot;&gt;



&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy.ext.declarative&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;declarative_base&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Column, Integer, String&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy.orm&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sessionmaker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;from&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sqlalchemy&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;engine&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;create_engine(&lt;/code&gt;&lt;code class=&quot;python string&quot;&gt;&quot;mysql+mysqldb://root:123@127.0.0.1:3306/s11&quot;&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;, max_overflow&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;5&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;Base&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;declarative_base()&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;&lt;code class=&quot;python keyword&quot;&gt;class&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;User(Base):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;__tablename__&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python string&quot;&gt;'users'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python functions&quot;&gt;id&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Column(Integer, primary_key&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python color1&quot;&gt;True&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python spaces&quot;&gt;    &lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;name&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Column(String(&lt;/code&gt;&lt;code class=&quot;python value&quot;&gt;50&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;))&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;Session&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;sessionmaker(bind&lt;/code&gt;&lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;python plain&quot;&gt;engine)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;python plain&quot;&gt;session&lt;/code&gt; &lt;code class=&quot;python keyword&quot;&gt;=&lt;/code&gt; &lt;code class=&quot;python plain&quot;&gt;Session()&lt;/code&gt;&lt;/p&gt;




































&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;更多功能参见文档，&lt;a href=&quot;http://files.cnblogs.com/files/wupeiqi/sqlalchemy.pdf.zip&quot; target=&quot;_blank&quot;&gt;猛击这里&lt;/a&gt;下载PDF&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 15:47:00 +0000</pubDate>
<dc:creator>听风。</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huchong/p/8491107.html</dc:identifier>
</item>
<item>
<title>.NET Core阿里大于短信发送SDK修改以及使用 - OMango</title>
<link>http://www.cnblogs.com/OMango/p/8490983.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/OMango/p/8490983.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、问题背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　继上次七牛云SDK的问题之后（参考：&lt;a href=&quot;http://www.cnblogs.com/OMango/p/8447480.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/OMango/p/8447480.html&lt;/a&gt;），在发送短信的功能上又出现了问题，我们短信服务使用的是阿里大于的服务，之前的平台是.NET Framework的平台，使用阿里官方的SDK并没有出现什么幺蛾子，但是转到.NET Core下后，找遍了阿里官方也并没有找到.NET Core的SDK，不得不说，在这方面.NET Core还有很长的路要走啊，虽然没有SDK，但是功能还是要完成啊，那怎么办呢？只能自己从.NetFrameWork的SDK里进行提取&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、修改说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;emmmm，好好看了一遍SDK以及官方文档后，发现topsdk里面还包含了其他的一些功能，但是我只需要短信服务啊，SO，既然准备改造那就把其他的相关功能都去掉了，只留下了短信相关功能，废话不多说先上链接&lt;a href=&quot;https://github.com/Hello-Mango/MTopSdkSMS.Core&quot; target=&quot;_blank&quot;&gt;https://github.com/Hello-Mango/MTopSdkSMS.Core&lt;/a&gt;，这是我已经修改后的代码，也经过测试可以发送短信到手机，dll也已经上传到NUGET(搜索MTopSdkSMS)&lt;/p&gt;
&lt;p&gt;　　修改方案主要是.NET FrmeWork下的HttpRequest类在.NetCore中不是默认带的，所以需要安装Microsoft.AspNetCore.Http，该SDK里还使用了反射的方法，所以还需要安装System.Reflection.Emit.Lightweight，最后一点就是将&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
wReq.ServicePoint.Expect100Continue = &lt;span&gt;false&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改为&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ServicePointManager.Expect100Continue = &lt;span&gt;false&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　如果不修改的话，会报平台不支持的错误,如果大家想自己尝试的话，可以下载官方的SDK源码进行.NET Core的改造，或者可以直接Nuget搜索MTopSdkSMS&lt;a href=&quot;https://github.com/Hello-Mango/MTopSdkSMS.Core&quot; target=&quot;_blank&quot;&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、具体使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　具体的代码使用方法完全可以参照官方的文档使用，我这边就给出一个简单的封装代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;public&lt;/span&gt; SMS(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; phoneNo, String template, String _AppKey, String _AppSecret, String _Extend, String _SmsFreeSignName, String _SmsTemplateCode)
        {
            _phoneNo &lt;/span&gt;=&lt;span&gt; phoneNo;
            _template &lt;/span&gt;=&lt;span&gt; template;
            Appsecret &lt;/span&gt;=&lt;span&gt; _AppSecret;
            Appkey &lt;/span&gt;=&lt;span&gt; _AppKey;
            Extend &lt;/span&gt;=&lt;span&gt; _Extend;
            SmsFreeSignName &lt;/span&gt;=&lt;span&gt; _SmsFreeSignName;
            SmsTemplateCode &lt;/span&gt;=&lt;span&gt; _SmsTemplateCode;
        }

        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt;短信身份验证
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;phoneNo&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;手机号&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;dicParam&quot;&amp;gt;&lt;/span&gt;&lt;span&gt;短信模板变量，对应模板中自定义字段&lt;/span&gt;&lt;span&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt;&lt;span&gt; String Send()
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;短息通知API请求参数&lt;/span&gt;
            ITopClient client = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DefaultTopClient(url, Appkey, Appsecret);
            AlibabaAliqinFcSmsNumSendRequest req &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; AlibabaAliqinFcSmsNumSendRequest();
            req.Extend &lt;/span&gt;= Extend;                                                       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;公共回传参数，在“消息返回”中会透传回该参数；&lt;/span&gt;
            req.SmsType = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;normal&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;;                                                    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;短信类型，传入值请填写normal&lt;/span&gt;
            req.SmsFreeSignName = SmsFreeSignName;                                          &lt;span&gt;//&lt;/span&gt;&lt;span&gt;短信签名&lt;/span&gt;
            req.SmsParam = _template;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt;短信模板变量&lt;/span&gt;
            req.RecNum = _phoneNo;                                                      &lt;span&gt;//&lt;/span&gt;&lt;span&gt;短信接收号码&lt;/span&gt;
            req.SmsTemplateCode = SmsTemplateCode;                                       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;短信模板ID&lt;/span&gt;
            AlibabaAliqinFcSmsNumSendResponse response = client.Execute&amp;lt;AlibabaAliqinFcSmsNumSendResponse&amp;gt;&lt;span&gt;(req);
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (response.Result == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; GetErrorMsg(response.SubErrCode);
            }
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
            {
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; response.Result.Success.ToString();
            }
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;四、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　.NET Core目前来说第三方库上支持相对于其他来说还是比较少，例如oracle目前还都没有关于.NET Core的驱动库，一些简单的碰到只能自己想办法去转换或者其他途径实现，但是后续相信.NET Core会越来越好&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;PS:由于这个只是我个人的修改作品，未经过大量的验证，如果大家发现有什么问题的话，也请联系我。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作者： Mango&lt;/p&gt;
&lt;p&gt;出处： &lt;a href=&quot;http://www.cnblogs.com/OMango/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/OMango/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于自己：专注.Net桌面开发以及Web后台开发，开始接触微服务、docker等互联网相关&lt;/p&gt;
&lt;p&gt;本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接，如有问题， 可邮件（hongjb@yizit.com）咨询.&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 15:27:00 +0000</pubDate>
<dc:creator>OMango</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/OMango/p/8490983.html</dc:identifier>
</item>
<item>
<title>iOS微信内存监控 - 腾讯WeTest</title>
<link>http://www.cnblogs.com/wetest/p/8490905.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wetest/p/8490905.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;WeTest 导读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;目前iOS主流的内存监控工具是Instruments的Allocations，但只能用于开发阶段。本文介绍如何实现离线化的内存监控工具，用于App上线后发现内存问题。&lt;/p&gt;

&lt;hr/&gt;
&lt;p&gt;FOOM（Foreground Out Of Memory），是指App在前台因消耗内存过多引起系统强杀。对用户而言，表现跟crash一样。Facebook早在2015年8月提出FOOM检测办法，大致原理是排除各种情况后，剩余的情况是FOOM，具体链接：https://code.facebook.com/posts/1146930688654547/reducing-fooms-in-the-facebook-ios-app/。&lt;/p&gt;

&lt;p&gt;微信自15年年底上线FOOM上报，从最初数据来看，每天FOOM次数与登录用户数比例接近3%，同期crash率1%不到。而16年年初某东老大反馈微信频繁闪退，在艰难拉取2G多日志后，才发现kv上报频繁打log引起FOOM。接着16年8月不少外部用户反馈微信启动不久后闪退，分析大量日志还是不能找到FOOM原因。微信急需一个有效的内存监控工具来发现问题。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、实现原理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信内存监控最初版本是使用Facebook的FBAllocationTracker工具监控OC对象分配，用fishhook工具hook malloc/free等接口监控堆内存分配，每隔1秒，把当前所有OC对象个数、TOP 200最大堆内存及其分配堆栈，用文本log输出到本地。该方案实现简单，一天内完成，通过给用户下发TestFlight，最终发现联系人模块因迁移DB加载大量联系人导致FOOM。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不过这方案有不少缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、监控粒度不够细，像大量分配小内存引起的质变无法监控，另外fishhook只能hook自身app的C接口调用，对系统库不起作用；&lt;/p&gt;
&lt;p&gt;2、打log间隔不好控制，间隔过长可能丢失中间峰值情况，间隔过短会引起耗电、io频繁等性能问题；&lt;/p&gt;
&lt;p&gt;3、上报的原始log靠人工分析，缺少好的页面工具展现和归类问题。&lt;/p&gt;

&lt;p&gt;所以二期版本以Instruments的Allocations为参考，着重四个方面优化，分别是数据收集、存储、上报及展现。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.数据收集&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;16年9月底为了解决ios10 nano crash，研究了libmalloc源码，无意中发现这几个接口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222241839-939355075.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;当malloc_logger和__syscall_logger函数指针不为空时，malloc/free、vm_allocate/vm_deallocate等内存分配/释放通过这两个指针通知上层，这也是内存调试工具malloc stack的实现原理。有了这两个函数指针，我们很容易记录当前存活对象的内存分配信息（包括分配大小和分配堆栈）。分配堆栈可以用backtrace函数捕获，但捕获到的地址是虚拟内存地址，不能从符号表dsym解析符号。所以还要记录每个image加载时的偏移slide，这样符号表地址=堆栈地址-slide。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222307321-488548272.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;另外为了更好的归类数据，每个内存对象应该有它所属的分类Category，如上图所示。对于堆内存对象，它的Category名是“Malloc ”+分配大小，如“Malloc 48.00KiB”；对于虚拟内存对象，调用vm_allocate创建时，最后的参数flags代表它是哪类虚拟内存，而这个flags正对应于上述函数指针__syscall_logger的第一个参数type，每个flag具体含义可以在头文件&amp;lt;mach/vm_statistics.h&amp;gt;找到；对于OC对象，它的Category名是OC类名，我们可以通过hook OC方法+[NSObject alloc]来获取：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222331644-477768206.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;但后来发现，NSData创建对象的类静态方法没有调用+[NSObject alloc]，里面实现是调用C方法NSAllocateObject来创建对象，也就是说这类方式创建的OC对象无法通过hook来获取OC类名。最后在苹果开源代码CF-1153.18找到了答案，当__CFOASafe=true并且__CFObjectAllocSetLastAllocEventNameFunction!=NULL时，CoreFoundation创建对象后通过这个函数指针告诉上层当前对象是什么类型：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222448151-1293977479.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;通过上面方式，我们的监控数据来源基本跟Allocations一样了，当然是借助了私有API。如果没有足够的“技巧”，私有API带不上Appstore，我们只能退而求其次。修改malloc_default_zone函数返回的malloc_zone_t结构体里的malloc、free等函数指针，也是可以监控堆内存分配，效果等同于malloc_logger；而虚拟内存分配只能通过fishhook方式。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.数据存储&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存活对象管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;APP在运行期间会大量申请/释放内存。以上图为例，微信启动10秒内，已经创建了80万对象，释放了50万，性能问题是个挑战。另外在存储过程中，也尽量减少内存申请/释放。所以放弃了sqlite，改用了更轻量级的平衡二叉树来存储。&lt;/p&gt;

&lt;p&gt;伸展树（Splay Tree），也叫分裂树，是一种二叉排序树，不保证树是平衡，但各种操作平均时间复杂度是O(logN)，可近似看作平衡二叉树。相比其他平衡二叉树（如红黑树），其内存占用较小，不需要存储额外信息。伸展树主要出发点是考虑到局部性原理（某个刚被访问的结点下次又被访问，或者访问次数多的结点下次可能被访问），为了使整个查找时间更少，被频繁查询的结点通过“伸展”操作搬移到离树根更近的地方。大部分情况下，内存申请很快又被释放，如autoreleased对象、临时变量等；而OC对象申请内存后紧接着会更新它所属Category。所以用伸展树管理最适合不过了。&lt;/p&gt;

&lt;p&gt;传统二叉树是用链表方式实现，每次添加/删除结点，都会申请/释放内存。为了减少内存操作，可以用数组实现二叉树。具体做法是父结点的左右孩子由以往的指针类型改成整数类型，代表孩子在数组的下标；删除结点时，被删除的结点存放上一个被释放的结点所在数组下标。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222523967-588348549.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;堆栈存储&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;据统计，微信运行期间，backtrace的堆栈有成百万上千万种，在捕获最大栈长64情况下，平均栈长35。如果36bits存储一个地址（armv8最大虚拟内存地址48bits，实际上36bits够用了），一个堆栈平均存储长度157.5bytes，1M个堆栈需要157.5M存储空间。但通过断点观察，实际上大部分堆栈是有共同后缀，例如下面的两个堆栈后7个地址是一样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222546422-1882184809.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;为此，可以用Hash Table来存储这些堆栈。思路是整个堆栈以链表的方式插入到table里，链表结点存放当前地址和上一个地址所在table的索引。每插入一个地址，先计算它的hash值，作为在table的索引，如果索引对应的slot没有存储数据，就记录这个链表结点；如果有存储数据，并且数据跟链表结点一致，hash命中，继续处理下一个地址；数据不一致，意味着hash冲突，需要重新计算hash值，直到满足存储条件。举个例子（简化了hash计算）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222604931-712398093.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;br class=&quot;Apple-interchange-newline&quot;/&gt;
1）Stack1的G、F、E、D、C、A、依次插入到Hash Table，索引1～6结点数据依次是(G, 0)、(F, 1)、(E, 2)、(D, 3)、(C, 4)、(A, 5)。Stack1索引入口是6&lt;/p&gt;

&lt;p&gt;2）轮到插入Stack2，由于G、F、E、D、C结点数据跟Stack1前5结点一致，hash命中；B插入新的7号位置，(B, 5)。Stack2索引入口是7&lt;/p&gt;

&lt;p&gt;3）最后插入Stack3，G、F、E、D结点hash命中；但由于Stack3的A的上一个地址D索引是4，而不是已有的(A, 5)，hash不命中，查找下一个空白位置8，插入结点(A, 4)；B上一个地址A索引是8，而不是已有的(B, 5)，hash不命中，查找下一个空白位置9，插入结点(B, 9)。Stack3索引入口是9&lt;/p&gt;

&lt;p&gt;经过这样的后缀压缩存储，平均栈长由原来的35缩短到5不到。而每个结点存储长度为64bits（36bits存储地址，28bits储存parent索引），hashTable空间利用率60%+，一个堆栈平均存储长度只需要66.7bytes，压缩率高达42%。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;性能数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经过上述优化，内存监控工具在iPhone6Plus运行占用CPU占用率13%不到，当然这是跟数据量有关，重度用户（如群过多、消息频繁等）可能占用率稍微偏高。而存储数据内存占用量20M左右，都用mmap方式把文件映射到内存。有关mmap好处可自行google之。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222645322-45401917.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;3.数据上报&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于内存监控是存储了当前所有存活对象的内存分配信息，数据量极大，所以当出现FOOM时，不可能全量上报，而是按某些规则有选择性的上报。&lt;/p&gt;

&lt;p&gt;首先把所有对象按Category进行归类，统计每个Category的对象数和分配内存大小。这列表数据很少，可以做全量上报。接着对Category下所有相同堆栈做合并，计算每种堆栈的对象数和内存大小。对于某些Category，如分配大小TOP N，或者UI相关的（如UIViewController、UIView之类的），它里面分配大小TOP M的堆栈才做上报。上报格式类似这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222707403-1259371939.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;4.页面展现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;页面展现参考了Allocations，可看出有哪些Category，每个Category分配大小和对象数，某些Category还能看分配堆栈。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222809441-86879587.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;为了突出问题，提高解决问题效率，后台先根据规则找出可能引起FOOM的Category（如上面的Suspect Categories），规则有：&lt;/p&gt;
&lt;p&gt;● UIViewController数量是否异常&lt;/p&gt;
&lt;p&gt;● UIView数量是否异常&lt;/p&gt;
&lt;p&gt;● UIImage数量是否异常&lt;/p&gt;
&lt;p&gt;● 其它Category分配大小是否异常，对象个数是否异常&lt;/p&gt;

&lt;p&gt;接着对可疑的Category计算特征值，也就是OOM原因。特征值是由“Caller1”、“Caller2”和“Category, Reason”组成。Caller1是指申请内存点，Caller2是指具体场景或业务，它们都是从Category下分配大小第一的堆栈提取。Caller1提取尽量是有意义的，并不是分配函数的上一地址。例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222833513-1405286791.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;所有report计算出特征值后，可以对它们进行归类了。一级分类可以是Caller1，也可以是Category，二级分类是与Caller1/Category有关的特征聚合。效果如下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一级分类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222900230-1440128394.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二级分类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301222955553-1164791953.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;5.运营策略&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面提到，内存监控会带来一定的性能损耗，同时上报的数据量每次大概300K左右，全量上报对后台有一定压力，所以对现网用户做抽样开启，灰度包用户/公司内部用户/白名单用户做100%开启。本地最多只保留最近三次数据。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、降低误判&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;先回顾Facebook如何判定上一次启动是否出现FOOM：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301223027067-296813508.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;1.App没有升级&lt;/p&gt;
&lt;p&gt;2.App没有调用exit()或abort()退出&lt;/p&gt;
&lt;p&gt;3.App没有出现crash&lt;/p&gt;
&lt;p&gt;4.用户没有强退App&lt;/p&gt;
&lt;p&gt;5.系统没有升级/重启&lt;/p&gt;
&lt;p&gt;6.App当时没有后台运行&lt;/p&gt;
&lt;p&gt;7.App出现FOOM&lt;/p&gt;

&lt;p&gt;1、2、4、5比较容易判断，3依赖于自身CrashReport组件的crash回调，6、7依赖于ApplicationState和前后台切换通知。&lt;strong&gt;微信自上线FOOM数据上报以来，出现不少误判，主要情况有：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ApplicationState不准&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;部分系统会在后台短暂唤起app，ApplicationState是Active，但又不是BackgroundFetch；执行完didFinishLaunchingWithOptions就退出了，也有收到BecomeActive通知，但很快也退出；整个启动过程持续5～8秒不等。解决方法是收到BecomeActive通知一秒后，才认为这次启动是正常的前台启动。这方法只能减少误判概率，并不能彻底解决。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;群控类外挂&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这类外挂是可以远程控制iPhone的软件，通常一台电脑可以控制多台手机，电脑画面和手机屏幕实时同步操作，如开启微信，自动加好友，发朋友圈，强制退出微信，这一过程容易产生误判。解决方法只能通过安全后台打击才能减少这类误判。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CrashReport组件出现crash没有回调上层&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信曾经在17年5月底爆发大量GIF crash，该crash由内存越界引起，但收到crash信号写crashlog时，由于内存池损坏，组件无法正常写crashlog，甚至引起二次crash；上层也无法收到crash通知，因此误判为FOOM。目前改成不依赖crash回调，只要本地存在上一次crashlog（不管是否完整），就认为是crash引起的APP重启。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前台卡死引起系统watchdog强杀&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也就是常见的0x8badf00d，通常原因是前台线程过多，死锁，或CPU使用率持续过高等，这类强杀无法被App捕获。为此我们结合了已有卡顿系统，当前台运行最后一刻有捕获到卡顿，我们认为这次启动是被watchdog强杀。同时我们从FOOM划分出新的重启原因叫“APP前台卡死导致重启”，列入重点关注。&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、成果&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;微信自2017年三月上线内存监控以来，解决了30多处大大小小内存问题，涉及到聊天、搜索、朋友圈等多个业务，FOOM率由17年年初3%，降到目前0.67%，而前台卡死率由0.6%下降到0.3%，效果特别明显。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301223124530-1798119749.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301223134216-1777413940.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;四&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常见问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UIGraphicsEndImageContext&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;UIGraphicsBeginImageContext和UIGraphicsEndImageContext必须成双出现，不然会造成context泄漏。另外XCode的Analyze也能扫出这类问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UIWebView&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无论是打开网页，还是执行一段简单的js代码，UIWebView都会占用APP大量内存。而WKWebView不仅有出色的渲染性能，而且它有自己独立进程，一些网页相关的内存消耗移到自身进程里，最适合取替UIWebView。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;autoreleasepool&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通常autoreleased对象是在runloop结束时才释放。如果在循环里产生大量autoreleased对象，内存峰值会猛涨，甚至出现OOM。适当的添加autoreleasepool能及时释放内存，降低峰值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;互相引用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较容易出现互相引用的地方是block里使用了self，而self又持有这个block，只能通过代码规范来避免。另外NSTimer的target、CAAnimation的delegate，是对Obj强引用。目前微信通过自己实现的MMNoRetainTimer和MMDelegateCenter来规避这类问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大图片处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;举个例子，以往图片缩放接口是这样写的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301223204478-592158994.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;但处理大分辨率图片时，往往容易出现OOM，原因是-[UIImage drawInRect:]在绘制时，先解码图片，再生成原始分辨率大小的bitmap，这是很耗内存的。解决方法是使用更低层的ImageIO接口，避免中间bitmap产生：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/992994/201803/992994-20180301223231449-1974339041.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;大视图&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;大视图是指View的size过大，自身包含要渲染的内容。超长文本是微信里常见的炸群消息，通常几千甚至几万行。如果把它绘制到同一个View里，那将会消耗大量内存，同时造成严重卡顿。最好做法是把文本划分成多个View绘制，利用TableView的复用机制，减少不必要的渲染和内存占用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;推荐文章&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最后推荐几个iOS内存相关的链接：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;● Memory Usage Performance Guidelines&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;https://developer.apple.com/library/content/documentation/Performance/Conceptual/ManagingMemory/ManagingMemory.html#//apple_ref/doc/uid/10000160-SW1&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;● No pressure, Mon!&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;http://www.newosxbook.com/articles/MemoryPressure.html&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;腾讯WeTest iOS预审工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了提高IEG苹果审核通过率，腾讯专门成立了苹果审核测试团队，打造出iOS预审工具这款产品。经过1年半的内部运营，腾讯内部应用的iOS审核通过率从平均35%提升到90%+。&lt;/p&gt;

&lt;p&gt;现将腾讯内部产品的过审经验，以线上工具的形式共享给各位。在WeTest腾讯质量开放平台上可以在线使用。&lt;strong&gt;&lt;span&gt;点击&lt;/span&gt; &lt;a href=&quot;http://wetest.qq.com/product/ios?from=content_cnblogs&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;http://wetest.qq.com/product/ios&lt;/span&gt;&lt;/a&gt; &lt;span&gt;即可立即体验！&lt;/span&gt;&lt;/strong&gt;如果使用当中有任何疑问，欢迎联系腾讯WeTest企业QQ：800024531&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iOS预审服务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;【扫描工具】&lt;/strong&gt;上传IPA包、图片、视频、应用描述即可进行测试； 多维度自动扫描提审材料的被拒风险；1小时内反馈全面的扫描报告。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;【专家预审】&lt;/strong&gt;腾讯专家为您遍历App所有功能模块；全面暴露App内容被拒风险；跟进问题直至上线（需提供官方拒绝邮件）。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;【专家咨询】&lt;/strong&gt;资深预审专家一对一服务； 咨询时间灵活可选，按需购买；有的放矢解 决审核问题。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;【ASO优化】&lt;/strong&gt;专业团队多维度深度剖析App的ASO现状；围绕App目标用户群筛选高 度关联的关键词；帮助提升App在苹果应用商店中的曝光率。&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 14:36:00 +0000</pubDate>
<dc:creator>腾讯WeTest</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wetest/p/8490905.html</dc:identifier>
</item>
<item>
<title>记一次内存溢出的分析经历——thrift带给我的痛orz - Janti</title>
<link>http://www.cnblogs.com/superfj/p/8474288.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/superfj/p/8474288.html</guid>
<description>&lt;h2&gt;说在前面的话&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;朋友，你经历过部署好的服务突然内存溢出吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你经历过没有看过Java虚拟机，来解决内存溢出的痛苦吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你经历过一个BUG，百思不得其解，头发一根一根脱落的烦恼吗？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我知道，你有过！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是我还是要来说说我的故事..................&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;背景：&lt;/h2&gt;
&lt;p&gt;有一个项目做一个系统，分客户端和服务端，客户端用c++写的，用来收集信息然后传给服务端（客户端的数量还是比较多的，正常的有几千个），&lt;/p&gt;
&lt;p&gt;服务端用Java写的（带管理页面），属于RPC模式，中间的通信框架使用的是thrift。&lt;/p&gt;
&lt;p&gt;thrift很多优点就不多说了，它是facebook的开源的rpc框架，主要是它能够跨语言，序列化速度快，但是他有个不讨喜的地方就是它必须用自己IDL来定义接口&lt;/p&gt;
&lt;p&gt;thrift版本：0.9.2.&lt;/p&gt;
&lt;h2&gt;问题定位与分析&lt;/h2&gt;
&lt;h3&gt;步骤一.初步分析&lt;/h3&gt;
&lt;p&gt;客户端无法连接服务端，查看服务器的端口开启状况，服务端口并没有开启。于是启动服务端，启动几秒后，服务端崩溃，重复启动，服务端依旧在启动几秒后崩溃。&lt;/p&gt;
&lt;h3&gt;步骤二.查看服务端日志分析&lt;/h3&gt;
&lt;p&gt;分析得知是因为java.lang.OutOfMemoryError: Java heap space（堆内存溢出）导致的服务崩溃。&lt;/p&gt;
&lt;p&gt;客户端搜集的主机信息，主机策略都是放在缓存中，可能是因为缓存较大造成的，但是通过日志可以看出是因为Thrift服务抛出的堆内存溢出异常与缓存大小无关。&lt;/p&gt;
&lt;h3&gt;步骤三.再次分析服务端日志&lt;/h3&gt;
&lt;p&gt;可以发现每次抛出异常的时候都会伴随着几十个客户端在向服务端发送日志，往往在发送几十条日志之后，服务崩溃。可以假设是不是堆内存设置的太小了？&lt;/p&gt;
&lt;p&gt;查看启动参数配置，最大堆内存为256MB。修改启动配置，启动的时候分配更多的堆内存，改成java -server -Xms512m -Xmx768m。&lt;/p&gt;
&lt;p&gt;结果是，能坚持多一点的时间，依旧会内存溢出服务崩溃。得出结论，一味的扩大内存是没有用的。&lt;/p&gt;&lt;p&gt;**为了证明结论是正确的，做了这样的实验：**&lt;br/&gt;&amp;gt; 内存设置为256MB，在公司服务器上部署了服务端，使用Java VisualVM远程监控服务器堆内存。&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; 模拟客户现场，注册3000个客户端，使用300个线程同时发送日志。&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; 结果和想象的一样，没有出现内存溢出的情况，如下图：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1167080/201802/1167080-20180226172359885-534234385.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;br/&gt;&amp;gt; 上图是Java VisualVM远程监控，在压力测试的情况下，没有出现内存溢出的情况，256MB的内存肯定够用的。&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤四.回到thrift源码中，查找关键问题&lt;/h3&gt;
&lt;p&gt;服务端采用的是Thrift框架中TThreadedSelectorServer这个类，这是一个NIO的服务。下图是thrift处理请求的模型：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1167080/201802/1167080-20180226172513168-1647790480.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;**说明：**&lt;br/&gt;&amp;gt;一个AcceptThread执行accept客户端请求操作，将accept到的Transport交给SelectorThread线程，&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;AcceptThread中有个balance均衡器分配到SelectorThread；SelectorThread执行read，write操作，&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;read到一个FrameBuffer（封装了方法名，参数，参数类型等数据，和读取写入，调用方法的操作）交给WorkerProcess线程池执行方法调用。&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;**内存溢出就是在read一个FrameBuffer产生的。**&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤五.细致一点描述thrift处理过程&lt;/h3&gt;
&lt;p&gt;&lt;br/&gt;&amp;gt;1.服务端服务启动后，会listen()一直监听客户端的请求，当收到请求accept()后，交给线程池去处理这个请求&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;2.处理的方式是：首先获取客户端的编码协议getProtocol（），然后根据协议选取指定的工具进行反序列化，接着交给业务类处理process（）&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;3.process的顺序是，**先申请临时缓存读取这个请求数据**，处理请求数据，执行业务代码，写响应数据,**最后清除临时缓存**&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; **总结：thrift服务端处理请求的时候，会先反序列化数据，接着申请临时缓存读取请求数据，然后执行业务并返回响应数据，最后请求临时缓存。**&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; 所以压力测试的时候，thrift性能很高，而且内存占用不高，是因为它有自负载调节，使用NIO模式缓存，并使用线程池处理业务，每次处理完请求之后及时清除缓存。&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤六.研读FrameBuffer的read方法代码&lt;/h3&gt;
&lt;p&gt;可以排除掉没有及时清除缓存的可能，方向明确，极大的可能是在申请NIO缓存的时候出现了问题，回到thrift框架，查看FrameBuffer的read方法代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;43.5&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot; readability=&quot;8&quot;&gt;
public boolean read() {&lt;p&gt;　　　　　　　　&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;
            if (this.state_ == AbstractNonblockingServer.FrameBufferState.READING_FRAME_SIZE) {
                if (!this.internalRead()) {
                    return false;
                }&lt;br/&gt;　　　　　　　　 
                if (this.buffer_.remaining() != 0) {
                    return true;
                }

                int frameSize = this.buffer_.getInt(0);
                if (frameSize &amp;lt;= 0) {
                    this.LOGGER.error(&quot;Read an invalid frame size of &quot; + frameSize + &quot;. Are you using TFramedTransport on the client side?&quot;);
                    return false;
                }
　　　　　　　　　　&lt;span&gt;//&lt;/span&gt;
&lt;/p&gt;&lt;/pre&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
                if ((long)frameSize &amp;gt; AbstractNonblockingServer.this.MAX_READ_BUFFER_BYTES) {
                    this.LOGGER.error(&quot;Read a frame size of &quot; + frameSize + &quot;, which is bigger than the maximum allowable buffer size for ALL connections.&quot;);
                    return false;
                }

                if (AbstractNonblockingServer.this.readBufferBytesAllocated.get() + (long)frameSize &amp;gt; AbstractNonblockingServer.this.MAX_READ_BUFFER_BYTES) {
                    return true;
                }

                AbstractNonblockingServer.this.readBufferBytesAllocated.addAndGet((long)(frameSize + 4));
                this.buffer_ = ByteBuffer.allocate(frameSize + 4);
                this.buffer_.putInt(frameSize);
                this.state_ = AbstractNonblockingServer.FrameBufferState.READING_FRAME;
            }

            if (this.state_ == AbstractNonblockingServer.FrameBufferState.READING_FRAME) {
                if (!this.internalRead()) {
                    return false;
                } else {
                    if (this.buffer_.remaining() == 0) {
                        this.selectionKey_.interestOps(0);
                        this.state_ = AbstractNonblockingServer.FrameBufferState.READ_FRAME_COMPLETE;
                    }

                    return true;
                }
            } else {
                this.LOGGER.error(&quot;Read was called but state is invalid (&quot; + this.state_ + &quot;)&quot;);
                return false;
            }
        }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;**说明：**&lt;br/&gt;&amp;gt;MAX_READ_BUFFER_BYTES这个值即为对读取的包的长度限制，如果超过长度限制，就不会再读了/&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt;这个MAX_READ_BUFFER_BYTES是多少呢，thrift代码中给出了答案：&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;brush:java;gutter:true;&quot;&gt;
    public abstract static class AbstractNonblockingServerArgs&amp;lt;T extends AbstractNonblockingServer.AbstractNonblockingServerArgs&amp;lt;T&amp;gt;&amp;gt; extends AbstractServerArgs&amp;lt;T&amp;gt; {&lt;br/&gt;　　　　　
        public long maxReadBufferBytes = 9223372036854775807L;

        public AbstractNonblockingServerArgs(TNonblockingServerTransport transport) {
            super(transport);
            this.transportFactory(new Factory());
        }
    }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;br/&gt;&amp;gt;从上面源码可以看出，默认值居然给到了long的最大值9223372036854775807L。&lt;/p&gt;
&lt;p&gt;所以thrift的开发者是觉得使用thrift程序员不够觉得内存不够用吗，这个换算下来就是1045576TB，这个太夸张了，这等于没有限制啊，所以肯定不能用默认值的。&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤七.通信数据抓包分析&lt;/h3&gt;
&lt;p&gt;需要可靠的证据证明一个客户端通信的数据包的大小。&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1167080/201802/1167080-20180226172938491-910394075.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个是我抓到包最大的长度，最大一个包长度只有215B，所以需要限制一下读取大小&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤八：踏破铁鞋无觅处&lt;/h3&gt;
&lt;p&gt;在论坛中，看到有人用http请求thrift服务端出现了内存溢出的情况，所以我抱着试试看的心态，在浏览器中发起了http请求，&lt;/p&gt;
&lt;p&gt;果不其然，出现了内存溢出的错误，和客户现场出现的问题一摸一样。这个读取内存的时候数量过大，超过了256MB。&lt;br/&gt;&amp;gt; 很明显的一个问题，正常的一个HTTP请求不会有256MB的，考虑到thrift在处理请求的时候有反序列化这个操作。&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; 可以做出假设是不是反序列化的问题，不是thrift IDL定义的不能正常的反序列化？&lt;br/&gt;&amp;gt;&lt;br/&gt;&amp;gt; 验证这个假设，我用Java socket写了一个tcp客户端，向thrift服务端发送请求，果不其然！java.lang.OutOfMemoryError: Java heap space。&lt;br/&gt;&amp;gt; 这个假设是正确的,客户端请求数据不是用thrift IDL定义的话，无法正常序列化，序列化出来的数据会异常的大！大到超过1个G的都有。&lt;/p&gt;
&lt;h3&gt;&lt;br/&gt;步骤九. 找到原因&lt;/h3&gt;
&lt;p&gt;某些客户端没有正常的序列化消息，导致服务端在处理请求的时候，序列化出来的数据特别大，读取该数据的时候出现的内存溢出。&lt;/p&gt;
&lt;p&gt;查看维护记录，在别的客户那里也出现过内存溢出导致服务端崩溃的情况，通过重新安装客户端，就不再复现了。&lt;/p&gt;
&lt;p&gt;所以可以确定，客户端存在着无法正常序列化消息的情况。考虑到，客户端量比较大，一个一个排除，再重新安装比较困难，工作量很大，所以可以从服务端的角度来解决问题，减少维护工作量。&lt;/p&gt;
&lt;p&gt;最后可以确定解决方案了，真的是废了很大的劲，不过也是颇有收获&lt;/p&gt;
&lt;h2&gt;&lt;br/&gt;问题解决方案&lt;/h2&gt;
&lt;p&gt;非常简单&lt;/p&gt;
&lt;p&gt;在构造TThreadedSelectorServer的时候，增加args.maxReadBufferBytes = 1*1024 * 1024L;也就是说修改maxReadBufferBytes的大小，设置为1MB。&lt;/p&gt;
&lt;p&gt;客户端与服务端通过thrift通信的数据包，最大十几K，所以设置最大1MB，是足够的。代码部分修改完成，版本不做改变**&lt;br/&gt;修改完毕后，这次进行了异常流测试，发送了http请求，使服务端无法正常序列化。&lt;/p&gt;&lt;p&gt;服务端处理结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1167080/201802/1167080-20180226173004237-1507645318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;thrift会抛出错误日志，并直接没有读这个消息，返回false,不处理这样的请求，将其视为错误请求。&lt;/p&gt;&lt;p&gt;3.国外有人对thrift一些server做了压力测试，如下图所示：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1167080/201803/1167080-20180301212825802-2067352894.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;使用thrift中的TThreadedSelectorServer吞吐量达到18000以上&lt;br/&gt;由于高性能，申请内存和清除内存的操作都是非常快的，平均3ms就处理了一个请求。&lt;br/&gt;所以是推荐使用TThreadedSelectorServer&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;4.修改启动脚本，增大堆内存，分配单独的直接内存。&lt;/p&gt;
&lt;p&gt;修改为java -server -Xms512m -Xmx768m -XX:MaxPermSize=256m -XX:NewSize=256m -XX:MaxNewSize=512m -XX:MaxDirectMemorySize=128M。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;设置持久代最大值 MaxPermSize:256m&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;设置年轻代大小 NewSize:256m&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;年轻代最大值 MaxNewSize:512M&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;最大堆外内存（直接内存）MaxDirectMemorySize：128M&lt;/p&gt;&lt;p&gt;5.综合论坛中，StackOverflow一些同僚的意见，在使用TThreadedSelectorServer时，将读取内存限制设置为1MB，最为合适，正常流和异常流的情况下不会有内存溢出的风险。&lt;/p&gt;&lt;p&gt; 之前启动脚本给服务端分配的堆内存过小，考虑到是NIO，所以在启动服务端的时候，有必要单独分配一个直接内存供NIO使用.修改启动参数。&lt;/p&gt;
&lt;p&gt;增加堆内存大小直接内存，防止因为服务端缓存太大，导致thrift服务没有内存可申请，无法处理请求。&lt;/p&gt;
&lt;h2&gt;&lt;br/&gt;总结：&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;真的是一次非常酸爽的过程，特此发个博客记录一下，如果有说的不对的对方，欢迎批评斧正！如果觉得写的不错，欢迎给我点个推荐，您的一个推荐是我莫大的动力！&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 13:55:00 +0000</pubDate>
<dc:creator>Janti</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/superfj/p/8474288.html</dc:identifier>
</item>
<item>
<title>CSS布局(六) 对齐方式 - 柴小智</title>
<link>http://www.cnblogs.com/chaixiaozhi/p/8490725.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chaixiaozhi/p/8490725.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、水平居中：&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;&lt;strong&gt;(1). &lt;/strong&gt;&lt;strong&gt;行内元素的水平居中？&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;如果被设置元素为文本、图片等&lt;strong&gt;行内元素时，&lt;/strong&gt;&lt;span class=&quot;Apple-tab-span&quot;&gt;在父元素中设置text-align:center实现&lt;span class=&quot;Apple-tab-span&quot;&gt;行内元素水平居中&lt;/span&gt;，&lt;/span&gt;将子元素的display设置为&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5202761.html#anchor3&quot; target=&quot;_blank&quot;&gt;inline-block&lt;/a&gt;，使子元素变成行内元素&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301204710541-1654965690.png&quot; alt=&quot;&quot; width=&quot;989&quot; height=&quot;22&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;parent&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: gray;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;child&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightblue;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;DEMO&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;style&amp;gt;
.parent&lt;/span&gt;{&lt;span&gt;text-align&lt;/span&gt;:&lt;span&gt; center&lt;/span&gt;;}&lt;span&gt;    
.child&lt;/span&gt;{&lt;span&gt;display&lt;/span&gt;:&lt;span&gt; inline-block&lt;/span&gt;;}&lt;span&gt;
&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;(2）块状元素的水平居中（定宽）&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;当被设置元素为&lt;strong&gt;定宽块级元素&lt;/strong&gt;时用 text-align：center 就不起作用了。可以通过设置“左右margin”值为“auto”来实现居中的。&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301204710541-1654965690.png&quot; alt=&quot;&quot; width=&quot;989&quot; height=&quot;22&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;parent&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: gray;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;child&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightblue;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;DEMO&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;        .child&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt; 200px&lt;/span&gt;;&lt;span&gt;
            margin&lt;/span&gt;:&lt;span&gt; 0 auto&lt;/span&gt;;
        }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;(3)&lt;/strong&gt;块状元素的水平居中（不定定宽）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;在实际工作中我们会遇到需要为“不定宽度的块级元素”设置居中，比如网页上的分页导航，因为分页的数量是不确定的，所以我们不能通过设置宽度来限制它的弹性。&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;可以直接给不定宽的块级元素设置text-align：center来实现，也可以给父元素加text-align:center 来实现居中效果。&lt;/p&gt;
&lt;p&gt;当不定宽块级元素的宽度不要占一行时，可以设置display 为 inline 类型或inline-block（设置为 &lt;a title=&quot;忘了的小伙伴，让我们点击链接复习一下吧! &quot; href=&quot;http://www.imooc.com/code/2049&quot;&gt;行内元素&lt;/a&gt; 显示或行内块元素）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301210729454-1374240315.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;3&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;.container&lt;/span&gt;{&lt;span&gt;text-align&lt;/span&gt;:&lt;span&gt;center&lt;/span&gt;;&lt;span&gt;background&lt;/span&gt;:&lt;span&gt; beige&lt;/span&gt;}&lt;span&gt;
.container ul&lt;/span&gt;{&lt;span&gt;list-style&lt;/span&gt;:&lt;span&gt;none&lt;/span&gt;;&lt;span&gt;margin&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;;&lt;span&gt;padding&lt;/span&gt;:&lt;span&gt;0&lt;/span&gt;;&lt;span&gt;display&lt;/span&gt;:&lt;span&gt;inline-block&lt;/span&gt;;}&lt;span&gt;
.container li&lt;/span&gt;{&lt;span&gt;margin-right&lt;/span&gt;:&lt;span&gt;8px&lt;/span&gt;;&lt;span&gt;display&lt;/span&gt;:&lt;span&gt;inline-block&lt;/span&gt;;}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;二、垂直居中：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;和水平居中一样，这里要讲垂直居中，首先设定两个条件即&lt;/strong&gt;父元素是盒子容器且&lt;span&gt;&lt;strong&gt;高度已经设定&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景1：子元素是行内元素，高度是由其内容撑开的&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;这种情况下，需要通过设定父元素的line-height为其高度来使得子元素垂直居中&lt;/p&gt;
&lt;p class=&quot;p&quot;&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301212628846-1718190874.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap line-height&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;span&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;111111&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt; .wrap&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt;200px &lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            line-height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt; 2px solid #ccc&lt;/span&gt;;
        }&lt;span&gt;
.span&lt;/span&gt;{&lt;span&gt;
            background&lt;/span&gt;:&lt;span&gt; red&lt;/span&gt;;
        }
       
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;场景2：&lt;strong&gt;&lt;span&gt;子元素是块级元素但是子元素高度没有设定，&lt;/span&gt;&lt;/strong&gt;在这种情况下实际上是不知道子元素的高度的，无法通过计算得到padding或margin来调整，但是还是存在一些解法。&lt;/p&gt;
&lt;p&gt;通过给父元素设定display:table-cell;vertical-align:middle来解决&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;non-height &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;11111&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;.wrap&lt;/span&gt;{&lt;span&gt;
       width&lt;/span&gt;:&lt;span&gt;200px &lt;/span&gt;;&lt;span&gt;
       height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
       border&lt;/span&gt;:&lt;span&gt; 2px solid #ccc&lt;/span&gt;;&lt;span&gt;
　　　　display&lt;/span&gt;:&lt;span&gt; table-cell&lt;/span&gt;;&lt;span&gt;
　　　　vertical-align&lt;/span&gt;:&lt;span&gt; middle&lt;/span&gt;;
}&lt;span&gt;
 .non-height&lt;/span&gt;{&lt;span&gt;
       background&lt;/span&gt;:&lt;span&gt; green&lt;/span&gt;;
        }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images0.cnblogs.com/blog2015/475683/201504/052009329913003.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景3：子元素是块级元素且高度已经设定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算子元素的margin-top或margin-bottom，计算方法为父(元素高度-子元素高度)/2&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;wrap &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;div1&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;111111&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  .wrap&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt;200px &lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 300px&lt;/span&gt;;&lt;span&gt;
            border&lt;/span&gt;:&lt;span&gt; 2px solid #ccc&lt;/span&gt;;
        }&lt;span&gt;
.div1&lt;/span&gt;{&lt;span&gt;
            width&lt;/span&gt;:&lt;span&gt;100px &lt;/span&gt;;&lt;span&gt;
            height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            margin-top&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
            background&lt;/span&gt;:&lt;span&gt; darkblue&lt;/span&gt;;
        }    
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images0.cnblogs.com/blog2015/475683/201504/042114443108522.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、水平垂直居中：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1水平对齐+行高&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;Apple-tab-span&quot;&gt;text-align + line-height实现单行文本水平垂直居中&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;style&amp;gt;
.test&lt;/span&gt;{&lt;span&gt;
    text-align&lt;/span&gt;:&lt;span&gt; center&lt;/span&gt;;&lt;span&gt;
    line-height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;
}&lt;span&gt;
&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;test&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightblue;width: 200px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;测试文字&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301214013762-35545258.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2水平+垂直对齐&lt;/strong&gt;&lt;/p&gt;
&lt;p id=&quot;anchor2&quot;&gt;1. text-align + vertical-align　　在父元素设置&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5325063.html#anchor2&quot; target=&quot;_blank&quot;&gt;text-align&lt;/a&gt;和&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5271217.html#anchor2&quot; target=&quot;_blank&quot;&gt;vertical-align&lt;/a&gt;，并将父元素设置为&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5202761.html#anchor9&quot; target=&quot;_blank&quot;&gt;table-cell&lt;/a&gt;元素，子元素设置为&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5202761.html#anchor3&quot; target=&quot;_blank&quot;&gt;inline-block&lt;/a&gt;元素&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;style&amp;gt;
.parent&lt;/span&gt;{&lt;span&gt;
    display&lt;/span&gt;:&lt;span&gt; table-cell&lt;/span&gt;;&lt;span&gt;
    text-align&lt;/span&gt;:&lt;span&gt; center&lt;/span&gt;;&lt;span&gt;
    vertical-align&lt;/span&gt;:&lt;span&gt; middle&lt;/span&gt;;
}&lt;span&gt;
.child&lt;/span&gt;{&lt;span&gt;
    display&lt;/span&gt;:&lt;span&gt; inline-block&lt;/span&gt;;
}&lt;span&gt;
&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;parent&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: gray; width:200px; height:100px;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;child&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightblue;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;测试文字&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301214238241-362244515.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.若子元素是&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5008341.html&quot; target=&quot;_blank&quot;&gt;图像&lt;/a&gt;，可不使用table-cell，而是其父元素用&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5271217.html#anchor1&quot; target=&quot;_blank&quot;&gt;行高&lt;/a&gt;替代高度，且&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/4986285.html#anchor3&quot; target=&quot;_blank&quot;&gt;字体大小&lt;/a&gt;设为0。子元素本身设置vertical-align:middle&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;parent&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: gray; width:200px; &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;img &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;child&quot;&lt;/span&gt;&lt;span&gt; src&lt;/span&gt;&lt;span&gt;=&quot;http://sandbox.runjs.cn/uploads/rs/26/ddzmgynp/img1.gif&quot;&lt;/span&gt;&lt;span&gt; width&lt;/span&gt;&lt;span&gt;=&quot;50%&quot;&lt;/span&gt;&lt;span&gt; alt&lt;/span&gt;&lt;span&gt;=&quot;test&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;style&amp;gt;
.parent&lt;/span&gt;{&lt;span&gt;
    text-align&lt;/span&gt;:&lt;span&gt; center&lt;/span&gt;;&lt;span&gt;
    line-height&lt;/span&gt;:&lt;span&gt; 100px&lt;/span&gt;;&lt;span&gt;
    font-size&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;
}&lt;span&gt;
.child&lt;/span&gt;{&lt;span&gt;
    vertical-align&lt;/span&gt;:&lt;span&gt; middle&lt;/span&gt;;
}&lt;span&gt;
&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301214506851-532651430.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;anchor4&quot;&gt;3.3相对+绝对定位&lt;/h3&gt;
&lt;p&gt;使用absolute，利用&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5312917.html&quot; target=&quot;_blank&quot;&gt;绝对定位&lt;/a&gt;元素的&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5289143.html#anchor5&quot; target=&quot;_blank&quot;&gt;盒模型特性&lt;/a&gt;，在&lt;a href=&quot;http://www.cnblogs.com/xiaohuochai/p/5289143.html#anchor3&quot; target=&quot;_blank&quot;&gt;偏移属性&lt;/a&gt;为确定值的基础上，设置margin:auto&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;style&amp;gt;
.parent&lt;/span&gt;{&lt;span&gt;
    position&lt;/span&gt;:&lt;span&gt; relative&lt;/span&gt;;
}&lt;span&gt;
.child&lt;/span&gt;{&lt;span&gt;
    position&lt;/span&gt;:&lt;span&gt; absolute&lt;/span&gt;;&lt;span&gt;
    top&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
    left&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
    right&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
    bottom&lt;/span&gt;:&lt;span&gt; 0&lt;/span&gt;;&lt;span&gt;
    height&lt;/span&gt;:&lt;span&gt; 50px&lt;/span&gt;;&lt;span&gt;
    width&lt;/span&gt;:&lt;span&gt; 80px&lt;/span&gt;;&lt;span&gt;
    margin&lt;/span&gt;:&lt;span&gt; auto&lt;/span&gt;;
}&lt;span&gt;
&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;parent&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightgray; width:200px; height:100px; &quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;child&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;background-color: lightblue;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;测试文字&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1047894/201803/1047894-20180301214935620-887121937.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 13:51:00 +0000</pubDate>
<dc:creator>柴小智</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chaixiaozhi/p/8490725.html</dc:identifier>
</item>
<item>
<title>用VSCode开发一个基于asp.net core 2.0/sql server linux(docker)/ng5/bs4的项目(2) - solenovex</title>
<link>http://www.cnblogs.com/cgzl/p/8481825.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/cgzl/p/8481825.html</guid>
<description>&lt;p&gt;第一部分: &lt;a href=&quot;http://www.cnblogs.com/cgzl/p/8478993.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/cgzl/p/8478993.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;为Domain Model添加约束&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;前一部分, 我们已经把数据库创建出来了. 那么我们先看看这个数据库.&lt;/p&gt;
&lt;p&gt;可以在项目里面建立一个database.sql, 并且建立一个数据库连接的profile(参考上一篇文章), 连接成功后执行下面语句:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SELECT&lt;/span&gt; TABLE_NAME &lt;span&gt;FROM&lt;/span&gt; tvdb.INFORMATION_SCHEMA.TABLES &lt;span&gt;WHERE&lt;/span&gt; TABLE_TYPE &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;BASE TABLE&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228084422625-615313445.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;右侧结果可以看到建立的table, 其中一个是迁移表, 另外两个是Domain Model所对应的业务表.&lt;/p&gt;
&lt;p&gt;使用下面的sql语句查询表的字段定义:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;select&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; information_schema.columns &lt;span&gt;where&lt;/span&gt; table_name &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;TvNetworks&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;select&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; information_schema.columns &lt;span&gt;where&lt;/span&gt; table_name &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;TvShows&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228085040845-1194197658.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从结果的CHARACTER_MAXIMUM_LENGTH字段可以看出, 目前name字段的类型都是nvarchar(max):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228085245099-864707631.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这可能不是我们想要的, 所以就需要为Domain Model的相应属性添加一些约束.&lt;/p&gt;
&lt;p&gt;打开TvNetwork和TvShow, 为name属性添加约束:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.ObjectModel;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.ComponentModel.DataAnnotations;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Models
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvNetwork
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TvNetwork()
        {
            TvShows &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Collection&amp;lt;TvShow&amp;gt;&lt;span&gt;();
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;span&gt;[Required]
        [StringLength(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;50)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;TvShow&amp;gt; TvShows { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.ObjectModel;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.ComponentModel.DataAnnotations;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Models
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvNetwork
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TvNetwork()
        {
            TvShows &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Collection&amp;lt;TvShow&amp;gt;&lt;span&gt;();
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;span&gt;[Required]
        [StringLength(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;50)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;TvShow&amp;gt; TvShows { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;EF Core其他的约束属性请参考文档, 这里就不介绍了.&lt;/p&gt;
&lt;p&gt;这种对Domain Model进行约束的方法使用的是DataAnnotation, 而我个人更喜欢使用FluetApi, 不过在这篇文章里这个不是重点.&lt;/p&gt;
&lt;p&gt;然后添加migrations:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
dotnet ef migrations add AddConstraints
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;看一下生成的migration文件:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228090153926-1082202919.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;没问题, 可以执行dotnet ef database update了. 执行成功后, 可以看到表的字段约束已经添加成功了:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228090346773-66675051.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;为数据库添加种子数据&lt;/span&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;添加种子数据的方法有很多, 可以写一个方法然后在Startup里面调用. 这里我使用添加migration的方式:&lt;/p&gt;
&lt;p&gt;命令行添加一个空的migration:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
dotnet ef migrations add SeedData
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;打开这个migration文件, 添加如下代码:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.EntityFrameworkCore.Migrations;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Migrations
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;partial&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; SeeData : Migration
    {
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvNetworks (Name) VALUES ('Netflix')&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvNetworks (Name) VALUES ('HBO')&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvNetworks (Name) VALUES ('CBS')&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvNetworks (Name) VALUES ('NBC')&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('House of Cards', (SELECT Id FROM TvNetworks WHERE Name='Netflix'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Altered Carbon', (SELECT Id FROM TvNetworks WHERE Name='Netflix'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Marvel''s Daredevil', (SELECT Id FROM TvNetworks WHERE Name='Netflix'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Game of Thrones', (SELECT Id FROM TvNetworks WHERE Name='HBO'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Silicon Valley', (SELECT Id FROM TvNetworks WHERE Name='HBO'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Veep', (SELECT Id FROM TvNetworks WHERE Name='HBO'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('NCIS', (SELECT Id FROM TvNetworks WHERE Name='CBS'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('The Big Bang Theory', (SELECT Id FROM TvNetworks WHERE Name='CBS'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Criminal Minds', (SELECT Id FROM TvNetworks WHERE Name='CBS'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);

            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Friends', (SELECT Id FROM TvNetworks WHERE Name='NBC'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Chicago Fire', (SELECT Id FROM TvNetworks WHERE Name='NBC'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;INSERT INTO TvShows (Name, TvNetworkId) VALUES ('Will &amp;amp; Grace', (SELECT Id FROM TvNetworks WHERE Name='NBC'))&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }

        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DELETE FROM TvNetworks WHERE Name IN ('Netflix', 'HBO', 'CBS', 'NBC')&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后执行 dotnet ef database update. 成功后可以查看到数据:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228092446968-69262120.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在Controllers文件夹下建立TvController.cs. &lt;/p&gt;
&lt;p&gt;需要注入TvContext, 这时候聚焦到context变量上使用cmd+. 这个快捷键 生成一个field:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228093903550-154356612.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;随后, 就会生成一个field:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228094013704-1110548564.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; 完成后到代码如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.EntityFrameworkCore;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.Database;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.Models;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Controllers
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvController : Controller
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; TvContext context;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TvController(TvContext context)
        {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.context =&lt;span&gt; context;
        }

        [HttpGet(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/api/tvnetworks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IEnumerable&amp;lt;TvNetwork&amp;gt;&amp;gt;&lt;span&gt; GetTvNetworks()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;await&lt;/span&gt; context.TvNetworks.Include(x =&amp;gt;&lt;span&gt; x.TvShows).ToListAsync();
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这部分代码所涉及到的asp.net core的知识请参考我写的这个系列文章: &lt;a href=&quot;http://www.cnblogs.com/cgzl/p/7637250.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/cgzl/p/7637250.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;运行项目: dotnet watch run, 这时我们需要使用postman来测试这个api.&lt;/p&gt;
&lt;p&gt;以前postman是chrome浏览器的一个扩展应用, 由于被墙, 可能会安装不上, 而现在postman是一个独立的应用了, 应该都能下载安装了: &lt;a href=&quot;https://www.getpostman.com/&quot; target=&quot;_blank&quot;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于以前讲过postman, 所以这里我就不用postman了. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Rest Client&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我使用vscode扩展rest client来测试api. rest client简介部分可以参考这个文章: &lt;a href=&quot;http://www.cnblogs.com/cgzl/p/8450409.html&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/cgzl/p/8450409.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;建立一个httptest文件, 打开文件, 使用命令面板 输入查找这个命令:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228095358470-1395170822.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后选择http:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228095447701-663871567.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在文件中写下api的uri:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;localhost:5000/api/tvnetworks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后你会发现, 该uri的上方有一个send request 按钮:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228095635355-165308193.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击这个按钮, 发送请求.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228095742948-1795963807.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;尽管请求返回结果是200, 但是你也可以发现结果并不正确, 看一下终端命令行:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228095847772-803254259.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;确实是发生了异常, 因为一个Tvnetwork有个导航属性是多个TvShow, 而一个TvShow还有一个反向导航属性是TvNetwork, 所以dbcontext查询出来在进行json转化的时候, 会无限循环下去, 就引起了self referencing loop.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以web api 不应该把Domain Model直接暴露出去, 应该使用ViewModel或者叫Dto.&lt;/span&gt;..&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;建立ViewModel&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立ViewModels/TvNetworkViewModel.cs 和 TvShowViewModel.cs:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.ObjectModel;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.ViewModels
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvNetworkViewModel
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TvNetworkViewModel()
        {
            TvShows &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; Collection&amp;lt;TvShowViewModel&amp;gt;&lt;span&gt;();
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; ICollection&amp;lt;TvShowViewModel&amp;gt; TvShows { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.ViewModels
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvShowViewModel
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; Id { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; TvNetworkId { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注意TvShowViewModel里面并没有反向的TvNetWork属性, 这也保证了不会发生上面的自身循环引用异常.&lt;/p&gt;
&lt;p&gt;接下来需要做的就是在Controller里面把Domain Model的属性传递给ViewModel, 没人会去手写这个映射的过程, 所以应该使用AutoMapper等类似的库&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;AutoMapper&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;首先添加AutoMapper, 一共有两个包:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;dotnet add package AutoMapper
dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection&lt;br/&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;别忘了还要执行dotnet restore. &lt;/p&gt;
&lt;p&gt;安装成功后, 在Startup.cs里面注册AutoMapper:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228101214765-580447995.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;此外, AutoMapper还需要知道Domain Model和ViewModel的对应关系和方向.&lt;/p&gt;
&lt;p&gt;建立Mapping/MappingProfile.cs:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; AutoMapper;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.Models;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.ViewModels;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Mapping
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MappingProfile : Profile
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; MappingProfile()
        {
            CreateMap&lt;/span&gt;&amp;lt;TvNetwork, TvNetworkViewModel&amp;gt;&lt;span&gt;();
            CreateMap&lt;/span&gt;&amp;lt;TvShow, TvShowViewModel&amp;gt;&lt;span&gt;();
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后在Controller里面需要注入AutoMapper:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; AutoMapper;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.EntityFrameworkCore;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.Database;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.Models;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Tv.ViewModels;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Tv.Controllers
{
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TvController : Controller
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; TvContext context;
        &lt;/span&gt;&lt;span&gt;private readonly IMapper mapper;

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; TvController(TvContext context, &lt;span&gt;IMapper mapper&lt;/span&gt;)
        {
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.context =&lt;span&gt; context;
            &lt;/span&gt;&lt;span&gt;this.mapper =&lt;/span&gt;&lt;span&gt;&lt;span&gt; mapper;&lt;/span&gt;
        }

        [HttpGet(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/api/tvnetworks&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IEnumerable&amp;lt;&lt;span&gt;TvNetworkViewModel&lt;/span&gt;&amp;gt;&amp;gt;&lt;span&gt; GetTvNetworks()
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; models = &lt;span&gt;await&lt;/span&gt; context.TvNetworks.Include(x =&amp;gt;&lt;span&gt; x.TvShows).ToListAsync();
            &lt;/span&gt;&lt;span&gt;var vms = mapper.Map&amp;lt;List&amp;lt;TvNetwork&amp;gt;, List&amp;lt;TvNetworkViewModel&amp;gt;&amp;gt;(models);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; vms;
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;差不多了, 再次测试一下这个api:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228102851667-713649858.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;没毛病!!!&lt;/p&gt;

&lt;p&gt;按照第一部分的操作安装好angular cli之后 (&lt;a href=&quot;https://github.com/angular/angular-cli&quot; target=&quot;_blank&quot;&gt;https://github.com/angular/angular-cli&lt;/a&gt;), 就可以打开命令行建立angular 客户端项目了. 使用:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
ng new tv-client
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;创建一个名字为tv-client的angular项目. 此时, cli会通过npm自动安装依赖的包. &lt;/p&gt;
&lt;p&gt;安装好所有的包之后, 就可以进入该目录 cd tv-client 并用 vscode打开该目录: code+.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228135038084-1066378979.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个项目里面, 我们主要是在src/app里面写代码, 也会简单修改一下angular-cli.json文件.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;运行angular项目&lt;/strong&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;可以使用ng server或者npm start命令运行angular项目:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228140020384-695969782.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最好还是使用npm start, 因为ng server以后会需要添加一些参数. &lt;/p&gt;
&lt;p&gt;所以npm start, 看看效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228140136896-1946144944.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;打开浏览器 http://localhost:4200,&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228140220393-2046443258.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;ok, 项目建立成功了.&lt;/p&gt;
&lt;p&gt;由于已经存在种子数据了, 那么就可以查询列表了.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;创建TvNetwork列表&lt;/strong&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;首先把当前目录切换到app下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228135315204-2061566808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据文档, 使用下面命令创建一个名为tv-network-list.ts的component, 并且在app模块进行注册, 如果不存在components文件夹则创建这个文件夹.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng g c components/TvNetworkList -m=app
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;生成文件如下:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301203416476-1932622050.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;并且已经在app.module进行了注册:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301203718302-1365899993.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我们再创建两个component&lt;strong&gt;.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;创建TvNetwork表单&lt;/span&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;根据文档, 使用下面命令创建一个名为tv-network-form.ts的component, 并且在app模块进行注册, 如果不存在components文件夹则创建这个文件夹.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng g c components/TvNetworkForm -m=app
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这个命令使用的都是缩写. 完整的写法如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng generate component components/TvNetworkForm --module=app
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成的文件如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228135847477-1771794078.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再建立一个home component:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng g c components/home -m=app 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么, 如何访问这个form? 这就需要建立路由了, 不过首先先把bootstrap 4 安装上, 项目根目录执行以下命令:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
npm install --save bootstrap jquery popper.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 安装好之后, 需要把bootstrap的css文件添加到angular-cli.json文件里:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228140847764-1761739096.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面添加导航栏, 请参考bootstrap4文档: &lt;a href=&quot;http://getbootstrap.com/docs/4.0/components/navbar/&quot; target=&quot;_blank&quot;&gt;http://getbootstrap.com/docs/4.0/components/navbar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改app.component.html如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;nav &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-brand&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Tv&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-toggler&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; data-toggle&lt;/span&gt;&lt;span&gt;=&quot;collapse&quot;&lt;/span&gt;&lt;span&gt; data-target&lt;/span&gt;&lt;span&gt;=&quot;#navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt; aria-controls&lt;/span&gt;&lt;span&gt;=&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt;
    aria-expanded&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; aria-label&lt;/span&gt;&lt;span&gt;=&quot;Toggle navigation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-toggler-icon&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;collapse navbar-collapse&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-nav mr-auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-item active&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-link&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Home
          &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sr-only&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;(current)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;nav&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后运行npm start, 结果如下图就说明bootstrap4安装好了:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228141315437-2143613317.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;建立angular 路由&lt;/strong&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;参考官方文档: &lt;a href=&quot;https://angular.io/tutorial/toh-pt5&quot; target=&quot;_blank&quot;&gt;https://angular.io/tutorial/toh-pt5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;执行命令:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng g m appRouting -flat -m=app
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这会建立一个app-routing.module.ts模块, 并且不会创建自己的文件夹, 同样也会注册到app模块.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228142103195-826039294.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;修改app-routing到代码如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;47&quot;&gt;
&lt;pre&gt;
import { NgModule } from '@angular/core'&lt;span&gt;;
import { RouterModule, Routes } from &lt;/span&gt;'@angular/router'&lt;span&gt;;
import { HomeComponent } from &lt;/span&gt;'./components/home/home.component'&lt;span&gt;;
import { TvNetworkFormComponent } from &lt;/span&gt;'./components/tv-network-form/tv-network-form.component'&lt;span&gt;;
import { TvNetworkListComponent } from &lt;/span&gt;'./components/tv-network-list/tv-network-list.component'&lt;span&gt;;

const ROUTES: Routes &lt;/span&gt;=&lt;span&gt; [
  { path: &lt;/span&gt;'', redirectTo: '/home', pathMatch: 'full'&lt;span&gt; },
  { path: &lt;/span&gt;'home'&lt;span&gt;, component: HomeComponent },
  { path: &lt;/span&gt;'tvnetworks'&lt;span&gt;, component: TvNetworkListComponent },
  { path: &lt;/span&gt;'tvnetworks/new'&lt;span&gt;, component: TvNetworkFormComponent },
  { path: &lt;/span&gt;'**'&lt;span&gt;, component: HomeComponent }
];

@NgModule({
  imports: [ RouterModule.forRoot(ROUTES) ],
  exports: [RouterModule]
})
export class AppRoutingModule { }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;在编写angular的ts代码时, 由于安装了angular插件, 所以智能提示和自动补全和自动引用都是相当好的.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分别设置了5个路由, 默认路由直接跳转到home, 如果没有匹配路由到话也是跳转到home.&lt;/p&gt;
&lt;p&gt;然后需要在app.component.html里面加上router-outlet, 并修改navbar里面到链接:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;nav &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-brand&quot;&lt;/span&gt;&lt;span&gt; href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Tv&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-toggler&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;button&quot;&lt;/span&gt;&lt;span&gt; data-toggle&lt;/span&gt;&lt;span&gt;=&quot;collapse&quot;&lt;/span&gt;&lt;span&gt; data-target&lt;/span&gt;&lt;span&gt;=&quot;#navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt; aria-controls&lt;/span&gt;&lt;span&gt;=&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt;
    aria-expanded&lt;/span&gt;&lt;span&gt;=&quot;false&quot;&lt;/span&gt;&lt;span&gt; aria-label&lt;/span&gt;&lt;span&gt;=&quot;Toggle navigation&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-toggler-icon&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;collapse navbar-collapse&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;navbarSupportedContent&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;ul &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;navbar-nav mr-auto&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-link&quot;&lt;/span&gt;&lt;span&gt; routerLinkActive&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt; routerLink&lt;/span&gt;&lt;span&gt;=&quot;/home&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Home
          &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sr-only&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;(current)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-link&quot;&lt;/span&gt;&lt;span&gt; routerLinkActive&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt; routerLink&lt;/span&gt;&lt;span&gt;=&quot;/tvnetworks&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Tv Network
          &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sr-only&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;(current)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;li &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;nav-link&quot;&lt;/span&gt;&lt;span&gt; routerLinkActive&lt;/span&gt;&lt;span&gt;=&quot;active&quot;&lt;/span&gt;&lt;span&gt; routerLink&lt;/span&gt;&lt;span&gt;=&quot;/tvnetworks/new&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;Add Tv Network
          &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;sr-only&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;(current)&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;
      &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;li&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;ul&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;nav&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;strong&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;container&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;router-outlet&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;router-outlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看浏览器, 应该是这个效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301204117743-609994279.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;建立Service&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;为了使用asp.net core到web api, 需要在angular客户端建立http的service. 这里我使用HttpClient.&lt;/p&gt;
&lt;p&gt;首先在app.module里面添加引用:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
&lt;strong&gt;import { HttpClientModule } from '@angular/common/http';&lt;/strong&gt;


import { AppComponent } from './app.component';
import { TvNetworkFormComponent } from './components/tv-network-form/tv-network-form.component';
import { HomeComponent } from './components/home/home.component';
import { AppRoutingModule } from './/app-routing.module';


@NgModule({
  declarations: [
    AppComponent,
    TvNetworkFormComponent,
    HomeComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    &lt;strong&gt;HttpClientModule&lt;/strong&gt;
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后使用命令生成service:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
ng g s services/TvNetwork -m=app
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228145656829-1862802117.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后编辑tv-network.service.ts, 添加一个获得所有tv network的方法, 返回类型是Observable:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
import { Injectable } from '@angular/core'&lt;span&gt;;
import { HttpClient, HttpHeaders } from &lt;/span&gt;'@angular/common/http'&lt;span&gt;;

@Injectable()
export class TvNetworkService {

  constructor(
    private http: HttpClient
  ) { }

  &lt;strong&gt;getTvNetworks () {
    &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.http.get&amp;lt;any[]&amp;gt;('api/tvnetworks'&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;);
  }&lt;/strong&gt;

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;随后我们在tv-netowrk-list.component.ts里的ngOnInit方法调用它, 并把结果打印出来:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
import { Component, OnInit } from '@angular/core'&lt;span&gt;;
import { TvNetworkService } from &lt;/span&gt;'../../services/tv-network.service'&lt;span&gt;;

@Component({
  selector: &lt;/span&gt;'app-tv-network-list'&lt;span&gt;,
  templateUrl: &lt;/span&gt;'./tv-network-list.component.html'&lt;span&gt;,
  styleUrls: [&lt;/span&gt;'./tv-network-list.component.css'&lt;span&gt;]
})
export class TvNetworkListComponent implements OnInit {

  tvNetworks: any[];

  constructor(
    private tvNetworkServices: TvNetworkService
  ) { }

  ngOnInit() {
    &lt;/span&gt;&lt;strong&gt;&lt;span&gt;this&lt;/span&gt;.tvNetworkServices.getTvNetworks().subscribe(result =&amp;gt;&lt;span&gt; {
      &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.tvNetworks =&lt;span&gt; result;
      console.log(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.tvNetworks);
    }, err &lt;/span&gt;=&amp;gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt; {
      console.error(err);
    });&lt;/strong&gt;
  }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后让我们运行试试:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301205222917-1683099912.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到发生了错误404, angular客户端并没有找到这个api. 这是因为angular运行的是自己的web服务器端口4200, 而asp.net core也是运行自己服务器端口为5000.&lt;/p&gt;
&lt;p&gt;那么可以有多种解决办法:&lt;/p&gt;
&lt;p&gt;1. 可以在angular的service的url写成完整的地址, 但是, 由于开发时和生产时的api地址很有可能不一样, 那么这就意味着发布到正式环境之前要把所有services的url地址全部修改一遍, 显然, 这时不可取的. (也许可以定义一个前缀变量, 随着环境改变它的值).&lt;br/&gt;2. 由于angular cli其实使用的是webpack, 那么就可以使用proxy. &lt;/p&gt;
&lt;p&gt;我们就使用proxy, 参考官方文档: &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-proxy&quot; target=&quot;_blank&quot;&gt;https://github.com/angular/angular-cli/wiki/stories-proxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在项目根目录建立一个proxy.conf.json文件:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&quot;/api&quot;&lt;span&gt;: {
    &lt;/span&gt;&quot;target&quot;: &quot;http://localhost:5000&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;secure&quot;: &lt;span&gt;false&lt;/span&gt;&lt;span&gt;
  }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这表示所有的以/api开头的请求将会被转发到http://localhost:5000/api这个地址上.&lt;/p&gt;
&lt;p&gt;此外还需要修改package.json里面到npm start部分, 把上面的proxy文件添加为参数:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301210157708-1063252102.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后重新运行angular项目, 这时只能使用 npm start这个命令, 如果想使用ng serve 命令则必须把后边的参数加上.&lt;/p&gt;
&lt;p&gt;重新访问TvNetworks菜单:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301210326091-66270969.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这次读取api成功了. 那么接下来我们来完成这个列表页面.&lt;/p&gt;
&lt;p&gt;cmd+p, 输入 tv list html 打开tv-network-list.component.html.&lt;/p&gt;
&lt;p&gt;这里需要画一个table, 别忘了使用zencoding.&lt;/p&gt;
&lt;p&gt;表头部分, 按照下面输入然后按Tab:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301210835944-1141172457.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Tbody部分:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301210959651-805243177.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后代码:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;thead-dark&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&quot;col&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;#&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&quot;col&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&quot;col&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr &lt;/span&gt;&lt;span&gt;*ngFor&lt;/span&gt;&lt;span&gt;=&quot;let t of tvNetworks; let i = index&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;scope&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{i+1}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;{{t.name}}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
      &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;运行页面:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201803/986268-20180301211114498-1629195849.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Beautiful.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;继续编写表单&lt;/strong&gt;&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;打开tv-network-form.component.html, 请看视频:&lt;/p&gt;

&lt;p&gt;最终代码如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;添加电视台&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;name&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;提交&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/986268/201802/986268-20180228144657235-1285699230.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果您跟着这两篇文章做到现在, 肯定可以感觉到vscode到强大和不同, 它绝不仅仅是个编辑器. 我一直在使用vscode编写前台和python等, 现在也习惯使用vscode编写.net core项目了, Awesome.&lt;/p&gt;
&lt;p&gt;今天先写到这, 下一篇是CRUD部分. &lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 13:15:00 +0000</pubDate>
<dc:creator>solenovex</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/cgzl/p/8481825.html</dc:identifier>
</item>
<item>
<title>Java内部类总结 - 好好De活着</title>
<link>http://www.cnblogs.com/brave7/p/8486034.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/brave7/p/8486034.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;Java内部类&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、 含义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　在Java编程语言里，程序是由类(class)构建而成的。在一个类的内部也可以声明类，我们把这&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　样的类叫做内部类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、 作用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;实现了更好的封装，我们知道，普通类(非内部类)的访问修饰符不能为private或protected，而内部类可以。当我们将内部类声明为private时，&lt;/span&gt;&lt;span&gt;只有外部类可以访问内部类，很好地隐藏了内部类。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;内部类可以继承(extends)或实现(implements)其他的类或接口，而不受外部类的影响。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;内部类可以直接访问外部类的字段和方法，即使是用private修饰的，相反的，外部类不能直接访问内部类的成员。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、 原理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　内部类是一个编译时的概念，编译后会生成两个独立的class文件，如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;　　public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Outer{
    　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String outerName = &quot;outer&quot;&lt;span&gt;;
    　　&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Inner{
        　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String innerName = &quot;inner&quot;&lt;span&gt;;
    　　}
　　}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;  　  编译后的文件如下图:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1262677/201802/1262677-20180228215124634-842388963.png&quot; alt=&quot;&quot; width=&quot;589&quot; height=&quot;53&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　编译后Outer.Inner被重命名为Outer$Inner，句点(.)被替换成了美元符号($)。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、 分类&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　Java内部类可分为成员内部类、局部内部类、匿名内部类、静态内部类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　1） 成员内部类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　成员内部类可以看成是外部类的一个成员，在成员内部类中无法声明静态成员，但static&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　final字段是个例外。我们知道加载类时，&lt;/span&gt;&lt;span&gt;会先初始化静态成&lt;/span&gt;&lt;span&gt;员，如果成员内部类有静态成&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　员，那么内部类就会在外部类之前生成，而内部类是为外部类服务的，内部类&lt;/span&gt;&lt;span&gt;在外部类之&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　前就生成可能会脱离掌控。&lt;/span&gt;&lt;span&gt;在实例化成员内部类时，成员内部类会持有一个外部类当前对&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　象的引用，这样在成员内&lt;/span&gt;&lt;span&gt;部类中就可以直接访问外部类的成员，即使是private修饰的。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;　　　  import&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; java.lang.System.out;
　　　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Outer{
　　　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String outerName = &quot;outer&quot;&lt;span&gt;;
　　　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;外部类无法直接访问内部类的成员，需要实例化内部类对象&lt;/span&gt;
    　 &lt;span&gt;private&lt;/span&gt; Inner inner = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Inner(); 
    　 &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Inner{
       　　 &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;  String innerName = &quot;inner&quot;&lt;span&gt;;
           &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; show(){
           　　out.println(outerName); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;可以直接访问外部类的成员&lt;/span&gt;&lt;span&gt;
        　　}
    　 }
    　 &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; show(){
       　　 out.println(inner.innerName);
        　  inner.show();
    　 }
    　 &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
       　　 Outer outer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Outer();
        　　outer.show();
           &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;实例化内部类&lt;/span&gt;&lt;span&gt;
        　　Outer.Inner inner &lt;/span&gt;= outer.&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Inner();
        　　inner.show();
    　　}
　　}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　运行结果:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　　　inner&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　　　outer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　　　outer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 　  &lt;/span&gt;&lt;span&gt;成员内部类对外部类对象的引用，是通过在this前面加上外部类的名字构成的，&lt;/span&gt;&lt;span&gt;这种形式叫作&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　限定-this，&lt;/span&gt;&lt;span&gt;out.println(outerName)&lt;/span&gt;&lt;span&gt;与out.println(Outer.this.outerName)是等价的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 2)  局部内部类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　局部内部类的使用和成员内部类的使用基本一致，只是局部内部类定义在外部类的方法中，就&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　像局部变量一样，并不是外部类的成&lt;/span&gt;&lt;span&gt;员。局部内部类在方法外&lt;/span&gt;&lt;span&gt;是无法访问到的，但它的实例可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　以从方法中返回，并且实例在不再被引用之前会一直存在。局部内部类也&lt;/span&gt;&lt;span&gt;可以访问所在方法的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　局部变量、方法参数等，&lt;/span&gt;&lt;span&gt;限制是局部变量或方法参数只有在声明为final时才能被&lt;/span&gt;&lt;span&gt;访问。&lt;/span&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;　　import&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; java.lang.System.out;
　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Outer{
    　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String outerName = &quot;outer&quot;&lt;span&gt;;
    　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; show(&lt;span&gt;final&lt;/span&gt; String str){   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;方法参数为final类型&lt;/span&gt;
        　　&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Inner{
            　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; print(){
                　　out.println(outerName&lt;/span&gt;+&lt;span&gt;str);
            　　}
        　　}
        　　Inner inner &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Inner();
        　　inner.print();
    　　}
    　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        　　Outer outer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Outer();
        　　outer.show(&lt;/span&gt;&quot;:lalala&quot;&lt;span&gt;);
    　　}
　　}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　运行结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　    outer:lalala&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3)  匿名内部类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　可以把匿名内部类想象成是没有类名的局部内部类，匿名内部类有以下特点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　1、匿名内部类不能有构造器，匿名内部类没有类名，肯定无法声明构造器。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　2、匿名内部类必须继承或实现一个接口，指定给new的类型为匿名类的超类型，匿名类不&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　　  能有显示的extends或implements子句，&lt;/span&gt;&lt;span&gt;也不能有任何修饰符。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　　3、匿名内部类和成员内部类、局部内部类一样，也不能声明静态成员。&lt;/span&gt;&lt;span&gt;　　　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;　　import&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; java.lang.System.out;
　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Outer{
     　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String outerName = &quot;outer&quot;&lt;span&gt;;
     　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; show(&lt;span&gt;final&lt;/span&gt;&lt;span&gt; String str){
           　　&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Inner(){   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;实现了Inner接口&lt;/span&gt;
                 　　&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; print(){
                        　　out.println(outerName&lt;/span&gt;+&lt;span&gt;str);
                  　　}
            　　}.print();
     　　}
     　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
             　　Outer outer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Outer();
             　　outer.show(&lt;/span&gt;&quot;:lalala&quot;&lt;span&gt;);
        　　}
　　}
　　&lt;/span&gt;&lt;span&gt;interface&lt;/span&gt;&lt;span&gt; Inner{
       　　&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;&lt;span&gt; print();
　　}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;　　运行结果：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  　　  outer:lalala&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4) 静态内部类&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　静态内部类，有的书上也称为嵌套类，声明它时需要用static修饰符，静态内部类不同于前三&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　种内部类，静态内部类不会持有外部类&lt;/span&gt;&lt;span&gt;当前对象的引用，所以&lt;/span&gt;&lt;span&gt;在静态内部类中无法访问外部&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　类的非静态成员，可以这么说，静态内部类不依赖于外部类。&lt;/span&gt;&lt;span&gt;　&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;　　import&lt;/span&gt; &lt;span&gt;static&lt;/span&gt;&lt;span&gt; java.lang.System.out;
　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Outer{
    　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; String outerName = &quot;outer&quot;&lt;span&gt;;
    　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; id = 123&lt;span&gt;;
    　　&lt;/span&gt;&lt;span&gt;private&lt;/span&gt; Inner inner = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Inner();
    　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Inner{
        　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; print1(){
            　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;out.println(outerName); 无法访问外部类的非静态成员&lt;/span&gt;&lt;span&gt;
            　　out.println(id);
        　　}
        　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; print2(){
            　　out.println(id);
        　　}
    　　}
    　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; show(){
        　　inner.print1();
    　　}
    　　&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args){
        　　Outer outer &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Outer();
        　　outer.show();
        　　Outer.Inner.print2(); &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;直接通过类名访问静态内部类&lt;/span&gt;&lt;span&gt;
    　　}
　　}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;                    &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 01 Mar 2018 12:55:00 +0000</pubDate>
<dc:creator>好好De活着</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/brave7/p/8486034.html</dc:identifier>
</item>
<item>
<title>基于JDK1.8的LinkedList剖析 - wenbochang</title>
<link>http://www.cnblogs.com/wenbochang/p/8488604.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wenbochang/p/8488604.html</guid>
<description>&lt;p&gt;之前写了一篇ArrayList，那么今天就写一篇他的姊妹篇，LinkedList。&lt;/p&gt;
&lt;p&gt;众所周知，ArrayList底层数据是数组，可以在O(1)的时间内get到数据，但删除和插入就要O(n)时间复杂度。&lt;/p&gt;
&lt;p&gt;所以出现了链表，链表可以在O(1)的时间内插入，并且不会浪费内存，用多少就链接多少即可。&lt;/p&gt;
&lt;p&gt;我们从以下几个方面介绍LinkedList&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Node节点&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;add方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;remove方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;get方法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;(一)Node节点&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; Node&amp;lt;E&amp;gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    E item;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     Node&amp;lt;E&amp;gt;&lt;span&gt; next;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     Node&amp;lt;E&amp;gt;&lt;span&gt; prev;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt;     Node(Node&amp;lt;E&amp;gt; prev, E element, Node&amp;lt;E&amp;gt;&lt;span&gt; next) {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.item =&lt;span&gt; element;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.next =&lt;span&gt; next;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;         &lt;span&gt;this&lt;/span&gt;.prev =&lt;span&gt; prev;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们可以看出每个结点的组成部分有三个，一个是item数据，一个是prev前驱节点，一个是next后驱节点。&lt;/p&gt;
&lt;p&gt;那么就可以知道LinkedList就是一个双向链表，每个节点既有指向后面的链表，也有指向前面的链表。如下图(画的不好，见谅)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1335795/201803/1335795-20180301145852000-585432740.png&quot; alt=&quot;&quot; width=&quot;612&quot; height=&quot;280&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;(二)add方法&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;最基本的add方法，其他方法都是这个方法的变体&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt;&lt;span&gt; add(E e) {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    linkLast(e);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;直接调用了linkLast方法(也就是说，add方法是默认插入到链表的尾端)，然后return 一个 true。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; linkLast(E e) {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;将链表的last节点给l&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; l =&lt;span&gt; last;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; newNode = &lt;span&gt;new&lt;/span&gt; Node&amp;lt;&amp;gt;(l, e, &lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     last =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果是第一个节点&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (l == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         first =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;直接加入到尾节点的后面去&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;         l.next =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     size++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     modCount++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们知道add方法是在队列尾部添加元素，还是很容易的。首先用变量 l 指向最后一个节点，然后创建一个节点将它的prev指向 l ，这样newnode成为最后一个节点，使用last指向它，接着使 l 的next指向newnode，这种直接添加在队列尾部的方式还是很好理解的，我们重点看看如何添加在队列的中间位置。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; add(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index, E element) {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查插入位置是否合法&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    checkPositionIndex(index);
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; 
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果插入到最后，直接调用linkLast方法&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (index ==&lt;span&gt; size)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        linkLast(element);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;否则调用linkBefore&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;        linkBefore(element, node(index));
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;直接看注释。在调用linkBefore之前，调用了node(index)确定插入的位置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; Node&amp;lt;E&amp;gt; node(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index) {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; assert isElementIndex(index);&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (index &amp;lt; (size &amp;gt;&amp;gt; 1&lt;span&gt;)) {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         Node&amp;lt;E&amp;gt; x =&lt;span&gt; first;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = 0; i &amp;lt; index; i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;             x =&lt;span&gt; x.next;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; x;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         Node&amp;lt;E&amp;gt; x =&lt;span&gt; last;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = size - 1; i &amp;gt; index; i--&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;             x =&lt;span&gt; x.prev;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; x;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先判断在前半部分还是在后半部分，然后一个for循环查找。时间复杂度O(n), 没办法，链表的缺点。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; linkBefore(E e, Node&amp;lt;E&amp;gt;&lt;span&gt; succ) {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; assert succ != null;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; pred =&lt;span&gt; succ.prev;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; newNode = &lt;span&gt;new&lt;/span&gt; Node&amp;lt;&amp;gt;&lt;span&gt;(pred, e, succ);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     succ.prev =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (pred == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         first =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;         pred.next =&lt;span&gt; newNode;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     size++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     modCount++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; (三)remove方法&lt;/h3&gt;
&lt;p&gt;看完了添加，删除就显得简单些，无非分为两种，从头部删除，从中间删除，从头部删除和从尾部添加一样简单，从中间删除就是把此结点的前一个结点的next指向此结点的后一个结点，并把后一个结点的prev指向此节点的前一个结点，就是跳过此结点，最终将此结点null交给GC大人解决。为了篇幅，我们不再赘述。&lt;/p&gt;
&lt;h3&gt; (四)get方法&lt;/h3&gt;
&lt;p&gt;由于LinkedList是链表，get方法必须扫描一遍链表，效率极低，所以谨慎使用。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt;  &lt;span&gt;public&lt;/span&gt; E get(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index) {
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;      &lt;span&gt;//&lt;/span&gt;&lt;span&gt;检查是否超过链表长度或者负数&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    checkElementIndex(index);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;node节点我前面分析过了，O(n)复杂度&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt;&lt;span&gt; node(index).item;
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从源代码中我们可以清晰的看到，所谓的get方法也就是，调用node方法遍历整个链表，只是其中稍微做了点优化，如果index的值小于size/2从头部遍历，否则从尾部遍历。可见效率一样低下，所以我们以后写程序的时候，如果遇到数据量不大但是需要经常遍历查找的时候使用ArrayList而不是LinkedList，如果数据量非常的大，但是不是很经常的查找时使用LinkedList。&lt;/p&gt;

</description>
<pubDate>Thu, 01 Mar 2018 12:42:00 +0000</pubDate>
<dc:creator>wenbochang</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wenbochang/p/8488604.html</dc:identifier>
</item>
</channel>
</rss>