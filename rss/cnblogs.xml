<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>【深度学习】数据降维方法总结 - 郭耀华</title>
<link>http://www.cnblogs.com/guoyaohua/p/8855636.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/guoyaohua/p/8855636.html</guid>
<description>&lt;p&gt;　　机器学习领域中所谓的降维就是指采用某种映射方法，将原高维空间中的数据点映射到低维度的空间中。降维的本质是学习一个映射函数 f : x-&amp;gt;y，其中x是原始数据点的表达，目前最多使用向量表达形式。 y是数据点映射后的低维向量表达，通常y的维度小于x的维度（当然提高维度也是可以的）。f可能是&lt;strong&gt;显式的&lt;/strong&gt;或&lt;strong&gt;隐式的&lt;/strong&gt;、&lt;strong&gt;线性的&lt;/strong&gt;或&lt;strong&gt;非线性的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　目前大部分降维算法处理向量表达的数据，也有一些降维算法处理高阶张量表达的数据。&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;之所以使用降维后的数据表示是因为&lt;/span&gt;：&lt;/span&gt;①在原始的高维空间中，包含有冗余信息以及噪音信息，在实际应用例如图像识别中造成了误差，降低了准确率；而通过降维,我们希望减少&lt;span&gt;冗余信息&lt;/span&gt;所造成的误差,提高识别（或其他应用）的精度。&lt;span&gt; &lt;span&gt;②&lt;/span&gt;&lt;/span&gt;&lt;span&gt;又或者希望通过降维算法来寻找数据内部的本质结构特征。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　在很多算法中，降维算法成为了数据预处理的一部分，如PCA。事实上，有一些算法如果没有降维预处理，其实是很难得到很好的效果的。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3 id=&quot;数据降维的目的&quot;&gt;数据降维的目的&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　数据降维，直观地好处是维度降低了，&lt;strong&gt;&lt;span&gt;便于计算和可视化&lt;/span&gt;&lt;/strong&gt;，其更深层次的意义在于&lt;strong&gt;&lt;span&gt;有效信息的提取综合及无用信息的摈弃&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3 id=&quot;数据降维的方法&quot;&gt;数据降维的方法&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　主要的方法是&lt;span&gt;&lt;strong&gt;线性映射&lt;/strong&gt;&lt;/span&gt;和&lt;strong&gt;&lt;span&gt;非线性映射&lt;/span&gt;&lt;/strong&gt;方法两大类。&lt;/p&gt;

&lt;p&gt;　　线性映射方法的代表方法有：&lt;strong&gt;PCA（Principal Component Analysis）&lt;/strong&gt;，&lt;strong&gt;LDA（Discriminant Analysis）&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;pca方法简介&quot;&gt;1.1  主成分分析算法（PCA）&lt;/h2&gt;
&lt;p&gt;　　主成分分析(PCA) 是最常用的线性降维方法，它的目标是通过某种线性投影，将高维的数据映射到低维的空间中表示，并&lt;strong&gt;期望在所投影的维度上数据的&lt;span&gt;方差最大&lt;/span&gt;，&lt;span&gt;以此使用较少的数据维度，同时保留住较多的原数据点的特性。&lt;/span&gt; &lt;/strong&gt;是将原空间变换到特征向量空间内，数学表示为AX = γX。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416143052522-929368950.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　为什么要用协方差矩阵来特向分解呢？ &lt;br/&gt;　　&lt;strong&gt;协方差矩阵表征了变量之间的相关程度（维度之间关系）。 &lt;/strong&gt;&lt;br/&gt;　　对数据相关性矩阵的特向分解，意味着找到最能表征属性相关性的特向（最能表征即误差平方最小）。PCA一开始就没打算对数据进行特向分解，而是对数据属性的相关性进行分析，从而表示出最能代表属性相关性的特向，然后将原始数据向这些特向上投影。所以，有的地方说PCA去相关。 &lt;/p&gt;
&lt;p&gt;　　通俗的理解，如果把所有的点都映射到一起，那么几乎所有的信息（如点和点之间的距离关系）都丢失了，而如果映射后方差尽可能的大，那么数据点则会分散开来，以此来保留更多的信息。可以证明，PCA是丢失原始数据信息最少的一种线性降维方式。（实际上就是最接近原始数据，但是PCA并不试图去探索数据内在结构）&lt;/p&gt;
&lt;p&gt;　　设 n 维向量w为目标子空间的一个坐标轴方向（称为映射向量），最大化数据映射后的方差，有：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416140258729-1361388719.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　其中 m 是数据实例的个数，xi 是数据实例 i 的向量表达， x拔是所有数据实例的平均向量。定义W 为包含所有映射向量为列向量的矩阵，经过线性代数变换，可以得到如下优化目标函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416140450751-706095087.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416140622303-1831233897.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　其中tr表示矩阵的迹，A是数据协方差矩阵。&lt;/p&gt;
&lt;p&gt;　　容易得到&lt;span&gt;&lt;strong&gt;最优的W是由数据协方差矩阵前 &lt;span&gt;k 个最大&lt;/span&gt; 的特征值对应的特征向量作为列向量构成的&lt;/strong&gt;&lt;/span&gt;。&lt;span&gt;这些特征向量形成一组正交基并且最好地保留了数据中的信息&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;　　PCA的输出就是Y = W*X，由X的原始维度降低到了k维。&lt;/p&gt;
&lt;p&gt;　&lt;span&gt;&lt;strong&gt;　PCA追求的是在降维之后能够最大化保持数据的内在信息，并通过衡量在投影方向上的数据方差的大小来衡量该方向的重要性。&lt;/strong&gt;&lt;/span&gt;但是这样投影以后对数据的区分作用并不大，反而可能使得数据点揉杂在一起无法区分。这也是PCA存在的最大一个问题，这导致使用PCA在很多情况下的分类效果并不好。具体可以看下图所示，若使用PCA将数据点投影至一维空间上时，PCA会选择2轴，这使得原本很容易区分的两簇点被揉杂在一起变得无法区分；而这时若选择1轴将会得到很好的区分结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416141101595-2104522017.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;PCA优缺点：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　优点：1.最小误差 2.提取了主要信息&lt;/p&gt;
&lt;p&gt;　　缺点：PCA将所有的样本（特征向量集合）作为一个整体对待，去寻找一个均方误差最小意义下的最优线性映射投影，而忽略了类别属性，而它所忽略的投影方向有可能刚好包含了重要的可分性信息。&lt;/p&gt;
&lt;h2&gt;1.2 线性判别分析（LDA）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;　　判别分析(Discriminant Analysis)&lt;/strong&gt; 所追求的目标与PCA不同，不是希望保持数据最多的信息，而是&lt;span&gt;希望数据在降维后能够很容易地被区分开来。&lt;/span&gt;后面会介绍LDA的方法，是另一 种常见的线性降维方法。另外一些非线性的降维方法利用数据点的局部性质，也可以做到比较好地区分结果，例如LLE，Laplacian Eigenmap等。以后会介绍。&lt;/p&gt;
&lt;p&gt;　　LDA是一种有监督的（supervised）线性降维算法。与PCA保持数据信息不同，&lt;span&gt;&lt;strong&gt;核心思想：往线性判别超平面的法向量上投影，是的区分度最大（高内聚，低耦合）。&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;LDA&lt;/span&gt;是为了使得降维后的数据点尽可能地容易被区分！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　假设原始数据表示为X，（m*n矩阵，m是维度，n是sample的数量）&lt;/p&gt;
&lt;p&gt;　　既然是线性的，那么就是希望找到映射向量a， 使得 a‘X后的数据点能够保持以下两种性质：&lt;/p&gt;
&lt;p&gt;　　　　1、同类的数据点尽可能的接近（within class）&lt;/p&gt;
&lt;p&gt;　　　　2、不同类的数据点尽可能的分开（between class）&lt;/p&gt;
&lt;p&gt;　　所以呢还是上次PCA用的这张图，如果图中两堆点是两类的话，那么我们就希望他们能够投影到轴1去（PCA结果为轴2），这样在一维空间中也是很容易区分的。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416141101595-2104522017.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h5 id=&quot;lda方法简介&quot;&gt; &lt;/h5&gt;


&lt;p&gt;　　非线性映射方法的代表方法有：核方法（核+线性），二维化和张量化（二维+线性），流形学习（ISOMap，LLE，LPP）&lt;/p&gt;
&lt;h2 id=&quot;基于核的非线性降维&quot;&gt;2.1  基于核的非线性降维&lt;/h2&gt;
&lt;p&gt;　　代表方法有：KPCA，KFDA。 &lt;br/&gt;　　KPCA的基本思想：通过Kernel trick将PCA投影的过程通过内积的形式表达出来。将高维向量&lt;span id=&quot;MathJax-Element-71-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x4E0E;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x5BF9;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x5E94;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x7279;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x5411;&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03B2;&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-967&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-968&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-969&quot; class=&quot;mi&quot;&gt;ϕ&lt;span id=&quot;MathJax-Span-970&quot; class=&quot;mo&quot;&gt;(&lt;span id=&quot;MathJax-Span-971&quot; class=&quot;mi&quot;&gt;x&lt;span id=&quot;MathJax-Span-972&quot; class=&quot;mo&quot;&gt;)&lt;span id=&quot;MathJax-Span-973&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-974&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-975&quot; class=&quot;mo&quot;&gt;与&lt;span id=&quot;MathJax-Span-976&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-977&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-978&quot; class=&quot;mo&quot;&gt;对&lt;span id=&quot;MathJax-Span-979&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-980&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-981&quot; class=&quot;mo&quot;&gt;应&lt;span id=&quot;MathJax-Span-982&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-983&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-984&quot; class=&quot;mo&quot;&gt;特&lt;span id=&quot;MathJax-Span-985&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-986&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-987&quot; class=&quot;mo&quot;&gt;向&lt;span id=&quot;MathJax-Span-988&quot; class=&quot;mi&quot;&gt;β&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;ϕ(x)与对应特向β的内积转换成低维的核函数表示。&lt;/span&gt;&lt;/span&gt; &lt;/p&gt;
&lt;h2 id=&quot;流形学习&quot;&gt;2.2  流形学习&lt;/h2&gt;
&lt;p&gt;　　流形学习的主要算法有：&lt;strong&gt;ISOMap（等距映射）、LE（拉普拉斯特征映射）、LLE（局部线性嵌入）。 &lt;/strong&gt;&lt;br/&gt;　　流形：直线或者曲线是一维流形，平面或者曲面是二维流形，更高维之后是多维流形。一个流形好比是 &lt;span id=&quot;MathJax-Element-72-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;d&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-989&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-990&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-991&quot; class=&quot;mi&quot;&gt;d &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;维的空间，是一个 &lt;span id=&quot;MathJax-Element-73-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-992&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-993&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-994&quot; class=&quot;mi&quot;&gt;m &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;维空间（&lt;span id=&quot;MathJax-Element-74-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;gt;&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;n&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-995&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-996&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-997&quot; class=&quot;mi&quot;&gt;m&lt;span id=&quot;MathJax-Span-998&quot; class=&quot;mo&quot;&gt;&amp;gt;&lt;span id=&quot;MathJax-Span-999&quot; class=&quot;mi&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;）被扭曲之后的空间。流形并不是一个“形状”，而是一个“&lt;strong&gt;空间&lt;/strong&gt;” &lt;br/&gt;&lt;strong&gt;　　流形学习的假设：数据采样于某一流形上。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;isomap&quot;&gt;2.2.1  ISOMap（等距特征映射）&lt;/h3&gt;
&lt;p&gt;　　ISOMap是一种非迭代的全局优化算法。ISOMap对MDS（Multidimensional Scaling-多维尺度分析）进行改造，用测地线距离（曲线距离）作为空间中两点距离，原来是用欧氏距离，从而将位于某维流形上的数据映射到一个欧氏空间上。 &lt;br/&gt;　　ISOMap将数据点连接起来构成一个邻接Graph来离散地近似原来流形，而测地距离则相应地通过Graph上的最短路径来近似了。 &lt;br/&gt;　　比如：我们将球体曲面映射到二维平面上。 &lt;br/&gt;　　此博客写得通俗易懂：&lt;a href=&quot;http://blog.pluskid.org/?p=533&quot; target=&quot;_blank&quot;&gt;http://blog.pluskid.org/?p=533&lt;/a&gt; &lt;br/&gt;　　&lt;strong&gt;几点注意： &lt;/strong&gt;&lt;br/&gt;　　1）ISOMap适用的流形：适合于内部平坦的低维流形，不适合于学习有较大内在曲率的流形。 &lt;br/&gt;　　2）近邻数的选择：近邻数应足够大以便能够减少在路径长度和真实测地距离之间的不同，但要小到能够预防“短路”现象。 &lt;br/&gt;　　3）所构造图的连通性：要求所构造的图示连通的，否则有两种处理办法，一种是放宽临界点选择的限制，另一种是对于每一连通部分分别使用ISOMap算法，得到不同部分的降维结果。 &lt;br/&gt;　　数据到底是否分布于一个流形上？这是个暂时难以回答的问题。 &lt;br/&gt;　　&lt;span&gt;&lt;strong&gt;MDS是一种降维方法，它在降维时使得降维之后的两点间的欧氏距离尽量保持不变&lt;/strong&gt;&lt;/span&gt;（&lt;span&gt;用欧氏距离矩阵来表示高维向量的两两之间的相似度，寻找同样数量的映射维度的向量，使得映射维度下两两间距离约等于原高维下两两间距离，变为了优化问题&lt;/span&gt;）。维基百科对MDS的介绍&lt;a href=&quot;https://en.wikipedia.org/wiki/Multidimensional_scaling&quot; target=&quot;_blank&quot;&gt;https://en.wikipedia.org/wiki/Multidimensional_scaling&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;lle&quot;&gt;2.2.2  LLE（局部线性嵌入）&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　&lt;/span&gt;前提假设：数据没有形成一个封闭的超曲面，局部数据点是线性的。 &lt;/span&gt;&lt;br/&gt;　　&lt;strong&gt;LLE（Locally Linear Embedding-局部线性嵌入）是一种非线性降维算法，它能够使降维后的数据较好地保持原有 流形结构 。&lt;span&gt;LLE&lt;/span&gt;&lt;span&gt;用局部线性反映全局的非线性的算法，并能够使降维的数据保持原有数据的拓扑结构。&lt;/span&gt;&lt;/strong&gt;（在流形上使用局部线性，并用有限局部样本的互相线性表示，得到几何特性的构造权重矩阵，在低维下找到满足高维时样本间构造权重的样本集） &lt;/p&gt;
&lt;p&gt;　　使用LLE将三维数据（b）映射到二维（c）之后，映射后的数据仍能保持原有的数据流形（红色的点互相接近，蓝色的也互相接近），说明LLE有效地保持了数据原有的流行结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416151304314-28193755.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　但是LLE在有些情况下也并不适用，如果数据分布在整个封闭的球面上，LLE则不能将它映射到二维空间，且不能保持原有的数据流形。那么我们在处理数据中，首先假设数据不是分布在闭合的球面或者椭球面上。&lt;/p&gt;
&lt;p&gt;　　LLE算法认为每一个数据点都可以由其近邻点的线性加权组合构造得到。&lt;span&gt;&lt;strong&gt;算法的主要步骤分为三步：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;寻找每个样本点的k个近邻点；&lt;/li&gt;
&lt;li&gt;由每个样本点的近邻点计算出该样本点的局部重建权值矩阵；&lt;/li&gt;
&lt;li&gt;由该样本点的局部重建权值矩阵和其近邻点计算出该样本点的输出值。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;　　&lt;span&gt;LLE详细步骤如下： &lt;/span&gt;&lt;br/&gt;　　1.计算或者寻找数据点&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1000&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1001&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1002&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-1003&quot; class=&quot;mi&quot;&gt;x&lt;span id=&quot;MathJax-Span-1004&quot; class=&quot;mi&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;sub&gt;i&lt;/sub&gt;的临近数据点。 &lt;br/&gt;　　　　假设数据局部为平面，故可以用线性组合表示&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1005&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1006&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1007&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-1008&quot; class=&quot;mi&quot;&gt;x&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;，其误差为： &lt;br/&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416150947310-1641359436.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;　　　　其中w&lt;sub&gt;ij&lt;/sub&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;表示线性重构&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1086&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1087&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1088&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-1089&quot; class=&quot;mi&quot;&gt;x&lt;sub&gt;&lt;span id=&quot;MathJax-Span-1090&quot; class=&quot;mi&quot;&gt;i&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;时的贡献比例。 &lt;br/&gt;　　　　找到每个样本点的&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1091&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1092&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1093&quot; class=&quot;mi&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;K个最近邻点。 &lt;br/&gt;　　2.计算构造权重并重构数据 &lt;br/&gt;　　　　通过约束计算&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1094&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1095&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1096&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-1097&quot; class=&quot;mi&quot;&gt;w&lt;sub&gt;&lt;span id=&quot;MathJax-Span-1098&quot; class=&quot;texatom&quot;&gt;&lt;span id=&quot;MathJax-Span-1099&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1100&quot; class=&quot;mi&quot;&gt;i&lt;span id=&quot;MathJax-Span-1101&quot; class=&quot;mi&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;，使得不在该样本点的&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1102&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1103&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1104&quot; class=&quot;mi&quot;&gt;K&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;个最近邻点中的构造权重都为0. &lt;br/&gt;　　　　重构权重使得重构的数据点与临近点间的旋转、缩放、平移特性保持不变，即几何特性不依赖于特定的参考框架。 &lt;br/&gt;　　3.由重构样本向低维映射。（求低维嵌入） &lt;br/&gt;　　　　设&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1105&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1106&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1107&quot; class=&quot;mi&quot;&gt;z&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;z是低维空间，找到同样数量的低维映射样本，使得： &lt;br/&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416151052768-1510611887.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;MathJax-Element-75-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-76-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-77-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-78-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-79-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-80-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-81-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-82-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-83-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-84-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-85-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-86-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;　　　　最小。（不去关心&lt;span id=&quot;MathJax-Element-87-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1214&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1215&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1216&quot; class=&quot;mi&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;ϕ，直接找&lt;span id=&quot;MathJax-Element-88-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span id=&quot;MathJax-Span-1217&quot; class=&quot;math&quot;&gt;&lt;span id=&quot;MathJax-Span-1218&quot; class=&quot;mrow&quot;&gt;&lt;span id=&quot;MathJax-Span-1219&quot; class=&quot;msubsup&quot;&gt;&lt;span id=&quot;MathJax-Span-1220&quot; class=&quot;mi&quot;&gt;z&lt;sub&gt;&lt;span id=&quot;MathJax-Span-1221&quot; class=&quot;mi&quot;&gt;i&lt;/span&gt;&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;） &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;MathJax-Element-75-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-76-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-77-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-78-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-79-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-80-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-81-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-82-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-83-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-84-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-85-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;(&amp;lt;/mo&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;x&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;)&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-86-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;e&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;m&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2212;&amp;lt;/mo&amp;gt;&amp;lt;munderover&amp;gt;&amp;lt;mo&amp;gt;&amp;amp;#x2211;&amp;lt;/mo&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;1&amp;lt;/mn&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mi&amp;gt;K&amp;lt;/mi&amp;gt;&amp;lt;/munderover&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;w&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;j&amp;lt;/mi&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;msup&amp;gt;&amp;lt;mrow class=&amp;quot;MJX-TeXAtom-ORD&amp;quot;&amp;gt;&amp;lt;mo stretchy=&amp;quot;false&amp;quot;&amp;gt;|&amp;lt;/mo&amp;gt;&amp;lt;/mrow&amp;gt;&amp;lt;mn&amp;gt;2&amp;lt;/mn&amp;gt;&amp;lt;/msup&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-87-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;mi&amp;gt;&amp;amp;#x03D5;&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;span id=&quot;MathJax-Element-88-Frame&quot; class=&quot;MathJax&quot; data-mathml=&quot;&amp;lt;math xmlns=&amp;quot;http://www.w3.org/1998/Math/MathML&amp;quot;&amp;gt;&amp;lt;msub&amp;gt;&amp;lt;mi&amp;gt;z&amp;lt;/mi&amp;gt;&amp;lt;mi&amp;gt;i&amp;lt;/mi&amp;gt;&amp;lt;/msub&amp;gt;&amp;lt;/math&amp;gt;&quot;&gt;&lt;span class=&quot;MJX_Assistive_MathML&quot;&gt;&lt;br/&gt;　　&lt;span&gt;流形学习优缺点： &lt;/span&gt;&lt;br/&gt;　　优点：1）假设流形的存在，部分解决了高维数据分布的问题。 &lt;br/&gt;　　缺点：1）假设流形的存在，不能总是适合数据特点。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;　　降维方法&lt;strong&gt; __ 属性选择&lt;/strong&gt;：过滤法、包装法、嵌入法； &lt;br/&gt;　　　　　　 &lt;strong&gt;|_ 映射方法&lt;/strong&gt;  _&lt;em&gt;_&lt;/em&gt;线性映射方法：PCA、FDA等 &lt;br/&gt;　　　　　　　　　　　　|__非线性映射方法： &lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　|__核方法：KPCA、KFDA等 &lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　|__二维化： &lt;br/&gt;　　　　　　　　　　　　　　　　　　　　　　|__流形学习：ISOMap、LLE、LPP等。 &lt;br/&gt;　　　　　　　　　　　　|__其他方法：神经网络和聚类 &lt;/p&gt;

&lt;p&gt;　　降维可以方便数据可视化+数据分析+数据压缩+数据提取等。 &lt;br/&gt;　　各个降维方法效果图展示： &lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1192699/201804/1192699-20180416151739000-2098726159.png&quot; alt=&quot;&quot;/&gt;&lt;/center&gt;
</description>
<pubDate>Mon, 16 Apr 2018 07:18:00 +0000</pubDate>
<dc:creator>郭耀华</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/guoyaohua/p/8855636.html</dc:identifier>
</item>
<item>
<title>spring boot / cloud (二十) 相同服务,发布不同版本,支撑并行的业务需求 - obejct-itkk</title>
<link>http://www.cnblogs.com/itkk/p/8855694.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/itkk/p/8855694.html</guid>
<description>&lt;p&gt;有半年多没有更新了,按照常规剧本,应该会说项目很忙,工作很忙,没空更新,吧啦吧啦,相关的话吧,&lt;/p&gt;
&lt;p&gt;但是细想想,是真的么?,忙到这几个字都没时间打么?毕竟大家都很忙的,所以忙并不是啥理由.&lt;/p&gt;
&lt;p&gt;那是因为啥呢?感觉就只有一个理由能站得住脚了,就是因为&quot;懒&quot;. 哈哈....&lt;/p&gt;
&lt;p&gt;尬聊了一段,活跃下气氛,下面进入正题&lt;/p&gt;
&lt;h2 id=&quot;场景&quot;&gt;&lt;strong&gt;场景&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;在实际工作中,大家可能也都遇到过这样的情况 :&lt;/p&gt;
&lt;p&gt;一个正在更新迭代过程中项目,会收到大量业务部门的需求,这些需求可能会来自于不同业务部门,或者不同的产品经理&lt;/p&gt;
&lt;p&gt;而项目的onwer则需要接收到这些需求,对这些需求进行初步的分析和排期,但是在排期的过程中,会有这样一种尴尬的情况发生.&lt;/p&gt;
&lt;p&gt;比如,有两个互不嗒噶的产品经理,针对同一功能点,提出了两个不同业务改造的需求点,两个需求点要求上线的时间很接近,但是又出于某种原因,不能同时上线,或者产品经理根本无法确定上线时间,而告诉你尽快完成开发/测试,他则根据实际情况确定业务需求的发布时间&lt;/p&gt;
&lt;p&gt;那么,对于这种情况,通常会采用开分支的方式进行开发,即不同版本的并行需求的开发在不同分支上同时进行开发,那么,团队成员(开发/测试),则可以同时的开展工作,有的负责A需求,有的负责B需求,互不影响&lt;/p&gt;
&lt;p&gt;起初开发阶段的时候,一切很顺利,但是等到开发完毕提测后,测试介入,系统要打入测试环境进行集成测试的时候,那么问题就来了.&lt;/p&gt;
&lt;p&gt;A版本和B版本,目前所属在不同分支上,如果要同时进行集成测试,那系统应该如何部署呢?&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;strong&gt;方案&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;根据上述场景,其实核心问题是,在不添加多套集成测试的环境下,也能针对同一个服务的不同版本,同时进行测试.&lt;/p&gt;
&lt;p&gt;我们项目是基于spring cloud构建的,那么解决的思路就是,在网关层根据不同的版本号进行判断,重新指派网关路由的serviceId,那么下面看相关的实现:&lt;/p&gt;
&lt;h3 id=&quot;架构图&quot;&gt;&lt;strong&gt;架构图&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/img/201804/16110412_voEb.png&quot; title=&quot;在这里输入图片标题&quot; alt=&quot;输入图片说明&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;相关实现&quot;&gt;&lt;strong&gt;相关实现&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;首先,在不同的分支上定义不同的版本号,然后将应用名称拼接上版本号,这样应用在注册到eureka的时候,由于版本号不同,那么就会被认定为是不同的服务&lt;/p&gt;
&lt;pre class=&quot;properties&quot;&gt;
&lt;code&gt;info.app.version=v1 # 其他分支上定义其他版本号
spring.application.name=service-a-${info.app.version}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其次,在zuul层添加路由拦截器,主要是抓取版本号(当然,这个版本号不一定要放在header里面),获得zuul预先根据url根匹配的serviceId,然后拼接上版本号,让其路由到正确的服务中,达到改变代理行为的目的&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;fu&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; VersionChangeFilter &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; ZuulFilter {
    
    &lt;span class=&quot;fu&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; DiscoveryClient discoveryClient;


    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;fu&quot;&gt;filterType&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; ROUTE_TYPE;
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;filterOrder&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;;
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;shouldFilter&lt;/span&gt;() {
        RequestContext ctx = RequestContext.&lt;span class=&quot;fu&quot;&gt;getCurrentContext&lt;/span&gt;();
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; ctx.&lt;span class=&quot;fu&quot;&gt;sendZuulResponse&lt;/span&gt;();
    }

    &lt;span class=&quot;fu&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;fu&quot;&gt;run&lt;/span&gt;() {
        RequestContext ctx = RequestContext.&lt;span class=&quot;fu&quot;&gt;getCurrentContext&lt;/span&gt;();
        HttpServletRequest request = ctx.&lt;span class=&quot;fu&quot;&gt;getRequest&lt;/span&gt;();
        String version=request.&lt;span class=&quot;fu&quot;&gt;getHeader&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;version&quot;&lt;/span&gt;);
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(StringUtils.&lt;span class=&quot;fu&quot;&gt;isNotBlank&lt;/span&gt;(version)){
            String serviceId=String.&lt;span class=&quot;fu&quot;&gt;valueOf&lt;/span&gt;(ctx.&lt;span class=&quot;fu&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;serviceId&quot;&lt;/span&gt;)).&lt;span class=&quot;fu&quot;&gt;concat&lt;/span&gt;(version).&lt;span class=&quot;fu&quot;&gt;toLowerCase&lt;/span&gt;();
            List&amp;lt;String&amp;gt; services = discoveryClient.&lt;span class=&quot;fu&quot;&gt;getServices&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(services.&lt;span class=&quot;fu&quot;&gt;contains&lt;/span&gt;(serviceId)){
                ctx.&lt;span class=&quot;fu&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;serviceId&quot;&lt;/span&gt;,serviceId);
            }
        }
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
    }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;结束&quot;&gt;&lt;strong&gt;结束&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;这样一来,在不增加任何环境资源的前提下,可以实现不同版本服务的服务同时发布.满足了并行集成测试的需求&lt;/p&gt;
&lt;p&gt;当然,还是那句话,解决同样问题的方法有多种,我上述的方法也不一定是最好的,如果有更好经验的同学,欢迎大家踊跃讨论.&lt;/p&gt;
&lt;p&gt;关于本文内容 , 欢迎大家的意见跟建议&lt;/p&gt;
&lt;h2 id=&quot;代码仓库-博客配套代码&quot;&gt;&lt;strong&gt;代码仓库&lt;/strong&gt; (博客配套代码)&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt;想获得最快更新,请关注公众号&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/img/201804/16140503_CkWK.jpg&quot; title=&quot;在这里输入图片标题&quot; alt=&quot;输入图片说明&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 06:25:00 +0000</pubDate>
<dc:creator>obejct-itkk</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/itkk/p/8855694.html</dc:identifier>
</item>
<item>
<title>Spring-Cloud（三）Eureka注册中心实现高可用 - 东北小狐狸</title>
<link>http://www.cnblogs.com/hellxz/p/8855166.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/hellxz/p/8855166.html</guid>
<description>&lt;h2&gt;前言：&lt;/h2&gt;
&lt;hr/&gt;&lt;h2&gt; &lt;/h2&gt;
&lt;p&gt;spring-cloud为基础的微服务架构，所有的微服务都需要注册到注册中心，如果这个注册中心阻塞或者崩了，那么整个系统都无法继续正常提供服务，所以，这里就需要对注册中心进行集群，换言之，高可用（HA）&lt;/p&gt;
&lt;h2&gt;前提：&lt;/h2&gt;
&lt;hr/&gt;&lt;h2&gt; &lt;/h2&gt;
&lt;p&gt;阅读并完成第一个注册中心的项目，环境无需改变。本文是&lt;span&gt;模拟的高可用&lt;/span&gt;，&lt;span&gt;可以复制两个注册中心的项目单独修改各自的配置文件达到同样的效果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;修改hosts，在文件末添加两行如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;127.0.0.1 peer1
127.0.0.1 peer2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;推荐使用notepad++，如果是win10会提醒提权限，确定，然后保存即可。&lt;/p&gt;

&lt;h2&gt;项目搭建：&lt;/h2&gt;
&lt;hr/&gt;&lt;h2&gt; &lt;/h2&gt;
&lt;p&gt;打开注册中心的项目，在src/resources下创建一个application-peer1.properties&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#应用名
spring.application.name=eureka-server
#提供服务端口1111
server.port=1111
#提供服务的域名，这里在hosts文件中修改了
eureka.instance.hostname=peer1
#向第二个注册中心注册自己
eureka.client.service-url.defaultZone=http://peer2:1112/eureka/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在src/resources下创建一个application-peer2.properties&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#应用名称与第一个注册中心一样
spring.application.name=eureka-server
#提供服务端口1112
server.port=1112
#提供服务的域名，这里在hosts文件中修改了
eureka.instance.hostname=peer2
#向第一个注册中心注册自己
eureka.client.service-url.defaultZone=http://peer1:1111/eureka/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;本文使用idea进行测试，首先需要对这个项目进行打成jar包，因为在pom.xml中已经引入了maven编译工具和打包工具并指定打包格式为jar包，这里直接操作，屏幕右上方&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416135239732-1372916651.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416135306733-141274627.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;p&gt;打包完成，该jar包位于target文件夹下，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416135535380-1610881288.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 如图打开terminal，屏幕下方&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416134958217-318368508.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开terminal之后，因为jar包在target目录下，而当前目录为项目目录，所以先cd到target目录下，然后输入如下命令:&lt;/p&gt;
&lt;p&gt;&lt;span&gt;小技巧：输入命令的时候为了防止输错文件名，可以输入文件名的前几个字母，然后使用tab键进行自动补全&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
java -jar EurekaServerDemo-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入完成此命令后，peer1配置文件的项目启动，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416140214324-923760481.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;接下来我们启动第二个项目，这里需要另开一个terminal，cd到target目录&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意：我们这里用的是同一个项目，读者可以使用两个项目进行测试，需要特别注意的是端口不要冲突了&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416140346237-211363613.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
java -jar EurekaServerDemo-0.0.1-SNAPSHOT.jar --spring.profiles.active=peer2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416140709867-1458815179.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;等待项目启动完成，查看有无报错。&lt;/p&gt;
&lt;h2&gt;测试：&lt;/h2&gt;
&lt;hr/&gt;&lt;p&gt;浏览器输入：localhost:1112进行查看，也可以输入localhost:1111进行查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416140945125-318220736.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt; 结语：&lt;/h2&gt;
&lt;p&gt;在设置了多节点的注册中心后，实现了高可用，但是此时我们的微服务应用仅仅是注册到这一个服务之中，所以，我们需要将新节点的注册服务路径同样配到微服务应用中。&lt;/p&gt;
&lt;p&gt;多节点间使用&quot;，&quot;分开，如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1149398/201804/1149398-20180416151326355-1232450134.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;这样微服务提供者从其中一个地方断开之后，因为在其他节点有注册，所以还可以提供服务，如果不想使用主机名进行访问注册中心，也可以使用ip，但是需要先添加一条配置，该值默认false&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
eureka.instance.prefer-ip-address=true
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt; 本文为作者实际操作记录，如需转载请注明出处&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 06:13:00 +0000</pubDate>
<dc:creator>东北小狐狸</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/hellxz/p/8855166.html</dc:identifier>
</item>
<item>
<title>知物由学 | 基于DNN的人脸识别中的反欺骗机制 - 网易云</title>
<link>http://www.cnblogs.com/163yun/p/8855450.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/163yun/p/8855450.html</guid>
<description>&lt;p&gt;&lt;strong&gt;“知物由学”是&lt;a href=&quot;https://www.163yun.com/product-secure?tag=M_cnblogs_8855450&quot; target=&quot;_blank&quot;&gt;网易云易盾&lt;/a&gt;打造的一个品牌栏目，词语出自汉·王充《论衡·实知》。人，能力有高下之分，学习才知道事物的道理，而后才有智慧，不去求问就不会知道。“知物由学”希望通过一篇篇技术干货、趋势解读、人物思考和沉淀给你带来收获的同时，也希望打开你的眼界，成就不一样的你。当然，如果你有不错的认知或分享，也欢迎通过邮件（zhangyong02@corp.netease.com）投稿。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以下是正文：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;本文作者：ArturBaćmaga，YND的AI专家。&lt;/p&gt;

&lt;p&gt;想象一下，只需使用脸部即可解锁手机，无需指纹扫描或触摸。它会在没有任何用户干预的情况下自动且完美地工作。是的，目前已经可以做到了这一点，它被称为iPhone X，你可能已经在使用它了。&lt;/p&gt;

&lt;p&gt;更好的未来是：使用人脸识别进行用户身份验证的潜力比这更大！在不远的将来，我们能够通过展示我们独特的面部特征来租一辆车，并签署法律文件。&lt;/p&gt;

&lt;p&gt;实际上，我们已经开始看到需要身份验证的某些服务（如银行和其他类型的交易系统）。在这种情况下，所提供的法律数据将与文件上的ID和面部图像上的数据进行交叉检查，并与所有者的面部进行比较。但是，像大多数新技术一样，技术在创新，骗子也在创新。而欺骗人脸识别机制的最流行方式之一是“人脸欺骗”攻击。&lt;/p&gt;

&lt;p&gt;欺骗攻击是指通过使用照片、视频或授权人脸部的其他替代品来获取其他人的特权或访问权。&lt;/p&gt;

&lt;p&gt;一些欺骗攻击的例子：&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;打印攻击：攻击者将别人的照片打印或者显示在数字设备上。&lt;/li&gt;
&lt;li&gt;重播/视频攻击：诱骗系统的更复杂的方式，通常需要一个受害者脸部的循环视频。与保持某人的照片相比，这种方法可以确保行为和面部运动看起来更自然。&lt;/li&gt;
&lt;li&gt;3D掩码攻击：在这种类型的攻击中，掩码被用作欺骗的首选工具。这是一个比利用脸部视频更复杂的攻击。除了自然的面部运动之外，它还可以欺骗一些额外的保护层，例如深度传感器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;                                                      欺骗检测方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;欺骗的方法有很多种，对应的我们有许多不同的方法来应对它们的挑战。最流行的反欺骗最先进的解决方案包括：&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;面部生命力检测：一种基于分析测试面如何“活着”的机制。这通常通过检查眼球运动来完成，例如闪烁和脸部运动。&lt;/li&gt;
&lt;li&gt;上下文信息技术：通过调查图像的周围环境，我们可以尝试检测扫描区域中是否有数字设备或照片纸。&lt;/li&gt;
&lt;li&gt;纹理分析：在这里探测输入图像的小纹理部分，以便在欺骗和真实图像中查找图案。&lt;/li&gt;
&lt;li&gt;用户互动：通过要求用户执行动作（将头部向左/向右转动，微笑，闪烁的眼睛），机器可以检测动作是否以与人类互动类似的自然方式进行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，我们不能忽视房间里的大象（指某种巨大到不可能被忽视的真相，而事实上如此巨大的大象常常被集体忽略。）——iPhone X上的FaceID。在最新的硬件迭代中，Apple推出了先进的深度映射和3D感应技术，可以以前所未有的精度实现欺骗检测。但是，由于这种高端硬件在不久的将来将无法在大多数消费类设备上使用，所以我们不得不进化我们的技术以保证我们可以避免被欺骗。&lt;/p&gt;

&lt;p&gt;事实上，在我们的研究和实施过程中，我们发现使用中等质量的2D相机也可以实现极高水平的实时欺骗检测。到底是什么让2D相机拥有如此高的检测水准？答案就是当下最火的深度学习解决方案和自定义的神经网络。&lt;/p&gt;

&lt;p&gt;我们通过与现有的文档化方法进行交叉检查来验证我们的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;                                                 交叉检查1：图像质量评估&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;该解决方案基于将原始图像与用高斯滤波处理的图像进行比较。该论文的作者[1]证明了假图像之间的差异与真实图像之间的差异，并且可以自动检测。为了做到这一点，我们提取了14种流行的图像质量特征，例如：均方误差，平均差或边缘/角差。下一步是将它们发送给分类器，以确定它是“真实”的脸还是“假的”脸。&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic2.zhimg.com/80/v2-e17e74b9216ca9ec1be2ac392bb5ef3b_hd.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;376&quot; data-original=&quot;https://pic2.zhimg.com/v2-e17e74b9216ca9ec1be2ac392bb5ef3b_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-e17e74b9216ca9ec1be2ac392bb5ef3b_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图1. IQA分类处理流程：将图像转换为灰度，使用高斯滤波器，从原始图像和滤波图像之间的差异中提取14个特征，将特征传递给分类器。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;                                            交叉检查2：图像失真分析&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;四种不同的特征（镜面反射、模糊、色度矩和色彩多样性）被发送分类器用于分类。分类器由多个模型构建而成，每个模型都训练出不同类型的欺骗攻击矢量。&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic3.zhimg.com/80/v2-f8a8374b4f647df6bd985a75cfd6716a_hd.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;363&quot; data-original=&quot;https://pic3.zhimg.com/v2-f8a8374b4f647df6bd985a75cfd6716a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f8a8374b4f647df6bd985a75cfd6716a_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2. IDA分类过程流程：提取4个失真特征，将它们传递给一组分类器，将结果传递给负责欺骗/非欺骗决策的分类器&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;                                            最终方法：深度神经网络模型&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这是基于用CNN（卷积神经网络，这是图像分析中最流行的神经网络）建立的模型。裁剪后的人脸图像被传递到神经网络，然后通过神经层进行处理，以将其分类为真实/假的。&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic7.zhimg.com/80/v2-72a40716e3ef7af07b1dfb09add97554_hd.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;331&quot; data-original=&quot;https://pic7.zhimg.com/v2-72a40716e3ef7af07b1dfb09add97554_r.jpg&quot; data-actualsrc=&quot;https://pic7.zhimg.com/v2-72a40716e3ef7af07b1dfb09add97554_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                    图3. DNN分类处理流程：将面部图像传递到CNN&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;                                                            训练系统&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;上述所有解决方案都包含了需要监督学习才能返回正确结果的模型。训练集是从站在摄像机前面的人们的图像构建的，或者拿着一个设备，并在其上显示他们的脸部。所有的面孔被裁剪并分成两组：真实的和假的。这些图像是由中等分辨率的800万像素相机拍摄的，这是一款在工业应用中使用的流行款式，三种方法都使用相同的训练集。&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic3.zhimg.com/80/v2-7dc88430a95e217f0c5d8dc979552862_hd.jpg&quot; alt=&quot;&quot; width=&quot;750&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;750&quot; data-rawheight=&quot;263&quot; data-original=&quot;https://pic3.zhimg.com/v2-7dc88430a95e217f0c5d8dc979552862_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7dc88430a95e217f0c5d8dc979552862_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                                                       训练集示例&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;                                                              比较结果&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对于性能测试，我们使用简单的精确度、召回率和F1分数。所有三个实验的结果显示在下表中：&lt;/p&gt;


&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic1.zhimg.com/80/v2-548cd5516f1ffe1d128dfcddbdaae089_hd.jpg&quot; alt=&quot;&quot; width=&quot;750&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;750&quot; data-rawheight=&quot;176&quot; data-original=&quot;https://pic1.zhimg.com/v2-548cd5516f1ffe1d128dfcddbdaae089_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-548cd5516f1ffe1d128dfcddbdaae089_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                                                准确性和性能总结&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic3.zhimg.com/80/v2-7371da779efaf17d45d2081b40090c93_hd.jpg&quot; alt=&quot;&quot; width=&quot;750&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;750&quot; data-rawheight=&quot;527&quot; data-original=&quot;https://pic3.zhimg.com/v2-7371da779efaf17d45d2081b40090c93_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-7371da779efaf17d45d2081b40090c93_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                                                            欺骗示例&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;下一步是什么？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;所呈现的最先进的解决方案仅适用于2D重放/视频攻击。为了增加对更多类型攻击的抵抗能力，DNN模型还可以通过使用纸质打印的攻击示例扩展训练数据来调整。另外，3D欺骗尝试可以通过附加传感器来处理（例如深度）。&lt;/p&gt;

&lt;p&gt;安全是一个不断变化的问题，因为一旦引入新的保护方法，攻击者就会不断发现新的方法来破坏系统，我们需要不断发明一些新的方法来对抗那些攻击者！&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 05:33:00 +0000</pubDate>
<dc:creator>网易云</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/163yun/p/8855450.html</dc:identifier>
</item>
<item>
<title>Git + Maven + Jenkins 实现自动化部署 - JMCui</title>
<link>http://www.cnblogs.com/jmcui/p/8821307.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jmcui/p/8821307.html</guid>
<description>&lt;h2&gt;一、安装 和 准备工作&lt;/h2&gt;
&lt;p&gt;    我们选择了用 Tomcat 服务器下 war 包的安装方式。Jenkins 的下载地址：&lt;span&gt;&lt;a href=&quot;http://mirrors.jenkins-ci.org/&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;http://mirrors.jenkins-ci.org/&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;，打开链接后，表格有war列。Releases行是短期更新包，LTS行是长期更新包。一般选择Releases下载即可。将下载完成的 war 包 放在 Tomcat 服务器的 webapps 目录下，然后启动服务器即可。建议单独用一台 Tomcat 服务器部署，方便管理。&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;1、&lt;/strong&gt;Tomcat 服务器运行起来后，用浏览器访问 &lt;strong&gt;http://ip地址:端口号/jenkins&lt;/strong&gt; 如下图：&lt;/p&gt;
&lt;p&gt;         &lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413145050744-60898540.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;2、&lt;/strong&gt;在 Linux 服务器上执行 &lt;strong&gt;cat /root/.jenkins/secrets/initialAdminPassword&lt;/strong&gt; 复制密码并粘贴：&lt;/p&gt;
&lt;p&gt;       &lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413145508613-779010275.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;3、&lt;/strong&gt;安装推荐的插件即可。插件安装完成后，可以创建一个管理员账户：&lt;/p&gt;
&lt;p&gt;        &lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413150037391-1877712014.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;  4、&lt;/strong&gt;创建用户后，进入Jenkins ，页面如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413150331831-564815109.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;5、&lt;/strong&gt;点击 &lt;strong&gt;系统管理 --&amp;gt; 管理插件 --&amp;gt; 可选插件&lt;/strong&gt; ，搜索 &lt;strong&gt;Maven Integration&lt;/strong&gt; （用来Maven 编译打包）和 &lt;strong&gt;Publish Over SSH&lt;/strong&gt; （用于远程服务器发布） 插件，安装完成后重启：&lt;strong&gt;http://IP地址:端口号/jenkins/restart&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413151207218-2055185217.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413151251862-982043565.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;6、&lt;/strong&gt;点击 &lt;strong&gt;系统管理 --&amp;gt; 全局工具配置&lt;/strong&gt;，安装配置好 JDK、Maven 和 Git。不会安装的自行百度...&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413161321658-636825695.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413161353985-2052862447.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413161429092-1061970146.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;tips&lt;/span&gt;&lt;span&gt;：安装好 git 后请把服务器公钥添加到 gitlab 服务器。&lt;/span&gt; &lt;/p&gt;
&lt;h2&gt;二、构建 Maven 项目 &lt;/h2&gt;
&lt;p&gt;    &lt;strong&gt;1、&lt;/strong&gt;输入任务名称，选择 &lt;strong&gt;构建一个 Maven 项目：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413162658615-1118805326.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413163045653-1955726872.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;2、源码管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413164026148-748539225.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;3、构建触发器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413164345065-1356528751.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;build whenever a snapshot dependency is built --&amp;gt;当job依赖的快照版本被build时，执行本job。&lt;br/&gt;build after other projects are built --&amp;gt;当本job依赖的job被build时，执行本job&lt;br/&gt;build periodically --&amp;gt;隔一段时间build一次，不管版本库代码是否发生变化，通常不会采用此种方式。&lt;br/&gt;poll scm --&amp;gt;隔一段时间比较一次源代码如果发生变更，那么就build。否则，不进行build，通常采用这种方式。&lt;/p&gt;
&lt;p&gt;这里我选择手动触发部署，所以没有勾选任何一项。&lt;/p&gt;
&lt;p&gt;    &lt;strong&gt;4、构建环境&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413164658330-1851687316.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Delete workspace before build starts --&amp;gt; 默认删除所有的,也可以设置删除特定的文件&lt;/p&gt;
&lt;p&gt;- Patterns for files to be deleted:正则匹配删除哪些文件&lt;br/&gt;- Apply pattern also on directories:规则是否也应用到文件夹&lt;br/&gt;- Check parameter:是否删除,是个bool值,true则删除,false不删除&lt;br/&gt;- External Deletion Command:执行外部删除命令&lt;/p&gt;
&lt;p&gt;Abort the build if it’s stuck --&amp;gt; 构建阻塞的时候,根据超时策略处理.&lt;/p&gt;
&lt;p&gt;- Time-out strategy:超时策略,有绝对时间,相对时间,根据以前的构建时间判断等&lt;br/&gt;- Time-out variable:超时时间&lt;br/&gt;- Time-out actions:超时后的处理,如终结,faile调或者写描述&lt;br/&gt;- Add timestamps to the Console Output:在输出界面添加时间戳&lt;br/&gt;- Use secret text(s) or file:使用密文,用于全局性的管理密码等,勾选后会在下方出现Binding,输入需要的用户名,密码证书等就可以了。&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;  5、Build&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180413165245033-732071372.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;     &lt;strong&gt;6、Post Steps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当Maven 编译打包完成后，接下来的工作就是 把 war包 解压到 Tomcat 服务器的 /webapps/ROOT 目录下，然后重启服务器。为此准备了两个脚本 deploy.sh (解压war包并重启服务器)，重启服务器 用到了另一个脚本 restart.sh 。接下来看一下这两个脚本的具体内容：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;deploy.sh&lt;/span&gt; &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;sh&lt;/span&gt;&lt;span&gt;

war&lt;/span&gt;=$&lt;span&gt;1&lt;/span&gt;&lt;span&gt;
bin&lt;/span&gt;=$(cd `&lt;span&gt;dirname&lt;/span&gt; $&lt;span&gt;0&lt;/span&gt;`; &lt;span&gt;pwd&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ ! -n &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${war}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;***Usage: $0 [project.war]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    exit &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;
&lt;span&gt;fi&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; [ ! -f &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${war}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;***Error: ${war} does not exist.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    exit &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;
&lt;span&gt;fi&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; [ ! &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${war##*.}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;war&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;***Error: ${war} is not a war file.&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
    exit &lt;/span&gt;&lt;span&gt;0&lt;/span&gt;
&lt;span&gt;fi&lt;/span&gt;

&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Deploy ${war##*/}...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;rm&lt;/span&gt; -rf ${bin}/../webapps/ROOT/&lt;span&gt;
cd ${bin}&lt;/span&gt;/../webapps &amp;amp;&amp;amp; &lt;span&gt;mkdir&lt;/span&gt; ROOT &amp;amp;&amp;amp;&lt;span&gt; cd ROOT
jar &lt;/span&gt;-&lt;span&gt;xvf ${war}
&lt;/span&gt;&lt;span&gt;rm&lt;/span&gt; -rf ${bin}/../work/Catalina/localhost/
&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Restart tomcat...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;sh&lt;/span&gt; ${bin}/restart.&lt;span&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;备注：1、deploy.sh会先清空tomcat下的ROOT目录，再将指定的war包加压至ROOT目录，最后执行restart.sh重启tomcat。&lt;/p&gt;
&lt;p&gt;          2、可以使用 unzip 命令 直接解压，但是我发现我们服务器上经常没有安装 unzip 这个软件，所以选择了如上的方式。&lt;/p&gt;
&lt;p&gt;          3、一键发布命令：./deploy.sh 项目war包    例如：./deploy.sh /home/test.war 。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;restart.sh&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;sh&lt;/span&gt;&lt;span&gt;

bin&lt;/span&gt;=$(cd `&lt;span&gt;dirname&lt;/span&gt; $&lt;span&gt;0&lt;/span&gt;`; &lt;span&gt;pwd&lt;/span&gt;&lt;span&gt;)
pid&lt;/span&gt;=$(&lt;span&gt;ps&lt;/span&gt; aux | &lt;span&gt;grep&lt;/span&gt; tomcat | &lt;span&gt;grep&lt;/span&gt; -v &lt;span&gt;grep&lt;/span&gt; | &lt;span&gt;grep&lt;/span&gt; -v restart | &lt;span&gt;grep&lt;/span&gt; ${bin} | &lt;span&gt;awk&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{print $2}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) 

&lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${pid}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Shutdown...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
    &lt;span&gt;sh&lt;/span&gt; ${bin}/shutdown.&lt;span&gt;sh&lt;/span&gt;
    &lt;span&gt;sleep&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;

    pid&lt;/span&gt;=$(&lt;span&gt;ps&lt;/span&gt; aux | &lt;span&gt;grep&lt;/span&gt; tomcat | &lt;span&gt;grep&lt;/span&gt; -v &lt;span&gt;grep&lt;/span&gt; | &lt;span&gt;grep&lt;/span&gt; -v restart | &lt;span&gt;grep&lt;/span&gt; ${bin} | &lt;span&gt;awk&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;{print $2}&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;${pid}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
        &lt;span&gt;kill&lt;/span&gt; -&lt;span&gt;9&lt;/span&gt;&lt;span&gt; ${pid}
        &lt;/span&gt;&lt;span&gt;sleep&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;
    &lt;span&gt;fi&lt;/span&gt;
&lt;span&gt;fi&lt;/span&gt;

&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Startup...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;span&gt;sh&lt;/span&gt; ${bin}/startup.&lt;span&gt;sh&lt;/span&gt;
&lt;span&gt;if&lt;/span&gt; [ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;$1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-v&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;
    &lt;span&gt;tail&lt;/span&gt; -f -n &lt;span&gt;600&lt;/span&gt; ${bin}/../logs/&lt;span&gt;catalina.out
&lt;/span&gt;&lt;span&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;备注：1、restart.sh是用来重启tomcat的，如果tomcat没有启动则直接启动，如果已经启动就先shutdown再启动，如果shutdown之后3s没有停掉tomcat进程，则kill掉原来的进程再启动。&lt;/p&gt;
&lt;p&gt;          2、如需重启tomcat则使用命令：./restart.sh 或 ./restart.sh -v （参数-v表示启动时打印tomcat启动日志）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实施方案&lt;/strong&gt;： 把 deploy.sh 和 restart.sh 拷贝到 Tomcat 的bin目录下，再用chmod +x 给这两个脚本赋上可执行权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本地部署方案：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180416114520081-1743051383.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0fef6295-6e43-4369-a1ac-1c8e1c121723')&quot; readability=&quot;31.5&quot;&gt;&lt;img id=&quot;code_img_closed_0fef6295-6e43-4369-a1ac-1c8e1c121723&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0fef6295-6e43-4369-a1ac-1c8e1c121723&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0fef6295-6e43-4369-a1ac-1c8e1c121723',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0fef6295-6e43-4369-a1ac-1c8e1c121723&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
#!/bin/&lt;span&gt;sh&lt;/span&gt;&lt;span&gt;
export BUILD_ID&lt;/span&gt;=&lt;span&gt;qianxx
&lt;/span&gt;&lt;span&gt;sh&lt;/span&gt; /home/wwwroot/t8_8280_passenger/bin/deploy.&lt;span&gt;sh&lt;/span&gt; ${WORKSPACE}/target&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;.war&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;远程服务器部署方案：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;添加服务器&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;系统管理&lt;/strong&gt; --&amp;gt; &lt;strong&gt;系统设置&lt;/strong&gt; --&amp;gt;&lt;strong&gt; Publish over SSH&lt;/strong&gt; ，服务器配置如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180416124757174-1005531163.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2. 工程中配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1153954/201804/1153954-20180416125755531-1465208439.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('0d0ac534-7e77-4359-a151-5ebce80ca621')&quot; readability=&quot;31&quot;&gt;&lt;img id=&quot;code_img_closed_0d0ac534-7e77-4359-a151-5ebce80ca621&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_0d0ac534-7e77-4359-a151-5ebce80ca621&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('0d0ac534-7e77-4359-a151-5ebce80ca621',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_0d0ac534-7e77-4359-a151-5ebce80ca621&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
/home/wwwroot/t8_8180_common/bin/deploy.&lt;span&gt;sh&lt;/span&gt; /root/common&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;.war&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 16 Apr 2018 05:10:00 +0000</pubDate>
<dc:creator>JMCui</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jmcui/p/8821307.html</dc:identifier>
</item>
<item>
<title>Django REST framework+Vue 打造生鲜超市（九） - zhang_derek</title>
<link>http://www.cnblogs.com/derek1184405959/p/8846501.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/derek1184405959/p/8846501.html</guid>
<description>&lt;h2&gt;十、购物车、订单管理和支付功能&lt;/h2&gt;
&lt;h3&gt; &lt;span&gt;10.1.添加商品到购物车&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）trade/serializer.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; trade/serializer.py&lt;/span&gt;
&lt;span&gt;__author__&lt;/span&gt; = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;derek&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; .models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; ShoppingCart
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; rest_framework &lt;span&gt;import&lt;/span&gt;&lt;span&gt; serializers
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; goods.models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Goods

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShopCartSerializer(serializers.Serializer):
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;获取当前登录的用户&lt;/span&gt;
    user =&lt;span&gt; serializers.HiddenField(
        default&lt;/span&gt;=&lt;span&gt;serializers.CurrentUserDefault()
    )
    nums &lt;/span&gt;= serializers.IntegerField(required=True, label=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;数量&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,min_value=1&lt;span&gt;,
                                    error_messages&lt;/span&gt;=&lt;span&gt;{
                                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;min_value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;:&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;商品数量不能小于一&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                                        &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;required&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;: &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请选择购买数量&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                                    })
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;这里是继承Serializer，必须指定queryset对象，如果继承ModelSerializer则不需要指定&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;goods是一个外键，可以通过这方法获取goods object中所有的值&lt;/span&gt;
    goods = serializers.PrimaryKeyRelatedField(required=True, queryset=&lt;span&gt;Goods.objects.all())

    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;继承的Serializer没有save功能，必须写一个create方法&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; create(self, validated_data):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; validated_data是已经处理过的数据&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt;获取当前用户&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; view中:self.request.user；serizlizer中:self.context[&quot;request&quot;].user&lt;/span&gt;
        user = self.context[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;request&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;].user
        nums &lt;/span&gt;= validated_data[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;nums&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]
        goods &lt;/span&gt;= validated_data[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;goods&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]

        existed &lt;/span&gt;= ShoppingCart.objects.filter(user=user, goods=&lt;span&gt;goods)
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;如果购物车中有记录，数量+1&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt;如果购物车车没有记录，就创建&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;&lt;span&gt; existed:
            existed &lt;/span&gt;=&lt;span&gt; existed[0]
            existed.nums &lt;/span&gt;+=&lt;span&gt; nums
            existed.save()
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;添加到购物车&lt;/span&gt;
            existed = ShoppingCart.objects.create(**&lt;span&gt;validated_data)

        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; existed
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）trade/views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; trade/views.py&lt;/span&gt;

&lt;span&gt;from&lt;/span&gt; rest_framework &lt;span&gt;import&lt;/span&gt;&lt;span&gt; viewsets
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; rest_framework.permissions &lt;span&gt;import&lt;/span&gt;&lt;span&gt; IsAuthenticated
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; utils.permissions &lt;span&gt;import&lt;/span&gt;&lt;span&gt; IsOwnerOrReadOnly
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; rest_framework_jwt.authentication &lt;span&gt;import&lt;/span&gt;&lt;span&gt; JSONWebTokenAuthentication
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; rest_framework.authentication &lt;span&gt;import&lt;/span&gt;&lt;span&gt; SessionAuthentication
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; .serializers &lt;span&gt;import&lt;/span&gt;&lt;span&gt; ShopCartSerializer
&lt;/span&gt;&lt;span&gt;from&lt;/span&gt; .models &lt;span&gt;import&lt;/span&gt;&lt;span&gt; ShoppingCart

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShoppingCartViewset(viewsets.ModelViewSet):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    购物车功能
    list:
        获取购物车详情
    create：
        加入购物车
    delete：
        删除购物记录
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    permission_classes &lt;/span&gt;=&lt;span&gt; (IsAuthenticated, IsOwnerOrReadOnly)
    authentication_classes &lt;/span&gt;=&lt;span&gt; (JSONWebTokenAuthentication, SessionAuthentication)

    serializer_class &lt;/span&gt;=&lt;span&gt; ShopCartSerializer

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_queryset(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; ShoppingCart.objects.filter(user=self.request.user
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）配置url&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 配置购物车的url&lt;/span&gt;
router.register(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;shopcarts&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, ShoppingCartViewset, base_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;shopcarts&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt; &lt;span&gt;&lt;strong&gt;&lt;span&gt;10.1.添加购物车数量&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Serializer继承BaseSerializer，但是Seriazer中并没有重新update方法，所有添加一个update方法&lt;/p&gt;
&lt;p&gt;trade/serializer.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;def&lt;/span&gt;&lt;span&gt; update(self, instance, validated_data):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 修改商品数量&lt;/span&gt;
        instance.nums = validated_data[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;nums&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]
        instance.save()
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; instance
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在view中要把商品id传过去&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 lookup_field = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;goods_id&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;10.3.vue和购物车接口联调&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;购物车中可以看商品详情，需要写一个商品详情的serializer,所有在view中需要动态设置serializer&lt;/p&gt;
&lt;p&gt;（1）trade/serializer.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; ShopCartDetailSerializer(serializers.ModelSerializer):
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;
    购物车商品详情信息
    &lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 一个购物车对应一个商品&lt;/span&gt;
    goods = GoodsSerializer(many=False, read_only=&lt;span&gt;True)
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; ShoppingCart
        fields &lt;/span&gt;= (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;goods&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;nums&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）trade/views.py&lt;/p&gt;
&lt;p&gt;需要动态选择serializer&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_serializer_class(self):
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; self.action == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; ShopCartDetailSerializer
        &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; ShopCartSerializer
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;10.4.订单管理接口&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;（1）trade/serializer.py&lt;/p&gt;
&lt;p&gt;用户添加商品到购物车，点去购物车结算，填上地址留言，结算生成订单，在会员中心我的订单里面，可以看到订单列表，点订单可以看到订单的详细信息。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt;订单中的商品&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderGoodsSerialzier(serializers.ModelSerializer):
    goods &lt;/span&gt;= GoodsSerializer(many=&lt;span&gt;False)
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; OrderGoods
        fields &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;__all__&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;#&lt;/span&gt;&lt;span&gt;订单商品信息&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; goods字段需要嵌套一个OrderGoodsSerializer&lt;/span&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderDetailSerializer(serializers.ModelSerializer):
    goods &lt;/span&gt;= OrderGoodsSerialzier(many=&lt;span&gt;True)
    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; OrderInfo
        fields &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;__all__&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderSerializer(serializers.ModelSerializer):
    user &lt;/span&gt;=&lt;span&gt; serializers.HiddenField(
        default&lt;/span&gt;=&lt;span&gt;serializers.CurrentUserDefault()
    )
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成订单的时候这些不用post&lt;/span&gt;
    pay_status = serializers.CharField(read_only=&lt;span&gt;True)
    trade_no &lt;/span&gt;= serializers.CharField(read_only=&lt;span&gt;True)
    order_sn &lt;/span&gt;= serializers.CharField(read_only=&lt;span&gt;True)
    pay_time &lt;/span&gt;= serializers.DateTimeField(read_only=&lt;span&gt;True)
    nonce_str &lt;/span&gt;= serializers.CharField(read_only=&lt;span&gt;True)
    pay_type &lt;/span&gt;= serializers.CharField(read_only=&lt;span&gt;True)


    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; generate_order_sn(self):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;生成订单号&lt;/span&gt;
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 当前时间+userid+随机数&lt;/span&gt;
        &lt;span&gt;from&lt;/span&gt; random &lt;span&gt;import&lt;/span&gt;&lt;span&gt; Random
        random_ins &lt;/span&gt;=&lt;span&gt; Random()
        order_sn &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{time_str}{userid}{ranstr}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;.format(time_str=time.strftime(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%Y%m%d%H%M%S&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;),
                                                       userid&lt;/span&gt;=self.context[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;request&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;].user.id,
                                                       ranstr&lt;/span&gt;=random_ins.randint(10, 99&lt;span&gt;))
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; order_sn

    &lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; validate(self, attrs):
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;validate中添加order_sn，然后在view中就可以save&lt;/span&gt;
        attrs[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;order_sn&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;] =&lt;span&gt; self.generate_order_sn()
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; attrs

    &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Meta:
        model &lt;/span&gt;=&lt;span&gt; OrderInfo
        fields &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;__all__&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（2）trade/views.py&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;class&lt;/span&gt;&lt;span&gt; OrderViewset(mixins.ListModelMixin, mixins.RetrieveModelMixin, mixins.CreateModelMixin, mixins.DestroyModelMixin,
                   viewsets.GenericViewSet):
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    订单管理
    list:
        获取个人订单
    delete:
        删除订单
    create：
        新增订单
    &lt;/span&gt;&lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span&gt;
    permission_classes &lt;/span&gt;=&lt;span&gt; (IsAuthenticated, IsOwnerOrReadOnly)
    authentication_classes &lt;/span&gt;=&lt;span&gt; (JSONWebTokenAuthentication, SessionAuthentication)
    serializer_class &lt;/span&gt;=&lt;span&gt; OrderSerializer
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;动态配置serializer&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_serializer_class(self):
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; self.action == &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;retrieve&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; OrderDetailSerializer
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; OrderSerializer
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;获取订单列表&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; get_queryset(self):
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; OrderInfo.objects.filter(user=&lt;span&gt;self.request.user)
    
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;在订单提交保存之前还需要多两步步骤，所以这里自定义perform_create方法&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;1.将购物车中的商品保存到OrderGoods中&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;2.清空购物车&lt;/span&gt;
    &lt;span&gt;def&lt;/span&gt;&lt;span&gt; perform_create(self, serializer):
        order &lt;/span&gt;=&lt;span&gt; serializer.save()
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 获取购物车所有商品&lt;/span&gt;
        shop_carts = ShoppingCart.objects.filter(user=&lt;span&gt;self.request.user)
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; shop_cart &lt;span&gt;in&lt;/span&gt;&lt;span&gt; shop_carts:
            order_goods &lt;/span&gt;=&lt;span&gt; OrderGoods()
            order_goods.goods &lt;/span&gt;=&lt;span&gt; shop_cart.goods
            order_goods.goods_num &lt;/span&gt;=&lt;span&gt; shop_cart.nums
            order_goods.order &lt;/span&gt;=&lt;span&gt; order
            order_goods.save()
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;清空购物车&lt;/span&gt;
&lt;span&gt;            shop_cart.delete()
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; order
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（3）配置url&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 配置订单的url&lt;/span&gt;
router.register(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;orders&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, OrderViewset, base_name=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;orders&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201804/1299879-20180415133326309-609995804.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201804/1299879-20180415133553662-1951813812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1299879/201804/1299879-20180415134014292-1093814350.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 16 Apr 2018 04:08:00 +0000</pubDate>
<dc:creator>zhang_derek</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/derek1184405959/p/8846501.html</dc:identifier>
</item>
<item>
<title>当我们谈重构的时候我们想谈什么？ - 旁观者</title>
<link>http://www.cnblogs.com/zhengyun_ustc/p/refactoring.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhengyun_ustc/p/refactoring.html</guid>
<description>&lt;p&gt;&lt;span&gt;郑昀 20180411&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果你在繁忙的业务迭代中开始系统重构，恭喜你，说明你的业务已经完成了从0到1，正在从1走向10，或者从10走向100。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;至于重构后的技术栈是 Spring MVC+Dubbo，还是 Spring Boot+Spring Cloud？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;是 Vue+ElementUI，是 React，还是 Ant.design，抑或就是上古时代的 JQuery+Bootstrap？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;是 k8s，还是 mesos+marathon？是 Thrift，还是 Hessian，抑或 Protobuf？我并不在意。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我并不 care 这些东西，每个技术团队都可以有自己的技术选型思路。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我在意的是&lt;strong&gt;两个“是否有利于”：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一，是否有利于发布部署。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;二，是否有利于排除故障（是否有利于快速定位线上问题和解决问题）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;为什么要强调它俩？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因为我们在过去六七年间，经历了太多的生死折磨。如履薄冰如临深渊。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们曾是做本地生活服务电商的，餐饮/电影/酒店/景点门票/美容美发……&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;节假日往往也是本地生活服务的峰值日，饭点儿就相当于秒杀。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;太多次在假期被召回。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;太多次打电话给各个 TeamLeader，有时电脑不在身边，有时深山老林无法上网，有时无人接听，有时 VPN 连不进去～&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;多少次翘首期盼 DBA、SA、QA、DevManager 们给我回报到底出啥事儿了。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;请先阅读一下我写的《&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//www.cnblogs.com/zhengyun_ustc/p/resistless.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;经历不可抗力是一种什么体验&lt;/a&gt;》，了解一下什么是 too young too naive。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;以至于我有两个怨念：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;怨念一，Centreon 烂到渣，Zabbix 也不咋的，基础运维的那些神兵利器，都不考虑做业务的人，尤其是业务集群规模庞大的人，到底是怎么排查问题排除故障的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;SA 是怎么工作的？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;一旦出现连接数暴涨，Web/App 服务长时间无响应，应用内存飙升，SA 拍马赶到，一定是先重启相关应用（不管是容器还是虚拟机），如果还不管用，就立即将相关应用悉数回滚到上一个稳定版本上，争取以最短时间恢复。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;等研发介入时，现场已经不复存在。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;六七年前，事发后，我们登入 Centreon 和 ELK，按机器组、按机器、按指标，用肉眼，用大脑，结合各个业务集群里的日志，结合 Nagios 报警短信，理出来一个因果证据链。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可能需要打开几百个监控页面，你还需要精通业务集群的分组、调用关系和IP（那时候还没有 Docker 容器，都是虚拟机）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这也就是为什么我定下&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//www.cnblogs.com/zhengyun_ustc/p/philosophy.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;我司研发哲学&lt;/a&gt;第一条：Don't make me think……&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;怨念二，开源软件的开发者是好人也往往是性情中人，不太考虑排除故障成本低、可视化、高可用、可伸缩、监控报警等商业系统必备的运维属性，拿来主义必死无葬身之地。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;举个例子吧，ActiveMQ 和 RabbitMQ 有&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//www.cnblogs.com/zhengyun_ustc/archive/2012/08/25/flowcontrol.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;生产者流量控制&lt;/a&gt;，如果你没有听说过，没有遇到过，恭喜你，但也表明你的业务量还是太小。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;你可能会说，遇到了生产者流量控制，说明下游消费者消费得太慢，加快速度不就完了？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在电商服务中，异步消息队列的消费者往往是与第三方系统网络通讯，第三方系统可就不在你控制范围之内了，一个第三方系统挂了，或者突然拥塞，就会憋住你的消费者集群的所有线程，造成消息积压。因此就将上游生产者挂起？开玩笑呢吧？！咋想的这都是？让灾难从下游蔓延到上游？！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;那么我们应该怎么思考系统重构呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;随着业务规模越来越大，随着应用越来越多，随着 Docker 容器集群的引入，随着前后端分离导致内部接口越来越多，随着 API 网关的引入，我们越来越难以在5分钟之内断定系统出了什么事儿。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此，我要求：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;戒律一：凡是中间件，不管是自主研发的，还是以开源软件为内核构建出来的，都必须自带监控报警，否则不允许上线。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;戒律二：本着 Don't make me think 的哲学思路，所有对排除故障有帮助的信息，都必须一站式展示在交互界面上，也就是在中间件的控制台上，或运维自动化平台上，或研发协作平台上。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面举一些具体的例子，帮助大家理解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我司的技术支撑体系如下图所示（或&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//images.cnblogs.com/cnblogs_com/zhengyun_ustc/255879/o_%25E6%258A%2580%25E6%259C%25AF%25E6%2594%25AF%25E6%2592%2591%25E4%25BD%2593%25E7%25B3%25BB.png&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;点击查看原图&lt;/a&gt;）：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114124659-823902959.png&quot; alt=&quot;&quot; width=&quot;816&quot; height=&quot;334&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;其中：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1，定时任务管理与调度平台有运行情况展示，自带监控报警：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114205569-876046676.png&quot; alt=&quot;&quot; width=&quot;839&quot; height=&quot;170&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2，异步消息可靠推送系统有可视化的内部详情展示，自带监控报警：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114232437-1565639624.png&quot; alt=&quot;&quot; width=&quot;609&quot; height=&quot;338&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;3，分布式并行计算调度与管理平台一站式展示工作流下每一个任务在所有节点上的运行日志，并自带监控报警：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114313672-1880964782.png&quot; alt=&quot;&quot; width=&quot;699&quot; height=&quot;321&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;4，大数据协作平台自带监控报警：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114338029-100507159.png&quot; alt=&quot;&quot; width=&quot;701&quot; height=&quot;476&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;5，我们甚至要把所有 PC 客户端，所有智能设备都监管起来：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114402656-1033894709.png&quot; alt=&quot;&quot; width=&quot;756&quot; height=&quot;275&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;6，研发协作平台一站式展示应用部署的方方面面：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114429877-967217485.png&quot; alt=&quot;&quot; width=&quot;728&quot; height=&quot;177&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;可以说我们打造的每一个中间件、协作平台都体现了戒律一和戒律二。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不需要东奔西走，四处收集蛛丝马迹。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不需要一次性点开几百个指标页面，脑补推演。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不需要精通集群部署结构。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;不需要熟知应用日志的路径。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对，这就是为我这样的“旁观者”、“小白”准备的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有了这些系统，即使大家都出去玩了，我一个人也能看出问题所在，同时也能有效应对铁打营盘流水兵的情况。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当你完成了从0到1的跨越，正在从1走向10，走向100，请记住下面的忠言：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;两个“是否有利于”：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一，是否有利于发布部署。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;二，是否有利于排除故障（是否有利于快速定位问题和解决问题）。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;两个戒律：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;戒律一：凡是中间件，不管是自主开发的，还是以开源软件为内核构建出来的，都必须自带监控报警，否则不允许上线。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;戒律二：本着 Don't make me think 的哲学思路，所有对排除故障有帮助的信息，都必须一站式展示在交互界面上，也就是中间件的控制台上，或运维自动化平台上，或研发协作平台上。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;-EOF-&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;欢迎订阅我的微信订阅号『老兵笔记』&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img class=&quot;content_image lazy&quot; src=&quot;https://pic1.zhimg.com/80/098dcdc734c32da18eab239d8dbb781b_hd.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-actualsrc=&quot;https://pic1.zhimg.com/098dcdc734c32da18eab239d8dbb781b_b.jpg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;赠图一枚：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;生活和你～&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;RichText-gifPlaceholder&quot;&gt;
&lt;div class=&quot;GifPlayer&quot; data-reactroot=&quot;&quot; data-size=&quot;normal&quot; data-za-detail-view-path-module=&quot;GifItem&quot;&gt;&lt;span&gt;&lt;img class=&quot;column-gif&quot; src=&quot;https://pic3.zhimg.com/v2-299fbd33e4c8089bbe0fd13e6cac8f50_b.jpg&quot; alt=&quot;&quot; data-thumbnail=&quot;https://pic3.zhimg.com/v2-299fbd33e4c8089bbe0fd13e6cac8f50_b.jpg&quot; data-size=&quot;normal&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/7438/201804/7438-20180416114509313-1488730930.gif&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;语录两条：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;王志安：“这叫调查？这叫武汉理工大学好吗！”于是评论纷纷打蛇随棍上：“对，武理取闹！”#新词发现#&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2，&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;有一种离职叫『弃船逃生』：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;『2011年在百度浏览器团队时，遇到几件让人印象深刻的事情。有一次开会，产品拿出Google某个产品的DEMO，里面有一段很酷炫的 3D 效果，要求开发加上，只给2天时间。大家目瞪口呆。后续，开发为了赶节奏，导致非常多的bug，又为了修改bug，leader将所有的bug按照人员平均分配，导致不同模块间的同学相互修改……实在难以想象，好比让做花卷的厨子，去修改西湖醋鱼的味道。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最初的现象是：bug下降得慢，进而bug反而增加，每个人都累得半死，代码风格极其杂乱，为了赶工引入的临时方案层出不穷。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到了中期：人员离职越来也多，代码难以维护，新加的需求与之前的临时方案冲突。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;到了后期：想做一些修复，想调整架构，又要保证正常运行，其难度好比在一架飞行中的飞机上拆换零件。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然后我也急忙离职了……实在是看不到成功的可能性。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;后来到了腾讯的团队，感觉流程就规范多了。需求和bug有Tapd跟踪，产品发布按照节奏，需求提出前会和开发反复讨论可行性，有专门的质量跟踪，有专门的用户反馈，每天知道要做什么，也知道明天要做什么。有产品需求，也有开发需求！这个非常重要。很多团队，都是只有产品需求，开发好像牛一样，耕完地就不管了？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;流程其实没那么复杂，就是各司其责+节奏。』——&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35076829&quot; target=&quot;_blank&quot;&gt;https://zhuanlan.zhihu.com/p/35076829&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 03:51:00 +0000</pubDate>
<dc:creator>旁观者</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhengyun_ustc/p/refactoring.html</dc:identifier>
</item>
<item>
<title>从让 HTTPS 更安全出发，聊聊 HTTPS - 又拍云</title>
<link>http://www.cnblogs.com/upyun/p/8855155.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/upyun/p/8855155.html</guid>
<description>&lt;p&gt;随着公众对网络安全的日益关注，各种网络安全防护手段层出不穷。HTTPS Everywhere作为提升HTTPS安全性的有效手段，日前安全性与实用性再次得到了加强。&lt;/p&gt;
&lt;p&gt;HTTPS虽然可以有效提升用户浏览网页的安全性，可是仍有问题存在会成为黑客窃取数据的漏洞。&lt;/p&gt;
&lt;p&gt;针对现在HTTPS存在的部分缺陷，我们可以用浏览器插件进行补足，比如Chrome商店的HTTPS Everywhere ，能有效降低用户上网风险，但由于HTTPS Everywhere的扩展和规则是一体的，导致用户必须频繁更新到最新版的插件，影响用户的使用。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，EFF（电子前哨基金会）将会将规则集与扩展剥离，从而实现可持续的更新。扩展安装后，它会经常性地检查列表，并在可用时下载最新的列表。&lt;/p&gt;
&lt;p&gt;通过这个方法可以将HTTPS的安全性再次提升，看到这里有的读者就要问了，HTTPS是什么，它为什么可以保护我们的数据安全？&lt;/p&gt;
&lt;h2&gt;HTTPS 是什么&lt;/h2&gt;
&lt;p&gt;HTTPS（Hypertext Transfer Protocol Secure ）是一种以计算机网络安全通信为目的的传输协议。在HTTP下加入了SSL层，从而具有了保护交换数据隐私和完整性和提供对网站服务器身份认证的功能，简单来说它就是安全版的 HTTP 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/585973/201804/585973-20180416114701624-1253952575.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;△ HTTP、HTTPS 差异&lt;/p&gt;
&lt;h2&gt;HTTPS 访问过程&lt;/h2&gt;
&lt;p&gt;HTTPS在进行数据传输之前会与网站服务器和Web浏览器进行一次握手，在握手时确定双方的加密密码信息。&lt;/p&gt;
&lt;p&gt;具体过程如下：&lt;/p&gt;
&lt;p&gt;1. Web 浏览器将支持的加密信息发送给网站服务器；&lt;/p&gt;
&lt;p&gt;2. 网站服务器会选择出一套加密算法和哈希算法，将验证身份的信息以证书（证书发布CA机构、证书有效期、公钥、证书所有者、签名等）的形式发送给Web浏览器；&lt;/p&gt;
&lt;p&gt;3. 当 Web 浏览器收到证书之后首先需要验证证书的合法性，如果证书受到浏览器信任则在浏览器地址栏会有标志显示，否则就会显示不受信的标识。当证书受信之后，Web 浏览器会随机生成一串密码，并使用证书中的公钥加密。之后就是使用约定好的哈希算法握手消息，并生成随机数对消息进行加密，再将之前生成的信息发送给网站；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/585973/201804/585973-20180416114836583-433774474.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;4. 当网站服务器接收到浏览器发送过来的数据后，会使用网站本身的私钥将信息解密确定密码，然后通过密码解密Web浏览器发送过来的握手信息，并验证哈希是否与Web浏览器一致。然后服务器会使用密码加密新的握手信息，发送给浏览器；&lt;/p&gt;
&lt;p&gt;5. 最后浏览器解密并计算经过哈希算法加密的握手消息，如果与服务发送过来的哈希一致，则此握手过程结束后，服务器与浏览器会使用之前浏览器生成的随机密码和对称加密算法进行加密交换数据。&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;origin_image zh-lightbox-thumb lazy&quot; src=&quot;https://pic1.zhimg.com/80/v2-20dedd39046cff11d5f3e112999879b2_hd.jpg&quot; alt=&quot;&quot; width=&quot;567&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;567&quot; data-rawheight=&quot;362&quot; data-original=&quot;https://pic1.zhimg.com/v2-20dedd39046cff11d5f3e112999879b2_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-20dedd39046cff11d5f3e112999879b2_b.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;△ HTTPS 握手过程&lt;/p&gt;
&lt;h2&gt;HTTPS 加密算法&lt;/h2&gt;
&lt;p&gt;为了保护数据的安全，HTTPS 运用了诸多加密算法：&lt;/p&gt;
&lt;p&gt;1、对称加密：有流式、分组两种，加密和解密都是使用的同一个密钥。&lt;/p&gt;
&lt;p&gt;例如：DES、AES-GCM、ChaCha20-Poly1305 等。&lt;/p&gt;
&lt;p&gt;2、非对称加密：加密使用的密钥和解密使用的密钥是不相同的，分别称为：公钥、私钥，公钥和算法都是公开的，私钥是保密的。非对称加密算法性能较低，但是安全性超强，由于其加密特性，非对称加密算法能加密的数据长度也是有限的。&lt;/p&gt;
&lt;p&gt;例如：RSA、DSA、ECDSA、 DH、ECDHE 等。&lt;/p&gt;
&lt;p&gt;3、哈希算法：将任意长度的信息转换为较短的固定长度的值，通常其长度要比信息小得多，且算法不可逆。&lt;/p&gt;
&lt;p&gt;例如：MD5、SHA-1、SHA-2、SHA-256 等。&lt;/p&gt;
&lt;p&gt;4、数字签名：签名就是在信息的后面再加上一段内容（信息经过 hash 后的值），可以证明信息没有被修改过。hash 值一般都会加密后（也就是签名）再和信息一起发送，以保证这个 hash 值不被修改。&lt;/p&gt;
&lt;h2&gt;HTTPS 网络访问安全性提升（社区版）&lt;/h2&gt;
&lt;p&gt;除了EFF、Google等组织在让HTTPS更安全之外，又拍云也一直致力于提升HTTPS的安全性。&lt;/p&gt;
&lt;p&gt;时至今日，又拍云HTTPS已经支持多种功能，感兴趣的朋友可以了解一下哦！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP/2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/227/%25E4%25B8%2580%25E6%2596%2587%25E8%25AF%25BB%25E6%2587%2582%2520HTTP%252F2%2520%25E7%2589%25B9%25E6%2580%25A7.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;一文读懂 HTTP/2 特性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLS 1.3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/276/%25E5%258F%2588%25E6%258B%258D%25E4%25BA%2591%2520CDN%2520%25E6%25AD%25A3%25E5%25BC%258F%25E6%2594%25AF%25E6%258C%2581%2520TLS%25201.3%2520%25E5%258A%25A0%25E5%25AF%2586%25E5%258D%258F%25E8%25AE%25AE%25EF%25BC%258C%25E4%25B8%2580%25E9%2594%25AE%25E5%25BC%2580%25E5%2590%25AF%25E6%259E%2581%25E9%2580%259F%2520HTTPS%2520%25E4%25BD%2593%25E9%25AA%258C.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;又拍云 CDN 正式支持 TLS 1.3 加密协议，一键开启极速 HTTPS 体验&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HSTS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/242/%25E4%25BB%258E%2520HTTP%2520%25E5%2588%25B0%2520HTTPS%2520%25E5%2586%258D%25E5%2588%25B0%2520HSTS.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;从 HTTP 到 HTTPS 再到 HSTS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ChaCha20-Poly1305&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/239/%2520%25E8%25AF%25A6%25E8%25A7%25A3%2520HTTPS%2520%25E7%25A7%25BB%25E5%258A%25A8%25E7%25AB%25AF%25E5%25AF%25B9%25E7%25A7%25B0%25E5%258A%25A0%25E5%25AF%2586%25E5%25A5%2597%25E4%25BB%25B6%25E4%25BC%2598%25E5%258C%2596.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;详解 HTTPS 移动端对称加密套件优化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLS Record Size&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//tech.upyun.com/article/258/HTTPS%2520%25E4%25BC%25A0%25E8%25BE%2593%25E4%25BC%2598%25E5%258C%2596%25E8%25AF%25A6%25E8%25A7%25A3%25E4%25B9%258B%25E5%258A%25A8%25E6%2580%2581%2520TLS%2520Record%2520Size.html&quot; rel=&quot;nofollow noreferrer&quot; target=&quot;_blank&quot; data-za-detail-view-id=&quot;1043&quot;&gt;HTTPS 传输优化详解之动态 TLS Record Size&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 03:48:00 +0000</pubDate>
<dc:creator>又拍云</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/upyun/p/8855155.html</dc:identifier>
</item>
<item>
<title>使用Swoole测试MySQL在特定SQL下的并发性能 - dormscript</title>
<link>http://www.cnblogs.com/dormscript/p/8855137.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dormscript/p/8855137.html</guid>
<description>&lt;h2 id=&quot;场景描述&quot;&gt;场景描述&lt;/h2&gt;
&lt;ul readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;从全文检索或者缓存中获取ID，根据ID查询数据库获取基础信息，进行页面展示&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;SQL：select * from table where id in(id1,id2,id3...id40)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;此种场景的常规方案是将id对应的基础信息在redis中缓存一份，mysql只是做为后端存储。我们做如下测试就是尝试mysql是否可应对这种查询场景。然而根本原因是DBA告诉我，现在MySQL性能已经极其厉害。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;数据量说明&quot;&gt;数据量说明&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;1.8亿条数据&lt;/li&gt;
&lt;li&gt;使用Oneproxy分为200个数据表(200个表在同一台机器）&lt;/li&gt;
&lt;li&gt;因为id是随机的，查询时oneproxy会将查询分散到所有后端MySql&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;性能指标&quot;&gt;性能指标&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;并发数&lt;/li&gt;
&lt;li&gt;每次查询的响应时间&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;mysql服务器&quot;&gt;MySql服务器&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;腾讯云提供的MySQL服务&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;mysql的具体配置不在这里列举，即下面的性能报告只是特定场景下的性能分析，不代表mysql的“真实”性能。&lt;strong&gt;&lt;em&gt;本文核心是提供一种测试方法，而不是单纯的提供一份数据报告 。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;测试程序简介&quot;&gt;测试程序简介&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;基础：php、swoole协程&lt;/li&gt;
&lt;li&gt;使用协程控制程序的并发数，每个协程中执行一次查询。当一次查询完成，管道通知开始新的查询。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;程序代码&quot;&gt;程序代码&lt;/h2&gt;
&lt;p&gt;mysql_test.php&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;?php
ini_set('memory_limit', '1280M'); //协程会耗费较多的内存

define('MAX_MYSQLPOOL_NUM', $argv['1']); //mysql最大连接数，即并发数
define('TESTCOUNT', $argv['2']);  //一共的测试次数

$mysqlconf = [
    'host' =&amp;gt; '127.0.0.1',
    'port' =&amp;gt; 3307,
    'user' =&amp;gt; 'root',
    'password' =&amp;gt; '123456',
    'database' =&amp;gt; '',
    'timeout' =&amp;gt; 10
];

Swoole\Coroutine::create(function () use ($mysqlconf) {
    $stime = microtime(true); //程序开始时间

    $pool = new MysqlPool($mysqlconf); 
    $chan = new chan(MAX_MYSQLPOOL_NUM); //并发数，协程间使用channel通信

    for($i = 1; $i&amp;lt; TESTCOUNT + MAX_MYSQLPOOL_NUM; $i++) {
        $chan-&amp;gt;push('x');
        Swoole\Coroutine::create(function() use($pool, $chan, $i) {
            //测试的业务逻辑开始
            $conn = $pool-&amp;gt;get();
            if($conn) {
                $sql = &quot;select /* parallel */ * from table where id in (&quot;.implode(',', getRandpid()).')';
                $time1 = microtime(true);
                $conn-&amp;gt;query($sql);
                $time2 = microtime(true);

                if($i % intval(TESTCOUNT / 10) == 0) { //输出执行的进度
                    echo &quot;\n finish $i / &quot;.TESTCOUNT; 
                }
                $pool-&amp;gt;put($conn, (($time2 - $time1) * 1000)); //每次查询耗时就不单独做实例，直接修改连接池类做简单统计
            } else {
                echo &quot;\n connect mysql fail，跳过SQL&quot;;
            }
            //业务逻辑结束
            $chan-&amp;gt;pop();
        });
    }
    $etime = microtime(true);
    echo &quot;\n ============执行结果=============&quot;;
    echo &quot;\n 并发数量： &quot;.MAX_MYSQLPOOL_NUM;
    echo &quot;\n 查询次数： &quot;.TESTCOUNT;
    echo &quot;\n 执行总耗时： &quot;.intval($etime - $stime).&quot;秒\n&quot;;
    
    echo &quot;\n QPS (查询次数/总耗时) :&quot;. intval((TESTCOUNT / ($etime - $stime)));
    echo &quot;\n 每次查询耗时平均值：&quot;.intval($pool-&amp;gt;alltime / TESTCOUNT) .&quot;ms&quot;;
    echo &quot;\n ============end=============\n&quot;;
    die;
});


//数据库连接池，https://wiki.swoole.com/wiki/page/852.html
class MysqlPool
{
    protected $pool;
    private $mysqlconf;
    public $alltime;

    public function __construct($mysqlconf)
    {
        $this-&amp;gt;pool = new SplQueue();
        $this-&amp;gt;mysqlconf = $mysqlconf;
        $this-&amp;gt;alltime = 0;
    }

    public function put($mysql, $time = 0)
    {
        $this-&amp;gt;pool-&amp;gt;push($mysql);
        $this-&amp;gt;alltime += $time;
    }

    public function get()
    {
        //有空闲连接
        if (count($this-&amp;gt;pool) &amp;gt; 0) {
            return $this-&amp;gt;pool-&amp;gt;pop();
        }
        
        $mysql = new Swoole\Coroutine\Mysql();
        $res = $mysql-&amp;gt;connect($this-&amp;gt;mysqlconf);
        if ($res == false) {
            echo &quot;\n connect error info: &quot;.$mysql-&amp;gt;error.&quot;\n&quot;;
            return false;
        } else {
            return $mysql;
        }
    }
}

//随机生成的数字
function getRandpid()
{
    for ($i = 0; $i &amp;lt; 40; ++$i) {
        $ret[] = rand(1, 185724600);
    }
    return $ret;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;测试1直接连接mysql查询单表的性能&quot;&gt;测试1：直接连接mysql，查询单表的性能&lt;/h2&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li&gt;测试代码：修改以上代码&lt;/li&gt;
&lt;li&gt;1：修改mysql配置为直接连接mysql，而不是oneproxy。即端口从3307改为3306&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;2：“业务逻辑”部分中的SQL改为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$sql = &quot;select * from table_10 where id in (&quot;.implode(',', getRandpid()).')';&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;测试指令：&lt;/p&gt;
&lt;p&gt;php mysql_test.php 1 1000 //并发为1，查询1000次&lt;br/&gt;php mysql_test.php 10 1000 //并发为10，查询1000次&lt;br/&gt;php mysql_test.php 50 10000 //并发为50，查询10000次&lt;br/&gt;...&lt;br/&gt;php mysql_test.php 500 100000 //并发为500，查询100000次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试结果：&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1425173-321826166ef7abdf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;数据库单表测试&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;结果分析：&lt;br/&gt;根据主键查询单表，mysql的性能基本可以满足正常业务的需求&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;测试2&quot;&gt;测试2&lt;/h2&gt;
&lt;ul readability=&quot;2.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;说明&lt;br/&gt;查询oneproxy。因为查询id是随机的，每查一次oneproxy，对应查询的是40个mysql的表。&lt;br/&gt;即，当oneproxy的并发数为1，mysql的对应并发数是40&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;测试代码：&lt;br/&gt;以上提供的代码即为此种情况的代码，无须修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;测试指令：&lt;/p&gt;
&lt;p&gt;php mysql_test.php 1 1000 //并发为1，查询1000次&lt;br/&gt;php mysql_test.php 10 1000 //并发为10，查询1000次&lt;br/&gt;php mysql_test.php 50 10000 //并发为50，查询10000次&lt;br/&gt;...&lt;br/&gt;php mysql_test.php 100 10000 //并发为100，查询10000次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试结果：&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1425173-49cc4e0b851b9795.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;oneproxy并行查询&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;结果分析：&lt;/li&gt;
&lt;li&gt;1：OneProxy做为mysql的代理，对查询性能基本0消耗。&lt;br/&gt;当oneproxy的查询并发为5时，对应mysql的查询并发为200。测试2的结果，并发为5，每次查询耗时30ms。测试1，mysql并发200，每次查询耗时29ms。可得到结论，oneproxy对性能0消耗。&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;2：每次查询耗时太高，很小流量的业务才能使用此方案。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;测试3后端mysql表分散到多台机器&quot;&gt;测试3：后端mysql表分散到多台机器&lt;/h2&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;分到两台，测试结果：&lt;br/&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1425173-aad7d7a7e8548e26.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;分析：&lt;br/&gt;mysql分到两台机器。同样并发数时，每次查询耗时能缩短一倍。&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;推测：&lt;br/&gt;mysql表分到更多的机器，每次查询耗时能达到测试1的结果，可满足正常的业务需求。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;最后，关注性能的同时，也要关注系统的稳定性、开发者的易用性、易维护性。&lt;/p&gt;
</description>
<pubDate>Mon, 16 Apr 2018 03:46:00 +0000</pubDate>
<dc:creator>dormscript</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dormscript/p/8855137.html</dc:identifier>
</item>
<item>
<title>ALS音乐推荐（上） - 草原狼~</title>
<link>http://www.cnblogs.com/followees/p/8854406.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/followees/p/8854406.html</guid>
<description>&lt;p&gt;　　本篇文章的开头笔者提出一个疑问，何为数据科学，数据科学是做什么的？大家带着这个疑问去读接下来的这篇音乐推荐的公众号。&lt;/p&gt;
&lt;p&gt;　　从经验上讲，推荐引擎属于大规模机器学习，在日常购物中大家或许深有体会，比如：你在淘宝上浏览了一些商品，或者购买了一些商品，那么淘宝就会根据你的偏好给你推荐一些其他类似的商品。然而，相比较其他机器学习算法，推荐引擎的输出更加的直观，有时候的推荐效果让人吃惊。作为机器学习开篇文章，本篇文章会系统的介绍基于Audioscrobbler数据集的音乐推荐。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据集介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Audioscrobbler数据集是一个公开发布的数据集，读者可以在（http://www-etud.iro.umontreal.ca/~bergstj/audioscrobbler_data.html）网站获取。数据集主要有三部分组成，user_artist_data.txt文件是主要的数据集文件记录了约2420条用户id、艺术家id以及用户收听艺术家歌曲的次数数据，包含141000个用户和160万个艺术家；artist_data.txt文件记录了艺术家id和对应的名字；artist_alias.txt记录了艺术家id和对应的别称id。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐算法介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　由于所选取的数据集只记录了用户和歌曲之间的交互情况，除了艺术家名字之外没有其他信息。因此要找的学习算法不需要用户和艺术家的属性信息，这类算法通常被称为协同过滤。如果根据两个用户的年龄相同来判断他们可能具有相似的偏好，这不叫协同过滤。相反，根据两个用户播放过许多相同歌曲来判断他们可能都喜欢某首歌，这是协调过滤。&lt;/p&gt;
&lt;p&gt;　　本篇所用的算法在数学上称为迭代最小二乘，把用户播放数据当成矩阵A，矩阵低i行第j列上的元素的值，代表用户i播放艺术家j的音乐。矩阵A是稀疏的，绝大多数元素是0，算法将A分解成两个小矩阵X和Y，既A=XY&lt;sup&gt;T&lt;/sup&gt;，X代表用户特征矩阵，Y代表特征艺术家矩阵。两个矩阵的乘积当做用户-艺术家关系矩阵的估计。可以通过下边一组图直观的反映：&lt;/p&gt;
&lt;p&gt;　　现在假如有5个听众，音乐有5首，那么A是一个5*5的矩阵，假如评分如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1063795/201804/1063795-20180416101534753-1809227898.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2.1 用户订阅矩阵&lt;/p&gt;
&lt;p&gt;　　假如d是三个属性，那么X的矩阵如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1063795/201804/1063795-20180416104830124-410656104.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2.2 用户-特征矩阵&lt;/p&gt;
&lt;p&gt;　　Y的矩阵如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1063795/201804/1063795-20180416101430838-546550187.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;图2.3 特征-电影矩阵&lt;/p&gt;
&lt;p&gt;　　实际的求解过程中通常先随机的固定矩阵Y，则&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rS5GicKt8v7LAGeg4HwstgavZ5nvfo2fmZMy6LKTxHy25P62I1qMiaEEYH3meNSrJjaefekFy3FBia9jcywHdayNA/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; alt=&quot;&quot; width=&quot;119&quot; height=&quot;27&quot; data-ratio=&quot;0.23076923076923078&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rS5GicKt8v7LAGeg4HwstgavZ5nvfo2fmZMy6LKTxHy25P62I1qMiaEEYH3meNSrJjaefekFy3FBia9jcywHdayNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;130&quot; data-fail=&quot;0&quot;/&gt;，为提高计算效率，通常采用并行计算X的每一行，既&lt;img src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rS5GicKt8v7LAGeg4HwstgavZ5nvfo2fmFabl8VBs87cCk7iccMYmlJq7HRdmNKKiaBmlkRNtUyyalInofxYOjCZA/640?wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;31&quot; data-ratio=&quot;0.24242424242424243&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rS5GicKt8v7LAGeg4HwstgavZ5nvfo2fmFabl8VBs87cCk7iccMYmlJq7HRdmNKKiaBmlkRNtUyyalInofxYOjCZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;132&quot; data-fail=&quot;0&quot;/&gt;。得到X之后，再反求出Y，不断的交替迭代，最终使得XY&lt;sup&gt;T&lt;/sup&gt;与A的平方误差小于指定阈值，停止迭代，得到最终的X（代表用户特征矩阵）和Y矩阵（代表特征艺术家矩阵）。在根据最终X和Y矩阵结果，向用户进行推荐。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALS的Spark实现&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Spark MLlib的ALS算法实现有点缺陷，要求用户和产品的ID必须是数值型，并且是32位非负整数。在计算之前应该首先检验一下数据量。&lt;/p&gt;
&lt;p&gt;1）数据预处理&lt;/p&gt;
&lt;p&gt;　　过滤无效的用户艺术家ID和名字行，将格式不正确的数据行剔除掉。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:scala;gutter:true;&quot;&gt;
def buildArtistByID(rawArtistData: Dataset[String]): DataFrame = {

  rawArtistData.flatMap { line =&amp;gt;

    val (id, name) = line.span(_ != '\t')

    if (name.isEmpty) {

      None

    } else {

      try {

        Some((id.toInt, name.trim))

      } catch {

        case _: NumberFormatException =&amp;gt; None

      }

    }

  }.toDF(&quot;id&quot;, &quot;name&quot;)

}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　过滤艺术家id和对应的别名id，将格式拼写错误的行剔除掉。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;37&quot;&gt;
&lt;pre class=&quot;brush:scala;gutter:true;&quot;&gt;
def buildArtistAlias(rawArtistAlias: Dataset[String]): Map[Int,Int] = {

  rawArtistAlias.flatMap { line =&amp;gt;

    val Array(artist, alias) = line.split('\t')

    if (artist.isEmpty) {

      None

    } else {

      Some((artist.toInt, alias.toInt))

    }

  }.collect().toMap

}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　将数据转换成Rating对象，Rating对象是ALS算法对“用户-产品-值”的抽象。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;44&quot;&gt;
&lt;pre class=&quot;brush:scala;gutter:true;&quot;&gt;
def buildCounts(

    rawUserArtistData: Dataset[String],

    bArtistAlias: Broadcast[Map[Int,Int]]): DataFrame = {

  rawUserArtistData.map { line =&amp;gt;

    val Array(userID, artistID, count) = line.split(' ').map(_.toInt)

    val finalArtistID = bArtistAlias.value.getOrElse(artistID, artistID)

    (userID, finalArtistID, count)

  }.toDF(&quot;user&quot;, &quot;artist&quot;, &quot;count&quot;)

}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2）模型构建&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;40&quot;&gt;
&lt;pre class=&quot;brush:scala;gutter:true;&quot;&gt;
def model(

    rawUserArtistData: Dataset[String],

    rawArtistData: Dataset[String],

    rawArtistAlias: Dataset[String]): Unit = {

  val bArtistAlias = spark.sparkContext.broadcast(buildArtistAlias(rawArtistAlias))  //艺术家别名数据

  val trainData = buildCounts(rawUserArtistData, bArtistAlias).cache() //将数据转换成需要的格式

  val model = new ALS().

    setSeed(Random.nextLong()).

    setImplicitPrefs(true).

    setRank(10).

    setRegParam(0.01).

    setAlpha(1.0).

    setMaxIter(5).

    setUserCol(&quot;user&quot;).

    setItemCol(&quot;artist&quot;).

    setRatingCol(&quot;count&quot;).

    setPredictionCol(&quot;prediction&quot;).

    fit(trainData)

  trainData.unpersist()

  model.userFactors.select(&quot;features&quot;).show(truncate = false)

  val userID = 2093760

  val existingArtistIDs = trainData.

    filter($&quot;user&quot; === userID).

    select(&quot;artist&quot;).as[Int].collect()

  val artistByID = buildArtistByID(rawArtistData)

  artistByID.filter($&quot;id&quot; isin (existingArtistIDs:_*)).show()

  val topRecommendations = makeRecommendations(model, userID, 5)

  topRecommendations.show()

  val recommendedArtistIDs = topRecommendations.select(&quot;artist&quot;).as[Int].collect()

  artistByID.filter($&quot;id&quot; isin (recommendedArtistIDs:_*)).show()

  model.userFactors.unpersist()

  model.itemFactors.unpersist()

}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　本篇文章主要对ALS音乐推荐进行简单的介绍，下一篇会对模型的参数，以及模型的推荐效果进行评估，并且会对推荐结果进行优化。&lt;/p&gt;
&lt;p&gt; 备注：如果文中排版出现错乱，请点击https://mp.weixin.qq.com/s/aqF38rDQdT35YrLAyLm-nA&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多精彩内容，欢迎扫码关注以下微信公众号：大数据技术宅。大数据、AI从关注开始&lt;/span&gt;&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1063795/201804/1063795-20180416102212468-766058069.jpg&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 16 Apr 2018 02:23:00 +0000</pubDate>
<dc:creator>草原狼~</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/followees/p/8854406.html</dc:identifier>
</item>
</channel>
</rss>