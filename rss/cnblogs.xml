<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>redis在Linux上的安装和简单使用 - dijia478</title>
<link>http://www.cnblogs.com/dijia478/p/8016993.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/dijia478/p/8016993.html</guid>
<description>&lt;p&gt;&lt;span&gt;这里演示的版本是Redis4.0.6，Linux系统是CentOS6.7，Jdk1.7，Jedis2.8.1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下载，解压，编译:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$ wget http:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;download.redis.io/releases/redis-4.0.6.tar.gz&lt;/span&gt;
$ tar xzf redis-&lt;span&gt;4.0&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;&lt;span&gt;.tar.gz
$ cd redis&lt;/span&gt;-&lt;span&gt;4.0&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;&lt;span&gt;
$ make&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;二进制文件是编译完成后在src目录下，通过下面的命令启动Redis服务：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$ src/redis-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;你可以使用内置的客户端命令redis-cli进行使用：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$ src/redis-&lt;span&gt;cli
redis&lt;/span&gt;&amp;gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt; foo bar
OK
redis&lt;/span&gt;&amp;gt; &lt;span&gt;get&lt;/span&gt;&lt;span&gt; foo
&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;bar&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;上面的方式只是一种小练习，我们现在通过Java程序用jedis来操作Linux服务器上的redis。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用maven来引入jedis：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;redis.clients&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;groupId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;jedis&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;artifactId&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;2.8.1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;version&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependency&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;dependencies&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Java代码：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
    　　&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 虚拟机设置的ip，redis默认端口号&lt;/span&gt;
        Jedis jedis = &lt;span&gt;new&lt;/span&gt; Jedis(&quot;192.168.133.128&quot;, 6379&lt;span&gt;);
        jedis.set(&lt;/span&gt;&quot;key01&quot;, &quot;zhangsan&quot;&lt;span&gt;);
        jedis.set(&lt;/span&gt;&quot;key02&quot;, &quot;lisi&quot;&lt;span&gt;);
        System.out.println(jedis.get(&lt;/span&gt;&quot;key01&quot;&lt;span&gt;));
    }&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;注意上面的代码是有问题的！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;上面的代码运行后，会报错&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused: connect&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;连接超被拒绝了，这是因为，redis的访问ip默认是127.0.0.1&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;你需要在redis.conf配置文件中修改：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210145809833-206582702.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;文档很长，可以通过&quot;/&quot;命令来查找&quot;bind&quot;字符串，按n搜索下一个&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;把ip添加进去，之后启动redis服务的时候，需要手动加载配置文件&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210150003880-905016406.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我的配置文件放在了和server服务的同一个目录里，所以启动服务时输入：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;./redis-server redis.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意啊：如果不输入后面的配置文件目录，那么该配置文件不起作用，会提示说启动默认的配置文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210151126615-1388625116.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;之后再次运行Java代码&lt;/p&gt;
&lt;p&gt;又报错！！&lt;/p&gt;
&lt;p&gt;&lt;span&gt;redis.clients.jedis.exceptions.JedisDataException: DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions: 1) Just disable protected mode sending the command 'CONFIG SET protected-mode no' from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent. 2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to 'no', and then restarting the server. 3) If you started the server manually just for testing, restart it with the '--protected-mode no' option. 4) Setup a bind address or an authentication password. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;这错报的好长。。&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;好心的博主帮你谷歌翻译了一下。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;简单来说呢？就是给你提供了几个解决方案&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;1）只需禁用保护模式，即可通过从同一主机连接到Redis，从回送接口发送命令“CONFIG SET protected-mode no”正在运行，但是如果您这样做，请勿使用互联网公开访问互联网。使用CONFIG REWRITE使此更改永久。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;2）或者，您可以通过编辑Redis配置文件并将保护模式选项设置为“no”来禁用保护模式，然后重新启动服务器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;3）如果您只是为了测试而手动启动服务器，请使用“ &lt;span&gt;--protected-mode no&lt;/span&gt;”选项重新启动服务器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;4）设置绑定地址或认证密码。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;在这里我选择设置redis密码，同样打开redis.conf配置文件，设置密码为123456，保存退出&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210152346583-731996862.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;然后启动服务器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210152608646-744725911.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;之后你要想在Linux里用命令打开redis客户端，需要输入一些参数&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210153007411-2051465446.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;很显然，-h是redis服务的ip，-p是redis服务的端口号，-a是redis服务的密码，都可以在redis.conf里更改的&lt;/p&gt;
&lt;p&gt;然后就好了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210153258974-1530983815.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个时候，Java代码中的问题还没解决完，你还需要在Java代码中增加一条密码设置&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 虚拟机的设置的ip，，redis默认端口号&lt;/span&gt;
        Jedis jedis = &lt;span&gt;new&lt;/span&gt; Jedis(&quot;192.168.133.128&quot;, 6379&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; redis访问密码&lt;/span&gt;
        jedis.auth(&quot;123456&quot;&lt;span&gt;);
        jedis.set(&lt;/span&gt;&quot;key01&quot;, &quot;zhangsan&quot;&lt;span&gt;);
        jedis.set(&lt;/span&gt;&quot;key02&quot;, &quot;lisi&quot;&lt;span&gt;);
        System.out.println(jedis.get(&lt;/span&gt;&quot;key01&quot;&lt;span&gt;));
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1267939/201712/1267939-20171210153829943-440415636.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;OK，运行正常&lt;/p&gt;

</description>
<pubDate>Sun, 10 Dec 2017 07:48:00 +0000</pubDate>
<dc:creator>dijia478</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/dijia478/p/8016993.html</dc:identifier>
</item>
<item>
<title>大数据学习系列之一  -----  Hadoop环境搭建(单机) - 虚无境</title>
<link>http://www.cnblogs.com/xuwujing/p/8017108.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xuwujing/p/8017108.html</guid>
<description>&lt;h2 id=&quot;一环境选择&quot;&gt;一、环境选择&lt;/h2&gt;
&lt;h3 id=&quot;服务器选择&quot;&gt;1，服务器选择&lt;/h3&gt;
&lt;p&gt;阿里云服务器:入门型(按量付费)&lt;br/&gt;操作系统:linux CentOS 6.8&lt;br/&gt;Cpu：1核&lt;br/&gt;内存：1G&lt;br/&gt;硬盘:40G&lt;br/&gt;ip:39.108.77.250&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126155913423?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置选择&quot;&gt;2，配置选择&lt;/h3&gt;
&lt;p&gt;JDK:1.8 （jdk-8u144-linux-x64.tar.gz）&lt;br/&gt;Hadoop:2.8.2 (hadoop-2.8.2.tar.gz)&lt;/p&gt;
&lt;h3 id=&quot;下载地址&quot;&gt;3，下载地址&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;官网地址:&lt;/strong&gt;&lt;br/&gt;JDK：&lt;br/&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads&quot; class=&quot;uri&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hadopp:&lt;br/&gt;&lt;a href=&quot;http://www.apache.org/dyn/closer.cgi/hadoop/common&quot; class=&quot;uri&quot;&gt;http://www.apache.org/dyn/closer.cgi/hadoop/common&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;百度云:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;http://pan.baidu.com/s/1pLqS4kF&quot; class=&quot;uri&quot;&gt;http://pan.baidu.com/s/1pLqS4kF&lt;/a&gt; 密码：yb79&lt;/p&gt;
&lt;h2 id=&quot;二服务器的相关配置&quot;&gt;二、服务器的相关配置&lt;/h2&gt;
&lt;p&gt;在配置Hadoop之前，应该先做以下配置&lt;/p&gt;
&lt;h3 id=&quot;更改主机名&quot;&gt;1，更改主机名&lt;/h3&gt;
&lt;p&gt;首先更改主机名，目的是为了方便管理。&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;hostname &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;查看本机的名称&lt;br/&gt;然后输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim /etc/sysconfig/network&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改主机名称&lt;br/&gt;将HOSTNAME 的名称更改为你想要设置的名称&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126155941845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;注:主机名称更改之后，要重启(reboot)才会生效。&lt;/p&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim /etc/hosts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;添加 主机IP 和对应的主机名称，做映射。&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126155958713?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注:在配置文件中使用主机名的话，这个映射必须做！&lt;/p&gt;
&lt;h3 id=&quot;关闭防火墙&quot;&gt;2，关闭防火墙&lt;/h3&gt;
&lt;p&gt;关闭防火墙，方便外部访问。&lt;br/&gt;CentOS 7版本以下输入:&lt;br/&gt;关闭防火墙&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;service   iptables stop&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CentOS 7 以上的版本输入：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;systemctl   stop   firewalld.service&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;时间设置&quot;&gt;3，时间设置&lt;/h3&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;date&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;查看服务器时间是否一致，若不一致则更改&lt;br/&gt;更改时间命令&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;date -s ‘MMDDhhmmYYYY.ss’&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;三hadoop环境安装&quot;&gt;三、Hadoop环境安装&lt;/h2&gt;
&lt;h3 id=&quot;下载jdkhadoop&quot;&gt;1，下载jdk、hadoop&lt;/h3&gt;
&lt;p&gt;将下载下来的 jdk、hadoop 解压包放在home 目录下&lt;br/&gt;并新建java、hadoop文件夹&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126160140889?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;解压文件&quot;&gt;&lt;strong&gt;3.1.1解压文件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;输入:&lt;br/&gt;tar -xvf jdk-8u144-linux-x64.tar.gz&lt;br/&gt;tar -xvf hadoop-2.8.2.tar.gz&lt;br/&gt;解压jdk和hadoop ,分别移动文件到java和hadoop文件下，&lt;br/&gt;并将文件夹重命名为jdk1.8和hadoop2.8&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126160153520?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;jdk环境配置&quot;&gt;2，JDK环境配置&lt;/h3&gt;
&lt;p&gt;首先输入&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;java -version &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;查看是否安装了JDK，如果安装了，但版本不适合的话，就卸载&lt;/p&gt;
&lt;h4 id=&quot;profile-文件更改&quot;&gt;&lt;strong&gt;3.2.1 profile 文件更改&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;编辑 /etc/profile 文件&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim /etc/profile&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;整体的配置文件:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;export JAVA_HOME=/home/java/jdk1.8
export JRE_HOME=/home/java/jdk1.8/jre
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
export PATH=.:${JAVA_HOME}/bin:$PATH&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126160343698?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;&lt;strong&gt;注: JAVA_HOME的路径是 JDK的路径&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用vim 编辑之后 记得输入&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;source /etc/profile &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使配置生效&lt;/p&gt;
&lt;p&gt;配置完后，输入&lt;code&gt;java -version&lt;/code&gt; 查看版本信息&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126160630056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;hadoop-环境配置&quot;&gt;3，Hadoop 环境配置&lt;/h3&gt;
&lt;h4 id=&quot;profile-文件更改-1&quot;&gt;&lt;strong&gt;3.3.1 profile 文件更改&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;编辑 /etc/profile 文件&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim /etc/profile&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;整体的配置文件:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;export HADOOP_HOME=/home/hadoop/hadoop2.8
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;
export PATH=.:${JAVA_HOME}/bin:${HADOOP_HOME}/bin:$PATH&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171209131921168?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;source  /etc/profile&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;使配置生效&lt;/p&gt;
&lt;p&gt;修改配置文件&lt;/p&gt;
&lt;h4 id=&quot;新建文件夹&quot;&gt;&lt;strong&gt;3.3.2新建文件夹&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在修改配置文件之前，现在root目录下建立一些文件夹。&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mkdir  /root/hadoop  
mkdir  /root/hadoop/tmp  
mkdir  /root/hadoop/var  
mkdir  /root/hadoop/dfs  
mkdir  /root/hadoop/dfs/name  
mkdir  /root/hadoop/dfs/data&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注:在root目录下新建文件夹是防止被莫名的删除。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先切换到 /home/hadoop/hadoop2.8/etc/hadoop/ 目录下&lt;/p&gt;
&lt;h4 id=&quot;修改-core-site.xml&quot;&gt;&lt;strong&gt;3.3.3修改 core-site.xml&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim core-site.xml&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在&lt;code&gt;&amp;lt;configuration&amp;gt;&lt;/code&gt;添加:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;configuration&amp;gt;
&amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hadoop.tmp.dir&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;/root/hadoop/tmp&amp;lt;/value&amp;gt;
        &amp;lt;description&amp;gt;Abase for other temporary directories.&amp;lt;/description&amp;gt;
   &amp;lt;/property&amp;gt;
   &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;fs.default.name&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;hdfs://test1:9000&amp;lt;/value&amp;gt;
   &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126160956081?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;&lt;strong&gt;说明: test1 可以替换为主机的ip。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;修改-hadoop-env.sh&quot;&gt;&lt;strong&gt;3.3.4修改 hadoop-env.sh&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim hadoop-env.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将&lt;code&gt;${JAVA_HOME}&lt;/code&gt; 修改为自己的JDK路径&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;export   JAVA_HOME=${JAVA_HOME}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改为：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;export   JAVA_HOME=/home/java/jdk1.8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161014633?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;修改-hdfs-site.xml&quot;&gt;&lt;strong&gt;3.4.5修改 hdfs-site.xml&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim hdfs-site.xml&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在&lt;code&gt;&amp;lt;configuration&amp;gt;&lt;/code&gt;添加:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;property&amp;gt;
   &amp;lt;name&amp;gt;dfs.name.dir&amp;lt;/name&amp;gt;
   &amp;lt;value&amp;gt;/root/hadoop/dfs/name&amp;lt;/value&amp;gt;
   &amp;lt;description&amp;gt;Path on the local filesystem where theNameNode stores the namespace and transactions logs persistently.&amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
   &amp;lt;name&amp;gt;dfs.data.dir&amp;lt;/name&amp;gt;
   &amp;lt;value&amp;gt;/root/hadoop/dfs/data&amp;lt;/value&amp;gt;
   &amp;lt;description&amp;gt;Comma separated list of paths on the localfilesystem of a DataNode where it should store its blocks.&amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
   &amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;
   &amp;lt;value&amp;gt;2&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;dfs.permissions&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;
      &amp;lt;description&amp;gt;need not permissions&amp;lt;/description&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161142156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：dfs.permissions配置为false后，可以允许不要检查权限就生成dfs上的文件，方便倒是方便了，但是你需要防止误删除，请将它设置为true，或者直接将该property节点删除，因为默认就是true。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;修改mapred-site.xml&quot;&gt;&lt;strong&gt;3.4.6 修改mapred-site.xml&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;如果没有 &lt;code&gt;mapred-site.xml&lt;/code&gt; 该文件，就复制&lt;code&gt;mapred-site.xml.template&lt;/code&gt;文件并重命名为&lt;code&gt;mapred-site.xml&lt;/code&gt;。&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;vim mapred-site.xml&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改这个新建的&lt;code&gt;mapred-site.xml&lt;/code&gt;文件，在&lt;code&gt;&amp;lt;configuration&amp;gt;&lt;/code&gt;节点内加入配置:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;mapred.job.tracker&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;test1:49001&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;mapred.local.dir&amp;lt;/name&amp;gt;
       &amp;lt;value&amp;gt;/root/hadoop/var&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
       &amp;lt;name&amp;gt;mapreduce.framework.name&amp;lt;/name&amp;gt;
       &amp;lt;value&amp;gt;yarn&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161250022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;使用的命令:&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161322929?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;到此 Hadoop 的单机模式的配置就完成了。&lt;/p&gt;
&lt;h2 id=&quot;四hadoop启动&quot;&gt;四、Hadoop启动&lt;/h2&gt;
&lt;p&gt;第一次启动Hadoop需要初始化&lt;br/&gt;切换到 /home/hadoop/hadoop2.8/bin目录下输入&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  ./hadoop  namenode  -format&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161410802?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161419612?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;初始化成功后，可以在/root/hadoop/dfs/name 目录下(该路径在hdfs-site.xml文件中进行了相应配置，并新建了该文件夹)新增了一个current 目录以及一些文件。&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161438303?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;启动Hadoop 主要是启动HDFS和YARN&lt;br/&gt;切换到/home/hadoop/hadoop2.8/sbin目录&lt;br/&gt;启动HDFS&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;start-dfs.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;登录会询问是否连接，输入yes ，然后输入密码就可以了&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161508441?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;启动YARN&lt;br/&gt;输入:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;start-yarn.sh&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161522032?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以输入 jps 查看是否成功启动&lt;/p&gt;
&lt;p&gt;在浏览器输入:&lt;br/&gt;&lt;a href=&quot;http://39.108.77.250:8088/cluster&quot; class=&quot;uri&quot;&gt;http://39.108.77.250:8088/cluster&lt;/a&gt;&lt;br/&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171126161553305?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;/&gt;&lt;/p&gt;
&lt;p&gt;到此，Hadoop的单机配置就结束了。&lt;/p&gt;
</description>
<pubDate>Sun, 10 Dec 2017 07:47:00 +0000</pubDate>
<dc:creator>虚无境</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xuwujing/p/8017108.html</dc:identifier>
</item>
<item>
<title>自己动手实现mvc框架 - 最后Q泪滴</title>
<link>http://www.cnblogs.com/rongdi/p/8017041.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/rongdi/p/8017041.html</guid>
<description>&lt;p&gt;　　用过springmvc的可能都知道，要集成springmvc需要在web.xml中加入一个跟随web容器启动的DispatcherServlet,然后由该servlet初始化一些东西，然后所有的web请求都被这个servlet接管。所以自己写mvc的关键就是弄懂这个servlet干了啥。先分析一下springmvc的功能，首先我们写一个接口，就是写一个Controller，然后里面写一个方法，在类或者方法里面使用@RequestMapping直接修饰，当该注解对应的path被请求时，会按照指定格式传入参数并调用该方法，然后按照指定格式将调用的结果写出到向浏览器的输出流中（@ResponseBody），或者转发到jsp，再去由jsp转换生成的servlet去将结果写出到输出流（默认的请求转发），或者重定向到指定的jsp(return &quot;redirect:/test.jsp&quot;等。上面仅仅使用jsp举例子，不代表springmvc只支持使用jsp渲染。但是我们自己写的mvc只是为了演示整个流程和若干细节，并不能全面重写springmvc我也没那个能力重写，所以页面层只用jsp。&lt;br/&gt;　　详细分析下写一个mvc的流程:第一：我们也可以使用一个servlet将前端所有请求都接管到一个servlet中去（这里其实filter，servlet都可以实现，比如strus2采用filter接管，springmvc采用servlet，原理大同小异），第二：这个servlet是随着容器自启动，所以需要配置load-on-startup，然后我们在这个servlet的init方法里面可以扫描指定的包(扫描哪些包，可以通过servlet在web.xml中的init-param配置),加载一些注解并将注解配置的属性和类，方法对象的关系保存在一些map中，第三：当页面访问任意后端接口时，最终会经过doGet或者doPost(上层是service方法，为了方便不用service方法)，我们可以在这两个方法中根据请求的url路径去找到对应的Controller类和Method对象，然后从请求中拿出参数传入方法需要的参数，得到方法执行的结果，最后根据方法里面指定的返回格式(@ResponseBody这种)，或者请求转发，或者重定向做处理。废话不多说，直接上代码。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;&amp;lt;?&lt;/span&gt;&lt;span&gt;xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;web-app &lt;/span&gt;&lt;span&gt;xmlns:xsi&lt;/span&gt;&lt;span&gt;=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span&gt; xmlns&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;&lt;span&gt; xmlns:web&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;&lt;span&gt; xsi:schemaLocation&lt;/span&gt;&lt;span&gt;=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;&lt;/span&gt;&lt;span&gt; id&lt;/span&gt;&lt;span&gt;=&quot;WebApp_ID&quot;&lt;/span&gt;&lt;span&gt; version&lt;/span&gt;&lt;span&gt;=&quot;3.0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;mymvc&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;display-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;dispacher&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.rd.servlet.DispatcherServlet&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-class&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;package&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;com.rd.controller&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;param-value&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;init-param&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;load-on-startup&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;dispacher&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-name&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;/&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;url-pattern&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
  &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;servlet-mapping&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;web-app&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.rd.servlet;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.io.IOException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.reflect.Method;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.ArrayList;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashSet;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.List;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Map;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Set;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.regex.Pattern;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.ServletConfig;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.ServletException;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServlet;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletRequest;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; javax.servlet.http.HttpServletResponse;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; org.apache.commons.lang3.StringUtils;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.annotation.Path;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.annotation.RespJson;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.util.JsonUtil;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.util.MethodUtil;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.util.ScanClassUtil;

&lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
 * 类似springmvc的将请求全部纳入控制范围的servlet
 * &lt;/span&gt;&lt;span&gt;@author&lt;/span&gt;&lt;span&gt; rongdi
 * @date 2017年9月20日 下午1:58:26
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; DispatcherServlet &lt;span&gt;extends&lt;/span&gt;&lt;span&gt; HttpServlet {
    
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = 1L&lt;span&gt;;
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;path和Class的映射&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Map&amp;lt;String, Class&amp;lt;?&amp;gt;&amp;gt; classMap = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;String, Class&amp;lt;?&amp;gt;&amp;gt;&lt;span&gt;();
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;path和Method的映射&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Map&amp;lt;String, Method&amp;gt; methodMap = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;String, Method&amp;gt;&lt;span&gt;();
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;存放被@RespJson修饰的类&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Set&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt; classRespJsons = &lt;span&gt;new&lt;/span&gt; HashSet&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt;&lt;span&gt;();
    
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;存放被@RespJson修饰的方法&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Set&amp;lt;Method&amp;gt; methodRespJsons = &lt;span&gt;new&lt;/span&gt; HashSet&amp;lt;Method&amp;gt;&lt;span&gt;();
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; init(ServletConfig config) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException {
        System.out.println(&lt;/span&gt;&quot;---DispatcherServlet初始化开始---&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取web.xml中配置的要扫描的包&lt;/span&gt;
        String basePackage = config.getInitParameter(&quot;package&quot;&lt;span&gt;);
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;配置了多个包&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt; (basePackage.indexOf(&quot;,&quot;)&amp;gt;0&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;按逗号进行分隔&lt;/span&gt;
            String[] packageNameArr = basePackage.split(&quot;,&quot;&lt;span&gt;);
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt; (String packageName : packageNameArr) {
                add2ClassMap(packageName);
            }
        }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            add2ClassMap(basePackage);
        }
        System.out.println(&lt;/span&gt;&quot;----DispatcherServlet初始化结束---&quot;&lt;span&gt;);
    }
    
    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 将被注解修饰的类
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; packageName
     &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; add2ClassMap(String packageName){
        Set&lt;/span&gt;&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt; setClasses =&lt;span&gt;  ScanClassUtil.getClasses(packageName);
        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (Class&amp;lt;?&amp;gt;&lt;span&gt; clazz :setClasses) {
            String pathAttrValue &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断类被注解修饰&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; (clazz.isAnnotationPresent(Path.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取path的Annotation的实例&lt;/span&gt;
                Path pathInstance = clazz.getAnnotation(Path.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取Annotation的实例的value属性的值&lt;/span&gt;
                pathAttrValue =&lt;span&gt; pathInstance.value();
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (StringUtils.isNotEmpty(pathAttrValue)) {
                    pathAttrValue &lt;/span&gt;=&lt;span&gt; handPathStr(pathAttrValue);
                    classMap.put(pathAttrValue, clazz);
                }
            }
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(clazz.isAnnotationPresent(RespJson.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)) {
                classRespJsons.add(clazz);
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断方法被注解修饰&lt;/span&gt;
            Method[] methods =&lt;span&gt; clazz.getMethods();
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(Method m:methods) {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断方法被注解修饰&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt;(m.isAnnotationPresent(Path.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)) {
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取path的Annotation的实例&lt;/span&gt;
                    Path pathInstance = m.getAnnotation(Path.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取Annotation的实例的value属性的值&lt;/span&gt;
                    String methodPathValue =&lt;span&gt; pathInstance.value();
                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (StringUtils.isNotEmpty(methodPathValue)) {
                        methodPathValue &lt;/span&gt;=&lt;span&gt; handPathStr(methodPathValue);
                        pathAttrValue &lt;/span&gt;=&lt;span&gt; handPathStr(pathAttrValue);
                        methodMap.put(pathAttrValue&lt;/span&gt;+&lt;span&gt;methodPathValue, m);
                    }
                }
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(m.isAnnotationPresent(RespJson.&lt;span&gt;class&lt;/span&gt;&lt;span&gt;)) {
                    methodRespJsons.add(m);
                }
            }
        }
    }

    &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
     * 处理一下路径，前面后面的斜杠
     * &lt;/span&gt;&lt;span&gt;@param&lt;/span&gt;&lt;span&gt; pathStr
     * &lt;/span&gt;&lt;span&gt;@return&lt;/span&gt;
     &lt;span&gt;*/&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt;&lt;span&gt; String handPathStr(String pathStr) {
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(pathStr.endsWith(&quot;/&quot;&lt;span&gt;)) {
            pathStr &lt;/span&gt;= pathStr.substring(0,pathStr.length()-1&lt;span&gt;);
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!pathStr.startsWith(&quot;/&quot;&lt;span&gt;)) {
            pathStr &lt;/span&gt;= &quot;/&quot;+&lt;span&gt;pathStr;
        }
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; pathStr;
    }
    
    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doGet(HttpServletRequest request, HttpServletResponse response) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {
        
        Map&lt;/span&gt;&amp;lt;String,String[]&amp;gt; params =&lt;span&gt; request.getParameterMap();
        String url &lt;/span&gt;=&lt;span&gt; request.getRequestURI();
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当请求根路径是，请求转发到首页&lt;/span&gt;
        &lt;span&gt;if&lt;/span&gt;(&quot;/&quot;&lt;span&gt;.equals(url)) {
            request.getRequestDispatcher(&lt;/span&gt;&quot;/index.jsp&quot;&lt;span&gt;).forward(request, response);
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(&quot;/favicon.ico&quot;&lt;span&gt;.equals(url)) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;;
        }
        Method m &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(methodMap.containsKey(url)) {
            m &lt;/span&gt;=&lt;span&gt; methodMap.get(url);
        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个过程，其实可以优化，如果存在通配符匹配，不用每次都循环匹配，可以缓存起来，第二次直接用，这里暂时忽略优化问题&lt;/span&gt;
            Set&amp;lt;String&amp;gt; urls =&lt;span&gt; methodMap.keySet();
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(String murl:urls) {
                String reg &lt;/span&gt;= &quot;^&quot;+murl.replace(&quot;*&quot;, &quot;.*?&quot;)+&quot;$&quot;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(Pattern.matches(reg, url)) {
                    m &lt;/span&gt;=&lt;span&gt; methodMap.get(murl);
                    &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
                }
            }
        }
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(m == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
            &lt;/span&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ServletException(&quot;没有找到与路径:&quot;+url+&quot;对应的处理方法&quot;&lt;span&gt;);
        }
        
        &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
            &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
             * 这里需要获取参数名，jdk1.8之后可以直接直接反射获取，条件比较恶心，需要开启开关
             * 如下直接使用javassist字节码工具类实现，也可以用asm等其他工具
             &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            String[] paramNames &lt;/span&gt;=&lt;span&gt; MethodUtil.getAllParamaterName(m);
            List&lt;/span&gt;&amp;lt;String&amp;gt; paramValues = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;(String paramName:paramNames) {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(params.get(paramName) == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                    paramValues.add(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
                    paramValues.add(params.get(paramName)[&lt;/span&gt;0&lt;span&gt;]);
                }
                
            }
            &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
             * 调用方法所在类的默认构造方法，生成执行方法的对象（springmvc里的这个对象是单例的，这里为了省事，每次都new一个出来），
             * 然后执行方法，返回结果
             &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;&lt;span&gt;
            Class&lt;/span&gt;&amp;lt;?&amp;gt; cla =&lt;span&gt; m.getDeclaringClass();
            Object result &lt;/span&gt;=&lt;span&gt; m.invoke(cla.newInstance(), paramValues.toArray());
            &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
             * 如果方法返回类型为 void，则该调用结果返回 null，如果返回值为void，则直接跳转到同路径的jsp页面上，
             * 为了简单起见这里后缀写死.jsp，实际上springmvc是支持配置ViewResolver,
             * 可以指定请求转发或者重定向所在的界面层的前缀和后缀。
             &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt;(result == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) {
                request.getRequestDispatcher(url&lt;/span&gt;+&quot;.jsp&quot;&lt;span&gt;).forward(request, response);
            }
            &lt;/span&gt;&lt;span&gt;/**&lt;/span&gt;&lt;span&gt;
             * 这里springmvc默认是请求转发到jsp
             * 为了方便这里直接根据修饰返回类型的注解，确定用哪种方式序列化，
             &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt;(classRespJsons.contains(cla) ||&lt;span&gt; methodRespJsons.contains(m)) {
                result &lt;/span&gt;=&lt;span&gt; JsonUtil.serialize(result);
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;输出json到浏览器&lt;/span&gt;
&lt;span&gt;                response.getWriter().print(result);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(result.toString().startsWith(&quot;redirect:&quot;)) { &lt;span&gt;//&lt;/span&gt;&lt;span&gt;重定向
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;去掉前缀就是重定向到的路径,实际上这里不严谨,应该加上一个项目的上下文路径&lt;/span&gt;
                response.sendRedirect(result.toString().substring(9)+&quot;.jsp&quot;&lt;span&gt;);
            } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; { &lt;span&gt;//&lt;/span&gt;&lt;span&gt;请求转发&lt;/span&gt;
                request.getRequestDispatcher(result.toString()+&quot;.jsp&quot;&lt;span&gt;).forward(request, response);
            }
            
        } &lt;/span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;span&gt; (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; doPost(HttpServletRequest request, HttpServletResponse response) &lt;span&gt;throws&lt;/span&gt;&lt;span&gt; ServletException, IOException {
        doGet(request, response);
    }

     &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; main(String[] args) {
            String url &lt;/span&gt;= &quot;/test/a&quot;&lt;span&gt;;
            String reg &lt;/span&gt;= &quot;^/test/.*?$&quot;&lt;span&gt;;
            System.out.println(Pattern.matches(reg, url));
            System.out.println(Long.&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;);
                    
        }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.rd.controller;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.HashMap;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.util.Map;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.annotation.Path;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; com.rd.annotation.RespJson;

@Path(value&lt;/span&gt;=&quot;/test&quot;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; TestController {

    @Path(value&lt;/span&gt;=&quot;/text&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; text() {
    }
    
    @Path(value&lt;/span&gt;=&quot;/redirect&quot;&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; String redirect(String a) {
        
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &quot;redirect:/test/redirect&quot;&lt;span&gt;;
    }
    
    @Path(value&lt;/span&gt;=&quot;/json&quot;&lt;span&gt;)
    @RespJson
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; Map json(String a) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; HashMap(){{put(&quot;a&quot;&lt;span&gt;,a);}};
    }
    
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;package&lt;/span&gt;&lt;span&gt; com.rd.annotation;

&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.annotation.ElementType;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; java.lang.annotation.Retention;
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 10 Dec 2017 07:34:00 +0000</pubDate>
<dc:creator>最后Q泪滴</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/rongdi/p/8017041.html</dc:identifier>
</item>
<item>
<title>老男孩Python视频教程：第一周 - 缪培康</title>
<link>http://www.cnblogs.com/MPK-dev/p/8016406.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/MPK-dev/p/8016406.html</guid>
<description>&lt;p&gt;&lt;span&gt;备注：&lt;a title=&quot;密码：57eo&quot; href=&quot;https://pan.baidu.com/s/1c2nmbSW&quot; target=&quot;_blank&quot;&gt;老男孩Python视频教程&lt;/a&gt;，视频来自网络，在此分享，侵删&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;对我来说，第一周视频主要解答了以下疑问：&lt;/h2&gt;
&lt;p&gt;　　&lt;strong&gt;1. Python的三大特点是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　答：解释型、动态类型（运行期间才做数据类型检查）、强类型定义（一个变量只能存储一种类型的数据）。【&lt;a title=&quot;编译型与解释型、动态语言与静态语言、强类型语言与弱类型语言的区别&quot; href=&quot;http://www.jianshu.com/p/29901f080dbe&quot; target=&quot;_blank&quot;&gt;See More&lt;/a&gt;】&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　2. 应该使用Python2 还是 Python3 ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　答：尽管Python2应用也很广，尽管某些框架和库尚不支持Python3，但 Python3 是Python的未来，当然值得选择！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　3. Pycharm中如何设置Python默认模板？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　答：默认模板可以为你新创建的Python文件添加一些信息，比如自动添加解释器声明、自动添加作者信息等。&lt;/p&gt;
&lt;p&gt;　　　　　　设置方法：Sittings --&amp;gt; Code Style --&amp;gt; File and Code Templates --&amp;gt; Python Scripts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　4. 让我感到意外的特性是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　答：Python3 中变量名可以是中文！！！&lt;/p&gt;
&lt;p&gt;　　　　答：While可以与else联合使用：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
count =&lt;span&gt; 0
&lt;/span&gt;&lt;span&gt;while&lt;/span&gt; count &amp;lt; 10&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(count)
    count &lt;/span&gt;+= 1
&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;变量count已经等于10，停止循环&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　5. &lt;a title=&quot;别人总结的文章&quot; href=&quot;http://blog.csdn.net/wchoclate/article/details/42297173&quot; target=&quot;_blank&quot;&gt;Python 格式化输出&lt;/a&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　　　已定义两个变量：name = “Barney”， age = 26，将它们格式化输出&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 方法一&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;Name: %s
Age: %s&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt; % (name, age))
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 方法二&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;Name: {user_Name}
Age: {user_Age}&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;.format(user_Name=name, user_Age=&lt;span&gt;age))
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; user_Name、user_Age都是随意起的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 方法三&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;Name: {0}
Age: {1}&lt;/span&gt;&lt;span&gt;'''&lt;/span&gt;&lt;span&gt;.format(name, age))
&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; name, age的顺序很重要&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;　　6. Python密文输入：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; getpass
passwd &lt;/span&gt;= getpass.getpass(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Password: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;提示语“Password: ”可选、随意&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 命令行模式下，密文不会显示出来，就像Linux中输入密码一样&lt;/span&gt;&lt;span&gt;
#&lt;/span&gt;&lt;span&gt; 该功能在PyCharm中不能用&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　&lt;strong&gt;&lt;a title=&quot;Python文档：range&quot; href=&quot;http://python.usyiyi.cn/translate/python_352/library/stdtypes.html#range&quot; target=&quot;_blank&quot;&gt;7. for循环：range()的官方文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Sun, 10 Dec 2017 07:10:00 +0000</pubDate>
<dc:creator>缪培康</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/MPK-dev/p/8016406.html</dc:identifier>
</item>
<item>
<title>详解「复制、拷贝、替身、软连接、硬连接」区别 - 赛艇队长</title>
<link>http://www.cnblogs.com/bellkosmos/p/8016911.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/bellkosmos/p/8016911.html</guid>
<description>&lt;p&gt;在mac文件系统中可以对一个文件进行标题中的这5种操作，操作的结果都是生成一份副本，但是其中却有很大区别。&lt;/p&gt;
&lt;p&gt;首先操作上的区别很明显&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;生成 &lt;strong&gt;软连接、硬连接&lt;/strong&gt; 是通过命令行操作的&lt;/li&gt;
&lt;li&gt;生成 &lt;strong&gt;替身、复制、拷贝&lt;/strong&gt; 一般是通过finder进行操作的，右键某个文件，菜单中选择（其实复制也可以用命令cp来实现，跟finder操作是一个效果）&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;然后其中的 &lt;strong&gt;复制和拷贝&lt;/strong&gt; 跟另外三种方式本质上不同，它们之间的区别也很好理解&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;他们的共同点是生成一份文件的副本，副本和原文件是两个独立的文件，两者的关系只有在生成时是关联的，在生成之后两者就没有关系，一个的被修改完全不会影响到另一个&lt;/li&gt;
&lt;li&gt;区别是在你右键点击复制后就会立刻在当前目录下生成一份副本，而拷贝则是把此文件的副本放到剪贴板，等待被粘贴&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;软连接和硬连接&quot;&gt;软连接和硬连接&lt;/h2&gt;
&lt;p&gt;但 &lt;strong&gt;软连接、硬连接、替身&lt;/strong&gt; 间的区别就需要进一步分析。&lt;br/&gt;它们本质上都不会生成文件的副本，而是通过各种方式去指向原文件，让你可以跟访问原文件一样访问连接或是替身。&lt;/p&gt;
&lt;p&gt;这里先分析软连接（或者说符号链接 symbolic link）和硬连接（hard link），它们都是在「POSIX」标准中就有的，所以在Linux和macOS上都会有，而且也是一样的。&lt;br/&gt;他们的作用有：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;让用户更方便的访问到文件、目录、驱动器或者网络设备等文件系统对象&lt;/li&gt;
&lt;li&gt;当用户访问一个具有很深目录结构的文件时，不用再一级一级的打开目录，而是直接双击链接，就打开了相应的文件&lt;/li&gt;
&lt;li&gt;Linux 中常用它来解决一些库版本的问题&lt;/li&gt;
&lt;li&gt;多数情况下，通过链接访问原始对象的过程对用户和应用程序是透明的，不可见的&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;从使用的角度讲，两者没有任何区别，都与正常的文件访问方式一样，支持读写，如果是可执行文件的话也可以直接执行。区别在于底层原理：软连接本身是一个文件，类似Windows 的快捷方式，可以让你通过连接文件到原文件；硬连接是通过文件系统的inode连接来产生新文件名，跟访问原文件一样进行访问，中间不会产生新文件，下面举个例子详细说明。&lt;/p&gt;
&lt;p&gt;我们先以文件为例（目录稍有不同），在一个目录中创建一个文件和它的软硬连接&lt;br/&gt;（注：因为涉及一些linux系统有关的讨论，本文中一律使用「目录」这个名称代替「文件夹」）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;touch&lt;/span&gt; myfile &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;my file first line&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; myfile
$ &lt;span class=&quot;kw&quot;&gt;ln&lt;/span&gt; myfile hard     &lt;span class=&quot;co&quot;&gt;# 创建一个硬连接文件hard&lt;/span&gt;
$ &lt;span class=&quot;kw&quot;&gt;ln&lt;/span&gt; -s myfile soft  &lt;span class=&quot;co&quot;&gt;# 创建一个软连接文件soft&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先，我们会发现，通过软连接、硬连接和文件本身myfile对「文件内容」进行操作的效果都是一样的，实际上都是操作myfile&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;new line by hard&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; hard
$ &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; myfile
&lt;span class=&quot;kw&quot;&gt;my&lt;/span&gt; file first line
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; line by hard

$ &lt;span class=&quot;kw&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;new line by soft&quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; soft
$ &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; myfile
&lt;span class=&quot;kw&quot;&gt;my&lt;/span&gt; file first line
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; line by hard
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; line by soft&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但如果我们我们对文件本身进程操作，对软连接和硬连接的影响就不太一样了&lt;br/&gt;删除 myfile 文件，然后分别输出软硬链接的文件内容，你会发现软连接会找不到文件，但硬连接却能正常访问&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;rm&lt;/span&gt; myfile

$ &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; hard
&lt;span class=&quot;kw&quot;&gt;my&lt;/span&gt; file first line
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; line by hard
&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; line by soft

$ &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; soft
&lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt;: soft: No such file or directory

&lt;span class=&quot;co&quot;&gt;# 先查看下现在目录的状态&lt;/span&gt;
$ &lt;span class=&quot;kw&quot;&gt;ls&lt;/span&gt; -lhi
&lt;span class=&quot;kw&quot;&gt;87446916&lt;/span&gt; -rw-r--r--  1 bigbear  staff    63B 11 30 10:51 hard
&lt;span class=&quot;kw&quot;&gt;87450113&lt;/span&gt; lrwxr-xr-x  1 bigbear  staff     6B 11 30 10:44 soft -&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; myfile&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;来解释原因，首先回到删除文件之前，在目录下查看文件和连接的详细信息（目录文件的block内容）&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;ls&lt;/span&gt; -lhi
&lt;span class=&quot;co&quot;&gt;# inode号   文件属性 连接数  拥有者   所属用户组 大小  文件创建时间   文件名（路径）&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;87446916&lt;/span&gt;  -rw-r--r--  2   bigbear  staff    28B  11 30 10:42  hard
&lt;span class=&quot;kw&quot;&gt;87446916&lt;/span&gt;  -rw-r--r--  2   bigbear  staff    28B  11 30 10:42  myfile
&lt;span class=&quot;kw&quot;&gt;87450113&lt;/span&gt;  lrwxr-xr-x  1   bigbear  staff     6B  11 30 10:44  soft -&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; myfile&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于每列信息代表的意思都在注释里写了，几个特殊的稍微解释一下&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;inode号
&lt;ol&gt;&lt;li&gt;（关于inode的内容可以参考我关于&lt;a href=&quot;http://www.cnblogs.com/bellkosmos/p/detail_of_linux_file_system.html&quot;&gt;Linux文件系统的文章&lt;/a&gt;，写得很详细，忘了的话最好复习一遍）&lt;/li&gt;
&lt;li&gt;每个文件的内容会分三处位置存储，文件的文件名存储在所在目录的目录文件的block中，这个block存储的是文件名和文件inode的映射关系，也就是文件名与目录有关；而文件属性和内容分别存储在文件的inode和block中，且文件的inode存有文件的block号&lt;/li&gt;
&lt;li&gt;读取某个文件内容的过程是：在目录文件的block通过文件名找到对应的Inode号，找到这个inode然后读取其中的block号，找到这个block再读取这个block的内容&lt;/li&gt;
&lt;li&gt;多个文件名可以对应到同一个inode号，当两个文件名的inode号相同，就代表在目录block的记录中，这两个文件名指向同一个inode，这两个文件名对文件系统来说就是同一个文件的不同名字&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;文件属性
&lt;ol&gt;&lt;li&gt;一共十位，第一位是文件类型缩写，后面9位每三位一组表示用户权限、用户组权限、其他人权限的可读(r)、可写(w)、可执行(x)&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;连接数
&lt;ol&gt;&lt;li&gt;表示有多少个文件名连接到这个inode号码，或者说这个inode指向的文件有多少个名字&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;所属用户组
&lt;ol&gt;&lt;li&gt;有两大类常见的用户组wheel（轮子）和staff（人员）&lt;/li&gt;
&lt;li&gt;wheel 是一个特殊的可以使用 su 切换到 root 的用户组；而 staff 组是所有普通用户的集合&lt;br/&gt;于是我们能看到&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;硬连接和原文件的inode号相同，表示是同一个文件。两者除了文件名，其他的权限、属性、内容完全一样&lt;/li&gt;
&lt;li&gt;软连接的inode和原文件不同，文件属性上也有一个 l 的 flag，表示连接文件&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;所以进一步分析：&lt;br/&gt;&lt;strong&gt;软连接&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;创建软链接会创建一个新的文件，这个文件本身有新的inode，有新的block，block的内容是原文件的绝对路径或相对路径
&lt;ol&gt;&lt;li&gt;你会发现上表中软连接文件的大小为6bytes，因为箭头(-&amp;gt;)右边的文件名「myfile」总共有6个英文，每个英文占用1个bytes ，所以文件大小就是6bytes了&lt;/li&gt;
&lt;li&gt;这里是相对路径，也可以使用绝对路径（就是在ln命令中把文件名改成绝对路径），使用相对路径的话，移动软连接文件的位置就可能导致软连接失效，所以一般使用绝对路径&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;系统读到这个文件类型时，会特殊处理，让数据的读取指向这个地址的那个文件&lt;/li&gt;
&lt;li&gt;这个原理本质上同Windows的快捷方式文件是一样的&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;硬连接&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;创建硬连接只是在当前（或某个）目录文件的block中新增一条新文件名连接到某inode号码的关连记录而已
&lt;ol&gt;&lt;li&gt;这时既不会增加inode 也不会增加block（其实还是可能会增加block的，那就是当你新增这笔记录却刚好将目录的block填满时，就可能会新加一个block来记录，不过一般不会）&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;因为硬连接的形式跟原文件的形式是一模一样的，所以系统其实是无法区分硬连接和原文件的，在命令下是一样的，在mac的图标上看也是一样的，能看到hard其实就是文件，soft是快捷方式的样子
&lt;ol&gt;&lt;li&gt;&lt;img src=&quot;http://ov66b75df.bkt.clouddn.com/15128127888893.png&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;这样就能解释前面修改文件内容和修改文件本身的表现不同的原因&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;修改内容
&lt;ol&gt;&lt;li&gt;软连接：系统读到这个文件类型时，会特殊处理，让数据的读取指向这个地址的那个文件&lt;/li&gt;
&lt;li&gt;硬连接：就是同一个文件，当然完全一样了&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;修改文件
&lt;ol&gt;&lt;li&gt;查看目录信息能看到文件确实只有myfile被删掉了，看上去hard和soft都不受影响&lt;/li&gt;
&lt;li&gt;但因为软连接的 inode 所指向的内容是一个文件路径，当这个文件被删除，从文件路径上自然会无法找到该文件&lt;/li&gt;
&lt;li&gt;而硬连接确实没有受到影响，因为它直接指向inode，只要inode对应的block还在，就还能找到。而删除一个文件只是删除另一个硬连接，并不会影响inode和block&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;可以画图演示两种连接读取过程的区别&lt;br/&gt;&lt;img src=&quot;http://ov66b75df.bkt.clouddn.com/15128128213377.png&quot; alt=&quot;-w350&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从上面的说明来看，软连接缺点很大，似乎硬连接更安全，因为即使某一个目录下的文件被删掉了也没有关系，只要有任何一个目录下存在文件，那么该文件就不会不见。但由于硬连接的限制太多， 所以在用途上是比较受限的，反而是软连接的使用面更广。&lt;br/&gt;软连接缺点&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;删除了原文件，就会找不到文件了&lt;/li&gt;
&lt;li&gt;修改了原文件的文件名（更确切地说是修改文件路径），也会找不到文件，因为软连接block记录的文件路径不会动态更新&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;硬连接的限制&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;不能跨文件系统
&lt;ol&gt;&lt;li&gt;因为inode号只有在同一个文件系统中才是唯一的，当 Linux 挂载多个文件系统后将出现 inode 号重复的现象&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;不能连接目录（这也是前面说的对目录来说稍有不同的点，其他都一样）
&lt;ol&gt;&lt;li&gt;因为每个目录文件的block中默认自带两条记录：.和..，.这条记录的inode就是目录文件自身的inode号，..这条记录的inode是父目录文件的inode号&lt;/li&gt;
&lt;li&gt;同时因为硬连接是真的硬，跟系统本身的文件一模一样，系统是分不清的，所以如果是在不同的目录底下建立目录的hard link 时，将可能会导致「同一个目录会有好几个父目录」的存在，如图&lt;img src=&quot;http://ov66b75df.bkt.clouddn.com/15128128700273.png&quot; alt=&quot;-w310&quot;/&gt;&lt;/li&gt;
&lt;li&gt;还有一些看不懂的解释
&lt;ol&gt;&lt;li&gt;因为如果使用hard link 连接到目录时， 连接的新目录得要多出一个. 以及.. ，那个.. 就会导致父目录也多出一个新的连接计算，如果多重处理时， 很可能会导致目录搜寻时的错误循环问题，导致一个名为死结的困境——鸟哥&lt;/li&gt;
&lt;li&gt;对一个目录创建硬连接时，要对目录下的所有文件创建硬连接——鸟哥&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;其他可参考解释
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/22394/why-are-hard-links-to-directories-not-allowed-in-unix-linux&quot; class=&quot;uri&quot;&gt;https://unix.stackexchange.com/questions/22394/why-are-hard-links-to-directories-not-allowed-in-unix-linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/50223526&quot; class=&quot;uri&quot;&gt;https://www.zhihu.com/question/50223526&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/longerzone/article/details/23870297&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/longerzone/article/details/23870297&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;mount---bind&quot;&gt;mount --bind&lt;/h3&gt;
&lt;p&gt;另外，虽然上面说解决硬连接无法连接目录的方法有软连接，但其实还有一个办法，在Linux中还能使用mount --bind命令&lt;br/&gt;有些程序里对软连接的支持并不好，这时就可以通过mount --bind命令来将两个目录连接起来&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;新建两个目录「mkdir test1 test2」，可以看到两个目录的inode号不同&lt;/li&gt;
&lt;li&gt;将两个目录bind起来「mount --bind test1 test2」，会发现inode号全部变成之前test1的inode号了，所以mount --bind命令是将前一个目录挂载到后一个目录上，所有对后一个目录的访问其实都是对前一个目录的访问&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;但不同于硬连接是把两个文件名关联同一个inode记录，当mount --bind命令执行后：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Linux将会把被挂载目录的目录项（也就是该目录文件的block，记录了下级目录的信息）屏蔽，在本例里就是 test2 的下级路径被隐藏起来了
&lt;ol&gt;&lt;li&gt;注意，只是隐藏不是删除，数据都没有改变，只是访问不到了&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;VFS会在内存创建一个vfsmount对象，这个对象里包含了整个文件系统所有的mount信息，其中就会添加本次mount中的信息，这个对象是一个HASH值对应表（HASH值通过对路径字符串的计算得来），表里就有 test1 到 test2 两个目录的HASH值对应关系&lt;/li&gt;
&lt;li&gt;命令执行完后，当访问 test2下的文件时，系统会告知 test2 的目录项被屏蔽掉了，自动转到内存里找VFS，通过vfsmount了解到 test2 和 test1 的对应关系，从而读取到 /test1 的inode，这样在 /test2 下读到的全是 /test1 目录下的文件&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;由上述过程可知，mount --bind 和硬连接的主要区别是：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;mount --bind连接的两个目录的inode号码并不一样，只是被挂载目录的block被屏蔽掉，inode被重定向到挂载目录的inode（被挂载目录的inode和block依然没变）&lt;/li&gt;
&lt;li&gt;两个目录的对应关系存在于内存里，一旦重启挂载关系就不存在了&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;替身&quot;&gt;替身&lt;/h2&gt;
&lt;p&gt;其实从上面的描述，你会发现，不管是软连接还是硬连接，都有各自的缺点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;软连接
&lt;ol&gt;&lt;li&gt;删除了原文件或修改原文件的路径，就会找不到原文件了&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;硬连接
&lt;ol&gt;&lt;li&gt;不能跨文件系统&lt;/li&gt;
&lt;li&gt;不能连接目录&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;那能不能设计一种连接方式，避免这些缺点，比这两种连接方式更稳定？&lt;br/&gt;重新设计有点困难，我们可以从优化开始：假设能把这两种方式结合在一起，是不是就完全没有缺点了？看上去可行，因为软连接的问题硬连接完全没有，硬连接的问题软连接也完全没有，只要两者结合就能互补，但你仔细想一下，软连接的问题硬连接也有，那就是虽然硬连接删除了原文件也能工作，但是需要在同一文件系统内才行，所以两种方式都有同样的问题：跨文件系统删除原文件，都会找不到原文件。&lt;/p&gt;
&lt;p&gt;假如忽略这个问题，结合软连接和硬连接的最简单方式就是扩展软连接了，因为硬连接本身就是文件系统的元功能，修改的动静太大，所以扩展软连接比较靠谱。扩展的方式很简单：在软连接文件的block中添加一条信息，也就是inode号，先找路径，如果找不到，就看Inode在不在，或者查找顺序反过来。&lt;br/&gt;而如果要进一步解决最后的问题，只能升级Inode了，让它能带有不同文件系统的前缀之类的，让inode号整个操作系统唯一。&lt;/p&gt;
&lt;p&gt;我们的思考先到这里，来看苹果公司的思考吧，苹果不仅思考了这个问题，而且还给出了他们的解决方案：替身（Alias）。&lt;br/&gt;其实说白了苹果的解决方案跟我们刚才想的一样，替身文件包含了原文件的路径和inode（好像不完全是这样，但是是类似的），当用户访问替身文件时，系统分析替身文件，找到原始文件的路径信息，然后判断原始文件是否存在，如果存在就访问它，如果不存在，就找具有相同inode的文件，然后访问该文件。&lt;br/&gt;所以替身虽然具有软硬连接的优点，但还会面临上面提到的最后一个问题。&lt;/p&gt;
&lt;p&gt;同时替身只是macOS自己的概念，并且是Finder层级的概念，所以终端下的程序（比如vim）是不能识别替身的。&lt;br/&gt;比如我手动创建一个替身「myfile的替身」，能看到确实是新文件，inode号不一样，大小也大很多，同时会看到文件属性稍微有点不一样（是普通文件类型，但是最后多了一个属性@），然后使用cat查看时，不会自动定向到myfile上，而是直接看到了它的内容。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;ls&lt;/span&gt; -lhi
&lt;span class=&quot;kw&quot;&gt;87455259&lt;/span&gt; -rw-r--r--  1 bigbear  staff    63B 11 30 10:51 hard
&lt;span class=&quot;kw&quot;&gt;87455259&lt;/span&gt; -rw-r--r--  1 bigbear  staff     6B 11 30 11:00 myfile
&lt;span class=&quot;kw&quot;&gt;87824419&lt;/span&gt; -rw-r--r--@ 1 bigbear  staff   880B 12  4 01:40 myfile的替身
&lt;span class=&quot;kw&quot;&gt;87450113&lt;/span&gt; lrwxr-xr-x  1 bigbear  staff     6B 11 30 10:44 soft -&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; myfile

$ &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt; myfile的替身
&lt;span class=&quot;kw&quot;&gt;bookm&lt;/span&gt;��s/b����nԿAop/tUsersbigbearDesktoptemp2myfile 0@m*���A�ϫ�    file:///
&lt;span class=&quot;kw&quot;&gt;Macintosh&lt;/span&gt; H �A���&lt;span class=&quot;ot&quot;&gt;$7&lt;/span&gt;2B43��0F-211��88C���/0dn�&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;��&lt;span class=&quot;kw&quot;&gt;@&lt;/span&gt;�T U V �� l &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;  �&lt;span class=&quot;kw&quot;&gt;0&lt;/span&gt; ���P&lt;span class=&quot;st&quot;&gt;&quot;��%&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是在finder中，你会看到替身的图标也是链接状的，你也可以双击替身打开myfile文件&lt;br/&gt;&lt;img src=&quot;http://ov66b75df.bkt.clouddn.com/15128129531096.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 10 Dec 2017 06:53:00 +0000</pubDate>
<dc:creator>赛艇队长</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/bellkosmos/p/8016911.html</dc:identifier>
</item>
<item>
<title>gitup问题的处理 - 流走的沙子</title>
<link>http://www.cnblogs.com/liuzoudeshazi/p/8016902.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liuzoudeshazi/p/8016902.html</guid>
<description>[unable to retrieve full-text content]在使用本地建立git仓库后，准备使用 因为之前已经登录了，所以没有给登录的命令行 1、git init 命令初始化仓库 2、git add . 命令将所有的文件传输到git仓库中 3、git commit -m '提交代码' 命令将本地修改的内容提交到缓存中，并未提交到gitup中 4、git re</description>
<pubDate>Sun, 10 Dec 2017 06:50:00 +0000</pubDate>
<dc:creator>流走的沙子</dc:creator>
<dc:identifier>http://www.cnblogs.com/liuzoudeshazi/p/8016902.html</dc:identifier>
</item>
<item>
<title>python3-day1 - 草原织网</title>
<link>http://www.cnblogs.com/koby2828/p/8016882.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/koby2828/p/8016882.html</guid>
<description>&lt;p&gt;&amp;#13;
                                    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;sr-only&quot;&gt;Close&lt;/span&gt;&lt;/button&gt;&amp;#13;
                                    &lt;h4 class=&quot;modal-title&quot;&gt;&amp;#13;
                                        请完成人机识别验证&amp;#13;
                                    &lt;/h4&gt;&amp;#13;
                                &lt;/p&gt;
                                &lt;div class=&quot;modal-body&quot; readability=&quot;33&quot;&gt;
                                    
                                    &lt;p&gt;&amp;#13;
                                        &lt;span id=&quot;geetestLoading&quot;&gt; 验证码组件加载中,请稍后...&lt;/span&gt;&amp;#13;
                                    &lt;/p&gt;
                                &lt;/div&gt;
                            </description>
<pubDate>Sun, 10 Dec 2017 06:42:00 +0000</pubDate>
<dc:creator>草原织网</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://passport.cnblogs.com/user/signin?ReturnUrl=http%3A%2F%2Fwww.cnblogs.com%2Fkoby2828%2Fp%2F8016882.html&amp;AspxAutoDetectCookieSupport=1</dc:identifier>
</item>
<item>
<title>NIO相关基础篇一 - 匠心零度</title>
<link>http://www.cnblogs.com/lirenzuo/p/8016809.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lirenzuo/p/8016809.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;转载请注明原创出处，谢谢！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;说在前面&quot;&gt;说在前面&lt;/h2&gt;
&lt;p&gt;NIO相关知识是很多后续的一些基础知识，所以今天这篇文章仅仅是简单介绍，后续会继续有一到二篇相关NIO内容。&lt;/p&gt;
&lt;h2 id=&quot;什么是nio&quot;&gt;什么是NIO&lt;/h2&gt;
&lt;p&gt;Java NIO（ New IO） 是从Java 1.4版本开始引入的一个新的IO API，可以替代标准的Java IO API。NIO与原来的IO有同样的作用和目的，但是使用的方式完全不同， NIO支持面向缓冲区的、基于通道的IO操作。 NIO将以更加高效的方式进行文件的读写操作。&lt;/p&gt;
&lt;h2 id=&quot;nio与普通io的主要区别&quot;&gt;NIO与普通IO的主要区别&lt;/h2&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td align=&quot;center&quot;&gt;面向流(Stream Oriented)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;面向缓冲区(Buffer Oriented)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;阻塞IO(Blocking IO)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;非阻塞IO(Non Blocking IO)&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;center&quot;&gt;(无)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;选择器(Selectors)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;ul&gt;&lt;li&gt;Channels and Buffers（通道和缓冲区）：标准的IO基于字节流和字符流进行操作的，而NIO是基于通道（Channel）和缓冲区（Buffer）进行操作，数据总是从通道读取到缓冲区中，或者从缓冲区写入到通道中。&lt;/li&gt;
&lt;li&gt;Asynchronous IO（异步IO）：Java NIO可以让你异步的使用IO，例如：当线程从通道读取数据到缓冲区时，线程还是可以进行其他事情。当数据被写入到缓冲区时，线程可以继续处理它。从缓冲区写入通道也类似。&lt;/li&gt;
&lt;li&gt;Selectors（选择器）：Java NIO引入了选择器的概念，选择器用于监听多个通道的事件（比如：连接打开，数据到达）。因此，单个的线程可以监听多个数据通道。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;Asynchronous IO（异步IO）、Selectors（选择器）等后续文章会继续介绍的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;缓冲区buffer&quot;&gt;缓冲区（Buffer）&lt;/h2&gt;
&lt;p&gt;通过上面NIO与普通IO的主要区别也可以看到在基本的IO操作中所有的操作都是基于流进行操作的，而在NIO中所有的操作都是基于缓冲区继续操作的，所有的读写操作都是通过缓存区来进行完成，缓冲区（Buffer）是一个线性的、有序的数据集，只能容纳特定的数据类型（基本就是基本数据类型对应的Buffer或者起子类）。&lt;/p&gt;
&lt;h2 id=&quot;各各数据类型的缓存区类&quot;&gt;各各数据类型的缓存区类&lt;/h2&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;2&quot;&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;center&quot;&gt;ByteBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储字节的Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;center&quot;&gt;CharBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储字符的Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;center&quot;&gt;ShortBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储短整型的Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td align=&quot;center&quot;&gt;IntBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储整型的Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td align=&quot;center&quot;&gt;LongBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储长整型的Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;FloatBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储单精度浮点型Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td align=&quot;center&quot;&gt;DoubleBuffer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;存储双精度浮点型Buffer&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;blockquote readability=&quot;10.693422519509&quot;&gt;
&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt;看到上面这几类是不是想起了JAVA的8种基本数据类型，&lt;strong&gt;唯一缺少boolean&lt;/strong&gt;对于的类型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一问：为什么boolean不需要缓存呢？&lt;/strong&gt;&lt;br/&gt;可以查阅之前写的：&lt;a href=&quot;http://mp.weixin.qq.com/s/AIvthkKEqacnfZBIZAxSKA&quot;&gt;java二进制相关基础&lt;/a&gt;，里面有描述规范中数字的内部表示和存储，boolean所占位数1bit（取值只有true或者false），由于字节(byte)是操作系统和所有I/O设备使用的基本数据类型，所以基本都是以字节或者连续的一段字节来存储表示，所以就没有boolean，感觉也没有必要boolean类型的缓存操作（像RocketMQ源码里面可能把一个Int里面的某位来表示boolean，其他位继续来存储数据，&lt;strong&gt;欢迎关注我的公众号【匠心零度】&lt;/strong&gt;，后续RocketMQ源码类分析的时候如何运用上述技巧进行说明等，其实上面我写的好几篇文章都是为了后续RocketMQ源码分析做准备的）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;buffer使用&quot;&gt;Buffer使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;读数据：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;flip()方法&lt;/li&gt;
&lt;li&gt;将Buffer从写模式切换到读模式&lt;/li&gt;
&lt;li&gt;调用flip()方法会将position设回0，并将limit设置成之前position的值。&lt;/li&gt;
&lt;li&gt;buf.flip();&lt;/li&gt;
&lt;li&gt;buf.get()&lt;/li&gt;
&lt;li&gt;读取数据&lt;/li&gt;
&lt;li&gt;Buffer.rewind()
&lt;ul&gt;&lt;li&gt;将position设回0，所以你可以重读Buffer中的所有数据&lt;/li&gt;
&lt;li&gt;limit保持不变，仍然表示能从Buffer中读取多少个元素（byte、char等）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Buffer.mark()方法，可以标记Buffer中的一个特定position。之后可以通过调用。&lt;/li&gt;
&lt;li&gt;Buffer.reset()方法，恢复到Buffer.mark()标记时的position。&lt;/li&gt;
&lt;li&gt;clear()方法会：&lt;/li&gt;
&lt;li&gt;清空整个缓冲区。&lt;/li&gt;
&lt;li&gt;position将被设回0，limit被设置成 capacity的值&lt;/li&gt;
&lt;li&gt;compact()方法：&lt;/li&gt;
&lt;li&gt;只会清除已经读过的数据；任何未读的数据都被移到缓冲区的起始处，新写入的数据将放到缓冲区未读数据的后面。&lt;/li&gt;
&lt;li&gt;将position设到最后一个未读元素正后面，limit被设置成 capacity的值。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;写数据：&lt;/strong&gt;&lt;br/&gt;buf.put(127);&lt;/p&gt;
&lt;h2 id=&quot;缓冲区的基本属性&quot;&gt;缓冲区的基本属性&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;容量 (capacity)&lt;/strong&gt;:表示 Buffer 最大数据容量，缓冲区容量不能为负，并且创建后不能更改。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;限制 (limit)&lt;/strong&gt;:第一个不应该读取或写入的数据的索引，即位于 limit 后的数据不可读写。缓冲区的限制不能为负，并且不能大于其容量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置 (position)&lt;/strong&gt;:下一个要读取或写入的数据的索引。缓冲区的位置不能为负，并且不能大于其限制。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt;标记、 位置、 限制、 容量遵守以下不变式： 0 &amp;lt;= position &amp;lt;= limit &amp;lt;= capacity。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;为了更形象解释上面重要属性，准备配上简单代码以及图来进行说明就容易懂了。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;&lt;span class=&quot;co&quot;&gt;//第一步，获取IntBuffer，通过IntBuffer.allocate操作&lt;/span&gt;
IntBuffer buf = IntBuffer.&lt;span class=&quot;fu&quot;&gt;allocate&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) ;    &lt;span class=&quot;co&quot;&gt;// 准备出10个大小的缓冲区&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;//第二步未操作前输出属性值&lt;/span&gt;
System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;position = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;position&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，limit = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;limit&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，capacty = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;capacity&lt;/span&gt;()) ;

&lt;span class=&quot;co&quot;&gt;//第三步进行设置数据&lt;/span&gt;
buf.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) ;    &lt;span class=&quot;co&quot;&gt;// 设置一个数据&lt;/span&gt;
buf.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;) ;   &lt;span class=&quot;co&quot;&gt;// 设置二个数据&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;//第四步操作后输出属性值&lt;/span&gt;
System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;position = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;position&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，limit = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;limit&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，capacty = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;capacity&lt;/span&gt;()) ;

&lt;span class=&quot;co&quot;&gt;//第五步将Buffer从写模式切换到读模式 postion = 0 ,limit = 原本position&lt;/span&gt;
buf.&lt;span class=&quot;fu&quot;&gt;flip&lt;/span&gt;() ;     

&lt;span class=&quot;co&quot;&gt;//第六步操作后输出属性值&lt;/span&gt;
System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;position = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;position&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，limit = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;limit&lt;/span&gt;() + &lt;span class=&quot;st&quot;&gt;&quot;，capacty = &quot;&lt;/span&gt; + buf.&lt;span class=&quot;fu&quot;&gt;capacity&lt;/span&gt;()) ;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序输出结果：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;position = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;，limit = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;，capacty = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;
position = &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;，limit = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;，capacty = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;
position = &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;，limit = &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;，capacty = &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看下图来进行说明：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/7849276-83180c8b2c7e12df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;通道channel&quot;&gt;通道（Channel）&lt;/h2&gt;
&lt;p&gt;通道表示打开到 IO 设备(例如：文件、套接字)的连接。若需要使用 NIO 系统，需要获取用于连接 IO 设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理。Channel 负责传输， Buffer 负责存储。通道是由 java.nio.channels 包定义的。 Channel 表示 IO 源与目标打开的连接。Channel 类似于传统的“流”。只不过 Channel本身不能直接访问数据， Channel 只能与Buffer 进行交互。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通道都是操作缓存区完成全部的功能的。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;java中所有已知-channel-实现类&quot;&gt;Java中所有已知 Channel 实现类：&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;AbstractInterruptibleChannel&lt;/li&gt;
&lt;li&gt;AbstractSelectableChannel&lt;/li&gt;
&lt;li&gt;DatagramChannel&lt;/li&gt;
&lt;li&gt;FileChannel&lt;/li&gt;
&lt;li&gt;Pipe.SinkChannel&lt;/li&gt;
&lt;li&gt;Pipe.SourceChannel&lt;/li&gt;
&lt;li&gt;SelectableChannel&lt;/li&gt;
&lt;li&gt;ServerSocketChannel&lt;/li&gt;
&lt;li&gt;SocketChannel&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;常用的有入下几个：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;FileChannel：用于读取、写入、映射和操作文件的通道。&lt;/li&gt;
&lt;li&gt;DatagramChannel：通过 UDP 读写网络中的数据通道。&lt;/li&gt;
&lt;li&gt;SocketChannel：通过 TCP 读写网络中的数据。&lt;/li&gt;
&lt;li&gt;ServerSocketChannel：可以监听新进来的 TCP 连接，对每一个新进来的连接都会创建一个 SocketChannel。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;获取通道&quot;&gt;获取通道&lt;/h2&gt;
&lt;p&gt;获取通道的一种方式是对支持通道的对象调用getChannel() 方法。支持通道的类如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;FileInputStream&lt;/li&gt;
&lt;li&gt;FileOutputStream&lt;/li&gt;
&lt;li&gt;RandomAccessFile&lt;/li&gt;
&lt;li&gt;DatagramSocket&lt;/li&gt;
&lt;li&gt;Socket&lt;/li&gt;
&lt;li&gt;ServerSocket&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;获取通道的其他方式是使用 Files 类的静态方法 newByteChannel() 获取字节通道。或者通过通道的静态方法 open() 打开并返回指定通道。&lt;/p&gt;
&lt;h2 id=&quot;filechannel&quot;&gt;FileChannel&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/7849276-92991d92788fd752.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;今天只是NIO相关基础篇一，所以有很多并没有涉及到，希望上面说的这样让大家有一个新的了解，未完待续……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;如果读完觉得有收获的话，欢迎点赞、关注、加公众号【匠心零度】。&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;个人公众号，欢迎关注，查阅更多精彩历史！！！&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/7849276-5f48f1430e958383.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;匠心零度公众号&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 10 Dec 2017 06:19:00 +0000</pubDate>
<dc:creator>匠心零度</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lirenzuo/p/8016809.html</dc:identifier>
</item>
<item>
<title>unity中Ray、RaycastHit 、Raycast（小白之路） - Thor_one</title>
<link>http://www.cnblogs.com/Thor-zhiyin/p/8016753.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Thor-zhiyin/p/8016753.html</guid>
<description>&lt;p&gt;1.Ray&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;1&lt;/span&gt; Ray(Vector3 origin, Vector3 direction)&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;Ray:在程序中可以理解为射线，就是以某个位置（origin)朝某个方向(direction)的一条射线，是一个三维坐标&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 Ray ray = &lt;span&gt;new&lt;/span&gt; Ray(transform.position, transform.forward);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.RaycastHit &lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;1&lt;/span&gt; RaycastHit hitInfo;&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;它的结构体如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; RaycastResult  
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{  
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Fields  
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; BaseRaycaster module; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; BaseInputModule that raised the hit.  &lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;   
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; distance; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Distance to the hit.  &lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt;   
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;float&lt;/span&gt; index; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Hit index.  &lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;   
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; depth; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;The relative depth of the element.  &lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;   
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; sortingLayer; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The SortingLayer of the hit object. 官方解释的这两个一样，完全不明白  &lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;   
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; sortingOrder; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The SortingOrder for the hit object.  &lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;   
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; Vector3 worldPosition; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The world position of the where the raycast has hit.  &lt;/span&gt;
&lt;span&gt;19&lt;/span&gt;   
&lt;span&gt;20&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; Vector3 worldNormal; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The normal at the hit location of the raycast.  &lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;   
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; Vector2 screenPosition; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The screen position from which the raycast was generated.  
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;   
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt;25&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Properties  
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt;27&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; GameObject gameObject { &lt;span&gt;//&lt;/span&gt;&lt;span&gt; The GameObject that was hit by the raycast.  &lt;/span&gt;
&lt;span&gt;28&lt;/span&gt; &lt;span&gt;get&lt;/span&gt;&lt;span&gt;;  
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;;  
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;}  
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;   
&lt;span&gt;32&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isValid { &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Is there an associated module and a hit GameObject.  &lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;get&lt;/span&gt;&lt;span&gt;;  
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;}  
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;   
&lt;span&gt;36&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; Methods  
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;  
&lt;span&gt;39&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Clear ();  
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;   
&lt;span&gt;41&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt; ToString ();  
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; }  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它是用于存储射线碰撞到的第一个对象信息,所以需要提前创建这个对象，用于信息的碰撞信息的存储；&lt;/p&gt;
&lt;p&gt;3.Raycast&lt;/p&gt;
&lt;p&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; Raycast(Ray ray, &lt;span&gt;out&lt;/span&gt; RaycastHit hitInfo, &lt;span&gt;float&lt;/span&gt; maxDistance, int layermask );&lt;/span&gt;  &lt;/p&gt;
&lt;p&gt;ray:射线结构体的信息，包括起点，方向；也就是一条射线&lt;/p&gt;
&lt;p&gt;hitinfo:这条射线所碰撞物体的相关信息；&lt;/p&gt;
&lt;p&gt;maxDistance:这条射线的最大距离；&lt;/p&gt;
&lt;p&gt;layermask:这条射线在哪层上进行碰撞&lt;/p&gt;
&lt;p&gt;这个函数的意思就是：以射线ray经过的maxDistance长度之内，与第一个对象进行的物理碰撞的信息，存储在hitInfo中；如果有碰撞物体，返回true, 反之false;&lt;/p&gt;
&lt;p&gt;1.现在我要在一个层中控制人物方向（面对方向就可以这样做）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
Ray ray =&lt;span&gt; Camera.main.ScreenPointToRay(Input.mousePosition);
        RaycastHit hitInfo;
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(Physics.Raycast(ray, &lt;span&gt;out&lt;/span&gt; hitInfo, &lt;span&gt;100&lt;/span&gt;&lt;span&gt;,  groundLayerIndex))
        {
            Vector3 target &lt;/span&gt;=&lt;span&gt; hitInfo.point;
            target.y &lt;/span&gt;=&lt;span&gt; transform.position.y;
            transform.LookAt(target);
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.如我要接受子弹碰撞信息，并且控制子弹设计方向&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; Ray ray = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Ray(transform.position, transform.forward);
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;        RaycastHit hitInfo;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(Physics.Raycast(ray,&lt;span&gt;out&lt;/span&gt;&lt;span&gt; hitInfo))
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;             lineRenderer.SetPosition(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;, hitInfo.point);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             lineRenderer.SetPosition(&lt;span&gt;1&lt;/span&gt;, transform.position + transform.forward * &lt;span&gt;100&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         }
&lt;/pre&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 10 Dec 2017 05:55:00 +0000</pubDate>
<dc:creator>Thor_one</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Thor-zhiyin/p/8016753.html</dc:identifier>
</item>
<item>
<title>Linux企业运维人员最常用150个命令汇总 - 阿龙along</title>
<link>http://www.cnblogs.com/along21/p/8011519.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/along21/p/8011519.html</guid>
<description>&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;&lt;strong&gt;命令&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;&lt;strong&gt;功能说明&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;线上查询及帮助命令(2个)&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;man&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看命令帮助，命令的词典，更复杂的还有info，但不常用。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;help&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看Linux内置命令的帮助，比如cd命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;文件和目录操作命令(18个)&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ls&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼list，功能是列出目录的内容及其内容属性信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;cd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼change directory，功能是从当前工作目录切换到指定的工作目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;cp&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼copy，其功能为复制文件或目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;find&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查找的意思，用于查找目录及目录下的文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mkdir&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼make directories，其功能是创建目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mv&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼move，其功能是移动或重命名文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;pwd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼print working directory，其功能是显示当前工作目录的绝对路径。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;rename&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;用于重命名文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;rm&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼remove，其功能是删除一个或多个文件或目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;rmdir&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼remove empty directories，功能是删除空目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;touch&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;创建新的空文件，改变已有文件的时间戳属性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tree&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;功能是以树形结构显示目录下的内容。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;basename&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示文件名或目录名。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dirname&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示文件或目录路径。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chattr&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;改变文件的扩展属性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;lsattr&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看文件扩展属性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;file&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;显示文件的类型。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;md5sum&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;计算和校验文件的MD5值。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;查看文件及内容处理命令（21个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;cat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;全拼concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tac&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;tac是cat的反向拼写，因此命令的功能为反向显示文件内容。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;more&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;分页显示文件内容。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;less&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;分页显示文件内容，more命令的相反用法。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;head&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示文件内容的头部。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tail&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示文件内容的尾部。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;cut&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将文件的每一行按指定分隔符分割并输出。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;split&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;分割文件为不同的小片段。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;paste&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;按行合并文件内容。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;sort&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;对文件的文本内容排序。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;uniq&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;去除重复行。oldboy&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;wc&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;统计文件的行数、单词数或字节数。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;iconv&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;转换文件的编码格式。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dos2unix&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将DOS格式文件转换成UNIX格式。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;diff&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼difference，比较文件的差异，常用于文本文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;vimdiff&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;命令行可视化文件比较工具，常用于文本文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;rev&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;反向输出文件内容。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;grep/egrep&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;过滤字符串，三剑客老三。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;join&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;按两个文件的相同字段合并。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tr&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;替换或删除字符。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;vi/vim&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;命令行文本编辑器。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;文件压缩及解压缩命令（4个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tar&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;打包压缩。oldboy&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;unzip&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;解压文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;gzip&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;gzip压缩工具。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;zip&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;压缩工具。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;信息显示命令（11个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;uname&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示操作系统相关信息的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;hostname&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示或者设置当前系统的主机名。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dmesg&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示开机信息，用于诊断系统故障。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;uptime&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示系统运行时间及负载。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;stat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示文件或文件系统的状态。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;du&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;计算磁盘空间使用情况。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;df&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;报告文件系统磁盘空间的使用情况。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;top&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;实时显示系统资源使用情况。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;free&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;查看系统内存。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;date&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示与设置系统时间。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;cal&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看日历等时间信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;搜索文件命令（4个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;which&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查找二进制命令，按环境变量PATH路径查找。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;find&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;从磁盘遍历查找文件或目录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;whereis&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查找二进制命令，按环境变量PATH路径查找。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;locate&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用updatedb更新库。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;用户管理命令（10个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;useradd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;添加用户。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;usermod&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;修改系统已经存在的用户属性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;userdel&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;删除用户。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;groupadd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;添加用户组。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;passwd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;修改用户密码。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chage&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;修改用户密码有效期限。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;id&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;查看用户的uid,gid及归属的用户组。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;su&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;切换用户身份。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;visudo&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;编辑/etc/sudoers文件的专属命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;sudo&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;以另外一个用户身份（默认root用户）执行事先在sudoers文件允许的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;基础网络操作命令（11个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;telnet&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;使用TELNET协议远程登录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ssh&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;使用SSH加密协议远程登录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;scp&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全拼secure copy，用于不同主机之间复制文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;wget&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;命令行下载文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ping&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;测试主机之间网络的连通性。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;route&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示和设置linux系统的路由表。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ifconfig&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看、配置、启用或禁用网络接口的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ifup&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;启动网卡。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ifdown&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;关闭网卡。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;netstat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;查看网络状态。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ss&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;查看网络状态。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;深入网络操作命令（9个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;nmap&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;网络扫描命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;lsof&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;全名list open files，也就是列举系统中已经被打开的文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mail&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;发送和接收邮件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mutt&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;邮件管理命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;nslookup&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;交互式查询互联网DNS服务器的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dig&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;查找DNS解析过程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;host&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;查询DNS的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;traceroute&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;追踪数据传输路由状况。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;tcpdump&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;命令行的抓包工具。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;有关磁盘与文件系统的命令（16个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mount&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;挂载文件系统。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;umount&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;卸载文件系统。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;fsck&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;检查并修复Linux文件系统。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dd&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;转换或复制文件。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dumpe2fs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;导出ext2/ext3/ext4文件系统信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;dump&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;ext2/3/4文件系统备份工具。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;fdisk&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;磁盘分区命令，适用于2TB以下磁盘分区。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;parted&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;磁盘分区命令，没有磁盘大小限制，常用于2TB以下磁盘分区。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mkfs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;格式化创建Linux文件系统。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;partprobe&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;更新内核的硬盘分区表信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;e2fsck&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;检查ext2/ext3/ext4类型文件系统。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mkswap&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;创建Linux交换分区。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;swapon&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;启用交换分区。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;swapoff&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;关闭交换分区。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;sync&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将内存缓冲区内的数据写入磁盘。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;resize2fs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;调整ext2/ext3/ext4文件系统大小。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;系统权限及用户授权相关命令（4个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chmod&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;改变文件或目录权限。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chown&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;改变文件或目录的属主和属组。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chgrp&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;更改文件用户组。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;umask&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示或设置权限掩码。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;查看系统用户登陆信息的命令（7个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;whoami&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示当前有效的用户名称，相当于执行id -un命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;who&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示目前登录系统的用户信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;w&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示已经登陆系统的用户列表，并显示用户正在执行的指令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;last&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示登入系统的用户。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;lastlog&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示系统中所有用户最近一次登录信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;users&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示当前登录系统的所有用户的用户列表。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;finger&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查找并显示用户信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;内置命令及其它（19个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;echo&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;打印变量，或直接输出指定的字符串&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;printf&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将结果格式化输出到标准输出。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;rpm&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;管理rpm包的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;yum&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;自动化简单化地管理rpm包的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;watch&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;周期性的执行给定的命令，并将命令的输出以全屏方式显示。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;alias&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;设置系统别名。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;unalias&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;取消系统别名。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;date&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看或设置系统时间。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;clear&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;清除屏幕，简称清屏。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;history&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看命令执行的历史纪录。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;eject&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;弹出光驱。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;time&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;计算命令执行时间。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;nc&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;功能强大的网络工具。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;xargs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将标准输入转换成命令行参数。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;exec&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;调用并执行指令的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;export&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;设置或者显示环境变量。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;unset&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;删除变量或函数。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;type&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;用于判断另外一个命令是否是内置命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;bc&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;命令行科学计算器&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;系统管理与性能监视命令(9个)&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;chkconfig&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;管理Linux系统开机启动项。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;vmstat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;虚拟内存统计。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;mpstat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;显示各个可用CPU的状态统计。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;iostat&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;统计系统IO。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;sar&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;全面地获取系统的CPU、运行队列、磁盘 I/O、分页（交换区）、内存、 CPU中断和网络等性能数据。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ipcs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;用于报告Linux中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ipcrm&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;用来删除一个或更多的消息队列、信号量集或者共享内存标识。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;strace&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;用于诊断、调试Linux用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ltrace&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;命令会跟踪进程的库函数调用,它会显现出哪个库函数被调用。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;关机/重启/注销和查看系统信息的命令（6个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;shutdown&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;关机。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;halt&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;关机。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;poweroff&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;关闭电源。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;logout&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;退出当前登录的Shell。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;exit&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;退出当前登录的Shell。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;Ctrl+d&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;退出当前登录的Shell的快捷键。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;2&quot; valign=&quot;top&quot; width=&quot;553&quot;&gt;
&lt;h2&gt;进程管理相关命令（15个）&lt;/h2&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;bg&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将一个在后台暂停的命令，变成继续执行  （在后台执行）。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;fg&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;将后台中的命令调至前台继续运行。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;jobs&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看当前有多少在后台运行的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;kill&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;终止进程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;killall&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;通过进程名终止进程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;pkill&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;通过进程名终止进程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;crontab&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;定时任务命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;ps&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;显示进程的快照。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;pstree&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;树形显示进程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;nice/renice&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;调整程序运行的优先级。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;nohup&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;忽略挂起信号运行指定的命令。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;pgrep&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查找匹配条件的进程。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;runlevel&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;查看系统当前运行级别。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;init&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot;&gt;
&lt;p&gt;切换运行级别。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.5&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;83&quot;&gt;
&lt;p&gt;service&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;470&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sun, 10 Dec 2017 05:38:00 +0000</pubDate>
<dc:creator>阿龙along</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/along21/p/8011519.html</dc:identifier>
</item>
</channel>
</rss>