<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>Docker部属Nsq集群 - lpxxn</title>
<link>http://www.cnblogs.com/li-peng/p/7729174.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/li-peng/p/7729174.html</guid>
<description>[unable to retrieve full-text content]用一了段时间NSQ还是很稳定的。除了稳定，还有一个特别值的说的就是部署非常简单。总想写点什么推荐给大家使用nsq来做一些东西。但是就是因为他太简单易用，文档也比较简单易懂。一直不知道要写啥！！！！！ nsq官网： http://nsq.io/ 为了容灾需要对nsqd多机器部属，有了Docker后，快</description>
<pubDate>Wed, 25 Oct 2017 07:40:00 +0000</pubDate>
<dc:creator>lpxxn</dc:creator>
<dc:identifier>http://www.cnblogs.com/li-peng/p/7729174.html</dc:identifier>
</item>
<item>
<title>使用spark与MySQL进行数据交互的方法 - 扎心了老铁</title>
<link>http://www.cnblogs.com/kangoroo/p/7728636.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kangoroo/p/7728636.html</guid>
<description>[unable to retrieve full-text content]在项目中，遇到一个场景是，需要从Hive数据仓库中拉取数据，进行过滤、裁剪或者聚合之后生成中间结果导入MySQL。 对于这样一个极其普通的离线计算场景，有多种技术选型可以实现。例如，sqoop，MR，HSQL。 我们这里使用的spark，优点来说是两个：一是灵活性高，二是代码简洁。 1）灵活性高 相</description>
<pubDate>Wed, 25 Oct 2017 07:32:00 +0000</pubDate>
<dc:creator>扎心了老铁</dc:creator>
<dc:identifier>http://www.cnblogs.com/kangoroo/p/7728636.html</dc:identifier>
</item>
<item>
<title>如何高效的编写Verlog HDL——菜鸟版 - NingHeChuan</title>
<link>http://www.cnblogs.com/ninghechuan/p/7729078.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ninghechuan/p/7729078.html</guid>
<description>[unable to retrieve full-text content]工欲善其事、必先利其器！要想高效的编写verilog没有一个好的编辑器可不行，所以我这里推荐两款十分好用的编辑器Notepad++和Gvim，这两款编辑器由于其强大的添加插件的功能，所以深受代码工作者的喜爱，那么对于FPGA新手而言，我觉的去学较复杂的gvim编辑指令，那就有点本末倒置了，所以对于初</description>
<pubDate>Wed, 25 Oct 2017 07:29:00 +0000</pubDate>
<dc:creator>NingHeChuan</dc:creator>
<dc:identifier>http://www.cnblogs.com/ninghechuan/p/7729078.html</dc:identifier>
</item>
<item>
<title>Hadoop（十三）分析MapReduce程序 - 苦水润喉</title>
<link>http://www.cnblogs.com/zhangyinhua/p/7726655.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhangyinhua/p/7726655.html</guid>
<description>[unable to retrieve full-text content]前言 刚才发生了悲伤的一幕，本来这篇博客马上就要写好的，花了我一晚上的时间。但是刚才电脑没有插电源就没有了。很难受！想哭，但是没有办法继续站起来。 前面的一篇博文中介绍了什么是MapReduce，这一篇给大家详细的分享一下MapReduce的运行原理。 一、写一个MapReduce程序例子 1.1、</description>
<pubDate>Wed, 25 Oct 2017 07:15:00 +0000</pubDate>
<dc:creator>苦水润喉</dc:creator>
<dc:identifier>http://www.cnblogs.com/zhangyinhua/p/7726655.html</dc:identifier>
</item>
<item>
<title>在MVC中使用rdlc格式的报表 - NaYoung</title>
<link>http://www.cnblogs.com/liuyoung/p/7728773.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/liuyoung/p/7728773.html</guid>
<description>[unable to retrieve full-text content]前言 近期，在公司做的项目中做到报表模块需要使用rdlc格式的报表，这个报表需要使用WebForm来加载，但是现在用ASP.NET做项目基本上都是MVC。由于以前没有使用过，因此记录下来，供以后查阅。 下面做个简单的Demo，使用的工具是VS2012+SQL Server2012。 一、准备数据库 </description>
<pubDate>Wed, 25 Oct 2017 07:03:00 +0000</pubDate>
<dc:creator>NaYoung</dc:creator>
<dc:identifier>http://www.cnblogs.com/liuyoung/p/7728773.html</dc:identifier>
</item>
<item>
<title>Akka（31）： Http：High-Level-Api，Route rejection handling - 雪川大虫</title>
<link>http://www.cnblogs.com/tiger-xc/p/7728221.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tiger-xc/p/7728221.html</guid>
<description>[unable to retrieve full-text content]Route 是Akka-http routing DSL的核心部分，使用户能比较方便的从http-server的角度筛选http-request、进行server运算、构建回复的http-response。所谓筛选http-request主要目的是容许request进入下一内层Route，或者拒绝r</description>
<pubDate>Wed, 25 Oct 2017 06:37:00 +0000</pubDate>
<dc:creator>雪川大虫</dc:creator>
<dc:identifier>http://www.cnblogs.com/tiger-xc/p/7728221.html</dc:identifier>
</item>
<item>
<title>面向程序员编程——精研排序算法 - 一面千人</title>
<link>http://www.cnblogs.com/Evsward/p/sort.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Evsward/p/sort.html</guid>
<description>[unable to retrieve full-text content]这篇文章很长，我花了好久的时间（中间公司出了bug，加班了好几天( ¯ ¨̯ ¯̥̥ )）进行整理，如有任何疑问，欢迎随时留言。 关键字：排序算法，时间复杂度，空间复杂度 排序就是研究如何将一系列数据按照某种逻辑顺序重新排列的一门算法。在计算机早期，排序要占用大量计算资源是人们的共识，而今天随着机器</description>
<pubDate>Wed, 25 Oct 2017 06:35:00 +0000</pubDate>
<dc:creator>一面千人</dc:creator>
<dc:identifier>http://www.cnblogs.com/Evsward/p/sort.html</dc:identifier>
</item>
<item>
<title>【计算机网络】 一个小白的DNS学习笔记      (＞﹏＜） - 外婆的彭湖湾</title>
<link>http://www.cnblogs.com/penghuwan/p/7728673.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/penghuwan/p/7728673.html</guid>
<description>[unable to retrieve full-text content]一个小白的DNS学习笔记， 主要内容包括： 1.DNS的作用  2. DNS的的工作过程 3. DNS服务器的层次和类别 4. DNS记录的格式</description>
<pubDate>Wed, 25 Oct 2017 06:30:00 +0000</pubDate>
<dc:creator>外婆的彭湖湾</dc:creator>
<dc:identifier>http://www.cnblogs.com/penghuwan/p/7728673.html</dc:identifier>
</item>
<item>
<title>【Java学习笔记之三十四】超详解Java多线程基础 - Angel_Kitty</title>
<link>http://www.cnblogs.com/ECJTUACM-873284962/p/7728629.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ECJTUACM-873284962/p/7728629.html</guid>
<description>[unable to retrieve full-text content]前言 多线程并发编程是Java编程中重要的一块内容，也是面试重点覆盖区域，所以学好多线程并发编程对我们来说极其重要，下面跟我一起开启本次的学习之旅吧。 正文 线程与进程 1 线程：进程中负责程序执行的执行单元 线程本身依靠程序进行运行 线程是程序中的顺序控制流，只能使用分配给程序的资源和环境 2 进</description>
<pubDate>Wed, 25 Oct 2017 06:24:00 +0000</pubDate>
<dc:creator>Angel_Kitty</dc:creator>
<dc:identifier>http://www.cnblogs.com/ECJTUACM-873284962/p/7728629.html</dc:identifier>
</item>
<item>
<title>Pyhton编程（四）之基本数据类型-字符串详解 - 无敌小怪兽</title>
<link>http://www.cnblogs.com/Chen-Zhipeng/p/7724715.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Chen-Zhipeng/p/7724715.html</guid>
<description>[unable to retrieve full-text content]一：字符串是什么？ 字符串是Python最常用的一种数据类型，虽然看似简单，但能够以不同的方式来使用它们。 字符串就是一系列的字符，在Python中，用引号括起来的都是字符串，其中的引号可以是单引号，也可以是双引号。如“name”、‘age’都可以称为字符串 二：字符串的创建 三：字符串的常用功能（</description>
<pubDate>Wed, 25 Oct 2017 06:22:00 +0000</pubDate>
<dc:creator>无敌小怪兽</dc:creator>
<dc:identifier>http://www.cnblogs.com/Chen-Zhipeng/p/7724715.html</dc:identifier>
</item>
</channel>
</rss>