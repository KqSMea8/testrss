<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>程序员薪水的那些事。 - kiba518</title>
<link>http://www.cnblogs.com/kiba/p/9976957.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kiba/p/9976957.html</guid>
<description>&lt;p&gt;程序员薪水是有高有低的，这事没什么特别，因为任何行业的薪水都是有高有低的。&lt;/p&gt;
&lt;p&gt;但程序员的薪水浮动能从2千到五万，这事就很有趣了。&lt;/p&gt;
&lt;p&gt;在三线城市，两万以上的程序员是凤毛菱角的，就算是架构师也只有极少数的人能超过两万。&lt;/p&gt;
&lt;p&gt;所以，可以直接将那些两万以上的程序员，归类为一二线城市。&lt;/p&gt;
&lt;p&gt;换言之，如果你所属的公司的架构师的工资在两万左右，那么你肯定在三线城市。&lt;/p&gt;
&lt;p&gt;不论你认为你的家乡有多棒，事实是，你毕业后，十年之内很难突破两万薪资。&lt;/p&gt;
&lt;p&gt;这很好理解，参考一下你所属公司的架构师就可以了。一二线城市同理。&lt;/p&gt;
&lt;p&gt;所以，那些月薪3万要避开什么，如何做才能月薪2万，月薪1万人群特点等等相关的文章，他们到底在写什么？鬼才知道。&lt;/p&gt;
&lt;p&gt;但我知道另一件事，那就是，写文章是有技巧的，也是有目的性的。&lt;/p&gt;
&lt;p&gt;所以，特别会写的人，有时候会故意歪曲事实，写一些让人一看就很气愤的文字来增加阅读量。&lt;/p&gt;
&lt;p&gt;​&lt;img src=&quot;https://img.mukewang.com/5bf018370001889908050593.png&quot; alt=&quot;图片描述&quot; data-original=&quot;https://img.mukewang.com/5bf018370001889908050593.png&quot;/&gt;&lt;br/&gt;知道了工资上限后，我们再一起看看下限。&lt;/p&gt;
&lt;p&gt;程序员工资的下限，远远比上限有趣。&lt;/p&gt;
&lt;p&gt;在三线城市也是有大厂的，他们是本地政府扶植和依赖的科技企业。&lt;/p&gt;
&lt;p&gt;这种大厂给毕业生的工资很高，本硕博大约的起点是4K，5K，6K。&lt;/p&gt;
&lt;p&gt;刚毕业的学生值那么多钱吗？当然不值。&lt;/p&gt;
&lt;p&gt;因为他们不但不能干活，而且他们还会创造返工和误工。&lt;/p&gt;
&lt;p&gt;并且还会骚扰成手，影响他人的工作进度。&lt;/p&gt;
&lt;p&gt;这种零输出或负输出大约会持续一到两年，这个因人而异。&lt;/p&gt;
&lt;p&gt;那么，大厂为什么给他们那么高的工资呢？&lt;/p&gt;
&lt;p&gt;因为，大厂有培养技术人才的义务。&lt;/p&gt;
&lt;p&gt;如何培养技术人才呢？&lt;/p&gt;
&lt;p&gt;任正非有句话说的非常好：【钱给多了，不是人才也变成了人才！】&lt;/p&gt;
&lt;p&gt;那么那些没有被大厂收录的同学呢？&lt;/p&gt;
&lt;p&gt;很遗憾，你们没那么幸运，只能在悲惨的，适者生存的环境中，学习如何活下去。&lt;/p&gt;
&lt;p&gt;公司只会给你城市最低标准的工资。&lt;/p&gt;
&lt;p&gt;在三线城市，不论专本，起薪都一样，2k。&lt;/p&gt;
&lt;p&gt;然后，那些自学能力不及格的同学，很快，连这2k都拿不到了，因为他们被淘汰了。&lt;/p&gt;
&lt;p&gt;当然，被淘汰并不意味着人生失败，也许你可以在卖衣服或卖咖啡的道路上做到月薪10万呢！&lt;/p&gt;
&lt;p&gt;那些硕士博士呢？&lt;/p&gt;
&lt;p&gt;很遗憾，他们更悲惨，因为他们的起薪也是2k，不过，通常硕博是接受不了这样的羞辱的，而公司通常也是留不下硕博的。&lt;/p&gt;
&lt;p&gt;所以，大家形成了默契，你不招聘我，我也不应聘你。&lt;/p&gt;
&lt;p&gt;那么硕博哪里去了？&lt;/p&gt;
&lt;p&gt;不知道，也许是去一二线城市了，也许是去卖衣服了，总之不在我们身边。&lt;/p&gt;
&lt;p&gt;那些在我们身边的硕博？大约的确是厚脸皮的。O(∩_∩)O&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.mukewang.com/5bf017db00013dc008080568.png&quot; alt=&quot;图片描述&quot; data-original=&quot;https://img.mukewang.com/5bf017db00013dc008080568.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;那些成功跻身进入IT行业的大厂弃儿呢？&lt;/p&gt;
&lt;p&gt;恭喜你，你将在两三年后，拿到和那些进入大厂同学第一年一样的工资——4K。&lt;/p&gt;
&lt;p&gt;怎么样，有没有很兴奋！O(∩_∩)O O(∩_∩)O&lt;/p&gt;
&lt;p&gt;好事不止如此。&lt;/p&gt;
&lt;p&gt;如果，你在大厂弃儿中出类拔萃，还会重新进入大厂的社招视野呢!&lt;/p&gt;
&lt;p&gt;怎么样，有没有更兴奋了，你完成了人生逆袭呢！O(∩_∩)OO(∩_∩)O&lt;/p&gt;
&lt;p&gt;当然，你是不会比同级的大厂员工薪水高的，即便你的技术是他们的十倍以上。&lt;/p&gt;
&lt;p&gt;因为大厂是推崇集体主义的，要能者多劳，能者多劳，能者多劳，均分所得。&lt;/p&gt;
&lt;p&gt;很心酸？&lt;/p&gt;
&lt;p&gt;那我们换位思考一下。&lt;/p&gt;
&lt;p&gt;大厂社招的目的，本就是招聘一些能干活的人，招聘来了自然要让他们多干活，所以你就是干活来的。&lt;/p&gt;
&lt;p&gt;大厂校招员工为什么不干活？因为他们水呀。如果他们不水，大厂还需要社招啊。如果他们不水，你又如何逆袭呢？&lt;/p&gt;
&lt;p&gt;另外，大厂校招员工水，只是相对出类拔萃的你而言，与那些被淘汰的大厂弃儿比起来，他们可是厉害极了。并且，还是有一少部分大厂校招员工不水的。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;img src=&quot;https://img.mukewang.com/5bf01bfe0001d0e610690553.png&quot; alt=&quot;图片描述&quot; data-original=&quot;https://img.mukewang.com/5bf01bfe0001d0e610690553.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;诚然，初入社会的第一步，是决定了一个人的人生起点的。&lt;/p&gt;
&lt;p&gt;大厂校招的同学就是起点高。&lt;/p&gt;
&lt;p&gt;即便有一天，他空降到小公司，和大厂弃儿们一起工作，他的履历依然会让他的薪资高于大厂弃儿。&lt;/p&gt;
&lt;p&gt;不过，这世界是公平的，不论你的工资是2k起步，还是4k起步。不论你未来会成为20K+的架构师，还是普普通通的10k+程序员，在1000K+的房价面前，你们都是一样，一样，一样的——无能为力。&lt;/p&gt;
&lt;p&gt;----------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;注：此文章为原创，欢迎转载，请在文章页面明显位置给出此文链接！&lt;br/&gt;若您觉得这篇文章还不错，请点击下右下角的&lt;span&gt;【&lt;strong&gt;推荐】&lt;/strong&gt;&lt;/span&gt;，非常感谢！&lt;/p&gt;

</description>
<pubDate>Sat, 17 Nov 2018 23:14:00 +0000</pubDate>
<dc:creator>kiba518</dc:creator>
<og:description>程序员薪水是有高有低的，这事没什么特别，因为任何行业的薪水都是有高有低的。 但程序员的薪水浮动能从2千到五万，这事就很有趣了。 在三线城市，两万以上的程序员是凤毛菱角的，就算是架构师也只有极少数的人能</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kiba/p/9976957.html</dc:identifier>
</item>
<item>
<title>历年至今TVB剧集目录(持续更新...我已看过的推荐) - KK.Yip</title>
<link>http://www.cnblogs.com/KK3228911/p/9976941.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/KK3228911/p/9976941.html</guid>
<description>&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2018年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《是咁的，法官阁下》&lt;/td&gt;
&lt;td&gt;主演:黄智贤,关礼杰,王君馨,朱千雪&lt;/td&gt;
&lt;td&gt;《兄弟2018》&lt;/td&gt;
&lt;td&gt;主演:王浩信,伍允龙,陈庭欣,杨明&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《跳跃生命线》&lt;/td&gt;
&lt;td&gt;主演:马德钟,何广沛,刘佩玥,陈滢&lt;/td&gt;
&lt;td&gt;《蚀日风暴》&lt;/td&gt;
&lt;td&gt;主演:张智霖,薛凯琪,王阳明,梁汉文&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《再创世纪》&lt;/td&gt;
&lt;td&gt;主演:郭晋安,林文龙,袁伟豪,周柏豪&lt;/td&gt;
&lt;td&gt;《天命》&lt;/td&gt;
&lt;td&gt;主演:陈展鹏,谭俊彦,唐诗咏,李施嬅&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14&quot;&gt;&lt;td&gt;《宫心计2·深宫计》&lt;/td&gt;
&lt;td&gt;主演:马浚伟,胡定欣,刘心悠,陈炜&lt;/td&gt;
&lt;td&gt;《飞虎之潜行极战》&lt;/td&gt;
&lt;td&gt;主演:苗侨伟,黄宗泽,吴卓羲,张兆辉&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《逆缘》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,姜大卫,林夏薇,陈家乐&lt;/td&gt;
&lt;td&gt;《栋仁的时光》&lt;/td&gt;
&lt;td&gt;主演:袁伟豪,唐诗咏,朱晨丽,胡鸿钧&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14&quot;&gt;&lt;td&gt;《三个女人一个因》&lt;/td&gt;
&lt;td&gt;主演:黄智雯,袁伟豪,陈智燊,黄淑仪&lt;/td&gt;
&lt;td&gt;《果栏中的江湖大嫂》&lt;/td&gt;
&lt;td&gt;主演:黄浩然,岑丽香,陈炜,杨明&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《翻生武林》&lt;/td&gt;
&lt;td&gt;主演:萧正楠,陈凯琳,黄智贤,姜大卫&lt;/td&gt;
&lt;td&gt;《波士早晨》&lt;/td&gt;
&lt;td&gt;主演:黄智贤,陈慧珊,袁伟豪,罗利期&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7&quot;&gt;&lt;td&gt;《平安谷之诡谷传说》&lt;/td&gt;
&lt;td&gt;主演:黄浩然,苏玉华,陈凯琳,朱晨丽&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2017年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《溏心风暴3》&lt;/td&gt;
&lt;td&gt;主演:黄宗泽,王浩信,李司棋,夏雨&lt;/td&gt;
&lt;td&gt;《夸世代》&lt;/td&gt;
&lt;td&gt;主演:欧阳震华,陈豪,田蕊妮,张继聪&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《杂警奇兵》&lt;/td&gt;
&lt;td&gt;主演:黄智贤,黄智雯,郑诗君,黄心颖&lt;/td&gt;
&lt;td&gt;《降魔的》&lt;/td&gt;
&lt;td&gt;主演:马国明,黄智雯,刘佩玥,胡鸿钧&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《老表，毕业喇！》&lt;/td&gt;
&lt;td&gt;主演:郭晋安,蔡少芬,王祖蓝,郑欣宜&lt;/td&gt;
&lt;td&gt;《使徒行者2》&lt;/td&gt;
&lt;td&gt;主演:苗侨伟,陈豪,宣萱,袁伟豪&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《灿烂的外母》&lt;/td&gt;
&lt;td&gt;主演:薛家燕,黎诺懿,林嘉华,汤洛雯&lt;/td&gt;
&lt;td&gt;《同盟》&lt;/td&gt;
&lt;td&gt;主演:陈展鹏,胡定欣,吴家乐,张国强&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《超时空男臣》&lt;/td&gt;
&lt;td&gt;主演: 萧正楠,曹永廉,林夏薇,田蕊妮&lt;/td&gt;
&lt;td&gt;《赌城群英会》&lt;/td&gt;
&lt;td&gt;主演: 谢贤,佘诗曼,马国明,陈百祥&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《盲侠大律师/踩过界》&lt;/td&gt;
&lt;td&gt;主演: 王浩信,李佳芯,蔡思贝,张振朗&lt;/td&gt;
&lt;td&gt;《兰花劫》&lt;/td&gt;
&lt;td&gt;主演: 苏玉华,田蕊妮,陈锦鸿,唐宁&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《不懂撒娇的女人》&lt;/td&gt;
&lt;td&gt;主演: 林文龙,宣萱,唐诗咏,王浩信&lt;/td&gt;
&lt;td&gt;《全职没女》&lt;/td&gt;
&lt;td&gt;主演: 张兆辉,陈松伶,张振朗,陈滢&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《心理追凶Mind》&lt;/td&gt;
&lt;td&gt;主演: 马国明,米雪,杨明,敖嘉年&lt;/td&gt;
&lt;td&gt;《与谍同谋》&lt;/td&gt;
&lt;td&gt;主演: 罗嘉良,郑俊弘,黄心颖,李成昌&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《我瞒结婚了》&lt;/td&gt;
&lt;td&gt;主演: 黄浩然,黄翠如,洪永城,傅嘉莉&lt;/td&gt;
&lt;td&gt;《迷》&lt;/td&gt;
&lt;td&gt;主演: 郑嘉颖,田蕊妮,吴业坤,赖慰玲&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《亲亲我好妈》&lt;/td&gt;
&lt;td&gt;主演: 黄智贤,江美仪,米雪,吕慧仪&lt;/td&gt;
&lt;td&gt;《财神驾到》&lt;/td&gt;
&lt;td&gt;主演: 黎耀祥,单立文,何广沛,傅嘉莉&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《乘胜追击》&lt;/td&gt;
&lt;td&gt;主演:陈展鹏,林夏薇,陈山聪,傅嘉莉&lt;/td&gt;
&lt;td&gt;《味想天开》&lt;/td&gt;
&lt;td&gt;主演:洪永城,蔡思贝,黄子衡,朱晨丽&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2016年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《流氓皇帝》&lt;/td&gt;
&lt;td&gt;主演:马国明,周丽淇,黄智雯,袁伟豪&lt;/td&gt;
&lt;td&gt;《巾帼枭雄之谍血长天》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,胡杏儿,萧正楠,马赛&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《一屋老友记》&lt;/td&gt;
&lt;td&gt;主演:欧阳震华,胡定欣,滕丽名,罗兰&lt;/td&gt;
&lt;td&gt;《纯熟意外》&lt;/td&gt;
&lt;td&gt;主演:吴启华,蔡思贝,李施嬅,黎诺懿&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《廉政行动2016》&lt;/td&gt;
&lt;td&gt;主演:陈展鹏,马国明,江美仪,傅嘉莉&lt;/td&gt;
&lt;td&gt;《僵》&lt;/td&gt;
&lt;td&gt;主演:郑嘉颖,谢安琪,黄又南,关礼杰&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《末代御医》&lt;/td&gt;
&lt;td&gt;主演:郭晋安,杨怡,麦长青,陈国邦&lt;/td&gt;
&lt;td&gt;《EU超时任务》&lt;/td&gt;
&lt;td&gt;主演:王浩信,朱千雪,袁伟豪,单立文&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《潮流教主》&lt;/td&gt;
&lt;td&gt;主演:陈豪,罗仲谦,蔡思贝,李佳芯&lt;/td&gt;
&lt;td&gt;《公公出宫》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,蔡少芬,姜大卫,胡定欣&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《警犬巴打》&lt;/td&gt;
&lt;td&gt;主演:黄宗泽,钟嘉欣,黄浩然,朱千雪&lt;/td&gt;
&lt;td&gt;《铁马战车》&lt;/td&gt;
&lt;td&gt;主演:黄德斌,唐诗咏,袁伟豪,陈国邦&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2015年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《刀下留人》&lt;/td&gt;
&lt;td&gt;主演:黄德斌,邵美琪,杨明,龚嘉欣&lt;/td&gt;
&lt;td&gt;《东坡家事》&lt;/td&gt;
&lt;td&gt;主演:欧阳震华,万绮雯,王浩信,陈炜&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《枭雄》&lt;/td&gt;
&lt;td&gt;主演:黄秋生,汤镇业,黎耀祥,胡杏儿&lt;/td&gt;
&lt;td&gt;《无双谱》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,郭羡妮,黄浩然,田蕊妮&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《张保仔》&lt;/td&gt;
&lt;td&gt;主演:洪永城,陈展鹏,陈凯琳,傅嘉莉&lt;/td&gt;
&lt;td&gt;《陪着你走》&lt;/td&gt;
&lt;td&gt;主演:陈豪,胡杏儿,麦长青,姚子羚&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11&quot;&gt;&lt;td&gt;《开脑儆探》&lt;/td&gt;
&lt;td&gt;主演:黄日华,李璨琛,卢海鹏,林嘉华&lt;/td&gt;
&lt;td&gt;《收规华》&lt;/td&gt;
&lt;td&gt;主演:杨怡,张继聪,杨明,林夏薇,刘江&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《拆局专家》&lt;/td&gt;
&lt;td&gt;主演:钱嘉乐,黄智雯,袁伟豪,朱千雪&lt;/td&gt;
&lt;td&gt;《楼奴》&lt;/td&gt;
&lt;td&gt;主演:商天娥,李诗韵,麦长青,岑丽香&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11&quot;&gt;&lt;td&gt;《鬼同你OT》&lt;/td&gt;
&lt;td&gt;主演:陈豪,田蕊妮,胡定欣,朱咪咪&lt;/td&gt;
&lt;td&gt;《潮拜武当》&lt;/td&gt;
&lt;td&gt;主演:杨怡,钱小豪,元秋,洪天明,张颖&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《风云天地》&lt;/td&gt;
&lt;td&gt;主演:汪明荃,赵雅芝,刘恺威,唐嫣&lt;/td&gt;
&lt;td&gt;《华丽转身》&lt;/td&gt;
&lt;td&gt;主演:刘松仁,汪明荃,钟嘉欣,方力申&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《水发胭脂》&lt;/td&gt;
&lt;td&gt;主演:陈豪,盖鸣晖,李司棋,麦长青&lt;/td&gt;
&lt;td&gt;《以和为贵》&lt;/td&gt;
&lt;td&gt;主演:马德钟,徐子珊,李思捷,江美仪&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《冲线》&lt;/td&gt;
&lt;td&gt;主演:米雪,罗仲谦,沈震轩,蔡思贝&lt;/td&gt;
&lt;td&gt;《天眼》&lt;/td&gt;
&lt;td&gt;主演:陈展鹏,郑嘉颖,杨怡,洪永城&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《倩女喜相逢》&lt;/td&gt;
&lt;td&gt;主演:薛家燕,萧正楠,滕丽名,汤盈盈&lt;/td&gt;
&lt;td&gt;《四个女仔三个Bar》&lt;/td&gt;
&lt;td&gt;主演:黄智贤,张继聪,陈凯琳,唐诗咏&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《师奶Madam》&lt;/td&gt;
&lt;td&gt;主演:萧正楠,黄翠如,黄心颖,李泳豪&lt;/td&gt;
&lt;td&gt;《宦海奇官》&lt;/td&gt;
&lt;td&gt;主演:马国明,杨怡,刘丹,陈山聪&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2014年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;13.5&quot;&gt;&lt;td&gt;《八卦神探》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:万绮雯,李思捷,梁烈唯,朱晨丽&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《醋娘子》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:胡杏儿,张继聪,吴卓羲&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《警界线》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:廖启智,林嘉华,唐宁,周俊伟&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《名门暗战》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,黄浩然,萧正楠,陈国邦&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《老表，你好hea》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,王祖蓝,万绮雯,王菀之&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《再战明天》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴启华,滕丽名,张国强,徐子珊&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《飞虎2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马德钟,钟嘉欣,贾晓晨,罗仲谦&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《大药坊》&lt;/td&gt;
&lt;td&gt;主演:钟嘉欣,陈展鹏,黄浩然,唐诗咏&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《使徒行者》&lt;/td&gt;
&lt;td&gt;主演:苗侨伟,林峰,佘诗曼,陈敏之&lt;/td&gt;
&lt;td&gt;《载得有情人》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,苏玉华,洪永城,唐诗咏&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《忠奸人》&lt;/td&gt;
&lt;td&gt;主演:郭晋安,田蕊妮,吴卓羲,张继聪&lt;/td&gt;
&lt;td&gt;《寒山潜龙》&lt;/td&gt;
&lt;td&gt;主演:黄浩然,马国明,陈茵媺,黄翠如&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《点金胜手》&lt;/td&gt;
&lt;td&gt;主演:黄宗泽,徐子珊,陈敏之,胡定欣&lt;/td&gt;
&lt;td&gt;《少年神探狄仁杰》&lt;/td&gt;
&lt;td&gt;主演:黄宗泽,戚薇,马天宇,孙骁骁&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《女人俱乐部》&lt;/td&gt;
&lt;td&gt;主演:李若彤,陈慧珊,李丽珍,袁洁莹&lt;/td&gt;
&lt;td&gt;《爱我请留言》&lt;/td&gt;
&lt;td&gt;主演:黄浩然,黄翠如,关礼杰,洪永城&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《叛逃》&lt;/td&gt;
&lt;td&gt;主演:吴卓羲,陈展鹏,蒙嘉慧,陈茵媺&lt;/td&gt;
&lt;td&gt;《守业者》&lt;/td&gt;
&lt;td&gt;主演:马浚伟,杨怡,唐诗咏, 邵美琪&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10&quot;&gt;&lt;td&gt;《食为奴》&lt;/td&gt;
&lt;td&gt;主演:万绮雯,黄智贤,胡定欣,王祖蓝&lt;/td&gt;
&lt;td&gt;《单恋双城》&lt;/td&gt;
&lt;td&gt;主演:陈茵媺,洪永城,林夏薇,陈展鹏&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td&gt;《新抱喜相逢》&lt;/td&gt;
&lt;td&gt;主演:薛家燕,滕丽名,麦长青,汤盈盈&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2013年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《舌剑上的公堂》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,田蕊妮,黄翠如,麦长青&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《猫屎妈妈》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄宗泽,米雪,胡定欣,杨爱瑾&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《My盛Lady》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄子华,徐子珊,陈敏之,阮兆祥&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《On Call 36小时Ⅱ》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴启华,马国明,杨怡,朱千雪&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《法外风云》&lt;/td&gt;
&lt;td&gt;主演:黎耀祥,陈豪,陈法拉,伍咏薇&lt;/td&gt;
&lt;td&gt;《巨轮》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:钟嘉欣,陈展鹏,李司棋,萧正楠&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《紫钗奇缘》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:叶璇,林峰,程诚,陈怡蓉&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《神枪狙击》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:张兆辉,谢天华,周海媚,徐子珊&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;13.5&quot;&gt;&lt;td&gt;《情逆三世缘》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:欧阳震华,关咏荷,敖嘉年&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《冲上云霄2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴镇宇,张智霖,胡杏儿,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《师父·明白了》&lt;/td&gt;
&lt;td&gt;主演:黄浩然,黄翠如,麦长青,陈自瑶&lt;/td&gt;
&lt;td&gt;《熟男有惑》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,陈敏之,李思捷,李诗韵&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《好心作怪》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:苗侨伟,黄宗泽,万绮雯,周丽淇&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《情越海岸线》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄浩然,陈展鹏,李诗韵,陈茵媺&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《金枝欲孽2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:邓萃雯,陈豪,蔡少芬,黄德斌&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《神探高伦布》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,唐诗咏,萧正楠,敖嘉年&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《仁心解码2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:方中信,杨怡,蒙嘉慧,陈茵媺&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《心路GPS》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:李司棋,陈展鹏,麦长青,张景淳&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《恋爱季节》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马国明,胡杏儿,吴卓羲,徐子珊&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《初五启市录》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈锦鸿,郭羡妮,黄浩然,林夏薇&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td&gt;《老表你好嘢》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,王菀之,王祖蓝,黃光亮&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2012年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《法网狙击》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:谢天华,杨怡,森美,陈敏之&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《幸福摩天轮》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:钟嘉欣,陳智燊,乐瞳,林夏薇&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《大太监》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,米雪,邵美琪,萧正楠&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《名媛望族》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,陈玉莲,马国明,杨怡&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《雷霆扫毒》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峰,苗侨伟,徐子珊,官恩娜&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《天梯》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈豪,张可颐,陈茵媺,高海宁&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《巴不得妈妈》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,黄淑仪,钱嘉乐,罗仲谦&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《造王者》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,唐诗咏,郑则仕,田蕊妮&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《怒火街头2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑嘉颖,胡杏儿,李璨琛,林子善&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《飞虎》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马德钟,宣萱,罗仲谦,林嘉华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《回到三国》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马国明,林峯,杨怡,陈敏之&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《护花危情》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄宗泽,秦沛,李国麟,钟嘉欣&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《冲呀!瘦薪兵团》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈展鹏,田蕊妮,唐诗咏,阮兆祥&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《心战》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,陈豪,邵美琪,黄德斌&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11&quot;&gt;&lt;td&gt;《耀舞长安》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:欧阳震华,胡杏儿,钟嘉欣&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《拳王》&lt;/td&gt;
&lt;td&gt;主演:郑嘉颖,黄浩然,李诗韵,唐诗咏&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《盛世仁杰》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑则士,陈锦鸿,郭羡妮,黎耀祥&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《女警爱作战》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:谢天华,周丽淇,黄智雯,高钧贤&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《当旺爸爸》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,钟嘉欣,夏雨,萧正楠&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《东西宫略》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,陈法拉,陈敏之,阮兆祥&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《缺宅男女》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:苗侨伟,郭羡妮,吴卓羲,钟嘉欣&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《OnCall36小时》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:杨怡,马国明,罗仲谦,黄智雯&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《4InLove》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈豪,佘诗曼,江欣燕,朱慧敏&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《换乐无穷》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:胡杏儿,李诗韵,李思捷,王浩信&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2011年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《我的如意狼君》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄浩然,周丽淇,陈秀珠,郭峰&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《万凰之王》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:宣萱,胡杏儿,黄淑仪,陈锦鸿&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《不速之约》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,林峯,杨怡,姜大卫&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《荃加福禄寿探案》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,阮兆祥,王祖蓝,李思捷&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《法证先锋3》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,张可颐,徐子珊,吴卓羲&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《潜行狙击》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:谢天华,黄宗泽,刘松仁,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《九江十二坊》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:敖嘉年,马赛,江美仪,刘江&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《紫禁惊雷》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,马国明,陈国邦,李诗韵&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《真相2011》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄浩然,杨怡,陈展鹏,唐诗咏&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《团圆》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,吴卓羲,陈锦鸿,刘兆铭&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《怒火街头》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑嘉颖,胡杏儿,李璨琛,陈敏之&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《花花世界花家姐》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峯,佘诗曼,胡枫,敖嘉年&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《洪武三十二》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马德钟,谢天华,徐子珊,江若琳&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《女拳》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘璇,黄宗泽,马国明,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《天与地》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林保怡,陈豪,佘诗曼,邵美琪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《OnlyYou只有您》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:李司棋,郑嘉颖,蒙嘉慧,田蕊妮&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《隔离七日情》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,黄宗泽,郭羡妮,郑欣宜&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《点解阿Sir系阿Sir》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈豪,吴卓羲,杨怡,钟嘉欣&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《鱼跃在花见》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,杨怡,张智霖,谢天华&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《你们我们他们》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴卓羲,徐子珊,林欣彤,曾少宗&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2010年度TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《读心神探》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林保怡,田蕊妮,黄宗泽,黎诺懿&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《巾帼枭雄之义海豪情》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,邓萃雯,陈法拉,敖嘉年&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《刑警2010》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:苗侨伟,黄日华,宣萱,丁乐锶&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《翻叮一族》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈键锋,唐诗咏,伍咏薇,杨思琦&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《公主嫁到》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:佘诗曼,陈豪,陈法拉,关菊英&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《摘星之旅》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,叶童,林峯,黄宗泽&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《法网群英》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴启华,陈秀雯,陈启泰,张文慈&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《女人最痛》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:米雪,张可颐,滕丽名,马德钟&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《施公奇案2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,宣萱,陈山聪,唐宁&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《情越双白线》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑则仕,黄浩然,徐子珊,郭羡妮&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《谈情说案》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峯,杨怡,马国明,廖碧儿&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《飞女正传》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:蔡少芬,陈豪,黄德斌,曹永廉&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《搜下留情》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈慧珊,马德钟,陈敏之,罗仲谦&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《铁马寻桥》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:元秋,郑嘉颖,马国明,李诗韵&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《秋香怒点唐伯虎》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈豪,胡杏儿,夏雨,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《老公万岁》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:苗侨伟,张可颐,谢天华,李绮虹&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《囧探查过界》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:王喜,黄浩然,钟嘉欣,李思捷&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《诱情转驳》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,陈法拉,蒙嘉慧,李思捷&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《居家兵团》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,夏雨,郑嘉颖,廖碧儿&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《疑情别恋》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:苗侨伟,袁咏仪,田蕊妮,陈国邦&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《师奶股神》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:商天娥,谢天华,林嘉华,滕丽名&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《最美丽的第七天》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑嘉颖,黄宗泽,周丽淇,唐诗咏&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td&gt;《天王状师》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:张卫健,吴孟达,张茜&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《金装四大才子》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:张家辉,欧阳震华,林家栋&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《小宝与康熙》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:张卫健,张茜,谭耀文,麦家琪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《大唐双龙传》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峯,吴卓羲,伍咏薇,杨怡&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《覆雨翻云》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峯,佘诗曼,黄宗泽,郭羡妮&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《东山飘雨西关晴》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,马德钟,佘诗曼,黄浩然&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《蒲松龄》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,陈锦鸿,钟嘉欣,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《胜者为王IV争霸》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:蔡少芬,张智霖,曾江,杜汶泽&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《恋爱星求人》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:杨怡,马浚伟,谢天华,苑琼丹&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《五味人生》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:关咏荷,郭晋安,米雪,郭政鸿&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《掌上明珠》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:宣萱,商天娥,陶大宇,林保怡&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《宫心计》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:佘诗曼,陈豪,郑嘉颖,关菊英&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td colspan=&quot;4&quot;&gt;&lt;strong&gt;2009以及更早年度的TVB剧集&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《蔡锷与小凤仙》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:周海媚,温裕红,刘松仁,马国明&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《学警狙击》&lt;/td&gt;
&lt;td&gt;主演:苗侨伟,周海媚,谢天华,吴卓羲&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《老友狗狗》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑则仕,邵美琪,马浚伟,钟嘉欣&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《富贵门》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:罗嘉良,吕良伟,袁咏仪,戚美珍&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《古灵精探1-2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,郭羡妮,胡定欣,郭政鸿&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《绝代商骄》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄子华,佘诗曼,许绍雄,谢天华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《烈火雄心1-3》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:王喜,胡杏儿,郑嘉颖,姚子羚&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《碧血盐枭》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,杨怡,郭峰,黄浩然&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《ID精英》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,蒙嘉慧,姚嘉妮,邓健泓&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《老婆大人1-2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈锦鸿,滕丽名,唐诗咏,宣萱&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《巾帼枭雄》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎耀祥,邓萃雯,岳华,谢雪心&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《幕后大老爷》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马国明,徐子珊,唐宁,高钧贤&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《天机算》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,杨思琦,陈浩民,李诗韵&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《铁血保镖》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,姚子羚,黎耀祥,黄智贤&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《桌球天王》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,许绍雄,周丽淇,张颖康&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《大冬瓜》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:廖启智,陈锦鸿,苏玉华,刘玉翠&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《王老虎抢亲》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:钱嘉乐,苏玉华,陈键锋,胡定欣&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《肝胆昆仑》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴卓羲,陈键锋,曹敏莉,苏玉华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《珠光宝气》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎姿,黄宗泽,钟嘉欣,邵美琪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《与敌同行》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,蒙嘉慧,郑嘉颖,商天娥&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《溏心风暴2》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:夏雨,李司棋,陈豪,杨怡,徐子珊&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《银楼金粉》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:薛家燕,伍咏薇,杨思琦,陈秀珠&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《金石良缘》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,钟嘉欣,郑则仕,陈法拉&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《通天干探》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:黎姿,元彪,陈豪,郑嘉颖,邵美琪&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《律政新人王2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马国明,官恩娜,陈键锋,李子雄&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《爸爸闭翳》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,夏雨,王喜,王树熹&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《舞动全城》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,廖碧儿,徐子珊,黎耀祥&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《学警出更》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陶大宇,郭羡妮,容祖儿,吴卓羲&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《岁月风云》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,林峯,佘诗曼,苗侨伟&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《溏心风暴》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:夏雨,李司棋,米雪,关菊英,陈豪&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《师奶兵团》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:邓萃雯,谢天华,姜大卫,叶童&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《赌场风云》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,苗侨伟,宣萱,黄宗泽&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《突围行动》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴卓羲,马浚伟,廖碧儿,徐子珊&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《东方之珠》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,郭晋安,佘诗曼,秦沛&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《义无反顾》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:谭耀文,郭蔼明,刘恺威,叶德娴&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《女人唔易做》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:邓萃雯,吴美珩,林峯,谢天华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《男人之苦》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,苏玉华,吴卓羲,梁靖琪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《天幕下的恋人》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑嘉颖,夏雨,周丽淇,黄宗泽&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《潮爆大状》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,苏玉华,陈键锋,唐宁&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《识法代言人》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,夏雨,胡杏儿,陈键锋&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《施公奇案》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,郭可盈,陈浩民,杨怡&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《创世纪1-2》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:罗嘉良,陈锦鸿,郭晋安,陈慧珊&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《妙手仁心1-3》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴启华,黎姿,唐文龙,陈豪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《水浒无间道》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:张智霖,王喜,黎姿,杨怡,元华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《御用闲人》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,邓萃雯,杨怡,魏骏杰&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《血荐轩辕》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,汪明荃,林峯,杨思琦&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《楚汉骄雄》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,江华,张可颐,吴美珩&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《金牌冰人》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,张可颐,陈豪,盖鸣晖&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td&gt;《英雄·刀·少年》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,邵美琪,吴卓羲,黄宗泽&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《帝女花》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,佘诗曼,陈豪,邵美琪&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《凤舞香罗》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:陈豪,黎姿,江华,魏骏杰,向海岚&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《皆大欢喜》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:薛家燕,林文龙,廖碧儿,谢天华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;13.5&quot;&gt;&lt;td&gt;《洗冤录1-2》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:欧阳震华,佘诗曼,滕丽名&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《大时代》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑少秋,刘青云,邵仲衡,陶大宇&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《陀枪师姐1-4》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,蔡少芬,夏雨,滕丽名&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《西关大少》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:刘松仁,赵雅芝,张智霖,佘诗曼&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《民国恩仇录》&lt;/td&gt;
&lt;td&gt;主演:周牧茵,米雪,郭羡妮,徐少强&lt;/td&gt;
&lt;td&gt;《乾隆大帝》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:古天乐,何宝生,夏韶声,翁虹&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《新审死官》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郭晋安,佘诗曼,姚奕辰,薛佳凝&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《秀才爱上兵》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:马浚伟,郑希怡,黎耀祥,罗冠兰&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《谈判专家》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:欧阳震华,张智霖,郭可盈,文颂娴&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《天涯侠医》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:张家辉,林峰,郭羡妮,唐宁&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《金枝欲孽》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黎姿,佘诗曼,邓萃雯,陈豪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《洛神》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:蔡少芬,马浚伟,陈豪,郭羡妮&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《布衣神相》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:林文龙,林峰,杨怡,李诗韵,骆应&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《原来爱上贼》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈玉莲,刘松仁,陈敏之,马德钟&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.5&quot;&gt;&lt;td&gt;《铁咀银牙》&lt;/td&gt;
&lt;td&gt;主演:陈小春,佘诗曼,谢天华,元华&lt;/td&gt;
&lt;td&gt;《我的野蛮奶奶》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:汪明荃,胡杏儿,黄宗泽,许绍雄&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《冲上云霄》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:吴镇宇,陈慧珊,马德钟,胡杏儿&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《少年四大名捕》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:林峰,吴卓羲,陈键锋,马国明&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;16.5&quot;&gt;&lt;td&gt;《奸人坚》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黃子華,葉童,林嘉華,楊秀惠&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《寻秦记》&lt;/td&gt;
&lt;td readability=&quot;9&quot;&gt;
&lt;p&gt;主演:古天乐,宣萱,郭羡妮,林峯,江华&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《凤凰四重奏》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:佘诗曼,马德钟,陈键锋,陈嘉仪&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《河东狮吼》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:关咏荷,廖伟雄,傅明宪,朱咪咪&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《千谎百计》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:黄宗泽,杨思琦,徐子珊,苑琼丹&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《兰花劫》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:陈锦鸿,田蕊妮,苏玉华,唐宁&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;15&quot;&gt;&lt;td&gt;《迎妻接福》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:谢天华,钟嘉欣,黎耀祥,向海岚&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《甜言蜜语》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:徐子珊,马国明,姚子羚,黎诺懿&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;13.5&quot;&gt;&lt;td&gt;《强剑》&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;p&gt;主演:郑嘉颖,黄宗泽,廖碧儿,陈敏之&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;《云海玉弓缘》&lt;/td&gt;
&lt;td readability=&quot;7&quot;&gt;
&lt;p&gt;主演:叶璇,林峯,李彩桦&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;…………&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sat, 17 Nov 2018 20:14:00 +0000</pubDate>
<dc:creator>KK.Yip</dc:creator>
<og:description>主演:万绮雯,李思捷,梁烈唯,朱晨丽 主演:胡杏儿,张继聪,吴卓羲 主演:廖启智,林嘉华,唐宁,周俊伟 主演:黎耀祥,黄浩然,萧正楠,陈国邦 主演:郭晋安,王祖蓝,万绮雯,王菀之 主演:吴启华,滕丽名</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/KK3228911/p/9976941.html</dc:identifier>
</item>
<item>
<title>调试大叔V2.0.2(2018.11.18)|http/s接口调试、数据分析程序员辅助开发神器 - KK.Yip</title>
<link>http://www.cnblogs.com/KK3228911/p/7462661.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/KK3228911/p/7462661.html</guid>
<description>&lt;p&gt;2018.11.18 - 调试大叔 V2.0.2&lt;br/&gt;*支持http/https协议的get/post调试与反馈；&lt;br/&gt;*可保存请求协议的记录；&lt;br/&gt;*内置一批动态参数，可应用于Referer、URL、参数；&lt;br/&gt;支持自定义常量参数；&lt;br/&gt;支持自定义UA信息(解决模拟不同网站或手机请求)；&lt;br/&gt;*可自由管理cookie；&lt;br/&gt;*支持请求的代理与模拟环境参数设置；&lt;br/&gt;*时间戳管理(取网络当前时间戳、转成日期、转成倒计时)；&lt;br/&gt;*支持拖放文件到本程序窗计算文件的MD5、SHA1、CRC32值；&lt;br/&gt;*集成常见编码解码(Ansi与Utf8互转、URL加解密、UniCode转中文、AES、Base64加密解密、HTML转义);&lt;br/&gt;*集成常用符号与其UniCode值；&lt;br/&gt;*集成常用数学计算(整除、取余、取整、等比例计算)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/508139/201811/508139-20181118033945087-832432775.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;官方下载地址&quot; href=&quot;http://soft.3k8.cn/%E8%B0%83%E8%AF%95%E5%A4%A7%E5%8F%94202.rar&quot; target=&quot;_blank&quot;&gt;官方下载地址&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 17 Nov 2018 19:43:00 +0000</pubDate>
<dc:creator>KK.Yip</dc:creator>
<og:description>2018.11.18 - 调试大叔 V2.0.2 *支持http/https协议的get/post调试与反馈； *可保存请求协议的记录； *内置一批动态参数，可应用于Referer、URL、参数</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/KK3228911/p/7462661.html</dc:identifier>
</item>
<item>
<title>dva使用及项目搭建 - 黄大渣渣</title>
<link>http://www.cnblogs.com/superSmile/p/9972344.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/superSmile/p/9972344.html</guid>
<description>&lt;p&gt;　　本文将简单分析dva脚手架的使用及项目搭建过程。&lt;/p&gt;
&lt;p&gt;　　首先，dva是一个基于redux和redux-saga的数据流方案，然后为了简化开发体验，dva还额外内置了react-router和fetch，所以也可以理解为一个轻量级的应用框架。&lt;/p&gt;

&lt;p&gt;　　易用易学、elm概念、插件机制、支持HMR。&lt;/p&gt;

&lt;h2&gt;1、首先安装dva-cli&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
npm install dva-cli -g
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2、初始化项目&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
dva &lt;span&gt;new&lt;/span&gt; dva-&lt;span&gt;quickstart
cd dva&lt;/span&gt;-&lt;span&gt;quickstart
npm start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3、引入antd&lt;/h3&gt;
&lt;p&gt;　　通过 npm 安装 &lt;code&gt;antd&lt;/code&gt; 和 &lt;code&gt;babel-plugin-import&lt;/code&gt; 。&lt;code&gt;babel-plugin-import&lt;/code&gt; 是用来按需加载 antd 的脚本和样式的.&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
npm install antd babel-plugin-import --save
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4、按需加载，找到根目录下面的.webpackrc文件，并在文件中添加插件配置。&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&quot;extraBabelPlugins&quot;&lt;span&gt;: [
    [&lt;/span&gt;&quot;import&quot;, { &quot;libraryName&quot;: &quot;antd&quot;, &quot;style&quot;: &quot;css&quot;&lt;span&gt; }]
]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;5、试引入ant 组件button&lt;/h2&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
import React from 'react'&lt;span&gt;;
import { connect } from &lt;/span&gt;'dva'&lt;span&gt;;
import styles from &lt;/span&gt;'./IndexPage.css'&lt;span&gt;;

import { Button } from &lt;/span&gt;'antd'

&lt;span&gt;function&lt;/span&gt;&lt;span&gt; IndexPage() {
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (
    &lt;/span&gt;&amp;lt;div className={styles.normal}&amp;gt;
        &amp;lt;h1 className={styles.title}&amp;gt;Yay! Welcome to dva!&amp;lt;/h1&amp;gt;
        &amp;lt;Button type=&quot;primary&quot;&amp;gt;primary&amp;lt;/Button&amp;gt;
        &amp;lt;div className={styles.welcome} /&amp;gt;
        &amp;lt;ul className={styles.list}&amp;gt;
            &amp;lt;li&amp;gt;Getting Started&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;span&gt;  );
}

IndexPage.propTypes &lt;/span&gt;=&lt;span&gt; {
};

export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt; connect()(IndexPage);
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;1、目录结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1240403/201811/1240403-20181118002048335-17562226.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;assets目录：一般作为静态文件存储目录，比如图片或者css;&lt;/p&gt;
&lt;p&gt;components：组件目录；&lt;/p&gt;
&lt;p&gt;models：应用逻辑层，可存放公共的数据以及逻辑，类似于vuex；&lt;/p&gt;
&lt;p&gt;pages（routes）：页面路由存放文件夹；&lt;/p&gt;
&lt;p&gt;services：页面API请求数据；&lt;/p&gt;
&lt;p&gt;utils：公共方法的封装；&lt;/p&gt;
&lt;p&gt;index.js：入口文件；&lt;/p&gt;
&lt;p&gt;router.js：路由文件&lt;/p&gt;
&lt;h2&gt;2、具体文件介绍&lt;/h2&gt;
&lt;h3&gt;2.1、index.js  入口文件&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
import dva from 'dva'&lt;span&gt;;
import &lt;/span&gt;'./index.css'&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 1. Initialize&lt;/span&gt;
const app =&lt;span&gt; dva();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 2. Plugins&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; app.use({});&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 3. Model&lt;/span&gt;
app.model(require('./models/example').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);
app.model(require(&lt;/span&gt;'./models/todos').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 4. Router&lt;/span&gt;
app.router(require('./router').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 5. Start&lt;/span&gt;
app.start('#root');
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.2 router.js路由文件&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
import React from 'react'&lt;span&gt;;
import { Route, Switch } from &lt;/span&gt;'dva/router'&lt;span&gt;;

import dynamic from &lt;/span&gt;'dva/dynamic' &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 路由按需加载&lt;/span&gt;
import { ConnectedRouter } from 'react-router-redux'&lt;span&gt;;
import App from &lt;/span&gt;'./pages/App'

&lt;span&gt;function&lt;/span&gt;&lt;span&gt; RouterConfig({ history,app }) {
    const IndexPage &lt;/span&gt;=&lt;span&gt; dynamic({
        app,
        component:(()&lt;/span&gt;=&amp;gt; import('./pages/IndexPage/IndexPage'&lt;span&gt;))
    })
    const Users &lt;/span&gt;=&lt;span&gt; dynamic({
        app,
        component:(()&lt;/span&gt;=&amp;gt; import('./pages/UserPage/UserPage'&lt;span&gt;))
    })
    const List &lt;/span&gt;=&lt;span&gt; dynamic({
        app,
        component:(()&lt;/span&gt;=&amp;gt; import('./pages/ListPage/ListPage'&lt;span&gt;))
    })
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (
        &lt;/span&gt;&amp;lt;ConnectedRouter history={history}&amp;gt;
            &amp;lt;App&amp;gt;
                &amp;lt;Switch&amp;gt;
                    &amp;lt;Route path=&quot;/&quot; exact component={IndexPage}/&amp;gt;
                    &amp;lt;Route path=&quot;/users&quot; exact component={Users}&amp;gt;&amp;lt;/Route&amp;gt;
                    &amp;lt;Route path=&quot;/list&quot; exact component={List}&amp;gt;&amp;lt;/Route&amp;gt;
                &amp;lt;/Switch&amp;gt;
            &amp;lt;/App&amp;gt;
        &amp;lt;/ConnectedRouter&amp;gt;
&lt;span&gt;    );
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.3 页面组件IndexPage.js&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
import React from 'react'&lt;span&gt;;
import { connect } from &lt;/span&gt;'dva'&lt;span&gt;;
import styles from &lt;/span&gt;'./IndexPage.css'&lt;span&gt;;

import { Button } from &lt;/span&gt;'antd'

&lt;span&gt;function&lt;/span&gt;&lt;span&gt; IndexPage() {
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (
    &lt;/span&gt;&amp;lt;div className={styles.normal}&amp;gt;
        &amp;lt;h1 className={styles.title}&amp;gt;Yay! Welcome to dva!&amp;lt;/h1&amp;gt;
        &amp;lt;Button type=&quot;primary&quot;&amp;gt;primary&amp;lt;/Button&amp;gt;
        &amp;lt;div className={styles.welcome} /&amp;gt;
        &amp;lt;ul className={styles.list}&amp;gt;
            &amp;lt;li&amp;gt;Getting Started&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;span&gt;  );
}

IndexPage.propTypes &lt;/span&gt;=&lt;span&gt; {
};

export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt; connect()(IndexPage);
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　connect 是一个函数，绑定 State 到 View。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
import { connect } from 'dva'&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt; mapStateToProps(state) {
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; { todos: state.todos };
}
connect(mapStateToProps)(App);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　connect 方法返回的也是一个 React 组件，通常称为容器组件。因为它是原始 UI 组件的容器，即在外面包了一层 State。&lt;/p&gt;
&lt;p&gt;　　connect 方法传入的第一个参数是 mapStateToProps 函数，mapStateToProps 函数会返回一个对象，用于建立 State 到 Props 的映射关系。&lt;/p&gt;

&lt;p&gt;　　dispatch 是一个函数方法，用来将 Action 发送给 State。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;dispatch({
  type: &lt;/span&gt;'click-submit-button'&lt;span&gt;,
  payload: &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.form.data
})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　type：方法名；&lt;/p&gt;
&lt;p&gt;　　payload：参数&lt;/p&gt;
&lt;p&gt;　　dispatch 方法从哪里来？被 connect 的 Component 会自动在 props 中拥有 dispatch 方法。&lt;/p&gt;

&lt;p&gt;　　比较常用的model成如下&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  namespace: &lt;/span&gt;'count'&lt;span&gt;,
  state: &lt;/span&gt;0&lt;span&gt;,
  reducers: {
    add(state) { &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; state + 1&lt;span&gt; },
  },
  effects: {
    &lt;/span&gt;*&lt;span&gt;addAfter1Second(action, { call, put }) {
      yield call(delay, &lt;/span&gt;1000&lt;span&gt;);
      yield put({ type: &lt;/span&gt;'add'&lt;span&gt; });
    },
  },
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1.namespace：命名空间；当前 Model 的名称。整个应用的 State，由多个小的 Model 的 State 以 namespace 为 key 合成&lt;/p&gt;
&lt;p&gt;2.state：该 Model 当前的状态。数据保存在这里，直接决定了视图层的输出&lt;/p&gt;
&lt;p&gt;3.reducers： Action 处理器，处理同步动作，用来算出最新的 State；&lt;/p&gt;
&lt;p&gt;4.effects：Action 处理器，处理异步动作&lt;/p&gt;
&lt;p&gt; 注：函数名前边带一个*号，是一个生成器（Generator ）函数，内部使用 yield 关键字，标识每一步的操作（不管是异步或同步）。&lt;/p&gt;
&lt;p&gt;dva 提供多个 effect 函数内部的处理函数，比较常用的是 &lt;code&gt;call&lt;/code&gt; 和 &lt;code&gt;put&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;　　call：执行异步函数&lt;/p&gt;
&lt;p&gt;　　put：发出一个 Action，类似于 dispatch&lt;/p&gt;

&lt;p&gt;1.首先在components下新建一个TodoList.js文件&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
import React from 'react'&lt;span&gt;;
class TodoList extends React.Component{
    constructor(props) {
        super(props);
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.state=&lt;span&gt;{
            value:&lt;/span&gt;''&lt;span&gt;
        }
    }
    addTodo(e){
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (e.keyCode===13&lt;span&gt;) {
            const todo &lt;/span&gt;=&lt;span&gt; e.target.value;

            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.props.dispatch({
                type: &lt;/span&gt;'todos/addTodo'&lt;span&gt;,
                payload: todo
            })
            &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setState({
                value: &lt;/span&gt;''&lt;span&gt;
            })
        }
    }
    deleteTodo(index){
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.props.dispatch({
            type: &lt;/span&gt;'todos/deleteTodo'&lt;span&gt;,
            payload: index
        })
    }
    render() {
        const todoList &lt;/span&gt;= &lt;span&gt;this&lt;/span&gt;.props.todoList.map((val, index) =&amp;gt;&lt;span&gt; {
    
          &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &amp;lt;div key={index}&amp;gt;
            &amp;lt;span&amp;gt;{val.value}&amp;lt;/span&amp;gt;
            &amp;lt;button onClick={() =&amp;gt; &lt;span&gt;this&lt;/span&gt;.deleteTodo(index)}&amp;gt;X&amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
&lt;span&gt;        });
    
        let count &lt;/span&gt;= 0&lt;span&gt;;
    
        &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;.props.todoList.map(item =&amp;gt; count = !item.finished ? count + 1&lt;span&gt; : count);
    
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; (
          &lt;/span&gt;&amp;lt;div&amp;gt;
            &amp;lt;h3&amp;gt;待办事项有:{count}&amp;lt;/h3&amp;gt;
            &amp;lt;input placeholder=&quot;please input&quot;&lt;span&gt;
                   value&lt;/span&gt;={&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.state.value}
                   onChange&lt;/span&gt;={(e) =&amp;gt; &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.setState({value: e.target.value})}
                   onKeyDown&lt;/span&gt;={(e) =&amp;gt; &lt;span&gt;this&lt;/span&gt;.addTodo(e)}/&amp;gt;
            &amp;lt;div&amp;gt;&lt;span&gt;
              {todoList}
            &lt;/span&gt;&amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
&lt;span&gt;        )
    }
}
    
export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt; TodoList;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;代码中：通过dispatch 派送一个action，type为action名称，payload为传递参数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.props.dispatch({
                type: &lt;/span&gt;'todos/addTodo'&lt;span&gt;,
                payload: todo
            })&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.新建路由页面LIstPage.js&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
import {connect} from 'dva'&lt;span&gt;;
import TodoList from &lt;/span&gt;'../../components/TodoList'&lt;span&gt;;

const mapStateToProps &lt;/span&gt;= (state) =&amp;gt;&lt;span&gt; {

    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {
      todoList: state.todos.todoList
    }
  };
  
  export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt; connect(mapStateToProps)(TodoList);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过mapStateToProps 方法将model里的todoList放回到页面组件的props.todoList；&lt;/p&gt;
&lt;p&gt;3.新建一个model todos.js&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;57&quot;&gt;
&lt;pre&gt;
import queryString from 'query-string'&lt;span&gt;;
import &lt;/span&gt;* as todoService from '../services/todo'&lt;span&gt;

export &lt;/span&gt;&lt;span&gt;default&lt;/span&gt;&lt;span&gt; {
    namespace: &lt;/span&gt;'todos'&lt;span&gt;,
    state: {todoList: []},
    reducers: {
        save(state, {payload: {todoList}}) {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; {...state, todoList}
        }
    },
    effects: {
        &lt;/span&gt;*&lt;span&gt; addTodo({payload: value}, {call, put, select}) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 模拟网络请求&lt;/span&gt;
            const data =&lt;span&gt; yield call(todoService.query, value);
            let tempList &lt;/span&gt;= yield select(state =&amp;gt;&lt;span&gt; state.todos.todoList);
            let todoList &lt;/span&gt;=&lt;span&gt; [];
            todoList &lt;/span&gt;=&lt;span&gt; todoList.concat(tempList);
            const tempObj &lt;/span&gt;=&lt;span&gt; {};
            tempObj.value &lt;/span&gt;=&lt;span&gt; value;
            tempObj.id &lt;/span&gt;=&lt;span&gt; todoList.length;
            todoList.push(tempObj);
            yield put({type: &lt;/span&gt;'save'&lt;span&gt;, payload: {todoList}})
        },
        &lt;/span&gt;*&lt;span&gt; deleteTodo({payload: index}, {call, put, select}) {
            const data &lt;/span&gt;=&lt;span&gt; yield call(todoService.query, index);
            let tempList &lt;/span&gt;= yield select(state =&amp;gt;&lt;span&gt; state.todos.todoList);
            let todoList &lt;/span&gt;=&lt;span&gt; [];
            todoList &lt;/span&gt;=&lt;span&gt; todoList.concat(tempList);
            todoList.splice(index, &lt;/span&gt;1&lt;span&gt;);
            yield put({type: &lt;/span&gt;'save'&lt;span&gt;, payload: {todoList}})
        },
    },
    subscriptions: {
        setup({dispatch, history}) {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 监听路由的变化，请求页面数据&lt;/span&gt;
            &lt;span&gt;return&lt;/span&gt; history.listen(({pathname, search}) =&amp;gt;&lt;span&gt; {
                const query &lt;/span&gt;=&lt;span&gt; queryString.parse(search);
                let todoList &lt;/span&gt;=&lt;span&gt; [];
        
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (pathname === 'todos'&lt;span&gt;) {
                    dispatch({type: &lt;/span&gt;'save'&lt;span&gt;, payload: {todoList}})
                }
            })
        }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一般来说，effects做主要的逻辑计算，reducers做数据存储，通过复杂的逻辑计算后，把处理好的数据调用reducers的方法进行数据存储。&lt;/p&gt;
&lt;p&gt;4.在index.js进行model以及路由注入&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
import dva from 'dva'&lt;span&gt;;
import &lt;/span&gt;'./index.css'&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 1. Initialize&lt;/span&gt;
const app =&lt;span&gt; dva();

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 2. Plugins&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt; app.use({});&lt;/span&gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 3. Model&lt;/span&gt;
app.model(require('./models/example').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);
app.model(require(&lt;/span&gt;'./models/todos').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 4. Router&lt;/span&gt;
app.router(require('./router').&lt;span&gt;default&lt;/span&gt;&lt;span&gt;);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 5. Start&lt;/span&gt;
app.start('#root');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1240403/201811/1240403-20181118011050716-1674731483.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Sat, 17 Nov 2018 17:16:00 +0000</pubDate>
<dc:creator>黄大渣渣</dc:creator>
<og:description>对dva的分析及使用，demo实例，connect(),model方法介绍。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/superSmile/p/9972344.html</dc:identifier>
</item>
<item>
<title>3分钟简单了解 prototype 和 __proto__ - 樊顺</title>
<link>http://www.cnblogs.com/fanqshun/p/9976404.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fanqshun/p/9976404.html</guid>
<description>&lt;p&gt;&lt;strong&gt;关于prototype&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1. 所有的函数都会有一个prototype属性，属性值是一个普通对象；&lt;/p&gt;
&lt;p&gt;2. 当我们去new一个构造函数的实例时，构造函数的原型对象(prototype)会被赋值给它实例的[[Prototype]]属性上；&lt;/p&gt;
&lt;p&gt;3. prototype可被称为“显式原型”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于__proto__&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1. 首先它未被ECMAScript标准化，但却被被大多数浏览器厂商所支持；&lt;/p&gt;
&lt;p&gt;2. 所有对象（null，undefined除外）都具有__proto__属性；&lt;/p&gt;
&lt;p&gt;3. 对象的__proto__属性指向它的构造器的prototype属性；&lt;/p&gt;
&lt;p&gt;4. __proto__ 可被称为“隐式原型”；&lt;/p&gt;
&lt;p&gt;5. ES2015对其进行了标准化。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于两者&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 普通函数&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; func() {}
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; func.prototype &lt;span&gt;//&lt;/span&gt;&lt;span&gt; { constructor: function func(), ... }&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt; 
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 构造函数&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; F() {}
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; 
&lt;span&gt; 9&lt;/span&gt; F.prototype &lt;span&gt;//&lt;/span&gt;&lt;span&gt; { constructor: function func(), ... }&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 实例测试&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; f = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; F()
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt; f.__proto__ &lt;span&gt;//&lt;/span&gt;&lt;span&gt; { constructor: function func(), ... }&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt; 
&lt;span&gt;16&lt;/span&gt; f.__proto__ === F.prototype &lt;span&gt;//&lt;/span&gt;&lt;span&gt; true&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; ES2015标准化[[Prototype]]属性，Object.getPrototypeOf/Object.setPrototypeOf&lt;/span&gt;
&lt;span&gt;19&lt;/span&gt; Object.getPrototypeOf(f) === F.prototype
&lt;/pre&gt;&lt;/div&gt;

</description>
<pubDate>Sat, 17 Nov 2018 15:47:00 +0000</pubDate>
<dc:creator>樊顺</dc:creator>
<og:description>JS中prototype和__proto__的简单了解</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fanqshun/p/9976404.html</dc:identifier>
</item>
<item>
<title>配置多个 git 账号的 ssh密钥 - xiaoxi666</title>
<link>http://www.cnblogs.com/xiaoxi666/p/9975981.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xiaoxi666/p/9975981.html</guid>
<description>&lt;h3&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;在工作中，我们通常会以 ssh 的方式配置公司的 git 账号，但是平时也会使用 github 管理自己的项目。因此，我们需要为自己的 github 创建一个新的 git 账号，这就需要生成新的 ssh 密钥。&lt;br/&gt;下面总结了创建多个互相独立的 ssh 密钥的步骤（以公司的和自己 github 的为例）。&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;步骤（以 mac 为例）&lt;/span&gt;&lt;/h3&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;22.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;在文件夹 &lt;code&gt;~/.ssh/&lt;/code&gt; 下创建两个文件夹，分别为 &lt;code&gt;company/&lt;/code&gt; 和 &lt;code&gt;github/&lt;/code&gt;，前者存放公司的 ssh密钥，后者存自己 github 的 ssh 密钥。下面的步骤以创建 github 密钥为例：&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在终端执行命令：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;ssh-keygen&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;rsa&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;-C&lt;/span&gt; &quot;&lt;span class=&quot;hljs-selector-tag&quot;&gt;your_github_email&lt;/span&gt;@&lt;span class=&quot;hljs-keyword&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;com&lt;/span&gt;&quot;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;然后会提示 Enter file in which to save the key，输入文件路径&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;~&lt;span class=&quot;hljs-regexp&quot;&gt;/.ssh/gi&lt;/span&gt;thub/id_rsa_github&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;创建成功后，该路径下会生成 &lt;code&gt;id_rsa_github&lt;/code&gt; 和 &lt;code&gt;id_rsa_github.pub&lt;/code&gt; 两个文件。若直接回车的话，会默认保存在&lt;code&gt;~/.ssh/&lt;/code&gt;路径下。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;然后出现 Enter passphrase (empty for no passphrase)，直接回车即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;最后会出现创建成功的提示：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs vbnet&quot;&gt;Your identification has been saved &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; .ssh_github/id_rsa_github.&lt;br/&gt;Your &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;key&lt;/span&gt; has been saved &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; .ssh_github/id_rsa_github.pub.&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;文件&lt;code&gt;id_rsa_github.pub&lt;/code&gt;中保存的就是 ssh 公钥。可以利用命令 &lt;code&gt;pbcopy&lt;/code&gt; 将其复制到剪贴板，比如我的命令就是&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs javascript&quot;&gt;pbcopy &amp;lt; ~&lt;span class=&quot;hljs-regexp&quot;&gt;/.ssh/gi&lt;/span&gt;thub/id_rsa_github.pub&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当然你也可以找到该文件手动复制。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;在 github 网站中添加该 ssh 公钥。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;创建公司 ssh 密钥 的过程类似，不再赘述。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;两个 ssh 密钥创建完毕后，在&lt;code&gt;~/.ssh/&lt;/code&gt;文件夹中创建文件&lt;code&gt;config&lt;/code&gt;，添加如下内容：&lt;/p&gt;
&lt;pre readability=&quot;4&quot;&gt;
&lt;code class=&quot;hljs nginx&quot; readability=&quot;2&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;Host&lt;/span&gt; git.XXX.com                    &lt;br/&gt;HostName git.XXX.com                &lt;br/&gt;User git                            &lt;br/&gt;IdentityFile ~/.ssh/company/id_rsa  &lt;p&gt;&lt;br/&gt;Host github.com                    &lt;br/&gt;HostName github.com               &lt;br/&gt;User git                            &lt;br/&gt;IdentityFile ~/.ssh/github/id_rsa_github    &lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;注：配置文件中各参数含义请参见扩展部分&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;网上很多文章说要执行命令 &lt;code&gt;ssh-add&lt;/code&gt; 将 IdentityFile 添加到 ssh-agent 中，具体到本文中就是执行&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;ssh-&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt; ~/.ssh/company/id_rsa &lt;br/&gt;ssh-&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt; ~/.ssh/github/id_rsa_github&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;其实这个操作只是把专用密钥添加到 ssh-agent 的高速缓存中，因此略过该步骤也不会有影响。&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;这一步用于验证是否配置成功，以 github 为例，输入 &lt;code&gt;ssh -T git@github.com&lt;/code&gt;，若出现类似&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs vbnet&quot;&gt;Hi xiaoxi666! You&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这样的字段，即说明配置成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;本文描述了单机配置两个 git 平台ssh密钥的方法，多个账号同理。推荐在 &lt;code&gt;~/.ssh/&lt;/code&gt; 文件夹下为不同的平台建立不同的文件夹，方便管理。根据上述配置，我的 &lt;code&gt;~/.ssh/&lt;/code&gt; 文件夹下是这样子的：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs css&quot;&gt;├── &lt;span class=&quot;hljs-selector-tag&quot;&gt;company&lt;/span&gt;&lt;br/&gt;│   ├── &lt;span class=&quot;hljs-selector-tag&quot;&gt;id_rsa&lt;/span&gt;&lt;br/&gt;│   └── &lt;span class=&quot;hljs-selector-tag&quot;&gt;id_rsa&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.pub&lt;/span&gt;&lt;br/&gt;├── &lt;span class=&quot;hljs-selector-tag&quot;&gt;config&lt;/span&gt;&lt;br/&gt;├── &lt;span class=&quot;hljs-selector-tag&quot;&gt;github&lt;/span&gt;&lt;br/&gt;│   ├── &lt;span class=&quot;hljs-selector-tag&quot;&gt;id_rsa_github&lt;/span&gt;&lt;br/&gt;│   └── &lt;span class=&quot;hljs-selector-tag&quot;&gt;id_rsa_github&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.pub&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span&gt;扩展（关于配置文件 config）&lt;/span&gt;&lt;/h3&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;22&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;配置文件的位置&lt;/strong&gt;：上面我们在 &lt;code&gt;~/.ssh/&lt;/code&gt; 文件夹下创建配置文件。其实也可以指定位置，具体可查阅 ssh 帮助手册（&lt;code&gt;man 1 ssh&lt;/code&gt;）。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs delphi&quot;&gt;-F configfile&lt;br/&gt;Specifies an alternative per-user configuration &lt;span class=&quot;hljs-keyword&quot;&gt;file&lt;/span&gt;.  &lt;span class=&quot;hljs-keyword&quot;&gt;If&lt;/span&gt; a configuration &lt;span class=&quot;hljs-keyword&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; given &lt;span class=&quot;hljs-keyword&quot;&gt;on&lt;/span&gt; the command line, the system-wide configuration &lt;span class=&quot;hljs-keyword&quot;&gt;file&lt;/span&gt; (/etc/ssh/ssh_config) will be ignored.  The &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; the per-user configuration &lt;span class=&quot;hljs-keyword&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; ~/.ssh/config.&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Host 别名&lt;/strong&gt;：可随意指定，比如把 github 的 Host 别名设置为 banana，那你在测试的时候也可以输入&lt;code&gt;ssh -T banana&lt;/code&gt;，以后 clone 项目时也可以用 banana 代替 github.com 。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;strong&gt;User&lt;/strong&gt;: 注意它和 git 中的 user.name 不是一个概念。&lt;/p&gt;
&lt;p&gt;a. 配置文件中的 User 是登录提供 git 服务的平台（如这里的 github）的服务器主机时指定的用户名，比如 github 中 clone 项目时选择 ssh，链接均以 &lt;code&gt;git@github.com&lt;/code&gt;开头，@ 前面的 git 就是 github 对应服务器主机中的一个用户名，即上面设置的 User，@ 后面的 github.com 就是 HostName）；&lt;/p&gt;
&lt;p&gt;b. git 中的 user.name 是用来追踪代码的，提交代码时显示的作者名字就是它，比如在 github 中，我的 user.name 就是 xiaoxi666。这里引出了另外一个问题：&lt;strong&gt;我在本机中配置了多个 git 账号，如何在不同的项目中自动切换不同的作者名字？&lt;/strong&gt;比如我在公司的代码库里提交代码时，用的就是另外一个名字而非 xiaoxi666。这部分内容涉及到了 git 的配置（可以在终端输入 &lt;code&gt;git config --help&lt;/code&gt; 查看官方说明），你一定有过下面这种配置的经历：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs coffeescript&quot;&gt;git config --&lt;span class=&quot;hljs-built_in&quot;&gt;global&lt;/span&gt; user.name &lt;span class=&quot;hljs-string&quot;&gt;&quot;user_name&quot;&lt;/span&gt;&lt;br/&gt;git config --&lt;span class=&quot;hljs-built_in&quot;&gt;global&lt;/span&gt; user.email &lt;span class=&quot;hljs-string&quot;&gt;&quot;user_name@example.com&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;实际上，git 有三种配置选项，分别对应于 --system 、--global、--local，上面就是 --global选项。三种配置选项分别对应于三个配置文件：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs php&quot;&gt;--system  -&amp;gt;   /usr/local/git/etc/gitconfig&lt;br/&gt;--&lt;span class=&quot;hljs-keyword&quot;&gt;global&lt;/span&gt;  -&amp;gt;   ~/.gitconfig&lt;br/&gt;--local   -&amp;gt;   你的项目仓库路径/.git/config        &lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这三种配置文件的优先级由低到高为：--system、--global、--local，优先级高的配置会覆盖优先级低的配置。一般情况下，我们不会去设置 --system 选项，主要用的是 --global 和 --local。正如网上满天飞的教程中，我们一般会设置 --global，这样就不用在每个项目中设置一遍了；但是如果配置了多个 git 账号，需要在一些项目中使用不同的作者名字，就需要单独为该项目设置 --local。需要注意的是， --local 选项只能 cd 到当前项目路径下中执行，否则会报错 fatal: --local can only be used inside a git repository。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注一：设置 --local 时记得同时设置 user.name 和 user.email，如果只设置 user.name，提交名字虽然正确了，但 user.email 还是用的 --global 中的 user.email，这会导致 github 仓库中显示的提交者却不会链接到你的账号：头像是灰色的八爪鱼，名字也没有链接。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注二：如果 --system、--global、--local 都没有设置 user.email，将无法提交代码，因为无法识别代码作者。在设置了 user.email 的前提下，如果 --system、--global、--local 都没有设置 user.name，则会使用计算机登录用户名作为代码提交的作者名字。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;配置文件可指定的参数还有很多，如端口等，这里我们直接使用默认端口 22，因此没有再去指定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;其他&lt;/span&gt;&lt;/h3&gt;
&lt;ol class=&quot; list-paddingleft-2&quot; readability=&quot;6.75&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code&gt;pbcopy&lt;/code&gt; 和 &lt;code&gt;pbpaste&lt;/code&gt; 是两个非常好用的命令，可查阅相关资料了解。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.67391304347826&quot;&gt;
&lt;p&gt;文章 &lt;a href=&quot;http://man.linuxde.net/ssh-add&quot; target=&quot;_blank&quot;&gt;http://man.linuxde.net/ssh-add&lt;/a&gt; 描述了 linux 的 ssh-add 命令，讲得不错。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;mac 分别有用户名、主机名(HostName)，以及计算机名。其中计算机名可以在 &quot;System Preference&quot; -&amp;gt; &quot;sharing&quot; 中设置，是分享时展示的名字；而主机名和用户名一般会在终端以如下两种格式显示：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;用户名@主机名 当前路径 $&lt;/code&gt;&lt;br/&gt;&lt;code&gt;主机名:当前路径 用户名$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中主机名可以用以下命令设置：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs bash&quot;&gt;scutil –-&lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; HostName new_hostname&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li readability=&quot;3.2297297297297&quot;&gt;
&lt;p&gt;有时我们需要添加或改变远程仓库的地址，两种命令分别为：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;git remote &lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt; origin 项目地址&lt;br/&gt;git remote &lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;-url origin 项目地址&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其中项目地址的格式为 ssh 或 https。可以参见文章 &lt;a href=&quot;https://help.github.com/articles/changing-a-remote-s-url/&quot; target=&quot;_blank&quot;&gt;https://help.github.com/articles/changing-a-remote-s-url/&lt;/a&gt; 加以了解。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Sat, 17 Nov 2018 15:32:00 +0000</pubDate>
<dc:creator>xiaoxi666</dc:creator>
<og:description>背景 在工作中，我们通常会以 ssh 的方式配置公司的 git 账号，但是平时也会使用 github 管理自己的项目。因此，我们需要为自己的 github 创建一个新的 git 账号，这就需要生成新的</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xiaoxi666/p/9975981.html</dc:identifier>
</item>
<item>
<title>HBase——HMaster启动之二(HMaster线程的调用) - letsfly</title>
<link>http://www.cnblogs.com/letsfly/p/9976238.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/letsfly/p/9976238.html</guid>
<description>&lt;p&gt;　　紧接着上一节HMaster的构建完成。接下来会调用HMaster调用master.start(),master.join()。&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;　　由HMaster的继承关系，很明显，他是Runnable的子类。也就是说，在调用其start方法时，run方法被调用。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117225221920-480839085.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;&lt;img src=&quot;http://note.youdao.com/src/B22B262B9F1E415983168CA8456BD1DE&quot; alt=&quot;&quot; data-media-type=&quot;image&quot;/&gt;　　下面，让我们来到HMaster.run方法。这里的涉及到多线程编程。一方面HMaster所在线程调用了super.run方法。另一方面另外启动了一个daemon线程用于调用startActiveMasterManager方法。很多同学在这里可能就迷惑了，到底该先分析哪个呢，我在刚开始看的时候也比较懵逼，后来多分析了几次发现，殊途同归，先分析哪个都无所谓。下面，我先从简单的开始介绍。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117225354869-526268673.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;　让我们来到super.run的调用。来到这里一看，内容很多，各位同学不需要慌，让我们再进入preRegistrationInitialization一探究竟。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117225417076-1098365429.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　来到preRegistrationInitialization，各位同学可能有所迷惑，为什么比较关键的方法有三个，而我在这里之框选了一个呢。原因很简单，在HMaster启动期间，他还运行不到下面去。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117225937505-832933699.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;　　接着，让我们一探究竟。看了两个block方法，各位同学可能以为是在这里阻塞的，然而并不是，真正的等待是在下图框选的waitForMasterActive。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117225957870-1306414361.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;11&quot;&gt;　　来到waitForMasterActive(由于在这里我们研究的是HMaster,因此，这里的方法应该是HMaster.waitForMasterActive)。这个方法虽然比较短，确实困扰了我很久的一个地方。下图框选的地方获得的默认值为false，而isStopped与isAborted的获得的初始值都是false。因此，HMaster在启动时，包括启动后，都一直在这里轮询等待。因为启动后只是将activeMaster置位false。在tablesOnMaster默认值为false的情况下，并没有任何作用。也就是说只有后面的两个值发生变动后，这种等待才会被打破。分析到这里，各位同学应该可以安心的分析那个守护线程了。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230044576-2000410869.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　让我们来到HMaster.startActiveMasterManager方法中，首先通过调用activeMasterManager.blockUntilBecomingActiveMaster确定当前Master为ActiveMaster，然后再调用finishActiveMasterInitialization方法。这里我们只分析ActiveMaster的流程，并不介绍StandyMaster。在blockUntilBecomingActiveMaster方法中的调用并不是很难，感兴趣的同学可以简单。在activeMasterManager.blockUntilBecomingActiveMaster。这里我们把重点放在finishActiveMasterInitialization。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230109974-1422720854.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;　　接下来让我们来到finishActiveMasterInitialization方法。&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;　　这个方法是出奇的长，在这里，我们还是按照一张张的来介绍，以避免大家到后面会忘记前面的。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230132724-1077759261.png&quot; alt=&quot;&quot;/&gt;　　首先我们分析第一个方法initializeMemStoreChunkCreator，其实这里只是初始化了&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230217225-1989785758.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230912186-390769887.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;　　来到ChunkCreator的构造方法，我们可以看到其主要调用了initializePools方法&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230930681-518808625.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　在initializePool方法中，主要构建了MemStoreChunkPool，并且将其加入heapMemoryManager的管理之中。而在构建MemStoreChunkPool的过程中，创建了Chunk，并将其放入reclaimedChunks中，初始化并开始周期调用统计线程StatisticsThread，将其内存数据打印出来。这里设计到HBase的内存管理，我将在后续的章节中专门拿出一讲来为大家讲解。这里就介绍到这。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117230955195-1238169657.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;　　接着来到MasterFileSystem的构造方法中，这里主要获得了fs与walFs。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231020412-1433085437.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　接下来，让我们来到createServerManager方法中，在这里首先构建了clusterConnection对象，其中主要构建了ShortCircuitingClusterConnection与MetaTableLocator。这里简单略过，详细内容请看我的另外一篇博文《HBase之setupClusterConnection流程》。然后构造了ServerManager，他就是HMaster用于管理region servers信息的类。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231109455-1210485191.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;　　再接下来，来到createProcedureExecutor，这是一个重量级的方法。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231202188-592926634.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　让我们首先来到MasterProcedureEnv的构造方法，这个构造方法看似简单，却同时构造了两个重要的对象。RSProcedureDispatcher、MasterProcedureScheduler。其中的RSProcedureDispatcher负责HMaster向RegionServer的Procedure调用，而MasterProcedureScheduler负责的是Master自身的Procedure的调用。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231219545-26765756.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;　　需要注意的是，在MasterProcedureScheduler中有几个队列的成员变量，他们的作用就是保存将要调用procedure，然后由具体线程调用。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231345545-1763033998.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　接下来是WALProcedureStore，这里主要传入了一个LeaseRecovery对象，而他的实际类型是MasterProcedureEnv.WALStoreLeaseRecovery，他的主要作用是对hdfs的文件恢复租约。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231400495-814798761.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　在ProcedureExecutor的构造方法中只是对其成员变量的赋值，并没有什么比较重要的方法。不过，在这里我们需要记住，在这里传入的store类型为WALProcedureStore，scheduler类型为MasterProcedureScheduler。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231423015-843964723.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　接下来来到WALProcedureStore.start方法。在这里，根据传入的线程数初始化了Slot数量，并且启动WALProcedureStoreSyncThread线程用于调用syncLoop方法。这里就简单略过，我们先继续后面的流程。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231440314-905301515.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;　　下面，来到ProcedureExecutor.init方法。这里将WorkerThread，添加到workerThread成员变量中。接着调用store.recoverLease，恢复相关文件的租约。然后调用scheduler.start，将scheduler中的running置位true。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231457904-1659879209.png&quot; alt=&quot;&quot;/&gt;　　这里简单看一下WorkThread中的run方法。这里的流程在我的博文《hbase之InitMetaProcedure流程》中有相关介绍，感兴趣的大家可以去看一下。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231657253-586342722.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;　　接下来来到finishActiveMasterInitialization的第二张图。&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;　　首先创建了AssignmentManager，AssignmentManager的作用就是用来操作assign/unassign。然后调用了AssignmentManager.start方法。关于AssignmentManager的相关调用我在博文《HBase之AssignmentManager相关调用》中有介绍，感兴趣的同学可以去看一下。接下来构造并调用了RegionServerTracker，用于通过ZK跟踪在线RegionServers。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231829834-1273033991.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　然后调用了initializeZKBasedSystemTrackers方法，在这里初始化了所有基于ZK的系统跟踪器。尽管如此，还是有些方法值得我们探究。首先介绍各种Tracker，这些都是直接或间接继承自ZKListener，或者将传入的ZK保存到自己的成员变量中用来实现对自己所在ZK目录中状态的监听。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231849646-2039200159.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　然后来到LoadBalancerFactory.getLoadBalancer方法，这里调用ReflectionUtils.newInstance通过反射创建了StochasticLoadBalancer，同时由于StochasticLoadBalancer实现了Configurable接口。因此在通过反射创建了StochasticLoadBalancer，紧接着变调用了setConf方法。在StochasticLoadBalancer.setConf中调用了构造了各种CostFunction。在这里我们简单略过&lt;img src=&quot;http://note.youdao.com/src/0C88F437FE54460F96D46BE59A284E73&quot; alt=&quot;&quot; data-media-type=&quot;image&quot;/&gt;。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231908116-401991944.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　接下来来到方法的后面，这里构建了SnapshotManager、MasterFlushTableProcedureManager(二者都继承自抽象类ProcedureManagerHost)并且注册到创建的MasterProcedureManagerHost对象中。接着调用了MasterProcedureManagerHost.initialize，调用了刚刚注册进来的两个对象initialize方法。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117231948315-473513334.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　接下来来到finishActiveMasterInitialization的下一张图。如果已经不是第一次调用，那么就不会调用框二中所选的内容，不过，感兴趣的同学可以去看我的博客《hbase之InitMetaProcedure流程》。这里我们只介绍框一与框三中的内容。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232029860-1449166042.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　来到HMaster.startServiceThreads。这里的executorService大家可能已经忘记了，他是在HMaster构造时实例化的(具体是在HMaster的父类HRegionServer构造的最后)。通过调用executorService.startExecutorService，ExecutorType的类型与最大线程数量传入ExecutorService.startExecutorService，构造了相应名称的线程池，并且将其置于ExecutorService的成员变量executorMap的管理之下。接下来我们简单介绍一下getChoreService().scheduleChore。这是ScheduledChore调用的通用方式，通过getChoreService获取初始化的成员变量choreService(同样在HMaster的父类HRegionServer构造的最后实例化的)，然后调用其scheduleChore方法，在上面我已经讲过了，这里就不再赘述了。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232046227-281113462.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;9&quot;&gt;　　接着调用waitForRegionServers等待RegionServer的注册。关于HMaster与HRegionServer的交互流程我在以后的章节中会介绍到。接下来调用waitUntilMetaOnline，等待hbase:meta上线并且可读。以为后面assignmentManager.joinCluster中loadMeta做准备。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232107677-1502701847.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;　　接下来，我们首先来到assignmentManager.joinCluster&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;　　在loadMeta中，主要用于载入hbase:meta的各个Region,并且将其加入到regionStates的管理中。接下来调用processOfflineRegions，当前保存在AssignmentManager.regionStates中，其状态OFFLINE的Regions。然后将成员变量ritChore加入到ProcedureExecutor的timeoutExecutor中。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232130033-2070637083.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;　　接下来调用了TableStateManager.start，将当前的表都置于TableStateManager的管理之中。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232152221-1074908381.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　下面框选中的内容虽然多，但是，我们只是简单介绍。因为这里已经不是很主要的流程了。首先是几个ScheduledChore的子类构建并调用。接着，调用ServerManager.startChore其主要讲FlushedSequenceIdFlusher这个ScheduledChore构建并开始调用。然后，调用了initClusterSchemaService、cpHost.preMasterInitialization。最后，将三个ConfigurationObserver注册到configurationManager中。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232205246-1622362036.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;　　来到FAMI中的最后一张图，这里我们只是引出，关于其中具体的流程，我们将在后面意义道来。在后面主要介绍initMobCleaner。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232242887-262744256.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;　　下图首先构建了ExpiredMobFileCleanerChore(这个ScheduledChore用于定期删除过期的mob文件)，然后将其加入到choreService中并启动。紧接着构建并启动了MobCompactionChore，这个ScheduledChore用于定期压缩以合并小的mob文件。然后构建了MasterMobCompactionThread。&lt;img src=&quot;https://img2018.cnblogs.com/blog/1365945/201811/1365945-20181117232305057-1634347958.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;　　至此，HMaster的启动流程就完成了，感谢大家内心观看。说实话，不仅各位看的辛苦，小编我写的也很辛苦，所以，留下你的赞，小编更有动力发表更好的文章。&lt;/p&gt;
&lt;p&gt;　　学完这一节，很多同学可能会对netty的原理想要有比较深入的了解。请各位同学不要着急，在介绍完HBase中比较重要的流程，小编就会为大家带来netty的深入应用以及源码剖析。请大家持续关注。&lt;/p&gt;
</description>
<pubDate>Sat, 17 Nov 2018 15:28:00 +0000</pubDate>
<dc:creator>letsfly</dc:creator>
<og:description>紧接着上一节HMaster的构建完成。接下来会调用HMaster调用master.start(),master.join()。 由HMaster的继承关系，很明显，他是Runnable的子类。也就是说</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/letsfly/p/9976238.html</dc:identifier>
</item>
<item>
<title>郑州大学2018新生训练赛第十场题解 - moonfair</title>
<link>http://www.cnblogs.com/moonfair/p/9976155.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/moonfair/p/9976155.html</guid>
<description>&lt;h4&gt;　　比赛（补题）地址：&lt;a href=&quot;http://222.22.65.164/problemset.php&quot; target=&quot;_blank&quot;&gt;http://222.22.65.164/problemset.php&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;　　题号为：4305 —— 4309&lt;/h4&gt;
&lt;h2&gt;　　&lt;strong&gt;&lt;span&gt;总述：这次新生赛难度偏于平和，但涵盖方面甚广，其中一道签到题是c语言题，并且有两道是hdu一百题的原题，一道简单的最小生成树，唯一“有些难度”的应该是一道数论题（毕竟本来自己就是搞数学的）。&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;h3&gt;&lt;strong&gt;　　　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1467200/201811/1467200-20181117213140666-1556119530.png&quot; alt=&quot;&quot;/&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;h3&gt;　　　　　　&lt;/h3&gt;
&lt;p&gt;　　这是一道经典的递推问题，原型为HDU 2044的“一只小蜜蜂…”。思路很简单，以第5个沙丘为例，到达第五个沙丘的方式有两种：从第3个向 右走，或从第4个向右上走。设dp[ i ]为从第一个沙丘走到第i个的路径数，我们容易得到递推方程：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　　　　　　　dp[5] = dp[4] + dp[3]&lt;/p&gt;
&lt;p&gt;　　那么依此类推，得到一般的递推方程：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　　　　　　　dp[ i ] = dp[ i-1 ] + dp[ i-2 ]&lt;/p&gt;
&lt;p&gt;　　而从第a个到第b个，则可以简化为第1个到第b-a个。&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; ll f[&lt;span&gt;100&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;  
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; init() {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     f[&lt;span&gt;1&lt;/span&gt;] = f[&lt;span&gt;2&lt;/span&gt;] = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;3&lt;/span&gt;; i &amp;lt; &lt;span&gt;100&lt;/span&gt;; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         f[i] = f[i - &lt;span&gt;1&lt;/span&gt;] + f[i - &lt;span&gt;2&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;  
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main() {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    init();
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;      
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; t;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;&lt;span&gt;t);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; a, b;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; (t--&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;a, &amp;amp;&lt;span&gt;b);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%lld\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, f[b - a + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;      
&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　水题，原题是 HDU 2052 的 “Picture”，直接放代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main() {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n, m;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; (~scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;n, &amp;amp;&lt;span&gt;m)) {
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; n; i++) putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; m; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;             putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; n; j++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 putchar(&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;|&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; n; i++) putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;+&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         putchar(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;      
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;　　Emmm，这是一道裸的Kruskal，不理解的大家可以搜索一下，不想搜的也可以等数据结构老师讲，2333.&lt;/p&gt;
&lt;p&gt;　　这道题的原题是 HDU 1863 的 “ 畅通工程”。&lt;/p&gt;
&lt;p&gt;　　代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;56&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; Edge {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; &lt;span&gt;from&lt;/span&gt;&lt;span&gt;, to, w;
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;      
&lt;span&gt; 4&lt;/span&gt;     Edge(&lt;span&gt;int&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; = &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;int&lt;/span&gt; to = &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;int&lt;/span&gt; w = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;):
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;from&lt;/span&gt;(&lt;span&gt;from&lt;/span&gt;&lt;span&gt;), to(to), w(w) {}
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;      
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt; &amp;lt; (&lt;span&gt;const&lt;/span&gt; Edge &amp;amp;rhs) &lt;span&gt;const&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; w &amp;lt;&lt;span&gt; rhs.w;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;} edge[MAXEDGE];
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;  
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; parents[MAXVERTEX];
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; vertices, edges;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;  
&lt;span&gt;15&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; init() {
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;; i &amp;lt; MAXVERTEX; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         parents[i] =&lt;span&gt; i;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;  
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; find(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x) {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (parents[x] ==&lt;span&gt; x) {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; x;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; parents[x] =&lt;span&gt; find(parents[x]);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;  
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; unite(&lt;span&gt;int&lt;/span&gt; x, &lt;span&gt;int&lt;/span&gt;&lt;span&gt; y) {
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     x =&lt;span&gt; find(x);
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;     y =&lt;span&gt; find(y);
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (x ==&lt;span&gt; y) {
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;         parents[y] =&lt;span&gt; x;
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;  
&lt;span&gt;40&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; kruskal() {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;    init();
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt;     sort(edge, edge +&lt;span&gt; edges);
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; ans = &lt;span&gt;0&lt;/span&gt;, counter = &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; edges; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (unite(edge[i].&lt;span&gt;from&lt;/span&gt;&lt;span&gt;, edge[i].to)) {
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;             &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;         } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;             ans +=&lt;span&gt; edge[i].w;
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;             counter++&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (counter &amp;gt;=&lt;span&gt; vertices) {
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;             &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; (counter &amp;gt;=&lt;span&gt; vertices) {
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt;&lt;span&gt; ans;
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;     } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;  
&lt;span&gt;62&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main() {
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; u, v, w;
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt;      
&lt;span&gt;65&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; (~scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;edges, &amp;amp;&lt;span&gt;vertices)) {
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (edges == &lt;span&gt;0&lt;/span&gt;) &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; edges; i++&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt;             scanf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d%d%d&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &amp;amp;u, &amp;amp;v, &amp;amp;&lt;span&gt;w);
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;             edge[i] =&lt;span&gt; Edge(u, v, w);
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;          
&lt;span&gt;72&lt;/span&gt;         &lt;span&gt;int&lt;/span&gt; ans =&lt;span&gt; kruskal();
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt; (ans == -&lt;span&gt;1&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;             printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;?\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt;         } &lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;             printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%d\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;, ans);
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt;      
&lt;span&gt;80&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;　　这。。。签到题就不用讲，也不用放代码了吧。&lt;/p&gt;
&lt;p&gt;　　唯一需要注意的是纯c选手输出时需要将%转义。&lt;/p&gt;


&lt;p&gt;　　根据&lt;span&gt;&lt;strong&gt;算数基本定理&lt;/strong&gt;&lt;/span&gt;，任何一个自然数都可以唯一地分解为若干个素数的乘积，如果我们列出这个数所有的质因数，并写成幂的乘积的形式，则称其为&lt;span&gt;&lt;strong&gt;标准素因数分解式&lt;/strong&gt;&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;　　比如：对于120，120 = 2*2*2*3*5，写成标准素因数分解式就是：&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　　　　　　　　&lt;strong&gt;&lt;span&gt;120 = 2&lt;sup&gt;3 &lt;/sup&gt;* 3&lt;sup&gt;1&lt;/sup&gt; * 5&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;　　&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;那么我们就可以轻易地得到 120 因子个数：&lt;span&gt;&lt;strong&gt;所有幂次+1的乘积&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　也就是：                                      &lt;strong&gt;&lt;span&gt; ( 3 + 1 ) * ( 1 + 1 ) * ( 1 + 1 ) = 16&lt;/span&gt;&lt;span&gt;　&lt;/span&gt;　&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　.....在此证明过程不再赘述　&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　知道了这些，我们来考虑&lt;span&gt;&lt;strong&gt;让一个数因子个数扩大到二倍（我们称其为一次“扩展”）的 “ 费用 ”&lt;/strong&gt; &lt;/span&gt;： &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　我们可以将总的费用写为&lt;span&gt;&lt;strong&gt;素因子幂的乘积的形式。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　考虑这样实现：将&lt;strong&gt;总费用维护为一个堆（为什么要维护成堆？请认真思考）&lt;/strong&gt;，每个素因子的费用都保存在&lt;strong&gt;一个含有“ 底数，指数，值 ”的结构体&lt;/strong&gt;中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　初始时堆中没有元素，通过&lt;strong&gt;不断进行“ 扩展 ”，逐渐向堆中增加元素，直到因子个数符合要求（500500）。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　那么 &lt;strong&gt;最后每一个结构体中的值再除以底数（为什么要除以底数？请认真思考） &lt;/strong&gt;的乘积就是总的费用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　在考虑操作方法，不外乎有两种：                                                     &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　1、扩展一个新的（&lt;strong&gt;指数为0&lt;/strong&gt;）的素因子（比如说取了 2），并&lt;strong&gt;标记为“新素数”&lt;/strong&gt;（以待后用）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　　　　　同时对这个素因子的费用进行更新 &lt;strong&gt;2&lt;sup&gt;（0+1）-&amp;gt;(1 + 1)&lt;/sup&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;　　　　　　　　　　　&lt;/p&gt;
&lt;p&gt;　　　　2、在堆中取&lt;span&gt;&lt;strong&gt;扩展费用最小&lt;/strong&gt;&lt;/span&gt;的素数，进行扩展（更新其指数），同时更新其费用。&lt;/p&gt;
&lt;p&gt;　　　　　　如果这个素数是一个&lt;strong&gt;“新素数”&lt;/strong&gt;，那么我们从打好的素数表中，取下一个素数（比如说取了2）进堆，&lt;strong&gt;将其指数初始化为0&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;　　下边来看一下代码实现：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; #include&amp;lt;bits/stdc++.h&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; ll long long
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; MAXN=&lt;span&gt;600000&lt;/span&gt;,curnum=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; vis[&lt;span&gt;10000000&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; vector&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&lt;span&gt; sushu;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; cursushu=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;struct&lt;/span&gt;&lt;span&gt; node{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; dishu;
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; zhishu;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    ll zhi;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 
&lt;span&gt;13&lt;/span&gt; &lt;span&gt;};
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; &lt;span&gt;operator&lt;/span&gt;&amp;lt;&lt;span&gt;(node a,node b)
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; a.zhi&amp;gt;&lt;span&gt;b.zhi;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; priority_queue&amp;lt;node&amp;gt;&lt;span&gt; dui;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; ll ans=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; dabiao(){
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(ll i=&lt;span&gt;2&lt;/span&gt;;;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;vis[i]){
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            sushu.push_back(i);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(sushu.size()&amp;gt;&lt;span&gt;500500&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(ll j=i*i;j&amp;lt;&lt;span&gt;10000000&lt;/span&gt;;j+=&lt;span&gt;i){
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             vis[j]=&lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; addnew(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; x){
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    node p;
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;     p.dishu=&lt;span&gt;sushu[x];
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;     p.zhishu=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;     p.zhi=&lt;span&gt;p.dishu;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    dui.push(p);
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; 
&lt;span&gt;43&lt;/span&gt; 
&lt;span&gt;44&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; update_old_node(node tmp){
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; &lt;span&gt;    node a;
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt;     a.dishu=&lt;span&gt;tmp.dishu;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt;     a.zhishu=tmp.zhishu*&lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt;     a.zhi=&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;a.zhishu;i++&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;         a.zhi*=&lt;span&gt;a.dishu;
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; &lt;span&gt;    dui.push(a);
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; 
&lt;span&gt;55&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; act(){
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;     node tmp=&lt;span&gt;dui.top();
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt; &lt;span&gt;    dui.pop();
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(tmp.dishu==sushu[cursushu-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;]){
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;         addnew(cursushu++&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;        update_old_node(tmp);
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt; &lt;span&gt;        update_old_node(tmp);
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt; 
&lt;span&gt;67&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt;     cout&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Input N:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; n;
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt;     cin&amp;gt;&amp;gt;&lt;span&gt;n;
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    dabiao();
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;     addnew(cursushu++&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;74&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;n;i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; &lt;span&gt;        act();
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;(!&lt;span&gt;dui.empty()){
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt;         ans*=(dui.top().zhi/dui.top().dishu%&lt;span&gt;500500507&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt;         ans%=&lt;span&gt;500500507&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt; &lt;span&gt;        dui.pop();
&lt;/span&gt;&lt;span&gt;80&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;81&lt;/span&gt;     cout&amp;lt;&amp;lt;&lt;span&gt;ans;
&lt;/span&gt;&lt;span&gt;82&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;


</description>
<pubDate>Sat, 17 Nov 2018 15:03:00 +0000</pubDate>
<dc:creator>moonfair</dc:creator>
<og:description>比赛（补题）地址：http://222.22.65.164/problemset.php 题号为：4305 —— 4309 总述：这次新生赛难度偏于平和，但涵盖方面甚广，其中一道签到题是c语言题，并且</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/moonfair/p/9976155.html</dc:identifier>
</item>
<item>
<title>[译]RabbitMQ教程C#版 - 远程过程调用(RPC) - Esofar</title>
<link>http://www.cnblogs.com/esofar/p/rabbitmq-rpc.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/esofar/p/rabbitmq-rpc.html</guid>
<description>&lt;blockquote readability=&quot;8.625&quot;&gt;
&lt;p&gt;&lt;strong&gt;先决条件&lt;/strong&gt;&lt;br/&gt;本教程假定 RabbitMQ 已经安装，并运行在&lt;code&gt;localhost&lt;/code&gt;标准端口（5672）。如果你使用不同的主机、端口或证书，则需要调整连接设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从哪里获得帮助&lt;/strong&gt;&lt;br/&gt;如果您在阅读本教程时遇到困难，可以通过邮件列表 &lt;a href=&quot;https://groups.google.com/forum/#!forum/rabbitmq-users&quot;&gt;联系我们&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在第 &lt;a href=&quot;https://www.cnblogs.com/esofar/p/rabbitmq-work-queues.html&quot;&gt;教程[2]&lt;/a&gt; 中，我们学习了如何使用工作队列在多个工作单元之间分配耗时任务。&lt;/p&gt;
&lt;p&gt;但是如果我们想要运行一个在远程计算机上的函数并等待其结果呢？这将是另外一回事了。这种模式通常被称为 &lt;em&gt;远程过程调用&lt;/em&gt; 或 &lt;em&gt;RPC&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;在本篇教程中，我们将使用 RabbitMQ 构建一个 RPC 系统：一个客户端和一个可扩展的 RPC 服务器。由于我们没有什么耗时任务值得分发，那干脆就创建一个返回斐波那契数列的虚拟 RPC 服务吧。&lt;/p&gt;
&lt;h2 id=&quot;客户端接口&quot;&gt;客户端接口&lt;/h2&gt;
&lt;p&gt;为了说明如何使用 RPC 服务，我们将创建一个简单的客户端类。该类将暴露一个名为&lt;code&gt;Call&lt;/code&gt;的方法，用来发送 RPC 请求并且保持阻塞状态，直到接收到应答为止。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;var rpcClient = new RPCClient();

Console.WriteLine(&quot; [x] Requesting fib(30)&quot;);
var response = rpcClient.Call(&quot;30&quot;);
Console.WriteLine(&quot; [.] Got '{0}'&quot;, response);

rpcClient.Close();&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;strong&gt;关于 RPC 的说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;尽管 RPC 在计算机中是一种很常见的模式，但它经常受到批评。问题出现在当程序员不知道一个函数是本地调用还是一个耗时的 RPC 请求。这样的混淆，会导致系统不可预测，以及给调试增加不必要的复杂性。误用 RPC 可能会导致不可维护的混乱代码，而不是简化软件。&lt;/p&gt;
&lt;p&gt;牢记这些限制，请考虑如下建议：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;确保可以明显区分哪些函数是本地调用，哪些是远程调用。&lt;/li&gt;
&lt;li&gt;为您的系统编写文档，明确组件之间的依赖关系。&lt;/li&gt;
&lt;li&gt;捕获异常，当 RPC 服务长时间宕机时客户端该如何应对。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;当有疑问的时候可以先避免使用 RPC。如果可以的话，考虑使用异步管道 - 而不是类似 RPC 的阻塞，其会将结果以异步的方式推送到下一个计算阶段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;回调队列&quot;&gt;回调队列&lt;/h2&gt;
&lt;p&gt;一般来讲，基于 RabbitMQ 进行 RPC 通信是非常简单的，客户端发送一个请求消息，然后服务端用一个响应消息作为应答。为了能接收到响应，我们需要在发送请求过程中指定一个'callback'队列地址。&lt;/p&gt;
&lt;pre class=&quot;c#&quot;&gt;
&lt;code&gt;var props = channel.CreateBasicProperties();
props.ReplyTo = replyQueueName;

var messageBytes = Encoding.UTF8.GetBytes(message);
channel.BasicPublish(exchange: &quot;&quot;,
                     routingKey: &quot;rpc_queue&quot;,
                     basicProperties: props,
                     body: messageBytes);

// ... then code to read a response message from the callback_queue ...&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote readability=&quot;7.895652173913&quot;&gt;
&lt;p&gt;&lt;strong&gt;消息属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AMQP 0-9-1 协议在消息中预定义了一个包含 14 个属性的集合，大多数属性很少使用，但以下情况除外：&lt;br/&gt;&lt;code&gt;Persistent&lt;/code&gt;：将消息标记为持久的（值为2）或者瞬时的（其他值），可以参考 &lt;a href=&quot;https://www.cnblogs.com/esofar/p/rabbitmq-work-queues.html&quot;&gt;教程[2]&lt;/a&gt;。&lt;br/&gt;&lt;code&gt;DeliveryMode&lt;/code&gt;：熟悉 AMQP 协议的人可以选择此属性而不是熟悉协议的人可以选择使用此属性而不是&lt;code&gt;Persistent&lt;/code&gt;，它们控制的东西是一样的。&lt;br/&gt;&lt;code&gt;ContentType&lt;/code&gt;：用于描述编码的 mime 类型。例如，对于经常使用的 JSON 编码，将此属性设置为：&lt;code&gt;application/json&lt;/code&gt;是一种很好的做法。&lt;br/&gt;&lt;code&gt;ReplyTo&lt;/code&gt;：通常用于命名回调队列。&lt;br/&gt;&lt;code&gt;CorrelationId&lt;/code&gt;：用于将 RPC 响应与请求相关联。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;关联id&quot;&gt;关联ID&lt;/h2&gt;
&lt;p&gt;在上面介绍的方法中，我们建议为每个 RPC 请求创建一个回调队列，但是这种方式效率低。幸运的是我们有一种更好的方式，那就是为每个客户端创建一个独立的回调队列。&lt;/p&gt;
&lt;p&gt;这种方式会引出一个新的问题，在收到响应的回调队列中，它无法区分响应属于哪一个请求，此时便是&lt;code&gt;CorrelationId&lt;/code&gt;属性的所用之处。我们将为每个请求的&lt;code&gt;CorrelationId&lt;/code&gt;设置一个唯一值。之后当我们在回调队列接收到响应的时候，再去检查下这个属性是否和请求中的值匹配，如此一来，我们就可以把响应和请求关联起来了。如果出现一个未知的&lt;code&gt;CorrelationId&lt;/code&gt;值，我们可以安全的销毁这个消息，因为这个消息不属于我们的请求。&lt;/p&gt;
&lt;p&gt;你可能会问，为什么我们应该忽略回调队列中的未知的消息，而不是用错误来标识失败呢？这是因为于服务器端可能存在竞争条件。虽然不太可能，但是 RPC 服务器可能在仅发送了响应消息而未发送消息确认的情况下挂掉，如果出现这种情况，RPC 服务器重启之后将会重新处理该请求。这就是为什么在客户端上我们必须优雅地处理重复的响应，并且理想情况下 RPC 应该是幂等的。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/785976/201811/785976-20181117212349010-1581646652.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们的 RPC 会是这样工作：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;客户端启动时，会创建一个匿名的独占回调队列。&lt;/li&gt;
&lt;li&gt;对于 RPC 请求，客户端发送带有两个属性的消息：&lt;code&gt;ReplyTo&lt;/code&gt;（设置为回调队列）和&lt;code&gt;CorrelationId&lt;/code&gt;（为每个请求设置唯一值）。&lt;/li&gt;
&lt;li&gt;请求被发送到&lt;code&gt;rpc_queue&lt;/code&gt;队列。&lt;/li&gt;
&lt;li&gt;RPC 工作线程（或者叫：服务器）正在等待该队列上的请求。当出现请求时，它会执行该作业，并使用&lt;code&gt;ReplyTo&lt;/code&gt;属性设置的队列将带有结果的消息发送回客户端。&lt;/li&gt;
&lt;li&gt;客户端等待回调队列上的数据。出现消息时，它会检查&lt;code&gt;CorrelationId&lt;/code&gt;属性。如果它与请求中的值匹配，则返回对应用程序的响应。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;组合在一起&quot;&gt;组合在一起&lt;/h2&gt;
&lt;p&gt;斐波纳契 任务：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;private static int fib(int n)
{
    if (n == 0 || n == 1) return n;
    return fib(n - 1) + fib(n - 2);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们宣布我们的斐波那契函数。并假定只允许有效的正整数输入。 （不要期望这个适用于大数字，它可能是最慢的递归实现）。&lt;/p&gt;
&lt;p&gt;我们的 RPC 服务端代码 &lt;a href=&quot;https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/dotnet/RPCServer/RPCServer.cs&quot;&gt;RPCServer.cs&lt;/a&gt; 看起来如下所示：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;using System;
using RabbitMQ.Client;
using RabbitMQ.Client.Events;
using System.Text;

class RPCServer
{
    public static void Main()
    {
        var factory = new ConnectionFactory() { HostName = &quot;localhost&quot; };
        using (var connection = factory.CreateConnection())
        using (var channel = connection.CreateModel())
        {
            channel.QueueDeclare(queue: &quot;rpc_queue&quot;, durable: false,
              exclusive: false, autoDelete: false, arguments: null);
            channel.BasicQos(0, 1, false);
            var consumer = new EventingBasicConsumer(channel);
            channel.BasicConsume(queue: &quot;rpc_queue&quot;,
              autoAck: false, consumer: consumer);
            Console.WriteLine(&quot; [x] Awaiting RPC requests&quot;);

            consumer.Received += (model, ea) =&amp;gt;
            {
                string response = null;

                var body = ea.Body;
                var props = ea.BasicProperties;
                var replyProps = channel.CreateBasicProperties();
                replyProps.CorrelationId = props.CorrelationId;

                try
                {
                    var message = Encoding.UTF8.GetString(body);
                    int n = int.Parse(message);
                    Console.WriteLine(&quot; [.] fib({0})&quot;, message);
                    response = fib(n).ToString();
                }
                catch (Exception e)
                {
                    Console.WriteLine(&quot; [.] &quot; + e.Message);
                    response = &quot;&quot;;
                }
                finally
                {
                    var responseBytes = Encoding.UTF8.GetBytes(response);
                    channel.BasicPublish(exchange: &quot;&quot;, routingKey: props.ReplyTo,
                      basicProperties: replyProps, body: responseBytes);
                    channel.BasicAck(deliveryTag: ea.DeliveryTag,
                      multiple: false);
                }
            };

            Console.WriteLine(&quot; Press [enter] to exit.&quot;);
            Console.ReadLine();
        }
    }

    /// 

    /// Assumes only valid positive integer input.
    /// Don't expect this one to work for big numbers, and it's
    /// probably the slowest recursive implementation possible.
    /// 
    private static int fib(int n)
    {
        if (n == 0 || n == 1)
        {
            return n;
        }

        return fib(n - 1) + fib(n - 2);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;服务端代码非常简单：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;像往常一样，首先建立连接，通道和声明队列。&lt;/li&gt;
&lt;li&gt;我们可能希望运行多个服务器进程。为了在多个服务器上平均分配负载，我们需要设置&lt;code&gt;channel.BasicQos&lt;/code&gt;中的&lt;code&gt;prefetchCount&lt;/code&gt;值。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;BasicConsume&lt;/code&gt;访问队列，然后注册一个交付处理程序，并在其中完成工作并发回响应。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们的 RPC 客户端 &lt;a href=&quot;https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/dotnet/RPCClient/RPCClient.cs&quot;&gt;RPCClient.cs&lt;/a&gt; 代码：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;using System;
using System.Collections.Concurrent;
using System.Text;
using RabbitMQ.Client;
using RabbitMQ.Client.Events;

public class RpcClient
{
    private readonly IConnection connection;
    private readonly IModel channel;
    private readonly string replyQueueName;
    private readonly EventingBasicConsumer consumer;
    private readonly BlockingCollection&amp;lt;string&amp;gt; respQueue = new BlockingCollection&amp;lt;string&amp;gt;();
    private readonly IBasicProperties props;

public RpcClient()
{
        var factory = new ConnectionFactory() { HostName = &quot;localhost&quot; };

        connection = factory.CreateConnection();
        channel = connection.CreateModel();
        replyQueueName = channel.QueueDeclare().QueueName;
        consumer = new EventingBasicConsumer(channel);

        props = channel.CreateBasicProperties();
        var correlationId = Guid.NewGuid().ToString();
        props.CorrelationId = correlationId;
        props.ReplyTo = replyQueueName;

        consumer.Received += (model, ea) =&amp;gt;
        {
            var body = ea.Body;
            var response = Encoding.UTF8.GetString(body);
            if (ea.BasicProperties.CorrelationId == correlationId)
            {
                respQueue.Add(response);
            }
        };
    }

    public string Call(string message)
    {
        var messageBytes = Encoding.UTF8.GetBytes(message);
        channel.BasicPublish(
            exchange: &quot;&quot;,
            routingKey: &quot;rpc_queue&quot;,
            basicProperties: props,
            body: messageBytes);

        channel.BasicConsume(
            consumer: consumer,
            queue: replyQueueName,
            autoAck: true);

        return respQueue.Take(); ;
    }

    public void Close()
    {
        connection.Close();
    }
}

public class Rpc
{
    public static void Main()
    {
        var rpcClient = new RpcClient();

        Console.WriteLine(&quot; [x] Requesting fib(30)&quot;);
        var response = rpcClient.Call(&quot;30&quot;);

        Console.WriteLine(&quot; [.] Got '{0}'&quot;, response);
        rpcClient.Close();
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;客户端代码稍微复杂一些：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;建立连接和通道，并为响应声明一个独有的 'callback' 队列。&lt;/li&gt;
&lt;li&gt;订阅这个 'callback' 队列，以便可以接收到 RPC 响应。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Call&lt;/code&gt;方法用来生成实际的 RPC 请求。&lt;/li&gt;
&lt;li&gt;在这里，我们首先生成一个唯一的&lt;code&gt;CorrelationId&lt;/code&gt;编号并保存它，while 循环会使用该值来捕获匹配的响应。&lt;/li&gt;
&lt;li&gt;接下来，我们发布请求消息，其中包含两个属性：&lt;code&gt;ReplyTo&lt;/code&gt;和&lt;code&gt;CorrelationId&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;此时，我们可以坐下来稍微一等，直到指定的响应到来。&lt;/li&gt;
&lt;li&gt;while 循环做的工作非常简单，对于每个响应消息，它都会检查&lt;code&gt;CorrelationId&lt;/code&gt;是否是我们正在寻找的那一个。如果是这样，它就会保存该响应。&lt;/li&gt;
&lt;li&gt;最后，我们将响应返回给用户。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;客户发出请求：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;var rpcClient = new RPCClient();

Console.WriteLine(&quot; [x] Requesting fib(30)&quot;);
var response = rpcClient.Call(&quot;30&quot;);
Console.WriteLine(&quot; [.] Got '{0}'&quot;, response);

rpcClient.Close();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;现在是查看 &lt;a href=&quot;https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/dotnet/RPCClient/RPCClient.cs&quot;&gt;RPCClient.cs&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/rabbitmq/rabbitmq-tutorials/blob/master/dotnet/RPCServer/RPCServer.cs&quot;&gt;RPCServer.cs&lt;/a&gt; 的完整示例源代码（包括基本异常处理）的好时机哦。&lt;/p&gt;
&lt;p&gt;像往常一样设置（请参见 &lt;a href=&quot;https://www.cnblogs.com/esofar/p/rabbitmq-hello-world.html&quot;&gt;教程[1]&lt;/a&gt;]）：&lt;/p&gt;
&lt;p&gt;我们的 RPC 服务现已准备就绪，现在可以启动服务端：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd RPCServer
dotnet run
# =&amp;gt; [x] Awaiting RPC requests&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;要请求斐波纳契数，请运行客户端：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd RPCClient
dotnet run
# =&amp;gt; [x] Requesting fib(30)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里介绍的设计并不是 RPC 服务的唯一可能实现，但它仍具有一些重要优势：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果 RPC 服务器太慢，您可以通过运行另一个服务器来扩展。尝试在新开一个控制台，运行第二个 RPCServer。&lt;/li&gt;
&lt;li&gt;在客户端，RPC 只需要发送和接收一条消息。不需要像&lt;code&gt;QueueDeclare&lt;/code&gt;一样同步调用。因此，对于单个 RPC 请求，RPC 客户端只需要一次网络往返。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;我们的代码很简单，也并没有尝试去解决更复杂（但很重要）的问题，比如就像：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;如果服务端没有运行，客户端应该如何反应？&lt;/li&gt;
&lt;li&gt;客户端是否应该为 RPC 设置某种超时机制？&lt;/li&gt;
&lt;li&gt;如果服务端出现故障并引发异常，是否应将其转发给客户端？&lt;/li&gt;
&lt;li&gt;在处理之前防止无效的传入消息（例如：检查边界、类型）。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;4.4943820224719&quot;&gt;
&lt;p&gt;如果您想进行实验，您可能会发现 &lt;a href=&quot;http://www.rabbitmq.com/management.html&quot;&gt;管理 UI&lt;/a&gt; 对于查看队列非常有用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;写在最后&quot;&gt;写在最后&lt;/h2&gt;
&lt;p&gt;本文翻译自 RabbitMQ 官方教程 C# 版本。如本文介绍内容与官方有所出入，请以官方最新内容为准。水平有限，翻译的不好请见谅，如有翻译错误还请指正。&lt;/p&gt;
</description>
<pubDate>Sat, 17 Nov 2018 14:59:00 +0000</pubDate>
<dc:creator>Esofar</dc:creator>
<og:description>先决条件 本教程假定 RabbitMQ 已经安装，并运行在 标准端口（5672）。如果你使用不同的主机、端口或证书，则需要调整连接设置。 从哪里获得帮助 如果您在阅读本教程时遇到困难，可以通过邮件列表</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/esofar/p/rabbitmq-rpc.html</dc:identifier>
</item>
<item>
<title>限流的简单使用及学习 - 一枝花算不算浪漫</title>
<link>http://www.cnblogs.com/wang-meng/p/b7a4ab721dcf0cfcb620eed21c6388a5.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wang-meng/p/b7a4ab721dcf0cfcb620eed21c6388a5.html</guid>
<description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近系统刚做了一次大的重构，以及下游子服务都做了升级改造。&lt;/p&gt;
&lt;p&gt;整个系统间的调用都是采用spring cloud这一套去实现的。我所负责的为业务服务端，专门为web端和pc端提供接口调用。在服务刚上线的一段时间，出现了一次雪崩的事件，整个调用链路如下：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/799093/201811/799093-20181117215553923-477550589.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;调用链路很简单，因为文本匹配服务 需要分词，匹配，已经从ES获取匹配后的术语语料等数据，所以会有请求挤压，一段时间类服务就崩溃了。为了紧急处理这种情况，所以需要再业务方加上限流机制（后续优化下游的匹配算法）。刚好也针对于这种情况，自己来学习下几种限流的方式。&lt;/p&gt;
&lt;h3 id=&quot;限流算法分类&quot;&gt;限流算法分类&lt;/h3&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;参见的限流算法有：令牌桶，漏桶，计数器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;计数器限流算法&quot;&gt;计数器限流算法&lt;/h4&gt;
&lt;p&gt;计数器是最简单也是最粗暴的一种限流算法，同时也是比较常用的，主要用来限制总并发数，比如数据库连接池大小、线程池大小、程序访问并发数等都是使用计数器算法。&lt;/p&gt;
&lt;ol class=&quot;wiz-list-level1&quot;&gt;&lt;li&gt;使用Redis的限流做法：&lt;/li&gt;
&lt;/ol&gt;&lt;div data-mode=&quot;java&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;code&gt;/**
 * 限流方法，通过redis进行方法级别的限流措施。
 */
@Service
@Transactional
@Slf4j
public class MethodThrottleService {

    @Autowired
    private RedisTemplate&amp;lt;String, String&amp;gt; redisTemplate;

    /**
     * 通过指定key值获取是否是合法请求，如果在规定缓存时间内仍然存在该key值，说明该请求不合法
     *
     * @param key        请求key值
     * @param expireTime 过期时间
     * @param timeUnit   过期时间单位
     * @return 是否过期 true || false
     */
    public Boolean validateKeyRequest(String key, int expireTime, TimeUnit timeUnit) {
        ValueOperations&amp;lt;String, String&amp;gt; ops = redisTemplate.opsForValue();
        String result = ops.get(key);
        if (StringUtils.isNotBlank(result)) {
            return false;
        }

        ops.set(key, key, expireTime, timeUnit);
        return true;
    }

    /**
     * 通过指定用户和方法名判断请求是否合法请求，如果在规定缓存时间内仍然存在该key值，说明该请求不合法
     *
     * @param methodName 方法名
     * @param perCount   规定时间请求的次数
     * @param iolId      用户名
     * @return 是否过期 true || false
     */
    public Boolean validateUserRequest(String methodName, int perCount, String iolId, int expireTime, TimeUnit timeUnit) {
        ValueOperations&amp;lt;String, String&amp;gt; ops = redisTemplate.opsForValue();
        String cacheKey = getCacheKey(iolId, methodName);
        Long requestCount = ops.increment(cacheKey, 1);
        log.info(&quot;requestCount = {}&quot;, requestCount);
        redisTemplate.expire(cacheKey,expireTime, timeUnit );
        if (requestCount &amp;gt;= perCount) {
            log.info(&quot;MethodThrottle exceed weight limit！ iolId = {}, methodName = {}, requestCount = {}&quot;, iolId, methodName, requestCount);
            return false;
        }

        return true;
    }

    /**
     * 获取缓存的key值
     * @param targetName 目标名称
     * @param methodName 方法名称
     * @return 缓存key
      */
    private String getCacheKey(String targetName, String methodName) {
        StringBuilder sb = new StringBuilder(&quot;&quot;);
        sb.append(&quot;limitRate.&quot;).append(targetName).append(&quot;.&quot;).append(methodName);
        return sb.toString();
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用redis限流，可以针对于用户+方法名进行精准限流。同时可以根据请求key值进行限流，目的是限定规定时间类同样参数的请求次数。&lt;br/&gt;但是redis 限流会有很大的性能瓶颈，频繁的写入，读取，过期会对redis性能损耗比较大。不建议此种方法。&lt;br/&gt;另外计数器还可以使用&lt;code&gt;AtomicInteger&lt;/code&gt; 和 &lt;code&gt;Semaphore&lt;/code&gt;，具体就不在这列出代码了，具体可以参考：&lt;a href=&quot;https://www.jianshu.com/p/d11baa736d22&quot;&gt;Java限流策略-简书&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;令牌桶算法&quot;&gt;令牌桶算法&lt;/h4&gt;
&lt;p&gt;令牌桶算法是一个存放固定容量的令牌的桶，按照固定速率往桶里添加令牌。令牌桶算法的描述如下：（参考开涛：亿级流量网站架构核心技术 中第4章部分内容）&lt;br/&gt;如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;假设限制2r/s，则按照500毫秒的固定速率往桶中添加令牌；&lt;/li&gt;
&lt;li&gt;桶中最多存放b个令牌，当桶满时，新添加的令牌被丢弃或拒绝；&lt;br/&gt;-当一个n个字节大小的数据包到达，将从桶中删除n个令牌，接着数据包被发送到网络上；&lt;br/&gt;-如果桶中的令牌不足n个，则不会删除令牌，且该数据包将被限流（要么丢弃，要么缓冲区等待）。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/799093/201811/799093-20181117215554822-1898457493.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;备注（10r/s： 一秒钟10令牌放入桶中）&lt;br/&gt;对于令牌桶限流，我们可以使用&lt;code&gt;Guava&lt;/code&gt;开源得到&lt;code&gt;RateLimiter&lt;/code&gt; 来做，具体可以参考如下代码：&lt;/p&gt;
&lt;div data-mode=&quot;java&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code&gt;//每秒只发出10个令牌
RateLimiter rateLimiter = RateLimiter.create(10);
/**
 * 尝试获取令牌
 *
 * @return 获取令牌是否成功 true || false
 */
public boolean tryAcquire() {
    return rateLimiter.tryAcquire();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;漏桶算法&quot;&gt;漏桶算法&lt;/h4&gt;
&lt;p&gt;漏桶作为计量工具（The Leaky Bucket Algorithm as a Meter）时，可以用于流量整形（Traffic Shaping）和流量控制（TrafficPolicing），漏桶算法的描述如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;一个固定容量的漏桶，按照常量固定速率流出水滴；&lt;/li&gt;
&lt;li&gt;如果桶是空的，则不需流出水滴；&lt;/li&gt;
&lt;li&gt;可以以任意速率流入水滴到漏桶；&lt;/li&gt;
&lt;li&gt;如果流入水滴超出了桶的容量，则流入的水滴溢出了（被丢弃），而漏桶容量是不变的。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/799093/201811/799093-20181117215555274-667164208.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;令牌桶和漏桶对比：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;令牌桶是按照固定速率往桶中添加令牌，请求是否被处理需要看桶中令牌是否足够，当令牌数减为零时则拒绝新的请求；&lt;/li&gt;
&lt;li&gt;漏桶则是按照常量固定速率流出请求，流入请求速率任意，当流入的请求数累积到漏桶容量时，则新流入的请求被拒绝；&lt;/li&gt;
&lt;li&gt;令牌桶限制的是平均流入速率（允许突发请求，只要有令牌就可以处理，支持一次拿3个令牌，4个令牌），并允许一定程度突发流量；&lt;/li&gt;
&lt;li&gt;漏桶限制的是常量流出速率（即流出速率是一个固定常量值，比如都是1的速率流出，而不能一次是1，下次又是2），从而平滑突发流入速率；&lt;/li&gt;
&lt;li&gt;令牌桶允许一定程度的突发，而漏桶主要目的是平滑流入速率；&lt;/li&gt;
&lt;li&gt;两个算法实现可以一样，但是方向是相反的，对于相同的参数得到的限流效果是一样的。&lt;/li&gt;
&lt;/ul&gt;
</description>
<pubDate>Sat, 17 Nov 2018 13:56:00 +0000</pubDate>
<dc:creator>一枝花算不算浪漫</dc:creator>
<og:description>前言 最近系统刚做了一次大的重构，以及下游子服务都做了升级改造。 整个系统间的调用都是采用spring cloud这一套去实现的。我所负责的为业务服务端，专门为web端和pc端提供接口调用。在服务刚上</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wang-meng/p/b7a4ab721dcf0cfcb620eed21c6388a5.html</dc:identifier>
</item>
</channel>
</rss>