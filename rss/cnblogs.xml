<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>K-近邻算法（KNN） - terieqin</title>
<link>http://www.cnblogs.com/terieqin/p/9268108.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/terieqin/p/9268108.html</guid>
<description>&lt;h2&gt;KNN算法描述&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;输入：&lt;/strong&gt;训练样本$X = (x_1,x_2,...,x_n)$。训练样本标签$Labels = (l_1,l_2,...,l_n)$。待测样本$y$。参数K&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输出：&lt;/strong&gt;待测样本$y$的标签t&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;算法描述：&lt;/strong&gt;计算待测样本与每个训练样本的相似度，然后选出最相似的前K个训练样本，则待测样本的标签定义为这K个训练样本中出现次数最多的标签类别。&lt;/p&gt;

&lt;p&gt;每个样本$x_i$都是一个向量$x_i = (x_{i1},x_{i2},...,x_{im})$，表示样本具有m个特征值。计算两个样本之间的相似度，可以用向量之间的距离表示。距离的计算通常采用欧式距离。&lt;/p&gt;
&lt;p&gt;西瓜书上对KNN算法有如下描述：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
它没有显示的训练过程。事实上，它是“懒惰学习”的著名代表，此类学习技术在训练阶段仅仅是把样本保存起来，训练时间开销为零，待收到测试样本后再进行处理
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;KNN分类器的性能&lt;/h2&gt;
&lt;p&gt;KNN分类器的性能主要跟两个方面有关系：一是距离的计算方式。除了采用欧式距离，还有用曼哈顿距离等其它的距离表示方式。不同的方法计算的结果有很大的不同。二是参数k的选择。假设一个二分类问题（0或1）。选出的与测试样本最相似的五个训练样本的标签分别为（100111）。则当k=1时，待测样本的标签t=1；k=3时，t=0；k=5时，t=1。可见不同的k的取值对结果有很大的影响。对于一个待测样本集，选取怎样的k才能使得训练误差最小，需要具体实验的测定。&lt;/p&gt;
&lt;h2&gt;Python2.x 代码实现&lt;/h2&gt;
&lt;p&gt;这是 《机器学习实战》上的源码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span&gt;from&lt;/span&gt; numpy &lt;span&gt;import&lt;/span&gt; *
&lt;span&gt;import&lt;/span&gt;&lt;span&gt; os
&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt; operator

&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 输入待分类向量inX，训练数据集dataSet，训练标号labels，使用近邻的K个数据测试&lt;/span&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; classify0(inX,dataSet,labels,K):
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 计算每个训练样本和待测样本之间的欧式距离&lt;/span&gt;
    dataSetSize =&lt;span&gt; dataSet.shape[0]
    diffMat &lt;/span&gt;= tile(inX,(dataSetSize,1)) -&lt;span&gt; dataSet
    sqDiffMat &lt;/span&gt;= diffMat**2&lt;span&gt;
    sqDistances &lt;/span&gt;= sqDiffMat.sum(axis=1&lt;span&gt;)
    distances &lt;/span&gt;= sqDistances**0.5
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 按距离排序&lt;/span&gt;
    sortedDistIndicies =&lt;span&gt; distances.argsort()
    classCount &lt;/span&gt;=&lt;span&gt; {}
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 选出距离最近的K个训练数据的标号&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; range(K):
        voteIlabel &lt;/span&gt;=&lt;span&gt; labels[sortedDistIndicies[i]]
        &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 利用字典来存储选出的每个类别的个数&lt;/span&gt;
        classCount[voteIlabel] = classCount.get(voteIlabel,0) + 1
        &lt;span&gt;#&lt;/span&gt;&lt;span&gt; python 内置的排序函数，对任何可迭代对象进行排序。现在对字典的值（即类别的个数）进行排序&lt;/span&gt;
    sortedClassCount = sorted(classCount.iteritems(),key=operator.itemgetter(1),reverse=&lt;span&gt;True)
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 返回字典的值最高的那个键值（即类别）&lt;/span&gt;
    &lt;span&gt;return&lt;/span&gt; sortedClassCount[0][0]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中，inX和dataSet需要用numpy的array或者matrix表示。&lt;/p&gt;
&lt;h2&gt;手写体识别应用&lt;/h2&gt;
&lt;p&gt;每个样本的数据化表示如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1425654/201807/1425654-20180706151914474-1219031162.png&quot; alt=&quot;&quot; width=&quot;195&quot; height=&quot;415&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如图，这是一个3的样本。训练样本集里面总共有十个(0-9)数字的样本，每个数字有199个样本。每个样本由32*32的数字表示。&lt;/p&gt;
&lt;p&gt;具体的源码就不放出来了。其实都是读取文件数据，转化成向量，然后调用上面的函数做训练。训练的结果和书上的结果一模一样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1425654/201807/1425654-20180706152436783-747819252.png&quot; alt=&quot;&quot; width=&quot;347&quot; height=&quot;267&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;思考&lt;/h2&gt;
&lt;p&gt;有一个问题我想不太明白，KNN算法需要将样本向量化表示。假设一个电影样本有这么两个特征：参演的演员人数，票房。数据化之后，前者扣除龙套人物，一般在数十或者数百量级，后者则是数亿量级。现实中有很多这样的例子，它的特征数据化之后，有些特征会很大，有些特征会很小。很小的数字做差，依然很小，很大的数字做差可能会很大。这样，不同的特征对于距离的贡献便有很大区别。数字越大的贡献越多。如果一类样本有一个特征数字表现很大，其余的很小，那么这类样本之间的距离几乎都由该大数字特征决定。这显然是不合理的。&lt;/p&gt;
&lt;p&gt;我觉得现实应用可能需要对特征进行同区间归一化，或者进行加权，以解决上述问题。不知道是不是这样做。&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 07:34:00 +0000</pubDate>
<dc:creator>terieqin</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/terieqin/p/9268108.html</dc:identifier>
</item>
<item>
<title>学习ASP.NET Core Razor 编程系列十四——文件上传功能（二） - DotNet菜园</title>
<link>http://www.cnblogs.com/chillsrc/p/9273635.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chillsrc/p/9273635.html</guid>
<description>&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;postTitle2&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8579777.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列一&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8622439.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列二——添加一个实体&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8651973.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列三——创建数据表及创建项目基本页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8717199.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列四——Asp.Net Core Razor列表模板页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8778379.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列五——Asp.Net Core Razor新建模板页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8872303.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列六——数据库初始化&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8968398.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列七——修改列表页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/8986512.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列八——并发处理&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/chillsrc/p/9025896.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列九——增加查询功能&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/chillsrc/p/9077466.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列十——添加新字段&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/chillsrc/p/9111862.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列十一——把新字段更新到数据库&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/chillsrc/p/9178291.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列十二——在页面中增加校验&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;a id=&quot;homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/chillsrc/p/9243055.html&quot;&gt;&lt;span&gt;学习ASP.NET Core Razor 编程系列十三——文件上传功能（一）&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;六、添加文件上传 Razor 页面&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;span&gt;在Visual Studio 2017的解决方案资源管理器中，找到“Pages”文件夹，然后点击鼠标右键在弹出菜单中选择“添加--&amp;gt;新建文件夹”，然后把文件夹命名为“Descri”。如下图。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/10343/201807/10343-20180706144844912-604910779.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;        2. 在“Descri”文件夹上使用鼠标右键单击，在弹出菜单中选择“添加--&amp;gt;Razor页面…”，&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/10343/201807/10343-20180706144910927-213377538.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;       3.在弹出对话框中选择“Razor页面”，然后点击“添加”按钮。如下图。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/10343/201807/10343-20180706144924160-34802871.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;         4.&lt;/span&gt; &lt;span&gt;在弹出对应框的“Razor页面名称”文本框中输入“Index”然后点击“添加”按钮。如下图。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/10343/201807/10343-20180706144939684-1254110072.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;        5. Index.cshtml这个页面用于上传，这个页面的具体内容如下：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@page
@model RazorMvcBooks.Pages.Descri.IndexModel
@{

    ViewData[&quot;Title&quot;] = &quot;文件上传&quot;;
} 

&lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;文件上传&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;hr &lt;/span&gt;&lt;span&gt;/&amp;gt;&lt;/span&gt;
 

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt; 文件上传&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;row&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;col-md-4&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;form &lt;/span&gt;&lt;span&gt;method&lt;/span&gt;&lt;span&gt;=&quot;post&quot;&lt;/span&gt;&lt;span&gt; enctype&lt;/span&gt;&lt;span&gt;=&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.FileName&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.FileName&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;text&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;asp-validation-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.FileName&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;text-danger&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPublicDescribe&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPublicDescribe&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;height:auto&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;asp-validation-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPublicDescribe&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;text-danger&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;form-group&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;label &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPrivateDescribe&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;control-label&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;asp-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPrivateDescribe&quot;&lt;/span&gt;&lt;span&gt; type&lt;/span&gt;&lt;span&gt;=&quot;file&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;form-control&quot;&lt;/span&gt;&lt;span&gt; style&lt;/span&gt;&lt;span&gt;=&quot;height:auto&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;span &lt;/span&gt;&lt;span&gt;asp-validation-for&lt;/span&gt;&lt;span&gt;=&quot;FileUpload.UploadPrivateDescribe&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;text-danger&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;span&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;input &lt;/span&gt;&lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&quot;submit&quot;&lt;/span&gt;&lt;span&gt; value&lt;/span&gt;&lt;span&gt;=&quot;Upload&quot;&lt;/span&gt;&lt;span&gt; class&lt;/span&gt;&lt;span&gt;=&quot;btn btn-default&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;form&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
 

&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;已上传文件列表&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;table &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;table&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;    
&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                @Html.DisplayNameFor(model =&amp;gt; model.Describe[0].Name)

            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                @Html.DisplayNameFor(model =&amp;gt; model.Describe[0].UploadDateTime)
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;

            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;text-center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                @Html.DisplayNameFor(model =&amp;gt; model.Describe[0].PublicScheduleSize)
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;th &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;text-center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                @Html.DisplayNameFor(model =&amp;gt; model.Describe[0].PrivateScheduleSize)
            &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;th&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;thead&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        @foreach (var item in Model.Describe)
        {
            &lt;/span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;a &lt;/span&gt;&lt;span&gt;asp-page&lt;/span&gt;&lt;span&gt;=&quot;./Delete&quot;&lt;/span&gt;&lt;span&gt; asp-route-id&lt;/span&gt;&lt;span&gt;=&quot;@item.ID&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;Delete&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    @Html.DisplayFor(modelItem =&amp;gt; item.Name)

                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    @Html.DisplayFor(modelItem =&amp;gt; item.UploadDateTime)

                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;text-center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    @Html.DisplayFor(modelItem =&amp;gt; item.PublicScheduleSize)
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;td &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;=&quot;text-center&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
                    @Html.DisplayFor(modelItem =&amp;gt; item.PrivateScheduleSize)
                &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;td&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tr&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
        }
    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;tbody&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;table&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 

@section Scripts {

    @{await Html.RenderPartialAsync(&quot;_ValidationScriptsPartial&quot;);}

}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p align=&quot;left&quot;&gt;&lt;span&gt;        6. 每个窗体组包含一个 &amp;lt;label&amp;gt;，它显示每个类属性的名称。 FileUpload 模型中的 Display 特性提供这些标签的显示值。 例如，UploadPublicDescribe特性的显示名称通过    [Display(Name = &quot;公共描述&quot;)]进行设置，因此呈现窗体时会在此标签中显示“公共描述”。如下图。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/10343/201807/10343-20180706145200827-150872216.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;          每个窗体组包含一个验证 &amp;lt;span&amp;gt;。 如果用户输入未能满足 FileUpload 类中设置的属性特性，或者任何 ProcessFormFile 方法文件检查失败，则模型验证会失败。 模型验证失败时，会向用户呈现有用的验证消息。 例如，PublicScheduleSize 属性带有    [DisplayFormat(DataFormatString = &quot;{0:N1}&quot;)] 注释。 如果用户输入的值不是数字，则会接收到一条指示值长度不正确的消息。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;&lt;strong&gt;七、添加页面模型&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;       在Visual Studio 2017的解决方案资源管理器中，选中“Descri”文件夹，鼠标右键创建一个新的页面模型 (Index.cshtml.cs)，代码如下 ：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;42&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc.RazorPages;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; RazorMvcBooks.Models;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.EntityFrameworkCore;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; RazorMvcBooks.Utils; 

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; RazorMvcBooks.Pages.Descri
{

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; IndexModel : PageModel
    {
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;readonly&lt;/span&gt;&lt;span&gt; RazorMvcBooks.Models.BookContext _context; 

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; IndexModel(RazorMvcBooks.Models.BookContext context)
        {
            _context &lt;/span&gt;=&lt;span&gt; context;
        } 

        [BindProperty]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; FileUpload FileUpload { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; IList&amp;lt;Describe&amp;gt; Describe { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
 

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt;&lt;span&gt; Task OnGetAsync()
        {
            Describe &lt;/span&gt;= &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _context.Describe.AsNoTracking().ToListAsync();

        }
 

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt; Task&amp;lt;IActionResult&amp;gt;&lt;span&gt; OnPostAsync()
        {
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Perform an initial check to catch FileUpload class
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; attribute violations.&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;ModelState.IsValid)
            {
                Describe &lt;/span&gt;= &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _context.Describe.AsNoTracking().ToListAsync();
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Page();
            }
 

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; publicDescribeData =
                &lt;span&gt;await&lt;/span&gt;&lt;span&gt; FileHelpers.ProcessFormFile(FileUpload.UploadPublicDescribe, ModelState); 

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; privateDescribeData =
                &lt;span&gt;await&lt;/span&gt;&lt;span&gt; FileHelpers.ProcessFormFile(FileUpload.UploadPrivateDescribe, ModelState); 

            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; Perform a second check to catch ProcessFormFile method
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; violations.&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;ModelState.IsValid)
            {
                Describe &lt;/span&gt;= &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _context.Describe.AsNoTracking().ToListAsync();
                &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; Page();
            }
 

            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; descr = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Describe()
            {

                PublicDescribe &lt;/span&gt;=&lt;span&gt; publicDescribeData,
                PublicScheduleSize &lt;/span&gt;=&lt;span&gt; FileUpload.UploadPublicDescribe.Length,
                PrivateDescribe &lt;/span&gt;=&lt;span&gt; privateDescribeData,

                PrivateScheduleSize &lt;/span&gt;=&lt;span&gt; FileUpload.UploadPrivateDescribe.Length,
                Name &lt;/span&gt;=&lt;span&gt; FileUpload.FileName,
                UploadDateTime &lt;/span&gt;=&lt;span&gt; DateTime.UtcNow

            };

            _context.Describe.Add(descr);
            &lt;/span&gt;&lt;span&gt;await&lt;/span&gt;&lt;span&gt; _context.SaveChangesAsync(); 

            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; RedirectToPage(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;./Index&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        }
    }
}

 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;     在页面模型（Index.cshtml.cs 中的 IndexModel）绑定 FileUpload 类：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;    [BindProperty]
   &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; FileUpload FileUpload { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;    此模型还使用列表 (IList&amp;lt;Describe&amp;gt;) 在页面上显示数据库中存储的上传文件列表：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; IList&amp;lt; Describe &amp;gt; Describe { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;private&lt;/span&gt; &lt;span&gt;set&lt;/span&gt;; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;      页面加载 OnGetAsync 时，会从数据库填充 Describe，用于生成已加载计划的 HTML 表：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;async&lt;/span&gt;&lt;span&gt; Task OnGetAsync()
{

   Describe &lt;/span&gt;= &lt;span&gt;await&lt;/span&gt;&lt;span&gt; _context.Describe.AsNoTracking().ToListAsync();

}  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span&gt;         将页面发布到服务器时，会检查 ModelState。 如果无效，会重新生成Describe，且页面会呈现一个或多个验证消息，陈述页面验证失败的原因。 如果有效，FileUpload 属性将用于“OnPostAsync”中，以完成两个上传文件的上传，并创建一个用于存储数据的新 Describe 对象。 然后会将这两个上传文件保存到数据库。&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 06:56:00 +0000</pubDate>
<dc:creator>DotNet菜园</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chillsrc/p/9273635.html</dc:identifier>
</item>
<item>
<title>python3.5以及scrapy,selenium,等 安装 - Alexisbusy</title>
<link>http://www.cnblogs.com/Alexisbusyblog/p/9269950.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Alexisbusyblog/p/9269950.html</guid>
<description>&lt;p&gt; 在安装的时候无意间发现了，python3.6没有给我自定义安装的机会，直接就C盘见；因此我选择了python3.5。&amp;lt;安装部分跳过，至于一条吃过痛苦的建议：不要放C和磁盘一定要标明标注分类有序放置&amp;gt;。&lt;/p&gt;
&lt;p&gt;接下来，安装pip，这个东西对日后加载其他库非常方便，因此优先安装。当然python3.5是自带pip的，根本不需要安装；但为了不给日后带来麻烦，我们还是要先看下pip的版本，打开 cmd 输入 &lt;span class=&quot;cnblogs_code&quot;&gt;pip -V&lt;/span&gt;  , 额 ，，然后就会报错 ；哈哈哈。python的环境都没有配置，直接在cmd中打开这是不行滴。所以我们先来配置环境，找到系统变量中的path ,&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180705180345830-1174452365.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后点击编辑 ，在其中把python的安装路径和python文件下的scripts路径放到path中，最终就像这样&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180705180836845-937021219.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;python的环境配置完了，不过刚才我们不是还要在cmd中运行pip嘛，所以还要去python\scripts中找到这个东西&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180705181251697-186807528.png&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180705181144623-207327628.png&quot; alt=&quot;&quot;/&gt;并将其路径也配置到环境变量，这也是为了方便在cmd中直接打开嘛。好咯，现在再回到查pip版本 ，依然输入 &lt;span class=&quot;cnblogs_code&quot;&gt;pip -V&lt;/span&gt; ,蹬一下，cmd提醒你要升级了，所以又输入命令&lt;span class=&quot;cnblogs_code&quot;&gt;pip install -upgrade pip3&lt;/span&gt; 不一会功夫，pip就不是原来的那个pip了，他是pip three；回到...\python\scripts\中看看，发现多了个pip3.exe ,没错，这就是你刚才升级的three，既然我们有了新的pip3，那么就无情地删了原来那个pip.exe吧，让它随风而去。&lt;/p&gt;
&lt;p&gt;至此python王朝已经建立完成，并且找到一员猛将（pip：没错，这么帅肯定就是我了。）下面要开始开疆拓（KU）库，扩大我们python。&lt;/p&gt;

&lt;p&gt;selenium是一个很神奇的东西，那么他究竟是什么呢？有什么作用呢？哎~ ，以上我们都不讲，这里我们只告诉怎么去完成装B，至于为什么装B和装B有什么用，这些东西，，python长路漫漫，你们将上下求索，每个人的答案都不一样自己去思考吧。&lt;/p&gt;
&lt;p&gt;现在我们来安装，其实这个很简单，输入 &lt;span class=&quot;cnblogs_code&quot;&gt;python -m pip install selenium&lt;/span&gt;  ,binggo,不一会功夫完成了。&lt;/p&gt;
&lt;p&gt;1、下载chrome或者firefox的&lt;strong&gt;driver&lt;/strong&gt;，这是两个地址：chrome &amp;gt;&amp;gt;&lt;strong&gt;&lt;span&gt;http://npm.taobao.org/mirrors/chromedriver/&lt;/span&gt; &lt;/strong&gt; ； firefox &amp;gt;&amp;gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://github.com/mozilla/geckodriver/releases&lt;/span&gt; 。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;2、下载之后，一定要把内容 &lt;strong&gt;放到python文件夹根目录&lt;/strong&gt; ；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;3、将firefox 或者chrome 的   &lt;span class=&quot;cnblogs_code&quot;&gt;.exe&lt;/span&gt; 文件路径添加到环境变量 ； 小三：欸~ 为什么呢？ 我：因为添加到环境变量 方便调取啊  小三：额 ~还是不明白它方便在哪儿啊？  我：嗯，想把你说明白看样子要下点血本了，请看&lt;span&gt;&lt;strong&gt;这里 ，当当当 ！！！&lt;/strong&gt;  &lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span class=&quot;cnblogs_code&quot;&gt;driver = webdriver.Firefox()&lt;/span&gt;    这是配置到环境的使用方法 ！！！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;span class=&quot;cnblogs_code&quot;&gt;driver = webdriver.Firefox(&lt;span&gt;'这里是&lt;/span&gt;&lt;span&gt;firefox.exe的路径&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)&lt;/span&gt;   看，不添加到环境变量，多麻烦啊，每次都要写这这这么多的东西！！！&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我： 小三你明白了吗 （得意脸，呵   呵   呵  ~ 哒）  小三满脸拜服。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ok ,言归正传。在下面就是，额~ 在下面好像就   就就没有了。   到这（er），我要轻轻地问一句 ：你 ！   做好装BBB准备了嘛 ~·`~``~`·`&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;可能看到这里，你心里可能有点疑惑：切，说好的装B 呢 ？ 就没了吗  &lt;/p&gt;
&lt;p&gt;嗯  对的，这就没了 ，欸~不要问我为什么（不好意思，你可能觉得没有多少，然而我已经 倾我所有），哈哈哈（请注意停顿）。&lt;/p&gt;
&lt;p&gt;咳~咳 ,scrapy的安装说复杂又不复杂，说容易也不容易。然而如果自己贸然相信强大的搜索引擎，你可能会受伤（不似开玩笑的，似真滴哟），不过还好我完美地避开了所有正确答案，所有的坑，我一一踩过。下面我给大家演示如何正确的跳过各各坑：&lt;/p&gt;
&lt;p&gt;1、请把下面的东西全部下载，存储在新建文件夹 scrapy中： &lt;span class=&quot;cnblogs_code&quot;&gt;lxml-4.2.3-cp35-cp35m-win_amd64.whl&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;cnblogs_code&quot;&gt;Twisted-18.4.0-cp35-cp35m-win_amd64.whl  ;     Scrapy-1.5.0-py2.py3-none-any.whl&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上面的下载地址： &lt;span&gt;&lt;strong&gt;&lt;span class=&quot;cnblogs_code&quot;&gt;http://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;span&gt;#&lt;/span&gt;&lt;span&gt;lxml&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;  ，进去以后 &lt;span&gt;&lt;strong&gt;ctrl +F&lt;/strong&gt;&lt;/span&gt; ，直接搜索你想要的，搞定！&lt;/p&gt;
&lt;p&gt;另外你可能认为还要这个东西 &lt;span class=&quot;cnblogs_code&quot;&gt;pyOpenSSL-18.0.0-py2.py3-none-any.whl&lt;/span&gt;  ，额 ，这个东西，已经被包含在上面 三个中最后一个里面了 。&lt;/p&gt;
&lt;p&gt;可能还要这个东西 &lt;span class=&quot;cnblogs_code&quot;&gt;pywin32-220.win-amd64-py3.5.exe&lt;/span&gt;  ，额，这个东西，我们也不用单独下载，直接  &lt;span class=&quot;cnblogs_code&quot;&gt;python -m pip install xxx&lt;/span&gt;   xxx  是刚才那个东西。&lt;/p&gt;
&lt;p&gt;好了 ，上面讲的全部下载之后，现在开始安装 ； 打开cmd ，&lt;span&gt;&lt;strong&gt;切换目录到新建的scrapy文件&lt;/strong&gt;&lt;/span&gt;（这个就是存放刚才下载的几个小东西），然后按这个顺序来 ：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 1、python -m pip install pywin32-220.win-amd64-py3.5&lt;span&gt;.exe
 &lt;/span&gt;2、python -m pip install lxml-4.2.3-cp35-cp35m-&lt;span&gt;win_amd64.whl
&lt;/span&gt;3、python -m pip install Twisted-18.4.0-cp35-cp35m-&lt;span&gt;win_amd64.whl
&lt;/span&gt;4 、python -m pip install Scrapy-1.5.0-py2.py3-none-any.whl 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大约几百秒后，全部搞定！！！ &lt;/p&gt;
&lt;p&gt;然后 重新打开 cmd ，输入  &lt;span class=&quot;cnblogs_code&quot;&gt;scapy&lt;/span&gt;  回车：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180706134536380-241400121.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;显示这样，表示你可以开始对scrapy为所欲为了（嘿  嘿  嘿 ）， else ，看错误提示，重来！！！&lt;/p&gt;

&lt;h2&gt;&lt;span&gt;sqlite :   &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;它本身在python3.5中 已经是内置模块了，这里的安装指&amp;gt;&amp;gt;在电脑上&amp;lt;&amp;lt;&lt;/p&gt;
&lt;p&gt;下载页面 ： &lt;span&gt;&lt;strong&gt;https://sqlite.org/2017/sqlite-autoconf-3190300.tar.gz&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下载的是压缩包 ，对其解压到指定文件夹 ，然后将其路径配置到环境变量中，🆗 ！！&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180706135926769-1125813570.png&quot; alt=&quot;&quot;/&gt; 这里，我下载的是sqlite3&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;所以 在命令中  调用 sqlite3 ，弹到sqlite  shell ，然后 为所欲为 （嘿  嘿  嘿）。&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;mongodb:&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;分为两部分： 在电脑上安装 和  python上 ，因此要装两次。 首先，我们&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在电脑上安装；&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下载页面：&lt;span&gt;&lt;strong&gt;http://www.mongodb.org/downloads&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1、安装最好不要默认路径（保护C盘），假如我安装在：D:\mongodb\  中 ，在安装完mongodb后，将 mongodb下的 &lt;span&gt;&lt;strong&gt;&lt;span&gt;bin&lt;/span&gt;&lt;/strong&gt; &lt;span&gt;目录添加到环境变量中（这里前面已经使用这么多次，应该搞得定了吧）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、配置mongodb的存储路径 ，在D:\mongodb\data\ 中 &lt;span&gt;&lt;strong&gt;新建一个db文件夹&lt;/strong&gt;&lt;/span&gt;，形成这样的文件目录结构 &lt;span&gt;&lt;strong&gt;D:\mongodb\data\db&lt;/strong&gt; &lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、为了能够方便使用（就是指在cmd中 直接输入mongo 就能使用的这种），还需要这一步：首先 将 命令行以管理员权限启动，并输入命令  &lt;span class=&quot;cnblogs_code&quot;&gt;mongod --logpath &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:\mongodb\log.txt&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; --dbpath &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;D:\mongodb\data\db&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; --install&lt;/span&gt;  , 执行完后，接着输入命令  &lt;span class=&quot;cnblogs_code&quot;&gt;net start mongodb&lt;/span&gt;  ,这时候就会启动mongodb服务 。于是乎，电脑上安装 结束！！ 测试一下 ，直接输入  mongo 有没有反应 ：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1358638/201807/1358638-20180706142226152-391308456.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;哟 ，阔以了哦，红箭头所指就是已进入  mongo 的 shell 标志 。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;在python上安装；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在cmd中输入： &lt;span class=&quot;cnblogs_code&quot;&gt;python -m pip install pymongo&lt;/span&gt;   ,搞定！！！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;什么？ 这就没有了？！！   是的 ，python就是这么舒服， 啊~ （呻吟）  &lt;span class=&quot;cnblogs_code&quot;&gt;人生苦短，我用python&lt;/span&gt; &lt;/p&gt;


&lt;p&gt;我：&lt;span&gt; ok ，全部到此结束！！！（撒花~~）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;小三：从  python安装 &amp;gt;&amp;gt;&amp;gt; selenium + scrapy &amp;gt;&amp;gt;&amp;gt; 数据库 , 这是什么？ &lt;span&gt;&lt;strong&gt;天呐 ！！！  &lt;span&gt;这不是，不是，不是不可描述的一条龙服务吗？ 哇撒 ，真是太贴心了 ，遇见你真是太开心了，我忍不住想多点几个赞，赞，赞，赞，赞，赞，赞.......&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;欸（ai 第三声）~&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;但是！！ &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;作为风度翩翩的美男纸，我，不能忍受似同上面这位这样滴&lt;span&gt;&lt;strong&gt;饱含泪水，丝毫不拘束、不做作的大实话&lt;/strong&gt; &lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因此，特地献上一支&lt;span&gt;王小波&lt;/span&gt;先生的名作，洗洗风尘 ：&lt;span&gt;我是个俗气至顶的人，见山是山，见海是海，见花便是花，唯独见了你，云海开始翻涌，江潮开始澎湃，昆虫的小触须挠着全世界的痒，你无需开口，我和天地万物便通通奔向你&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;（温馨提示：请使用刮刮乐方式查看）&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 06 Jul 2018 06:54:00 +0000</pubDate>
<dc:creator>Alexisbusy</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Alexisbusyblog/p/9269950.html</dc:identifier>
</item>
<item>
<title>php源码建博客5--建库建表-配置文件-错误日志 - young67</title>
<link>http://www.cnblogs.com/yangp67/p/9268767.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yangp67/p/9268767.html</guid>
<description>&lt;p&gt;主要：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;整理框架&lt;/li&gt;
&lt;li&gt;建库建表&lt;/li&gt;
&lt;li&gt;配置文件类&lt;/li&gt;
&lt;li&gt;错误日志记录&lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
--------------&lt;strong&gt;&lt;span&gt;本篇后文件结构：&lt;/span&gt;&lt;/strong&gt;--------------------------------------
blog
├─App
│  ├─Model 模型目录
│  ├─View 视图目录
│  │  ├─Admin后台目录
│  │  └─Home前台目录
│  ├─Common 配置目录
│  │  └─config.php  配置文件
│  ├─Log 日志目录
│  │  └─log.txt  日志文件
│  ├─Controller 控制器
│  │  ├─Admin后台
│  │  │  └─DemoController.class.php 测试控制器
│  │  └─Home前台
├─Public   静态公共文件（js,css,images）
│  ├─Plugins 插件
│  ├─Back后台
│  └─Home前台
├─Frame 公共使用的类
│   ├─BaseModel.class.php 数据库连接类
│   ├─BaseController.class.php 控制器公共操作（设置编码，信息跳转）
│   ├─FactoryModel.class.php  模型工厂类
│   ├─Log.class.php  日志厂类
│   ├─Config.class.php  配置文件读取类
│   ├─Init.class.php  初始化应用类
│   └─MySQLDB.class.php 数据库操作工具类
└─index.php  入口文件
-----------------------------------------------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;

&lt;hr/&gt;&lt;p&gt;利用上篇中搭建好的mvc框架结构，正式开始开发博客项目。首先建立数据表，然后开始搭建后台，数据前台展示，完成博客主要模块展示。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;下载查看该项目源码&lt;/strong&gt;&lt;/span&gt;： &lt;a title=&quot;下载或查看源码&quot; href=&quot;https://gitee.com/NewbiesYang/young_blog&quot; target=&quot;_blank&quot;&gt;https://gitee.com/NewbiesYang/young_blog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;整理框架&lt;/h2&gt;
&lt;h3&gt;&lt;span&gt;　　清理测试页面&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　1）前面构建框架结构，使用了用户登录测试页面以及后台首页页面。在此全部去掉，从新开始构建前台和后台页面。类似于我们下载了一个ThinkPHP或Laravel或其他的框架。 现在开始在这个微型框架上来构建我们的项目&lt;/p&gt;
&lt;p&gt;　　　　2） 实际开发，会用前端人员做好的静态页面来进行开发。所以也可以在 &lt;a title=&quot;下载模板&quot; href=&quot;http://www.cssmoban.com/&quot; target=&quot;_blank&quot;&gt;【模板之家】&lt;/a&gt;或其他网站 下载 后台模板和前台博客静态页面。然后专注于后端开发，可以加快速度。本项目供学习研究使用，也就不那么着急了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7aae80ac-9701-4199-b939-2e17e118c9ad')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_7aae80ac-9701-4199-b939-2e17e118c9ad&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7aae80ac-9701-4199-b939-2e17e118c9ad&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7aae80ac-9701-4199-b939-2e17e118c9ad',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7aae80ac-9701-4199-b939-2e17e118c9ad&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
     原本是准备全部利用别人写好的前端页面（包括前端显示和后台页面），专注于后端逻辑的开发。而且已经把分类页面列表都做好了。还提交传送了。

     此刻，仔细想想，要是这样玩，那我直接用框架更好了。既然做后端开发，自己写个后端页面+程序处理，没什么问题吧...， 置于前端显示页面，那再用前辈写的前端页面倒是可以的

    于是乎，卷起柚子，说干就干，先来整理框架，开始搭建博客。。。。。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;说一说&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;　　框架结构：&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
--------------&lt;span&gt;&lt;strong&gt;清理后MVC框架文件结构：&lt;/strong&gt;&lt;/span&gt;--------------------------------------
blog
├─App
│  ├─Model 模型目录
│  ├─View 视图目录
│  │  ├─Back后台
│  │  └─Home前台
│  ├─Controller 控制器目录
│  │  ├─Back后台
│  │  └─Home前台
├─Public   静态公共文件（js,css,images）
│  ├─Plugins 插件
│  ├─Back后台
│  └─Home前台 
├─Frame 公共使用的类
│   ├─BaseModel.class.php 数据库连接类
│   ├─BaseController.class.php 控制器公共操作（设置编码，信息跳转）
│   ├─FactoryModel.class.php  模型工厂类
│   ├─Init.class.php  初始化应用类
│   └─MySQLDB.class.php 数据库操作工具类
└─index.php  入口文件
-----------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　后续的开发只需要复制该目录结构文件， 就可以在此基础上进行开发了。&lt;/p&gt;
&lt;p&gt;提交传送代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
git add -&lt;span&gt;A
git commit &lt;/span&gt;-m &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;清理MVC结构&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
git push origin master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;　　插件准备&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　1） layui插件： 搭建后台程序，准备使用layui前端框架，这个框架个人认为做后台界面还是不错的。它还包含一些比较使用模块。 &lt;/p&gt;
&lt;p&gt;　　　　　　　　用bootstrap也可以，我更加倾向于用它来做前台页面。&lt;/p&gt;
&lt;p&gt;　　　　　　下载网址： &lt;a href=&quot;http://www.layui.com/&quot; target=&quot;_blank&quot;&gt;http://www.layui.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　　　2） jQuery库：  更方便操作DOM， 尤其是经常使用ajax请求。&lt;/p&gt;
&lt;p&gt;　　　　3） 其他插件： 如Ueditor编辑器等 需要使用时再下载吧。一般插件都会有demo示例， 按照示例和手册，懂web开发基本能使用。&lt;/p&gt;
&lt;p&gt;　　　　上述插件暂时不熟悉没有关系，官网上有手册，需要什么模块，便查手册便使用，就像搭积木，如果要做得更好，当然要花更多的时间多练习。我本着后台给程序管理员使用，也不一定要非常漂亮，实用就好。&lt;/p&gt;
&lt;h2&gt;建库建表&lt;/h2&gt;
&lt;p&gt;　　准备： 创建分支&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;$ git checkout master
$ git checkout &lt;/span&gt;-b &lt;span&gt;&quot;&lt;/span&gt;start-admin-module&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;　　建表思路：&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　根据博客模板，从首页开始分析，  分析哪些需要动态数据，以便建立对应数据表。&lt;/p&gt;
&lt;p&gt;　　　　　　用户： 登录， 注册， 修改， 删除&lt;/p&gt;
&lt;p&gt;　　　　　　文章： 分类管理， 博文管理， 评论管理&lt;/p&gt;
&lt;p&gt;　　　　　　角色管理： 管理员，普通用户&lt;/p&gt;
&lt;p&gt;　　　　　　菜单管理： 不同权限人员，对应菜单栏也有区别&lt;/p&gt;
&lt;p&gt;　　　　建表工具可以任意选择。初期手工写建表语句，熟悉后直接使用工具。 本项目中使用 Navicat 建立数据库和表&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;　　 数据库，表&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　1) 创建数据库：php_blog&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;create&lt;/span&gt; &lt;span&gt;database&lt;/span&gt; php_blog charset utf8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　2) 用户表： y_users　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('b3bfefc9-48f1-4965-8885-336a6e095e64')&quot; readability=&quot;39.5&quot;&gt;&lt;img id=&quot;code_img_closed_b3bfefc9-48f1-4965-8885-336a6e095e64&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b3bfefc9-48f1-4965-8885-336a6e095e64&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('b3bfefc9-48f1-4965-8885-336a6e095e64',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b3bfefc9-48f1-4965-8885-336a6e095e64&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;74&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_user` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;用户主键&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `username` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;用户名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `password` &lt;/span&gt;&lt;span&gt;char&lt;/span&gt;(&lt;span&gt;32&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;密码&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `email` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;50&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;注册邮箱&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `token_email` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;32&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;邮箱验证&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `status` &lt;/span&gt;&lt;span&gt;tinyint&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;状态， 0-正常，1-禁用&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `gid` &lt;/span&gt;&lt;span&gt;tinyint&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;角色id，1-管理员，2-普通用户,0-无效&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `login_ip` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;最后登录的ip地址&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `login_times` &lt;/span&gt;&lt;span&gt;smallint&lt;/span&gt;(&lt;span&gt;6&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;登录次数&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `created_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;注册时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `updated_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;最后一次登录时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`),
  &lt;/span&gt;&lt;span&gt;UNIQUE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `username` (`username`),
  &lt;/span&gt;&lt;span&gt;UNIQUE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `email` (`email`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM AUTO_INCREMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;用户表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;用户表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　3）角色表： y_user_group&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('451cc0b7-edea-428b-b1c2-a13d2f706a2d')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_451cc0b7-edea-428b-b1c2-a13d2f706a2d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_451cc0b7-edea-428b-b1c2-a13d2f706a2d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('451cc0b7-edea-428b-b1c2-a13d2f706a2d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_451cc0b7-edea-428b-b1c2-a13d2f706a2d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_user_group` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;角色id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `name` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;角色名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `auths` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;角色权限&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8mb4 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;角色表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;角色表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　4) 菜单表： y_menus&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7160274a-3a35-41c7-ac4f-69474d128516')&quot; readability=&quot;36.5&quot;&gt;&lt;img id=&quot;code_img_closed_7160274a-3a35-41c7-ac4f-69474d128516&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7160274a-3a35-41c7-ac4f-69474d128516&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7160274a-3a35-41c7-ac4f-69474d128516',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7160274a-3a35-41c7-ac4f-69474d128516&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;68&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_menus` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;菜单id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `title` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;菜单名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `controller` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;控制器名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `action` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;操作名称&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `status` &lt;/span&gt;&lt;span&gt;tinyint&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) unsigned &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;状态，1-正常，0-禁用&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `is_hidden` &lt;/span&gt;&lt;span&gt;tinyint&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;) unsigned &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;是否隐藏，0-正常显示，1-隐藏&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `sort` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;排序&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `pid` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;上一级菜单&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8mb4 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;菜单表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;菜单表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　5) 文章表 y_article&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('850b202e-8e66-46c4-8130-2a09524ece20')&quot; readability=&quot;40.5&quot;&gt;&lt;img id=&quot;code_img_closed_850b202e-8e66-46c4-8130-2a09524ece20&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_850b202e-8e66-46c4-8130-2a09524ece20&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('850b202e-8e66-46c4-8130-2a09524ece20',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_850b202e-8e66-46c4-8130-2a09524ece20&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;76&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_article` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `title` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;60&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;标题&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `description` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;200&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章简介&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `content` &lt;/span&gt;&lt;span&gt;text&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;内容&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `cid` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章类别&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `pic` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章封面图&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `pic_watermark` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;水印图&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `pic_thumb` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;150&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;缩略图&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `uid` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;作者&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `clicks` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;阅读数（点击数）&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `updated_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;更新时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `created_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;发布时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`),
  &lt;/span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `title` (`title`),
  &lt;/span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `uid` (`uid`),
  &lt;/span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `clicks` (`clicks`),
  &lt;/span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; `cid` (`cid`) USING BTREE
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM AUTO_INCREMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;文章表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　6) 文章类别表 y_category&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('19699692-d837-46d3-8dbb-0211e5ccc56f')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_19699692-d837-46d3-8dbb-0211e5ccc56f&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_19699692-d837-46d3-8dbb-0211e5ccc56f&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('19699692-d837-46d3-8dbb-0211e5ccc56f',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_19699692-d837-46d3-8dbb-0211e5ccc56f&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_category` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;分类id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `catename` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;15&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;分类名&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `description` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;简介&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM AUTO_INCREMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;文章类别表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;文章类别表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　7) 评论(回复)表 y_comment&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('be981310-8b71-4e43-8951-a2783ccbc872')&quot; readability=&quot;35&quot;&gt;&lt;img id=&quot;code_img_closed_be981310-8b71-4e43-8951-a2783ccbc872&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_be981310-8b71-4e43-8951-a2783ccbc872&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('be981310-8b71-4e43-8951-a2783ccbc872',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_be981310-8b71-4e43-8951-a2783ccbc872&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_comment` (
  `id` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `uid` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论者&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `created_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `content` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论内容&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `aid` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) unsigned &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;被评论的文章&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`id`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;评论(回复)表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;评论(回复)表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　8) session数据表 y_session  （其实可以不用这个，目的是为了操作 &quot;将session写入数据库&quot; ）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c8de4c0d-9c0a-44c0-845d-159f3c9617af')&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_c8de4c0d-9c0a-44c0-845d-159f3c9617af&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c8de4c0d-9c0a-44c0-845d-159f3c9617af&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c8de4c0d-9c0a-44c0-845d-159f3c9617af',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c8de4c0d-9c0a-44c0-845d-159f3c9617af&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt;&lt;span&gt; `y_session` (
  `sess_id` &lt;/span&gt;&lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;50&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;''&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;session id&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `data` &lt;/span&gt;&lt;span&gt;text&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;session数据&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  `created_at` &lt;/span&gt;&lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; COMMENT &lt;span&gt;'&lt;/span&gt;&lt;span&gt;session创建时间&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  &lt;/span&gt;&lt;span&gt;PRIMARY&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt;&lt;span&gt; (`sess_id`)
) ENGINE&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;MyISAM &lt;span&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span&gt;=&lt;/span&gt;utf8 COMMENT&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;session数据表&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;session数据表SQL&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　为了避免弄的太复杂， 暂时建立这些数据表，字段后续可以进行调整。如果需要加入模块功能，可以相应增加相应数据表。&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;　　连接数据库&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　在badeModel中修改数据连接的数组信息 【Frame/BaseModel.class.php】  （如果使用配置文件类，此处就可以省略了）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('f90c5f34-ca42-4cc5-a222-1b7f12073e6d')&quot; readability=&quot;36&quot;&gt;&lt;img id=&quot;code_img_closed_f90c5f34-ca42-4cc5-a222-1b7f12073e6d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_f90c5f34-ca42-4cc5-a222-1b7f12073e6d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('f90c5f34-ca42-4cc5-a222-1b7f12073e6d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_f90c5f34-ca42-4cc5-a222-1b7f12073e6d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;67&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BaseModel {
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    。。。
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    。。。
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    。。。
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt; __construct(&lt;span&gt;array&lt;/span&gt; &lt;span&gt;$config&lt;/span&gt;=&lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;         &lt;span&gt;$conf&lt;/span&gt; = &lt;span&gt;array&lt;/span&gt;&lt;span&gt;(
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             'host'=&amp;gt;'localhost',
&lt;span&gt; 9&lt;/span&gt;             'user'=&amp;gt;'root',
&lt;span&gt;10&lt;/span&gt;             'pwd'=&amp;gt;'root',
&lt;span&gt;11&lt;/span&gt;             'port'=&amp;gt;'3306',
&lt;span&gt;12&lt;/span&gt;             'charset'=&amp;gt;'utf8',
&lt;span&gt;13&lt;/span&gt;             'dbname'=&amp;gt;'php_blog',
&lt;span&gt;14&lt;/span&gt; &lt;span&gt;        );
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;$conf&lt;/span&gt; = &lt;span&gt;empty&lt;/span&gt;(&lt;span&gt;$config&lt;/span&gt;)? &lt;span&gt;$conf&lt;/span&gt; : &lt;span&gt;array_merge&lt;/span&gt;(&lt;span&gt;$conf&lt;/span&gt;,&lt;span&gt;$config&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;db = Db::getDb(&lt;span&gt;$conf&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;设置连接数据库信息&lt;/span&gt;&lt;/div&gt;
&lt;h2&gt;配置文件类&lt;/h2&gt;
&lt;h3&gt;&lt;span&gt;　　需求分析：&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　为了框架便于数据库连接以及方便读取配置文件。如 希望在 App/Common/config.php 做一些配置项，要求能读取这些配置并应用到项目&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;　　思路：&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7ecb736f-465f-49da-8fad-a3cbb00d9c23')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_7ecb736f-465f-49da-8fad-a3cbb00d9c23&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7ecb736f-465f-49da-8fad-a3cbb00d9c23&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7ecb736f-465f-49da-8fad-a3cbb00d9c23',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7ecb736f-465f-49da-8fad-a3cbb00d9c23&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
step 1:  创建文件  App/Common/config.php  并将数据库连接信息写入该配置文件

step 2:  在Frame/目录下创建读取配置文件类 Config.class.php

step 3: 设置自动加载 读取配置类

step 4： 基础模型类实例化 读取配置类。 操作数据库必须要经过基础模型类

step 5:  调整数据库工具类获取配置信息，既 其构造方法中通过传递进来的数据配置信息对象获取

step 6: 测试连接数据结果，验证获取配置
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;实现连接数据库-读取数据库配置信息思路&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;　　代码实现&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　1） 创建配置文件config.php  【App/Common/Config.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c0221f52-06c8-4fd4-a7ca-bb09fae22472')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_c0221f52-06c8-4fd4-a7ca-bb09fae22472&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c0221f52-06c8-4fd4-a7ca-bb09fae22472&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c0221f52-06c8-4fd4-a7ca-bb09fae22472',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c0221f52-06c8-4fd4-a7ca-bb09fae22472&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
 * 配置文件
 * User: young
 &lt;/span&gt;&lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;return&lt;/span&gt;&lt;span&gt; [
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据库连接配置&lt;/span&gt;
    'host'=&amp;gt;'localhost',
    'user'=&amp;gt;'root',
    'pwd'=&amp;gt;'root',
    'port'=&amp;gt;'3306',
    'charset'=&amp;gt;'utf8',
    'dbname'=&amp;gt;'php_blog',&lt;span&gt;
];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;配置文件-数据库配置信息&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　2） 创建读取配置文件类 【Frame/Config.class.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * 配置文件读取类
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * User: young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Config
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;$ins&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;本类实例&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;$cfg&lt;/span&gt; = &lt;span&gt;array&lt;/span&gt;(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;存储配置项&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     *  获取本类实例
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;     * @access public
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;     * @return  object     本类的单例对象
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; getIns() {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;false&lt;/span&gt; === (self::&lt;span&gt;$ins&lt;/span&gt;&lt;span&gt; instanceof self)){
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;             self::&lt;span&gt;$ins&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; self();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; self::&lt;span&gt;$ins&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;     *  构造方法： 读取配置项
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;     * @access public
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;     * @return  void
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt;     &lt;span&gt;final&lt;/span&gt; &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; __construct() {
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;require&lt;/span&gt; APP.'Common'.DS.'config.php'; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取配置项&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;cfg = &lt;span&gt;$cfg&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; 
&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;     * 根据指定的配置项,返回该配置项的值
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;     * @param string $k  配置项
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;     * @return mixed|null 返回配置项的数据
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;39&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; __get(&lt;span&gt;$k&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$this&lt;/span&gt;-&amp;gt;cfg[&lt;span&gt;$k&lt;/span&gt;&lt;span&gt;])) {
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;             &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;$this&lt;/span&gt;-&amp;gt;cfg[&lt;span&gt;$k&lt;/span&gt;&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt; 
&lt;span&gt;46&lt;/span&gt; 
&lt;span&gt;47&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;     * 根据指定的配置项,返回配置项的值
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;     * @param  string $k 配置项名称
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt; &lt;span&gt;     * @param string $v 配置项对应的值
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;52&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; __set(&lt;span&gt;$k&lt;/span&gt;,&lt;span&gt;$v&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;cfg[&lt;span&gt;$k&lt;/span&gt;] = &lt;span&gt;$v&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　3)  自动加载配置类&lt;/p&gt;
&lt;p&gt;　　　　　　需要自动加载该类， 该类在Frame目录下， 所以可以写入到 Init.class.php 类中的属性数组中   【Frame/Init.class.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('bc39ab84-3a70-43a8-8864-684e64442b65')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_bc39ab84-3a70-43a8-8864-684e64442b65&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_bc39ab84-3a70-43a8-8864-684e64442b65&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('bc39ab84-3a70-43a8-8864-684e64442b65',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_bc39ab84-3a70-43a8-8864-684e64442b65&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * 初始化应用类
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * User: young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Init
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;$frame&lt;/span&gt; = &lt;span&gt;array&lt;/span&gt;('BaseController','BaseModel','Db','FactoryModel','Config'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 。。。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;自动加载配置类&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　4）基础模型类实例化配置类【Frame/BaseModel.class.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * BaseModel.class.php 基础模型类
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *     连接数据库
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; *  @author young
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BaseModel
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;$db&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;     * 构造方法: 实例化数据库类
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     * @access public
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; __construct()
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;        &lt;span&gt;$conf&lt;/span&gt; =  Config::getIns(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取配置项实例&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;db = Db::getDb(&lt;span&gt;$conf&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　5）数据库读取配置项信息  【Frame/Db.class.php】　　　　　&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c6dbc721-7395-4fdb-a5d0-102f07c8779a')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_c6dbc721-7395-4fdb-a5d0-102f07c8779a&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c6dbc721-7395-4fdb-a5d0-102f07c8779a&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c6dbc721-7395-4fdb-a5d0-102f07c8779a',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c6dbc721-7395-4fdb-a5d0-102f07c8779a&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * Db.class.php 数据库操作工具类
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * @author young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Db {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;     * 构造方法： 保存数据库连接信息，连接数据库
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     * @access private
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;     * @param array $conf 数据库连接信息
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; __construct(&lt;span&gt;$conf&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;host = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;host;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;user = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;user;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;pwd = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;pwd;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;port = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;port;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;charset = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;charset;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;dbname = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;dbname;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;&lt;span&gt;connect();
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;数据库工具类获取配置信息&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　　　6） 测试 在App/Controller/Home/DemoController.class.php  用于测试数据库连接情况&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('ce1f722d-c73b-4f22-b766-70ab95a9d842')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_ce1f722d-c73b-4f22-b766-70ab95a9d842&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_ce1f722d-c73b-4f22-b766-70ab95a9d842&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('ce1f722d-c73b-4f22-b766-70ab95a9d842',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_ce1f722d-c73b-4f22-b766-70ab95a9d842&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&amp;lt;?php
/**
 * 测试控制器类
 * User: young
 */

class DemoController extends BaseController
{
    public function test()
    {
        $db = new BaseModel();
        $data = $db-&amp;gt;db-&amp;gt;getAllRows(&quot;select * from y_user&quot;);
        var_dump($data);
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;测试控制器类测试连接数据库&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　注： 前提，需要将BaseModel.class.php中的$db属性先临时修改为public公开，才能测试成功 （原因：在Demo控制器中实例化的基础模型类，数据库操作实例是放在类的属性db中，外部不能访问protected属性）， 本节所有测试，可以临时将db设置为公开的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1254673/201807/1254673-20180706032113815-560754721.png&quot; alt=&quot;&quot; width=&quot;579&quot; height=&quot;101&quot;/&gt;&lt;/p&gt;
&lt;p&gt;还可以使用配置如： 上传目录，网站配置信息等，根据需求自定义配置需求，再通过读取配置类读取配置的数据&lt;/p&gt;
&lt;p&gt;提交代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
git add -&lt;span&gt;A
git commit &lt;/span&gt;-m &lt;span&gt;&quot;&lt;/span&gt;完成读取配置文件类&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;错误日志记录&lt;/h2&gt;
&lt;p&gt;　　除了开发阶段调试错误， 项目上线一般会将错误信息写入指定文件中。安全性更好。&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;　　需求分析：&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　　　将错误写入日志文件中，这里暂时主要记录数据库操作的错误。 如：默认将错误记录在Ａpp/log/logError.txt。 如果在配置文件中进行了配置，则将日志信息写入到配置项log指定的目录中&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;　　思路：&lt;/span&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('17334dac-67ca-442d-86cb-ed53f243190d')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_17334dac-67ca-442d-86cb-ed53f243190d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_17334dac-67ca-442d-86cb-ed53f243190d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('17334dac-67ca-442d-86cb-ed53f243190d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_17334dac-67ca-442d-86cb-ed53f243190d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
step 1: 制作日志类Frame/Log.class.php， 用于将错误信息写入到指定文件中。  (设置日志文件位置，正好可以利用上面写的配置项，通过读取配置来实现)

step 2: 在基础模型类BaseModel中，读取配置项后， 可以将日志目录路径写入常量。 使用try..catch 捕捉异常，将错误写入日志

step 3: 实现日志类自动加载。Log类在Frame目录中，所以只要在初始化应用类Init中的属性$frame数组中加入 “Log”

step 4: 记录错误。 数据库连接可能失败， sql语句可能执行失败

step 5: 测试错误日志记录功
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;实现错误日志记录过程思路&lt;/span&gt;&lt;/div&gt;
&lt;p&gt; 　　代码实现&lt;/p&gt;
&lt;p&gt;　　1） 制作错误日志类 【Frame/Log.class.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * 日志类
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * User: young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;Log&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;     * 记录错误信息到文件中
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;     * @param string $err 错误信息
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; write(&lt;span&gt;$err&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;         date_default_timezone_set('PRC'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;时区设置
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        //打开文件&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;$fh&lt;/span&gt; = &lt;span&gt;fopen&lt;/span&gt;(&lt;span&gt;LOG&lt;/span&gt;.'log.txt','a'); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 追加方式打开
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        //拼接信息&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;$err&lt;/span&gt; = &lt;span&gt;date&lt;/span&gt;('Y年m月d日 H:i:s',&lt;span&gt;time&lt;/span&gt;()) . &quot;\t\r\n&quot; . &lt;span&gt;$err&lt;/span&gt; . &quot;\t\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; 
&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;写入&lt;/span&gt;
&lt;span&gt;23&lt;/span&gt;         &lt;span&gt;fwrite&lt;/span&gt;(&lt;span&gt;$fh&lt;/span&gt;,&lt;span&gt;$err&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; 
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭&lt;/span&gt;
&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;fclose&lt;/span&gt;(&lt;span&gt;$fh&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　2)  读取日志位置，捕捉错误  【Frame/BaseModel.class.php】&lt;/p&gt;
&lt;p&gt;　　　　发生错误记录后，这里只是简单使用exit(..)退出， 可以自定error错误页面会更好&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('1df8e2eb-90da-492e-add0-753213c3e254')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_1df8e2eb-90da-492e-add0-753213c3e254&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1df8e2eb-90da-492e-add0-753213c3e254&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('1df8e2eb-90da-492e-add0-753213c3e254',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1df8e2eb-90da-492e-add0-753213c3e254&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * BaseModel.class.php 基础模型类
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt; *     连接数据库，捕捉记录错误
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt; *  @author young
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; BaseModel
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;Public&lt;/span&gt; &lt;span&gt;$db&lt;/span&gt; = &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;     * 构造方法: 实例化数据库类
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;     * @access public
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;function&lt;/span&gt;&lt;span&gt; __construct()
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;$conf&lt;/span&gt; =  Config::getIns(); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;读取配置项实例
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;        //读取日志配置项目 并写成常量&lt;/span&gt;
&lt;span&gt;20&lt;/span&gt;         &lt;span&gt;$logPath&lt;/span&gt; = &lt;span&gt;$conf&lt;/span&gt;-&amp;gt;&lt;span&gt;log&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;$logPath&lt;/span&gt; = !&lt;span&gt;isset&lt;/span&gt;(&lt;span&gt;$logPath&lt;/span&gt;) ? APP.&quot;log&quot;.DS  : &lt;span&gt;$logPath&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;define&lt;/span&gt;('LOG',&lt;span&gt;$logPath&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; 
&lt;span&gt;24&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;监控数据库操作&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;try&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;$this&lt;/span&gt;-&amp;gt;db = Db::getDb(&lt;span&gt;$conf&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         }&lt;span&gt;catch&lt;/span&gt;(&lt;span&gt;Exception&lt;/span&gt; &lt;span&gt;$e&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; = ''&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; .= '错误代码:' . &lt;span&gt;$e&lt;/span&gt;-&amp;gt;getCode() . &quot;\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; .= '错误信息:' . &lt;span&gt;$e&lt;/span&gt;-&amp;gt;getMessage() . &quot;\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; .=  '文件:' . &lt;span&gt;$e&lt;/span&gt;-&amp;gt;getFile() . &quot;\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; .=  '行号:' . &lt;span&gt;$e&lt;/span&gt;-&amp;gt;getLine() . &quot;\r\n\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;Log&lt;/span&gt;::write(&lt;span&gt;$err&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;             &lt;span&gt;exit&lt;/span&gt;(&quot;&amp;lt;h2&amp;gt;客官！页面暂时无法响应，请稍后访问&amp;lt;/h2&amp;gt;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;点击查看【基础模型类中监测并记录错误】&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　3）自动加载日志记录类 【Frame/Init.class.php】&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('7fd2f1cc-99b5-4d3d-92e0-d5e0b802b612')&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_7fd2f1cc-99b5-4d3d-92e0-d5e0b802b612&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_7fd2f1cc-99b5-4d3d-92e0-d5e0b802b612&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('7fd2f1cc-99b5-4d3d-92e0-d5e0b802b612',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_7fd2f1cc-99b5-4d3d-92e0-d5e0b802b612&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * 初始化应用类
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * User: young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Init
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;$frame&lt;/span&gt; = &lt;span&gt;array&lt;/span&gt;('BaseController','BaseModel','Db','FactoryModel','Config','Log'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; 。。。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;点击查看【自动加载日志类】&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　4） 记录错误  【Frame/Db.class.php】&lt;/p&gt;
&lt;p&gt;数据库连接可能发生错误处理&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5a8efac9-a273-4bb5-b74a-4ffe3e3db99d')&quot; readability=&quot;34&quot;&gt;&lt;img id=&quot;code_img_closed_5a8efac9-a273-4bb5-b74a-4ffe3e3db99d&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5a8efac9-a273-4bb5-b74a-4ffe3e3db99d&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5a8efac9-a273-4bb5-b74a-4ffe3e3db99d',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5a8efac9-a273-4bb5-b74a-4ffe3e3db99d&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Db
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;     * 连接数据库，设置编码，选库
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;     * @access private
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; connect()
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;link = @ &lt;span&gt;mysql_connect&lt;/span&gt;(&quot;{&lt;span&gt;$this&lt;/span&gt;-&amp;gt;host}:{&lt;span&gt;$this&lt;/span&gt;-&amp;gt;port}&quot;, &quot;&lt;span&gt;$this&lt;/span&gt;-&amp;gt;user&quot;, &quot;&lt;span&gt;$this&lt;/span&gt;-&amp;gt;pwd&quot;&lt;span&gt;) ;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;$this&lt;/span&gt; -&amp;gt;&lt;span&gt; link) {
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             &lt;span&gt;$error&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Exception&lt;/span&gt;(&quot;数据库连接不上&quot;,10000&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;$error&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;setCharset(&lt;span&gt;$this&lt;/span&gt;-&amp;gt;&lt;span&gt;charset);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         &lt;span&gt;$this&lt;/span&gt;-&amp;gt;useDb(&lt;span&gt;$this&lt;/span&gt;-&amp;gt;&lt;span&gt;dbname);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; 。。。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;点击查看【数据库连接错误抛出】&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;sql语句发生错误处理&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('82f53a67-f476-407e-9b19-8e161f969a49')&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_82f53a67-f476-407e-9b19-8e161f969a49&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_82f53a67-f476-407e-9b19-8e161f969a49&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('82f53a67-f476-407e-9b19-8e161f969a49',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_82f53a67-f476-407e-9b19-8e161f969a49&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;  &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Db 
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;     * 执行sql语句
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;     * @param  string $sql sql语句
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;     * @return mixed
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;      &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;private&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; query(&lt;span&gt;$sql&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;$result&lt;/span&gt; = &lt;span&gt;mysql_query&lt;/span&gt;(&lt;span&gt;$sql&lt;/span&gt;, &lt;span&gt;$this&lt;/span&gt;-&amp;gt;&lt;span&gt;link);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;        if(false === $result) {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;//            echo &quot;&amp;lt;p&amp;gt;sql执行失败!&amp;lt;br&amp;gt;&quot;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;//            echo &quot;&amp;lt;br&amp;gt;失败语句：&quot;.$sql;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;//            echo &quot;&amp;lt;br&amp;gt;错误代号&quot;.mysql_errno();
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;//            echo &quot;&amp;lt;br&amp;gt;错误提示: &quot;.mysql_error().&quot;&amp;lt;/p&amp;gt;&quot;;
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;//            exit();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;//        }&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;false&lt;/span&gt; === &lt;span&gt;$result&lt;/span&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             &lt;span&gt;$err&lt;/span&gt; = &quot;sql执行失败!\r\n失败语句：&quot;.&lt;span&gt;$sql&lt;/span&gt;.&quot;\r\n错误代号:&quot;.&lt;span&gt;mysql_errno&lt;/span&gt;().&quot;\r\n错误提示:&quot;.&lt;span&gt;mysql_error&lt;/span&gt;().&quot;\r\n\r\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;             &lt;span&gt;Log&lt;/span&gt;::write(&lt;span&gt;$err&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;             &lt;span&gt;exit&lt;/span&gt;(&quot;&amp;lt;h2&amp;gt;查询出错，请稍后访问&amp;lt;/h2&amp;gt;&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; &lt;span&gt;$result&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;。。。
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; 。。。
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;点击查看【执行SQL错误处理】&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;&lt;span&gt;　　测试&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　可以在【App/Common/config.php】中配置日志文件目录。 如果不进行配置， 默认记录在App/log/目录中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('c1ac513d-b2f1-4d9b-aee5-3a0cd23cf9b5')&quot; readability=&quot;32&quot;&gt;&lt;img id=&quot;code_img_closed_c1ac513d-b2f1-4d9b-aee5-3a0cd23cf9b5&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c1ac513d-b2f1-4d9b-aee5-3a0cd23cf9b5&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('c1ac513d-b2f1-4d9b-aee5-3a0cd23cf9b5',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c1ac513d-b2f1-4d9b-aee5-3a0cd23cf9b5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;59&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;/*&lt;/span&gt;&lt;span&gt;*
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt; * 配置文件
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt; * User: young
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;  &lt;span&gt;*/&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;return&lt;/span&gt;&lt;span&gt; [
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;数据库连接配置&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    。。。
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;、 。。。
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    。。。
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; 
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;日志文件位置配置&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     'log' =&amp;gt; APP,
&lt;span&gt;14&lt;/span&gt; ];
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;点击查看【日志文件配置】&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;　　以下测试可以 开启配置项中的配置log  和关闭后分别测试。  注意： 如果没有做配置log, 则要首先在App目录下建立一个log目录&lt;/p&gt;
&lt;p&gt;　　　1. 在配置文件中故意写错数据库连接信息，如密码写错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1254673/201807/1254673-20180706140617051-1829648602.png&quot; alt=&quot;&quot; width=&quot;734&quot; height=&quot;141&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　2. 执行sql错误&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1254673/201807/1254673-20180706140640979-1807059360.png&quot; alt=&quot;&quot; width=&quot;716&quot; height=&quot;274&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最后说明： 配置目录，日志目录都是不希望浏览器直接访问的，所以需要将.htaccess文件放入目录中 （由于App目录中已经存在，故也可以省略）&lt;/p&gt;
&lt;p&gt;提交传送代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
git add -&lt;span&gt;A
git commit &lt;/span&gt;-m &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;完成日志类&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
git checkout master
git merge &lt;/span&gt;&lt;span&gt;start-admin-module
git push origin master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 小结： 本篇主要实现了 框架清理，博客数据库表搭建，创建配置读取类，日志记录类。&lt;/p&gt;
&lt;p&gt;　　　　实际上，到此仍然只是更加完善了一下框架结构，增加了2个功能。正如前篇所提，还有很多是可以改进的。这里就暂时不再继续增加功能了。&lt;/p&gt;
&lt;h2&gt;提出问题：&lt;/h2&gt;
&lt;p&gt;　　1. 如何使用该自制框架搭建项目 ==&amp;gt; 用户操作+mvc实现&lt;/p&gt;
&lt;p&gt;　　2. 如何着手使用ajax实现后台登录功能  ==&amp;gt; ajax应用&lt;/p&gt;
&lt;p&gt;　　3. 如何着手实现分类模块功能，它有哪些操作 ==&amp;gt; 增删改查&lt;/p&gt;
&lt;p&gt;下一步： 后台模板视图制作，后台登录，文章分类模块功能。&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 06:51:00 +0000</pubDate>
<dc:creator>young67</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yangp67/p/9268767.html</dc:identifier>
</item>
<item>
<title>开源方案搭建可离线的精美矢量切片地图服务-8.mapbox 之sprite大图图标文件生成（附源码） - ATtuing</title>
<link>http://www.cnblogs.com/ATtuing/p/9273391.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ATtuing/p/9273391.html</guid>
<description>&lt;h3&gt;&lt;span&gt;项目成果展示（所有项目文件都在阿里云的共享云虚拟主机上，访问地图可以会有点慢，请多多包涵）。&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;01：中国地图：&lt;a href=&quot;http://test.sharegis.cn/mapbox/html/3china.html&quot;&gt;&lt;span&gt;&lt;span&gt;http://test.sharegis.cn/mapbox/html/3china.html&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;02：德国-德累斯顿市：&lt;a href=&quot;http://test.sharegis.cn/mapbox/html/6germany.html&quot;&gt;http://test.sharegis.cn/mapbox/html/6germany.html&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;1.什么是sprite文件&lt;/h4&gt;
&lt;p&gt;      sprite 文件主要是将一堆小图生成一种大图的方法，并且将每张小图的位置信息保存下来，方便读取。在网络请求中会减少请求的数量，mapbox借鉴前端中CSS Sprite方法存储图标信息的。sprite.png文件保存图标，sprite.json保存名称及位置信息，下图图展示的是小图标与大图文件的示例。下面我讲一下两种文件互转。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142447458-1133414205.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142448021-1542124167.png&quot; alt=&quot;image&quot; width=&quot;427&quot; height=&quot;281&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;   &amp;lt;=互转=&amp;gt;     &lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142448634-1402424545.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142450209-1846267897.png&quot; alt=&quot;image&quot; width=&quot;433&quot; height=&quot;281&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;     下面是这次项目实现的功能，包含Sprite大图的合成与分割，也包含对单个图标文件的宽度与高度的调整。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142451304-109394178.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142451714-1202666661.png&quot; alt=&quot;image&quot; width=&quot;430&quot; height=&quot;245&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;2.sprite大图转小图&lt;/h4&gt;
&lt;p&gt;      我们上一节讲到是使用arcgis pro会将.mxd地图配图文件转为mapbox的样式文件，同样会生成sprite.png和sprite.json的图标文件。由于arcgis字体库的限制，生成的图标可能不符合的要求，我们有修改图标的需要，这里我们不仅要替换大图中的小图标而且要记录图标的的位置信息到sprite.json中。下面写了一个从大图文件中生成单个小图标文件的分割功能。&lt;/p&gt;
&lt;p&gt;      实现思路：首先读取大图图片，然后根据json文件中的位置信息，json中的图标信息如下，xy代表图标的左上角在大图中的位置，width height代表图标的大小，pixelRatio代表像素单位，spriteicon/county为文件名。&lt;/p&gt;
&lt;p&gt;&quot;spriteicon/county&quot;: {&lt;br/&gt;     &quot;x&quot;: 75,&lt;br/&gt;     &quot;y&quot;: 0,&lt;br/&gt;     &quot;width&quot;: 32,&lt;br/&gt;     &quot;height&quot;: 14,&lt;br/&gt;     &quot;pixelRatio&quot;: 1,&lt;br/&gt;     &quot;sdf&quot;: false&lt;br/&gt;}&lt;/p&gt;
&lt;p&gt;读取单个图标文件的像素信息，写到一个新建的Bitmap画布中，实现成果与代码如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142452071-1251986279.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142452471-1076654995.png&quot; alt=&quot;image&quot; width=&quot;157&quot; height=&quot;104&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; 转换为单个文件&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142452832-250939835.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142453273-949325619.png&quot; alt=&quot;image&quot; width=&quot;244&quot; height=&quot;152&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;44&quot;&gt;
&lt;pre&gt;
         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;sprite json文件&lt;/span&gt;
            &lt;span&gt;string&lt;/span&gt; text =&lt;span&gt; ReadFile(textBox3.Text);
            JObject obj &lt;/span&gt;=&lt;span&gt; JObject.Parse(text);
            JToken item &lt;/span&gt;= &lt;span&gt;null&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;将json转为对象&lt;/span&gt;
            List&amp;lt;Param&amp;gt; paramlist = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Param&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; obj.Count; i++&lt;span&gt;)
            {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (item == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                {
                    item &lt;/span&gt;=&lt;span&gt; obj.First;
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    item &lt;/span&gt;=&lt;span&gt; item.Next;
                }
                Param p &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Param();
                p.name &lt;/span&gt;= item.Path.Substring(&lt;span&gt;2&lt;/span&gt;, item.Path.Length - &lt;span&gt;4&lt;/span&gt;).Replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).Replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                p.x &lt;/span&gt;= (&lt;span&gt;int&lt;/span&gt;)item.First[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;];
                p.y &lt;/span&gt;= (&lt;span&gt;int&lt;/span&gt;)item.First[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;];
                p.width &lt;/span&gt;= (&lt;span&gt;int&lt;/span&gt;)item.First[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;width&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;];
                p.height &lt;/span&gt;= (&lt;span&gt;int&lt;/span&gt;)item.First[&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;height&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;];
                paramlist.Add(p);
            }
            &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap map = (Bitmap)Image.FromFile(textBox3.Text+&lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;\sprite.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
            {

                &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap editMap = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Bitmap(map, map.Width, map.Height))
                {
                    &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; itemp &lt;span&gt;in&lt;/span&gt;&lt;span&gt; paramlist)
                    {
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存图片的画布&lt;/span&gt;
                        Bitmap itemMap = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Bitmap(itemp.width, itemp.height);
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; itemp.width; i++&lt;span&gt;)
                        {
                            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; itemp.height; j++&lt;span&gt;)
                            {
                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取像素&lt;/span&gt;
                                Color color = editMap.GetPixel(itemp.x + i, itemp.y +&lt;span&gt; j);
                                itemMap.SetPixel(i, j, color);
                            }
                        }
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存&lt;/span&gt;
                        &lt;span&gt;string&lt;/span&gt; savepath = System.Environment.CurrentDirectory + &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;\spriteicon&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + itemp.name+ &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                        itemMap.Save(savepath);
                    }
                }
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;3.小图标的调整&lt;/h4&gt;
&lt;p&gt;      对于一些规则的小图标，例如标记路面信息的label，他的宽度由路的属性信息决定，展示我们要对不同长度的文字设置不同大小label这里我们要对多个图标的宽度和高度进行调整，这是只是对lable这样规则的图标进行调整，例如&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142453545-1209437326.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142453884-2094647698.png&quot; alt=&quot;image&quot; width=&quot;82&quot; height=&quot;63&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; 宽度增加20px&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142454119-259126699.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142454487-991231096.png&quot; alt=&quot;image&quot; width=&quot;132&quot; height=&quot;71&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现思路：我们选择规则图形的中心线，宽度调整就是以中心线进行左右拉伸复杂增加宽度，实现代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;45&quot;&gt;
&lt;pre&gt;
        DirectoryInfo folder = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DirectoryInfo(System.Environment.CurrentDirectory);
            List&lt;/span&gt;&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt; filenames = &lt;span&gt;new&lt;/span&gt; List&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; addnum =&lt;span&gt; Convert.ToInt32(textBox2.Text);
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; NextFolder &lt;span&gt;in&lt;/span&gt; folder.GetFiles(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
            {
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (NextFolder.Name.Contains(textBox1.Text))
                {
                    filenames.Add(NextFolder.Name);
                }
            }
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; item &lt;span&gt;in&lt;/span&gt;&lt;span&gt; filenames)
            {
                &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap map = (Bitmap)Image.FromFile(System.Environment.CurrentDirectory + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; item))
                {
                    &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap editMap = &lt;span&gt;new&lt;/span&gt; Bitmap(map.Width +&lt;span&gt; addnum, map.Height ))
                    {
                        &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; centernum = map.Width / &lt;span&gt;2&lt;/span&gt;&lt;span&gt;;
                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; map.Width; i++&lt;span&gt;)
                        {
                            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; map.Height; j++&lt;span&gt;)
                            {
                                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取像素&lt;/span&gt;
                                Color color =&lt;span&gt; map.GetPixel(i, j);
                                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (i ==&lt;span&gt; centernum)
                                {
                                    editMap.SetPixel(i, j, color);
                                    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (addnum &amp;gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)
                                    {
                                        &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; m = &lt;span&gt;0&lt;/span&gt;; m &amp;lt; addnum; m++&lt;span&gt;)
                                        {
                                            editMap.SetPixel(i &lt;/span&gt;+ m + &lt;span&gt;1&lt;/span&gt;&lt;span&gt;,j, color);
                                        }
                                    }
                                }
                                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (i &amp;lt;&lt;span&gt; centernum)
                                {
                                    editMap.SetPixel(i, j, color);
                                }
                                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                                {
                                    editMap.SetPixel(i &lt;/span&gt;+&lt;span&gt; addnum,j, color);
                                }
                            }
                        }
                        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存&lt;/span&gt;
                        &lt;span&gt;string&lt;/span&gt; savepath = System.Environment.CurrentDirectory + &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;\result\&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; item;
                        editMap.Save(savepath);
                    }
                }
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;4.小图转sprite大图&lt;/h4&gt;
&lt;p&gt;      将小图标合成一张sprite大图并在sprite.json中记录生成的位置信息，这里最主要的就是图标的摆放规则，&lt;/p&gt;
&lt;p&gt;（1）获取所有的图标文件，按照高度从小到大排列&lt;/p&gt;
&lt;p&gt;（2）根据大图生成的默认宽度，循环小图片，形成一行一行的图片集合。&lt;/p&gt;
&lt;p&gt;（3）根据行数和宽度生成大图的宽度。&lt;/p&gt;
&lt;p&gt;（4）循环小图标，在大图中画出小图标，并记录位置信息。&lt;/p&gt;
&lt;p&gt;实现成果与代码如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142454821-157895436.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142455203-1542042762.png&quot; alt=&quot;image&quot; width=&quot;244&quot; height=&quot;152&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; 转换为sprite文件&lt;a href=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142455641-1222369446.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2018.cnblogs.com/blog/821154/201807/821154-20180706142456069-292615055.png&quot; alt=&quot;image&quot; width=&quot;317&quot; height=&quot;155&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;49&quot;&gt;
&lt;pre&gt;
     DirectoryInfo folder = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; DirectoryInfo(System.Environment.CurrentDirectory);
            List&lt;/span&gt;&amp;lt;Param&amp;gt; paramlist = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Param&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; NextFolder &lt;span&gt;in&lt;/span&gt; folder.GetFiles(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;*.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
            {
                &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap map = (Bitmap)Image.FromFile(System.Environment.CurrentDirectory + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; NextFolder.Name))
                {
                    Param p &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Param();
                    p.name &lt;/span&gt;= NextFolder.Name.Replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;);
                    p.width &lt;/span&gt;=&lt;span&gt; map.Width;
                    p.height &lt;/span&gt;=&lt;span&gt; map.Height;
                    paramlist.Add(p);
                }
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;图片默认宽度为255，&lt;/span&gt;
            &lt;span&gt;int&lt;/span&gt; widthnum = &lt;span&gt;255&lt;/span&gt;&lt;span&gt;;
            paramlist &lt;/span&gt;= paramlist.OrderBy(m =&amp;gt; m.name).OrderBy(m =&amp;gt;&lt;span&gt; m.height).ToList();
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;一行一行的图片集合&lt;/span&gt;
            List&amp;lt;List&amp;lt;Param&amp;gt;&amp;gt; rowparams = &lt;span&gt;new&lt;/span&gt; List&amp;lt;List&amp;lt;Param&amp;gt;&amp;gt;&lt;span&gt;();
            List&lt;/span&gt;&amp;lt;Param&amp;gt; paramnowlist = &lt;span&gt;new&lt;/span&gt; List&amp;lt;Param&amp;gt;&lt;span&gt;();
            &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; countnum = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; paramlist.Count; i++&lt;span&gt;)
            {
                countnum &lt;/span&gt;+=&lt;span&gt; paramlist[i].width;
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (countnum &amp;gt;&lt;span&gt; widthnum)
                {
                    i &lt;/span&gt;= i - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
                    countnum &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                    rowparams.Add(paramnowlist);
                    paramnowlist &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; List&amp;lt;Param&amp;gt;&lt;span&gt;();
                }
                &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
                {
                    paramnowlist.Add(paramlist[i]);
                }
                &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (i == paramlist.Count - &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)
                {
                    rowparams.Add(paramnowlist);
                    &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
                }
            }
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;计算应有的高度&lt;/span&gt;
            &lt;span&gt;int&lt;/span&gt; allheight = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; item &lt;span&gt;in&lt;/span&gt;&lt;span&gt; rowparams)
            {
                allheight &lt;/span&gt;+= item.Select(m =&amp;gt;&lt;span&gt; m.height).Max();
            }
            &lt;/span&gt;&lt;span&gt;string&lt;/span&gt; spritejson = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;开始画大图&lt;/span&gt;
            &lt;span&gt;using&lt;/span&gt; (Bitmap editMap = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Bitmap(widthnum, allheight))
            {
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存起始高度&lt;/span&gt;
                &lt;span&gt;int&lt;/span&gt; heighttemp = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; rowparams.Count; i++&lt;span&gt;)
                {
                    &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; tempwidthnum = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
                    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; rowparams[i].Count; j++&lt;span&gt;)
                    {
                        &lt;/span&gt;&lt;span&gt;using&lt;/span&gt; (Bitmap map = (Bitmap)Image.FromFile(System.Environment.CurrentDirectory + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + rowparams[i][j].name + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
                        {
                            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;循环小图片&lt;/span&gt;
                            &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; x = &lt;span&gt;0&lt;/span&gt;; x &amp;lt; map.Width; x++&lt;span&gt;)
                            {
                                &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; y = &lt;span&gt;0&lt;/span&gt;; y &amp;lt; map.Height; y++&lt;span&gt;)
                                {
                                    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;获取像素&lt;/span&gt;
                                    Color color =&lt;span&gt; map.GetPixel(x, y);
                                    editMap.SetPixel(x&lt;/span&gt;+ tempwidthnum, y+&lt;span&gt; heighttemp, color);
                                }
                            }
                        }

                        spritejson &lt;/span&gt;+= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;+ rowparams[i][j].name.Replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).Replace(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;) + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\&quot;:{\&quot;x\&quot;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                        spritejson &lt;/span&gt;+= tempwidthnum + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,\&quot;y\&quot;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + heighttemp + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,\&quot;width\&quot;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; +&lt;span&gt; rowparams[i][j].width;
                        spritejson &lt;/span&gt;+= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,\&quot;height\&quot;:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; + rowparams[i][j].height + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,\&quot;pixelRatio\&quot;:1,\&quot;sdf\&quot;:false},&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                       &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;增加宽度&lt;/span&gt;
                       tempwidthnum +=&lt;span&gt; rowparams[i][j].width;
                    }
                    heighttemp &lt;/span&gt;+= rowparams[i].Select(m =&amp;gt;&lt;span&gt; m.height).Max();
                }
                &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;保存大图&lt;/span&gt;
                &lt;span&gt;string&lt;/span&gt; savepath = System.Environment.CurrentDirectory + &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;\result\sprite.png&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
                editMap.Save(savepath);
            }
            spritejson&lt;/span&gt;= spritejson.TrimEnd(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
            spritejson &lt;/span&gt;+= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;写入文件&lt;/span&gt;
            &lt;span&gt;using&lt;/span&gt; (StreamWriter fw= &lt;span&gt;new&lt;/span&gt; StreamWriter(System.Environment.CurrentDirectory + &lt;span&gt;@&quot;&lt;/span&gt;&lt;span&gt;\result\sprite.json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;))
            {
                fw.WriteLine(spritejson);
            }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;5.结尾&lt;/h4&gt;
&lt;p&gt;     我们这里的sprite大图生成了sprite.json来保存位置信息，其实css sprite的实现也是类似的。使用图片定位技术来实现的，例如像下面的这段css代码一样来对图片做定位的，大家可以简单修改一下源码便可实现，这里就不多介绍了。&lt;/p&gt;
&lt;pre&gt;
.bg-spriteicon {
    width: 17px; height: 17px;
    background: url('css_sprites.png') -138px -47px;
}
&lt;/pre&gt;
&lt;p&gt;源码地址：链接：&lt;a href=&quot;https://pan.baidu.com/s/1tLihDaZFa--xFCzI42tfEA&quot;&gt;https://pan.baidu.com/s/1tLihDaZFa--xFCzI42tfEA&lt;/a&gt; 密码：f3dm&lt;/p&gt;
&lt;p&gt;github地址：&lt;a title=&quot;https://github.com/HuHongYong/Mapbox-sprite-generation&quot; href=&quot;https://github.com/HuHongYong/Mapbox-sprite-generation&quot;&gt;https://github.com/HuHongYong/Mapbox-sprite-generation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：ATtuing&lt;/p&gt;
&lt;p&gt;出处：&lt;a href=&quot;http://www.cnblogs.com/ATtuing&quot;&gt;http://www.cnblogs.com/ATtuing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文链接。&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 06:33:00 +0000</pubDate>
<dc:creator>ATtuing</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ATtuing/p/9273391.html</dc:identifier>
</item>
<item>
<title>在 Ubuntu 16.04 LTS 上 离线安装 Docker / Docker-compose - TonyZhang24</title>
<link>http://www.cnblogs.com/atuotuo/p/9272368.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/atuotuo/p/9272368.html</guid>
<description>&lt;h2&gt;前情提要&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;今天上班后，突然接到现场的工程师的电话： XXX的现场环境组的的局域网，上不了互联网。bla bla bla..... 如果需要安装其他软件的话，只能是自己带过去安装。。。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;听完现场工程师的反馈，略微有些无奈。。。脑海中隐约闪现出之前和甲方开会的场景：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;我：X总（甲方技术负责人），请问一下，由于我们需要在生产环境服务器上从网上下载并安装一个开源组件（docker），您那边的环境能不能连接互联网啊！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;甲方：当然没问题啊，都什么年代了，还发愁上网的问题~~，哈哈！！&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;h3&gt;1. 卸载原先安装的 docker&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;1.1 打开Terminal，执行下面命令：&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# sudo apt-get purge docker-ce
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;1.2 删除Docker安装目录&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# sudo rm -rf /var/lib/docker
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;1.3 验证是否删除成功&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
#&lt;span&gt; docker info

bash: &lt;/span&gt;/usr/bin/docker: No such file or directory
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;我们可以看到已经无法找到 docker 安装目录，证明 &lt;span&gt;卸载成功  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;2. 下载 Docker 和 Docker-Compose&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;&lt;span&gt;2.1 Docker 安装包 下载： &lt;a href=&quot;https://download.docker.com/linux/ubuntu/dists/&quot;&gt;https://download.docker.com/linux/ubuntu/dists/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/396477/201807/396477-20180706134049353-1951810617.png&quot; alt=&quot;&quot; width=&quot;973&quot; height=&quot;312&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我这里选择的版本是 docker-ce_17.09.1~ce-0~ubuntu_amd64.deb： ，大家可以根据自己的实际需求下载。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2.2 下载 Docker-Compose: https://github.com/docker/compose/releases&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/396477/201807/396477-20180706135557844-1747122771.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;h2&gt;安装&lt;/h2&gt;
&lt;h3&gt;1. 安装 docker &lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在 docker 安装文件所在的目录打开 Terminal，键入命令&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# sudo dpkg -i docker-ce_17.09.0_ce-0_ubuntu_amd64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/396477/201807/396477-20180706140030887-1626599329.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;安装完成后，可以使用 docker info 命令查看&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/396477/201807/396477-20180706140304010-1957792624.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;2. 安装 docker-compose&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;2.1 将下载的compose文件 &quot;docker-compose-Linux-x86_64“ 改名为 “docker-compose”，移动到 /usr/local/bin&lt;/span&gt;&lt;/p&gt;

&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# sudo &lt;span&gt;mv&lt;/span&gt; docker-compose-Linux-x86_64 /usr/local/bin/docker-compose 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span&gt;2.2 添加可执行权限&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;sudo&lt;/span&gt; &lt;span&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose 
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/396477/201807/396477-20180706142025878-2109732105.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;这次“突然事件”使 我们有机会来一次离线安装 Docker 以及 compose的尝试, 其实也是也蛮不错的一次尝试~~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;希望这篇随笔也对大家有所帮助！！ &lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;参考&lt;/h2&gt;
&lt;p&gt;https://docs.docker.com/install/linux/docker-ce/ubuntu/#upgrade-docker-ce&lt;/p&gt;
&lt;p&gt;https://docs.docker.com/compose/install&lt;/p&gt;

</description>
<pubDate>Fri, 06 Jul 2018 06:25:00 +0000</pubDate>
<dc:creator>TonyZhang24</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/atuotuo/p/9272368.html</dc:identifier>
</item>
<item>
<title>34.QT-制作串口助手(并动态检测在线串口,附带源码) - LifeYx</title>
<link>http://www.cnblogs.com/lifexy/p/9273352.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lifexy/p/9273352.html</guid>
<description>&lt;h3 class=&quot;title pre fs1&quot;&gt;&lt;span&gt;&lt;span class=&quot;tcnt&quot;&gt;qextserialport-1.2rc库&lt;/span&gt;下载链接: &lt;span&gt;&lt;span&gt;&lt;a href=&quot;http://www.pudn.com/Download/item/id/2298532.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;http://www.pudn.com/Download/item/id/2298532.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.添加源码到工程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;将qextserialport-1.2rc.zip解压，将解压后的src目录拷贝到项目里的子目录SerialSrc下,在项目pro文件中增加下面这行&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;include(./serialSrc/src/qextserialport.pri)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.编译时,显示 'DEVICE_NOTIFY_ALL_INTERFACE_CLASSES'未定义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;解决:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;修改qextserialenumerator_p.h文件，将0x0500修改为0x0501，解决window下编译提示“DEVICE_NOTIFY_ALL_INTERFACE_CLASSES”未定义错误。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.读取在线串口&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;包含头文件:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;qextserialport.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;qextserialenumerator.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;示例:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;QList&amp;lt;QextPortInfo&amp;gt; ports =&lt;span&gt; QextSerialEnumerator::getPorts();
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;! [1]&lt;/span&gt;&lt;span&gt;
qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;List of ports:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;! [2]&lt;/span&gt;
&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt; (QextPortInfo info, ports) {
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;port name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;       &amp;lt;&amp;lt; info.portName;  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;COMID&lt;/span&gt;&lt;span&gt;
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;friendly name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;   &amp;lt;&amp;lt; info.friendName;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;名称&lt;/span&gt;&lt;span&gt;
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;physical name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;   &amp;lt;&amp;lt;&lt;span&gt; info.physName;
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;enumerator name:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span&gt; info.enumName;
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;vendor ID:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;       &amp;lt;&amp;lt;&lt;span&gt; info.vendorID;
      qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;product ID:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;      &amp;lt;&amp;lt;&lt;span&gt; info.productID;&lt;br/&gt;qDebug() &lt;/span&gt;&amp;lt;&amp;lt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;===================================&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
    }&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;打印:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1182576/201807/1182576-20180706140604302-1549353773.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.串口库相关使用(参考example示例)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;串口有两种模式EventDriven/Polling&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;EventDriven(&lt;/strong&gt;&lt;strong&gt;事件驱动方式)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;使用事件处理串口的读取，一旦有数据到来，就会发出&lt;strong&gt;&lt;span&gt;readyRead()&lt;/span&gt;&lt;/strong&gt;信号，我们可以关联该信号来读取串口的数据。在事件驱动的方式下，串口的读写是异步的，调用读写函数会立即返回，它们不会冻结调用线程。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Polling (&lt;/strong&gt;&lt;strong&gt;查询方式)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;读写函数是同步执行的，信号不能工作在这种模式下，而且有些功能也无法实现。但是这种模式下的开销较小。我们需要自己建立定时器来读取串口的数据。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;在Windows&lt;/strong&gt;&lt;strong&gt;下支持以上两种&lt;/strong&gt;&lt;strong&gt;模式，而在Linux&lt;/strong&gt;&lt;strong&gt;下只支持Polling&lt;/strong&gt;&lt;strong&gt;模式&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;读取方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如果想读取一行有效数据时:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;if&lt;/span&gt;(port-&amp;gt;&lt;span&gt;canReadLine())
{
       qDebug()&lt;/span&gt;&amp;lt;&amp;lt;port-&amp;gt;&lt;span&gt;readLine();
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;如果想读取所有有效数据时:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
 &lt;span&gt;if&lt;/span&gt; (port-&amp;gt;&lt;span&gt;bytesAvailable()) {
        qDebug()&lt;/span&gt;&amp;lt;&amp;lt;port-&amp;gt;&lt;span&gt;readAll();
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;QextSerialPort类&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用来描述具体的一个端口,可以通过它的成员函数,来获取/设置该端口的波特率,名称,停止位等,也可以通过该类来打开/关闭某个端口&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
port-&amp;gt;setPortName(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;COM1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;);                &lt;span&gt;//&lt;/span&gt;&lt;span&gt; port是个QextSerialPort类对象&lt;/span&gt;&lt;span&gt;
port&lt;/span&gt;-&amp;gt;&lt;span&gt;setBaudRate(BAUD1152000 );         
port&lt;/span&gt;-&amp;gt;&lt;span&gt;setParity(PAR_NONE);
port&lt;/span&gt;-&amp;gt;&lt;span&gt;setDataBits(DATA_8);
port&lt;/span&gt;-&amp;gt;&lt;span&gt;setStopBits(StopBitsType);
port&lt;/span&gt;-&amp;gt;setQueryMode(EventDriven);           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;设置事件驱动模式&lt;/span&gt;
&lt;span&gt;
port&lt;/span&gt;-&amp;gt;setBaudRate((BaudRateType)ui-&amp;gt;baudRateBox-&amp;gt;&lt;span&gt;itemData(idx).toInt());

port&lt;/span&gt;-&amp;gt;open(QIODevice::ReadWrite);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;打开串口
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;进行操作中... ...&lt;/span&gt;&lt;span&gt;
port&lt;/span&gt;-&amp;gt;close();                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭串口&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;QextSerialEnumerator类&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;用来统计在线串口用的,它有个成员函数getPorts(),其中上面第3节时便用到了.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;它有两个信号函数:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
deviceDiscovered(&lt;span&gt;const&lt;/span&gt; QextPortInfo &amp;amp;&lt;span&gt;info);     
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;出现有新的串口时,会触发该信号,并将出现的串口信息存到info参数中&lt;/span&gt;
&lt;span&gt;
deviceRemoved(&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; QextPortInfo &amp;amp;&lt;span&gt;info);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;当某个串口消失时,会触发该信号,并将消失的串口信息存到info参数中&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;注意:&lt;/strong&gt;&lt;/span&gt;上面两个信号函数默认是不会触发的,需要调用setUpNotifications()成员函数来开启信号事件触发&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.示例-使用&lt;/strong&gt;EventDriven事件驱动模式制作串口助手&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.1 效果图-&lt;/strong&gt;&lt;strong&gt;跟下位机通信&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;和原子的XCOM串口助手做比较&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1182576/201807/1182576-20180706141718873-355760385.gif&quot; alt=&quot;&quot; width=&quot;705&quot; height=&quot;443&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.2&lt;/strong&gt;&lt;strong&gt;创建UI&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1182576/201807/1182576-20180706141205577-622689847.png&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.3&lt;/strong&gt; &lt;strong&gt;头文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#ifndef WIDGET_H
&lt;/span&gt;&lt;span&gt;#define&lt;/span&gt; WIDGET_H&lt;span&gt;
#include &lt;/span&gt;&amp;lt;QtGui&amp;gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;qextserialport.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;qextserialenumerator.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;

&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; Ui {
&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; Widget;
}

&lt;/span&gt;&lt;span&gt;class&lt;/span&gt; Widget : &lt;span&gt;public&lt;/span&gt;&lt;span&gt; QWidget
{
    Q_OBJECT


    QextSerialPort &lt;/span&gt;*port;                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;端口,用来描述具体的一个端口&lt;/span&gt;&lt;span&gt;
    QextSerialEnumerator &lt;/span&gt;*enumerator;    &lt;span&gt;//&lt;/span&gt;&lt;span&gt;在线串口统计类&lt;/span&gt;

&lt;span&gt;protected&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; closeEvent(QCloseEvent *&lt;span&gt;);
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; initBtn();                  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化按钮&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; initComboBoxs();            &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化下拉列表框&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; initSerial();               &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化串口&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; Change_btn_isOn(&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; ison);

&lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;explicit&lt;/span&gt; Widget(QWidget *parent = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    &lt;/span&gt;~&lt;span&gt;Widget();

&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; slots:
    &lt;/span&gt;&lt;span&gt;void&lt;/span&gt; on_btn_send_clicked();         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;发送数据&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; on_betn_clear_clicked();       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;清除接收数据&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; on_btn_switch_clicked();       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;串口开关&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; onPortAddedOrRemoved();        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;刷新串口号&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; readLineData();                &lt;span&gt;//&lt;/span&gt;&lt;span&gt;读数据&lt;/span&gt;
    &lt;span&gt;void&lt;/span&gt; on_serial_name_currentIndexChanged(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index);

&lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt;:
    Ui::Widget &lt;/span&gt;*&lt;span&gt;ui;
};
&lt;/span&gt;&lt;span&gt;#endif&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; WIDGET_H&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.4 &lt;/strong&gt;&lt;strong&gt;源文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;72&quot;&gt;
&lt;pre&gt;
#include &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;widget.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
#include &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;ui_widget.h&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
Widget::Widget(QWidget &lt;/span&gt;*&lt;span&gt;parent) :
    QWidget(parent),
    ui(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Ui::Widget)
{
    ui&lt;/span&gt;-&amp;gt;setupUi(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
    setWindowTitle((&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;简易串口工具&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;));
    ui&lt;/span&gt;-&amp;gt;recvEdit-&amp;gt;setReadOnly(&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
    initBtn();
    initComboBoxs();
    initSerial();
    qApp&lt;/span&gt;-&amp;gt;setStyleSheet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;QComboBox::item{text-align: center; }&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::initBtn()                   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化按钮&lt;/span&gt;&lt;span&gt;
{
    Change_btn_isOn(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::initComboBoxs()           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化下拉列表框&lt;/span&gt;&lt;span&gt;
{
    BaudRateType RateTypes[&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;]=&lt;span&gt;{
    BAUD1200,BAUD2400 ,BAUD4800,BAUD9600 ,
    BAUD14400,BAUD19200,BAUD38400,BAUD56000,
    BAUD57600,BAUD115200,BAUD128000, BAUD256000};
    DataBitsType BitsTypes[&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;]=&lt;span&gt;{DATA_5,DATA_6, DATA_7, DATA_8};
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;&lt;span&gt;12&lt;/span&gt;;i++&lt;span&gt;)
    {
        ui&lt;/span&gt;-&amp;gt;serial_baud-&amp;gt;addItem(QString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).arg((&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)RateTypes[i]),RateTypes[i]);
    }

    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;&lt;span&gt;4&lt;/span&gt;;i++&lt;span&gt;)
    {
        ui&lt;/span&gt;-&amp;gt;serial_data-&amp;gt;addItem(QString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;).arg((&lt;span&gt;int&lt;/span&gt;&lt;span&gt;)BitsTypes[i]),BitsTypes[i]);
    }

    ui&lt;/span&gt;-&amp;gt;serial_parity-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;无&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,PAR_NONE);
    ui&lt;/span&gt;-&amp;gt;serial_parity-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;奇校验&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,PAR_ODD);
    ui&lt;/span&gt;-&amp;gt;serial_parity-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;偶校验&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,PAR_EVEN);

    ui&lt;/span&gt;-&amp;gt;serial_stop-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,STOP_1);
    ui&lt;/span&gt;-&amp;gt;serial_stop-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1.5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,STOP_1_5);
    ui&lt;/span&gt;-&amp;gt;serial_stop-&amp;gt;addItem(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,STOP_2);
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::initSerial()               &lt;span&gt;//&lt;/span&gt;&lt;span&gt;初始化串口&lt;/span&gt;&lt;span&gt;
{
    onPortAddedOrRemoved();
    enumerator &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; QextSerialEnumerator();
    enumerator&lt;/span&gt;-&amp;gt;&lt;span&gt;setUpNotifications();

    connect(enumerator, SIGNAL(deviceDiscovered(QextPortInfo)),&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, SLOT(onPortAddedOrRemoved()));  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;发现有串口&lt;/span&gt;&lt;span&gt;
    connect(enumerator, SIGNAL(deviceRemoved(QextPortInfo)), &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, SLOT(onPortAddedOrRemoved()));     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;发现没有串口了&lt;/span&gt;
&lt;span&gt;
     port &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; QextSerialPort(QextSerialPort::EventDriven,&lt;span&gt;this&lt;/span&gt;&lt;span&gt;);
     connect(port, SIGNAL(readyRead()), &lt;/span&gt;&lt;span&gt;this&lt;/span&gt;,SLOT(readLineData()));   &lt;span&gt;//&lt;/span&gt;&lt;span&gt;连接信号&lt;/span&gt;&lt;span&gt;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::on_btn_send_clicked()  &lt;span&gt;//&lt;/span&gt;&lt;span&gt;发送数据&lt;/span&gt;&lt;span&gt;
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (port-&amp;gt;isOpen() &amp;amp;&amp;amp; !ui-&amp;gt;sendEdit-&amp;gt;&lt;span&gt;toPlainText().isEmpty())
      {
        QString data &lt;/span&gt;= ui-&amp;gt;sendEdit-&amp;gt;&lt;span&gt;toPlainText();
        data&lt;/span&gt;+=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\r\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt;
      }
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::on_betn_clear_clicked()&lt;span&gt;//&lt;/span&gt;&lt;span&gt;清除接收数据&lt;/span&gt;&lt;span&gt;
{
    ui&lt;/span&gt;-&amp;gt;recvEdit-&amp;gt;&lt;span&gt;clear();
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::on_btn_switch_clicked()&lt;span&gt;//&lt;/span&gt;&lt;span&gt;串口开关&lt;/span&gt;&lt;span&gt;
{&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!port-&amp;gt;isOpen())     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;当前未打开&lt;/span&gt;&lt;span&gt;
    {
       Change_btn_isOn(&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;);
       port&lt;/span&gt;-&amp;gt;setPortName(ui-&amp;gt;serial_name-&amp;gt;itemData(ui-&amp;gt;serial_name-&amp;gt;&lt;span&gt;currentIndex()).toString());
       port&lt;/span&gt;-&amp;gt;setBaudRate((BaudRateType)ui-&amp;gt;serial_baud-&amp;gt;itemData(ui-&amp;gt;serial_baud-&amp;gt;&lt;span&gt;currentIndex()).toInt());
       port&lt;/span&gt;-&amp;gt;setDataBits((DataBitsType)ui-&amp;gt;serial_data-&amp;gt;itemData(ui-&amp;gt;serial_data-&amp;gt;&lt;span&gt;currentIndex()).toInt());
       port&lt;/span&gt;-&amp;gt;setParity((ParityType)ui-&amp;gt;serial_parity-&amp;gt;itemData(ui-&amp;gt;serial_parity-&amp;gt;&lt;span&gt;currentIndex()).toInt());
       port&lt;/span&gt;-&amp;gt;setStopBits((StopBitsType)ui-&amp;gt;serial_stop-&amp;gt;itemData(ui-&amp;gt;serial_stop-&amp;gt;&lt;span&gt;currentIndex()).toInt());
       port&lt;/span&gt;-&amp;gt;&lt;span&gt;open(QIODevice::ReadWrite);
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {
        Change_btn_isOn(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
        port&lt;/span&gt;-&amp;gt;&lt;span&gt;close();
    }
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::closeEvent(QCloseEvent *&lt;span&gt;)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(port-&amp;gt;&lt;span&gt;isOpen())
        port&lt;/span&gt;-&amp;gt;&lt;span&gt;close();
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::readLineData()                         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;读数据&lt;/span&gt;&lt;span&gt;
{
   &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;(port-&amp;gt;&lt;span&gt;canReadLine()) {
        ui&lt;/span&gt;-&amp;gt;recvEdit-&amp;gt;&lt;span&gt;moveCursor(QTextCursor::End);
        ui&lt;/span&gt;-&amp;gt;recvEdit-&amp;gt;insertPlainText(QString::fromLocal8Bit(port-&amp;gt;&lt;span&gt;readLine()));
    }
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::onPortAddedOrRemoved()              &lt;span&gt;//&lt;/span&gt;&lt;span&gt;刷新串口号&lt;/span&gt;&lt;span&gt;
{
    QString current &lt;/span&gt;= ui-&amp;gt;serial_name-&amp;gt;&lt;span&gt;currentText();
    ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;blockSignals(&lt;span&gt;true&lt;/span&gt;);        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;阻塞信号&lt;/span&gt;&lt;span&gt;
    ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;&lt;span&gt;clear();

    &lt;/span&gt;&lt;span&gt;foreach&lt;/span&gt;&lt;span&gt; (QextPortInfo info, QextSerialEnumerator::getPorts())
    {
      QString friendname &lt;/span&gt;=&lt;span&gt; info.friendName;
     &lt;/span&gt;&lt;span&gt;int&lt;/span&gt; end=friendname.lastIndexOf(&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
     &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(end!=-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)
     {
         ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;addItem(QString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%1:%2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).arg(info.portName).arg(info.friendName.left(end)),info.portName);
     }
     &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
     {
        ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;addItem(QString(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%1:%2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;).arg(info.portName).arg(info.friendName),info.portName);
     }
   }

    ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;setCurrentIndex(ui-&amp;gt;serial_name-&amp;gt;&lt;span&gt;findText(current));
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(ui-&amp;gt;serial_name-&amp;gt;currentIndex()==-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)
        ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;setCurrentIndex(&lt;span&gt;0&lt;/span&gt;&lt;span&gt;);
    ui&lt;/span&gt;-&amp;gt;serial_name-&amp;gt;blockSignals(&lt;span&gt;false&lt;/span&gt;);       &lt;span&gt;//&lt;/span&gt;&lt;span&gt;关闭阻塞&lt;/span&gt;&lt;span&gt;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::Change_btn_isOn(&lt;span&gt;bool&lt;/span&gt;&lt;span&gt; ison)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;(!&lt;span&gt;ison)
    {
        ui&lt;/span&gt;-&amp;gt;btn_switch-&amp;gt;setStyleSheet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;color:blue;border: 1px solid blue&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        ui&lt;/span&gt;-&amp;gt;btn_switch-&amp;gt;setText(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;打开串口&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;
    {
        ui&lt;/span&gt;-&amp;gt;btn_switch-&amp;gt;setStyleSheet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;color:red;border: 1px solid red&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
        ui&lt;/span&gt;-&amp;gt;btn_switch-&amp;gt;setText(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;关闭串口&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
    }
}

Widget::&lt;/span&gt;~&lt;span&gt;Widget()
{
    delete ui;
}

&lt;/span&gt;&lt;span&gt;void&lt;/span&gt; Widget::on_serial_name_currentIndexChanged(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; index)
{
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (port-&amp;gt;isOpen()) {           &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果是开启的,则关闭串口&lt;/span&gt;&lt;span&gt;
        port&lt;/span&gt;-&amp;gt;&lt;span&gt;close();
        Change_btn_isOn(&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;);
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;






&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 06:20:00 +0000</pubDate>
<dc:creator>LifeYx</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lifexy/p/9273352.html</dc:identifier>
</item>
<item>
<title>在qemu上运行BusyBox - wipan</title>
<link>http://www.cnblogs.com/wipan/p/9272255.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wipan/p/9272255.html</guid>
<description>&lt;h3&gt;BusyBox&lt;/h3&gt;
&lt;p&gt;前文“&lt;a href=&quot;https://www.cnblogs.com/wipan/p/9264979.html&quot; target=&quot;_blank&quot;&gt;在qemu环境中用gdb调试Linux内核&lt;/a&gt;”和“&lt;a href=&quot;https://www.cnblogs.com/wipan/p/9269505.html&quot; target=&quot;_blank&quot;&gt;Initramfs 原理和实践&lt;/a&gt;”分别描述了怎么用qemu来运行一个编译好的内核，以及怎么指定initramfs，但都是简单的演示。其实轮子已经有人造出来了，&lt;a href=&quot;https://busybox.net/&quot; target=&quot;_blank&quot;&gt;BusyBox项目&lt;/a&gt;就是这样一个工具集，提供了非常多的常用Linux命令，并且支持多平台。BusyBox项目的官网介绍如下：&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;h3&gt;BusyBox: The Swiss Army Knife of Embedded Linux&lt;/h3&gt;
&lt;p&gt;BusyBox combines tiny versions of many common UNIX utilities into a single small executable. It provides replacements for most of the utilities you usually find in GNU fileutils, shellutils, etc. The utilities in BusyBox generally have fewer options than their full-featured GNU cousins; however, the options that are included provide the expected functionality and behave very much like their GNU counterparts. BusyBox provides a fairly complete environment for any small or embedded system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们可以把BusyBox作为一个用户空间运行在qemu启动的内核中，思路是把BusyBox打包成一个小型文件系统结构，并且归档到cpio文件中，作为系统启动的initramfs运行起来，这样我们就可以拥有一个类似Linux的操作界面和工具集。&lt;/p&gt;

&lt;p&gt;编译内核，运行 qemu, 制作initramfs等过程可以参考前文，这里只着重介绍怎么把BusyBox打包成initramfs让Linux内核把它跑起来。&lt;/p&gt;

&lt;h3&gt;准备&lt;/h3&gt;
&lt;p&gt;统一下目录，之后的操作都会在$HOME/kernel/这个目录下进行，把环境变量TOP设置为这个目录&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# TOP=$HOME/kernel/&lt;span&gt;
# cd $TOP
# &lt;/span&gt;&lt;span&gt;pwd&lt;/span&gt;
/root/kernel
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;下载和解压BusyBox&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;wget&lt;/span&gt; https:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;busybox.net/downloads/busybox-1.27.2.tar.bz2&lt;/span&gt;
# &lt;span&gt;tar&lt;/span&gt; -xf busybox-&lt;span&gt;1.27&lt;/span&gt;.&lt;span&gt;2&lt;/span&gt;.&lt;span&gt;tar&lt;/span&gt;.bz2
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Config BusyBox&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;mkdir&lt;/span&gt; -pv ../obj/busybox-&lt;span&gt;x86
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘../&lt;span&gt;obj’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘../obj/busybox-&lt;span&gt;x86’
# &lt;/span&gt;&lt;span&gt;make&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;=../obj/busybox-x86 defconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;0= 表示把build输出放在这个位置，这样就可以利用同一套源代码来build多个不同的configuration。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;配置menuconfig&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;make&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;=../obj/busybox-x86 menuconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;menuconfig需要完成如下2个配置&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;开启静态编译, 避免链接shared libraries&lt;/li&gt;
&lt;li&gt;编译成x86 32位&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;1) 开启静态编译，在menuconfig界面，敲/, 搜索&quot;static&quot;，可以看到在如下位置可以进行选项配置：&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Busybox Settings ---&amp;gt;&lt;br/&gt;    Build Options ---&amp;gt;&lt;br/&gt;        [*] Build BusyBox as a static binary(no shared libs)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在&quot;Build BusyBox as a static binary(no shared libs&quot;选项上选Y。&lt;/p&gt;
&lt;p&gt;2) 编译成x86 32位&lt;/p&gt;
&lt;p&gt;在如下两个选项中输入对应的值：&lt;/p&gt;
&lt;p&gt;(-m32 -march=i386) Additional CFLAGS&lt;br/&gt;(-m32) Additional LDFLAGS&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1398476/201807/1398476-20180706114332160-970174739.png&quot; alt=&quot;&quot; width=&quot;535&quot; height=&quot;584&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Build BusyBox&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# cd ../obj/busybox-&lt;span&gt;x86
# &lt;/span&gt;&lt;span&gt;make&lt;/span&gt; -&lt;span&gt;j2
# &lt;/span&gt;&lt;span&gt;make&lt;/span&gt; &lt;span&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;制作initramfs文件&lt;/h3&gt;
&lt;p&gt;至此静态链接的BusyBox编译完成，可以将安装在_install目录下的文件和目录拎出来打包，安装initramfs要求的格式打包起来，打包的目标目录为新建的$TOP/initramfs/x86-busybox。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;mkdir&lt;/span&gt; -pv $TOP/initramfs/x86-&lt;span&gt;busybox
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘/&lt;span&gt;initramfs’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘/initramfs/x86-&lt;span&gt;busybox’
# cd $TOP&lt;/span&gt;/initramfs/x86-&lt;span&gt;busybox
root@iZ8vb12um7qt3iuasi08caZ:&lt;/span&gt;/initramfs/x86-busybox# &lt;span&gt;mkdir&lt;/span&gt; -pv {bin,sbin,etc,proc,sys,usr/&lt;span&gt;{bin,sbin}}
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘bin’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘sbin’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘etc’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘proc’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘sys’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;&lt;span&gt;: created directory ‘usr’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘usr/&lt;span&gt;bin’
&lt;/span&gt;&lt;span&gt;mkdir&lt;/span&gt;: created directory ‘usr/&lt;span&gt;sbin’
# &lt;/span&gt;&lt;span&gt;cp&lt;/span&gt; -av $TOP/obj/busybox-x86/_install&lt;span&gt;/*&lt;/span&gt;&lt;span&gt; .&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;initramfs需要一个init程序，可以写一个简单的shell脚本作为init:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;cat&lt;/span&gt;&lt;span&gt; init
#&lt;/span&gt;!/bin/&lt;span&gt;sh&lt;/span&gt;
&lt;span&gt;mount&lt;/span&gt; -t proc none /&lt;span&gt;proc
&lt;/span&gt;&lt;span&gt;mount&lt;/span&gt; -t sysfs none /&lt;span&gt;sys
&lt;/span&gt;&lt;span&gt;echo&lt;/span&gt; -e &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\nBoot took $(cut -d' ' -f1 /proc/uptime) seconds\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
exec &lt;/span&gt;/bin/&lt;span&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;加上执行权限&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;chmod&lt;/span&gt; u+x init
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将x86-busybox下面的内容打包归档成cpio文件，以供Linux内核做initramfs启动执行。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
# &lt;span&gt;find&lt;/span&gt; . -print0 | cpio --&lt;span&gt;null&lt;/span&gt; -ov --format=newc | &lt;span&gt;gzip&lt;/span&gt; -&lt;span&gt;9&lt;/span&gt; &amp;gt; $TOP/obj/initramfs-busybox-x86.cpio.gz
&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;启动Linux&lt;/h3&gt;
&lt;p&gt;将 BusyBox cpio压缩文件作为initramfs启动Linux内核。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# cd $TOP
# qemu &lt;/span&gt;-kernel ./linux-&lt;span&gt;3.18&lt;/span&gt;.&lt;span&gt;6&lt;/span&gt;/arch/x86/boot/bzImage -initrd obj/initramfs-busybox-x86.cpio.gz -nographic -append &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;console=ttyS0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;启动后console打印完启动信息后，进入了init程序指定的shell中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1398476/201807/1398476-20180706134346181-1927574111.png&quot; alt=&quot;&quot; width=&quot;713&quot; height=&quot;578&quot;/&gt;&lt;/p&gt;

&lt;p&gt;完整的启动日志如下，里面能看到Linux内核在启动加载各个模块和驱动的过程：&lt;/p&gt;
&lt;blockquote readability=&quot;82&quot;&gt;
&lt;p&gt;&lt;span&gt;[ 0.000000] Initializing cgroup subsys cpuset&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Initializing cgroup subsys cpu&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Initializing cgroup subsys cpuacct&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Linux version 3.18.6 (root@iZ8vb12um7qt3iuasi08caZ) (gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) ) #1 SMP Wed Jul 4 20:08:15 CST 2018&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] e820: BIOS-provided physical RAM map:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x0000000000100000-0x0000000007ffdfff] usable&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x0000000007ffe000-0x0000000007ffffff] reserved&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Notice: NX (Execute Disable) protection missing in CPU!&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] SMBIOS 2.4 present.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] e820: last_pfn = 0x7ffe max_arch_pfn = 0x100000&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] found SMP MP-table at [mem 0x000f0b20-0x000f0b2f] mapped at [c00f0b20]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Scanning 1 areas for low memory corruption&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] init_memory_mapping: [mem 0x00000000-0x000fffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] init_memory_mapping: [mem 0x07800000-0x07bfffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] init_memory_mapping: [mem 0x00100000-0x077fffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] init_memory_mapping: [mem 0x07c00000-0x07ffdfff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] RAMDISK: [mem 0x07efa000-0x07feffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: Early table checksum verification disabled&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: RSDP 0x000F0990 000014 (v00 BOCHS )&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: RSDT 0x07FFFBC1 000034 (v01 BOCHS BXPCRSDT 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: FACP 0x07FFF1C0 000074 (v01 BOCHS BXPCFACP 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: DSDT 0x07FFE040 001180 (v01 BOCHS BXPCDSDT 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: FACS 0x07FFE000 000040&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: SSDT 0x07FFF234 0008DD (v01 BOCHS BXPCSSDT 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: APIC 0x07FFFB11 000078 (v01 BOCHS BXPCAPIC 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: HPET 0x07FFFB89 000038 (v01 BOCHS BXPCHPET 00000001 BXPC 00000001)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] 0MB HIGHMEM available.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] 127MB LOWMEM available.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] mapped low ram: 0 - 07ffe000&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] low ram: 0 - 07ffe000&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Zone ranges:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] DMA [mem 0x00001000-0x00ffffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Normal [mem 0x01000000-0x07ffdfff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] HighMem empty&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Movable zone start for each node&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Early memory node ranges&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] node 0: [mem 0x00001000-0x0009efff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] node 0: [mem 0x00100000-0x07ffdfff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Initmem setup node 0 [mem 0x00001000-0x07ffdfff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Using APIC driver default&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: PM-Timer IO Port: 0xb008&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: IOAPIC (id[0x00] address[0xfec00000] gsi_base[0])&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] IOAPIC[0]: apic_id 0 already used, trying 1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] IOAPIC[0]: apic_id 1, version 17, address 0xfec00000, GSI 0-23&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Using ACPI (MADT) for SMP configuration information&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] ACPI: HPET id: 0x8086a201 base: 0xfed00000&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] smpboot: Allowing 1 CPUs, 0 hotplug CPUs&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PM: Registered nosave memory: [mem 0x00000000-0x00000fff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PM: Registered nosave memory: [mem 0x0009f000-0x0009ffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PM: Registered nosave memory: [mem 0x000a0000-0x000effff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PM: Registered nosave memory: [mem 0x000f0000-0x000fffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] e820: [mem 0x08000000-0xfffbffff] available for PCI devices&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] setup_percpu: NR_CPUS:8 nr_cpumask_bits:8 nr_cpu_ids:1 nr_node_ids:1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PERCPU: Embedded 15 pages/cpu @c7deb000 s31808 r0 d29632 u61440&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Built 1 zonelists in Zone order, mobility grouping on. Total pages: 32412&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Kernel command line: console=ttyS0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] PID hash table entries: 512 (order: -1, 2048 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Dentry cache hash table entries: 16384 (order: 4, 65536 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Inode-cache hash table entries: 8192 (order: 3, 32768 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Initializing CPU#0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Initializing HighMem for node 0 (00000000:00000000)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Memory: 116668K/130672K available (7482K kernel code, 490K rwdata, 2440K rodata, 644K init, 592K bss, 14004K reserved, 0K highmem)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] virtual kernel memory layout:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] fixmap : 0xfff16000 - 0xfffff000 ( 932 kB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] pkmap : 0xff800000 - 0xffc00000 (4096 kB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] vmalloc : 0xc87fe000 - 0xff7fe000 ( 880 MB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] lowmem : 0xc0000000 - 0xc7ffe000 ( 127 MB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] .init : 0xc1a2f000 - 0xc1ad0000 ( 644 kB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] .data : 0xc174ee65 - 0xc1a2d880 (2938 kB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] .text : 0xc1000000 - 0xc174ee65 (7483 kB)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Checking if this processor honours the WP bit even in supervisor mode...Ok.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Hierarchical RCU implementation.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] RCU restricting CPUs from NR_CPUS=8 to nr_cpu_ids=1.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] NR_IRQS:2304 nr_irqs:256 0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] Console: colour VGA+ 80x25&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] console [ttyS0] enabled&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] tsc: Fast TSC calibration using PIT&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.000000] tsc: Detected 2499.939 MHz processor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.003270] Calibrating delay loop (skipped), value calculated using timer frequency.. 4999.87 BogoMIPS (lpj=2499939)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.004575] pid_max: default: 32768 minimum: 301&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.005045] ACPI: Core revision 20140926&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.023649] ACPI: All ACPI Tables successfully acquired&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.025529] Security Framework initialized&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.026442] SELinux: Initializing.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.027702] Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.027899] Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.037157] Initializing cgroup subsys freezer&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.039288] Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.039288] Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.083212] Freeing SMP alternatives memory: 28K (c1ad0000 - c1ad7000)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.090448] Enabling APIC mode: Flat. Using 1 I/O APICs&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.094000] ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.104691] smpboot: CPU0: Intel QEMU Virtual CPU version 2.0.0 (fam: 06, model: 06, stepping: 03)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.106000] Performance Events: Broken PMU hardware detected, using software events only.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.106401] Failed to access perfctr msr (MSR c1 is 0)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.115103] x86: Booted up 1 node, 1 CPUs&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.115307] smpboot: Total of 1 processors activated (4999.87 BogoMIPS)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.124342] devtmpfs: initialized&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.131951] RTC time: 5:49:58, date: 07/06/18&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.140328] NET: Registered protocol family 16&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.143178] kworker/u2:0 (15) used greatest stack depth: 7256 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.145192] kworker/u2:0 (16) used greatest stack depth: 7212 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.148062] cpuidle: using governor ladder&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.148344] cpuidle: using governor menu&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.149357] ACPI: bus type PCI registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.152037] PCI: PCI BIOS revision 2.10 entry at 0xfd3bf, last bus=0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.152285] PCI: Using configuration type 1 for base access&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.197800] ACPI: Added _OSI(Module Device)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.198036] ACPI: Added _OSI(Processor Device)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.198190] ACPI: Added _OSI(3.0 _SCP Extensions)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.198326] ACPI: Added _OSI(Processor Aggregator Device)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.227871] ACPI: Interpreter enabled&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.228429] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep State [\_S1_] (20140926/hwxface-580)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.228816] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep State [\_S2_] (20140926/hwxface-580)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.230093] ACPI: (supports S0 S3 S4 S5)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.230322] ACPI: Using IOAPIC for interrupt routing&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.231481] PCI: Using host bridge windows from ACPI; if necessary, use &quot;pci=nocrs&quot; and report a bug&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.249641] kworker/u2:0 (74) used greatest stack depth: 7140 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.273460] ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.274489] acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.275063] acpi PNP0A03:00: _OSC failed (AE_NOT_FOUND); disabling ASPM&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.277503] acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.279268] PCI host bridge to bus 0000:00&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.279599] pci_bus 0000:00: root bus resource [bus 00-ff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.280000] pci_bus 0000:00: root bus resource [io 0x0000-0x0cf7]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.280297] pci_bus 0000:00: root bus resource [io 0x0d00-0xadff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.280521] pci_bus 0000:00: root bus resource [io 0xae0f-0xaeff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.280752] pci_bus 0000:00: root bus resource [io 0xaf20-0xafdf]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.280973] pci_bus 0000:00: root bus resource [io 0xafe4-0xffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.281262] pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.281486] pci_bus 0000:00: root bus resource [mem 0x08000000-0xfebfffff]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.291071] pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io 0x01f0-0x01f7]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.291405] pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io 0x03f6]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.291697] pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io 0x0170-0x0177]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.292062] pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io 0x0376]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.294150] pci 0000:00:01.3: quirk: [io 0xb000-0xb03f] claimed by PIIX4 ACPI&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.294421] pci 0000:00:01.3: quirk: [io 0xb100-0xb10f] claimed by PIIX4 SMB&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.314370] ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.315707] ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.316516] ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.317925] ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.318384] ACPI: PCI Interrupt Link [LNKS] (IRQs *9)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.322000] ACPI: Enabled 16 GPEs in block 00 to 0F&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.325891] vgaarb: setting as boot device: PCI:0000:00:02.0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.326000] vgaarb: device added: PCI:0000:00:02.0,decodes=io+mem,owns=io+mem,locks=none&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.326042] vgaarb: loaded&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.326221] vgaarb: bridge control possible 0000:00:02.0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.329030] SCSI subsystem initialized&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.330885] ACPI: bus type USB registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.331469] usbcore: registered new interface driver usbfs&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.332358] usbcore: registered new interface driver hub&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.332742] usbcore: registered new device driver usb&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.333572] pps_core: LinuxPPS API ver. 1 registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.333725] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti &amp;lt;giometti@linux.it&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.334441] PTP clock support registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.336496] Advanced Linux Sound Architecture Driver Initialized.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.336746] PCI: Using ACPI for IRQ routing&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.347575] NetLabel: Initializing&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.347792] NetLabel: domain hash size = 128&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.348035] NetLabel: protocols = UNLABELED CIPSOv4&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.348876] NetLabel: unlabeled traffic allowed by default&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.349442] cfg80211: Calling CRDA to update world regulatory domain&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.350730] HPET: 3 timers in total, 0 timers will be used for per-cpu timer&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.351514] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.351828] hpet0: 3 comparators, 64-bit 100.000000 MHz counter&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.355641] Switched to clocksource hpet&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.369356] kworker/u2:0 (129) used greatest stack depth: 7036 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.372391] kworker/u2:0 (131) used greatest stack depth: 7004 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.446472] pnp: PnP ACPI init&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.453853] pnp: PnP ACPI: found 6 devices&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.512947] NET: Registered protocol family 2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.517348] TCP established hash table entries: 1024 (order: 0, 4096 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.517705] TCP bind hash table entries: 1024 (order: 1, 8192 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.517987] TCP: Hash tables configured (established 1024 bind 1024)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.518871] TCP: reno registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.519210] UDP hash table entries: 256 (order: 1, 8192 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.519484] UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.521974] NET: Registered protocol family 1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.524418] RPC: Registered named UNIX socket transport module.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.524625] RPC: Registered udp transport module.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.524784] RPC: Registered tcp transport module.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.524919] RPC: Registered tcp NFSv4.1 backchannel transport module.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.525303] pci 0000:00:00.0: Limiting direct PCI/PCI transfers&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.525512] pci 0000:00:01.0: PIIX3: Enabling Passive Release&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.525785] pci 0000:00:01.0: Activating ISA DMA hang workarounds&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.531439] Unpacking initramfs...&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.675369] Freeing initrd memory: 984K (c7efa000 - c7ff0000)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.678216] microcode: CPU0 sig=0x663, pf=0x1, revision=0x0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.678899] microcode: Microcode Update Driver: v2.00 &amp;lt;tigran@aivazian.fsnet.co.uk&amp;gt;, Peter Oruba&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.680948] Scanning for low memory corruption every 60 seconds&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.685750] futex hash table entries: 256 (order: 2, 16384 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.686365] audit: initializing netlink subsys (disabled)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.687372] audit: type=2000 audit(1530856198.686:1): initialized&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.691943] HugeTLB registered 4 MB page size, pre-allocated 0 pages&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.718779] VFS: Disk quotas dquot_6.5.2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.719482] Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.730361] NFS: Registering the id_resolver key type&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.731048] Key type id_resolver registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.731072] Key type id_legacy registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.732553] msgmni has been set to 229&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.741321] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.741642] io scheduler noop registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.741800] io scheduler deadline registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.742875] io scheduler cfq registered (default)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.744380] pci_hotplug: PCI Hot Plug PCI Core version: 0.5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.747594] input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.748538] ACPI: Power Button [PWRF]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.753005] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.775925] 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.784923] Non-volatile memory driver v1.3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.785534] Linux agpgart interface v0.103&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.787899] [drm] Initialized drm 1.1.0 20060810&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.798818] loop: module loaded&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.810583] scsi host0: ata_piix&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.813407] scsi host1: ata_piix&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.814178] ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.814477] ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.819598] e100: Intel(R) PRO/100 Network Driver, 3.5.24-k2-NAPI&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.819838] e100: Copyright(c) 1999-2006 Intel Corporation&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.820450] e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.820688] e1000: Copyright (c) 1999-2006 Intel Corporation.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 0.825817] ACPI: PCI Interrupt Link [LNKC] enabled at IRQ 11&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.079486] ata2.00: ATAPI: QEMU DVD-ROM, 2.0.0, max UDMA/100&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.081283] ata2.00: configured for MWDMA2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.091229] scsi 1:0:0:0: CD-ROM QEMU QEMU DVD-ROM 2.0. PQ: 0 ANSI: 5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.106026] sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.106503] cdrom: Uniform CD-ROM driver Revision: 3.20&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.110180] sr 1:0:0:0: Attached scsi generic sg0 type 5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.115278] kworker/u2:1 (532) used greatest stack depth: 6996 bytes left&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.137326] e1000 0000:00:03.0 eth0: (PCI:33MHz:32-bit) 52:54:00:12:34:56&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.137703] e1000 0000:00:03.0 eth0: Intel(R) PRO/1000 Network Connection&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.138635] e1000e: Intel(R) PRO/1000 Network Driver - 2.3.2-k&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.138849] e1000e: Copyright(c) 1999 - 2014 Intel Corporation.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.139355] sky2: driver version 1.30&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.141534] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.141752] ehci-pci: EHCI PCI platform driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.142412] ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.142665] ohci-pci: OHCI PCI platform driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.143182] uhci_hcd: USB Universal Host Controller Interface driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.143944] usbcore: registered new interface driver usblp&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.144434] usbcore: registered new interface driver usb-storage&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.145479] i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.148516] serio: i8042 KBD port at 0x60,0x64 irq 1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.148818] serio: i8042 AUX port at 0x60,0x64 irq 12&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.150864] mousedev: PS/2 mouse device common for all mice&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.154622] input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.157418] rtc_cmos 00:00: RTC can wake from S4&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.161431] rtc_cmos 00:00: rtc core: registered rtc_cmos as rtc0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.162329] rtc_cmos 00:00: alarms up to one day, 114 bytes nvram, hpet irqs&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.164868] device-mapper: ioctl: 4.28.0-ioctl (2014-09-17) initialised: dm-devel@redhat.com&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.165935] hidraw: raw HID events driver (C) Jiri Kosina&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.170218] usbcore: registered new interface driver usbhid&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.170414] usbhid: USB HID core driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.179052] Netfilter messages via NETLINK v0.30.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.179649] nf_conntrack version 0.5.0 (1838 buckets, 7352 max)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.182060] ctnetlink v0.93: registering with nfnetlink.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.185479] ip_tables: (C) 2000-2006 Netfilter Core Team&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.187322] TCP: cubic registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.187471] Initializing XFRM netlink socket&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.190281] NET: Registered protocol family 10&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.196897] ip6_tables: (C) 2000-2006 Netfilter Core Team&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.199403] sit: IPv6 over IPv4 tunneling driver&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.202494] NET: Registered protocol family 17&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.203544] Key type dns_resolver registered&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.203714] mce: Unable to init device /dev/mcelog (rc: -5)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.204471] Using IPI No-Shortcut mode&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.206427] registered taskstats version 1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.211671] Magic number: 10:770:819&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.212397] console [netcon0] enabled&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.212552] netconsole: network logging started&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.214627] ALSA device list:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.214775] No soundcards found.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.253620] Freeing unused kernel memory: 644K (c1a2f000 - c1ad0000)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.255298] Write protecting the kernel text: 7484k&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.255793] Write protecting the kernel read-only data: 2448k&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.321502] mount (650) used greatest stack depth: 6948 bytes left&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Boot took 1.34 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;/bin/sh: can't access tty; job control turned off&lt;/span&gt;&lt;br/&gt;&lt;span&gt;/ # [ 1.678389] tsc: Refined TSC clocksource calibration: 2499.937 MHz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 1.760577] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;[ 2.679684] Switched to clocksource tsc&lt;/span&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://mgalgs.github.io/2015/05/16/how-to-build-a-custom-linux-kernel-for-qemu-2015-edition.html&quot; target=&quot;_blank&quot;&gt;How to Build A Custom Linux Kernel For Qemu&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 06 Jul 2018 06:00:00 +0000</pubDate>
<dc:creator>wipan</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wipan/p/9272255.html</dc:identifier>
</item>
<item>
<title>Angular使用总结 --- 如何正确的操作DOM - Shapeying</title>
<link>http://www.cnblogs.com/shapeY/p/9272961.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/shapeY/p/9272961.html</guid>
<description>&lt;p&gt;　　无奈接手了一个旧项目，上一个老哥在Angular项目中大量使用了JQuery来操作DOM，真的是太不讲究了。那么如何优雅的使用Angular的方式来操作DOM呢？&lt;/p&gt;
&lt;h2&gt;获取元素&lt;/h2&gt;
&lt;h3&gt;　　1、ElementRef  ---   A &lt;span&gt;wrapper&lt;/span&gt; around a native element inside of a View.&lt;/h3&gt;
&lt;p&gt;　　　　&lt;span&gt;&lt;strong&gt;在组件的 constructor中注入ElementRef，可以获取到整个组件元素的包裹。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;@Component({
  selector: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;app-test-page&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  templateUrl: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;./test-page.component.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  styleUrls: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;./test-page.component.scss&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
})
export &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; TestPageComponent implements OnInit {

  constructor(
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; el: ElementRef
  ) { }

  ngOnInit() {
  }

  getDomTest() {
    console.dir(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.el);
  }
｝&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1072774/201807/1072774-20180706114346643-1033770439.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　&lt;strong&gt;　ElementRef中的nativeElement即是组件最外层的DOM元素。再通过原生的DOM定位方式，即可获取到指定的selector元素。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;  getDomTest() {
    console.dir(&lt;/span&gt;&lt;span&gt;this.el.nativeElement.querySelector('.test-get-dom'&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;); // 获取指定的子元素
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;　　&lt;/h3&gt;
&lt;h3&gt;　　2、@viewChild()  ---    You can use ViewChild to get the first element or the directive matching the selector from the  view DOM. &lt;/h3&gt;
&lt;p&gt;　　　　&lt;span&gt;&lt;strong&gt;@viewChild可以获取指定的元素， 指定的方式可以是本地变量或者组件类型；&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;40.5&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot; readability=&quot;8&quot;&gt;
// HTML
&amp;lt;div class=&quot;tip-test-wrapper&quot;&amp;gt;&lt;br/&gt;　　　&lt;strong&gt;// 本地变量绑定button按钮&lt;/strong&gt;
    &amp;lt;button class=&quot;test-get-dom&quot; &lt;span&gt;#testdom&lt;/span&gt; (click)=&quot;getDomTest()&quot;&amp;gt;测试获取DOM&amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;&lt;br/&gt;　　&lt;strong&gt;// Dialog组件&lt;/strong&gt;
&amp;lt;app-dialog&amp;gt;&amp;lt;/app-dialog&amp;gt;


// ts
import { DialogComponent } from './../../common/components/dialog/dialog.component';


@Component({
  selector: 'app-test-page',
  templateUrl: './test-page.component.html',
  styleUrls: ['./test-page.component.scss']
})
export class TestPageComponent implements OnInit {
　 // 通过本地变量获取元素  可通过read来指定获取的元素类型
  @ViewChild('testdom' , { read: ViewContainerRef }) viewcontainer: ViewContainerRef;
  @ViewChild('testdom') viewelement: ElementRef;&lt;p&gt;　 // 通过组件类型来获取
  @ViewChild(DialogComponent) viewcontent: DialogComponent;

  constructor(
    private el: ElementRef
  ) { }

  ngOnInit() {
  }

  getDomTest() {
    // console.dir(this.el.nativeElement.querySelector('.test-get-dom'));
    console.dir(this.viewcontainer);
    console.dir(this.viewelement);
    console.dir(this.viewcontent);
  }
}
&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1072774/201807/1072774-20180706121600678-1365247182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;备注：ElementRef或者 @viewChild 获取元素，一定要在 ngAfterViewInit 周期之后再使用。&lt;/span&gt; &lt;/p&gt;

&lt;h3&gt;　3、@viewChildren --   You can use ViewChildren to get the {@link QueryList} of elements or directives from theview DOM.&lt;/h3&gt;
&lt;p&gt;　　@viewChild会返回符合条件的第一个元素，如果需要获取多个符合条件的元素呢？&lt;span&gt;@viewChildren会返回所有符合条件的元素的list。&lt;/span&gt;指定selector的方式与@viewChild一致。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;43&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 复制一个元素&lt;/span&gt;
  &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tip-test-wrapper&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;button &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;test-get-dom&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; #testdom (click)=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;getDomTest()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;测试获取DOM&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;tip-test-wrapper&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;button &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;test-get-dom&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; #testdom (click)=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;getDomTest()&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;测试获取DOM&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;app-dialog&amp;gt;&amp;lt;/app-dialog&amp;gt;
&amp;lt;app-dialog&amp;gt;&amp;lt;/app-dialog&amp;gt;

&lt;span&gt;//&lt;/span&gt;&lt;span&gt; ts&lt;/span&gt;
import { DialogComponent } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;./../../common/components/dialog/dialog.component&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;


@Component({
  selector: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;app-test-page&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  templateUrl: &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;./test-page.component.html&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
  styleUrls: [&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;./test-page.component.scss&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
})
export &lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt; TestPageComponent implements OnInit {

  @ViewChild(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;testdom&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt; , { read: ViewContainerRef }) viewcontainer: ViewContainerRef;
  @ViewChild(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;testdom&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) viewelement: ElementRef;
  &lt;strong&gt;@ViewChildren(&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;testdom&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;) viewelements: &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;QueryList&amp;lt;any&amp;gt;;&lt;/strong&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;span&gt;  @ViewChild(DialogComponent) viewcontent: DialogComponent;
  &lt;strong&gt;@ViewChildren(DialogComponent) viewcontents: QueryList&amp;lt;DialogComponent&amp;gt;;&lt;/strong&gt;

  constructor(
    &lt;/span&gt;&lt;span&gt;private&lt;/span&gt;&lt;span&gt; el: ElementRef
  ) { }

  ngOnInit() {
  }

  getDomTest() {
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; console.dir(this.el.nativeElement.querySelector('.test-get-dom'));
    &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; console.dir(this.viewcontainer);&lt;/span&gt;
    console.dir(&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.viewelement);
    console.dir(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.viewelements);
    console.dir(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.viewcontent);
    console.dir(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;.viewcontents);
  }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1072774/201807/1072774-20180706123048048-244373131.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;操作DOM  --- Renderer2&lt;/h2&gt;
&lt;p&gt;　　在获取dom之后，如何对dom进行操作呢？原生的domAPI是一种选择，但是Angular提供了更好的跨平台方式   Renderer2。&lt;/p&gt;
&lt;p&gt;　　引入 &lt;em id=&quot;__mceDel&quot;&gt;Renderer2  ,&lt;/em&gt; 然后在construct中注入。&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;48&quot;&gt;
&lt;pre class=&quot;brush:csharp;gutter:true;&quot;&gt;
import { Component, OnInit , ViewContainerRef , ElementRef , ViewChild, &lt;strong&gt; Renderer2&lt;/strong&gt; , ViewChildren, QueryList} from '@angular/core';

import { DialogComponent } from './../../common/components/dialog/dialog.component';


@Component({
  selector: 'app-test-page',
  templateUrl: './test-page.component.html',
  styleUrls: ['./test-page.component.scss']
})
export class TestPageComponent implements OnInit {

  @ViewChild('testdom' , { read: ViewContainerRef }) viewcontainer: ViewContainerRef;
  @ViewChild('testdom') viewelement: ElementRef;
  @ViewChildren('testdom') viewelements: QueryList&amp;lt;any&amp;gt;;
  @ViewChild(DialogComponent) viewcontent: DialogComponent;
  @ViewChildren(DialogComponent) viewcontents: QueryList&amp;lt;DialogComponent&amp;gt;;

  constructor(
&lt;strong&gt;    private render: Renderer2,&lt;/strong&gt;
    private el: ElementRef
  ) { }

  ngOnInit() {
  }

  getDomTest() {&lt;br/&gt;&lt;strong&gt;// 修改元素颜色&lt;/strong&gt;
    &lt;strong&gt;this.render.setStyle(this.viewelement.nativeElement , 'color' , 'red');&lt;/strong&gt;
  }
｝
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;strong&gt;renderer2提供了丰富的API供使用&lt;/strong&gt;，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1072774/201807/1072774-20180706134052180-278428649.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;　　通过elementRef或者@viewChild @viewChildren获取元素，再通过renderer2提供的API来操作元素。不过记得在不要在 ngAfterViewInit 周期之前使用。通过Angular提供的方式，可以满足大部分的操作DOM的需求了。如果有特殊的场景，当然还是原生DOM撸起来呀&lt;/p&gt;

</description>
<pubDate>Fri, 06 Jul 2018 05:45:00 +0000</pubDate>
<dc:creator>Shapeying</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/shapeY/p/9272961.html</dc:identifier>
</item>
<item>
<title>吴恩达《机器学习》课程总结（15）异常检测 - ysyouaremyall</title>
<link>http://www.cnblogs.com/ys99/p/9273142.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ys99/p/9273142.html</guid>
<description>&lt;h2&gt;15.1问题的动机&lt;/h2&gt;
&lt;p&gt;将正常的样本绘制成图表（假设可以），如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706121815929-1809421214.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当新的测试样本同样绘制到图标上，如果偏离中心越远说明越可能不正常，使用某个可能性阈值，当低于正常可能性阈值时判断其为异常，然后做进一步的检查。异常检测常用于工业生产、异常用户等实际场景中。&lt;/p&gt;
&lt;p&gt;以上这种方法叫密度评估：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706122318246-2000742294.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;15.2高斯分布&lt;/h2&gt;
&lt;p&gt;（1）高斯分布也称为正态分布，其记为：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706122556901-470256637.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）高斯分布的概率密度函数：&lt;br/&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706122628603-1392148561.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;其中均值和方差的计算公式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706122708685-1280362615.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706122737361-2095898358.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;均值影响水平移动；方差越大，分布越矮胖，方差越小，分布越瘦高。&lt;/p&gt;
&lt;p&gt;（3）在求均值方差是到底用1/m还是1/(m-1)不做深究，二者差别很小（除非数据样本特别少），机器学习上习惯用前者。&lt;/p&gt;
&lt;h2&gt; 15.3算法&lt;/h2&gt;
&lt;p&gt;（1）首先求出每个特征的均值和方差：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706124002779-1935731041.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）获取新数据之后根据模型计算密度（注意此处算的是密度，而不是概率）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706124042142-2028085081.png&quot; alt=&quot;&quot;/&gt;（最后一项应该把1改成n）&lt;/p&gt;
&lt;p&gt;（3）根据设定的判断边界，当p(x)小于判断边界是则判别为异常。&lt;/p&gt;
&lt;p&gt;以下的三维图是表示密度估计函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706124240721-228969984.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;15.4开发和评价一个异常检测系统&lt;/h2&gt;
&lt;p&gt;（1）异常检测是一个非监督学习，故不可以根据结果变量y的值来高斯我们数据是否真的是异常。&lt;/p&gt;
&lt;p&gt;（2）异常检测系统开发的方法：从带有标记（正常和异常）的数据着手，选择部分正确数据集构建模型，然后剩余正常和异常构成交叉验证集和测试集，交叉验证集作为选取阈值ε&lt;/p&gt;
&lt;p&gt;案例：10000台正常的引擎数据，20台异常引擎数据，分配如下：&lt;/p&gt;
&lt;p&gt;6000台正常作为模型构建&lt;/p&gt;
&lt;p&gt;2000台正常和10台异常作为交叉验证集&lt;/p&gt;
&lt;p&gt;2000台正常和10台异常作为测试集&lt;/p&gt;
&lt;p&gt;具体评价方法如下：&lt;/p&gt;
&lt;p&gt;1.根据训练集数据，我们估计特征的平均值和方差并构建p(x)函数；&lt;/p&gt;
&lt;p&gt;2.对交叉验证集，尝试用不同的ε值作为阈值，并预测数据是否异常，根据F1值或者查准率与查全率的比例来选择ε；&lt;/p&gt;
&lt;p&gt;3.选出ε后，针对测试集进行预测，计算异常检测系统的F1值，或者出准率与查全率之比。&lt;/p&gt;
&lt;h2&gt; 15.5异常检测与监督学习的对比&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706125603344-787262516.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通常来说，正例（异常）样本太少，甚至为0，也就是说，出现了太多没见过的不同的异常类型，对于这些问题，通常应该使用的算法是异常检测算法。&lt;/p&gt;
&lt;h2&gt;15.6选择特征&lt;/h2&gt;
&lt;p&gt;（1）异常检测是假设特征符合正态分布（不是当然也能用，但不好），故需要将非正态分布的特征转换成正态分布，例如使用对数函数x=log(x+C),其中C是非负常数，常用1；或者x=x&lt;sup&gt;c&lt;/sup&gt;,c为0-1之间的一个分数。下图就是一个通过对数转换得到的正态分布&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706130433824-1093776223.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）误差分析：一个常见问题是一些异常的数据可能也会有较高的p(x)值，因而被认为是正常的，这种情况下可以做误差分析，从中找到一些新特征，是异常的p(x)变小。如下图中一个异常样本在一个特征中p(x)值很大，然后寻找其他特征，使其p(x)变小。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706130722369-714468045.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通常可以通过一些相关特征的组合获得很好的新特征，如在检测数据中心的计算机状况，使用CPU的负载与网络通信的比例作为新的特征，该值异常大时意味着出现问题。&lt;/p&gt;
&lt;h2&gt;15.7多元高斯分布（选修）&lt;/h2&gt;
&lt;p&gt;（1）当特征之间具有相关性时，原来的高斯分布可能无法正确的边界（&lt;strong&gt;当然通过特征组合成新特征可以一定的解决该问题&lt;/strong&gt;），如下图紫色的线是原来的高斯分布，蓝色的线是多元高斯分布：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706132313672-66247495.png&quot; alt=&quot;&quot; width=&quot;294&quot; height=&quot;223&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（2）原来的高斯分布计算过程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706132604146-912950318.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;多元高斯分布计算过程（计算均值、协方差、概率密度函数）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706132701150-633932648.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706132714719-1685627274.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（3）协方差矩阵的影响：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706132835741-309934379.png&quot; alt=&quot;&quot; width=&quot;614&quot; height=&quot;217&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（4）原高斯分布模型（特例）与多元高斯分布模型（一般）的比较：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706133001796-794682135.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（5）特征之间具有相关性时，解决方法有二，其一通过 多元高斯分布，其二通过特征组合形成新特征。&lt;/p&gt;
&lt;h2&gt;15.8使用多元高斯分布进行异常检测（选修）：&lt;/h2&gt;
&lt;p&gt;简要的讲就是先用数据集计算均值和协方差，然后计算p(x),利用测试数据带入到p(x)中求得的值与阈值作比较，小于阈值则判断为异常。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1326691/201807/1326691-20180706133653418-89593592.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 06 Jul 2018 05:40:00 +0000</pubDate>
<dc:creator>ysyouaremyall</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ys99/p/9273142.html</dc:identifier>
</item>
</channel>
</rss>