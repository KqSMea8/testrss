<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>day39_Spring学习笔记_07_CRM_03 - 黑泽明军</title>
<link>http://www.cnblogs.com/chenmingjun/p/9551705.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/chenmingjun/p/9551705.html</guid>
<description>&lt;h2 id=&quot;h&quot;&gt;&lt;span&gt;&lt;strong&gt;十、课程类别的分页（含条件）&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h101&quot;&gt;&lt;span&gt;&lt;strong&gt;10.1、流程分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/01.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h102pagebean&quot;&gt;&lt;span&gt;&lt;strong&gt;10.2、PageBean 实现分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　PageBean.java&lt;/p&gt;
&lt;pre readability=&quot;22&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;38&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.page;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PageBean&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum;        &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize;       &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalRecord;    &lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; startIndex;     &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalPage;      &lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;T&amp;gt; data;       &lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PageBean&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalRecord)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum = pageNum;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize = pageSize;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalRecord = totalRecord;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.startIndex = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalRecord + (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) / &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPageNum&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageNum;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setPageNum&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum = pageNum;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPageSize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageSize;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setPageSize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize = pageSize;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getTotalRecord&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalRecord;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setTotalRecord&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalRecord)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalRecord = totalRecord;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getStartIndex&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; startIndex;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setStartIndex&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; startIndex)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.startIndex = startIndex;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getTotalPage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; totalPage;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setTotalPage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalPage)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage = totalPage;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(List&amp;lt;T&amp;gt; data)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.data = data;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h103dao&quot;&gt;&lt;span&gt;&lt;strong&gt;10.3、dao层 实现分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/02.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;　　自定义实现类&lt;br/&gt;　　PageHibernateCallback.java
&lt;pre readability=&quot;13.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;21&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.page;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.sql.SQLException;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.hibernate.HibernateException;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.hibernate.Query;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.hibernate.Session;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.orm.hibernate3.HibernateCallback;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;PageHibernateCallback&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HibernateCallback&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String hql;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Object[] params;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; startIndex;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageHibernateCallback&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;setHql&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String hql)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.hql = hql;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageHibernateCallback&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;setParams&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object[] params)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.params = params;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageHibernateCallback&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;setStartIndex&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; startIndex)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.startIndex = startIndex;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageHibernateCallback&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;setPageSize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize = pageSize;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;doInHibernate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Session session)&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; HibernateException, SQLException &lt;/span&gt;{&lt;br/&gt;Query queryObject = session.createQuery(hql);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;; i &amp;lt; params.length; i++) {&lt;br/&gt;queryObject.setParameter(i, params[i]);&lt;br/&gt;}&lt;br/&gt;queryObject.setFirstResult(startIndex);&lt;br/&gt;queryObject.setMaxResults(pageSize);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; queryObject.list();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　CourseTypeDao.java&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;6&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getTotalRecord&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String condition, Object[] params)&lt;/span&gt;&lt;/span&gt;;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;CrmCourseType&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String condition, Object[] params, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; startIndex, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　CourseTypeDaoImpl.java&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;8&quot;&gt;    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;public &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; getTotalRecord(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; condition, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;[] params) {&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;select count(c) from CrmCourseType c where 1=1 &quot;&lt;/span&gt; + condition;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Long&amp;gt; list = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().find(hql, params); &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; list.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;).intValue(); &lt;br/&gt;}&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;public &lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;CrmCourseType&amp;gt; findAll(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; condition, &lt;span class=&quot;hljs-built_in&quot;&gt;Object&lt;/span&gt;[] params, &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; startIndex, &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; pageSize) {&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; hql = &lt;span class=&quot;hljs-string&quot;&gt;&quot;from CrmCourseType where 1=1 &quot;&lt;/span&gt; + condition;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().execute(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PageHibernateCallback&amp;lt;CrmCourseType&amp;gt;().setHql(hql).setParams(params).setStartIndex(startIndex).setPageSize(pageSize)); &lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h104service&quot;&gt;&lt;span&gt;&lt;strong&gt;10.4、service层 实现分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　CourseTypeService.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs java&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageBean&amp;lt;CrmCourseType&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAllCourseType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(CrmCourseType courseType, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　CourseTypeServiceImpl.java&lt;/p&gt;
&lt;pre readability=&quot;12&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;18&quot;&gt;    @&lt;span class=&quot;hljs-function&quot;&gt;Override&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageBean&amp;lt;CrmCourseType&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAllCourseType&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;CrmCourseType courseType, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum, &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;StringBuilder builder = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; StringBuilder();&lt;br/&gt;List&amp;lt;Object&amp;gt; paramsList = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Object&amp;gt;();&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getCourseName())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and courseName like ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt; + courseType.getCourseName() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getRemark())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and remark like ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt; + courseType.getRemark() + &lt;span class=&quot;hljs-string&quot;&gt;&quot;%&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getTotalStart())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and total &amp;gt;= ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Integer.parseInt(courseType.getTotalStart()));&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getTotalEnd())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and total &amp;lt;= ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Integer.parseInt(courseType.getTotalEnd()));&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getCourseCostStart())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and courseCost &amp;gt;= ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Double.parseDouble(courseType.getCourseCostStart()));&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isNotBlank(courseType.getCourseCostEnd())) {&lt;br/&gt;builder.append(&lt;span class=&quot;hljs-string&quot;&gt;&quot; and courseCost &amp;lt;= ?&quot;&lt;/span&gt;);&lt;br/&gt;paramsList.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(Double.parseDouble(courseType.getCourseCostEnd()));&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;String condition = builder.toString();&lt;br/&gt;Object[] &lt;span class=&quot;hljs-keyword&quot;&gt;params&lt;/span&gt; = paramsList.toArray();&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; totalRecord = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.courseTypeDao.getTotalRecord(condition, &lt;span class=&quot;hljs-keyword&quot;&gt;params&lt;/span&gt;);&lt;br/&gt;PageBean&amp;lt;CrmCourseType&amp;gt; pageBean = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PageBean&amp;lt;CrmCourseType&amp;gt;(pageNum, pageSize, totalRecord);&lt;br/&gt;List&amp;lt;CrmCourseType&amp;gt; data = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.courseTypeDao.findAll(condition, &lt;span class=&quot;hljs-keyword&quot;&gt;params&lt;/span&gt;, pageBean.getStartIndex(), pageBean.getPageSize());&lt;br/&gt;pageBean.setData(data);&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageBean;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h105jsp&quot;&gt;&lt;span&gt;&lt;strong&gt;10.5、jsp页面 实现分析&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;方案1&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/03.png&quot; alt=&quot;&quot;/&gt;&lt;/li&gt;
&lt;li&gt;方案2&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/04.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;我们使用方案2。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;　　/day36_06_Spring_crm/WebRoot/WEB-INF/pages/coursetype/listCourse.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs vbscript-html&quot;&gt;&lt;span class=&quot;xml&quot;&gt;......&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%--条件查询 start --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;namespace&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;courseTypeAction_findAll&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 提供隐藏域，存放的是需要的当前页 ，id是给js/css使用的，name是给提交表单用的 --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:hidden&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageNum&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageNum&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:hidden&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;right&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;第&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.pageNum&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;/&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.totalPage&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;页&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.pageNum gt 1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%--gt 等价于 &amp;lt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(1)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;[首页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 首页 = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.pageNum&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;1&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[上一页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 上一页 = 当前页 - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.pageNum lt #pageBean.totalPage&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%--lt 等价于 &amp;gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.pageNum&lt;/span&gt; + &lt;span class=&quot;hljs-attr&quot;&gt;1&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[下一页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 下一页 = 当前页 + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.totalPage&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[尾页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 尾页 --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;showPage&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;num&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;hljs-string&quot;&gt;&quot;pageNum&quot;&lt;/span&gt;).value = num;&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;document&lt;/span&gt;.forms[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;].submit();&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h106jsp&quot;&gt;&lt;span&gt;&lt;strong&gt;10.6、jsp页面 动态显示效果&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　PageBean.java&lt;/p&gt;
&lt;pre readability=&quot;12.5&quot;&gt;
&lt;code class=&quot;hljs kotlin&quot; readability=&quot;19&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; int start;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; int end;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PageBean(int pageNum, int pageSize, int totalRecord) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum = pageNum;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize = pageSize;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalRecord = totalRecord;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.startIndex = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum &lt;span class=&quot;hljs-number&quot;&gt;-1&lt;/span&gt;) * &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage = (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalRecord + (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)) / &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end = &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;; &lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage &amp;lt;= &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage; &lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.start = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum - &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum + &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.start &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.start = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end = &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end &amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.start = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage - &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.end = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.totalPage;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;......&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　listCourse.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs vbscript-html&quot; readability=&quot;1&quot;&gt;&lt;span class=&quot;xml&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.pageNum gt 1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%--gt 等价于 &amp;lt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(1)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;[首页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 首页 = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.pageNum&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;1&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[上一页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 上一页 = 当前页 - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 添加动态显示条  --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot; readability=&quot;2&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:iterator&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;begin&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.start&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;end&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.end&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;var&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;num&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;num&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#num&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:iterator&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;test&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#pageBean.pageNum lt #pageBean.totalPage&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%--lt 等价于 &amp;gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.pageNum&lt;/span&gt; + &lt;span class=&quot;hljs-attr&quot;&gt;1&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[下一页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 下一页 = 当前页 + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;javascript:void(0)&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;showPage(&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;pageBean.totalPage&lt;/span&gt;&quot;/&amp;gt;&lt;/span&gt;)&quot;&amp;gt;[尾页]&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&amp;amp;nbsp; &lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- 尾页 --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:if&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;hthis&quot;&gt;&lt;span&gt;&lt;strong&gt;十一、this小案例&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/05.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;　　Parent.java
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs cs&quot; readability=&quot;4&quot;&gt;package com.itheima.testthis;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Parent&lt;/span&gt; {&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;init&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;1 parent init&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.demo();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;demo&lt;/span&gt;() &lt;/span&gt;{&lt;br/&gt;System.&lt;span class=&quot;hljs-keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;2 parent demo&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　Son.java&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;6&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.testthis;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Son&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Parent&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.init();&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;3 son init&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.demo();&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;System.out.println(&lt;span class=&quot;hljs-string&quot;&gt;&quot;4 son demo&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　TestThis.java&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;4&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.testthis;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;TestThis&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;Son son = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Son();&lt;br/&gt;son.init();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　测试结果：&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs php&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;parent&lt;/span&gt; init&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; son demo&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; son init&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt; son demo&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;hbasedao&quot;&gt;&lt;span&gt;&lt;strong&gt;十二、BaseDao&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;以前的做法：&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/06.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;现在的做法：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/07.png&quot; alt=&quot;&quot;/&gt;&lt;pre&gt;
&lt;code class=&quot;hljs&quot;&gt;    1. 将Dao层通用的方法进行统一实现。&lt;br/&gt;2. 之后在dao层使用dao接口，即StaffDao。&lt;br/&gt;3. StaffDao接口，需要继承 BaseDao接口，从而对外可以提供多个方法，即可以直接使用BaseDao的方法 + 自己特有的方法。&lt;br/&gt;4. BaseDaoImpl实现类，需要继承 HibernateDaoSupport，从而可以调用HibernateTemplate，相当于之前直接编写dao实现类。同时需要实现BaseDao接口，从而将公共内容都完成。&lt;br/&gt;5. StaffDaoImpl实现类，需要继承 BaseDaoImpl实现类，从而所有的公共内容都可以使用了。同时需要实现StaffDao接口，从而完成特有的功能。&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;示例代码如下：&lt;br/&gt;　　BaseDao.java&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.base;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDao&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;saveOrUpdate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt;&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;hljs-title&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(java.io.Serializable id)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　BaseDaoImpl.java&lt;/p&gt;
&lt;pre readability=&quot;17&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;28&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.base.impl;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.io.Serializable;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.lang.reflect.ParameterizedType;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; org.springframework.orm.hibernate3.support.HibernateDaoSupport;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.base.BaseDao;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDaoImpl&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;HibernateDaoSupport&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDao&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; Class&amp;lt;?&amp;gt; beanClass;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDaoImpl&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ParameterizedType parameterizedType = (ParameterizedType) &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getClass().getGenericSuperclass();&lt;br/&gt;beanClass = (Class&amp;lt;?&amp;gt;) parameterizedType.getActualTypeArguments()[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().save(t);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().update(t);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().delete(t);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;saveOrUpdate&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(T t)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().saveOrUpdate(t);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;hljs-title&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Serializable id)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; (T) &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().get(beanClass, id);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;T&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().find(&lt;span class=&quot;hljs-string&quot;&gt;&quot;from&quot;&lt;/span&gt; + beanClass.getName());&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;以Staff进行举例：&lt;br/&gt;　　StaffDao.java&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;6&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.staff.dao;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.base.BaseDao;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.staff.domain.CrmStaff;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;StaffDao&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDao&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;CrmStaff&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; CrmStaff &lt;span class=&quot;hljs-title&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String loginName, String loginPwd)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　StaffDaoImpl.java&lt;/p&gt;
&lt;pre readability=&quot;9.5&quot;&gt;
&lt;code class=&quot;hljs dart&quot; readability=&quot;13&quot;&gt;package com.itheima.crm.staff.dao.impl;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.base.impl.BaseDaoImpl;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.staff.dao.StaffDao;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.staff.domain.CrmStaff;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)&lt;br/&gt;public &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;StaffDaoImpl&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseDaoImpl&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;CrmStaff&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;StaffDao&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;public CrmStaff find(&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; loginName, &lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt; loginPwd) {&lt;br/&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;List&lt;/span&gt;&amp;lt;CrmStaff&amp;gt; allStaff = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getHibernateTemplate().find(&lt;span class=&quot;hljs-string&quot;&gt;&quot;from CrmStaff where loginName=? and loginPwd=?&quot;&lt;/span&gt;, loginName, loginPwd);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (allStaff.size() == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; allStaff.&lt;span class=&quot;hljs-keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;null&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;hbaseaction&quot;&gt;&lt;span&gt;&lt;strong&gt;十三、BaseAction&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs&quot;&gt;主要思想：&lt;br/&gt;1、封装数据&lt;br/&gt;2、让Spring一下子注入多个service&lt;br/&gt;3、分页的数据&lt;br/&gt;4、简化值栈操作&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　BaseAction.java&lt;/p&gt;
&lt;pre readability=&quot;26&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;46&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.base;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.lang.reflect.ParameterizedType;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.coursetype.service.CourseTypeService;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.department.service.DepartmentService;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.post.service.PostService;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.staff.service.StaffService;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.opensymphony.xwork2.ActionContext;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.opensymphony.xwork2.ActionSupport;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.opensymphony.xwork2.ModelDriven;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseAction&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ActionSupport&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ModelDriven&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; T t;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;hljs-title&quot;&gt;getModel&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; t;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseAction&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {&lt;br/&gt;ParameterizedType parameterizedType =  (ParameterizedType) &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getClass().getGenericSuperclass();&lt;br/&gt;Class&amp;lt;T&amp;gt; clazz = (Class&amp;lt;T&amp;gt;) parameterizedType.getActualTypeArguments()[&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;];&lt;br/&gt;t = clazz.newInstance();&lt;br/&gt;} &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; RuntimeException(e); &lt;br/&gt;}&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; StaffService staffService;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setStaffService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(StaffService staffService)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.staffService = staffService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; StaffService &lt;span class=&quot;hljs-title&quot;&gt;getStaffService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; staffService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; PostService postService;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setPostService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(PostService postService)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.postService = postService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; PostService &lt;span class=&quot;hljs-title&quot;&gt;getPostService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; postService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; DepartmentService departmentService;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setDepartmentService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(DepartmentService departmentService)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.departmentService = departmentService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; DepartmentService &lt;span class=&quot;hljs-title&quot;&gt;getDepartmentService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; departmentService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; CourseTypeService courseTypeService;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setCourseTypeService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(CourseTypeService courseTypeService)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.courseTypeService = courseTypeService;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; CourseTypeService &lt;span class=&quot;hljs-title&quot;&gt;getCourseTypeService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; courseTypeService;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setPageNum&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageNum)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageNum = pageNum;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPageNum&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageNum;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;; &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setPageSize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; pageSize)&lt;/span&gt; &lt;/span&gt;{ &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.pageSize = pageSize;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;getPageSize&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; pageSize;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(Object o)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ActionContext.getContext().getValueStack().push(o);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Object o)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ActionContext.getContext().getValueStack().set(key, o);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ActionContext.getContext().put(key, value);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;putSession&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ActionContext.getContext().getSession().put(key, value);&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;putApplication&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String key, Object value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;ActionContext.getContext().getApplication().put(key, value);&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;h-1&quot;&gt;&lt;span&gt;&lt;strong&gt;十四、上传和下载&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;h141&quot;&gt;&lt;span&gt;&lt;strong&gt;14.1、班级列表的查询&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs php&quot;&gt;思路：&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt; ClassesDao / ClassesDaoImpl --&amp;gt; 继承BaseDao / BaseDaoImpl&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;2.&lt;/span&gt; service&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;3.&lt;/span&gt; spring配置，完善BaseAction&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;4.&lt;/span&gt; ClassesAction --&amp;gt; 继承BaseAction&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;5.&lt;/span&gt; left.jsp --&amp;gt; struts.xml/struts-classes.xml --&amp;gt; listClass.jsp&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1、&lt;br/&gt;　　ClassesDao.java&lt;/p&gt;
&lt;pre readability=&quot;5&quot;&gt;
&lt;code class=&quot;hljs css&quot; readability=&quot;4&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.classes&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dao&lt;/span&gt;;&lt;p&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.base&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.BaseDao&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.classes&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.domain&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.CrmClasses&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;ClassesDao&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;BaseDao&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;CrmClasses&lt;/span&gt;&amp;gt; {&lt;/p&gt;&lt;p&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　ClassesDaoImpl.java&lt;/p&gt;
&lt;pre readability=&quot;5.5&quot;&gt;
&lt;code class=&quot;hljs css&quot; readability=&quot;5&quot;&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.classes&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dao&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.impl&lt;/span&gt;;&lt;p&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.base&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.impl&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.BaseDaoImpl&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.classes&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.dao&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.ClassesDao&lt;/span&gt;;&lt;br/&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.itheima&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.crm&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.classes&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.domain&lt;/span&gt;&lt;span class=&quot;hljs-selector-class&quot;&gt;.CrmClasses&lt;/span&gt;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;ClassesDaoImpl&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;BaseDaoImpl&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-selector-tag&quot;&gt;CrmClasses&lt;/span&gt;&amp;gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-selector-tag&quot;&gt;ClassesDao&lt;/span&gt; {&lt;/p&gt;&lt;p&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、&lt;br/&gt;　　ClassesService.java&lt;/p&gt;
&lt;pre readability=&quot;6&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;6&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.classes.service;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.classes.domain.CrmClasses;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ClassesService&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;CrmClasses&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　ClassesServiceImpl.java&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;10&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.classes.service.impl;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.classes.dao.ClassesDao;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.classes.domain.CrmClasses;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.classes.service.ClassesService;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ClassesServiceImpl&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ClassesService&lt;/span&gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ClassesDao classesDao;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setClassesDao&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ClassesDao classesDao)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.classesDao = classesDao;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;CrmClasses&amp;gt; &lt;span class=&quot;hljs-title&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.classesDao.findAll();&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3、&lt;br/&gt;　　applicationContext.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;resource&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;applicationContext-classess.xml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　applicationContext-classess.xml&lt;/p&gt;
&lt;pre readability=&quot;8&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;10&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:aop&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/aop&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:tx&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/tx&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xmlns:context&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-attr&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://www.springframework.org/schema/beans &lt;br/&gt;http://www.springframework.org/schema/beans/spring-beans.xsd&lt;br/&gt;http://www.springframework.org/schema/tx &lt;br/&gt;http://www.springframework.org/schema/tx/spring-tx.xsd&lt;br/&gt;http://www.springframework.org/schema/aop &lt;br/&gt;http://www.springframework.org/schema/aop/spring-aop.xsd&lt;br/&gt;http://www.springframework.org/schema/context &lt;br/&gt;http://www.springframework.org/schema/context/spring-context.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesDao&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.crm.classes.dao.impl.ClassesDaoImpl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionFactory&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;sessionFactory&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesService&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.crm.classes.service.impl.ClassesServiceImpl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesDao&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesDao&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;bean&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　BaseAction.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cpp&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; ClassesService classesService;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setClassesService&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(ClassesService classesService)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.classesService = classesService;&lt;br/&gt;}&lt;br/&gt;......&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、&lt;br/&gt;　　ClassesAction.java&lt;/p&gt;
&lt;pre readability=&quot;7&quot;&gt;
&lt;code class=&quot;hljs kotlin&quot; readability=&quot;8&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; com.itheima.crm.classes.web.action;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.base.BaseAction;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; com.itheima.crm.classes.domain.CrmClasses;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ClassesAction&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;BaseAction&lt;/span&gt;&amp;lt;&lt;span class=&quot;hljs-type&quot;&gt;CrmClasses&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String findAll() {&lt;br/&gt;List&amp;lt;CrmClasses&amp;gt; allClasses = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getClassesService().findAllClasses();&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;allClasses&quot;&lt;/span&gt;, allClasses);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;findAll&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5、&lt;br/&gt;　　/day36_06_Spring_crm/WebRoot/WEB-INF/pages/frame/left.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cs&quot;&gt;        d.&lt;span class=&quot;hljs-keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;'010301'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'0103'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'班级管理'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'${pageContext.request.contextPath}/classesAction_findAll'&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;''&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;'right'&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　struts.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;struts/struts-classes.xml&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;include&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　struts-classes.xml&lt;/p&gt;
&lt;pre readability=&quot;6.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;7&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;lt;!DOCTYPE struts PUBLIC&lt;br/&gt;&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;&lt;br/&gt;&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;struts&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;cla&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;namespace&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;extends&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;common&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesAction_*&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.crm.classes.web.action.ClassesAction&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;{1}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;findAll&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/WEB-INF/pages/classes/listClass.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;action&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;package&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;struts&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　/day36_06_Spring_crm/WebRoot/WEB-INF/pages/classes/listClass.jsp&lt;/p&gt;
&lt;pre readability=&quot;7.5&quot;&gt;
&lt;code class=&quot;hljs xml&quot; readability=&quot;9&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:iterator&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;allClasses&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;status&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;vs&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&amp;lt;s:property value=&quot;&lt;/span&gt;#&lt;span class=&quot;hljs-attr&quot;&gt;vs.even&lt;/span&gt; ? '&lt;span class=&quot;hljs-attr&quot;&gt;tabtd2&lt;/span&gt;' &lt;span class=&quot;hljs-attr&quot;&gt;:&lt;/span&gt; '&lt;span class=&quot;hljs-attr&quot;&gt;tabtd1&lt;/span&gt;'&quot;/&amp;gt;&lt;/span&gt;&quot;&amp;gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;courseType.courseName&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:date&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;beginTime&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy-MM--dd&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:date&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;endTime&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;format&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;yyyy-MM--dd&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;status&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;totalCount&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;upgradeCount&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;changeCount&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/pages/classesm/addOrEditClass.jsp&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/images/button/modify.gif&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;img&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/pages/classesm/showClass.jsp&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/images/button/modify.gif&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;img&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;center&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;上次上传时间：2015-04-02&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;   &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/pages/classesm/uploadClass.jsp&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;上传&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;${pageContext.request.contextPath}/pages/classesm/downloadClass&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;下载&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:iterator&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h142id&quot;&gt;&lt;span&gt;&lt;strong&gt;14.2、通过班级id查询班级详情&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　ClassesService.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cpp&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; CrmClasses &lt;span class=&quot;hljs-title&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String classesId)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　ClassesServiceImpl.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; CrmClasses findById(String classesId) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.classesDao.findById(classesId);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　ClassesAction.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs kotlin&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String uploadUI() {&lt;br/&gt;CrmClasses findClasses = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getClassesService().findById(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getModel().getClassesId());&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.push(findClasses);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadUI&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　struts-classes.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;            &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadUI&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/WEB-INF/pages/classes/uploadClass.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　listClass.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;            &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:a&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;namespace&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesAction_uploadUI&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesId&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesId&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:param&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%--因为上传文件之前需要通过id查询班级详情&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;--&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;上传&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　uploadClass.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;88%&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;emp_table&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:80%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;120&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;课程类别：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;courseType.courseName&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;班级：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:property&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;name&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;上次上传时间：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:date&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadTime&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;选择课表：&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;colspan&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;schedule&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;h143&quot;&gt;&lt;span&gt;&lt;strong&gt;14.3、文件上传&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs java&quot;&gt;    &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;. 先通过班级id查询班级详情，如上&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;. 替换表单 &lt;br/&gt;&amp;lt;form action=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/crm2/classesm/classAction_upload.action&quot;&lt;/span&gt; method=&lt;span class=&quot;hljs-string&quot;&gt;&quot;post&quot;&lt;/span&gt; enctype=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;&amp;lt;input type=&lt;span class=&quot;hljs-string&quot;&gt;&quot;file&quot;&lt;/span&gt; name=&lt;span class=&quot;hljs-string&quot;&gt;&quot;schedule&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;. 编写action类，struts已经把文件上传功能都完成了，我们只需要把需要的东西拿来就可以了。&lt;br/&gt;我们需要希望struts把内容注入给我们，则就在action类中提供需要的字段，再提供setter方法即可。&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; File schedule; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String scheduleFileName; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String scheduleContentType; &lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;. 将课表保存到硬盘，将课表的文件路径、文件名称、更新时间，更新到数据库。&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;. struts中拦截器的设置，因为我们上传的是课表。设置允许上传的文件类型。&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;. 文件上传不成功。ClassesAction类中使用注解&lt;span class=&quot;hljs-meta&quot;&gt;@InputConfig&lt;/span&gt; 开发，struts-classes.xml中添加相应的配置。&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@InputConfig&lt;/span&gt;(resultName=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadInput&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;. 文件上传不成功时的错误信息的国际化显示。&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;1、&lt;/p&gt;
&lt;p&gt;　　uploadClass.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;namespace&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classAction_upload.action&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:file&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;schedule&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;2、&lt;br/&gt;　　ClassesAction.java&lt;/p&gt;
&lt;pre readability=&quot;10.5&quot;&gt;
&lt;code class=&quot;hljs java&quot; readability=&quot;15&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; File schedule; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String scheduleFileName; &lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;private&lt;/span&gt; String scheduleContentType; &lt;p&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setSchedule&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(File schedule)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.schedule = schedule;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setScheduleFileName&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String scheduleFileName)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.scheduleFileName = scheduleFileName;&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;setScheduleContentType&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(String scheduleContentType)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.scheduleContentType = scheduleContentType;&lt;br/&gt;}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@InputConfig&lt;/span&gt;(resultName=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadInput&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;String parentDir = ServletActionContext.getServletContext().getRealPath(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/WEB-INF/upload&quot;&lt;/span&gt;);&lt;br/&gt;String fileName = MyStringUtils.getUUID();&lt;br/&gt;FileUtils.copyFile(schedule, &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; File(parentDir, fileName));&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getModel().setUploadPath(&lt;span class=&quot;hljs-string&quot;&gt;&quot;/WEB-INF/upload&quot;&lt;/span&gt; + fileName);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getModel().setUploadFilename(scheduleFileName);&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getModel().setUploadTime(&lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getClassesService().updateUpload(&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.getModel());&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;upload&quot;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/p&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3、&lt;br/&gt;　　ClassesService.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs cpp&quot;&gt;    &lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;updateUpload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(CrmClasses classes)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　ClassesServiceImpl.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs java&quot;&gt;    &lt;span class=&quot;hljs-meta&quot;&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;updateUpload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(CrmClasses classes)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;CrmClasses findClasses = &lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.classesDao.findById(classes.getClassesId());&lt;br/&gt;findClasses.setUploadFilename(classes.getUploadFilename());&lt;br/&gt;findClasses.setUploadPath(classes.getUploadPath());&lt;br/&gt;findClasses.setUploadTime(classes.getUploadTime());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　更新页面的表单需要添加隐藏字段&lt;br/&gt;　　uploadClass.jsp&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:form&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;namespace&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesAction_upload.action&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;enctype&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;%--添加隐藏字段，因为上传表单的时候，需要先根据id进行查询&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;--&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:hidden&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;classesId&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;%{classesId}&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:hidden&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;88%&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;emp_table&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;width:80%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;4、&lt;br/&gt;　　struts中拦截器的设置，因为我们上传的是课表。设置允许上传的文件类型。&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;        &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;interceptors&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;interceptor&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;loginInterceptor&quot;&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;com.itheima.crm.web.interceptor.LoginInterceptor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;interceptor&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;interceptor-stack&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;loginStack&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;interceptor-ref&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;defaultStack&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;fileUpload.allowedExtensions&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;.xls, .xlsx&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;interceptor-ref&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;interceptor-ref&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;loginInterceptor&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;excludeMethods&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;login&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;interceptor-ref&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;interceptor-stack&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;5、&lt;br/&gt;　　文件上传不成功时的页面。使用注解@InputConfig&lt;br/&gt;　　ClassesAction.java&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs java&quot;&gt;            &lt;br/&gt;&lt;span class=&quot;hljs-meta&quot;&gt;@InputConfig&lt;/span&gt;(resultName=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadInput&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;hljs-title&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　struts-classes.xml&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs xml&quot;&gt;            &lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;uploadInput&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;/WEB-INF/pages/error.jsp&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;6、&lt;br/&gt;　　文件上传不成功时的错误信息的国际化显示。如下图所示：&lt;br/&gt;　　界面不友好&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/08.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;　　在error.jsp中，添加错误信息提示
&lt;pre&gt;
&lt;code class=&quot;hljs vbscript-html&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;color&lt;/span&gt;=&lt;span class=&quot;hljs-string&quot;&gt;&quot;#f00&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;系统繁忙，请稍后重试&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;s:fielderror&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;s:fielderror&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- &amp;lt;s:actionerror/&amp;gt;&amp;lt;/br&amp;gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class=&quot;vbscript&quot;&gt;&amp;lt;%-- &amp;lt;s:actionmessage/&amp;gt;&amp;lt;/br&amp;gt; --%&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;br/&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;font&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;　　界面还是不友好&lt;/p&gt;
&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/09.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;　　需要进行国际化显示，在com.itheima.crm.classes.web.action包中新建ClassesAction.properties文件，&lt;br/&gt;　　打开：\WEB-INF\lib\struts2-core-2.3.15.3.jar/org/apache/struts2/struts-messages.properties该文件，&lt;br/&gt;　　复制 &lt;code&gt;struts.messages.error.file.extension.not.allowed=File extension not allowed: {0} &quot;{1}&quot; &quot;{2}&quot; {3}&lt;/code&gt;&lt;br/&gt;　　该句代码至ClassesAction.properties文件中，进行修改，如下图所示：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/10.png&quot; alt=&quot;&quot;/&gt;&lt;br/&gt;　　效果如下：&lt;br/&gt;&lt;img title=&quot;&quot; src=&quot;http://pe6giqs6o.bkt.clouddn.com/11.png&quot; alt=&quot;&quot;/&gt;&lt;h3 id=&quot;h143-1&quot;&gt;&lt;span&gt;&lt;strong&gt;14.3、文件下载&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;　　struts.xml 的 result 中提供stream类型&lt;br/&gt;　　　　inputName 设置 InputStream 获得属性值，需要提供getter方法&lt;br/&gt;　　　　contentDisposition 设置 attachment;filename=${imageFileName} 获得文件名称&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 15:39:00 +0000</pubDate>
<dc:creator>黑泽明军</dc:creator>
<og:description>十、课程类别的分页（含条件） 10.1、流程分析 10.2、PageBean 实现分析 PageBean.java package com.itheima.crm.page;import</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/chenmingjun/p/9551705.html</dc:identifier>
</item>
<item>
<title>给有C或C++基础的Python入门 ：Python Crash Course  5 if语句 - mpeter</title>
<link>http://www.cnblogs.com/mpeter/p/9551569.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/mpeter/p/9551569.html</guid>
<description>&lt;p&gt;本章就是Pyhon版的 if语句。原理大家都懂，就不一一说说明了。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　值得注意的两点：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　1. 在每个if类语句结尾必须加上符号“：”。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　2. 注意，在python中是否缩进代表与上一行代码是否有关。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面分析一下的几段代码：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一，简单if语句：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; requested_toppings = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;mushrooms&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;onions&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pineapple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mushrooms&lt;/span&gt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt; requested_toppings:
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Yes&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;No&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;声明并赋值一个列表 -&amp;gt; 用 if + in 语句（&lt;span&gt;相当于枚举并比较列表元素，等同于: for(int i = 0; i &amp;lt; n; ++I) if(a == b) return ture;&lt;/span&gt;）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二，if-else语句&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代码解释：若大于且不等于18岁则付￥10，否则付￥5。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; age = 18
&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; age &amp;lt; 18&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Your admission cost is $5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Your admission cosr is $10&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有C基础的应该不用多说。。。一模一样。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三，if-elif-else语句&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;代码解释：若小于且不等于4岁则付￥0，若大于4岁且小于不等于18岁则付￥5， 否则付￥10。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; age = 18
&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; age &amp;lt; 4&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Yout admission cost is $0&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;elif&lt;/span&gt; age &amp;lt; 18&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Your admission cost is $5&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Your admission cosr is $10&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;唯一要注意的是，才Python中和linux付shell一样，else if 被 缩成了elif。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;四，使用if语句处理列表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;1. 检查特殊元素&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;在for循环中加一个if语句判断，样例代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; names = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;peter&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mina&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mike&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; name &lt;span&gt;in&lt;/span&gt;&lt;span&gt; names:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; name == &lt;span&gt;'&lt;/span&gt;&lt;span&gt;peter&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;print&lt;/span&gt;(name.title() + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; is the host!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)    
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         &lt;span&gt;print&lt;/span&gt;(name.title() + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; is not the host&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　2. 确定列表不是空的&lt;/p&gt;
&lt;p&gt;大家知道if(x == 0) 返回的是false。 为空也是如此。这个就是利用这个条件进行判断。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
test =&lt;span&gt; []
&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; test:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;It is not empty&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;It is empty&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　3.使用多个列表&lt;/p&gt;
&lt;p&gt;实际上就是：&lt;span&gt;枚举总列表并用if语句判断元素是否在分列表中。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; names = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;peter&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mina&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;katherine&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mike&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; 
&lt;span&gt;3&lt;/span&gt; names_in = [&lt;span&gt;'&lt;/span&gt;&lt;span&gt;peter&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;mina&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; 
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; name &lt;span&gt;in&lt;/span&gt;&lt;span&gt; names:
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt; name &lt;span&gt;in&lt;/span&gt;&lt;span&gt; names_in:
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;         &lt;span&gt;print&lt;/span&gt;(name.title() + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; is in our lise!&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt;         &lt;span&gt;print&lt;/span&gt;(name.title() + &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; is not in our list&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　&lt;strong&gt;To be continued...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如有错误，欢迎评论指正！&lt;/p&gt;

</description>
<pubDate>Tue, 28 Aug 2018 15:38:00 +0000</pubDate>
<dc:creator>mpeter</dc:creator>
<og:description>本章就是Pyhon版的 if语句。原理大家都懂，就不一一说说明了。 值得注意的两点： 1. 在每个if类语句结尾必须加上符号“：”。 2. 注意，在python中是否缩进代表与上一行代码是否有关。 下</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/mpeter/p/9551569.html</dc:identifier>
</item>
<item>
<title>Html5游戏开发-图形与动画（一） - 吃西瓜的星星</title>
<link>http://www.cnblogs.com/zhuxiaoxiao/p/9551697.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhuxiaoxiao/p/9551697.html</guid>
<description>&lt;p&gt;最近研究了一下出来了很久的HTML5，总结了一下，准备来个系列，文中也许有很多问题，欢迎大家指正。&lt;/p&gt;
&lt;h2&gt;Canvas介绍&lt;/h2&gt;
&lt;p&gt;canvas用于在网页中绘制图形的一个元素，具体内容请查看 -&amp;gt; &lt;a title=&quot;canvas介绍&quot; href=&quot;http://www.w3school.com.cn/html5/html_5_canvas.asp&quot; target=&quot;_blank&quot;&gt;HTML5 Canvas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里说些w3school中没有的。&lt;/p&gt;
&lt;h3&gt;立即模式&lt;/h3&gt;
&lt;p&gt;canvas元素是立即模式的图形系统，意味着当你提出要求时，他会立即绘制，然后立即忘记（绘制完成一个对象，就会销毁这个对象）。其它的图形系统（例如：SVG），使用了保留模式的图形系统，就是说绘制时他们会保留一系列将要绘制的对象。正因未Canvas不需要维护这一系列对象，所以Canvas的运行速度要快很多。&lt;/p&gt;
&lt;h3&gt;双缓存机制&lt;/h3&gt;
&lt;p&gt;在上面，我们提到了立即模式，但这里的“立即绘制”并不是大家所谓的立即，此处需要进一步说明。&lt;/p&gt;
&lt;p&gt;在浏览器调用我们定义的绘制方法（假设这个方法是DrawGame）绘制当前动画帧时，Canvas元素并不是立即绘制出你指定的内容。相反，它会创建另一个Canvas元素（我们叫它Canvas2），所有的绘制实际上都在Canvas2中进行。当DrawGame方法返回时，浏览器会通过一个图形操作，复制Canvas2内容到屏幕上，我们将这种技术称为双缓存技术，双缓存技术让动画的实现变得平滑。&lt;/p&gt;
&lt;h3&gt;坐标系统（translate）&lt;/h3&gt;
&lt;p&gt;translate(x,y)这是Canvas元素的一个方法，游戏的背景移动，大多通过该方法来实现。游戏中，我们不会通过频繁对大量元素进行坐标计算来实现对象的滚动，因为这样的计算不仅消耗计算机性能，还增加了代码的维护难度。&lt;/p&gt;
&lt;p&gt;注意：为了不影响后续的绘制，在使用translate(x,y)修改坐标系统后，需要再次调用translate(-x,-y)来恢复坐标系统。&lt;/p&gt;
&lt;p&gt;具体内容请查看 -&amp;gt; &lt;a href=&quot;http://www.w3school.com.cn/html5/canvas_translate.asp&quot; target=&quot;_blank&quot;&gt;HTML5 canvas translate()&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;创建Canvas镜像和恢复Canvas&lt;/h3&gt;
&lt;p&gt;在进行动画绘制时，我们会经常的对Canvas元素的绘图环境（context）进行修改，例如strokeStyle，lineWidth等。这些修改操作都是永久的，也就意味着对他们的修改将会影响接下来任何你在Canvas元素的图形操作。那么如何让这些操作只是临时有效呢？这里我们可以使用save()和restore()方法对当前Canvas元素的绘图环境状态创建镜像和恢复。任何写在这两个方法间的环境属性修改，在执行restore后，都会恢复成save时的状态。&lt;/p&gt;
&lt;p&gt;注意：save()和restore()需要成对出现，也就是有save，就要有restore。&lt;/p&gt;

&lt;h2&gt;实现平滑的HTML5动画&lt;/h2&gt;
&lt;p&gt;所谓的动画，说白了就是一张一张的图片不断的连续更换。所以，通过编程实现动画也就是不断的通过替换图片，来达到动画的效果。&lt;/p&gt;
&lt;p&gt;但是，这种不断地替换，当然不能使用死循环while(true)来实现，传统的方法是使用setTimeout()和setInterval()方法，这两个方法虽然都提供了毫秒级的精确度，但实际上，却达不到毫秒级（参考此处：&lt;a href=&quot;https://yq.aliyun.com/ziliao/64850&quot; target=&quot;_blank&quot;&gt;setTimeout精度测试&lt;/a&gt;、&lt;a href=&quot;https://blog.csdn.net/SunshinePengChao/article/details/44617143&quot; target=&quot;_blank&quot;&gt;setInterval精度测试&lt;/a&gt;）。所以为了保证动画的平滑度，我们不应该继续使用setTimeout和setInterval方法来实现对时间有着苛刻要求的动画，用什么来代替？我们在下一节讲到。&lt;/p&gt;
&lt;h3&gt;requestAnimationFrame()方法&lt;/h3&gt;
&lt;p&gt;在w3c中的Timing Control for Script-based Animations（参考此处 -&amp;gt; &lt;a href=&quot;https://www.w3.org/TR/animation-timing/&quot; target=&quot;_blank&quot;&gt;w3c-Script-based Animations&lt;/a&gt;）说明中，定义了一个requestAnimationFrame()窗口对象的方法。不同于setTimeout和setInterval方法，requestAnimationFrame是专门用来实现动画的，它使用浏览器的时间间隔进行绘制，不会掉帧。&lt;/p&gt;
&lt;p&gt;这里需要注意的是，requestAnimationFrame方法在窗体没激活或者页签不可见的时候，动画会暂停。&lt;/p&gt;
&lt;p&gt;下面是盗的图，支持requestAnimationFrame方法的浏览器及版本（来源：&lt;a href=&quot;https://www.aliyun.com/jiaocheng/644857.html&quot; target=&quot;_blank&quot;&gt;HTML5 requestAnimationFrame( ) 动画API&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/614311/201808/614311-20180828230516260-801202284.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;javascript实例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; animate(now)
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    DrawGame(now);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    requestAnimationFrame(animate);
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;...
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; requestAnimationFrame(animate);
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; &lt;/h2&gt;
&lt;h2&gt;制作基于时间的运动&lt;/h2&gt;
&lt;p&gt;游戏帧速率是不稳定的，也许此时能够60帧/秒，下一刻也许就成了10帧/秒。游戏帧的速率是变化的，我们不能让游戏帧的速率影像到游戏中物体运动的速率，例如：人物的运动，背景的滚动，子弹的速度等等。所以，游戏中物体的运动必须是基于时间的，并且仅仅依赖于时间（例如：像素/秒），而不是动画帧速率。&lt;/p&gt;
&lt;p&gt;在上一节的实例中，我们可以发现animate有个参数是now，它代表当前绘制的时间，既然有了这个参数，我们就能知道两次时间间隔，从而计算出运动的距离。&lt;/p&gt;
&lt;p&gt;javascript实例：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; speed = 50&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; lastAnimationTime = &lt;span&gt;new&lt;/span&gt;&lt;span&gt; Date();
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; offsetX = 0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; SetBackgroundOffsetX(now)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     offsetX += speed * (now - lastAnimationTime)/1000
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;    ...
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;如果一直加下去，背景会慢慢移出屏幕，下面的代码自己写吧&lt;/span&gt;
&lt;span&gt;9&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;结尾&lt;/h2&gt;
&lt;p&gt;到这里，关于图形与动画的内容就差不多结束了，内容不多，代码很少，但是我觉得已经够了，毕竟大部分的基础知识都能在网上找到哈哈。&lt;/p&gt;
&lt;p&gt;本人不是HTML5大佬，如文中有问题，请大家帮忙指正，谢谢大家~&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 15:36:00 +0000</pubDate>
<dc:creator>吃西瓜的星星</dc:creator>
<og:description>最近研究了一下出来了很久的HTML5，总结了一下，准备来个系列，文中也许有很多问题，欢迎大家指正。 Canvas介绍 canvas用于在网页中绘制图形的一个元素，具体内容请查看 -&gt; </og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhuxiaoxiao/p/9551697.html</dc:identifier>
</item>
<item>
<title>HashMap 源码解析(一)之使用、构造以及计算容量 - 阿进的写字台</title>
<link>http://www.cnblogs.com/homejim/p/9551659.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/homejim/p/9551659.html</guid>
<description>&lt;p&gt;HashMap 是基于哈希表的 Map 接口的实现。 它的使用频率是非常的高。&lt;/p&gt;
&lt;h2 id=&quot;集合和映射&quot;&gt;集合和映射&lt;/h2&gt;
&lt;p&gt;作为集合框架中的一员，在深入之前， 让我们先来简单了解一下集合框架以及 HashMap 在集合框架中的位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180828232232556?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzEzOTE5Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;集合框架&quot;/&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;集合框架分为两种， 即集合(Collections)和映射(Map)&lt;/li&gt;
&lt;li&gt;HashMap 是 AbstractMap 的子类。而 AbstractMap 实现了 Map， 因此它有 Map 的特性。&lt;/li&gt;
&lt;li&gt;通过Map接口， 可以生成集合(Collections)。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;那集合(Collections)和映射(Map)是什么关系呢？&lt;br/&gt;从图中我们可以看出， Map 和 Collection 是一种并行的关系。可以这么理解：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;集合（Collectin)是一组&lt;strong&gt;单独&lt;/strong&gt;的元素， 通常应用了某种规则。 List 是按特定顺序来存储元素， 而 Set 存储的是不重复的元素。&lt;/li&gt;
&lt;li&gt;映射(Map)是一系列 “Key-Value” 的集合。&lt;/li&gt;
&lt;li&gt;在 Map 中可以通过一定的方法产生 Collection。&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;hashmap-特点&quot;&gt;HashMap 特点&lt;/h2&gt;
&lt;p&gt;很多时候， 我们都说， HashMap 具有如下的特点：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;根据键的 HashCode 存储数据， 具有很快的访问速度；&lt;/li&gt;
&lt;li&gt;此类不保证映射的顺序，特别是它不保证该顺序恒久不变；&lt;/li&gt;
&lt;li&gt;允许键为 null, 但最多一条记录；&lt;/li&gt;
&lt;li&gt;允许多条记录的值为 null；&lt;/li&gt;
&lt;li&gt;线程不安全。&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;也许你现在对这些特点的印象还不够深刻， 在后续的源码解析过程中， 可以一一的见识庐山真面目。&lt;/p&gt;

&lt;p&gt;HashMap 的使用应该算是很简单的。有以下的方法时使用频率相对来说最高的。&lt;/p&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;8&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;V put(K key, V value)&lt;/td&gt;
&lt;td&gt;将指定的值与此映射中的指定键关联&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;3&quot;&gt;&lt;td&gt;V get(Object key)&lt;/td&gt;
&lt;td&gt;返回指定键所映射的值；如果对于该键来说，此映射不包含任何映射关系，则返回 null。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;int size()&lt;/td&gt;
&lt;td&gt;返回此映射中的键-值映射关系数。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;V remove(Object key)&lt;/td&gt;
&lt;td&gt;从此映射中移除指定键的映射关系（如果存在）。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;5&quot;&gt;&lt;td&gt;Set&amp;lt;Map.Entry&amp;lt;K,V&amp;gt;&amp;gt; entrySet()&lt;/td&gt;
&lt;td&gt;返回此映射所包含的映射关系的 Set 视图。&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;Set&lt;/td&gt;
&lt;td&gt;返回此映射中所包含的键的 Set 视图。&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;以下为一个示例&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
public void testHashMap() {
    HashMap&amp;lt;String, String&amp;gt; animals = new HashMap&amp;lt;String, String&amp;gt;();
    animals.put(&quot;Tom&quot;, &quot;Cat&quot;);
    animals.put(&quot;Tedi&quot;, &quot;Dog&quot;);
    animals.put(&quot;Jerry&quot;, &quot;Mouse&quot;);
    animals.put(&quot;Don&quot;, &quot;Duck&quot;);

    // 遍历方法1 键值视图
    System.out.println(&quot;====================KeySet======================&quot;);
    Set&amp;lt;String&amp;gt; names = animals.keySet();
    for (String name:
         names) {
        System.out.println(&quot;KeySet: &quot;+name+&quot; is a &quot; + animals.get(name));
    }

    // 通过 Entry 进行遍历
    System.out.println(&quot;==================Entry========================&quot;);
    Set&amp;lt;Map.Entry&amp;lt;String, String&amp;gt;&amp;gt; entrys= animals.entrySet();
    for(Map.Entry&amp;lt;String, String&amp;gt; entry:entrys){
        System.out.println(&quot;Entry: &quot;+entry.getKey()+&quot; is a &quot; + entry.getValue());
    }
    animals.remove(&quot;Don&quot;);
    // 通过 KeySet Iterator 进行遍历
    System.out.println(&quot;======= KeySet Iterator after remove()=============&quot;);
    Iterator&amp;lt;String &amp;gt; iter = animals.keySet().iterator();
    while (iter.hasNext()) {
        String name = iter.next();
        String pet = animals.get(name);
        System.out.println(&quot; KeySet Iterator : &quot;+name+&quot; is a &quot; + pet);
    }
    animals.clear();
    // 通过 Entry Iterator 进行遍历
    System.out.println(&quot;========== Entry Iterator after clear()==========&quot;);
    Iterator&amp;lt;Map.Entry&amp;lt;String, String&amp;gt;&amp;gt; entryIter = animals.entrySet().iterator();
    while (entryIter.hasNext()) {
        Map.Entry&amp;lt;String, String&amp;gt; animal = entryIter.next();
        System.out.println(&quot; Entry Iterator : &quot;+animal.getKey()+&quot; is a &quot; + animal.getValue());
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;以上的例子对 HashMap 的常用的基本方法进行了使用。&lt;/p&gt;

&lt;h2 id=&quot;相关属性&quot;&gt;相关属性&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;/**
 * 最大容量， 当传入容量过大时将被这个值替换
 */
static final int MAXIMUM_CAPACITY = 1 &amp;lt;&amp;lt; 30;
/**
 *  HashMap的扩容阈值(=负载因子*table的容量)，在HashMap中存储的Node键值对超过这个数量时，自动扩容容量为原来的二倍
 */
int threshold;
/**
 * 这就是经常提到的负载因子
 */
final float loadFactor;    &lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;构造方法&quot;&gt;构造方法&lt;/h2&gt;
&lt;p&gt;HashMap 的构造方法有四个函数， 第四个暂且先不讲。 前三个基本最后基本都是为了初始化 initialCapacity 和 loadFactor 的。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public HashMap() {
    this.loadFactor = DEFAULT_LOAD_FACTOR; 
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;该方法是我们最常用的， 将 loadFactor 和 其余参数定义为默认的值。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public HashMap(int initialCapacity) {
    this(initialCapacity, DEFAULT_LOAD_FACTOR);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当我们需要明确指出我们的容量和负载因子时， 使用该函数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public HashMap(int initialCapacity) {
    this(initialCapacity, DEFAULT_LOAD_FACTOR);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;当我们需要明确指出我们的容量和负载因子时， 使用该函数。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public HashMap(int initialCapacity, float loadFactor) {
    // 初始化的容量不能小于0
    if (initialCapacity &amp;lt; 0)
        throw new IllegalArgumentException(&quot;Illegal initial capacity: &quot; +
                                           initialCapacity);
    // 初始化容量不大于最大容量
    if (initialCapacity &amp;gt; MAXIMUM_CAPACITY)
        initialCapacity = MAXIMUM_CAPACITY;
    // 负载因子不能小于 0
    if (loadFactor &amp;lt;= 0 || Float.isNaN(loadFactor))
        throw new IllegalArgumentException(&quot;Illegal load factor: &quot; +
                                           loadFactor);
    this.loadFactor = loadFactor;
    this.threshold = tableSizeFor(initialCapacity);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们观察以上的三个构造构造函数， 发现在其中并没有对存储的对象 table 的初始化， 源码中也没有代码块进行初始化或者其他的。其实是延迟到第一次使用时进行初始化， 在 resize() 中进行了初始化。&lt;/p&gt;
&lt;p&gt;在构造函数中，最值得我们深究的就是 tableSizeFor 函数。在初始化时，将这个函数的返回值赋给了 threshold ， 并不是说 threshold 就等于这个值了， 在后续会从新计算 threshold 的&lt;/p&gt;
&lt;h2 id=&quot;tablesizefor-函数&quot;&gt;tableSizeFor 函数&lt;/h2&gt;
&lt;p&gt;该函数是获取大于或等于传入容量 initialCapacity 的2的整数次幂。 试想， 如果我们自己来实现这个函数应该怎么实现呢？&lt;/p&gt;
&lt;h3 id=&quot;一般的算法效率低-不值得借鉴&quot;&gt;一般的算法(效率低， 不值得借鉴)&lt;/h3&gt;
&lt;p&gt;我们要计算比一个数距离最近的二次幂， 大多数人的想法，应该是一次取2的 0 次幂到 31 逐个与当前的数字进行比较， 第一个大于或等于的值就是我们想要的了。函数大致如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;public int getNearestPowerOfTwo(int cap){
    int num=0;
    for (int i = 0; i &amp;lt; 31; i++) {
        if ((num = (1 &amp;lt;&amp;lt; i)) &amp;gt;= cap){
            break;
        }
    }
    return num;
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是我随手写的， 还有很大的改进空间， 在这里就不深究了。&lt;/p&gt;
&lt;h3 id=&quot;tablesizefor-函数算法&quot;&gt;tableSizeFor 函数算法&lt;/h3&gt;
&lt;p&gt;而 HashMap 中的定义如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;static final int tableSizeFor(int cap) {
    int n = cap - 1;
    n |= n &amp;gt;&amp;gt;&amp;gt; 1;
    n |= n &amp;gt;&amp;gt;&amp;gt; 2;
    n |= n &amp;gt;&amp;gt;&amp;gt; 4;
    n |= n &amp;gt;&amp;gt;&amp;gt; 8;
    n |= n &amp;gt;&amp;gt;&amp;gt; 16;
    return (n &amp;lt; 0) ? 1 : (n &amp;gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;我们先不说这个算法的原理， 来看和我之前的函数相比效率。&lt;/p&gt;
&lt;h3 id=&quot;效率比较&quot;&gt;效率比较&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;public void compare(){
    long start = System.currentTimeMillis();
    for (int i = 0; i &amp;lt; (1 &amp;lt;&amp;lt; 30); i++) {
        getNearestPowerOfTwo(i);
    }

    long end = System.currentTimeMillis();
    System.out.println((end-start));

    long start2 = System.currentTimeMillis();
    for (int i = 0; i &amp;lt; (1 &amp;lt;&amp;lt; 30); i++) {
        tableSizeFor(i);
    }

    long end2 = System.currentTimeMillis();
    System.out.println((end2-start2));
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8094&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2453&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是时间上相比是 3.3 倍左右。接下来让我们看看其实现原理。&lt;/p&gt;
&lt;h3 id=&quot;tablesizefor-函数原理&quot;&gt;tableSizeFor 函数原理&lt;/h3&gt;
&lt;h4 id=&quot;核心思想&quot;&gt;核心思想&lt;/h4&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;将该数的低位二进制位全部变为1， 并加1返回。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180828232840202?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzEzOTE5Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;例子&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;低位二进制全部变为1&quot;&gt;低位二进制全部变为1&lt;/h4&gt;
&lt;pre&gt;
&lt;code&gt;int n = cap - 1;
n |= n &amp;gt;&amp;gt;&amp;gt; 1;
n |= n &amp;gt;&amp;gt;&amp;gt; 2;
n |= n &amp;gt;&amp;gt;&amp;gt; 4;
n |= n &amp;gt;&amp;gt;&amp;gt; 8;
n |= n &amp;gt;&amp;gt;&amp;gt; 16;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其原理是：&lt;/p&gt;
&lt;p&gt;首先， 我们忽略最高位之外的所有位数， 看图解说：&lt;br/&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180828232325502?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzEzOTE5Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;原理&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;. 右移 1 位，并与之前的数做或运算。 则紧邻的后 1 位变成了 1. 而此时已经确定了 2 个 1， 因此下一次可以右移2位。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;. 右移 2 位，并与之前的数做或运算， 则紧邻的后 2 也变成了 1. 而此时已经确定了 4 个 1， 因此下一次可以右移 4 位。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;. 右移 4 位，并与之前的数做或运算， 则紧邻的后 4 位也变成了1. 而此时已经确定了8 个 1， 因此下一次可以右移 8 位。&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;依次类推， 最后右移了 31 位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 + 2 + 4 + 8 + 16 = 31;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 int 类型去掉符号位之后就只剩下 31 位了，因此， 右移了 31 位之后可以保证最高位后面的数字都为 1。&lt;/p&gt;
&lt;p&gt;第一步为什么要 n = cap - 1？&lt;/p&gt;
&lt;p&gt;如果不做该操作， 则如传入的 cap 是 2 的整数幂， 则返回值是预想的 2 倍。&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 15:32:00 +0000</pubDate>
<dc:creator>阿进的写字台</dc:creator>
<og:description>主要讲解了 HashMap 的使用和构造， 并详细分析了 tableSizeFor 函数的原理</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/homejim/p/9551659.html</dc:identifier>
</item>
<item>
<title>分享自己写的基于Dapper的轻量级ORM框架~ - oldli</title>
<link>http://www.cnblogs.com/oldli/p/9551606.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/oldli/p/9551606.html</guid>
<description>&lt;p&gt;本项目是一个使用.NET Standard 2.0开发的，基于 Dapper 的轻量级 ORM 框架，包含基本的CRUD以及根据表达式进行一些操作的方法，目前只针对单表，不包含多表连接操作。&lt;br/&gt;github：&lt;a href=&quot;https://github.com/iamoldli/NetSql&quot; class=&quot;uri&quot;&gt;https://github.com/iamoldli/NetSql&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;2.2、安装&lt;/h2&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;Install-Package NetSql&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;创建实体&quot;&gt;2.2、创建实体&lt;/h2&gt;
&lt;p&gt;创建&lt;code&gt;Article&lt;/code&gt;实体类，继承&lt;code&gt;EntityBase&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public class Article : EntityBase
{
    [Column(&quot;Title&quot;)]
    public string Title1 { get; set; }

    public string Summary { get; set; }

    public string Body { get; set; }

    public Category Category { get; set; }

    public int ReadCount { get; set; }

    public bool IsDeleted { get; set; }

    public DateTime CreatedTime { get; set; }
}

public enum Category
{
    Blog,
    Movie
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;EntityBase&lt;/code&gt;是一个定义好的实体基类，包含一个泛型主键标识，默认是 Int 类型的，也可以指定 long 或者 string 类型&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt; public class Article : EntityBase&amp;lt;string&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;定义数据库上下文dbcontext&quot;&gt;2.3、定义数据库上下文(DbContext)&lt;/h2&gt;
&lt;p&gt;数据库上下文我是模仿的 EF，&lt;code&gt;IDbContextOptions&lt;/code&gt;是数据库上下文配置项接口，默认包含了 SqlServer 的实现&lt;code&gt;DbContextOptions&lt;/code&gt;，如果使用的是 MySql 或者 SQLite，需要额外安装对应的扩展包&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;Install-Package NetSql.MySql //MySql&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;Install-Package NetSql.SQLite //SQLite&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这里我定义了一个&lt;code&gt;BlogDbContext&lt;/code&gt;上下文，其中包含一个&lt;code&gt;Articles&lt;/code&gt;数据集&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public class BlogDbContext : DbContext
{
    public BlogDbContext(IDbContextOptions options) : base(options)
    {
    }

    public IDbSet&amp;lt;Article&amp;gt; Articles { get; set; }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;数据集dbset使用说明&quot;&gt;2.4、数据集(DbSet)使用说明&lt;/h2&gt;
&lt;h3 id=&quot;创建数据库上下文实例&quot;&gt;2.4.1、创建数据库上下文实例&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;private readonly BlogDbContext _dbContext;
private readonly IDbSet&amp;lt;Article&amp;gt; _dbSet;

public DbSetTests()
{
    _dbContext = new BlogDbContext(new SQLiteDbContextOptions(&quot;Filename=./Database/Test.db&quot;));
    _dbSet = _dbContext.Set&amp;lt;Article&amp;gt;();

    //预热
    _dbSet.Find().First();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;插入&quot;&gt;2.4.2、插入&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void InsertTest()
{
    var article = new Article
    {
        Title1 = &quot;test&quot;,
        Category = Category.Blog,
        Summary = &quot;这是一篇测试文章&quot;,
        Body = &quot;这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章&quot;,
        ReadCount = 10,
        IsDeleted = true,
        CreatedTime = DateTime.Now
    };

    await _dbSet.InsertAsync(article);

    Assert.True(article.Id &amp;gt; 0);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;批量插入&quot;&gt;2.4.3、批量插入&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public void BatchInsertTest()
{
    var sw = new Stopwatch();
    sw.Start();

    var tran = _dbContext.BeginTransaction();

    for (var i = 0; i &amp;lt; 10000; i++)
    {
        var article = new Article
        {
            Title1 = &quot;test&quot; + i,
            Category = i % 3 == 1 ? Category.Blog : Category.Movie,
            Summary = &quot;这是一篇测试文章&quot;,
            Body = &quot;这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章&quot;,
            ReadCount = 10,
            IsDeleted = i % 2 == 0,
            CreatedTime = DateTime.Now
        };

        _dbSet.InsertAsync(article, tran);
    }

    tran.Commit();

    sw.Stop();

    var s = sw.ElapsedMilliseconds;

    Assert.True(s &amp;gt; 0);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;根据主键删除&quot;&gt;2.4.4、根据主键删除&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public void DeleteTest()
{
    var b = _dbSet.DeleteAsync(3).Result;

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;根据表达式删除&quot;&gt;2.4.5、根据表达式删除&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void DeleteWhereTest()
{
    var b = await _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 10).Delete();

    Assert.True(b);
}

[Fact]
public async void DeleteWhereTest()
{
    var b = await _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 10)
        .Where(m =&amp;gt; m.CreatedTime &amp;gt; DateTime.Now).Delete();

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;修改&quot;&gt;2.4.6、修改&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void UpdateTest()
{
    var article = await _dbSet.Find().First();
    article.Title1 = &quot;修改测试&quot;;

    var b = await _dbSet.UpdateAsync(article);

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;根据表达式修改实体部分属性&quot;&gt;2.4.7、根据表达式修改实体部分属性&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void UpdateWhereTest()
{
    var b = await _dbSet.Find(m =&amp;gt; m.Id == 1000).Update(m =&amp;gt; new Article
    {
        Title1 = &quot;hahahaah&quot;,
        ReadCount = 1000
    });

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;根据主键查询单个实体&quot;&gt;2.4.8、根据主键查询单个实体&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public void GetTest()
{
    var article = _dbSet.GetAsync(100).Result;

    Assert.NotNull(article);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;根据表达式查询单条数据&quot;&gt;2.4.9、根据表达式查询单条数据&lt;/h3&gt;
&lt;p&gt;该方法返回结果集中的第一条数据&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void GetWehreTest()
{
    var article = await _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 100).First();

    Assert.NotNull(article);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;使用表达式&quot;&gt;2.4.10、使用表达式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;IDbSet&lt;/code&gt;的&lt;code&gt;Find&lt;/code&gt;方法会返回一个&lt;code&gt;INetSqlQueryable&lt;/code&gt;对象，这个对象是模仿的 EF 里面的&lt;code&gt;IQueryable&lt;/code&gt;，虽然有些不伦不类，但是是按照适合自己的方式设计的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;INetSqlQueryable&lt;/code&gt;目前包含以下方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Where&lt;/code&gt;&lt;/strong&gt;：用于添加过滤条件&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var query =  _dbSet.Find().Where(m =&amp;gt; m.Id &amp;gt; 1);&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;WhereIf&lt;/code&gt;&lt;/strong&gt;：根据指定条件来添加过滤条件&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var query = _dbSet.Find().WhereIf(id &amp;gt; 1, m =&amp;gt; m.Id &amp;gt; 200);&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;OrderBy&lt;/code&gt;&lt;/strong&gt;：用于添加排序规则&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var query = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 200 &amp;amp;&amp;amp; m.Id &amp;lt; 1000).OrderBy(m =&amp;gt; m.Id, SortType.Desc);&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Limit&lt;/code&gt;&lt;/strong&gt;：该方法包含两个参数&lt;code&gt;skip&lt;/code&gt;和&lt;code&gt;take&lt;/code&gt;，标识跳过 skip 条数据，取 take 条数据&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var query = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 100 &amp;amp;&amp;amp; m.Id &amp;lt; 120).Limit(5, 10);&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/strong&gt;：选择要返回的列&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var query = _dbSet.Find().Select(m =&amp;gt; new { m.Id, m.Title1 }).Limit(0, 10);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;以上方法都是用于构造&lt;code&gt;INetSqlQueryable&lt;/code&gt;的，下面的方法则是执行：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Max&lt;/code&gt;&lt;/strong&gt;：查询最大值&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var maxReadCount = _dbSet.Find().Max(m =&amp;gt; m.ReadCount).Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Min&lt;/code&gt;&lt;/strong&gt;：查询最小值&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var maxReadCount = _dbSet.Find().Min(m =&amp;gt; m.ReadCount).Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Count&lt;/code&gt;&lt;/strong&gt;：查询数量&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var count = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 1000).Count().Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Exists&lt;/code&gt;&lt;/strong&gt;：判断是否存在&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var b = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 1000).Exists().Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;First&lt;/code&gt;&lt;/strong&gt;：获取第一条数据&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var article = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 100 &amp;amp;&amp;amp; m.Id &amp;lt; 120).First().Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Delete&lt;/code&gt;&lt;/strong&gt;：删除数据&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var b = _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 1000).Delete().Result;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;Update&lt;/code&gt;&lt;/strong&gt;：更新数据&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var b = await _dbSet.Find(m =&amp;gt; m.Id == 1000).Update(m =&amp;gt; new Article
{
    Title1 = &quot;hahahaah&quot;,
    ReadCount = 1000
});&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ToList&lt;/code&gt;&lt;/strong&gt;：获取结果集&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;var list = await _dbSet.Find(m =&amp;gt; m.Id &amp;gt; 100 &amp;amp;&amp;amp; m.Id &amp;lt; 120).ToList();&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;特性&quot;&gt;3、特性&lt;/h2&gt;
&lt;h3 id=&quot;表别名以及列名&quot;&gt;表别名以及列名&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Table(&quot;blog_article&quot;)]
public class Article : EntityBase
{
    [Column(&quot;Title&quot;)]
    public string Title1 { get; set; }

    public string Summary { get; set; }

    public string Body { get; set; }

    public Category Category { get; set; }

    public int ReadCount { get; set; }

    public bool IsDeleted { get; set; }

    public DateTime CreatedTime { get; set; }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;指定主键&quot;&gt;指定主键&lt;/h3&gt;
&lt;p&gt;可以通过&lt;code&gt;KeyAttribute&lt;/code&gt;来指定某个字段为主键&lt;/p&gt;
&lt;h2 id=&quot;泛型仓储repository&quot;&gt;4、泛型仓储(Repository)&lt;/h2&gt;
&lt;p&gt;平时开发时用到伪 DDD 比较多，所以框架提供了一个泛型仓储接口&lt;code&gt;IRepository&lt;/code&gt;以及一个抽象实现&lt;code&gt;RepositoryAbstract&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;/// &amp;lt;summary&amp;gt;
/// 判断是否存在
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;where&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;bool&amp;gt; ExistsAsync(Expression&amp;lt;Func&amp;lt;TEntity, bool&amp;gt;&amp;gt; where, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 新增
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;entity&quot;&amp;gt;实体&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;事务&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;bool&amp;gt; AddAsync(TEntity entity, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 批量新增
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;list&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;bool&amp;gt; AddAsync(List&amp;lt;TEntity&amp;gt; list, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 删除
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;bool&amp;gt; DeleteAsync(dynamic id, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 更新
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;entity&quot;&amp;gt;实体&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;事务&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;bool&amp;gt; UpdateAsync(TEntity entity, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 根据主键查询
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;TEntity&amp;gt; GetAsync(dynamic id, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 根据表达式查询单条记录
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;where&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;TEntity&amp;gt; GetAsync(Expression&amp;lt;Func&amp;lt;TEntity,bool&amp;gt;&amp;gt; where, IDbTransaction transaction = null);

/// &amp;lt;summary&amp;gt;
/// 分页查询
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;param name=&quot;paging&quot;&amp;gt;分页&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;where&quot;&amp;gt;过滤条件&amp;lt;/param&amp;gt;
/// &amp;lt;param name=&quot;transaction&quot;&amp;gt;事务&amp;lt;/param&amp;gt;
/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
Task&amp;lt;List&amp;lt;TEntity&amp;gt;&amp;gt; PaginationAsync(Paging paging = null, Expression&amp;lt;Func&amp;lt;TEntity, bool&amp;gt;&amp;gt; where = null, IDbTransaction transaction = null);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;RepositoryAbstract&lt;/code&gt;中包含实体对应的数据集&lt;code&gt;IDbSet&lt;/code&gt;以及数据上限为&lt;code&gt;IDbContext&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;protected readonly IDbSet&amp;lt;TEntity&amp;gt; Db;
protected readonly IDbContext DbContext;

protected RepositoryAbstract(IDbContext dbContext)
{
    DbContext = dbContext;
    Db = dbContext.Set&amp;lt;TEntity&amp;gt;();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;对于事务，建议使用工作单元&lt;code&gt;IUnitOfWork&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public interface IUnitOfWork
{
    /// &amp;lt;summary&amp;gt;
    /// 打开一个事务
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
    IDbTransaction BeginTransaction();

    /// &amp;lt;summary&amp;gt;
    /// 提交
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
    void Commit();

    /// &amp;lt;summary&amp;gt;
    /// 回滚
    /// &amp;lt;/summary&amp;gt;
    void Rollback();
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;项目已经包含了一个实现&lt;code&gt;UnitOfWork&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;仓储使用方法&quot;&gt;6、仓储使用方法&lt;/h2&gt;
&lt;h3 id=&quot;定义仓储&quot;&gt;6.1、定义仓储&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;public interface IArticleRepository : IRepository&amp;lt;Article&amp;gt;
{
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;创建仓储实例&quot;&gt;6.2、创建仓储实例&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;private readonly IArticleRepository _repository;

public RepositoryTest()
{
    var dbContext = new BlogDbContext(new SQLiteDbContextOptions(&quot;Filename=./Database/Test.db&quot;));
    _repository = new ArticleRepository(dbContext);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;新增&quot;&gt;6.3、新增&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void AddTest()
{
    var article = new Article
    {
        Title1 = &quot;test&quot;,
        Category = Category.Blog,
        Summary = &quot;这是一篇测试文章&quot;,
        Body = &quot;这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章&quot;,
        ReadCount = 10,
        IsDeleted = true,
        CreatedTime = DateTime.Now
    };

    await _repository.AddAsync(article);

    Assert.True(article.Id &amp;gt; 0);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;批量增加&quot;&gt;6.4、批量增加&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public void BatchInsertTest()
{
    var list = new List&amp;lt;Article&amp;gt;();
    for (var i = 0; i &amp;lt; 10000; i++)
    {
        var article = new Article
        {
            Title1 = &quot;test&quot; + i,
            Category = i % 3 == 1 ? Category.Blog : Category.Movie,
            Summary = &quot;这是一篇测试文章&quot;,
            Body = &quot;这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章这是一篇测试文章&quot;,
            ReadCount = 10,
            IsDeleted = i % 2 == 0,
            CreatedTime = DateTime.Now
        };
        list.Add(article);
    }
    var sw = new Stopwatch();
    sw.Start();

    _repository.AddAsync(list);

    sw.Stop();
    var s = sw.ElapsedMilliseconds;

    Assert.True(s &amp;gt; 0);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;删除&quot;&gt;6.5、删除&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void DeleteTest()
{
    var b = await _repository.DeleteAsync(2);

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;修改-1&quot;&gt;6.6、修改&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void UpdateTest()
{
    var article = await _repository.GetAsync(2);
    article.Title1 = &quot;修改测试&quot;;

    var b = await _repository.UpdateAsync(article);

    Assert.True(b);
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;分页查询&quot;&gt;6.7、分页查询&lt;/h3&gt;
&lt;pre class=&quot;csharp&quot;&gt;
&lt;code&gt;[Fact]
public async void PaginationTest()
{
    var paging = new Paging(1, 20);
    var list = await _repository.PaginationAsync(paging, m =&amp;gt; m.Id &amp;gt; 1000);

    Assert.True(paging.TotalCount &amp;gt; 0);
}&lt;/code&gt;
&lt;/pre&gt;

</description>
<pubDate>Tue, 28 Aug 2018 15:15:00 +0000</pubDate>
<dc:creator>oldli</dc:creator>
<og:description>本项目是一个使用.NET Standard 2.0开发的，基于 Dapper 的轻量级 ORM 框架，包含基本的CRUD以及根据表达式进行一些操作的方法，目前只针对单表，不包含多表连接操作。</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/oldli/p/9551606.html</dc:identifier>
</item>
<item>
<title>玩转 lua in Redis - sunsky303</title>
<link>http://www.cnblogs.com/sunsky303/p/9551526.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/sunsky303/p/9551526.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;        Redis学了一段时间了，基本的东西都没问题了。从今天开始讲写一些redis和lua脚本的相关的东西，lua这个脚本是一个好东西，可以运行在任何平台上，也可以嵌入到大多数语言当中，来扩展其功能。lua脚本是用C语言写的，体积很小，运行速度很快，并且每次的执行都是作为一个原子事务来执行的，我们可以在其中做很多的事情。由于篇幅很多，一次无法概述全部，这个系列可能要通过多篇文章的形式来写，好了，今天我们进入正题吧。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、Lua简介&lt;/strong&gt;&lt;br/&gt;    &lt;br/&gt;        Lua 是一个小巧的脚本语言。是巴西里约热内卢天主教大学（Pontifical Catholic University of Rio de Janeiro）里的一个研究小组，由Roberto Ierusalimschy、Waldemar Celes 和 Luiz Henrique de Figueiredo所组成并于1993年开发。 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。Lua由标准C编写而成，几乎在所有操作系统和平台上都可以编译，运行。Lua并没有提供强大的库，这是由它的定位决定的。所以Lua不适合作为开发独立应用程序的语言。Lua 有一个同时进行的JIT项目，提供在特定平台上的即时编译功能。&lt;/p&gt;&lt;p&gt;       Lua脚本可以很容易的被C/C++ 代码调用，也可以反过来调用C/C++的函数，这使得Lua在应用程序中可以被广泛应用。不仅仅作为扩展脚本，也可以作为普通的配置文件，代替XML,ini等文件格式，并且更容易理解和维护。 Lua由标准C编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以编译，运行。一个完整的Lua解释器不过200k，在目前所有脚本引擎中，Lua的速度是最快的。这一切都决定了Lua是作为嵌入式脚本的最佳选择。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;三、使用Lua脚本的好处&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       1、减少网络开销：可以将多个请求通过脚本的形式一次发送，减少网络时延和请求次数。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       2、原子性的操作：Redis会将整个脚本作为一个整体执行，中间不会被其他命令插入。因此在编写脚本的过程中无需担心会出现竞态条件，无需使用事务。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       3、代码复用：客户端发送的脚步会永久存在redis中，这样，其他客户端可以复用这一脚本来完成相同的逻辑。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       4、速度快：见 与其它语言的性能比较, 还有一个 JIT编译器可以显著地提高多数任务的性能; 对于那些仍然对性能不满意的人, 可以把关键部分使用C实现, 然后与其集成, 这样还可以享受其它方面的好处。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       5、可以移植：只要是有ANSI C 编译器的平台都可以编译，你可以看到它可以在几乎所有的平台上运行:从 Windows 到Linux，同样Mac平台也没问题, 再到移动平台、游戏主机，甚至浏览器也可以完美使用 (翻译成JavaScript).&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;       6、源码小巧：20000行C代码，可以编译进182K的可执行文件，加载快，运行快。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;四、redis和lua整合详解&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;     &lt;strong&gt; 1、调用Lua脚本的语法：&lt;/strong&gt;&lt;br/&gt;              $ redis-cli --eval path/to/redis.lua KEYS[1] KEYS[2] , ARGV[1] ARGV[2] ...&lt;/p&gt;&lt;p&gt;              --eval，告诉redis-cli读取并运行后面的lua脚本&lt;br/&gt;               path/to/redis.lua，是lua脚本的位置&lt;br/&gt;               KEYS[1] KEYS[2]，是要操作的键，可以指定多个，在lua脚本中通过KEYS[1], KEYS[2]获取&lt;br/&gt;               ARGV[1] ARGV[2]，参数，在lua脚本中通过ARGV[1], ARGV[2]获取。&lt;/p&gt;&lt;p&gt;      &lt;strong&gt;        注意： KEYS和ARGV中间的 ',' 两边的空格，不能省略。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;             &lt;strong&gt;redis支持大部分Lua标准库&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;库名&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Base&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;提供一些基础函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;String&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;提供用于字符串操作的函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;Table&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;提供用于表操作的函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Math&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;提供数学计算函数&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;Debug&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;提供用于调试的函数&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br/&gt;       &lt;strong&gt;2、在脚本中调用redis命令&lt;/strong&gt;&lt;br/&gt;               在脚本中可以使用redis.call函数调用Redis命令&lt;/p&gt;&lt;p&gt;              redis.call('set', 'foo', 'bar')&lt;br/&gt;              local value=redis.call('get', 'foo') --value的值为bar&lt;/p&gt;&lt;p&gt;              redis.call函数的返回值就是Redis命令的执行结果&lt;/p&gt;&lt;p&gt;              Redis命令的返回值有5种类型，redis.call函数会将这5种类型的回复转换成对应的Lua的数据类型，具体的对应规则如下（空结果比较特殊，其对应Lua的false）&lt;/p&gt;
&lt;p&gt;               &lt;strong&gt;redis返回值类型和Lua数据类型转换规则&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;redis返回值类型&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Lua数据类型&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;整数回复&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;数字类型&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;字符串回复&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;字符串类型&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;多行字符串回复&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;table类型(数组形式)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;状态回复&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;table类型(只有一个ok字段存储状态信息)&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;错误回复&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;table类型(只有一个err字段存储错误信息)&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br/&gt;                  redis还提供了redis.pcall函数，功能与redis.call相同，唯一的区别是当命令执行出错时，redis.pcall会记录错误并继续执行，而redis.call会直接返回错误，不会继续执行。在脚本中可以使用return语句将值返回给客户端，如果没有执行return语句则默认返回nil&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;                  Lua数据类型和redis返回值类型转换规则&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;Lua数据类型&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;redis返回值类型&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;数字类型&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;整数回复(Lua的数字类型会被自动转换成整数)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;字符串类型&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;字符串回复&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;table类型(数组形式)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;多行字符串回复&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;table类型(只有一个ok字段存储状态信息)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;状态回复&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;left&quot;&gt;table类型(只有一个err字段存储错误信息)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;错误回复&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br/&gt;        &lt;strong&gt;3、脚本相关命令&lt;/strong&gt;&lt;br/&gt;             &lt;strong&gt;EVAL语法：&lt;/strong&gt; &lt;strong&gt;eval script numkeys key [key ...] arg [arg ...]&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;              通过key和arg这两类参数向脚本传递数据，它们的值在脚本中分别使用KEYS和ARGV两个表类型的全局变量访问。&lt;/p&gt;
&lt;p&gt;              &lt;strong&gt;script&lt;/strong&gt;： 是lua脚本&lt;/p&gt;
&lt;p&gt;              &lt;strong&gt;numkeys&lt;/strong&gt;：表示有几个key，分别是KEYS[1],KEYS[2]...，如果有值，从第numkeys+1个开始就是参数值，ARGV[1],ARGV[2]...&lt;/p&gt;&lt;p&gt;             &lt;strong&gt;注意： EVAL命令依据参数numkeys来将其后面的所有参数分别存入脚本中KEYS和ARGV两个table类型的全局变量。当脚本不需要任何参数时，也不能省略这个参数(设为0)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
       192.168.127.128:6379&amp;gt;eval &quot;return redis.call('set',KEYS[1],ARGV[1])&quot; 1 name liulei
       OK

       192.168.127.128:6379&amp;gt;get name
       &quot;liulei&quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;       &lt;strong&gt;4、 EVALSHA命令&lt;/strong&gt;&lt;br/&gt;              在脚本比较长的情况下，如果每次调用脚本都需要将整个脚本传给Redis会占用较多的带宽。为了解决这个问题，Redis提供了EVALSHA命令，允许开发者通过脚本内容的SHA1摘要来执行脚本，该命令的用法和EVAL一样，只不过是将脚本内容替换成脚本内容的SHA1摘要。&lt;/p&gt;&lt;p&gt;             Redis在执行EVAL命令时会计算脚本的SHA1摘要并记录在脚本缓存中，执行EVALSHA命令时Redis会根据提供的摘要从脚本缓存中查找对应的脚本内容，如果找到了则执行脚本，否则会返回错误：&quot;NOSCRIPT No matching script. Please use EVAL.&quot;&lt;/p&gt;&lt;p&gt;             &lt;strong&gt;在程序中使用EVALSHA命令的一般流程如下。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;                 1）、先计算脚本的SHA1摘要，并使用EVALSHA命令执行脚本。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;                 2）、获得返回值，如果返回“NOSCRIPT”错误则使用EVAL命令重新执行脚本。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;              虽然这一流程略显麻烦，但值得庆幸的是很多编程语言的Redis客户端都会代替开发者完成这一流程。执行EVAL命令时，先尝试执行EVALSHA命令，如果失败了才会执行EVAL命令。&lt;/p&gt;&lt;p&gt;               SCRIPTLOAD &quot;lua-script&quot;  将脚本加入缓存，但不执行， 返回：脚本的SHA1摘要&lt;/p&gt;&lt;p&gt;               SCRIPT EXISTS lua-script-sha1   判断脚本是否已被缓存&lt;/p&gt;&lt;p&gt;       &lt;strong&gt;5、 SCRIPT FLUSH（该命令不区分大小写）&lt;/strong&gt;&lt;br/&gt;               清空脚本缓存，redis将脚本的SHA1摘要加入到脚本缓存后会永久保留，不会删除，但可以手动使用SCRIPT FLUSH命令清除全部脚本缓存。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
       192.168.127.128:6379&amp;gt;script flush
       OK

       192.168.127.128:6379&amp;gt;SCRIPT FLUSH
       OK
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;      &lt;strong&gt; 6、SCRIPT KILL（该命令不区分大小写）&lt;/strong&gt;&lt;br/&gt;              强制终止当前脚本的执行。 但是，如果当前执行的脚步对redis的数据进行了写操作，则SCRIPT KILL命令不会终止脚本的运行，以防止脚本只执行了一部分。脚本中的所有命令，要么都执行，要么都不执行。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;pre&gt;
       192.168.127.128:6379&amp;gt;script kill
      (error)NOTBUSY No scripts in execution right now

      192.168.127.128:6379&amp;gt;SCRIPT KILL
      (error)NOTBUSY No scripts in execution right now
       //这是当前没有脚本在执行，所以提示该错误
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code_toolbar&quot;&gt;&lt;span class=&quot;cnblogs_code_copy&quot;&gt;&lt;a title=&quot;复制代码&quot;&gt;&lt;img src=&quot;https://common.cnblogs.com/images/copycode.gif&quot; alt=&quot;复制代码&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;       &lt;strong&gt;7、lua-time-limit 5000（redis.conf配置文件中）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;              为了防止某个脚本执行时间过长导致Redis无法提供服务（比如陷入死循环），Redis提供了lua-time-limit参数限制脚本的最长运行时间，默认为5秒钟。当脚本运行时间超过这一限制后，Redis将开始接受其他命令但不会执行（以确保脚本的原子性，因为此时脚本并没有被终止），而是会返回“BUSY”错误。&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 14:56:00 +0000</pubDate>
<dc:creator>sunsky303</dc:creator>
<og:description>一、引言 Redis学了一段时间了，基本的东西都没问题了。从今天开始讲写一些redis和lua脚本的相关的东西，lua这个脚本是一个好东西，可以运行在任何平台上，也可以嵌入到大多数语言当中，来扩展其功</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/sunsky303/p/9551526.html</dc:identifier>
</item>
<item>
<title>如何使用纯 CSS 制作四子连珠游戏 - 叙帝利</title>
<link>http://www.cnblogs.com/nzbin/p/9095905.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/nzbin/p/9095905.html</guid>
<description>&lt;blockquote readability=&quot;8.6697247706422&quot;&gt;
&lt;p&gt;序言：你有没有想过单纯使用 CSS 也可以制作一款游戏？甚至可以双人对决？这是一篇非常有趣的文章，作者详细讲解了使用纯 CSS 制作四子连珠游戏的思路以及使用奇淫巧技解决困难问题的方法。因为案例本身比较复杂，而本人水平有限，翻译必有不恰当之处，望指正。&lt;/p&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://css-tricks.com/roman-empire-made-pure-css-connect-4-possible/&quot;&gt;How the Roman Empire Made Pure CSS Connect 4 Possible&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;翻译：&lt;a href=&quot;http://www.cnblogs.com/nzbin/&quot;&gt;nzbin&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实验是学习新技巧、思考新想法、并突破自身极限的有趣的方式。“纯 CSS”演示很早就有了，但是随着浏览器和CSS的发展，新的挑战又出现了。CSS 和 HTML 预处理器也促进了纯 CSS 演示的发展。有时候，预处理程序用于硬编码每个可能的场景，比如 &lt;code&gt;:checked&lt;/code&gt; 的长字符串和相邻兄弟选择器。&lt;/p&gt;
&lt;p&gt;在本文中，我将介绍使用纯CSS 制作的四子连珠游戏的关键思想。在我的实验中，我尽量避免硬编码，并且不使用预处理器，专注于保持代码的简洁。以下是游戏的所有代码以及演示：&lt;/p&gt;
&lt;p data-height=&quot;681&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;xXpzVN&quot; data-default-tab=&quot;result&quot; data-user=&quot;finnhvman&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Pure CSS Connect 4&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/finnhvman/pen/xXpzVN/&quot;&gt;Pure CSS Connect 4&lt;/a&gt; by Bence Szabó (&lt;a href=&quot;https://codepen.io/finnhvman&quot;&gt;@finnhvman&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;基本概念&lt;/h2&gt;
&lt;p&gt;我认为在“纯 CSS”类型中有一些概念是必不可少的。通常，表单元素用于管理状态和捕获用户操作。当我发现有人使用 &lt;code&gt;&amp;lt;button type=&quot;reset&quot;&amp;gt;&lt;/code&gt; 重置或者重新开始新游戏时，我非常兴奋。只需要将元素包裹在 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标签中并添加按钮。在我看来，这是一个比刷新页面更方便的解决方案。&lt;/p&gt;
&lt;p&gt;第一步就是创建表单元素，再在表单中创建一些用作圆孔（the slots）的 input，然后添加重置按钮。以下是使用 &lt;code&gt;&amp;lt;button type=&quot;reset&quot;&amp;gt;&lt;/code&gt; 的基本演示：&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;eeyQqj&quot; data-default-tab=&quot;result&quot; data-user=&quot;finnhvman&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Pure HTML Form Reset&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/finnhvman/pen/eeyQqj/&quot;&gt;Pure HTML Form Reset&lt;/a&gt; by Bence Szabó (&lt;a href=&quot;https://codepen.io/finnhvman&quot;&gt;@finnhvman&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;为了让演示好看一些，我使用 &lt;code&gt;radial-gradient()&lt;/code&gt;，而不是在游戏板（the board）或者圆盘（the discs）上贴一张图片。我经常使用 Lea Verou 制作的 &lt;a href=&quot;http://lea.verou.me/css3patterns/&quot;&gt;CSS3 图案库&lt;/a&gt;。它是使用渐变制作的图案集，而且很容易编辑。我使用了&lt;a href=&quot;https://css-tricks.com/currentcolor/&quot;&gt;currentcolor&lt;/a&gt;，非常适合圆盘的图案。我添加了头部，并且复用了自己制作的&lt;a href=&quot;https://codepen.io/finnhvman/pen/jLXKJw&quot;&gt;纯 CSS 波纹按钮&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1512084179/connect-4_cs8i2u.png&quot;/&gt;&lt;br/&gt;&lt;span&gt;现在，布局和圆盘已经设计好了，只是还不能游戏。&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;把圆盘放到游戏板上&quot;&gt;把圆盘放到游戏板上&lt;/h2&gt;
&lt;p&gt;接下来，需要让用户轮流将圆盘放到四子连珠的游戏板上。在四子连珠游戏中，玩家（一个红色，一个黄色）轮流将圆盘放置在面板的列中。游戏板有 7 列 6 行（一共有 42 个圆孔）。每一个圆孔可以为空或者被一个红色或黄色的圆盘占用。所以，一个圆孔可以有三种状态（空、红色或者黄色）。在同一列中掉落的圆盘会堆叠在一起。&lt;/p&gt;
&lt;p&gt;首先我为每个圆孔放置了两个 checkbox 。当它们都没有被选中时，圆孔就被认为是空的，当其中一个被选中时，相应的玩家就会把他的圆盘放进去。&lt;/p&gt;
&lt;p&gt;当其中任何一个被选中之后，应该把它隐藏起来，避免出现两者都被选中的状态。这些 checkbox 是直接的兄弟类，所以如果选中第一个之后，可以使用 &lt;code&gt;:checked&lt;/code&gt; 伪类和相邻兄弟选择器(&lt;code&gt;+&lt;/code&gt;)来隐藏两个元素。但是如果选中第二个呢？你可以隐藏第二个，但是怎么才能影响第一个呢？可惜没有选择前一个的兄弟选择器，这不是 CSS 选择器的工作方式。我不得不拒绝这个想法。&lt;/p&gt;
&lt;p&gt;实际上，一个 checkbox 本身可以有三个状态，可以使用 &lt;a href=&quot;https://css-tricks.com/indeterminate-checkboxes/&quot;&gt;&lt;code&gt;indeterminate&lt;/code&gt; 状态&lt;/a&gt;。问题是，仅仅使用 HTML 不能将其置于不确定状态。即使可以，当再次点击复选框时，它也会转换成选中状态。强迫第二个玩家在移动圆盘时进行双击是不现实的。&lt;/p&gt;
&lt;p&gt;我仔细阅读了 MDN 上关于 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate&quot;&gt;&lt;code&gt;:indeterminate&lt;/code&gt;&lt;/a&gt; 的文档后发现 radio input 通用都有 indeterminate 状态。名称相同的 radio按钮在未选中时都处于这种状态。哇，这是一个真正的初始状态！真正有用的是，选中后一个同胞元素也会对前者产生影响！于是我在游戏板上放置了 42 对 radio input。&lt;/p&gt;
&lt;p&gt;从以往的经历来看，使用 label ，并通过合理的顺序搭配 checkbox 或 radio 可以解决问题，但我认为 label 不能使代码更简洁。&lt;/p&gt;
&lt;p&gt;为了获得更好的用户体验，我希望交互区域可以更大一些，所以合理的做法是让玩家点击一个列来移动圆盘。通过在合适的元素上添加绝对和相对位置，我将同一列的控件相互叠加。这样，在每一列中只能选择最下面的圆孔。我仔细地设置了每一行的圆盘下降的时间，它们的时间函数近似于一个二次曲线，与现实中的自由落体相似。到目前为止，游戏的各部分都做好了，但是下图清晰地显示出只有红色的玩家才能操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_428,f_auto,q_auto/v1512084241/area_amug8c.gif&quot;/&gt;&lt;br/&gt;&lt;span&gt;尽管已经设置了所有的控件，但只有红色的圆盘可以落在游戏板上。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我用彩色且半透明的矩形对 Radio input 的可点击区域用进行了可视化显示。黄色和红色的 input 在每列上重叠 6 次(= 6 行)，将最下面一行的红色的 input 放在顶部。红色和黄色的混合形成了橙黄色，可以在游戏板上看到。每一列中可用的圆孔越少，这种橙黄色就越不强烈，因为 radio input 只有在 &lt;code&gt;:indeterminate&lt;/code&gt; 状态时才会显示。由于在每个圆孔上，红色 input 总是盖住黄色 input，所以只有红色的玩家能够移动。&lt;/p&gt;
&lt;h2 id=&quot;轮流游戏&quot;&gt;轮流游戏&lt;/h2&gt;
&lt;p&gt;我只有一个模糊的想法，就是能不能使用普通的兄弟选择器解决玩家轮流游戏的问题。这个想法就是统计选中的 input 的数量，为偶数（0、2、4等）时红色玩家移动，为奇数时黄色玩家移动。很快我就意识到一般的兄弟选择器不能（也不应该！）按照我想要的方式工作。&lt;/p&gt;
&lt;p&gt;还有一种方式就是使用 nth 选择器。尽管我喜欢使用&lt;code&gt;偶数&lt;/code&gt;和&lt;code&gt;奇数&lt;/code&gt;这样的关键词，但我还是走进了死胡同。&lt;a href=&quot;https://css-tricks.com/almanac/selectors/n/nth-child/&quot;&gt;:nth-child 选择器&lt;/a&gt; “统计”父类中的子元素，包括所有类型，类、伪类等等。&lt;a href=&quot;https://css-tricks.com/almanac/selectors/n/nth-of-type/&quot;&gt;:nth-of-type 选择器&lt;/a&gt; “统计”在父类中某类型的子类，不包括类或伪类。所以问题就在于无法通过 &lt;a href=&quot;https://css-tricks.com/almanac/selectors/c/checked/&quot;&gt;:checked&lt;/a&gt; 状态去统计。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters&quot;&gt;CSS counters&lt;/a&gt; 也可以统计，所以为什么不试试呢？计数器的一个常见用法是在文档中对标题（甚至多个级别）进行编号。它们由 CSS 规则控制，可以在任何时候被重置，其增量（或递减！）值可以是任意整数。计数器“counter()”函数显示在 &lt;a href=&quot;https://css-tricks.com/almanac/properties/c/content/&quot;&gt;content&lt;/a&gt; 属性中。&lt;/p&gt;
&lt;p&gt;所以最简单的方法就是设置计数器，然后统计四子连珠游戏中 &lt;code&gt;:checked&lt;/code&gt; 的 input 的数量。这种方法只有两个困难。首先，你不能在一个计数器上执行算术运算来检测它是偶数还是奇数。其次，你不能基于计数器的值在元素上应用 CSS 规则。&lt;/p&gt;
&lt;p&gt;我使用二进制解决了第一个问题。计数器的初始值设为 0 。当红色玩家选中 radio 按钮时，计数器加 1。当黄色玩家选中 radio 按钮时，计数器就减 1，以此类推。因此，计数器的值始终是 0 或 1，偶数或奇数。&lt;/p&gt;
&lt;p&gt;解决第二个问题需要更多的创造力（read: hack）。如上所述，计数器只能显示在 &lt;a href=&quot;https://css-tricks.com/almanac/selectors/a/after-and-before/&quot;&gt;&lt;code&gt;::before&lt;/code&gt; 和 &lt;code&gt;::after&lt;/code&gt;&lt;/a&gt; 伪元素中。这是显而易见的，但它们如何影响其他元素呢？至少计数器值可以改变伪元素的宽度。不同的数有不同的宽度。字符 &lt;code&gt;1&lt;/code&gt; 通常比 &lt;code&gt;0&lt;/code&gt; 纤细，但这是很难控制的。如果改变的是字符的数量，而不是字符本身，那么由此产生的宽度变化就是可控的。在 CSS 计数器中使用罗马数字并不少见。用罗马数字表示的 1 和 2 与字符 1 和 2 是相同的，它们的像素宽度也是相同的。&lt;/p&gt;
&lt;p&gt;我的想法是将一个玩家（黄色）的单选按钮连接到左边，并将另一个玩家（红色）的单选按钮连接到共享父容器的右边。最初，红色的按钮被覆盖在黄色的按钮上，然后容器的宽度变化会导致红色的按钮“消失”，显示黄色的按钮。可以将其比作现实中有两个窗格的滑动窗口，一个窗格是固定的（黄色按钮），另一个是可滑动的（红色按钮）。区别在于，在游戏中只有一半的窗口是可见的。&lt;/p&gt;
&lt;p&gt;到目前为止，还不错，但我并不满意使用 &lt;code&gt;font-size&lt;/code&gt; （以及其他 &lt;code&gt;font&lt;/code&gt; 属性）间接控制宽度。更好的方式是使用 &lt;code&gt;letter-spacing&lt;/code&gt;，因为它只在一个维度上改变了大小。出乎意料的是，即使是一个字母也有字母间距（在字母后面呈现），两个字母就有两个字母间距。可靠性的关键就是保证宽度是可预知的。宽度为 0 的字符加上单字母和双字母间距都可以，但是将 &lt;code&gt;font-size&lt;/code&gt; 设置为 0 是存在风险的。为了兼容所有浏览器，可以将 &lt;code&gt;letter-spacing&lt;/code&gt; （以像素为单位）设置的大一些并且将 &lt;code&gt;font-size&lt;/code&gt; 设置的小一点（&lt;code&gt;1px&lt;/code&gt;），是的，我说的是子像素。&lt;/p&gt;
&lt;p&gt;我需要容器的宽度在初始大小(&lt;code&gt;=w&lt;/code&gt;)与至少两倍以上大小(&lt;code&gt;&amp;gt;=2w&lt;/code&gt;)之间交替变换，以便能够完全隐藏和显示黄色按钮。假设 &lt;code&gt;v&lt;/code&gt; 是 'i' 字符的渲染宽度（小写罗马字母表示，在不同的浏览器中不同），&lt;code&gt;c&lt;/code&gt; 是 &lt;code&gt;letter-spacing&lt;/code&gt; 的渲染宽度（常量）。我需要 &lt;code&gt;v + c = w&lt;/code&gt; 为真，但这是不可能的，因为 &lt;code&gt;c&lt;/code&gt; 和 &lt;code&gt;w&lt;/code&gt; 是整数，而 &lt;code&gt;v&lt;/code&gt; 是非整数。最后我使用了 &lt;code&gt;min-width&lt;/code&gt; 和 &lt;code&gt;max-width&lt;/code&gt; 属性来约束可能的宽度值，因此我还将可能的计数器值更改为 'i' 和 'iii' ，以确保文本在流下变宽并溢出约束。通过方程 &lt;code&gt;v + c &amp;lt; w&lt;/code&gt;， &lt;code&gt;3v + 3c &amp;gt; 2w&lt;/code&gt;,，&lt;code&gt;v &amp;lt;&amp;lt; c&lt;/code&gt;，可以得到&lt;code&gt;2/3w &amp;lt; c &amp;lt; w&lt;/code&gt;。结论就是“字母间距”必须比初始宽度小一些。&lt;/p&gt;
&lt;p&gt;我一直以为伪元素显示的计数值是 radio 按钮的父元素，可惜不是。但是，我注意到伪元素的宽度改变了其父元素的宽度，在本例中父元素是 radio 按钮的容器。&lt;/p&gt;
&lt;p&gt;如果你在想，难道不能用阿拉伯数字来解决吗？你说得对，计数器的值在 '1' 和 '111' 之间交替变换也是可以的。尽管如此，罗马数字最先给了我启示，它们也是点击器标题的不错的方式，所以我保留了它们。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/f_auto,q_auto/v1512084609/turns_jwbncs.gif&quot;/&gt;&lt;br/&gt;&lt;span&gt;从红色玩家开始，然后轮流游戏。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;应用所讨论的技术使 radio input 的父容器在选中红色 input 时宽度加倍，在选中黄色 input 宽度变为原来的宽度。在原始宽度的容器中，红色 input 位于黄色 input 之上，而在双宽度容器中，红色 input 被移开。&lt;/p&gt;
&lt;h2 id=&quot;识别模式&quot;&gt;识别模式&lt;/h2&gt;
&lt;p&gt;在现实生活中，四子连珠游戏并不会告诉你是赢了还是输了，但是提供适当的反馈是任何软件良好用户体验的一部分。下一个目标是检测玩家是否赢得了游戏。要想赢得比赛，玩家必须在一列、一行或对角线上放四个圆盘。在许多编程语言中，这是一个非常简单的任务，但是在纯 CSS 世界中，这是一个巨大的挑战。将它分解成子任务是系统地处理这个问题的方法。&lt;/p&gt;
&lt;p&gt;我使用一个 flex 容器作为 radio 按钮和圆盘的父类。一个黄色的 radio 按钮、一个红色的 radio 按钮和一个代表圆盘并与圆孔重叠的 div 。这样的圆孔重复了42 次，并排列成多列。因此，列中的圆孔是相邻的，这使得使用相邻选择器识别列中的四个是最容易的:&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;div class=&quot;grid&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot12&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot12&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
  ...
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot16&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot16&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;input type=&quot;radio&quot; name=&quot;slot21&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot21&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
  ...
&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;/* Red four in a column selector */
input:checked + .disc + input + input:checked + .disc + input + input:checked + .disc + input + input:checked ~ .outcome

/* Yellow four in a column selector */
input:checked + input + .disc + input:checked + input + .disc + input:checked + input + .disc + input:checked ~ .outcome&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;这是一个简单但丑陋的解决方案。为了检测一列中四子相连的情况，每个玩家都有 11 个类型和类选择符链接在一起。在圆孔元素后面添加一个类名为 &lt;code&gt;.outcome&lt;/code&gt; 的 &lt;code&gt;div&lt;/code&gt; 可以展示输出的信息。在被列包裹的一列中，检测四子相连存在问题，但是我们先把这个问题放到一边。&lt;/p&gt;
&lt;p&gt;如果采用类似的方法判断一行中是否有四子相连，那将是一个可怕的想法。每个玩家将会有 56 个选择器（如果我算对了的话），更不用说他们会有类似的检测错误的情况。在将来，&lt;a href=&quot;https://drafts.csswg.org/selectors-4/#the-nth-child-pseudo&quot;&gt;:nth-child(An+B [of S])&lt;/a&gt; 或者 &lt;a href=&quot;https://drafts.csswg.org/selectors-4/#table-pseudos&quot;&gt;column combinators&lt;/a&gt; 会派得上用场.&lt;/p&gt;
&lt;p&gt;为了更好的语义化，可以为每个列添加一个新的 &lt;code&gt;div&lt;/code&gt;，并在其中排列圆孔元素。这一修改也将消除上述检测错误的情况。然后，检测一行中的有四子相连可以用以下方法：选择第一个红色 radio input 被选中的一个列，然后再选择第一个红色 radio input 被选中的相邻同胞列，重复两次。这听起来很麻烦，需要&lt;a href=&quot;https://drafts.csswg.org/selectors-4/#relational&quot;&gt;&quot;parent&quot;选择器&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;选择父节点是不可行的，但是选择子节点是可行的。如何用选择器及其组合方式检测一行中的四子相连？ 选择一个列，再选择它的第一个被选中的红色 radio input，然后选择相邻的列，再选择它的第一个被选中的红色 radio input ，以此类推，再重复两次。这听起来仍然很麻烦，但却是可行的。诀窍不仅在 CSS 中，而且在 HTML 中，下一列必须是上一列中创建嵌套结构的单选按钮的同胞元素。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;div class=&quot;grid column&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
  ...
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot16&quot;&amp;gt;
  &amp;lt;input type=&quot;radio&quot; name=&quot;slot16&quot;&amp;gt;
  &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;div class=&quot;column&quot;&amp;gt;
    &amp;lt;input type=&quot;radio&quot; name=&quot;slot21&quot;&amp;gt;
    &amp;lt;input type=&quot;radio&quot; name=&quot;slot21&quot;&amp;gt;
    &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
    ...
    &amp;lt;input type=&quot;radio&quot; name=&quot;slot26&quot;&amp;gt;
    &amp;lt;input type=&quot;radio&quot; name=&quot;slot26&quot;&amp;gt;
    &amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;div class=&quot;column&quot;&amp;gt;
      ...
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;/* Red four in a row selectors */
input:nth-of-type(2):checked ~ .column &amp;gt; input:nth-of-type(2):checked ~ .column &amp;gt; input:nth-of-type(2):checked ~ .column &amp;gt; input:nth-of-type(2):checked ~ .column::after,
input:nth-of-type(4):checked ~ .column &amp;gt; input:nth-of-type(4):checked ~ .column &amp;gt; input:nth-of-type(4):checked ~ .column &amp;gt; input:nth-of-type(4):checked ~ .column::after,
...
input:nth-of-type(12):checked ~ .column &amp;gt; input:nth-of-type(12):checked ~ .column &amp;gt; input:nth-of-type(12):checked ~ .column &amp;gt; input:nth-of-type(12):checked ~ .column::after&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;语义混乱了，这些选择器只适用于红色的玩家（黄色的玩家有另一轮），但是它确实有用。有一个好处是不会出现检测错误的列或行。结果的显示也必须进行修改，任何匹配列使用的 &lt;code&gt;::after&lt;/code&gt; 伪元素都应该是一致的。因此，必须在最后一个位置之后添加一个伪第八列。&lt;/p&gt;
&lt;p&gt;如上面的代码片段所示，列的特殊的位置关系可以检测一行中的四子相连。同样的技术可以通过调整这些位置来检测对角线上的四子相连。注意对角线可以在两个方向上。&lt;/p&gt;
&lt;pre class=&quot;css&quot;&gt;
&lt;code&gt;input:nth-of-type(2):checked ~ .column &amp;gt; input:nth-of-type(4):checked ~ .column &amp;gt; input:nth-of-type(6):checked ~ .column &amp;gt; input:nth-of-type(8):checked ~ .column::after,
input:nth-of-type(4):checked ~ .column &amp;gt; input:nth-of-type(6):checked ~ .column &amp;gt; input:nth-of-type(8):checked ~ .column &amp;gt; input:nth-of-type(10):checked ~ .column::after,
...
input:nth-of-type(12):checked ~ .column &amp;gt; input:nth-of-type(10):checked ~ .column &amp;gt; input:nth-of-type(8):checked ~ .column &amp;gt; input:nth-of-type(6):checked ~ .column::after&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在最终的代码中，选择器的数量非常庞大，如果使用 CSS 预处理器则可以显著减少声明长度。尽管如此，我认为演示的代码还是比较短的。它应该是在中间的某个地方，从硬编码一个选择器到使用 4 个神奇的选择器（列，行，两个对角线）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1512085108/winner-winner_ppjdyn.png&quot;/&gt;&lt;br/&gt;&lt;span&gt;当有玩家获得胜利就会显示一条信息。&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;修复漏洞&quot;&gt;修复漏洞&lt;/h2&gt;
&lt;p&gt;任何软件都有边缘情况需要处理。四子相连游戏的可能结果不仅是红色或黄色的玩家获胜，而且会出现游戏板被填满的平局。从技术上讲，这种情况不会破坏游戏或产生任何错误，所缺少的是对玩家的反馈。&lt;/p&gt;
&lt;p&gt;我们的目标是检测出黑板上有 42 个 &lt;code&gt;:checked&lt;/code&gt; 的单选按钮。这也意味着它们没有一个处于 &lt;code&gt;:indeterminate&lt;/code&gt; 状态。这就&lt;a href=&quot;https://www.w3.org/TR/html5/forms.html#attr-input-required&quot;&gt;要求&lt;/a&gt;为每个单选按钮做一个选择。单选按钮处于 &lt;code&gt;:indeterminate&lt;/code&gt; 时是 invalid ，否则是 valid 。因此，我为每个输入添加了 &lt;code&gt;required&lt;/code&gt; 属性，然后在表单上使用 &lt;code&gt;:valid&lt;/code&gt; 伪类来检测平局。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1512085172/draw_coqbpi.png&quot;/&gt;&lt;br/&gt;&lt;span&gt;当游戏板被填满时会显示平局的信息。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;检测平局结果出现了一个 bug。在极少数的情况下会出现黄色玩家最终胜利的情况，胜利和平局的消息都显示出来了。这是因为这些结果的检测和显示方法是正交的。我解决了这个问题，确保获胜消息有一个白色的背景，并在平局消息之上。我还必须延迟绘制消息的转换，这样它就不会与获胜消息转换混合。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1512085249/yellow-win_wzzhfv.png&quot;/&gt;&lt;br/&gt;&lt;span&gt;黄方胜利的信息盖住了平局结果&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然许多单选按钮是通过绝对定位隐藏在彼此后面的，但是所有处于不确定状态的按钮仍然可以通过控件的 tabindex 来访问。这使得玩家可以将他们的圆盘放入任意的圆孔中。处理这个问题的一种方法是简单地禁止使用 &lt;code&gt;tabindex&lt;/code&gt; 属性进行键盘交互:将其设置为 &lt;code&gt;-1&lt;/code&gt; 意味着不应该通过连续的键盘导航来访问它。为了解决这个问题，必须在每个单选按钮上添加这一属性。&lt;/p&gt;
&lt;pre class=&quot;html&quot;&gt;
&lt;code&gt;&amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot; tabindex=&quot;-1&quot; required&amp;gt;
&amp;lt;input type=&quot;radio&quot; name=&quot;slot11&quot; tabindex=&quot;-1&quot; required&amp;gt;
&amp;lt;div class=&quot;disc&quot;&amp;gt;&amp;lt;/div&amp;gt;
...&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;限制&quot;&gt;限制&lt;/h2&gt;
&lt;p&gt;最实质性的缺点是，由于轮流游戏的解决方案不可靠，游戏板没有响应，并且可能在小的视图窗口上出现故障。我不敢冒险重构响应式的解决方案，由于实现的本质，硬编码看起来更安全。&lt;/p&gt;
&lt;p&gt;另一个问题是触摸设备上的 sticky hover 。在正确的位置添加一些&lt;a href=&quot;http://caniuse.com/#feat=css-media-interaction&quot;&gt;媒体查询&lt;/a&gt;是解决这个问题最简单的方法，但是这会消除自由落体动画。&lt;/p&gt;
&lt;p&gt;有人可能认为 &lt;code&gt;:indeterminate&lt;/code&gt; 伪类已经得到了广泛的支持，事实的确如此。问题是它只在一些浏览器中得到部分支持。注意&lt;a href=&quot;http://caniuse.com/%20feat=css-indeterminate-pseudo&quot;&gt;兼容性表&lt;/a&gt;中的注释1：MS IE 和 Edge 在单选按钮上不支持它。如果您在这些浏览器中查看演示程序，您的光标将变成 &lt;code&gt;not-allowed&lt;/code&gt; 的光标，这是无意的，但有点优雅的降级。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1512088575/s_FC0DB9982469F4A3412D87D78D206FF1D2FC4666458BC9B7CDAAA777C9219371_1511099898725_ScreenShot2017-11-19at14.51.49_sluknw.png&quot;/&gt;&lt;br/&gt;&lt;span&gt;不是所有浏览器都支持 radio 按钮的 :indeterminate 属性。&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;感谢阅读到最后一部分！让我们看看这个游戏的一些数据：&lt;/p&gt;
&lt;p&gt;总的来说，我对结果很满意，反馈也很好。做这个演示我确实学到了很多，我希望我可以分享更多这样的文章！&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 14:47:00 +0000</pubDate>
<dc:creator>叙帝利</dc:creator>
<og:description>序言：你有没有想过单纯使用 CSS 也可以制作一款游戏？甚至可以双人对决？这是一篇非常有趣的文章，作者详细讲解了使用纯 CSS 制作四子连珠游戏的思路以及使用奇淫巧技解决困难问题的方法。因为案例本身比</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/nzbin/p/9095905.html</dc:identifier>
</item>
<item>
<title>前端项目模块化的实践2：使用 Webpack 打包基础设施代码 - Jusfr</title>
<link>http://www.cnblogs.com/Jusfr/p/9551119.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Jusfr/p/9551119.html</guid>
<description>&lt;p&gt;以下是关于前端项目模块化的实践，包含以下内容：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Jusfr/p/9547897.html&quot;&gt;搭建 NPM 私有仓库管理源码及依赖&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/Jusfr/p/9547929.html&quot;&gt;使用 Webpack 打包基础设施代码&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;使用 TypeScript 编写可靠类库 (实现中)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;本文是关于前端项目模板化的第2部分&lt;/p&gt;
&lt;h2 id=&quot;现状&quot;&gt;现状&lt;/h2&gt;
&lt;p&gt;实际项目远远比示例使用的 &lt;em&gt;myGreeting&lt;/em&gt; 复杂，比如&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;为了提高可维护性我们将项目折成了许多功能模板；&lt;/li&gt;
&lt;li&gt;我们希望使用 Promise 等语法等，但是顾忌目标环境的支持能力；&lt;/li&gt;
&lt;li&gt;可能依赖了多个第三方类库；&lt;/li&gt;
&lt;li&gt;为了提高加载速度我们打包时需要进行很多额外工作；
&lt;ul&gt;&lt;li&gt;代码压缩；&lt;/li&gt;
&lt;li&gt;Tree Shaking（参考文末）；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;既能运行在 WEB 浏览器，也能在 NodeJS 中使用；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;假设我们有一个工具集项目 &lt;em&gt;myHammer&lt;/em&gt;，包含 base64 转换功能和一个简单版的字典树实现，项目结构如下：&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;busybruce@DESKTOP-B8KJKRS /d/Documents/MyGit/PracticeInNPM/myHammer
$ tree src/ test/
src/
├── base64.js
├── index.js
└── TrieFilter.js
test/
├── base64.test.js
└── TrieFilter.test.js

0 directories, 5 files&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt; 导出了项目中的功能模块：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;const base64     = require('./base64');
const TrieFilter = require('./TrieFilter')

module.exports = {
    base64,
    TrieFilter,
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如果不打包，单独发布当前项目到 NPM 仓库并没有问题，只是&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;依赖本项目的时候写法比较纠结，形如 &lt;code&gt;const base64 = require('myHammer/src/base64')&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;可能存在到目标环境的适配问题，如前文所述；&lt;/li&gt;
&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;目标环境不支持 Promise 等语法等&lt;/li&gt;
&lt;li&gt;源码是 CoffeeScript 或者 TypeScript，没法直接引用&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;下面使用 Webpack 来解决这些问题。&lt;/p&gt;
&lt;h2 id=&quot;webpack-打包基础类库&quot;&gt;Webpack 打包基础类库&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.webpackjs.com/&quot;&gt;Webpack&lt;/a&gt; 文档内容多，网上教程多是关于应用打包，现整理如下。&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;本文并非 Webpack 的使用指南，只提及类库打包，行文时Webpack已更新至4.x 版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;package.json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;需要配置 &lt;code&gt;package.json&lt;/code&gt; 的 &lt;code&gt;main&lt;/code&gt; 节点供 NodeJS 环境使用。&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;main&quot;: &quot;src/index.js&quot;,&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;NodeJS 运行环境作了约定，使用 &lt;code&gt;require('xxx')&lt;/code&gt;时将读取该配置。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;避免形如 &lt;code&gt;require('myHammer/src/base64')&lt;/code&gt;类似的引用完整路径的写法&lt;/li&gt;
&lt;li&gt;如果源码使用了高版本的语言特性，可以转译和打包代码到形如 &lt;code&gt;dist/inde-es5.js&lt;/code&gt; 的路径，再修改该配置指向该文件以向下兼容&lt;/li&gt;
&lt;li&gt;使用需要转译成 JavaScript 语言同理&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;在部分 IDE 时我们查找引用时，往往发现函数声明有好多处实现，原因就在于代码转译、打包成了很多份，如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.cnblogs.com/images/cnblogs_com/Jusfr/1288177/o_3.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;webpack.config.js&quot;&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;类库打包需要对 &lt;code&gt;webpack.config.js&lt;/code&gt; 中的 &lt;code&gt;output&lt;/code&gt; 进行配置，摘取如下：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;output : {
  library      : &quot;hammer&quot;,
  libraryTarget: &quot;umd&quot;,
  globalObject : &quot;this&quot;,
  path         : path.join(__dirname, &quot;dist&quot;),
  filename     : &quot;hammer.js&quot;,
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;其他配置请自行阅读文档，完整内容见代码 &lt;a href=&quot;http://www.cnblogs.com/Jusfr/p/webpack.config.js&quot;&gt;webpack.config.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如前文所述，在不考虑语言、版本、目标平台的差异的情况下，直接将源码发布到 NPM 仓库，再添加依赖和引用并无问题。在业务日益复杂的情况下，手写代码在实现层面直接消除这些差异是无比巨大的工作量，使用 Webpack 让我们更专注业务本身， &lt;strong&gt;Make life easier&lt;/strong&gt;。&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;发布到-npm-和使用依赖&quot;&gt;发布到 NPM 和使用依赖&lt;/h2&gt;
&lt;p&gt;在完成了具体业务后，我们打包项目并发布到私有 NPM 仓库&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;webpack --mode development # 视具体需求
npm publish --registry http://ubuntu-17:4873 # --force&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;在 &lt;em&gt;myDemo&lt;/em&gt; 项目中我们添加引用&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;yarn add myHammer --registry http://ubuntu-17:4873&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改 &lt;code&gt;index.js&lt;/code&gt; 如下：&lt;/p&gt;
&lt;pre class=&quot;javascript&quot;&gt;
&lt;code&gt;const myGreeting = require('myGreeting');
const {base64}   = require('myHammer');

(function () {
    let greeting = myGreeting('Rattz');
    console.log(base64.encode(greeting));
})();&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行起来&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;
&lt;code&gt;$ node index.js
SGVsbG8gUmF0dHo=&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;关于-tree-shaking&quot;&gt;关于 Tree Shaking&lt;/h3&gt;
&lt;p&gt;略微提及一下 &lt;a href=&quot;https://webpack.js.org/guides/tree-shaking/&quot;&gt;Tree Shaking&lt;/a&gt; ，简单地说 &lt;em&gt;Tree Shaking&lt;/em&gt; 通过不引用没有依赖的代码，能有效缩减打包后的文件大小。&lt;/p&gt;
&lt;p&gt;举例来说，我们使用了 ES2016 的语法，希望最后编译在 ES2015 环境使用。这里有若干种可行方案，其中一种是&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;使用 babel 全家桶包含 &lt;code&gt;babel-cli, babel-core, babel-loader, babel-preset-env&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;添加 .babelrc 文件写入内容 &lt;code&gt;{&quot;presets&quot;:[&quot;env&quot;]}&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;在入口代码的首行使用 &lt;code&gt;require('babel-polyfill');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;babel 进行语法转换，补丁文件进行对低版本 ES2015 的适配，该方案中 &lt;code&gt;babel-polyfill&lt;/code&gt; 被完整引用， 打包完成后占用120k 左右大小，往往比业务代码还多。&lt;/p&gt;
&lt;p&gt;Tree Shaking 即为解决该问题而来，比如某模板同时提供了加法和减法，而我们只依赖了加法方法，如果打包工具支持 Tree Shaking，就能在打包时剔除掉未使用的减法相关代码。&lt;/p&gt;
&lt;p&gt;Webpack 提供了相关支持，见于 &lt;a href=&quot;https://webpack.js.org/guides/tree-shaking/&quot;&gt;Tree Shaking - webpack&lt;/a&gt;。&lt;br/&gt;项目所使用源码已发布 &lt;a href=&quot;https://github.com/jusfr/PracticeInNPM&quot;&gt;github&lt;/a&gt;，jusfrw 原创&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 13:52:00 +0000</pubDate>
<dc:creator>Jusfr</dc:creator>
<og:description>以下是关于前端项目模块化的实践，包含以下内容： 1.</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Jusfr/p/9551119.html</dc:identifier>
</item>
<item>
<title>我的那些年(11)~去一家创业公司做架构师 - 张占岭</title>
<link>http://www.cnblogs.com/lori/p/9551065.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/lori/p/9551065.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/lori/p/9482991.html&quot;&gt;回到目录&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;我的那些年11去一家创业公司做架构师&quot;&gt;&lt;span&gt;我的那些年(11)~去一家创业公司做架构师&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;入职培训&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;去守香饭店吃饭&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;来到新公司，有压力，有挑战&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;新的dotnet core框架&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;docker用到了生产测试&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;给大家做了相关的技术培训&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;业务复杂，专业性比较强&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;开发几个微服务项目，并与java为微服务对接&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;守香饭店关门了&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;入职培训&quot;&gt;&lt;span&gt;入职培训&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;2017年6月，我来到了新的公司，这是一家创业型公司，扁平管理，氛围不错，周一刚入职就赶上了新员工培训，大概用了一个上午的时间，主要讲了公司的发展，主营项目，未来发展等，而我听的也是云里雾里的，里面很多专业性的东西。&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;去守香饭店吃饭&quot;&gt;&lt;span&gt;去守香饭店吃饭&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;中午的时候，总监带我们去吃饭，大家一起去了一家小饭店，守香饭店，主要是一些套餐，一般就是12到 15元之间，比较实惠，大家平时基本都来这里，2荤15元，还是比较不错的，有时候也吃盖饭，这个饭店还有发票，做的菜味道也不错，就是环境不太好，人比较多，像比较讲究的人来不了这里，呵呵。&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;来到新公司有压力有挑战&quot;&gt;&lt;span&gt;来到新公司，有压力，有挑战&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;由于自己来公司主要负责系统架构和优化等工作，所以说压力还是比较大的，你需要把系统出现的问题解决，对老系统架构进行优化，一些不成熟的技术进行替换，记得我主要把之间的公司框架统一了一下，然后把自己框架做了一份，通过nuget进行版本的管理，当出现新技术后，需要给大家做培训，像dotnet core，docker都做了几次培训。&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;dotnet core2.0出来后，与大家做了技术交流&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;docker主要介绍了概念，使用，与dotnet core的结合等&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;新的dotnet-core框架&quot;&gt;&lt;span&gt;新的dotnet core框架&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;在把自己的dotnet框架进行dotnet core的迁移，添加了core新的特性，以配置为中心，统一各组件的配置约定，当开发人员不进行配置时，应用默认的组件配置，这一点类似于springboot的风格；框架中保留了redis,mongodb,rabbitmq,efRepository,dapperRepository,caching,aop,logger等常用的组件，新增了core的中间件，用来拦截请求并注入新的特性。&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;docker用到了生产测试&quot;&gt;&lt;span&gt;docker用到了生产测试&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;公司运营还是比较强的，有docker实战经验，自己也和他学了不少东西，新项目的使用了基于docker的部署风格，测试中使用docker-compose部署，生产和外测使用docker-swarm做为集群，听说2018年公司打算上k8s集群，相信又是一种新的管理模式，但项目的docker化不会变，只是把docker集群调整了一下。&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;docker高可用集群一般有docker swarm和k8s两个大家族&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;给大家做了相关的技术培训&quot;&gt;&lt;span&gt;给大家做了相关的技术培训&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;来到公司之后，先后为大家培训了一些新的技术，像ddd领域驱动设计，docker容器化，dotnet core等都与大家进行了技术分享，在分享过程中，自己的知识也得到了积累！&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;业务复杂专业性比较强&quot;&gt;&lt;span&gt;业务复杂，专业性比较强&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;自己在12月左右的时候，公司新的核心项目开始启动了，自己被调到了一个开发组，也负责业务模块的开发，通过一段时候的学习，发展这个系统的业务确实比较复杂，专业性比较强，不过自己还算比较有兴趣！&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;开发几个微服务项目并与java为微服务对接&quot;&gt;&lt;span&gt;开发几个微服务项目，并与java为微服务对接&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;在新项目开发过程中，自己之前做的两个微服务项目需要与java项目进行交互，java和node.js项目需要使用我们的服务，这时，我们将项目注册到了springcloud的eureka里，在eureka里每个服务都有一个名称，其它项目可以根据名称访问我们的服务。&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;守香饭店关门了&quot;&gt;&lt;span&gt;守香饭店关门了&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;依旧是冬天，北京对饭让的卫生查的比较严厉了，而我的守香饭让在这个时候也关门了，估计也是上面没人，没法在这边混了，只能回老家了，看着其它饭店依旧正常营业，守香真的很凄凉！&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;自己和同事开始寻找下一个守香了，哈哈&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/lori/p/9482991.html&quot;&gt;回到目录&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 28 Aug 2018 13:44:00 +0000</pubDate>
<dc:creator>张占岭</dc:creator>
<og:description></og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/lori/p/9551065.html</dc:identifier>
</item>
<item>
<title>斜率优化dp 的简单入门 - Judge_Cheung</title>
<link>http://www.cnblogs.com/Judge/p/9551035.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Judge/p/9551035.html</guid>
<description>&lt;p&gt;&lt;strong&gt;不想写什么详细的讲解了...而且也觉得自己很难写过某大佬（大米饼），于是建议把他的 blog 先看一遍，然后自己加了几道题目以及解析...顺便建议看看算法竞赛（蓝皮书）的 0x5A 斜率优化（P294） 部分&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;这是——&lt;a href=&quot;http://www.cnblogs.com/Paul-Guderian/p/7259491.html&quot; target=&quot;_blank&quot;&gt;大米饼大佬&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;看完了大米饼同志对斜率优化的介绍，下面我来稍微讲讲对斜率优化dp 的理解&lt;/strong&gt;&lt;/p&gt;


&lt;ol&gt;&lt;li&gt;&lt;strong&gt;单调队列&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;平面直角坐标系&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直线解析式&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;等式处理&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dp状态设计&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;balabala......&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;其实斜率优化 dp 的原理很简单：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;根据题目（斜率优化 dp 的题目一般都很裸）的 &lt;span&gt;题意 &lt;/span&gt;以及 &lt;span&gt;数据范围 &lt;/span&gt;先根据设计一个状态出来，当做 dp 数组。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据已经设计好的 dp 状态设计一个状态转移方程，如果设计失败则跳回第一步，重新设计 dp 状态。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在第二步完成后，我们一般可以得到这样的一个式子：$ Fi = Fj +$ $(一个表达式)$ &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据设计的状态做一些乱七八糟的东西（比如说将式子展开啦，移项啦...这些大米饼讲的应该挺清楚的吧）。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在第四步中，我们在将式子展开后，把下标中同时带有 i、j 的项（注意这里是项，如 S&lt;sub&gt;i&lt;/sub&gt;*S&lt;sub&gt;j&lt;/sub&gt;）移到等式的左边。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;然后我们就可以得到一个 $b + k x = y$ 形态的一般式（大米饼是这么叫的），其中等式左边下标带有 i 的变量（注意这里是变量，如S&lt;sub&gt;i&lt;/sub&gt;）作为 k ，下标带有 j 的变量作为 x ，等式右边下标带有 j 的变量作为 y ，至于等式右边那些下标只带有 i 的变量我们不去管它，因为 i 在当前对于 Fi 的计算中相当于一个常量，对结果的影响一定。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;然后我们发现这时候我们就可以得到点 (x, y) 了，那么我们就基本上已经完成了这道 斜率优化 dp 题了。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;那么我们是要根据题意让 Fi （也就是一般式中的 b ）取到最小（大）值，那么我们的任务也就转化成了过一个点，画一条斜率为 k 的射线，令其与 y 轴的截距（与 y 轴的交点和原点的距离叫做截距）最小（大）。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;做完这些工作之后，你把所有的点画到平面直角坐标系上，就可以看到这样的一条折线（假设我们现在求的是 Fi 的最小值）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://images2017.cnblogs.com/blog/1101338/201707/1101338-20170731110855911-1305141108.png&quot;&gt;&lt;img title=&quot;image&quot; src=&quot;https://images2017.cnblogs.com/blog/1101338/201707/1101338-20170731110856490-272043992.png&quot; alt=&quot;image&quot; width=&quot;519&quot; height=&quot;286&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;没错，这就是可能有用的点形成的像凸包一样的东西（凸壳）。那为什么这些点形成的折线一定是向下凸起的呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们可以想想一下，如果折线内凹，那么引起内凹的那个点可能成为有用点吗？不可能，因为经过该点的斜率为 k 的直线与 y 轴的截距必然不会比它旁边两个点的截距要小&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么我们在来考虑一下，如果我们要求的是 Fi 的最大值呢？那么我们只要让折线向上凸起就好了（维护上凸性）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对了对了！还有一点蛮重要的。那就是斜率优化可行性判定的标准（我自己口胡的）： 我们在上面的步骤中会处理出一个一般式中的 k 吗？那个 k 要满足单调性，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不然是没办法用双端队列（单调队列）维护的。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;然后这里有一些题目&lt;/strong&gt;&lt;/p&gt;



&lt;h3&gt;&lt;strong&gt;分析&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;首先你在做这题之前最好已经做过了 洛谷&lt;a class=&quot;colored&quot; href=&quot;https://www.luogu.org/problemnew/show/P3648&quot; target=&quot;_blank&quot;&gt;P3648 [APIO2014]序列分割&lt;/a&gt; 这道题（上面的 T6）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这道题你只要一直推推推把式子推出来，然后发现 $ans = m * \sum_{i=1}^{m}a[i]^{2} - sum[n]^{2}$ ，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么你就能知道我们要求的是 $min{\sum_{i=1}^{m}a[i]^{2}}$ （这就是序列分割啊），最后答案处理一下就好了。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;代码&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;58&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;by Judge&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; #include&amp;lt;iostream&amp;gt;
&lt;span&gt; 3&lt;/span&gt; #include&amp;lt;cstdio&amp;gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; ll long long
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; M=&lt;span&gt;3111&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; getchar() (p1==p2&amp;amp;&amp;amp;(p2=(p1=buf)+fread(buf,1,1&amp;lt;&amp;lt;21,stdin),p1==p2)?EOF:*p1++)
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; buf[&lt;span&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;21&lt;/span&gt;],*p1=buf,*p2=&lt;span&gt;buf;
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; inline &lt;span&gt;int&lt;/span&gt;&lt;span&gt; read(){
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; x=&lt;span&gt;0&lt;/span&gt;,f=&lt;span&gt;1&lt;/span&gt;; &lt;span&gt;char&lt;/span&gt; c=&lt;span&gt;getchar();
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(;!isdigit(c);c=getchar()) &lt;span&gt;if&lt;/span&gt;(c==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;) f=-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(;isdigit(c);c=getchar()) x=x*&lt;span&gt;10&lt;/span&gt;+c-&lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;; &lt;span&gt;return&lt;/span&gt; x*&lt;span&gt;f;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;ll n,m,sum[M],g[M],f[M],q[M],head,tail;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; inline &lt;span&gt;double&lt;/span&gt;&lt;span&gt; Rate(ll i,ll j){
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(sum[i]==sum[j]) &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1e9;
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; (g[j]-g[i]+sum[j]*sum[j]-sum[i]*sum[i])/(&lt;span&gt;1.0&lt;/span&gt;*sum[j]-&lt;span&gt;sum[i]);
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;signed main(){
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     n=read(),m=&lt;span&gt;read();
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=n;++&lt;span&gt;i)
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;         sum[i]=sum[i-&lt;span&gt;1&lt;/span&gt;]+read(),g[i]=sum[i]*&lt;span&gt;sum[i];
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; k=&lt;span&gt;2&lt;/span&gt;,i;k&amp;lt;=m;++&lt;span&gt;k){
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;         head=tail=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=n;++&lt;span&gt;i){
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; Rate(q[head+&lt;span&gt;1&lt;/span&gt;],q[head])&amp;lt;=&lt;span&gt;2&lt;/span&gt;*sum[i]) ++&lt;span&gt;head;
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;             f[i]=g[q[head]]+(sum[i]-sum[q[head]])*(sum[i]-&lt;span&gt;sum[q[head]]);
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; Rate(q[tail-&lt;span&gt;1&lt;/span&gt;],q[tail])&amp;gt;=Rate(q[tail],i)) --tail; q[++tail]=&lt;span&gt;i;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;        } swap(f,g);
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;     } printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%lld\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,g[n]*m-sum[n]*sum[n]); &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;strong&gt;分析&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;首先这道题其实与仓库建设类似，同时（可以算是）综合了序列分割...但是数据的处理有点麻烦（甚至还有点坑，比如 d 和 w 搞反了然后样例里面 d 、w 读入雷同...）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这题偷懒一点就是 &lt;span&gt;抄&lt;/span&gt;  综合 一下序列分割这道题，将它作为模板，K 设成 3 ，n 要加一，然后常规做就好了。推式子也不是很麻烦，和仓库建设一样的套路&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;代码&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;by Judge&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; #include&amp;lt;iostream&amp;gt;
&lt;span&gt; 3&lt;/span&gt; #include&amp;lt;cstdio&amp;gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; int long long
&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; ll long long
&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; M=5e4+&lt;span&gt;111&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;#ifdef ONLINE_JUDGE
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;#define&lt;/span&gt; getchar() (p1==p2&amp;amp;&amp;amp;(p2=(p1=buf)+fread(buf,1,1&amp;lt;&amp;lt;21,stdin),p1==p2)?EOF:*p1++)
&lt;span&gt;10&lt;/span&gt; &lt;span&gt;#endif&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; buf[&lt;span&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;21&lt;/span&gt;],*p1=buf,*p2=&lt;span&gt;buf;
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; inline &lt;span&gt;int&lt;/span&gt;&lt;span&gt; read(){
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt; x=&lt;span&gt;0&lt;/span&gt;,f=&lt;span&gt;1&lt;/span&gt;; &lt;span&gt;char&lt;/span&gt; c=&lt;span&gt;getchar();
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(;!isdigit(c);c=getchar()) &lt;span&gt;if&lt;/span&gt;(c==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;) f=-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(;isdigit(c);c=getchar()) x=x*&lt;span&gt;10&lt;/span&gt;+c-&lt;span&gt;'&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;; &lt;span&gt;return&lt;/span&gt; x*&lt;span&gt;f;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;ll n,K,x[M],w[M],s[M],g[M],f[M],q[M],head,tail;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; inline &lt;span&gt;double&lt;/span&gt;&lt;span&gt; Rate(ll i,ll j){
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(w[i]==w[j]) &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1e18;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; (g[j]-g[i]+s[j]-s[i])/(&lt;span&gt;1.0&lt;/span&gt;*w[j]-&lt;span&gt;w[i]);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; las[M];
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;signed main(){
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     n=read()+&lt;span&gt;1&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=n;++&lt;span&gt;i)
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;         (i&amp;lt;n)&amp;amp;&amp;amp;(w[i]=read(),x[i+&lt;span&gt;1&lt;/span&gt;]=x[i]+&lt;span&gt;read()),
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         s[i]=s[i-&lt;span&gt;1&lt;/span&gt;]+x[i]*w[i],w[i]+=w[i-&lt;span&gt;1&lt;/span&gt;],g[i]=&lt;span&gt;1e18;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; k=&lt;span&gt;1&lt;/span&gt;,i;k&amp;lt;=&lt;span&gt;3&lt;/span&gt;;++&lt;span&gt;k){
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt;         head=tail=&lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;=n;++&lt;span&gt;i){
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; Rate(q[head+&lt;span&gt;1&lt;/span&gt;],q[head])&amp;lt;=x[i]) ++&lt;span&gt;head;
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;             f[i]=g[q[head]]+x[i]*(w[i-&lt;span&gt;1&lt;/span&gt;]-w[q[head]])-s[i-&lt;span&gt;1&lt;/span&gt;]+&lt;span&gt;s[q[head]];
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;             &lt;span&gt;while&lt;/span&gt;(head&amp;lt;tail &amp;amp;&amp;amp; Rate(q[tail-&lt;span&gt;1&lt;/span&gt;],q[tail])&amp;gt;=Rate(q[tail],i)) --tail; q[++tail]=&lt;span&gt;i;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;        } swap(f,g);
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     } printf(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;%lld\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,g[n]); &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;其他题...咳咳（来自刷题慢者的尴尬...做一道题都要在黑板上墨迹个半天QwQ）&lt;/p&gt;

</description>
<pubDate>Tue, 28 Aug 2018 13:40:00 +0000</pubDate>
<dc:creator>Judge_Cheung</dc:creator>
<og:description>不想写什么详细的讲解了...而且也觉得自己很难写过某大佬（大米饼），于是建议把他的 blog 先看一遍，然后自己加了几道题目以及解析...顺便建议看看算法竞赛（蓝皮书）的 0x5A 斜率优化（P294</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Judge/p/9551035.html</dc:identifier>
</item>
</channel>
</rss>