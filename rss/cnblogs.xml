<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>C#设计模式之十五命令模式（Command Pattern）【行为型】 - PatrickLiu</title>
<link>http://www.cnblogs.com/PatrickLiu/p/7873322.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/PatrickLiu/p/7873322.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   今天我们开始讲“行为型”设计模式的第二个模式，该模式是【命令模式】，又称为行动（Action）模式或交易（Transaction）模式，英文名称是：Command Pattern。还是老套路，先从名字上来看看。“命令模式”我第一次看到这个名称，我的理解是，可能是一种行为或者一个操作就是一个命令。“命令”这个词语在军队里面用的最多，比如：下达作战命令，接下来就是上战场玩命了。基于这些，我感觉“命令”就是任务，执行了命令就完成了一个任务。或者说，命令是任务，我们再从这个名字上并不知道命令的发出者和接受者分别是谁，为什么呢？因为我们并不关心他们是谁，发出命令的人发出命令，可以继续做其他的事情，接受命令的人执行任务就可以，不需要你发出命令，还要监督我们完成，只要我们完成任务是合格的就行。这种行为也就是“解耦”。在我们的现实生活中有很多例子可以拿来说明这个模式，我们还拿吃饺子这个事情来说。我的奶奶说了，今天想吃饺子，发出了命令，然后我奶奶就去看电视去了。我们夫妻俩收到命令就开始和面，做饺子馅，包饺子。饺子包好了，我们就休息一会，等下午5点就开始烧水煮饺子了，晚饭的时间到了，我奶奶按时吃上了饺子。还有很多例子，就不一一列举了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、命令模式的详细介绍&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.1、动机（Motivate）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   在软件构建过程中，“行为请求者”与“行为实现者”通常呈现一种“紧耦合”。但在某些场合——比如需要对行为进行“记录、撤销/重做（undo/redo）、事务”等处理，这种无法抵御变化的紧耦合是不合适的。在这种情况下，如何将“行为请求者”与“行为实现者”解耦？将一组行为抽象为对象，可以实现二者之间的松耦合。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.2、意图（Intent）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;   将一个请求封装为一个对象，从而使你可用不同的请求对客户（客户程序，也是行为的请求者）进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。　　　　　　                                ——《设计模式》GoF&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.3、结构图&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;      &lt;img src=&quot;http://images2017.cnblogs.com/blog/1048776/201711/1048776-20171121151712618-219632155.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.4、模式的组成&lt;/strong&gt;&lt;br/&gt;    &lt;br/&gt;    从命令模式的结构图可以看出，它涉及到五个角色，它们分别是：&lt;/p&gt;&lt;p&gt;    （1）、客户角色（Client）：发出一个具体的命令并确定其接受者。&lt;/p&gt;&lt;p&gt;    （2）、命令角色（Command）：声明了一个给所有具体命令类实现的抽象接口。&lt;/p&gt;&lt;p&gt;    （3）、具体命令角色（ConcreteCommand）：定义了一个接受者和行为的弱耦合，负责调用接受者的相应方法。&lt;/p&gt;&lt;p&gt;    （4）、请求者角色（Invoker）：负责调用命令对象执行命令。&lt;/p&gt;&lt;p&gt;    （5）、接受者角色（Receiver）：负责具体行为的执行。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.5、命令模式的代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    下面以生活中吃饺子为例来说说如何实现命令模式吧。在现实生活中，作为北方人都爱吃饺子，我奶奶特别爱吃饺子，我也遗传了这个爱好。今天早上，我奶奶就发布了命令，说她老人家想吃猪肉大葱馅的饺子。我奶奶腿脚不好，就让我爸爸捎个话给我们夫妻俩，晚上要吃猪肉大葱馅的饺子。我瞬间就明白了，这个伟大的任务就落到我们夫妻俩肩上了。说做就做，保证晚饭能吃上热气腾腾的饺子，具体实现代码如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; 命令模式的实现
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt;&lt;span&gt; 俗话说：“好吃不如饺子，舒服不如倒着”。今天奶奶发话要吃他大孙子和孙媳妇包的饺子。今天还拿吃饺子这件事来说说命令模式的实现吧。
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;///&lt;/span&gt; &lt;span&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Client
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;         &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Main(&lt;span&gt;string&lt;/span&gt;&lt;span&gt;[] args)
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;奶奶想吃猪肉大葱馅的饺子&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;             PatrickLiuAndWife liuAndLai=&lt;span&gt;new&lt;/span&gt; PatrickLiuAndWife();&lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令接受者&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;             Command  command=&lt;span&gt;new&lt;/span&gt; MakeDumplingsCommand(liuAndLai);&lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;             PaPaInvoker papa=&lt;span&gt;new&lt;/span&gt; PaPaInvoker(command); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;命令请求者
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; 
&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;奶奶发布命令&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt; &lt;span&gt;            papa.MakeDumplings();
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             
&lt;span&gt;18&lt;/span&gt; 
&lt;span&gt;19&lt;/span&gt; &lt;span&gt;            Console.Read();
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;  
&lt;span&gt;23&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个类型就是请求者角色--也就是我爸爸的角色，告诉奶奶要吃饺子&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PaPaInvoker
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;我爸爸从奶奶那里接受到的命令&lt;/span&gt;
&lt;span&gt;27&lt;/span&gt;        &lt;span&gt;private&lt;/span&gt;&lt;span&gt; Command _command;
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; 
&lt;span&gt;29&lt;/span&gt;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;爸爸开始接受具体的命令&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt;        &lt;span&gt;public&lt;/span&gt;&lt;span&gt; PaPaInvoker(Command command)
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt; &lt;span&gt;       {
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;           &lt;span&gt;this&lt;/span&gt;._command=&lt;span&gt;command;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt; &lt;span&gt;       }
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; 
&lt;span&gt;35&lt;/span&gt;        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;爸爸给我们下达命令&lt;/span&gt;
&lt;span&gt;36&lt;/span&gt;        &lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; ExecuteCommand()
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt; &lt;span&gt;       {
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;          command.MakeDumplings();
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt; &lt;span&gt;       }
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt; 
&lt;span&gt;42&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;该类型就是抽象命令角色--Commmand，定义了命令的抽象接口，任务是包饺子&lt;/span&gt;
&lt;span&gt;43&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; Command
&lt;/span&gt;&lt;span&gt;44&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;真正任务的接受者&lt;/span&gt;
&lt;span&gt;46&lt;/span&gt;         &lt;span&gt;protected&lt;/span&gt;&lt;span&gt; PatrickLiuAndWife _worker;
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; 
&lt;span&gt;48&lt;/span&gt;         &lt;span&gt;protected&lt;/span&gt;&lt;span&gt; ConcreteCommand(PatrickLiuAndWife worker)
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;50&lt;/span&gt;            _worker=&lt;span&gt;worker;
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt; 
&lt;span&gt;53&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;该方法就是抽象命令对象Command的Execute方法&lt;/span&gt;
&lt;span&gt;54&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; MakeDumplings();
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt;  
&lt;span&gt;57&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;该类型是具体命令角色--ConcreteCommand，这个命令完成制作“猪肉大葱馅”的饺子&lt;/span&gt;
&lt;span&gt;58&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; MakeDumplingsCommand:Command
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; MakeDumplingsCommand(PatrickLiuAndWife worker):&lt;span&gt;base&lt;/span&gt;&lt;span&gt;(worker){}
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt; 
&lt;span&gt;62&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;执行命令--包饺子&lt;/span&gt;
&lt;span&gt;63&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;&lt;span&gt; MakeDumplings()
&lt;/span&gt;&lt;span&gt;64&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt;执行命令---包饺子&lt;/span&gt;
&lt;span&gt;66&lt;/span&gt;             worker.Execute(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;今天包的是农家猪肉和农家大葱馅的饺子&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;         }
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; 
&lt;span&gt;70&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;该类型是具体命令接受角色Receiver，具体包饺子的行为是我们夫妻俩来完成的&lt;/span&gt;
&lt;span&gt;71&lt;/span&gt;     &lt;span&gt;public&lt;/span&gt; &lt;span&gt;sealed&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;&lt;span&gt; PatrickLiuAndWife
&lt;/span&gt;&lt;span&gt;72&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;73&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt;这个方法相当于Receiver类型的Action方法&lt;/span&gt;
&lt;span&gt;74&lt;/span&gt;         &lt;span&gt;public&lt;/span&gt; &lt;span&gt;override&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; Execute(&lt;span&gt;string&lt;/span&gt;&lt;span&gt; job)
&lt;/span&gt;&lt;span&gt;75&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;76&lt;/span&gt; &lt;span&gt;            Console.WriteLine(job);
&lt;/span&gt;&lt;span&gt;77&lt;/span&gt; &lt;span&gt;         }
&lt;/span&gt;&lt;span&gt;78&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;79&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;   这个模式有点复杂，刚开始也不是很好理解，这种模式在我们现实的编码中用的不是很多，可能针对特定领域的软件或者系统需求更大，比如：文档编辑等。在编码过程中慢慢体会吧，仔细看看代码的结构和模式的使用场景。这个模式的也有一些变形，某些角色可以合并或者省略。我写的这个代码实现，没有突出命令的Redo和Undo,也没写命令的排队，但是大家要知道，之所以把行为抽象独立对象，就是要对其可以进行特殊处理。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;三、命令模式的实现要点：&lt;/strong&gt;&lt;br/&gt;    &lt;br/&gt;     （1）、Command模式的根本目的在于将“行为请求者”与“行为实现者”解耦，在面向对象语言中，常见的实现手段是“将行为抽象为对象”。&lt;/p&gt;&lt;p&gt;     （2）、实现Command接口的具体命令对象ConcreteCommand有时候根据需要可能会保存一些额外的状态信息。&lt;/p&gt;&lt;p&gt;     （3）、通过使用Composite组合模式，可以将多个命令封装为一个“复合命令”MacroCommand。&lt;/p&gt;&lt;p&gt;     （4）、Command模式与C#中的Delegate有些类似。但两者定义行为接口的规范有所区别：Command以面向对象中的“接口-实现”来定义行为接口规范，更严格，更符合抽象原则；Delegate以函数签名来定义行为接口规范，更灵活，但抽象能力比较弱。&lt;/p&gt;&lt;p&gt;     （5）、使用命令模式会导致某些系统有过多的具体命令类。某些系统可能需要几十个，几百个甚至几千个具体命令类，这会使命令模式在这样的系统里变得不实际。&lt;/p&gt;&lt;p&gt;     在下面的情况下可以考虑使用命令模式：&lt;/p&gt;&lt;p&gt;      （1）、系统需要支持命令的撤销（undo）。命令对象可以把状态存储起来，等到客户端需要撤销命令所产生的效果时，可以调用undo方法把命令所产生的效果撤销掉。命令对象还可以提供redo方法，以供客户端在需要时，再重新实现命令效果。&lt;/p&gt;&lt;p&gt;      （2）、系统需要在不同的时间指定请求、将请求排队。一个命令对象和原先的请求发出者可以有不同的生命周期。意思为：原来请求的发出者可能已经不存在了，而命令对象本身可能仍是活动的。这时命令的接受者可以在本地，也可以在网络的另一个地址。命令对象可以串行地传送到接受者上去。&lt;br/&gt; &lt;br/&gt;      （3）、如果一个系统要将系统中所有的数据消息更新到日志里，以便在系统崩溃时，可以根据日志里读回所有数据的更新命令，重新调用方法来一条一条地执行这些命令，从而恢复系统在崩溃前所做的数据更新。&lt;/p&gt;&lt;p&gt;      （4）、系统需要使用命令模式作为“CallBack(回调)”在面向对象系统中的替代。Callback即是先将一个方法注册上，然后再以后调用该方法。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;四、.NET 中命令模式的实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;      由于.NET有了Delegate，它很少很少用到Command。它只要需要用到行为抽象，它都用Delegate去做。因为这是Framework，这是和业务领域相关度不大的基础建设层面，它是不太需要用到OO的层面。对于我们来说，我们建议更多地用Command去实现。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;五、总结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    今天就到此为止吧，该去接孩子放学了，小家伙刚上学，有点淘气，不想上学，哈哈，这点和我小时候还是挺像的。命令模式是把一个操作或者行为抽象为一个独立的对象，通过对命令的抽象化来使得发出命令的责任和执行命令的责任分隔开，也可以对独立的命令对象进行特殊操作，比如可以实现命令的撤销和恢复功能。&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 07:18:00 +0000</pubDate>
<dc:creator>PatrickLiu</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/PatrickLiu/p/7873322.html</dc:identifier>
</item>
<item>
<title>HTML5 Web缓存&amp;运用程序缓存&amp;cookie,session - why_not_try</title>
<link>http://www.cnblogs.com/why-not-try/p/7868150.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/why-not-try/p/7868150.html</guid>
<description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;在介绍HTML5 web缓存前，来认识一下cookie和session：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;session：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于HTTP是无状态的，&lt;strong&gt;你是谁？你干了什么？抱歉服务器都是不知道的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因此session（会话）出现了，它会在服务器上存储用户信息以便将来使用（比如用户名称，购物车购买商品等）。&lt;/p&gt;
&lt;p&gt;但是session是临时的，用户离开网站将被删除。如果要永久存储信息，可以保存在数据库中！&lt;/p&gt;
&lt;p&gt;&lt;span&gt;session工作原理&lt;/span&gt;：&lt;strong&gt;为每个用户创建一个session id（核心！！！）&lt;/strong&gt;。而session id是存储在cookie中的，也就是说如果浏览器禁用了cookie，那么session会失效！（但是可以通过其它方式实现，如：通过URL传递session id）&lt;/p&gt;
&lt;p&gt;用户验证一般采用session。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cookie：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目的：网站标记用户身份而存储在本地客户端的数据（通常经过加密）。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;用户访问网页时，名字记录在cookie中；&lt;/li&gt;
&lt;li&gt;下次继续访问该网页时，可以从cookie中读取用户访问记录。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;cookie会在同源的http请求携带（即使不需要），即在客户端和服务器之间来回传递！&lt;/p&gt;
&lt;p&gt;cookie的数据大小不超过4k&lt;/p&gt;
&lt;p&gt;cookie的有效期：设置的cookie有效时间之前一直有效，即使浏览器关闭！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;localStorage &amp;amp; sessionStorage：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;早期，本地缓存普遍使用的是cookie，但是web存储需要更安全、更快速！&lt;/p&gt;
&lt;p&gt;这些数据不会保存在服务器上（存储在客户端），不会影响服务器性能！&lt;/p&gt;
&lt;p&gt;sessionStorage和localStorage数据存储也有大小限制，但却比cookie大得多，可以达到5M甚至更大！&lt;/p&gt;
&lt;p&gt;localStorage：没有时间限制的数据存储！&lt;/p&gt;
&lt;p&gt;sessionStorage：由英文意思也可知，它是对session的数据存储，所以在用户关闭浏览器（标签页/窗口）后，数据被删除！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML5 web存储支持情况：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IE8以上，现代浏览器。&lt;/p&gt;
&lt;p&gt;数据以键值对存储：&lt;/p&gt;
&lt;p&gt;localStorage和sessionStorage都有以下几个方法：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;localStorage.setItem(key,value)：设置（保存）数据；相当于localStorage.key=value!&lt;/li&gt;
&lt;li&gt;localStorage.getItem(key)：获取数据&lt;/li&gt;
&lt;li&gt;localStorage.removeItem(key)：删除单个数据&lt;/li&gt;
&lt;li&gt;localStorage.clear()：删除所有数据&lt;/li&gt;
&lt;li&gt;localStorage.key(index)：获取某个索引的键值&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;viewport&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;ie=edge&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;web storage&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;div &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;test&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;div&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;&lt;span&gt; (&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt; (Storage) &lt;/span&gt;&lt;span&gt;!=&lt;/span&gt;&lt;span&gt; undefined) {
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            localStorage.name &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;xiao ming&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;            localStorage.setItem(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Apple&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;            document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).innerHTML &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;you are: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.name;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt; &lt;span&gt;            console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;first:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.name1 &lt;/span&gt;&lt;span&gt;+&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.key(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;            localStorage.removeItem(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;second: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.name1);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;            console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;third: &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.getItem(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;));
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;            localStorage.clear();
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;            console.log(&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;last:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt;&lt;span&gt; localStorage.name);
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;        } &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt; {
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;            document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).innerHTML &lt;/span&gt;&lt;span&gt;=&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;更新浏览器吧！目前浏览器不支持stroage&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;         
&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;29&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;30&lt;/span&gt; 
&lt;span&gt;31&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序运行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/1064142/201711/1064142-20171120203332133-101627654.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;注意：键值对是以字符串保存的，根据需求应改变类型（比如做加法，变为Number型）。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;HTML5运用程序缓存（Application Cache）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过创建cache manifest文件，web运用可被缓存，并且无网络状态可以进行访问！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Application Cache优势：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;离线浏览；&lt;/li&gt;
&lt;li&gt;速度更快：已缓存资源加载更快；&lt;/li&gt;
&lt;li&gt;减少浏览器负载：客户端将只从服务器下载或更新更改过的资源&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;支持情况：&lt;/p&gt;
&lt;p&gt;IE10以上，现代浏览器。&lt;/p&gt;
&lt;p&gt;使用：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;manifest&lt;/span&gt;&lt;span&gt;=&quot;demo.appcache&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; 
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span&gt;注意：要开启application cache,需指定manifest属性（扩展名：.appcache）；如果未指定manifest属性，页面不会缓存（除非在manifest文件中直接指定了该页面！）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;manifest文件在服务器上需正确的配置MIME-type：text/cache-manifest。&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Manifest文件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;manifest是简单的文本文件，它告知浏览器被缓存的内容以及不被缓存的内容！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;manifest可分为&lt;strong&gt;三部分&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CACHE MANIFEST&lt;/strong&gt;：此项列出的文件将在首次下载后进行&lt;strong&gt;缓存&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NETWORK&lt;/strong&gt;：此项列出的文件需要与服务器进行&lt;strong&gt;网络连接&lt;/strong&gt;，&lt;strong&gt;不会被缓存&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FALLBACK&lt;/strong&gt;：此项列出当页面&lt;strong&gt;无法访问时的回退页面&lt;/strong&gt;（如：404页面）！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test.appcache:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;CACHE MANIFEST
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;#2017 11 21 v10.0.1
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;/test.css
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;/logo.gif
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;/main.js
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; 
&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;NETWORK
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;/login.php
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;/register.php
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &lt;span&gt;FALLBACK
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;#/html/目录中文件无法访问时，用/offline.html替代
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; /html/ /offline.html
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;更新application cache的情况：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;用户清空浏览器缓存！&lt;/li&gt;
&lt;li&gt;manifest文件被更改（#：表示注释，同时如果更改为&lt;span&gt;#2018 1 1 v20.0.0&lt;/span&gt;，则浏览器会重新缓存！）&lt;/li&gt;
&lt;li&gt;程序进行更新application cache!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Web Workers：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;web workers是运行在后台的javascript，独立于其它脚本，不会影响页面性能！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而一般的HTML页面上执行脚本时，除非脚本加载完成，否则页面不会响应！&lt;/p&gt;

&lt;p&gt;支持情况：IE10以上，现代浏览器&lt;/p&gt;
&lt;p&gt;示例：html文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_c704f318-1ad1-47aa-a66a-0cbaa975dbf5&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_c704f318-1ad1-47aa-a66a-0cbaa975dbf5&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_c704f318-1ad1-47aa-a66a-0cbaa975dbf5&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;&amp;lt;!&lt;/span&gt;&lt;span&gt;DOCTYPE html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html &lt;/span&gt;&lt;span&gt;lang&lt;/span&gt;&lt;span&gt;=&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;charset&lt;/span&gt;&lt;span&gt;=&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;=&quot;viewport&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta &lt;/span&gt;&lt;span&gt;http-equiv&lt;/span&gt;&lt;span&gt;=&quot;X-UA-Compatible&quot;&lt;/span&gt;&lt;span&gt; content&lt;/span&gt;&lt;span&gt;=&quot;ie=edge&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;web worker&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;计数：&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;output &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;&lt;span&gt;=&quot;count&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;output&lt;/span&gt;&lt;span&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;11&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;onclick&lt;/span&gt;&lt;span&gt;=&quot;startWorker()&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;开始&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;button &lt;/span&gt;&lt;span&gt;onclick&lt;/span&gt;&lt;span&gt;=&quot;overWorker()&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;结束&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;button&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; 
&lt;span&gt;14&lt;/span&gt;     &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;15&lt;/span&gt;         &lt;span&gt;var&lt;/span&gt;&lt;span&gt; w;
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;         &lt;span&gt;function&lt;/span&gt;&lt;span&gt; startWorker(){
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 检测浏览器是否支持web worker&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(Worker)&lt;/span&gt;&lt;span&gt;!==&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;undefined&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;(w)&lt;/span&gt;&lt;span&gt;==&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;undefined&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;){
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;                     &lt;span&gt;//&lt;/span&gt;&lt;span&gt;创建web worker对象&lt;/span&gt;
&lt;span&gt;21&lt;/span&gt; &lt;span&gt;                    w&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;new&lt;/span&gt;&lt;span&gt; Worker(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;testWorker.js&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;                 &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件持续监听(即使外部脚本已经完成),除非被终止&lt;/span&gt;
&lt;span&gt;24&lt;/span&gt; &lt;span&gt;                w.onmessage&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(event){
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;                    document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;count&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).innerHTML&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;event.data;
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;                };
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;            }&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt; &lt;span&gt;                document.getElementById(&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;count&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;).innerHTML&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;浏览器不支持web worker&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;31&lt;/span&gt;         &lt;span&gt;function&lt;/span&gt;&lt;span&gt; overWorker() {
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 终止web worker对象，释放浏览器/计算机资源&lt;/span&gt;
&lt;span&gt;33&lt;/span&gt; &lt;span&gt;            w.terminate();
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt; &lt;span&gt;            w&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;undefined;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt;     &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;script&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;37&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;body&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;38&lt;/span&gt; &lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;html&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;testWorker.js文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; i=0&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; timedCount() {
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     i+=1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 重要的部分，向html页面传回一段信息&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;    postMessage(i);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;     setTimeout('timedCount()',500&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt; timedCount();
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;注意1：通常web worker不是用于如此简单的任务，而是用在更耗CPU资源的任务！&lt;/p&gt;
&lt;p&gt;注意2：在chrome中运行会产生“cannot be accessed from origin 'null'”的错误，我的解决方法是：xampp中开启apache,用http://localhost/进行访问。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;web worker缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于web worker位于外部文件中，所以它无法访问下列javascript对象：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;window对象；&lt;/li&gt;
&lt;li&gt;document对象；&lt;/li&gt;
&lt;li&gt;parent对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;HTML5 server-sent events（服务器发送事件）:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;server-sent事件是单向信息传递；网页可以自动获取来自服务器的更新！&lt;/p&gt;
&lt;p&gt;以前：网页先询问是否有可用的更新，服务器发送数据，进行更新（双向数据传递）！&lt;/p&gt;

&lt;p&gt;支持情况：除IE以外的现代浏览器均支持！&lt;/p&gt;
&lt;p&gt;示例代码：html文件：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_1b31fd3a-779a-46fd-a7d3-916044579045&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_1b31fd3a-779a-46fd-a7d3-916044579045&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_1b31fd3a-779a-46fd-a7d3-916044579045&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;lt;!DOCTYPE html&amp;gt;
&lt;span&gt; 2&lt;/span&gt; &amp;lt;html lang=&quot;en&quot;&amp;gt;
&lt;span&gt; 3&lt;/span&gt; &amp;lt;head&amp;gt;
&lt;span&gt; 4&lt;/span&gt;     &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;
&lt;span&gt; 5&lt;/span&gt;     &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&amp;gt;
&lt;span&gt; 6&lt;/span&gt;     &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&amp;gt;
&lt;span&gt; 7&lt;/span&gt;     &amp;lt;title&amp;gt;sever sent event&amp;lt;/title&amp;gt;
&lt;span&gt; 8&lt;/span&gt; &amp;lt;/head&amp;gt;
&lt;span&gt; 9&lt;/span&gt; &amp;lt;body&amp;gt;
&lt;span&gt;10&lt;/span&gt;     &amp;lt;p&amp;gt;sever sent event informations&amp;lt;/p&amp;gt;
&lt;span&gt;11&lt;/span&gt;     &amp;lt;div id=&quot;test&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;span&gt;12&lt;/span&gt;     &amp;lt;script&amp;gt;
&lt;span&gt;13&lt;/span&gt;         &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 判断浏览器是否支持EventSource&lt;/span&gt;
&lt;span&gt;14&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;typeof&lt;/span&gt;(EventSource)!==&lt;span&gt;undefined){
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 创建EventSource对象&lt;/span&gt;
&lt;span&gt;16&lt;/span&gt;             &lt;span&gt;var&lt;/span&gt; source=&lt;span&gt;new&lt;/span&gt; EventSource(&quot;test.php&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 事件监听&lt;/span&gt;
&lt;span&gt;18&lt;/span&gt;             source.onmessage=&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(event){
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt;                 document.getElementById('test').innerHTML+=event.data+&quot;&amp;lt;br&amp;gt;&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt; &lt;span&gt;            };
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;         }&lt;span&gt;else&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;             document.getElementById('test').innerHTML=&quot;sorry,浏览器不支持server sent event&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt;     &amp;lt;/script&amp;gt;
&lt;span&gt;25&lt;/span&gt; &amp;lt;/body&amp;gt;
&lt;span&gt;26&lt;/span&gt; &amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;test.php：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &amp;lt;?&lt;span&gt;php
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;header&lt;/span&gt;('Content-Type:text/event-stream'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;header&lt;/span&gt;('Cache-Control:no-cache'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; 
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;$time&lt;/span&gt;=&lt;span&gt;date&lt;/span&gt;('r'&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; &quot;data:The server time is: {&lt;span&gt;$time&lt;/span&gt;} \n\n&quot;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt; &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 刷新输出数据&lt;/span&gt;
&lt;span&gt;8&lt;/span&gt; &lt;span&gt;flush&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;注意：后面没有内容，php文件可以不用&quot;?&amp;gt;&quot;关闭！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;HTML5 WebSocket：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WebSocket是HTML5提供的一种在单个TCP连接上建立全双工（类似电话）通讯的协议；&lt;/li&gt;
&lt;li&gt;浏览器和服务器之间只需要进行一次握手的操作，浏览器和服务器之间就形成了一条快速通道，两者之间就可直接进行数据传送；&lt;/li&gt;
&lt;li&gt;浏览器通过javascript建立WebSocket连接请求，通过send()向服务器发送数据，onmessage()接收服务器返回的数据。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;实例可参考：&lt;a href=&quot;http://www.runoob.com/html/html5-websocket.html&quot; target=&quot;_blank&quot;&gt;点击这里进行跳转！&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebSocket如何兼容低浏览器：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adobe Flash Socket;&lt;/li&gt;
&lt;li&gt;ActiveX HTMLFile(IE);&lt;/li&gt;
&lt;li&gt;基于multipart编码发送XHR；&lt;/li&gt;
&lt;li&gt;基于长轮询的XHR&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;WebSocket可以用在多个标签页之间的通信！&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 21 Nov 2017 06:48:00 +0000</pubDate>
<dc:creator>why_not_try</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/why-not-try/p/7868150.html</dc:identifier>
</item>
<item>
<title>使用面向对象获取领域名词 - 王森</title>
<link>http://www.cnblogs.com/wangsen/p/7872955.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/wangsen/p/7872955.html</guid>
<description>&lt;p&gt;做产品会设计到很多的领域，但是这些领域中出现的概念往往是比较稳定的，而他们的变化点在于由不同的产品（这里指在这个领域做产品的人）&lt;br/&gt;会根据他们对这个领域以及互联网的理解去设计他们自己的产品规划（流程，规则），作为需求分析的人员来说大部分情况是我们是基于产品的原型，prd进行&lt;br/&gt;需求分析和设计的，这里面其实我们应该做的第一个工作就是找出这个领域中不变的领域概念（领域名词）。&lt;br/&gt;下面我们就来介绍一下俺们大神使用面向对象的方式抽取领域名词的步骤。&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;pojo对象属于对系统的静态描述。它肯定是名词。&lt;/li&gt;
&lt;li&gt;抽取领域名词的最终目的是为了数据存储。&lt;br/&gt;这些名词一定会转换后面我们系统中存在的实体，表，所以它也是整个应用或者产品的数据来源就确定。&lt;br/&gt;比如一个页面或者功能需要使用什么数据就可以快速找到对应的对象或者通过对象的关系找出来。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;穷举名词&quot;&gt;穷举名词&lt;/h2&gt;
&lt;p&gt;如果有原型就在原型中查找所有名词，从左到右从前到后一个名词都不放过，&lt;br/&gt;把你所有认为可以作为备选的全部列出来。&lt;br/&gt;如果没有原型就在客户或者产品的口中获取到反复出现的名词。&lt;/p&gt;
&lt;h4 id=&quot;注意&quot;&gt;注意：&lt;/h4&gt;
&lt;p&gt;不要去通过自己的理解去修改名词叫法&lt;br/&gt;不要去忽略自己觉得不重要的名词&lt;br/&gt;不要考虑表怎么存储&lt;br/&gt;不要考虑非名词&lt;br/&gt;这些陷阱很容易让后期返工。&lt;/p&gt;
&lt;h2 id=&quot;删除&quot;&gt;删除&lt;/h2&gt;
&lt;p&gt;删除和产品（领域）无关的名词。&lt;br/&gt;比如：文案可能出现了故宫或者平台名等和本领域无关的名词。&lt;/p&gt;
&lt;h2 id=&quot;去重&quot;&gt;去重&lt;/h2&gt;
&lt;p&gt;必需确保每个名词都是职责单一，不可替代的。&lt;br/&gt;如果两个名词在概念上比较相似，但是表面词语不太一样的可以将这两个词归为一类，删除多余的名词。&lt;br/&gt;一般去重的特征如下：不同的名词体现出来的属性，功能和生命周期是一样的，只是描述不同。&lt;br/&gt;比如： 不同角色的人在对同一个名词描述不同，他们在新增的时候属性相似度非常高，流程也特别像。&lt;br/&gt;一般的反问自己或者产品：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;它们的不同点在哪？&lt;/li&gt;
&lt;li&gt;如果改一个地方，另一个地方会不会需要同时修改？&lt;/li&gt;
&lt;li&gt;如果把它们做成一样会有什么问题吗？&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;聚合&quot;&gt;聚合&lt;/h2&gt;
&lt;p&gt;把属性名词聚合到其他跟内聚的对象里。&lt;br/&gt;有一些名词都是可以分到一个组中去的，比如：程序员，人事，cto,都是公司的员工，所以可以分到员工对象中去。&lt;br/&gt;这里只放自描述属性，其他的属性暂时不考虑，因为可以很方便的通过关系来描述，而且这个也经常会变化。&lt;/p&gt;
&lt;h2 id=&quot;添加&quot;&gt;添加&lt;/h2&gt;
&lt;p&gt;在描述一个概念的时候，必须通过非常多其他对象，而且经常提。&lt;br/&gt;虽然产品没有提过，但是在实施的时候发生有很多对象有一样的特性。常见情况：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;一个列表涉及到非常多的名词，但是列表本身产品并没有体现概念。&lt;/li&gt;
&lt;li&gt;不同的名词，他们的属性很雷同，而且生命周期几乎是一样的，有种几条平行线的感觉。比如说：同样要新增、发布、审核等&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;确定这个名词的职责&quot;&gt;确定这个名词的职责&lt;/h2&gt;
&lt;p&gt;在做项目中我们难免会做超出我们认知范围内的领域知识，&lt;br/&gt;找产品和客户搞清楚这些名词的含义，可以帮助我们确定这个名词的描述。&lt;br/&gt;比如：课表：是学生报名之后根据所报年级的课产生的上课安排。&lt;/p&gt;
&lt;p&gt;到目前为止领域中的核心名词都抽取出来了，也确定了这个名词的含义，也就是说我们的对象列表以及对象的职责也就确定了。&lt;br/&gt;下面就是该找这个对象的属性了。&lt;/p&gt;

&lt;h2 id=&quot;属性分类&quot;&gt;属性分类&lt;/h2&gt;
&lt;p&gt;一个对象的属性大致分为几个类型：&lt;br/&gt;自描述属性，关联属性，冗余属性，功能性属性&lt;/p&gt;
&lt;h3 id=&quot;自描述属性&quot;&gt;自描述属性&lt;/h3&gt;
&lt;p&gt;一般体现出来的就是手动输入。比如：名称，标题，描述等等&lt;/p&gt;
&lt;h3 id=&quot;关联属性&quot;&gt;关联属性&lt;/h3&gt;
&lt;p&gt;有依赖来源，即在别的地方是手动输入，但是当前功能是选择。比如：选择地区，选择类型&lt;/p&gt;
&lt;h3 id=&quot;冗余属性&quot;&gt;冗余属性&lt;/h3&gt;
&lt;p&gt;方便查询，减少复杂度。一般有以下情况：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;一旦生成不会变化的，可以考虑冗余，因为这样可以减少复杂度。&lt;/li&gt;
&lt;li&gt;偏统计类。比如：视频里冗余评论数购买数。&lt;/li&gt;
&lt;li&gt;为了减少不同类型表的依赖。&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;功能性属性&quot;&gt;功能性属性&lt;/h3&gt;
&lt;p&gt;个性化业务，纯粹是为了做功能&lt;/p&gt;
&lt;h2 id=&quot;建议&quot;&gt;建议：&lt;/h2&gt;
&lt;p&gt;只留自描述，这个很难。需要深层次了解领域。通过领域驱动设计。这样可以通过面向对象，通过很少的关注点，对整个系统有个静态的认识。而且还可以判断出产品变更的时候对整个系统的结构（即数据存储）有什么影响。特别是出现新名词的时候。&lt;br/&gt;需要根据产品的实际情况来判断这些属性怎么规划。&lt;br/&gt;如果是想要快速、简单，但是4种类型都放到pojo上，开发是最快的，&lt;br/&gt;但是同时肯定也是扩展性最差的。&lt;br/&gt;也需要根据产品的真实需求来判断怎么处理后面3种类型的属性。&lt;/p&gt;

&lt;p&gt;这些都是和我们大神交流学习得来的，看起来会有一些晦涩难懂，后面会根据一个实际项目进行举例。&lt;br/&gt;最后附上大神博客园：&lt;br/&gt;&lt;a href=&quot;http://www.cnblogs.com/ansn001/&quot; class=&quot;uri&quot;&gt;http://www.cnblogs.com/ansn001/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 06:17:00 +0000</pubDate>
<dc:creator>王森</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/wangsen/p/7872955.html</dc:identifier>
</item>
<item>
<title>canvas图表(2) - 折线图 - Jeff.Zhong</title>
<link>http://www.cnblogs.com/edwardloveyou/p/7872836.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/edwardloveyou/p/7872836.html</guid>
<description>&lt;p&gt;原文地址：&lt;a href=&quot;http://jeffzhong.space/2017/11/21/chartline/&quot;&gt;canvas图表(2) - 折线图&lt;/a&gt;&lt;br/&gt;话说这天气一冷啊, 就患懒癌, 就不想码代码, 就想着在床上舒舒服服看视频. 那顺便就看blender视频, 学习下3D建模, 如果学会了建3D模型, 那我的webGL技术就大有用处啊,可以独立开发小游戏了😂, 当然是玩笑了。但首先还是把canvas图表系列先弄完吧, 今天就弄折线图。&lt;/p&gt;
&lt;p&gt;效果请看：&lt;em&gt;&lt;a href=&quot;http://jeffzhong.space/sites/demo/dist/chartline.html&quot;&gt;柱状图https://edwardzhong.github.io/sites/demo/dist/chartline.html&lt;/a&gt;&lt;/em&gt;&lt;br/&gt;&lt;img src=&quot;http://oncse3u6r.bkt.clouddn.com/chartline.jpg&quot; alt=&quot;it&quot;/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;主要功能点包括：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;文本的绘制&lt;/li&gt;
&lt;li&gt;XY轴的绘制；&lt;br/&gt;&lt;strong&gt;3. 数据动画的实现；&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;4. 鼠标事件的处理。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;大部分的技术在上一节的&lt;em&gt;&lt;a href=&quot;http://www.cnblogs.com/edwardloveyou/p/7826270.html&quot;&gt;canvas图表(1) - 柱状图&lt;/a&gt;&lt;/em&gt;实现了, 所以这节内容其实是比较简单的。比较麻烦一点的就是折线图的动画了，所以重点就看一下这部分的代码。&lt;/p&gt;
&lt;h2 id=&quot;使用方式&quot;&gt;使用方式&lt;/h2&gt;
&lt;p&gt;使用方式，和柱状图基本是一样的，我们这里表示的是气温变化图。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;35&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; con&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getElementById&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'container'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; line &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;Line&lt;/span&gt;(con)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;va&quot;&gt;line&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'未来一周气温变化'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;xAxis&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:{&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;'周一'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周二'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周三'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周四'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周五'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周六'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'周日'&lt;/span&gt;]
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;yAxis&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:{&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'温度'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'{value} °C'&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;dt&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[
            &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'最高气温'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;]
            &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'最低气温'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;dt&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;]
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;   
        ]
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;代码结构&quot;&gt;代码结构&lt;/h2&gt;
&lt;p&gt;折线图对象大体和柱状图一致，只是部分方法经过重构。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Line &lt;span class=&quot;kw&quot;&gt;extends&lt;/span&gt; Chart&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;constructor&lt;/span&gt;(container)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;super&lt;/span&gt;(container)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 初始化&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;init&lt;/span&gt;(opt)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;Object&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;assign&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;opt)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;container&lt;/span&gt;)&lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'relative'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;tip&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'div'&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;cssText&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'display: none; position: absolute; opacity: 0.5; background: #000; color: #fff; border-radius: 5px; padding: 5px; font-size: 8px; z-index: 99;'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;canvas&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;appendChild&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;tip&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;bindEvent&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 绑定数据&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;bindEvent&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 显示信息&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;showInfo&lt;/span&gt;(pos&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;arr)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 清除内容再绘制&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;clearGrid&lt;/span&gt;(index)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 执行数据动画&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;animate&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 显示数据&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;showData&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 绘制y轴刻度&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;drawY&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;co&quot;&gt;// 绘制&lt;/span&gt;
        &lt;span class=&quot;at&quot;&gt;draw&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;数据动画&quot;&gt;数据动画&lt;/h2&gt;
&lt;p&gt;折线图动画实现的是路径绘制特效，懂canvas的基本都知道原理，就是用lineTo绘制路径，最后stroke出来。但这个折线图是分段的，所以要分情况处理，主要难点就是获取两个点之间的坐标。&lt;/p&gt;
&lt;p&gt;仔细思考下，因为我们知道x轴总长度，所以可以让x依次递增，再求出x对应的y坐标即可。既然知道了两个点的坐标，还知道了x坐标，根据同角度等比例三角形原理，很容易求出y坐标。然后用requestAnimationFrame递归调用即可实现动画了，具体看如下代码。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;30&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;at&quot;&gt;animate&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; that&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            ctx&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            xdis&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            prev&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            x&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;y&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        (&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;run&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;xdis)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;co&quot;&gt;//画完了&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearGrid&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;save&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;item&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;il&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;animateArr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;il&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                item&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;animateArr&lt;/span&gt;[i]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;hide&lt;/span&gt;)&lt;span class=&quot;cf&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'#fff'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;obj&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    obj&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[j]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    prev&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[j&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(j&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;moveTo&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineTo&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;co&quot;&gt;//获取在两个区间之间的y坐标&lt;/span&gt;
                        y&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;prev&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;prev&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;)/(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;prev&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;prev&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;)
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineTo&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;y)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;cf&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stroke&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;//画完曲线后再画圆球&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;obj&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    obj&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[j]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(x&lt;span class=&quot;op&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;arc&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stroke&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fill&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;restore&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            x&lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;at&quot;&gt;requestAnimationFrame&lt;/span&gt;(run)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;())
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;事件处理&quot;&gt;事件处理&lt;/h2&gt;
&lt;p&gt;还有就是鼠标事件处理方面，鼠标滑过画面，判断要将该阶段的信息显示，同时实心填充点和画一条指示线，这里必须不断擦除画面，然后重绘，这样就实现了交互动画。具体看以下代码。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;58&quot;&gt;
&lt;pre class=&quot;sourceCode javascript&quot;&gt;
&lt;code class=&quot;sourceCode javascript&quot;&gt;    &lt;span class=&quot;at&quot;&gt;bindEvent&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; that&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            ctx&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            canvas&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            xl&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;xAxis&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            xs&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;)/(xl&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            index&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'mousemove'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; isLegend&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// todo ...&lt;/span&gt;

            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(isLegend) &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// 鼠标位置在图表中时&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;paddingTop&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'pointer'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;xl&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;xs)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                        index&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 重绘并标志选中信息&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearGrid&lt;/span&gt;(index)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// // 画十字坐标&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.save();&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.lineWidth=0.5;&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.strokeStyle='hsla(0,0%,60%,1)';&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.moveTo(that.padding,pos.y*2);&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.lineTo(that.W-that.padding,pos.y*2);&lt;/span&gt;

                &lt;span class=&quot;co&quot;&gt;// ctx.moveTo(pos.x*2,that.padding+that.paddingTop);&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.lineTo(pos.x*2,that.H-that.padding);&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// ctx.stroke();&lt;/span&gt;
                &lt;span class=&quot;co&quot;&gt;// 获取处于当前位置的信息&lt;/span&gt;
                &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; arr&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;[]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;item&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;l&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;animateArr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;l&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    item&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;animateArr&lt;/span&gt;[j]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;hide&lt;/span&gt;)&lt;span class=&quot;cf&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;push&lt;/span&gt;(&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[index].&lt;span class=&quot;at&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;showInfo&lt;/span&gt;(pos&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;arr)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;restore&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'none'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearGrid&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'mousedown'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;function&lt;/span&gt;(e)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;e&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;preventDefault&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;// todo ...&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;showInfo&lt;/span&gt;(pos&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;arr)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; box&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;canvas&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getBoundingClientRect&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            con&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;container&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;getBoundingClientRect&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            html&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;txt&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;arr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;forEach&lt;/span&gt;(obj&lt;span class=&quot;op&quot;&gt;=&amp;gt;{&lt;/span&gt;
            txt&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;yAxis&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;yAxis&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;formatter&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;'{value}'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;num&lt;/span&gt;):&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            html&lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&amp;lt;p&amp;gt;'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;': '&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;txt&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;)
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; html&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;box&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;con&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;left&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'px'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;pos&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;box&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;con&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;top&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'px'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;tip&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'block'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;at&quot;&gt;clearGrid&lt;/span&gt;(index)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; that&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;
            ctx&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;clearRect&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;paddingTop&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;paddingTop&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;drawY&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;save&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; i&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;item&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;il&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;animateArr&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;il&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
            item&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;animateArr&lt;/span&gt;[i]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;hide&lt;/span&gt;)&lt;span class=&quot;cf&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'#fff'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;obj&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                obj&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[j]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(j&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;moveTo&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineTo&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stroke&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;co&quot;&gt;//画完曲线后再画圆球&lt;/span&gt;
            &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt; j&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;obj&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;va&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;jl&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;j&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                obj&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;data&lt;/span&gt;[j]&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;(index&lt;span class=&quot;op&quot;&gt;===&lt;/span&gt;j)&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'hsla(0,0%,70%,1)'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;moveTo&lt;/span&gt;(j&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;+1.5&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;paddingTop&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;+2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;that&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;padding&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineTo&lt;/span&gt;(j&lt;span class=&quot;op&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;+1.5&lt;/span&gt;:&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stroke&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;'#fff'&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;item&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;beginPath&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;arc&lt;/span&gt;(&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;obj&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;stroke&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;fill&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;va&quot;&gt;ctx&lt;/span&gt;.&lt;span class=&quot;at&quot;&gt;restore&lt;/span&gt;()&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;图表代码请看&lt;em&gt;&lt;a href=&quot;https://github.com/edwardzhong/html5Canvas/blob/master/chart/chart.js&quot;&gt;chart.js&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 05:56:00 +0000</pubDate>
<dc:creator>Jeff.Zhong</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/edwardloveyou/p/7872836.html</dc:identifier>
</item>
<item>
<title>【Java框架型项目从入门到装逼】第一节 - Spring框架 IOC的丧心病狂解说 - 剽悍一小兔</title>
<link>http://www.cnblogs.com/skyblue-li/p/7872783.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/skyblue-li/p/7872783.html</guid>
<description>&lt;p&gt;大家好，好久不见，今天我们来一起学习一下关于Spring框架的IOC技术。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-e0de224803934dc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;控制反转——Spring通过一种称作控制反转（IoC）的技术促进了松耦合。当应用了IoC，一个对象依赖的其它对象会通过被动的方式传递进来，而不是这个对象自己创建或者查找依赖对象。你可以认为IoC与JNDI相反——不是对象从容器中查找依赖，而是容器在对象初始化时不等对象请求就主动将依赖传递给它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-86fe68d78e800d27.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;好吧，那我们从简单的说起。直接讲概念有点抽象，让我们从一个实际的场景来分析这个事情。大毛想要找个女朋友，他的朋友二毛帮忙介绍了一个女生，叫翠花。然后大毛跟翠花认识了。相处了一段时间，因为翠花要大毛和他一起打王者荣耀，可是大毛只会打斗地主，所以分手了，为此大毛难过了好长一段时间。后来，大毛又去找二毛帮忙，希望重新找一个女朋友。大家看这个过程，其实很麻烦的，大毛如果通过熟人介绍的方式来找女朋友，必然是一个一个的接触，比如第一次他跟翠花相亲，第二次跟桂花相亲，第三次又跟西兰花相亲，每次都耗费大量的精力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-edeee52d47822dfa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;相亲吃饭得花钱吧，看电影得花钱吧，万一谈不来，分手还麻烦。这就是大毛跟他每一个女朋友的依赖性太强了。&lt;/p&gt;
&lt;p&gt;现在，请大家进行一个想象，想象我们自己是天神，以我们自己的意志来给大毛安排一个女朋友。既然我们是天神，就可以给大毛编写一个人生的剧本。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-4de8f585755b404c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;之前大毛是通过二毛介绍，才认识了翠花，桂花，和西兰花。现在，我们通过代码的形式来重现一个这个过程。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-2bcc9aa841287508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;br/&gt;剧本：&lt;/p&gt;
&lt;p&gt;大毛：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package com.spring.bean;

public class DaMao {
    
    private GirlFriend girlFriend;

    public GirlFriend getGirlFriend() {
        return girlFriend;
    }

    public void setGirlFriend(GirlFriend girlFriend) {
        this.girlFriend = girlFriend;
    }
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;女朋友作为一个超类：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package com.spring.bean;

/**
 * 女朋友
 * @author Administrator
 */
public class GirlFriend {
    private String hobby;

    public String getHobby() {
        return hobby;
    }

    public void setHobby(String hobby) {
        this.hobby = hobby;
    }
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;翠花继承自GirlFriend ：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package com.spring.bean;

public class CuiHua extends GirlFriend{
    
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;测试类：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package com.spring.test;

import com.spring.bean.CuiHua;
import com.spring.bean.DaMao;
import com.spring.bean.GirlFriend;

public class TestDaoMao {
    
    public static void main(String[] args) {
        DaMao daMao = new DaMao();
        
        GirlFriend cuihua = new CuiHua();
        cuihua.setHobby(&quot;王者荣耀&quot;);
        
        daMao.setGirlFriend(cuihua);
        
        //看一下大毛的女朋友喜欢做什么？
        System.out.println(daMao.getGirlFriend().getHobby());
        
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;看完了这个例子，我们发现，虽然我们是天神，可是安排这样的剧本就要去不断地去new新的GirlFriend，这样是不是很麻烦？&lt;/p&gt;
&lt;p&gt;实际我们天神的职责是掌管这个大毛的命运，在合适的时间，让大毛去谈一场恋爱就可以了，至于让谁充当大毛的女朋友，作为天神，我们不关心，对不对？&lt;/p&gt;
&lt;p&gt;或者说，反正是我们决定，无所谓是谁。&lt;/p&gt;
&lt;p&gt;所以，我们只需要安心编写大毛谈恋爱的剧本就行了，我们只需要知道大毛有一个女朋友就OK了，到底是谁，以后再说。因为，我们是在大毛出生之前就给他安排了剧本。那是不是我们永远都不给大毛指定一个女朋友呢？当然也不是，我们天神一般喜欢把那些可能会改变的东西写在 “神圣的草稿纸” 上，这个草稿纸就是XML文件。&lt;/p&gt;
&lt;p&gt;接下来，让我们引入Spring的集成环境，来模拟这个事情！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-42319ace48140ed7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;首先，引入Spring需要的jar包。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-8e22426b3b216519.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第二步，写配置文件。&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-4832de2a10e1cd9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&amp;gt;

    
    &amp;lt;bean id=&quot;DaMao&quot; class=&quot;com.spring.bean.DaMao&quot;&amp;gt;
        &amp;lt;property name=&quot;girlFriend&quot; ref=&quot;CuiHua&quot;&amp;gt;&amp;lt;/property&amp;gt;
    
    &amp;lt;/bean&amp;gt;
    
    &amp;lt;bean id=&quot;CuiHua&quot; class=&quot;com.spring.bean.CuiHua&quot;&amp;gt;
        &amp;lt;property name=&quot;hobby&quot; value=&quot;王者荣耀&quot;&amp;gt;&amp;lt;/property&amp;gt;
    &amp;lt;/bean&amp;gt;
  
&amp;lt;/beans&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后，剧本就变成了这样：&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;package com.spring.test;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.spring.bean.DaMao;

public class TestDaoMao2 {
    
    public static void main(String[] args) {
        
        ApplicationContext context = new ClassPathXmlApplicationContext(&quot;GirlFriends.xml&quot;);
        DaMao daMao = (DaMao)context.getBean(&quot;DaMao&quot;);
        
        //看一下大毛的女朋友喜欢做什么？
        System.out.println(daMao.getGirlFriend().getHobby());
        
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;运行效果：&lt;br/&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-db1081950627fd9f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这样的好处显而易见，我们不需要在剧本（Java代码）里面指定谁是大毛的女朋友了，这些事情我们都写在“神圣的草稿纸”上。牛逼了我的哥。IOC的原理就是在不改变剧本的情况下，由作为“天神”的你来指定谁来出演，体现在一个XML文件上。而且这些配置都是可以更改的。剧本就是Java代码，能不改就不改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1929342-d4d10550bbabbe86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;/&gt;&lt;/p&gt;
&lt;p&gt;作业：&lt;br/&gt;新建一个Java项目SpringTest01 ，创建包 com.spring.bean。&lt;br/&gt;需要创建的Java类：&lt;br/&gt;Hero .java&lt;br/&gt;属性：&lt;br/&gt;Private String heroName;&lt;br/&gt;Priate String type;&lt;br/&gt;Private String description;&lt;br/&gt;生成对应的get、set方法，再跟据你的喜好重写toString方法。&lt;/p&gt;
&lt;p&gt;新建一个源文件夹etc，专门用于存放配置文件。编写英雄池的xml文件——heroPool.xml。&lt;br/&gt;在配置中加入一个英雄的具体信息：鲁班七号、 射手、 嘻嘻，成功检测到对面的智商，看来我无法发挥全部实力了。&lt;/p&gt;
&lt;p&gt;创建包com.spring.test，新建测试类TestHero，读取heroPool.xml，然后打印出鲁班七号的具体信息。&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 05:40:00 +0000</pubDate>
<dc:creator>剽悍一小兔</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/skyblue-li/p/7872783.html</dc:identifier>
</item>
<item>
<title>Docker 三剑客之 Compose - 田园里的蟋蟀</title>
<link>http://www.cnblogs.com/xishuai/p/docker-compose.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/xishuai/p/docker-compose.html</guid>
<description>&lt;p&gt;Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排，开源地址：&lt;a href=&quot;https://github.com/docker/compose&quot; class=&quot;uri&quot;&gt;https://github.com/docker/compose&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Compose 中的两个重要概念：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;服务 (service)&lt;/strong&gt;：一个应用容器，实际上可以运行多个相同镜像的实例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;项目 (project)&lt;/strong&gt;：由一组关联的应用容器组成的一个完整业务单元。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;一个项目可以由多个服务关联（容器）而成，并使用&lt;code&gt;docker-compose.yml&lt;/code&gt;进行管理。&lt;/p&gt;
&lt;p&gt;安装命令：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;curl&lt;/span&gt; -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-&lt;span class=&quot;kw&quot;&gt;`uname&lt;/span&gt; -s&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;kw&quot;&gt;`uname&lt;/span&gt; -m&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt; -o /usr/local/bin/docker-compose
$ &lt;span class=&quot;kw&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这种方式安装巨慢无比，我们可以使用 PIP 安装，如果没有 PIP 环境，需要手动安装下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; update
$ &lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; -y install python-pip

或

$ &lt;span class=&quot;kw&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&quot;https://bootstrap.pypa.io/get-pip.py&quot;&lt;/span&gt; -o &lt;span class=&quot;st&quot;&gt;&quot;get-pip.py&quot;&lt;/span&gt;
$ &lt;span class=&quot;kw&quot;&gt;python&lt;/span&gt; get-pip.py

$ &lt;span class=&quot;kw&quot;&gt;pip&lt;/span&gt; --help
$ &lt;span class=&quot;kw&quot;&gt;pip&lt;/span&gt; -V&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PIP 安装命令：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;sudo&lt;/span&gt; pip install -U docker-compose&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PIP 安装之后，执行 Docker Compose 命令的时候，会出现下面错误：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;docker-compose&lt;/span&gt; up
&lt;span class=&quot;kw&quot;&gt;Cannot&lt;/span&gt; open self /usr/local/bin/docker-compose or archive /usr/local/bin/docker-compose.pkg&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.linuxdiyf.com/linux/31760.html&quot;&gt;解决方式&lt;/a&gt;，从&lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;官方源&lt;/a&gt;中手动下载安装包，然后移动到制定目录赋予权限，命令如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;cp&lt;/span&gt; -i docker-compose-Linux-x86_64 /usr/local/bin
$ &lt;span class=&quot;kw&quot;&gt;mv&lt;/span&gt; docker-compose-Linux-x86_64 docker-compose
$ &lt;span class=&quot;kw&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装好之后，我们就可以使用 Docker Compose 进行容器编排了，我们就拿之前做的 &lt;a href=&quot;https://github.com/yuezhongxin/HelloDocker.Sample&quot;&gt;HelloDocker.Sample&lt;/a&gt; 项目做为示例。&lt;/p&gt;
&lt;p&gt;我们在&lt;code&gt;HelloDocker.Sample.Web&lt;/code&gt;项目目录下，创建&lt;code&gt;docker-compose.yml&lt;/code&gt;配置文件，示例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;sourceCode yml&quot;&gt;
&lt;code class=&quot;sourceCode yaml&quot;&gt;&lt;span class=&quot;fu&quot;&gt;consul:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;command:&lt;/span&gt; agent -bind=10.9.10.89 -client=0.0.0.0 -node=vagrant-ubuntu-xishuai -retry-join=10.9.2.236
  &lt;span class=&quot;fu&quot;&gt;image:&lt;/span&gt; consul:latest
  &lt;span class=&quot;fu&quot;&gt;ports:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;8300:&lt;/span&gt;8300
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;8400:&lt;/span&gt;8400
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;8500:&lt;/span&gt;8500
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;8600:&lt;/span&gt;53/udp
  &lt;span class=&quot;fu&quot;&gt;net:&lt;/span&gt; host
&lt;span class=&quot;fu&quot;&gt;fabio:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;image:&lt;/span&gt; magiconair/fabio:latest
  &lt;span class=&quot;fu&quot;&gt;ports:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;9999:&lt;/span&gt;9999
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;9998:&lt;/span&gt;9998
  &lt;span class=&quot;fu&quot;&gt;net:&lt;/span&gt; host
  &lt;span class=&quot;fu&quot;&gt;volumes:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;/etc/fabio/fabio.properties:&lt;/span&gt;/etc/fabio/fabio.properties
  &lt;span class=&quot;fu&quot;&gt;environment:&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; SERVICE_9998_TAGS=urlprefix-/fabio
&lt;span class=&quot;fu&quot;&gt;hello-docker:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;ports:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;54917:&lt;/span&gt;54917
  &lt;span class=&quot;fu&quot;&gt;build:&lt;/span&gt; .
  &lt;span class=&quot;fu&quot;&gt;net:&lt;/span&gt; host&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其实看配置就明了了，一个项目中包含三个服务（&lt;code&gt;consul&lt;/code&gt;, &lt;code&gt;fabio&lt;/code&gt;和&lt;code&gt;hell-docker&lt;/code&gt;容器），Docker Compose 对这三个服务进行编排部署，我们执行&lt;code&gt;docker-compose up&lt;/code&gt;命令，启动项目：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;docker-compose&lt;/span&gt; up -d
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_fabio_1 ... 
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_hello-docker_1 ... 
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_consul_1 ... 
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_fabio_1
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_hello-docker_1
&lt;span class=&quot;kw&quot;&gt;Creating&lt;/span&gt; hellodockerweb_consul_1 ... done&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们可以执行&lt;code&gt;docker-compose ps&lt;/code&gt;， 查看运行的服务（容器）：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;$ &lt;span class=&quot;kw&quot;&gt;docker-compose&lt;/span&gt; ps
            &lt;span class=&quot;kw&quot;&gt;Name&lt;/span&gt;                           Command               State   Ports
&lt;span class=&quot;kw&quot;&gt;------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;hellodockerweb_consul_1&lt;/span&gt;         docker-entrypoint.sh agent ...   Up           
&lt;span class=&quot;kw&quot;&gt;hellodockerweb_fabio_1&lt;/span&gt;          /fabio -cfg /etc/fabio/fab ...   Up           
&lt;span class=&quot;kw&quot;&gt;hellodockerweb_hello-docker_1&lt;/span&gt;   dotnet HelloDocker.Web.dll       Up  &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者执行&lt;code&gt;docker-compose logs&lt;/code&gt;，查看日志：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; readability=&quot;106&quot;&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;
&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker-compose&lt;/span&gt; logs
&lt;span class=&quot;kw&quot;&gt;Attaching&lt;/span&gt; to hellodockerweb_consul_1, hellodockerweb_hello-docker_1, hellodockerweb_fabio_1
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; ==&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Starting&lt;/span&gt; Consul agent...
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; ==&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Consul&lt;/span&gt; agent running!
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;Version&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;'v1.0.0'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;Node&lt;/span&gt; ID: &lt;span class=&quot;st&quot;&gt;'521358bc-efc0-1a69-4a58-a9bfc8a9b09c'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;          &lt;span class=&quot;kw&quot;&gt;Node&lt;/span&gt; name: &lt;span class=&quot;st&quot;&gt;'vagrant-ubuntu-xishuai'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;Datacenter&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;'dc1'&lt;/span&gt; (Segment: &lt;span class=&quot;st&quot;&gt;''&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;kw&quot;&gt;Server&lt;/span&gt;: false (Bootstrap: false)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;Client&lt;/span&gt; Addr: [0.0.0.0] (HTTP: 8500, HTTPS: -1, DNS: 8600)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;kw&quot;&gt;Cluster&lt;/span&gt; Addr: 10.9.10.89 (LAN: 8301, WAN: 8302)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;Encrypt&lt;/span&gt;: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; ==&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Log&lt;/span&gt; data will now stream in as it occurs:
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] serf: EventMemberJoin: vagrant-ubuntu-xishuai 10.9.10.89
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Started DNS server 0.0.0.0:8600 (tcp)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Started DNS server 0.0.0.0:8600 (udp)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Started HTTP server on [::]:8500 (tcp)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Retry join LAN is supported for: aws azure gce softlayer
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Joining LAN cluster...
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: (LAN) &lt;span class=&quot;kw&quot;&gt;joining&lt;/span&gt;: [10.9.2.236]
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [WARN] manager: No servers available
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [ERR] agent: failed to sync remote state: No known Consul servers
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] serf: EventMemberJoin: agent_1 10.9.2.236
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] serf: EventMemberJoin: windows64-xishuai 10.9.10.187
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: (LAN) &lt;span class=&quot;kw&quot;&gt;joined&lt;/span&gt;: 1 Err: &lt;span class=&quot;kw&quot;&gt;&amp;lt;&lt;/span&gt;nil&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] agent: Join LAN completed. Synced with 1 initial agents
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] consul: adding server agent_1 (Addr: tcp/10.9.2.236:8300) &lt;span class=&quot;kw&quot;&gt;(DC&lt;/span&gt;: dc1&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:34 [INFO] agent: Synced service &lt;span class=&quot;st&quot;&gt;'fabio-vagrant-ubuntu-trusty-9998'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;warn&lt;/span&gt;: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;kw&quot;&gt;No&lt;/span&gt; XML encryptor configured. Key &lt;span class=&quot;dt&quot;&gt;{3d8c2a18-ed43-4df9-980f-8573175ebecf}&lt;/span&gt; may be persisted to storage in unencrypted form.
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Hosting&lt;/span&gt; environment: Production
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Content&lt;/span&gt; root path: /app
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Now&lt;/span&gt; listening on: http://[::]:54917
&lt;span class=&quot;kw&quot;&gt;hello-docker_1&lt;/span&gt;  &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Application&lt;/span&gt; started. Press Ctrl+C to shut down.
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] Setting log level to INFO
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:25 [INFO] Runtime config
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;st&quot;&gt;&quot;Proxy&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;Strategy&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;rnd&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;Matcher&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;prefix&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;NoRouteStatus&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;404&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;MaxConn&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;10000&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;ShutdownWait&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;0&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;DialTimeout&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;30000000000&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;ResponseHeaderTimeout&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;0&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;KeepAliveTimeout&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;0&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;FlushInterval&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;1000000000&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;LocalIP&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;10.0.2.15&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;ClientIPHeader&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;TLSHeader&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;TLSHeaderValue&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;GZIPContentTypes&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;RequestID&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;st&quot;&gt;&quot;Registry&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;Backend&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;consul&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;Static&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Routes&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;File&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Path&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:34 [WARN] agent: check &lt;span class=&quot;st&quot;&gt;'service:8a600176-4c58-4edc-95af-71fc27345954'&lt;/span&gt; has deregister interval below minimum of 1m0s
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:34 [INFO] agent: Synced service &lt;span class=&quot;st&quot;&gt;'8a600176-4c58-4edc-95af-71fc27345954'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:34 [INFO] agent: Synced service &lt;span class=&quot;st&quot;&gt;'fabio-vagrant-ubuntu-trusty-9998'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:35 [INFO] agent: Synced check &lt;span class=&quot;st&quot;&gt;'service:fabio-vagrant-ubuntu-trusty-9998'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:40 [INFO] agent: Synced check &lt;span class=&quot;st&quot;&gt;'service:8a600176-4c58-4edc-95af-71fc27345954'&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; ==&lt;span class=&quot;kw&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;Newer&lt;/span&gt; Consul version available: 1.0.1 (currently running: 1.0.0)
&lt;span class=&quot;kw&quot;&gt;consul_1&lt;/span&gt;        &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;2017/11/21&lt;/span&gt; 04:41:57 [WARN] memberlist: Refuting a suspect message (from: agent_1)
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;st&quot;&gt;&quot;Consul&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Addr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;10.9.10.89:8500&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Scheme&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;http&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Token&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;KVPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;/fabio/config&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;TagPrefix&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;urlprefix-&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;Register&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;ServiceAddr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;10.9.10.89:9998&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;ServiceName&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;fabio&quot;&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;ServiceTags&quot;&lt;/span&gt;: &lt;span class=&quot;kw&quot;&gt;null&lt;/span&gt;,
&lt;span class=&quot;kw&quot;&gt;fabio_1&lt;/span&gt;         &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;             &lt;span class=&quot;st&quot;&gt;&quot;ServiceStatus&quot;&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt; [&lt;/span&gt;
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;passing&quot;&lt;/span&gt;
fabio_1         |             ],
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CheckInterval&quot;&lt;/span&gt;: 1000000000,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CheckTimeout&quot;&lt;/span&gt;: 3000000000,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CheckScheme&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;http&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CheckTLSSkipVerify&quot;&lt;/span&gt;: false
fabio_1         |         },
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 10000000000,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Retry&quot;&lt;/span&gt;: 500000000
fabio_1         |     },
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;Listen&quot;&lt;/span&gt;: [
fabio_1         |         {
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;Addr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;:9999&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;Proto&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;http&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;ReadTimeout&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;WriteTimeout&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CertSource&quot;&lt;/span&gt;: {
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Type&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;CertPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;KeyPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;ClientCAPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;CAUpgradeCN&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Refresh&quot;&lt;/span&gt;: 0,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Header&quot;&lt;/span&gt;: null
fabio_1         |             },
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;StrictMatch&quot;&lt;/span&gt;: false,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSMinVersion&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSMaxVersion&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSCiphers&quot;&lt;/span&gt;: null
fabio_1         |         }
fabio_1         |     ],
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;Log&quot;&lt;/span&gt;: {
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;AccessFormat&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;common&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;AccessTarget&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;RoutesFormat&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;delta&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Level&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;INFO&quot;&lt;/span&gt;
fabio_1         |     },
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;Metrics&quot;&lt;/span&gt;: {
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Target&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Prefix&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;{{clean .Hostname}}.{{clean .Exec}}&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Names&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;{{clean .Service}}.{{clean .Host}}.{{clean .Path}}.{{clean .TargetURL.Host}}&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Interval&quot;&lt;/span&gt;: 30000000000,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Timeout&quot;&lt;/span&gt;: 10000000000,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Retry&quot;&lt;/span&gt;: 500000000,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;GraphiteAddr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;StatsDAddr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Circonus&quot;&lt;/span&gt;: {
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;APIKey&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;APIApp&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;fabio&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;APIURL&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CheckID&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;BrokerID&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
fabio_1         |         }
fabio_1         |     },
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;UI&quot;&lt;/span&gt;: {
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Listen&quot;&lt;/span&gt;: {
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;Addr&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;:9998&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;Proto&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;http&quot;&lt;/span&gt;,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;ReadTimeout&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;WriteTimeout&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;CertSource&quot;&lt;/span&gt;: {
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Type&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;CertPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;KeyPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;ClientCAPath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;CAUpgradeCN&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Refresh&quot;&lt;/span&gt;: 0,
fabio_1         |                 &lt;span class=&quot;st&quot;&gt;&quot;Header&quot;&lt;/span&gt;: null
fabio_1         |             },
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;StrictMatch&quot;&lt;/span&gt;: false,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSMinVersion&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSMaxVersion&quot;&lt;/span&gt;: 0,
fabio_1         |             &lt;span class=&quot;st&quot;&gt;&quot;TLSCiphers&quot;&lt;/span&gt;: null
fabio_1         |         },
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Color&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;light-green&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Title&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;Access&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;rw&quot;&lt;/span&gt;
fabio_1         |     },
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;Runtime&quot;&lt;/span&gt;: {
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;GOGC&quot;&lt;/span&gt;: 800,
fabio_1         |         &lt;span class=&quot;st&quot;&gt;&quot;GOMAXPROCS&quot;&lt;/span&gt;: 1
fabio_1         |     },
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;ProfileMode&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;,
fabio_1         |     &lt;span class=&quot;st&quot;&gt;&quot;ProfilePath&quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;
fabio_1         | }
fabio_1         | 2017/11/21 04:41:25 [INFO] Version 1.5.3 starting
fabio_1         | 2017/11/21 04:41:25 [INFO] Go runtime is go1.9.2
fabio_1         | 2017/11/21 04:41:25 [INFO] Metrics disabled
fabio_1         | 2017/11/21 04:41:25 [INFO] Setting GOGC=800
fabio_1         | 2017/11/21 04:41:25 [INFO] Setting GOMAXPROCS=1
fabio_1         | 2017/11/21 04:41:25 [WARN] Error initializing backend. Get http://10.9.10.89:8500/v1/agent/self: dial tcp 10.9.10.89:8500: getsockopt: connection refused
fabio_1         | 2017/11/21 04:41:25 [INFO] consul: Connecting to &lt;span class=&quot;st&quot;&gt;&quot;10.9.10.89:8500&quot;&lt;/span&gt; in datacenter &lt;span class=&quot;st&quot;&gt;&quot;dc1&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:25 [INFO] Admin server access mode &lt;span class=&quot;st&quot;&gt;&quot;rw&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:25 [INFO] Admin server listening on &lt;span class=&quot;st&quot;&gt;&quot;:9998&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:25 [INFO] Waiting for first routing table
fabio_1         | 2017/11/21 04:41:25 [INFO] consul: Using dynamic routes
fabio_1         | 2017/11/21 04:41:25 [INFO] consul: Using tag prefix &lt;span class=&quot;st&quot;&gt;&quot;urlprefix-&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:25 [INFO] consul: Watching KV path &lt;span class=&quot;st&quot;&gt;&quot;/fabio/config&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Manual config changed to &lt;span class=&quot;co&quot;&gt;#3821244&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] HTTP proxy listening on :9999
fabio_1         | 2017/11/21 04:41:34 [INFO] Access logging disabled
fabio_1         | 2017/11/21 04:41:34 [INFO] Using routing strategy &lt;span class=&quot;st&quot;&gt;&quot;rnd&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] Using route matching &lt;span class=&quot;st&quot;&gt;&quot;prefix&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Health changed to &lt;span class=&quot;co&quot;&gt;#3821756&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Registered fabio with id &lt;span class=&quot;st&quot;&gt;&quot;fabio-vagrant-ubuntu-trusty-9998&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Registered fabio with address &lt;span class=&quot;st&quot;&gt;&quot;10.9.10.89&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Registered fabio with tags &lt;span class=&quot;st&quot;&gt;&quot;&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:34 [INFO] consul: Registered fabio with health check to &lt;span class=&quot;st&quot;&gt;&quot;http://[10.9.10.89]:9998/health&quot;&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:35 [INFO] Config updates
fabio_1         | + route add test /test http://10.9.2.236:23421/
fabio_1         | 2017/11/21 04:41:35 [INFO] consul: Health changed to &lt;span class=&quot;co&quot;&gt;#3821762&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:40 [INFO] consul: Health changed to &lt;span class=&quot;co&quot;&gt;#3821765&lt;/span&gt;
fabio_1         | 2017/11/21 04:41:42 [INFO] Config updates
fabio_1         | + hello-docker /hello-docker http://10.9.10.89:54917/
fabio_1         | + route add&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们可以查看 Consul UI 中的服务是否运行正常：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/435188/201711/435188-20171115093948312-1302454504.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;或者查看 Fabio UI 中的服务是否存在（通过健康检查后会出现）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/435188/201711/435188-20171115093957031-528735595.png&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;yaml-配置命令&quot;&gt;YAML 配置命令&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;9.5&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;build&lt;/td&gt;
&lt;td&gt;指定 Dockerfile 所在的目录地址，用于构建镜像，并使用此镜像创建容器，比如上面配置的&lt;code&gt;build: .&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;command&lt;/td&gt;
&lt;td&gt;容器的执行命令&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;dns&lt;/td&gt;
&lt;td&gt;自定义 dns 服务器&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;expose&lt;/td&gt;
&lt;td&gt;暴露端口配置，但不映射到宿主机，只被连接的服务访问&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;extends&lt;/td&gt;
&lt;td&gt;对&lt;code&gt;docker-compose.yml&lt;/code&gt;的扩展，配置在服务中&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;image&lt;/td&gt;
&lt;td&gt;使用的镜像名称或镜像 ID&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;links&lt;/td&gt;
&lt;td&gt;链接到其它服务中的容器（一般桥接网络模式使用）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;4&quot;&gt;&lt;td&gt;net&lt;/td&gt;
&lt;td&gt;设置容器的网络模式（四种：&lt;code&gt;bridge&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;container:[name or id]&lt;/code&gt;和&lt;code&gt;host&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;ports&lt;/td&gt;
&lt;td&gt;暴露端口信息，主机和容器的端口映射&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;volumes&lt;/td&gt;
&lt;td&gt;数据卷所挂载路径设置&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;docker-compose-常用命令&quot;&gt;Docker Compose 常用命令&lt;/h3&gt;
&lt;table&gt;&lt;thead/&gt;&lt;tbody readability=&quot;15&quot;&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;docker-compose build&lt;/td&gt;
&lt;td&gt;构建项目中的镜像，&lt;code&gt;--force-rm&lt;/code&gt;：删除构建过程中的临时容器；&lt;code&gt;--no-cache&lt;/code&gt;：不使用缓存构建；&lt;code&gt;--pull&lt;/code&gt;：获取最新版本的镜像&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose up -d&lt;/td&gt;
&lt;td&gt;构建镜像、创建服务和启动项目，&lt;code&gt;-d&lt;/code&gt;表示后台运行&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;docker-compose run ubuntu ls -d&lt;/td&gt;
&lt;td&gt;指定服务上运行一个命令，&lt;code&gt;-d&lt;/code&gt;表示后台运行&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose logs&lt;/td&gt;
&lt;td&gt;查看服务容器输出日志&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose ps&lt;/td&gt;
&lt;td&gt;列出项目中所有的容器&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose pause [service_name]&lt;/td&gt;
&lt;td&gt;暂停一个服务容器&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;4&quot;&gt;&lt;td&gt;docker-compose unpause [service_name]&lt;/td&gt;
&lt;td&gt;恢复已暂停的一个服务容器&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose restart&lt;/td&gt;
&lt;td&gt;重启项目中的所有服务容器（也可以指定具体的服务）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose stop&lt;/td&gt;
&lt;td&gt;停止运行项目中的所有服务容器（也可以指定具体的服务）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose start&lt;/td&gt;
&lt;td&gt;启动已经停止项目中的所有服务容器（也可以指定具体的服务）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;odd&quot; readability=&quot;3&quot;&gt;&lt;td&gt;docker-compose rm&lt;/td&gt;
&lt;td&gt;删除项目中的所有服务容器（也可以指定具体的服务），&lt;code&gt;-f&lt;/code&gt;：强制删除（包含运行的）&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;even&quot; readability=&quot;2&quot;&gt;&lt;td&gt;docker-compose kill&lt;/td&gt;
&lt;td&gt;强制停止项目中的所有服务容器（也可以指定具体的服务）&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;参考资料：&lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 05:27:00 +0000</pubDate>
<dc:creator>田园里的蟋蟀</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/xishuai/p/docker-compose.html</dc:identifier>
</item>
<item>
<title>后端自动化版本管理，再也不用改URL了！ - 孤独的探索号</title>
<link>http://www.cnblogs.com/tommylemon/p/7821324.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/tommylemon/p/7821324.html</guid>
<description>&lt;p&gt;&lt;strong&gt;每次升级接口版本时，后端、前端、客户端都是痛苦的：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;后端：要兼容旧版客户端，以前的接口不能动啊，又得写新接口、新文档了，唉！&lt;/p&gt;
&lt;p&gt;前端：还好，就是版本号到处都是，改起来比较烦。&lt;/p&gt;
&lt;p&gt;Android：快点啊产品催需求呢，服务器别停太久。对了你知道编译一次要多久么？泪奔。。。&lt;/p&gt;
&lt;p&gt;前端：对对，别停太久。还有文档别再写错了啊，上次你复制粘贴的 v3 害我接口调了半天，原来是 v4 。。。&lt;/p&gt;
&lt;p&gt;iOS：我也被坑了。。。&lt;/p&gt;
&lt;p&gt;后端：呃，我尽快，写文档会注意的哈。&lt;/p&gt;
&lt;p&gt;后端：另外旧域名 http://api.aaa.com/v4 也会一直开着，保证不会像上次那样让3.0客户端请求挂的。&lt;/p&gt;
&lt;p&gt;后端：@前端 对了，你们用一个全局的 BASE_URL 存起来，以后改一个地方就好了。&lt;/p&gt;
&lt;p&gt;Android：我们就是这么干的嘿嘿！&lt;/p&gt;
&lt;p&gt;iOS：我们也是，还是我封装的。&lt;/p&gt;
&lt;p&gt;iOS：但问题是往往多个接口版本并存，还是要写好几个BASE_URL，我们这是从BASE_URL_V2到BASE_URL_V4。&lt;/p&gt;
&lt;p&gt;Android：唉，这个就没办法了。&lt;/p&gt;
&lt;p&gt;前端：我们现在也是这么做的，但之前的那家伙没封装啊，写得到处都是。。。&lt;/p&gt;


&lt;p&gt;后端：周哥，升级接口版本好烦啊，你有什么好的办法吗？&lt;/p&gt;
&lt;p&gt;周哥：具体说下你的问题。&lt;/p&gt;
&lt;p&gt;后端：每次都要写新的接口和文档，服务器也要重启，前端和客户端总是抱怨改域名和文档错误。&lt;/p&gt;
&lt;p&gt;         项目很赶，文档是复制粘贴的，总是会落下某些地方没改。&lt;/p&gt;
&lt;p&gt;         但是不复制粘贴吧，你看看这格式，重新写实在是太麻烦了！&lt;/p&gt;
&lt;p&gt;周哥：哈哈，以前我们也总是碰到这种问题，现在解决了。试试这个&lt;/p&gt;
&lt;p&gt;周哥：https://github.com/TommyLemon/APIJSON&lt;/p&gt;
&lt;p&gt;后端：哇，居然还有这么厉害的后端框架啊！我只用过SSH。&lt;/p&gt;
&lt;p&gt;周哥：我也是上个月才知道的，朋友推荐的，我试了一周，非常好用，也没啥大的问题，就整到项目中了。&lt;/p&gt;
&lt;p&gt;周哥：SSH太重了，老项目中APIJSON主要用来实现新接口，新项目就只用APIJSON了。&lt;/p&gt;
&lt;p&gt;后端：可以的。不过它怎么解决版本问题呢？文档里没说啊。&lt;/p&gt;
&lt;p&gt;周哥：写在最下面了。 http://39.108.143.172/ &lt;/p&gt;
&lt;p&gt;后端：可在最外层传版本version来指定使用的版本，不传或 version &amp;lt;= 0 则使用最新版。 ？？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/660067/201711/660067-20171112145151106-870149786.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;周哥：描述确实比较简单，我就问了下作者，他是这么说的：&lt;/p&gt;


&lt;p&gt;TommyLemon:&lt;/p&gt;
&lt;p&gt;可以在请求时传入一个version来指定使用的接口版本号，例如查询用户隐私信息：&lt;/p&gt;
&lt;p&gt;URL: http://39.108.143.172:8080/gets&lt;/p&gt;
&lt;p&gt;表单:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;Privacy&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;id&quot;: 82001&lt;span&gt;,
        &lt;/span&gt;&quot;_password&quot;: &quot;123456&quot;&lt;span&gt;
    },
    &lt;/span&gt;&quot;tag&quot;: &quot;Privacy&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;version&quot;: 1&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;而且只需要登录时传一个全局默认version，之后所有需要登录的接口(一般占绝大部分)就都默认用这个了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;type&quot;: 0&lt;span&gt;,
    &lt;/span&gt;&quot;phone&quot;: &quot;13000082001&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;password&quot;: &quot;123456&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;version&quot;: 1&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;所以查询用户隐私信息就可以省略version了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;Privacy&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;id&quot;: 82001&lt;span&gt;,
        &lt;/span&gt;&quot;_password&quot;: &quot;123456&quot;&lt;span&gt;
    },
    &lt;/span&gt;&quot;tag&quot;: &quot;Privacy&quot;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;因为上面传的version和全局默认version一样，所以服务器返回的结果都一样：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;Privacy&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;id&quot;: 82001&lt;span&gt;,
        &lt;/span&gt;&quot;certified&quot;: 1&lt;span&gt;,
        &lt;/span&gt;&quot;phone&quot;: 13000082001&lt;span&gt;,
        &lt;/span&gt;&quot;balance&quot;: 8067&lt;span&gt;
    },
    &lt;/span&gt;&quot;code&quot;: 200&lt;span&gt;,
    &lt;/span&gt;&quot;msg&quot;: &quot;success&quot;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当然如果某个请求需要用到和全局默认version不一样的接口，也可以指定当前的version：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;Privacy&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;id&quot;: 82001&lt;span&gt;,
        &lt;/span&gt;&quot;_password&quot;: &quot;123456&quot;&lt;span&gt;
    },
    &lt;/span&gt;&quot;tag&quot;: &quot;Privacy&quot;&lt;span&gt;,
    &lt;/span&gt;&quot;version&quot;: 2&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;由于第2版接口改了校验配置，所以返回结果就不一样了：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;Privacy&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;id&quot;: 82001&lt;span&gt;,
        &lt;/span&gt;&quot;_password&quot;: &quot;123456&quot;&lt;span&gt;
    },
    &lt;/span&gt;&quot;code&quot;: 406&lt;span&gt;,
    &lt;/span&gt;&quot;msg&quot;: &quot;Privacy不允许传 _password 等[_password, _payPassword]内的任何字段！&quot;&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注：这个接口需要登录权限，请先点击右上角登录后再请求。 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://39.108.143.172/&quot; target=&quot;_blank&quot;&gt;APIJSON在线测试&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;周哥：我照着这个来，在测试网页一个个试了，确实是这样的。&lt;/p&gt;
&lt;p&gt;后端：但还有个问题，项目中可能多个版本并存，它是不是也要同时维护多个版本啊？&lt;/p&gt;
&lt;p&gt;周哥：哈哈，以前只有两种做法：&lt;/p&gt;
&lt;p&gt;          1.前端根据的需求调对应版本的api，后端只新增对应新需求的api。&lt;/p&gt;
&lt;p&gt;          2.前端只用一个版本，后端对新版不需要改的api v2也提供一个对应新版的api v3，然后和v2一样处理，可以提取v2的代码为一个公共的函数。&lt;/p&gt;
&lt;p&gt;            或者就干脆重定向到v2，这个操作简单些，但要损失一些性能。&lt;/p&gt;
&lt;p&gt;周哥：用APIJSON就只需要把原来旧版的api改下版本号version为一个统一的最新版，请求中传的version如果不存在，则会自动转到比它高的最接近版本。&lt;/p&gt;
&lt;p&gt;后端：也就是我把v1,v2都改成v3，然后前端传v1或v2过来，它就转到v3了？如果不改的话还是转到v2？&lt;/p&gt;
&lt;p&gt;周哥：对的。如果不传version或version&amp;lt;=0，就会强制用最新版。这个在修复某些api漏洞时很有用，把前端请求中的version去掉或者改成0，就可以了。&lt;/p&gt;
&lt;p&gt;后端：我觉得可以直接把api的version改成最新版，这样更简单。&lt;/p&gt;
&lt;p&gt;周哥：确实，小伙子你很聪明啊。&lt;/p&gt;
&lt;p&gt;后端：哈哈，谢谢周哥，我去试试。&lt;/p&gt;
&lt;p&gt;后端：作者很牛啊&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/660067/201711/660067-20171112152143231-792779477.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;周哥：哈哈，我之前也好奇什么人能写出这样的框架。&lt;/p&gt;
&lt;p&gt;周哥：接口都不用写了，都是框架自动实现的，话说现在终于没人再催接口了哈哈！&lt;/p&gt;
&lt;p&gt;后端：真的很好用啊，以后就让前端客户端都在登录时传一个version就搞定了。&lt;/p&gt;
&lt;p&gt;后端：不过项目中还有些不需要登录就能访问的接口，例如注册、找回密码等，这些就只能每次都传一个version了。&lt;/p&gt;
&lt;p&gt;周哥：是的，不过绝大部分接口都是要登录后才能访问的啊。&lt;/p&gt;
&lt;p&gt;后端：也是啊。&lt;/p&gt;
&lt;p&gt;后端：对了，普通的查询请求好像没version的示例啊。&lt;/p&gt;
&lt;p&gt;周哥：因为不需要哈哈，作者说GET，HEAD请求都是开放请求，没有版本限制。我试过了确实是这样。&lt;/p&gt;
&lt;p&gt;后端：也就是不用传version？&lt;/p&gt;
&lt;p&gt;周哥：是的，而且请求非常灵活，可以定制请求的内容、JSON结构，一大堆查询请求的接口都不用自己写了。&lt;/p&gt;
&lt;p&gt;后端：这样啊，太棒了，我去Star一下。&lt;/p&gt;


&lt;p&gt;后端：@前端 @Android @iOS 新版接口写好了。&lt;/p&gt;
&lt;p&gt;后端：大家把新版请求的主域名改成 http://api.aaa.com，以后登录时再传一个version就好了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
  &lt;/span&gt;&quot;version&quot;:5&lt;span&gt;
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前端：这么快？&lt;/p&gt;
&lt;p&gt;iOS：这么快？&lt;/p&gt;
&lt;p&gt;Android：这么快？&lt;/p&gt;
&lt;p&gt;后端：用了新框架嘿嘿！&lt;/p&gt;
&lt;p&gt;Android：不用换版本号v5了？&lt;/p&gt;
&lt;p&gt;iOS：以后会要加上吗?&lt;/p&gt;
&lt;p&gt;后端：不用了，以后也不用 v6,v7 了，域名不会再改了。&lt;/p&gt;
&lt;p&gt;iOS：那不需要登录的接口呢？&lt;/p&gt;
&lt;p&gt;后端：不用管，这几个接口很稳定，暂时不会动的。&lt;/p&gt;
&lt;p&gt;Android：可以的&lt;/p&gt;
&lt;p&gt;iOS：赞&lt;/p&gt;
&lt;p&gt;前端：厉害，怎么做到的啊？&lt;/p&gt;
&lt;p&gt;后端：大家看下这个，我们后端以后的接口都用新框架写。&lt;/p&gt;
&lt;p&gt;后端：https://github.com/TommyLemon/APIJSON&lt;/p&gt;
&lt;p&gt;iOS：支持&lt;/p&gt;
&lt;p&gt;前端：+1&lt;/p&gt;
&lt;p&gt;Android：好棒，我也玩一玩后端嘿嘿！&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;APIJSON - 后端超光速开发框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/660067/201711/660067-20171111183429825-1605129984.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Github&lt;/strong&gt;源码及文档（右上角点&lt;strong&gt;Star支持下吧^_^&lt;/strong&gt;）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/TommyLemon/APIJSON&quot;&gt;https://github.com/TommyLemon/APIJSON&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载客户端（测试服务器地址：&lt;/strong&gt;http://39.108.143.172:8080&lt;strong&gt;）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://files.cnblogs.com/files/tommylemon/APIJSONApp.apk&quot; target=&quot;_blank&quot;&gt;APIJSONClientApp.apk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/img/201704/24105311_bhmH.gif&quot; alt=&quot;&quot; width=&quot;270&quot; height=&quot;480&quot;/&gt;&lt;img src=&quot;https://static.oschina.net/uploads/img/201704/24105311_4vcc.gif&quot; alt=&quot;&quot; width=&quot;270&quot; height=&quot;480&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Tue, 21 Nov 2017 05:24:00 +0000</pubDate>
<dc:creator>孤独的探索号</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/tommylemon/p/7821324.html</dc:identifier>
</item>
<item>
<title>javascript函数式编程（一） - breezefeng</title>
<link>http://www.cnblogs.com/fengyuqing/p/functional_programming_1.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/fengyuqing/p/functional_programming_1.html</guid>
<description>&lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　javascript函数式编程在最近两年来频繁的出现在大众的视野，越来越多的框架（react，angular，vue等）标榜自己使用了函数式编程的特性，好像一旦跟函数式编程沾边，就很高大上一样，而且还有一些专门针对函数式编程的框架和库，比如：RxJS、cycleJS、ramdaJS、lodashJS、underscoreJS等。近年来随着技术的发展，函数式编程已经在实际生产中发挥巨大的作用了，越来越多的语言开始加入闭包，匿名函数等非常典型的函数式编程的特性，从某种程度上来讲，函数式编程正在逐步“同化”命令式编程。所以这里有必要介绍一下函数式编程的知识和特性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、纯函数（函数式编程的基石）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　如果你还记得一些初中数学知识的话，函数f的定义就是，对于输入x产生一个输出y=f(x)。这便是一种最简单的纯函数。&lt;strong&gt;所以纯函数的定义是：即对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;副作用可能包含，但不限于：&lt;/p&gt;
&lt;p&gt;　　1.更改文件系统&lt;br/&gt;　　2.往数据库插入记录&lt;br/&gt;　　3.发送一个 http 请求&lt;br/&gt;　　4.可变数据&lt;br/&gt;　　5.打印/log&lt;br/&gt;　　6.获取用户输入&lt;br/&gt;　　7.DOM 查询&lt;br/&gt;　　8.访问系统状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;　　&lt;/strong&gt;下面举个栗子，比如在javascript中对数组的操作，有些是纯的，有些是不纯的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; xs = [1,2,3,4,5&lt;span&gt;];

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 纯的&lt;/span&gt;
xs.slice(0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; [1,2,3]&lt;/span&gt;
&lt;span&gt;
xs.slice(&lt;/span&gt;0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; [1,2,3]&lt;/span&gt;
&lt;span&gt;
xs.slice(&lt;/span&gt;0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; [1,2,3]&lt;/span&gt;


&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 不纯的&lt;/span&gt;
xs.splice(0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; [1,2,3]&lt;/span&gt;
&lt;span&gt;
xs.splice(&lt;/span&gt;0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; [4,5]&lt;/span&gt;
&lt;span&gt;
xs.splice(&lt;/span&gt;0,3&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; []&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在函数式编程中，我们想要的是像slice这样的纯函数，而不是像 splice 这样每次调用后都把数据弄得一团糟的函数。&lt;/p&gt;
&lt;p&gt;　　再看另外一个栗子：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 不纯的&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; minimum = 21&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; checkAge = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(age) {
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; age &amp;gt;=&lt;span&gt; minimum;
};


&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 纯的&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; checkAge = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(age) {
  &lt;/span&gt;&lt;span&gt;var&lt;/span&gt; minimum = 21&lt;span&gt;;
  &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; age &amp;gt;=&lt;span&gt; minimum;
};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　在不纯的版本中，checkAge 的结果将取决于 minimum这个可变变量的值。换句话说，它取决于系统状态。在大型系统中，这种对于外部状态的依赖是造成系统复杂性大大提高的主要原因。&lt;/p&gt;
&lt;p&gt;　　可以看到，纯的checkAge把minimum硬编码到函数内部，导致函数扩展性差，我们可以在后面的&lt;strong&gt;柯里化&lt;/strong&gt;中看到如何优雅的使用函数式解决这个问题。&lt;/p&gt;
&lt;p&gt; 　　使用纯函数不仅可以降低系统复杂度，还有很多其他特性，比如可缓存性：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; squareNumber  = memoize(&lt;span&gt;function&lt;/span&gt;(x){ &lt;span&gt;return&lt;/span&gt; x*&lt;span&gt;x; });

squareNumber(&lt;/span&gt;4&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt; 16&lt;/span&gt;
&lt;span&gt;
squareNumber(&lt;/span&gt;4); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; 从缓存中读取输入值为 4 的结果&lt;/span&gt;&lt;span&gt;
//&lt;/span&gt;&lt;span&gt;=&amp;gt; 16&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;三、函数柯里化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　curry 的概念很简单：将一个低阶函数转换为高阶函数的过程就叫柯里化。&lt;/p&gt;
&lt;p&gt;　　&lt;img src=&quot;http://images2017.cnblogs.com/blog/532971/201711/532971-20171121112636821-563527151.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　比如对于加法操作var add = (x, y) =&amp;gt; x + y，我们可以这样柯里化：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;es5写法&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; add = &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (x) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt; (y) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; x +&lt;span&gt; y;
    };
};

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;es6写法 &lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; add = x =&amp;gt; (y =&amp;gt; x +&lt;span&gt; y);

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;试试看&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; add2 = add(2&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; add200 = add(200&lt;span&gt;);

add2(&lt;/span&gt;2); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;4&lt;/span&gt;
add200(50); &lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;250&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 　　对于加法这种极其简单的函数来说，柯里化并没有什么用处。&lt;/p&gt;
&lt;p&gt;　　还记得上面的checkAge函数吗，我们可以这样柯里化它：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; checkage = min =&amp;gt; (age =&amp;gt; age &amp;gt;&lt;span&gt; min);
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; checkage18 = checkage(18&lt;span&gt;);
checkage18(&lt;/span&gt;20&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;事实上，函数柯里化是一种“预加载”函数的方法，通过传递一到两个参数调用函数，就能得到一个记住了这些参数的新函数。从某种意义上来讲，这是一种对参数的缓存，是一种非常高效的编写函数的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
import { curry } from 'lodash'&lt;span&gt;;

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;首先柯里化两个纯函数&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; match = curry((reg, str) =&amp;gt;&lt;span&gt; str.match(reg));
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; filter = curry((f, arr) =&amp;gt;&lt;span&gt; arr.filter(f));

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;判断字符串里有没有空格&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; haveSpace = match(/\s+/&lt;span&gt;g);

haveSpace(&lt;/span&gt;&quot;ffffffff&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt;null&lt;/span&gt;
&lt;span&gt;
haveSpace(&lt;/span&gt;&quot;a b&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt;[&quot; &quot;]&lt;/span&gt;
&lt;span&gt;
filter(haveSpace, [&lt;/span&gt;&quot;abcdefg&quot;, &quot;Hello World&quot;&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;=&amp;gt;[&quot;Hello world&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;四、函数组合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　学会了使用纯函数以及如何把它柯里化之后，我们会很容易写出这样的“包菜式”代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
h(g(f(x)));
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　虽然这也是函数式代码，但它依然存在某种意义上的不优雅。为了解决函数嵌套问题，我们需要用到函数组合。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;两个函数的组合&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; compose = &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(f, g) {
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;function&lt;/span&gt;&lt;span&gt;(x) {
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; f(g(x));
    };
};

&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt;或者&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; compose = (f, g) =&amp;gt; (x =&amp;gt;&lt;span&gt; f(g(x)));

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; add1 = x =&amp;gt; x + 1&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; mul5 = x =&amp;gt; x * 5&lt;span&gt;;

compose(mul5, add1)(&lt;/span&gt;2&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;15 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　我们定义的compose就像双面胶一样，可以把任何两个纯函数结合到一起。当然你也可以扩展出组合三个函数的“三面胶”，甚至“四面胶”“N面胶”。&lt;/p&gt;
&lt;p&gt;　　这种灵活的组合可以让我们像拼积木一样来组合函数式的代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; first = arr =&amp;gt; arr[0&lt;span&gt;];
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; reverse = arr =&amp;gt;&lt;span&gt; arr.reverse();

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; last =&lt;span&gt; compose(first, reverse);

last([&lt;/span&gt;1,2,3,4,5&lt;span&gt;]);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;五、声明式和命令式代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 　　命令式代码的意思是，我们通过编写一条条指令告诉计算机去执行一系列动作，这其中一般会涉及到很多繁杂的细节。&lt;/p&gt;
&lt;p&gt;　　而声明式则要优雅的多，我们通过书写表达式的方式声明我们要干什么，而不是通过一步步的指示。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
const doubleMap = numbers =&amp;gt;&lt;span&gt; {
    const doubled &lt;/span&gt;=&lt;span&gt; [];
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; (let i = 0; i &amp;lt; numbers.length; i++&lt;span&gt;) {
        doubled.push(numbers[i] &lt;/span&gt;* 2&lt;span&gt;);
    }
    &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; doubled;
};

doubleMap([&lt;/span&gt;2, 3, 4]); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;[4, 6, 8]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　命令式的写法要求先实例化一个数组，然后对numbers数组进行for循环遍历，手动命名、判断、增加计数器，就像你开了一辆零部件全部暴露在外的汽车一样。这不是优雅的程序员应该做的。&lt;/p&gt;
&lt;p&gt;　　声明式的写法是一个表达式，如何进行计数器迭代，返回的数组如何收集，这些细节都隐藏了起来。它指明的是做什么，而不是怎么做。除了更加清晰和简洁之外，map 函数还可以进一步独立优化，甚至用解释器内置的速度极快的 map 函数，这么一来我们主要的业务代码就无须改动了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
const doubleMap = numbers =&amp;gt; numbers.map(n =&amp;gt; n * 2&lt;span&gt;);

doubleMap([&lt;/span&gt;2, 3, 4]); &lt;span&gt;//&lt;/span&gt;&lt;span&gt;[4, 6, 8]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　函数式编程的一个明显的好处就是这种声明式的代码，对于无副作用的纯函数，我们完全可以不考虑函数内部是如何实现的，专注于编写业务代码。优化代码时，目光只需要集中在这些稳定坚固的函数内部即可。&lt;/p&gt;
&lt;p&gt;　　相反，不纯的不函数式的代码会产生副作用或者依赖外部系统环境，使用它们的时候总是要考虑这些不干净的副作用。在复杂的系统中，这对于程序员的心智来说是极大的负担。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、Point Free&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　有了柯里化和函数组合的基础知识，下面介绍一下Point Free这种代码风格。&lt;/p&gt;
&lt;p&gt;　　细心的话你可能会注意到，之前的代码中我们总是喜欢把一些对象自带的方法转化成纯函数：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; map = (f, arr) =&amp;gt;&lt;span&gt; arr.map(f);

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; toUpperCase = word =&amp;gt; word.toUpperCase();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这种做法是有原因的。&lt;/p&gt;
&lt;p&gt;　　Point Free这种模式现在还暂且没有中文的翻译，用中文解释的话大概就是，不要命名转瞬即逝的中间变量，比如：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;这不Piont free&lt;/span&gt;
&lt;span&gt;var&lt;/span&gt; f = str =&amp;gt; str.toUpperCase().split(' ');
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这个函数中，我们使用了 str 作为我们的中间变量，但这个中间变量除了让代码变得长了一点以外是毫无意义的。下面改造一下这段代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;var&lt;/span&gt; toUpperCase = word =&amp;gt;&lt;span&gt; word.toUpperCase();
&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; split = x =&amp;gt; (str =&amp;gt;&lt;span&gt; str.split(x));

&lt;/span&gt;&lt;span&gt;var&lt;/span&gt; f = compose(split(' '&lt;span&gt;), toUpperCase);

f(&lt;/span&gt;&quot;abcd efgh&quot;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; =&amp;gt;[&quot;ABCD&quot;, &quot;EFGH&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;　　这种风格能够帮助我们减少不必要的命名，让代码保持简洁和通用。当然，为了在一些函数中写出Point Free的风格，在代码的其它地方必然是不那么Point Free的，这个地方需要自己取舍。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七、示例应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　拥有了以上的知识，我们是时候该写一个示例应用了。&lt;/p&gt;
&lt;p&gt;　　这里我们使用了 ramda ，没有用 lodash 或者其他类库。ramda 提供了 compose、curry 等很多函数。&lt;/p&gt;
&lt;p&gt;　　我们的应用将做四件事：&lt;/p&gt;
&lt;p&gt;　　  1.根据特定搜索关键字构造 url&lt;br/&gt;　  　2.向 flickr 发送 api 请求&lt;br/&gt;　　  3.把返回的 json 转为 html 图片&lt;br/&gt;　　  4.把图片放到屏幕上&lt;/p&gt;
&lt;p&gt;　　上面提到了两个不纯的动作，即从 flickr 的 api 获取数据和在屏幕上放置图片这两件事。我们先来定义这两个动作，这样就能隔离它们了。这里我们只是简单包装了一下jQuery的getJSON函数，把它变为一个 curry 函数，还有就是把参数位置也调换了下，我们把它们放在 Impure 命名空间下以用来隔离，这样我们就知道它们都是危险函数。&lt;/p&gt;
&lt;p&gt;　　运用函数柯里化和函数组合的技巧，我们就可以创建一个函数式的实际应用了：&lt;/p&gt;

&lt;p&gt; 看看，多么美妙的声明式规范啊，只说做什么，不说怎么做。现在我们可以把每一行代码都视作一个等式，变量名所代表的属性就是等式的含义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;八、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们已经见识到如何在一个小而不失真实的应用中运用新技能了，但是异常处理以及代码分支呢？如何让整个应用都是函数式的，而不仅仅是把破坏性的函数放到命名空间下？如何让应用更安全更富有表现力？我会在下一篇文章中介绍函数式编程的更加高阶一些的知识，例如Functor、Monad、Applicative等概念。&lt;/p&gt;

</description>
<pubDate>Tue, 21 Nov 2017 04:21:00 +0000</pubDate>
<dc:creator>breezefeng</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/fengyuqing/p/functional_programming_1.html</dc:identifier>
</item>
<item>
<title>Kaggle实战之一回归问题 - daniel-D</title>
<link>http://www.cnblogs.com/daniel-D/p/7868968.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/daniel-D/p/7868968.html</guid>
<description>&lt;h2&gt; &lt;/h2&gt;

&lt;h3&gt;0. 前言&lt;/h3&gt;
&lt;h3&gt;1.任务描述&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;预测任务：根据某时刻房价相关数据，预测区域内该时刻任一街区的平均房价，决定是否对投资该街区的房子。&lt;/li&gt;
&lt;li&gt;评估函数：RMSE&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;评估函数：RMSE即&lt;span class=&quot;MathJax_Preview&quot;&gt;&lt;span id=&quot;MathJax-Element-1-Frame&quot; class=&quot;MathJax_SVG&quot;&gt;损失函数，范数越大，越注重预测值误差大的样例&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;工具：ipython notebook&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;2.数据概览&lt;/h3&gt;
&lt;h4&gt;整体概况&lt;/h4&gt;
&lt;p&gt;用 python 的pandas包导入样本数据，查看前五行，每一行表示一个街区，包含十项数据特征：&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;经度&lt;/th&gt;
&lt;th&gt;维度&lt;/th&gt;
&lt;th&gt;房龄&lt;/th&gt;
&lt;th&gt;房间数&lt;/th&gt;
&lt;th&gt;卧室数&lt;/th&gt;
&lt;th&gt;人口数&lt;/th&gt;
&lt;th&gt;家庭数&lt;/th&gt;
&lt;th&gt;收入&lt;/th&gt;
&lt;th&gt;房价&lt;/th&gt;
&lt;th&gt;临海&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;-122.23&lt;/td&gt;
&lt;td&gt;37.88&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;880&lt;/td&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;td&gt;322&lt;/td&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;td&gt;8.3252&lt;/td&gt;
&lt;td&gt;452600&lt;/td&gt;
&lt;td&gt;NEAR BAY&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-122.22&lt;/td&gt;
&lt;td&gt;37.86&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;7099&lt;/td&gt;
&lt;td&gt;1106&lt;/td&gt;
&lt;td&gt;2401&lt;/td&gt;
&lt;td&gt;1138&lt;/td&gt;
&lt;td&gt;8.3014&lt;/td&gt;
&lt;td&gt;358500&lt;/td&gt;
&lt;td&gt;NEAR BAY&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-122.24&lt;/td&gt;
&lt;td&gt;37.85&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;1467&lt;/td&gt;
&lt;td&gt;190&lt;/td&gt;
&lt;td&gt;496&lt;/td&gt;
&lt;td&gt;177&lt;/td&gt;
&lt;td&gt;7.2574&lt;/td&gt;
&lt;td&gt;352100&lt;/td&gt;
&lt;td&gt;NEAR BAY&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-122.25&lt;/td&gt;
&lt;td&gt;37.85&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;1274&lt;/td&gt;
&lt;td&gt;235&lt;/td&gt;
&lt;td&gt;558&lt;/td&gt;
&lt;td&gt;219&lt;/td&gt;
&lt;td&gt;5.6431&lt;/td&gt;
&lt;td&gt;341300&lt;/td&gt;
&lt;td&gt;NEAR BAY&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-122.25&lt;/td&gt;
&lt;td&gt;37.85&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;1627&lt;/td&gt;
&lt;td&gt;280&lt;/td&gt;
&lt;td&gt;565&lt;/td&gt;
&lt;td&gt;259&lt;/td&gt;
&lt;td&gt;3.8462&lt;/td&gt;
&lt;td&gt;342200&lt;/td&gt;
&lt;td&gt;NEAR BAY&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;其中&lt;strong&gt;房价&lt;/strong&gt;一列实际是此次任务的 &lt;strong&gt;label&lt;/strong&gt;， 查看数据基本情况：&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;   &lt;span&gt;RangeIndex: 20640 entries, 0 to 20639&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;可以看到一共有 20640 行记录，注意到其中 &lt;strong&gt;total_rooms&lt;/strong&gt; 属性有207行缺失，&lt;strong&gt;ocean_proximity&lt;/strong&gt; 属性是 object 类型，查看该属性的统计情况：&lt;/p&gt;

&lt;p&gt;对9项数值型属性画直方图，感受下每个属性的分布情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121004500461-235727193.png&quot; alt=&quot;&quot; width=&quot;492&quot; height=&quot;2108&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到 housing_median_age、median_house_value、median_income 有明显的翘尾情况，说明这三个属性在数据收集阶段，做过被截断处理。median_house_value 作为此次任务的预测目标值，它的截断处理在实际情况中可能是个问题，因为它意味着你模型的预测值可能无法超过这个上限。上图还可以看出有四项属性属于“长尾分布”的情况，一般来说，机器学习的模型更喜欢类似正态分布的“钟型”特征。&lt;/p&gt;
&lt;h4&gt;可视化&lt;/h4&gt;
&lt;p&gt;人脑非常擅长图像视觉的信息处理。用经度纬度确定地理位置，用圆圈大小表示人口数量，用热力图表示房价高低，再从外部导入一张经纬度吻合的地图，可以得到一张可视化的数据图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121004858571-623183442.png&quot; alt=&quot;&quot; width=&quot;493&quot; height=&quot;345&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可以看到海景房房价普遍偏高，但是北部区域是个例外，说明临海距离应该是个很好的特征。另外，人口聚集地中心区域，房价也相应偏高，是不是做聚类之后，计算到聚类中心的距离也是一个很好的特征呢？&lt;/p&gt;
&lt;h4&gt;相关性计算&lt;/h4&gt;
&lt;p&gt;相关性既包括特征与label的相关性，也包括特征之间的相关性。首先看特征与 label 之间的皮尔逊系数：&lt;/p&gt;

&lt;p&gt;观察房价与收入的二维图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121004950165-2108659247.png&quot; alt=&quot;&quot; width=&quot;495&quot; height=&quot;330&quot;/&gt;&lt;/p&gt;
&lt;p&gt;总体上，房价与收入具有很强的相关性，收入越高，该地区的房价也越高。但是也有一些收入较高，但是房价很低，或者收入较低，房价奇高的点，可能是异常点，需要从训练数据中去除。&lt;/p&gt;
&lt;h3&gt;3. 数据准备&lt;/h3&gt;
&lt;h4&gt;随机采样&lt;/h4&gt;
&lt;p&gt;测试集从数据集中分离而来，大小一般设置为全部数据的20%。分离的办法可以随机取，有点是采样均匀，缺点是每次取出的测试集可能不一样。要克服这个缺点，在随机取的时候，可以固定随机数种子。其他的方法还有根据某列属性的尾号或者 md5 来划分，优点是每次运行的测试集是固定的，确定是要确保尾号或者 md5 数值是均匀分布的，并且与 label 不存在相关性。在工业界，上线算法ab分桶时，常常也用类似的方法，比如按照用户id尾号分流、按照用户id的md5分流等，特别要注意未登录用户的分桶情况，因为未登录用户与点击率是有相关性的。&lt;/p&gt;
&lt;h4&gt;分组按比例随机采样&lt;/h4&gt;
&lt;p&gt;随机产生测试集，可能有的一个弊端是，重要属性的部分区间可能丢失。举个极端的例子，在所有分类模型中，label是最重要的属性，假设100个样本中只有2个正样本，则有很大概率训练样本全部是负样本。这个任务中，&lt;strong&gt;median_income&lt;/strong&gt; 属性是决定房价的一个重要特征，在直方图中，可以看到收入大于7.5的样本已经比较稀疏了。如果完全按照随机采样方法产生训练样本和测试样本，有可能训练样本中完全不包含收入大于7.5的样本，这对于模型训练是很不利的。&lt;/p&gt;
&lt;p&gt;解决的方法很简单，将 &lt;strong&gt;median_income&lt;/strong&gt; 进行分组，每组里面按照0.2的比例抽取测试样本。分组的时候，注意每组里面样本数量不能太少，可以参考如下处理方法：&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;group = ceil(min(median\_income,7.5) / 1.5)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;strong&gt;median_income&lt;/strong&gt; 分为5组，每组按比例采样，这样处理的结果是，测试样本在 &lt;strong&gt;median_income&lt;/strong&gt; 的分布，比当做整体（一组）完全随机采样的方法，更符合整体分布。&lt;/p&gt;
&lt;h4&gt;数据预处理&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;空值处理&lt;/strong&gt;：数据清洗包括，&lt;strong&gt;total_rooms&lt;/strong&gt; 用中位数代替，&lt;strong&gt;ocean_proximity&lt;/strong&gt; 用one-hot-encode编码转为数值型，one-hot-encode与直接编码为 [0,1,2,3..] 相比，不会引入相似或者相近的意义。比如 2 和 3 在数值上相近，但是它们各自表示的NEAR BAY与INLAND属性项并不存在实质的相似关系（尽管有这个可能）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构造特征&lt;/strong&gt;：数据集里因为不同district里户数不同，所以 total_rooms、total_bedrooms、population 这些属性可能没有太大的意义，而每户的房间数、卧室数、人数相关性则较，所有在数据集中可以新增这些特征。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;归一化&lt;/strong&gt;：数值型特征的一个特点是，不同的属性取值范围差别极大，对模型学习、正则项设置不利。有两种简单的方法可以应对这种情况：变换到0-1区间的归一化或者标准正态分布。前者对异常点非常敏感，如果存在某个值比正常值区间距离很远，这种处理会导致正常数据点分布过于集中；后者对过于集中的数据分布敏感，如果原数据集方差很小，除以近0的数值容易导致精度失真。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偏度处理&lt;/strong&gt;：在大部分数值型特征中，通常分布不符合正态分布，而是类似于“长尾”。例如房价中，低价占大部分，豪宅属于小部分。应对这种数据分布，一般可以通过神奇的log化处理转化类近似正态分布。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span class=&quot;md-line md-end-block md-focus&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;4.4132231404959&quot;&gt;
&lt;p&gt;&lt;span class=&quot;md-expand&quot;&gt;中场休息时间。。。喝口茶~ 欢迎关注公众号：kaggle实战，或博客：&lt;span class=&quot;md-expand&quot;&gt;&lt;a href=&quot;http://www.cnblogs.com/daniel-D/&quot;&gt;http://www.cnblogs.com/daniel-D/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;4. 模型训练&lt;/h3&gt;
&lt;h4&gt;训练集和测试集&lt;/h4&gt;
&lt;p&gt;先用线性回归模型在训练集上训练，然后用训练好的模型再次预测&lt;strong&gt;训练集&lt;/strong&gt;的label，计算RMSE为6.8w刀，MAE误差为4.9w刀，模型明显underfitting。解决的方法有：用复杂模型、用更好的特征、用更弱的约束。&lt;/p&gt;
&lt;p&gt;改用决策树模型进行训练，得到训练集的误差为0.0，在测试集中误差极大 。在回归问题里，百分百完全预测准确基本是不可能的，说明模型存在过拟合现象。解决的方法有：用简单模型、用更大的数据量、更强的约束、ensemble方法等。为了更好评估过拟合情况，可以用 K-fold 进行交叉验证。基本过程如下：把全部数据集随机分成K份，每次挑选其中K-1份训练数据，剩下一份作为测试集计算误差，总共重复K次。相比于只划分一份训练集和测试集，这种方法更加健壮。&lt;/p&gt;
&lt;p&gt;随机森林模型是多个决策树模型ensemble后的结果，比单个决策树模型具有更强抗overfitting的能力。改用随机森林模型进行训练，发现结果好得多，但是测试集误差依旧远远大于训练集误差，说明模型还需要更强的约束。为了找到较好的约束参数，可以采用grid search方法。&lt;/p&gt;
&lt;h4&gt;grid search&lt;/h4&gt;
&lt;p&gt;模型的超参可能有多个，每个有多种选择，由此形成了参数网格grid。前面讲过用交叉验证的方法可以评估一个模型的效果，以上两种方法结合，可以让模型遍历每个网格点，用交叉验证的方法得到该网格点的模型预测误差，从而找到表现最好的模型。最终找的的较好超参是 max_features 为6，n_estimators 为 30, RMSE 49900。&lt;/p&gt;

&lt;h3&gt;5. kaggle实战&lt;/h3&gt;
&lt;p&gt;准确率top4%的 kenerl &lt;a href=&quot;https://www.kaggle.com/serigne/stacked-regressions-top-4-on-leaderboard&quot;&gt;地址链接&lt;/a&gt;，真实的数据集和本文以上描述有所区别&lt;/p&gt;
&lt;h4&gt;数据处理&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;outliers直接用边界值去除，注意去除过程也是也风险的。&lt;/li&gt;
&lt;li&gt;分析target分布，发现有偏斜，用log转化为近似正态分布&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;特征工程&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;空值处理&lt;/strong&gt;。空值的处理方法要因地制宜，主要有：转换为某个固定字符串如“None”或者用0代替；以用近邻记录该特征的中位数代替；通过其他特征推断；用数据集中最常出现的值代替；部分可以移除等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型转换&lt;/strong&gt;。数值型特征可能表示category信息，统一转化为str类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码&lt;/strong&gt;。所有类别特征都转化为one hot encode，对于可能包含顺序关系的，额外添加label encode编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;添加特征&lt;/strong&gt;。在现有特征上，变换添加可能对预测目标有强关联的特征。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Box-Cox变换&lt;/strong&gt;。对偏度大于0.75的数值型特征进行Box-Cox变换（类似于log），转换为近正态分布。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121105750149-398601674.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121105804399-104123670.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h4&gt;模型训练&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;先后应用&lt;strong&gt;LASSO Regression&lt;/strong&gt;、&lt;strong&gt;Elastic Net Regression&lt;/strong&gt;、&lt;strong&gt;Kernel Ridge Regression&lt;/strong&gt;、&lt;strong&gt;Gradient Boosting Regression&lt;/strong&gt;、&lt;strong&gt;XGBoost&lt;/strong&gt;、&lt;strong&gt;LightGBM&lt;/strong&gt;基础模型，注意部分模型对scale较敏感，应先经过RobustScaler处理。&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Stacking models&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;最简单的方法，以上模型预测值取平均，可以得到比单个模型好的预测效果。&lt;/li&gt;
&lt;li&gt;次简单的方法，因为不同模型精度不一样，理应取不同的权重，上面直接取平均太粗暴，改用 regression 来训练权重。所以训练集还需要划分出一部分数据，用来训练lasso regression模型。&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Ensembling&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;用 ElasticNet、KernelRidge、 GradientBoostingRegressor 做底层模型，用 lasso regression 来得到每个模型的权重，Stacking models RMSE loss：0.07815&lt;/li&gt;
&lt;li&gt;用 XGBRegressor 单模型得分RMSE loss：0.07851&lt;/li&gt;
&lt;li&gt;用 LGBMRegressor 单模型得分RMSE loss： 0.07194&lt;/li&gt;
&lt;li&gt;最后拍个权重，求平均：stacked_pred*0.70 + xgb_pred*0.15 + lgb_pred*0.15 得到最终预测RMSE loss： 0.07524&lt;/li&gt;
&lt;/ul&gt;&lt;h4 class=&quot;md-end-block md-heading md-focus&quot;&gt;&lt;span class=&quot;md-expand&quot;&gt;相关资料&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://images2017.cnblogs.com/blog/533521/201711/533521-20171121010845586-1228195820.jpg&quot; alt=&quot;&quot; width=&quot;153&quot; height=&quot;153&quot;/&gt; &lt;/p&gt;
</description>
<pubDate>Tue, 21 Nov 2017 03:02:00 +0000</pubDate>
<dc:creator>daniel-D</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/daniel-D/p/7868968.html</dc:identifier>
</item>
<item>
<title>单表代替密码原理及算法实现 - Angel_Kitty</title>
<link>http://www.cnblogs.com/ECJTUACM-873284962/p/7872114.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/ECJTUACM-873284962/p/7872114.html</guid>
<description>&lt;div id=&quot;post_content_12850062120&quot; readability=&quot;127&quot;&gt;
&lt;h3&gt;二、由独立试验产生双字母。根据Beker在1982年统计的英文双字母的频数给出了双字母的频率。&lt;/h3&gt;
      统计出的英文双字母的概率最大的30对字母按概率大小排列为：&lt;p&gt;th    he    in    er    an    re    ed    on    es    st    en    at    to    nt    ha    nd    ou    ea    ng    as    or    ti    is    et    it    ar    te     se    hi    of  &lt;br/&gt;      只要我们随意统计足够长的英文课文，只要内容不是太特殊，其结果一定和上面的概率基本相同，这也表明双字母在英文课文中出现的概率是基本可预测的，它为密码分析提供了又一方面的依据。&lt;/p&gt;&lt;p&gt;      类似的，我们还可以考察英文课文中三字母出现的频率。仍按Beker在1982年统计的结果(样本总数100 360)得到概率最大的20组三字母按概率大小排列为：&lt;/p&gt;&lt;p&gt;the    ing    and    her    ere    ent    tha    nth    was    eth    for    dth    hat    she    ion    his    sth    ers    ver  &lt;br/&gt;      特别，the出现的频率几乎为ing的3倍。&lt;br/&gt;      应当强调指出，在利用统计分析法时，密文量要足够大，否则会加大密码攻击的难度。在实际通信中，除了字母外，还有诸如标点、数字等字符，它们的统计特性也必须考虑进去。数据格式、报头信息对于密码体制的安全有重要意义，在密码分析中也起着重要的作用。&lt;br/&gt;      在分析或攻击一份密报时利用英文的下述统计特性很有帮助。&lt;br/&gt;      ⑴冠词the对英文的统计特性影响很大，它使t，h，th，he和the在单字母、双字母和三字母的统计中都为高概率的元素。&lt;br/&gt;      ⑵英文单词中以 E,S,D,T 为结尾的超过一半&lt;br/&gt;      ⑶英文单词中以 T,A,S,W 为起始字母的约占一半&lt;br/&gt;      ⑷①在分析或攻击密文时应先找突破口，一般来说，先从the a i入手。(能一个字母独立作为单词的只有a、I，而且频率较高时优先考虑a)&lt;br/&gt;      ②如果有“’”出现，“’”后的一个字母只能是t s l d v中的一个；如果是两个字母，则只能是re ll。(两个不同字母即是re，相同即是ll)&lt;br/&gt;      ③其它规律：如果四字单词词末有两个相同字母，往往是ll；&lt;br/&gt;      以a开头的三字单词只能是and are中的一个；&lt;br/&gt;      两个字母的组合中如果出现q*，则*是u(q后几乎总是u)；&lt;br/&gt;      如果一个单词的开头和结尾是同一个字母，最可能的是：s t d；&lt;br/&gt;      两个都是辅音的双字母组合，常含有n或t；io、ou和ea是最常见的双元音字母组；&lt;br/&gt;      如果单词的头两个字母都是辅音，则第二个字母最可能是：r、l和h；&lt;br/&gt;      如果一个三次以三个辅音结尾，那最常见的是-ght和-tch；&lt;br/&gt;      反向双字母组合： er-re, es-se, an-na, it-ti, on-no, en-ne, ot-to,ed-de, st-ts, at-ta, ar-ra, in-ni；&lt;/p&gt;&lt;p&gt;      小词的使用频率&lt;br/&gt;      1-letter: a,i,o&lt;br/&gt;      2-letter: of,to,in,is,it,be,as,at&lt;br/&gt;      3-letter: the,and,for,are,but,not,you,all&lt;br/&gt;      4-letter: that,with,have,this,will,your,from,they&lt;br/&gt;      5-letter: which,would,there&lt;/p&gt;&lt;p&gt;      元音字母：a,e,i,o,u&lt;br/&gt;      元音后最常见的字母是n，元音前最常见的字母是h&lt;/p&gt;&lt;p&gt;      常见的双字母前缀 re co un com il ir up&lt;br/&gt;      最常用的三字母后缀 ion ing&lt;br/&gt;      最常见词尾 ed es er&lt;/p&gt;&lt;/div&gt;&lt;div readability=&quot;52&quot;&gt;【例】&lt;br/&gt;      1.攻击例题：&lt;br/&gt;      给定密文为GROX CMRYYVLYIC COXN COMBOD WOCCKQOC DY OKMR YDROB DROI YPDOX SXFOXD K MYNO LI VODDSXQ OKMR VODDOB YP DRO KVZRKLOB BOZBOCOXD KXYDROB YXO&lt;p&gt;      攻击的第一步是做出密文字母出现的频次分布表&lt;br/&gt;&lt;img class=&quot;BDE_Image&quot; src=&quot;https://imgsa.baidu.com/%D6%F2%D3%B0%D2%A1%BA%EC%C7%E0%B5%C6%BE%C9/pic/item/29982dd89e54057d10df9b47.jpg&quot; alt=&quot;&quot; width=&quot;570&quot; height=&quot;33&quot;/&gt;&lt;br/&gt;第二步是根据密文字母的频次统计，确定某些密文字母对应的明文字母可能是单字母频率统计表中的哪些字母。此例中&lt;br/&gt;      密文字母           对应的明文字母&lt;br/&gt;      O,D,B,V                e,t,r,l&lt;br/&gt;      第三步是利用自然语言的文字结合规律进行猜测。D经常出现在词头或词尾，故猜测它与t对应；而P经常在词尾出现而未在词头出现，所以猜测它与明文字母e对应；K单独出现且频率较高，猜测与a对应。&lt;br/&gt;      利用双字母、三字母统计特性及元音辅音拼写知识，可猜测如下：&lt;br/&gt;&lt;img class=&quot;BDE_Image&quot; src=&quot;https://imgsa.baidu.com/%D6%F2%D3%B0%D2%A1%BA%EC%C7%E0%B5%C6%BE%C9/pic/item/b3a639c71c8aa74a9c163d65.jpg&quot; alt=&quot;&quot; width=&quot;570&quot; height=&quot;72&quot;/&gt;&lt;br/&gt;由此不难猜出：GROX是when，OKMR是each，VODDSXQ是letting，KXYDROB是another，DY是to。&lt;br/&gt;      再得到下表：&lt;br/&gt;&lt;img class=&quot;BDE_Image&quot; src=&quot;https://imgsa.baidu.com/%D6%F2%D3%B0%D2%A1%BA%EC%C7%E0%B5%C6%BE%C9/pic/item/8e7d16832cd9b9f30df4d26e.jpg&quot; alt=&quot;&quot; width=&quot;570&quot; height=&quot;70&quot;/&gt;&lt;br/&gt;再做进一步确定就可确定C,W,I,N,F,Q,Z对应的明文字母。经过整理恢复的明文如下：&lt;br/&gt;when schoolboys send secret messages to each other they often invent a code by letting each letter of the alphaber represent another one.&lt;/p&gt;&lt;/div&gt;&lt;div readability=&quot;65&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; #include &amp;lt;iostream&amp;gt;
&lt;span&gt; 2&lt;/span&gt; #include &amp;lt;fstream&amp;gt;
&lt;span&gt; 3&lt;/span&gt; #include &amp;lt;cstdlib&amp;gt;
&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;using&lt;/span&gt; &lt;span&gt;namespace&lt;/span&gt;&lt;span&gt; std;
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; c[&lt;span&gt;27&lt;/span&gt;]={&lt;span&gt;'&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;j&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;z&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;u&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;l&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;s&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;h&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;,
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 &lt;span&gt;'&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;};
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; encryption(ifstream&amp;amp; fin,ofstream&amp;amp;&lt;span&gt; fout);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;&lt;span&gt; main()
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    ifstream fin;
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;    ofstream fout;
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;     fin.open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;file1_1.in&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(fin.fail())
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;         cout&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;File open error!(Input)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;         exit(&lt;span&gt;1&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;20&lt;/span&gt;     fout.open(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;file1_1.out&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt;(fout.fail())
&lt;/span&gt;&lt;span&gt;22&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;23&lt;/span&gt;         cout&amp;lt;&amp;lt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;File open error!(Output)&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span&gt;endl;
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;25&lt;/span&gt; &lt;span&gt;    encryption(fin,fout);
&lt;/span&gt;&lt;span&gt;26&lt;/span&gt; &lt;span&gt;    fin.close();
&lt;/span&gt;&lt;span&gt;27&lt;/span&gt; &lt;span&gt;    fout.close();
&lt;/span&gt;&lt;span&gt;28&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;29&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;30&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; encryption(ifstream&amp;amp; fin,ofstream&amp;amp; fout)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;加密过程&lt;/span&gt;
&lt;span&gt;31&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;32&lt;/span&gt;     &lt;span&gt;char&lt;/span&gt;&lt;span&gt; next;
&lt;/span&gt;&lt;span&gt;33&lt;/span&gt;     &lt;span&gt;char&lt;/span&gt;&lt;span&gt; ch;
&lt;/span&gt;&lt;span&gt;34&lt;/span&gt;     &lt;span&gt;int&lt;/span&gt;&lt;span&gt; i;
&lt;/span&gt;&lt;span&gt;35&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;(fin.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(next))
&lt;/span&gt;&lt;span&gt;36&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;37&lt;/span&gt;         &lt;span&gt;if&lt;/span&gt;(next&amp;gt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&amp;amp;&amp;amp;next&amp;lt;=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;z&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;38&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;39&lt;/span&gt;             i=next-&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;40&lt;/span&gt;             ch=&lt;span&gt;c[i];
&lt;/span&gt;&lt;span&gt;41&lt;/span&gt;             fout&amp;lt;&amp;lt;&lt;span&gt;ch;
&lt;/span&gt;&lt;span&gt;42&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;44&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;45&lt;/span&gt;             fout&amp;lt;&amp;lt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;46&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;47&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;48&lt;/span&gt; &lt;span&gt;}
&lt;/span&gt;&lt;span&gt;49&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; decryption(ifstream&amp;amp; fin,ofstream&amp;amp; fout)&lt;span&gt;//&lt;/span&gt;&lt;span&gt;解密过程&lt;/span&gt;
&lt;span&gt;50&lt;/span&gt; &lt;span&gt;{
&lt;/span&gt;&lt;span&gt;51&lt;/span&gt;     &lt;span&gt;char&lt;/span&gt;&lt;span&gt; ch;
&lt;/span&gt;&lt;span&gt;52&lt;/span&gt;     &lt;span&gt;char&lt;/span&gt;&lt;span&gt; chout;
&lt;/span&gt;&lt;span&gt;53&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;(fin.&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(ch))
&lt;/span&gt;&lt;span&gt;54&lt;/span&gt; &lt;span&gt;    {
&lt;/span&gt;&lt;span&gt;55&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span&gt;26&lt;/span&gt;;i++&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;56&lt;/span&gt; &lt;span&gt;        {
&lt;/span&gt;&lt;span&gt;57&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt;(ch==&lt;span&gt;c[i])
&lt;/span&gt;&lt;span&gt;58&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;59&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt;(i==&lt;span&gt;26&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;60&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;61&lt;/span&gt;                     fout&amp;lt;&amp;lt;&lt;span&gt;'&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;62&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;63&lt;/span&gt;                 &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;64&lt;/span&gt; &lt;span&gt;                {
&lt;/span&gt;&lt;span&gt;65&lt;/span&gt;                     chout=&lt;span&gt;char&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;+&lt;span&gt;i);
&lt;/span&gt;&lt;span&gt;66&lt;/span&gt;                     fout&amp;lt;&amp;lt;&lt;span&gt;chout;
&lt;/span&gt;&lt;span&gt;67&lt;/span&gt; &lt;span&gt;                }
&lt;/span&gt;&lt;span&gt;68&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;69&lt;/span&gt; &lt;span&gt;        }
&lt;/span&gt;&lt;span&gt;70&lt;/span&gt; &lt;span&gt;    }
&lt;/span&gt;&lt;span&gt;71&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;&lt;div readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;file1_1.in&lt;/span&gt;
we will attack tomorrow morning
&lt;/pre&gt;&lt;/div&gt;&lt;div readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;//&lt;/span&gt;&lt;span&gt;file1_1.out&lt;/span&gt;
fu flbb dssdkw sovoaaof voanlnc
&lt;/pre&gt;&lt;/div&gt;</description>
<pubDate>Tue, 21 Nov 2017 02:54:00 +0000</pubDate>
<dc:creator>Angel_Kitty</dc:creator>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/ECJTUACM-873284962/p/7872114.html</dc:identifier>
</item>
</channel>
</rss>