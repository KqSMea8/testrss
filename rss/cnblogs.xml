<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed.cnblogs.com%2Fblog%2Fsitehome%2Frss&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://feed.cnblogs.com/blog/sitehome/rss" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed.cnblogs.com%252Fblog%252Fsitehome%252Frss%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>博客园_首页</title>
<link></link>
<description>代码改变世界</description>
<item>
<title>CentOS&amp;.NET Core初试-4-安装守护服务(Supervisor) - ZeroDai</title>
<link>http://www.cnblogs.com/zerodai/p/9721524.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/zerodai/p/9721524.html</guid>
<description>&lt;h2 id=&quot;系列目录&quot;&gt;系列目录&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zerodai/p/9704300.html&quot; target=&quot;_blank&quot;&gt;CentOS的安装和网卡的配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zerodai/p/9704213.html&quot; target=&quot;_blank&quot;&gt;安装.NET Core SDK和发布网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zerodai/p/9710556.html&quot; target=&quot;_blank&quot;&gt;Nginx的安装和配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/zerodai/p/9721524.html&quot; target=&quot;_blank&quot;&gt;安装守护服务(Supervisor)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;supervisor是什么&quot;&gt;Supervisor是什么？&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://supervisord.org&quot;&gt;Supervisor&lt;/a&gt; 是一个用 Python 写的进程管理工具，可以很方便的用来启动、重启、关闭进程（不仅仅是 Python 进程）。除了对单个进程的控制，还可以同时启动、关闭多个进程，比如很不幸的服务器出问题导致所有应用程序都被杀死，此时可以用 supervisor 同时启动所有应用程序而不是一个一个地敲命令启动。&lt;/p&gt;
&lt;h2 id=&quot;supervisor能干什么&quot;&gt;Supervisor能干什么？&lt;/h2&gt;
&lt;p&gt;Supervisor帮助我们解决在开发过程中遇到的以下问题：&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;ASP.NET Core应用程序运行在shell之中，如果关闭shell则会发现ASP.NET Core应用被关闭，从而导致应用无法访问，这种情况当然是我们不想遇到的，而且生产环境对这种情况是零容忍的。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;如果ASP.NET Core进程意外终止那么需要人为连进shell进行再次启动，往往这种操作都不够及时。&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;如果服务器宕机或需要重启我们则还是需要连入shell进行启动。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;安装supervisor&quot;&gt;安装Supervisor&lt;/h2&gt;
&lt;p&gt;首先安装Python包管理工具（Supervisor使用Python开发的），然后再安装supervisor。&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;yum install python-setuptools
easy_install supervisor&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;supervisor安装完成后会生成三个执行程序：&lt;/p&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;supervisortd&lt;/strong&gt; :supervisor的守护进程服务（用于接收进程管理命令）&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;supervisorctl&lt;/strong&gt; :客户端（用于和守护进程通信，发送管理进程的指令）&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;echo_supervisord_conf&lt;/strong&gt; :生成初始配置文件程序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;配置supervisor&quot;&gt;配置Supervisor&lt;/h2&gt;
&lt;p&gt;添加supervisor文件夹以及conf.d配置文件夹&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;mkdir /etc/supervisor
echo_supervisord_conf &amp;gt; /etc/supervisor/supervisord.conf
mkdir /etc/supervisor/conf.d&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改supervisord.conf文件,在文件尾部：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[include]
files=/etc/supervisor/conf.d/*.conf&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;启动supervisor服务&quot;&gt;启动Supervisor服务&lt;/h2&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;supervisord -c /etc/supervisor/supervisord.conf&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;program的配置&quot;&gt;program的配置&lt;/h2&gt;
&lt;p&gt;在supervisor的conf.d文件夹下新建一个程序配置文件，hellocore.conf：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;#配置程序名称
[program:hellocore]
#运行程序的命令
command=dotnet hellocore.dll 
#命令执行的目录
directory=/home/hellocore/ 
#错误日志文件
stderr_logfile=/var/log/hellocore.err.log
#输出日志文件
stdout_logfile=/var/log/hellocore.out.log 
#进程环境变量
environment=ASPNETCORE_ENVIRONMENT=Production 
#进程执行的用户身份
user=root
#程序是否自启动
autostart=true
#程序意外退出是否自动重启
autorestart=true
#启动时间间隔（秒）
startsecs=5
stopsignal=INT&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;重载supervisor的配置文件&quot;&gt;重载Supervisor的配置文件&lt;/h2&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;supervisorctl reload #重新加载配置文件&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;客户端相关命令：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;supervisorctl status #查看程序配置的状态
supervisorctl stop programname    #停止某一个程序配置
supervisorctl start programname   #加载某一个程序配置
supervisorctl restart programname #重新加载某一个程序配置
supervisorctl reload #重新加载配置
supervisorctl update&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;查看配置程序是否启动：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;ps -ef | grep hellocore #programdllname&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;如下图，则Supervisor配置成功：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/625771/201809/625771-20180928232903373-1592066006.png&quot; alt=&quot;Supervisor配置成功&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置supervisor开机启动&quot;&gt;设置Supervisor开机启动&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;/usr/lib/systemd/system&lt;/code&gt;文件夹下新建&lt;code&gt;supervisor.service&lt;/code&gt;配置文件，内容如下：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[Unit]
Description=supervisor
[Service]
Type=forking
ExecStart=/usr/bin/supervisord -c /etc/supervisor/supervisord.conf
ExecStop=/usr/bin/supervisorctl shutdown
ExecReload=/usr/bin/supervisorctl reload
KillMode=process
Restart=on-failure
RestartSec=42s
[Install]
WantedBy=multi-user.target&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;将服务设置为开机启动：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;systemctl enable supervisor.service
systemctl start supervisor.service&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;supervisor开机启动服务配置成功&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/625771/201809/625771-20180928232950434-1265262153.png&quot; alt=&quot;supervisor开机启动&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置supervisor图形化管理&quot;&gt;配置Supervisor图形化管理&lt;/h2&gt;
&lt;p&gt;打开supervisor的配置文件&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;vi /etc/supervisor/supervisord.conf&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;找到配置：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;;[inet_http_server]         ; inet (TCP) server disabled by default
;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))ls
;password=123               ; (default is no password (open server))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;修改成：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;[inet_http_server] ; inet (TCP) 服务，默认是关闭的
port=*:9001      ;ip:端口,*代表所有IP
username=root               ;登陆账号，可以不设
password=root123              ;登陆账户，可以不设&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;保存好修改后，重启supervisor。&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;supervisorctl reload&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;防火墙查看9001端口是否开启&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;firewall-cmd --list-ports #查看已开放的端口&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;开启端口：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
&lt;code&gt;firewall-cmd --zone=public  --add-port=9001/tcp --permanent
firewall-cmd --reload #重启防火墙&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;命令含义：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;
&lt;code&gt;--zone #作用域
--add-port=9001/tcp  #添加端口，格式为：端口/通讯协议
--permanent  #永久生效，没有此参数重启后失效&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;成功访问：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/625771/201809/625771-20180928232959487-1713438483.png&quot; alt=&quot;supervisor图形界面&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Sep 2018 15:51:00 +0000</pubDate>
<dc:creator>ZeroDai</dc:creator>
<og:description>系列目录 1. CentOS的安装和网卡的配置 2. 安装.NET Core SDK和发布网站 3. Nginx的安装和配置 4. 安装守护服务(Supervisor) Supervisor是什么？</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/zerodai/p/9721524.html</dc:identifier>
</item>
<item>
<title>MyBatis(2)-全局配置文件 - MrChengs</title>
<link>http://www.cnblogs.com/Mrchengs/p/9721330.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/Mrchengs/p/9721330.html</guid>
<description>&lt;p&gt;本文的代码是在&lt;a href=&quot;https://www.cnblogs.com/Mrchengs/p/9721184.html&quot;&gt;MyBatis(1)-简单入门&lt;/a&gt;基础之上进行学习的，如有不懂请先看此博文&lt;span&gt;&lt;a href=&quot;https://www.cnblogs.com/Mrchengs/p/9721184.html&quot;&gt;&lt;span&gt;MyBatis(1)-简单入门&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;！&lt;/p&gt;
&lt;p&gt;&lt;span&gt;1）配置文件的安装&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;---&amp;gt;未联网：去mybatis的jar包-&amp;gt;org.apache.ibatis.builder.xml-&amp;gt;文件夹下的两个.dtd文件解压&lt;/p&gt;
&lt;p&gt;                    点击选中我们的dtd地址选中-&amp;gt;preferences-&amp;gt;XML-&amp;gt;XML Catalog-&amp;gt;ADD-&amp;gt;Location是文件的地址，Key type必须选中URI，Key就是我们的dtd地址-&amp;gt;选择合适的地址&lt;/p&gt;
&lt;p&gt;                引入成功之后，我们输入在myeclipse中键盘Alt+/会有提示，需要关闭重启&lt;/p&gt;
&lt;p&gt;        目录如下：&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;                            &lt;img alt=&quot;&quot;/&gt;&lt;img alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt; 2）属性讲解：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.1）&lt;/span&gt;&lt;span&gt;properties&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;20.954326241135&quot;&gt;
&lt;p&gt;　　  properties:可以使用properties来引入外部的properties配置文件内容&lt;/p&gt;
&lt;p&gt;         属性：&lt;/p&gt;
&lt;p&gt;         resource：引用类路径下的资源&lt;/p&gt;
&lt;p&gt;         url：引入网络或者磁盘路径下的资源&lt;/p&gt;
&lt;p&gt;         db.properties在同一目录下，所以可以直接写处文件的名字&lt;/p&gt;
&lt;p&gt;         假设db.properties在com.MrChengs.db目录下&lt;/p&gt;
&lt;p&gt;         此时resource=&quot;com.MrChengs/db/db.properties&quot;&lt;/p&gt;
&lt;p&gt;　　  在于spring整合的时候就会相对比较少的使用这个属性！&lt;/p&gt;
&lt;div readability=&quot;19.455390889198&quot;&gt;2.1.1）首先建立db.properties文件，其目录如下图所示
&lt;p&gt;　　     注意：配置文件的位置，在resource里面的路径问题&lt;/p&gt;
&lt;div&gt;　　　　&lt;img src=&quot;https://img2018.cnblogs.com/blog/1488757/201809/1488757-20180928221131802-1769176879.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;db.properties&lt;/p&gt;
&lt;div readability=&quot;39.408055864791&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
jdbc.driver=&lt;span&gt;com.mysql.jdbc.Driver
jdbc.url&lt;/span&gt;=jdbc:mysql:&lt;span&gt;//&lt;/span&gt;&lt;span&gt;localhost:3306/mybatis&lt;/span&gt;
jdbc.username=&lt;span&gt;root
jdbc.password&lt;/span&gt;=9876
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.1.2）在mybatis-config.xml文件中加入&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;properties resource=&quot;db.properties&quot; &amp;gt;&amp;lt;/properties&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.2.3）得到我们的数据信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
             &amp;lt;environment id=&quot;development&quot;&amp;gt;
                &amp;lt;transactionManager type=&quot;JDBC&quot; /&amp;gt;
                &amp;lt;dataSource type=&quot;POOLED&quot;&amp;gt;
                     &amp;lt;property name=&quot;driver&quot; value=&quot;${jdbc.driver}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot; /&amp;gt;
                &amp;lt;/dataSource&amp;gt;
           &amp;lt;/environment&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时我们再次运行之前的测试代码，一样可以查询出结果&lt;/p&gt;

&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.2）&lt;span&gt;settings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　这是MyBatis中极为重要的调整设置，他会改变MyBatis的运行行为&lt;/p&gt;
&lt;p&gt;       用来设置每一个设置项的&lt;/p&gt;
&lt;p&gt;       有很多的属性标签&lt;/p&gt;
&lt;p&gt;       name:设置项的名字&lt;/p&gt;
&lt;p&gt;       value：设置项的取值&lt;/p&gt;

&lt;p&gt;　　 实例：mybatis-config.xml加入&lt;/p&gt;
&lt;div readability=&quot;78.793287827076&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
      &amp;lt;settings&amp;gt;
          &amp;lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&amp;gt;
      &amp;lt;/settings&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;假设我们数据库的字段和类的字段不一样：数据库----last_name   类----lastName   &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;此时使用这个驼峰命名发，即可匹配到两者之间的关系，否杂而在查询的时候可能会显示为null&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;此处不在做详细的测试，可以参考相关的文档。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;div readability=&quot;11&quot;&gt;&lt;span&gt;&lt;span&gt;2.3）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;typeAliases&lt;/span&gt;(别名处理器）
&lt;p&gt;&lt;span&gt;　　  把java类型起一个简单的名字，可以减少工作量&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;2.3.1）单个类起别名：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2.3.1.1在mybatis-config.xml文件中： 此时使用默认的系统命名法&lt;/span&gt;&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
 &amp;lt;typeAliases&amp;gt;
           &amp;lt;!--&lt;span&gt; 为某个java类型起别名
                 type：指定起别名的全类名，默认就是类名小写
                    可以用alias为起指定新的别名
                    我们此时给Employee起别名
           &lt;/span&gt;--&amp;gt;
           &amp;lt;typeAlias type=&quot;com.MrChengs.bean.Employee&quot;/&amp;gt;
     &amp;lt;/typeAliases&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt; 2.3.1.2)在EmployeeMapper.xml文件中&lt;/p&gt;
&lt;div readability=&quot;23&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
     &amp;lt;!-- 接口式编程 --&amp;gt;
     &amp;lt;select id=&quot;getEmployee&quot; resultType=&quot;employee&quot;&amp;gt;&lt;span&gt;
           select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
     &lt;/span&gt;&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 我们继续使用上次的查询方法进行修改，在&lt;span&gt;默认&lt;/span&gt;不命名的情况下，是类的&lt;span&gt;小写&lt;/span&gt;！&lt;/p&gt;
&lt;p&gt;此时可以查询成功！&lt;/p&gt;

&lt;p&gt;2.3.2）使用alias&lt;/p&gt;
&lt;p&gt;2.3.2.1）在mybatis-config.xml文件中，是在2.3.1中的实例中加入alias&lt;/p&gt;
&lt;p&gt;此时把其类命名为emp&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;typeAlias type=&quot;com.MrChengs.bean.Employee&quot; alias=&quot;emp&quot;/&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.3.2.2）在EmployeeMapper.xml文件中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
 &amp;lt;select id=&quot;getEmployee&quot; resultType=&quot;emp&quot;&amp;gt;&lt;span&gt;
           select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
  &lt;/span&gt;&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt; 此时可以查询成功！&lt;/p&gt;


&lt;p&gt;2.3.3）多个类一起起别名时&lt;/p&gt;
&lt;div readability=&quot;41.5&quot;&gt;2.3.3.1）在mybatis-config.xml
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;typeAliases&amp;gt;
   &amp;lt;!-- &lt;span&gt;package&lt;/span&gt;&lt;span&gt;:为某个包下的 所有类批量起别名
        name:指定包名（为当前包以及下面所有的后代包的每一个类都起一个别名（默认类名小写）
    &lt;/span&gt;--&amp;gt;
   &amp;lt;&lt;span&gt;package&lt;/span&gt; name=&quot;com.MrChengs.bean&quot;/&amp;gt;
 &amp;lt;/typeAliases&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.3.3.2）EmployeeMapper.xml文件中&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;select id=&quot;getEmployee&quot; resultType=&quot;Employee&quot;&amp;gt;&lt;span&gt;
           select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
&lt;/span&gt;&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时查询是可以成功的！&lt;/p&gt;

&lt;p&gt;2.3.4）在多各类一起起别名时&lt;/p&gt;
&lt;p&gt;容易产生一个问题，假设此时子包里和父包了都有一个同名类&lt;/p&gt;
&lt;p&gt;此时MyBatis会很难进行区分，所有有以下的方法：&lt;/p&gt;
&lt;p&gt;2.3.4.1）在Employee.java中&lt;/p&gt;
&lt;p&gt;并且使用&lt;span&gt;@Alias进行重命名&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1488757/201809/1488757-20180928224820862-228754157.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;2.3.4.2）EmployeeMapper.xml文件中引用我们所创建的新的别名&quot;empl&quot;&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&amp;lt;select id=&quot;getEmployee&quot; resultType=&quot;empl&quot;&amp;gt;&lt;span&gt;
           select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
&lt;/span&gt;&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时会编译得到我们想要的答案！&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意：在起别名的时候，不区分大小写！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.4）&lt;span&gt;typeHandlers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;架起java类型和数据库类型的映射&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1488757/201809/1488757-20180928225316574-369771384.png&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;

&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1488757/201809/1488757-20180928225348114-1627062579.png&quot; alt=&quot;&quot;/&gt;
&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.5）&lt;span&gt;plugins&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　待补充。。。&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div readability=&quot;46.5&quot;&gt;
&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.6）&lt;span&gt;environments 环境&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　可以配置多种环境&lt;/p&gt;
&lt;p&gt;    &amp;lt;environments default=&quot;development&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;        　　default：可以指定使用那种环境，可以进行快速的切换&lt;/p&gt;
&lt;p&gt;    environment：配置一个具体的环境，可以配置多个具体环境，且必须配置              &lt;/p&gt;
&lt;p&gt;       　　 id：代表当前环境的唯一标识&lt;/p&gt;
&lt;p&gt;&lt;span&gt;    transactionManager：事物管理器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;        　　 type：事物管理器的类型，有两个取值    JDBC（使用mysql）/MANAGED（使用j2ee自带的）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    dataSource：数据源&lt;/p&gt;
&lt;p&gt;      　　  type：数据源类型   POOLED（使用连接池）/JNDI/UNPOOLEN（不使用连接池）&lt;/p&gt;
&lt;p&gt;    property：数据源的相关信息&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
             &amp;lt;environment id=&quot;development&quot;&amp;gt;
                &amp;lt;transactionManager type=&quot;JDBC&quot; /&amp;gt;
                &amp;lt;dataSource type=&quot;POOLED&quot;&amp;gt;
                     &amp;lt;property name=&quot;driver&quot; value=&quot;${jdbc.driver}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot; /&amp;gt;
                     &amp;lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot; /&amp;gt;
                &amp;lt;/dataSource&amp;gt;
           &amp;lt;/environment&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体的讲解如上！&lt;/p&gt;

&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.7）&lt;span&gt;databaseIdProvider&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　代码在environments标签下面&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　可移植性的重要性&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　支持多数据库的厂商的&lt;/p&gt;
&lt;p&gt;2.7.1）在mybatis-config.xml&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;37.292118582791&quot;&gt;
&lt;pre&gt;
 type=&quot;DB_VENDOR&quot;&lt;span&gt;固定值，作用是得到数据库厂商的标识来执行不同的SQL语句&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&amp;lt;databaseIdProvider type=&quot;DB_VENDOR&quot;&amp;gt;
           &amp;lt;!-- 为不同数据库起别名 --&amp;gt;
           &amp;lt;property name=&quot;MySQL&quot; value=&quot;mysql&quot;/&amp;gt;
           &amp;lt;property name=&quot;SqlSever value=&quot;sqlSever&quot;/&amp;gt;
        &amp;lt;/databaseIdProvider&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.7.2）引用方式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1488757/201809/1488757-20180928230218499-2090677678.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;假设此时databaseId=sqlSever，则执行的是SqlSever数据库！&lt;/p&gt;

&lt;p&gt; /------------------------------------------------------------分割线------------------------------------------------------------/&lt;/p&gt;

&lt;p&gt;2.8）&lt;span&gt;mappers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;　　将sql映射注册到全局配置中&lt;/p&gt;
&lt;p&gt;　　mapper注册一个sql映射&lt;/p&gt;
&lt;p&gt;       resource：引用类路径下的sql映射文件&lt;/p&gt;
&lt;p&gt;       uri：引用网络或这磁盘路径下的sql映射文件&lt;/p&gt;
&lt;p&gt;       class:引用注册（接口）&lt;/p&gt;
&lt;p&gt;           有sql映射文件名必须和接口同名，并放在同意目录下&lt;/p&gt;
&lt;p&gt;   一般的mapper都放在mapper包里面&lt;/p&gt;
&lt;p&gt;    假设在mybatis.mapper包里面&lt;/p&gt;
&lt;p&gt;    则resource=&quot;mybatis/mapper/xxxx.xml&lt;/p&gt;

&lt;p&gt;在mybatis-config.xml文件的最底部&lt;/p&gt;
&lt;div readability=&quot;17.863276089828&quot;&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
     &amp;lt;mappers&amp;gt;
           &amp;lt;mapper resource=&quot;EmployeeMapper.xml&quot; /&amp;gt;
     &amp;lt;/mappers&amp;gt;
&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;此时此刻配置文件差不多讲到这里要结束了&lt;/p&gt;
&lt;p&gt;此时此刻，把本次博文是修改到的代码奉上，结合&lt;a href=&quot;https://www.cnblogs.com/Mrchengs/p/9721184.html&quot;&gt;MyBatis(1)-简单入门&lt;/a&gt;！&lt;/p&gt;

&lt;p&gt;3.1）mybatis-config.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;
&amp;lt;!&lt;span&gt;DOCTYPE configuration
 PUBLIC &lt;/span&gt;&quot;-//mybatis.org//DTD Config 3.0//EN&quot;
 &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&amp;gt;
&amp;lt;configuration&amp;gt;

        &amp;lt;!-- 
        1&lt;span&gt;.properties:可以使用properties来引入外部的properties配置文件内容
        属性：
        resource：引用类路径下的资源
        url：引入网络或者磁盘路径下的资源
        db.properties在同一目录下，所以可以直接写处文件的名字
        假设db.properties在com.MrChengs.db目录下
        此时resource&lt;/span&gt;=&quot;com.MrChengs/db/db.properties&quot;
         --&amp;gt;
    &amp;lt;properties resource=&quot;db.properties&quot; &amp;gt;&amp;lt;/properties&amp;gt;
    
    &amp;lt;!-- 
        2&lt;span&gt;.settings设置
        这是MyBatis中极为重要的调整设置，他会改变MyBatis的运行行为
        用来设置每一个设置项的
        name:设置项的名字
        value：设置项的取值
     &lt;/span&gt;--&amp;gt;
     &amp;lt;settings&amp;gt;
         &amp;lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&amp;gt;
     &amp;lt;/settings&amp;gt;
    
    &amp;lt;!-- 
        3&lt;span&gt;.typeAliases:别名处理器
     &lt;/span&gt;--&amp;gt;
    &amp;lt;typeAliases&amp;gt;
        &amp;lt;!--&lt;span&gt; 为某个java类型起别名
             type：指定起别名的全类名，默认就是类名小写
                可以用alias为起指定新的别名
                我们此时给Employee起别名 
        &lt;/span&gt;--&amp;gt;
        &amp;lt;typeAlias type=&quot;com.MrChengs.bean.Employee&quot; alias=&quot;emp&quot;/&amp;gt;
        &amp;lt;!--
             &lt;span&gt;package&lt;/span&gt;&lt;span&gt;:为某个包下的 所有类批量起别名
             name:指定包名（为当前包以及下面所有的后代包的每一个类都起一个别名（默认类名小写）
        &lt;/span&gt;--&amp;gt;
        &amp;lt;&lt;span&gt;package&lt;/span&gt; name=&quot;com.MrChengs.bean&quot;/&amp;gt;
    &amp;lt;/typeAliases&amp;gt;
    
    
    &amp;lt;environments &lt;span&gt;default&lt;/span&gt;=&quot;development&quot;&amp;gt;
        &amp;lt;environment id=&quot;development&quot;&amp;gt;
            &amp;lt;transactionManager type=&quot;JDBC&quot; /&amp;gt;
            &amp;lt;dataSource type=&quot;POOLED&quot;&amp;gt;
                &amp;lt;property name=&quot;driver&quot; value=&quot;${jdbc.driver}&quot; /&amp;gt;
                &amp;lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&amp;gt;
                &amp;lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot; /&amp;gt;
                &amp;lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot; /&amp;gt;
            &amp;lt;/dataSource&amp;gt;
        &amp;lt;/environment&amp;gt;
    &amp;lt;/environments&amp;gt;

    &amp;lt;!-- 
        5&lt;span&gt;.databaseIdProvider
        支持多数据库的厂商的
            type&lt;/span&gt;=&quot;DB_VENDOR&quot;&lt;span&gt;固定值，作用是得到数据库厂商的标识来执行不同的SQL语句
     &lt;/span&gt;--&amp;gt;
    &amp;lt;databaseIdProvider type=&quot;DB_VENDOR&quot;&amp;gt;
        &amp;lt;!-- 为不同数据库起别名 --&amp;gt;
        &amp;lt;property name=&quot;MySQL&quot; value=&quot;mysql&quot;/&amp;gt;
    &amp;lt;/databaseIdProvider&amp;gt;

    &amp;lt;!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 --&amp;gt;
    &amp;lt;mappers&amp;gt;
        &amp;lt;mapper resource=&quot;EmployeeMapper.xml&quot; /&amp;gt;
    &amp;lt;/mappers&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3.2)EmployeeMapper.xml&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;41&quot;&gt;
&lt;pre&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;
&amp;lt;!&lt;span&gt;DOCTYPE mapper
 PUBLIC &lt;/span&gt;&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
 &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&amp;gt;
&amp;lt;mapper namespace=&quot;com.MrChengs.dao.EmployeeMapper&quot;&amp;gt;

     &amp;lt;!-- 原生 --&amp;gt;
    &amp;lt;select id=&quot;getId&quot; resultType=&quot;com.MrChengs.bean.Employee&quot;&amp;gt;&lt;span&gt;
        select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
    &lt;/span&gt;&amp;lt;/select&amp;gt;
    
    &amp;lt;!-- 接口式编程 --&amp;gt;
    &amp;lt;select id=&quot;getEmployee&quot; resultType=&quot;empl&quot; databaseId=&quot;mysql&quot;&amp;gt;&lt;span&gt;
        select id,name,gender,email from test where id &lt;/span&gt;=&lt;span&gt; #{id}
    &lt;/span&gt;&amp;lt;/select&amp;gt;
&amp;lt;/mapper&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;本次博文到此结束，谢谢您的浏览，如果问题，请提出，博主及时修改。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 28 Sep 2018 15:11:00 +0000</pubDate>
<dc:creator>MrChengs</dc:creator>
<og:description>本文的代码是在MyBatis(1)-简单入门基础之上进行学习的，如有不懂请先看此博文MyBatis(1)-简单入门！ 1）配置文件的安装 &gt;在联网的情况下，点击去下载http://mybatis</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/Mrchengs/p/9721330.html</dc:identifier>
</item>
<item>
<title>浅尝Spring Cloud Sleuth - Ken.W</title>
<link>http://www.cnblogs.com/kenwoo/p/9716282.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/kenwoo/p/9716282.html</guid>
<description>&lt;p&gt;Spring Cloud Sleuth提供了分布式追踪(distributed tracing)的一个解决方案。其基本思路是在服务调用的请求和响应中加入ID，标明上下游请求的关系。利用这些信息，可以方便地分析服务调用链路和服务间的依赖关系。&lt;/p&gt;

&lt;p&gt;在Spring Tool Suite的文件菜单中，点击新建Spring Starter Project。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180927225943168-538008881.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在请求处理方法内加上一行日志代码。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@SpringBootApplication
public class SpringcloudSleuthApplication {

    private static Logger log = LoggerFactory.getLogger(SpringcloudSleuthApplication.class);
    @RequestMapping(&quot;/&quot;)
    public String home() {
        log.info(&quot;Handling home&quot;);
        return &quot;Hello World&quot;;
    }

    public static void main(String[] args) {
        SpringApplication.run(SpringcloudSleuthApplication.class, args);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;设定应用程序端口及名称。&lt;/p&gt;
&lt;pre class=&quot;config&quot;&gt;
&lt;code&gt;server.port=10001

spring.application.name=sleuth-demo-without-zipkin&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;启动程序并浏览页面后，可以看到日志信息里多了点东西。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180927232211517-1662648561.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;[sleuth-demo-without-zipkin,6c00dba1679ee164,6c00dba1679ee164,false]&lt;/p&gt;
&lt;p&gt;这一串数据里包含四个部分&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;appname - 应用程序名称&lt;/li&gt;
&lt;li&gt;traceId - 追踪系统中的唯一标识&lt;/li&gt;
&lt;li&gt;spanId - 具体操作的唯一标识&lt;/li&gt;
&lt;li&gt;exportable - 是否日志要导出到Zipkin&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;zipkin-server&quot;&gt;Zipkin Server&lt;/h2&gt;
&lt;p&gt;要想把追踪数据发送到Zipkin上，首先需要建立一个Zipkin Server应用程序，在pom.xml里加上如下依赖：&lt;/p&gt;
&lt;pre class=&quot;xml&quot;&gt;
&lt;code&gt;&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter&amp;lt;/artifactId&amp;gt;
  &amp;lt;/dependency&amp;gt;

  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
  &amp;lt;/dependency&amp;gt;

  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.zipkin.java&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;zipkin-server&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.11.5&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
  
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.zipkin.java&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;zipkin-autoconfigure-ui&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.11.5&amp;lt;/version&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;然后在启动类加上@EnableZipkinServer标记。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import zipkin2.server.internal.EnableZipkinServer;

@EnableZipkinServer
@SpringBootApplication
public class SpringcloudZipkinServerApplication {

    public static void main(String[] args) {
        SpringApplication.run(SpringcloudZipkinServerApplication.class, args);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;application.properties文件中可修改默认端口，&lt;code&gt;server.port=10000&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;打开相关页面，如下：&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180928223628450-1948101120.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;zipkin-client&quot;&gt;Zipkin Client&lt;/h2&gt;
&lt;p&gt;再新建一个应用程序。&lt;br/&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180928223814593-1975039861.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;启动程序代码基本一样。&lt;/p&gt;
&lt;pre class=&quot;java&quot;&gt;
&lt;code&gt;import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@SpringBootApplication
public class SpringcloudZipkinApplication {

    private static Logger log = LoggerFactory.getLogger(SpringcloudZipkinApplication.class);
    @RequestMapping(&quot;/&quot;)
    public String home() {
        log.info(&quot;Handling home&quot;);
        return &quot;Hello World&quot;;
    }
    
    public static void main(String[] args) {
        SpringApplication.run(SpringcloudZipkinApplication.class, args);
    }
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;application.properties文件里加上Zipkin Server的地址，同时为了每次都将数据传入Zipkin，需要把spring.sleuth.sampler.probability的值改为1.0。&lt;/p&gt;
&lt;pre class=&quot;config&quot;&gt;
&lt;code&gt;server.port=10002

spring.application.name=sleuth-demo-with-zipkin
spring.zipkin.base-url=http://localhost:10000
spring.sleuth.sampler.probability=1.0&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;启动Zipkin Client后，可以看到Zipkin Server页面上多了一条追踪数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180928224251897-1243760557.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;再次刷新Zipkin Client页面，又会有条新的数据。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180928224347916-1223112052.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在看控制台的日志记录，exportable项变成了true，说明数据已传入Zipkin。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/991496/201809/991496-20180928224548579-1952856657.png&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Sep 2018 14:57:00 +0000</pubDate>
<dc:creator>Ken.W</dc:creator>
<og:description>Spring Cloud Sleuth提供了分布式追踪(distributed tracing)的一个解决方案。其基本思路是在服务调用的请求和响应中加入ID，标明上下游请求的关系。利用这些信息，可以方</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/kenwoo/p/9716282.html</dc:identifier>
</item>
<item>
<title>VSCode的Python扩展下程序运行的几种方式与环境变量管理 - Inpool</title>
<link>http://www.cnblogs.com/inpool/p/setup-environ-variable-4-vscode.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/inpool/p/setup-environ-variable-4-vscode.html</guid>
<description>&lt;p&gt;在VSCode中编写Python程序时，由于有些地方要使用环境变量，但是发现设置的环境变量有时不起作用，花了点时间研究了一下，过程不表，直接说结论。&lt;/p&gt;
&lt;p&gt;首先，环境变量的设置，Python扩展中有三种方式：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;直接设置系统环境变量，或在使用命令行启动VSCode时临时先设置环境变量。&lt;br/&gt;这种方式设置的环境变量在所有的&lt;span&gt;运行方式下起效，但由于多个工程所用的环境变量不同，每次设置太麻烦，使用bash脚本或批处理我也觉得不爽，所以没有采用。&lt;/span&gt;&lt;/li&gt;
&lt;li readability=&quot;0.5&quot;&gt;通过 &lt;span&gt;&lt;span&gt;&lt;span&gt;terminal.integrated.env.windows / &lt;span&gt;terminal.integrated.env.linux / &lt;span&gt;terminal.integrated.env.osx &lt;span&gt;选项配置。&lt;br/&gt;选项的格式是字典，键和值都必须是字符串，具体格式：&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;37&quot;&gt;
&lt;pre&gt;
&lt;span&gt;{
    &lt;/span&gt;&quot;terminal.integrated.env.windows&quot;&lt;span&gt;: {
        &lt;/span&gt;&quot;ENVIRON_VARIABLE&quot;: &quot;The Variable value&quot;&lt;span&gt;,
        &lt;/span&gt;&quot;VAR2&quot;: &quot;111&quot;&lt;span&gt;,
        &lt;/span&gt;&lt;span&gt;//&lt;/span&gt;&lt;span&gt; 下面没加引号的是错的，不会生效&lt;/span&gt;
        &lt;span&gt;//&lt;/span&gt;&lt;span&gt;&quot;VAR3&quot;: 111, &lt;/span&gt;
&lt;span&gt;    },
}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li readability=&quot;-2&quot;&gt;&lt;span&gt;通过配置 python.envFile 选项。&lt;/span&gt;&lt;br/&gt;python.envFile 是一个绝对路径，指向一个文件，默认为工程目录下的.env文件，用于定义需要的环境变量，基本格式如下：&lt;br/&gt;&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;# 注释
PYTHONPATH &lt;/span&gt;=&lt;span&gt; D:\workspace\safe110\webapps
PYTEST &lt;/span&gt;= 111
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其次，VSCode的Python扩展有四种程序运行方式，针对不同的运行方式，起作用的环境变量分别如下：&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Debug&lt;br/&gt;以上三种方式设置的环境变量都会生效，VSCode会按照上面列出的顺序依次读取环境变量（即重名变量后面的生效）。&lt;/li&gt;
&lt;li&gt;pylint 等后台任务 （包括运行测试和调试测试）&lt;br/&gt;只有第1种和第3种方式设置的环境变量生效，读取顺序同上。&lt;/li&gt;
&lt;li&gt;右键文件--&amp;gt;在终端运行 或 选中代码，右键--&amp;gt;在Python终端运行&lt;br/&gt;只有第1种和第2种方式设置的环境变量生效，读取顺序同上。&lt;/li&gt;
&lt;li&gt;运行测试和调试测试（只分析了pytest）&lt;br/&gt;同2。&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Fri, 28 Sep 2018 14:54:00 +0000</pubDate>
<dc:creator>Inpool</dc:creator>
<og:description>在VSCode中编写Python程序时，由于有些地方要使用环境变量，但是发现设置的环境变量有时不起作用，花了点时间研究了一下，过程不表，直接说结论。 首先，环境变量的设置，Python扩展中有三种方式</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/inpool/p/setup-environ-variable-4-vscode.html</dc:identifier>
</item>
<item>
<title>【朝花夕拾】Android性能优化篇之（四）Apk打包 - 宋者为王</title>
<link>http://www.cnblogs.com/andy-songwei/p/9721337.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/andy-songwei/p/9721337.html</guid>
<description>&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;        APK，即Android Package，是将android程序和资源整合在一起，形成的一个.apk文件。相信所有的Android程序员是在IDE的帮助下，完成打包轻而易举，但对打包流程真正清楚的可能并不多。本章的内容比较简单，也是非常基础的内容，但是对理解android应用的结构却有很大的帮助。笔者写这篇文章的目的，一方面是为了弥补这方面的盲点，回顾和梳理apk打包方面的理论知识点；第二方面，是为了给后续写Android虚拟机知识做铺垫，进而去研究android的性能优化，这也是把这篇文章放到Android性能优化系列文章当中的原因；第三方面，也是为了方便读者理解Android虚拟机的相关内容。&lt;/p&gt;
&lt;p&gt;       对于在IDE，如Android Studio上操作打包的过程，本文不做演示，对于更深入的源码分析，也不在本文讨论之列，出于前面说到的原因，本文只简单阐述其打包流程，本文主要内容如下：&lt;/p&gt;
&lt;p&gt;         &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180928222601604-950431632.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、apk构建流程图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;     以下截图为Google官方提供的详细的apk构建过程图，其中包含了各个环节所用到的工具和中间相关的文件。&lt;/p&gt;
&lt;p&gt;                &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180926163655859-228268054.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                         apk构建过程（绿色部分为对应环节工具，蓝色部分为相关文件）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、构建过程中所用工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;        如下截图展示了apk构建过程中所使用的部分工具，这些工具大部分都在sdk/build-tools/文件夹下：&lt;/p&gt;
&lt;p&gt;                 &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927082344379-1840798044.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                 &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927145341237-1345837808.png&quot; alt=&quot;&quot;/&gt; &lt;/p&gt;
&lt;p&gt;                    代码混淆所用工具&lt;/p&gt;
&lt;p&gt;                 &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927113341056-1968929319.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                   打包所用工具所在的jar包&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、apk打包流程详解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;       依据如上的流程图和工具图，下面咱们按照流程顺序对其进行讲解。&lt;/p&gt;
&lt;p&gt;  1、aapt打包资源&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：aapt（Android Asset Package Tool Android资源打包工具）&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/build-tools/版本号/aapt.exe和aapt2.exe&lt;/li&gt;
&lt;li&gt;输入：Android资源文件、AndroidManifest.xml&lt;/li&gt;
&lt;li&gt;输出： R.java类、二进制的resource.arsc，res文件夹（包括二进制的xml、没被改变的图片和res/raw文件）、二进制的AndroidManifest.xml文件、没有改变的assets文件夹。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;        Android的资源文件包含了两类：1）assets类资源。该类资源放在工程目录的assets根目录下，存放一些原始文件，这些文件不会被编译为二进制文件，而是被原封不动地打包在apk文件中，同样也不能通过资源ID来查找，不保存在R文件中。2）res类资源，10种目录。这类资源保存在工程目录中的res目录下，包含了animator（属性动画资源）、anim（补间动画资源）、color（对象颜色状态选择资源）、drawable（xml或Bitmap文件的图像资源）、layout（布局文件资源）、menu（程序菜单资源）、mipmap（图标资源，推荐阅读：&lt;a href=&quot;https://blog.csdn.net/wk_beicai/article/details/78471187&quot; target=&quot;_blank&quot;&gt;drawable与mipmap的区别&lt;/a&gt;）、raw（不被编译成二进制文件的资源，注意和assets资源的区别，推荐阅读：&lt;a href=&quot;https://www.jianshu.com/p/dacef104e548&quot; target=&quot;_blank&quot;&gt;assets和raw的区别&lt;/a&gt;）、values（6种不同的值：数组arrays.xml、颜色值colors.xml、尺寸dimens.xml、字符串strings.xml和样式值styles.xml）、xml（描述应用程序配置信息的资源）。&lt;/p&gt;
&lt;p&gt;       如下截图展示了R.java的内容，其中包含了各种静态内部类，分别对应了某种资源的类型。&lt;/p&gt;
&lt;p&gt;       &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927151402249-1110991325.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                            R.java结构图&lt;/p&gt;
&lt;p&gt;      以R.string类为例，其中展示了字符串名称对应的id值，就是对应在res/values文件夹下，string字符串资源。&lt;/p&gt;
&lt;p&gt;      &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927152043121-1003707521.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                                    R.string结构图&lt;/p&gt;
&lt;p&gt;        推荐阅读：&lt;a href=&quot;https://segmentfault.com/a/1190000004916563&quot; target=&quot;_blank&quot;&gt;apk打包安装过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  2、aidl生成跨进程通信的java文件&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：aidl（Android Interface Definition Language安卓接口定义语言）&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/build-tools/版本号/aidl.exe&lt;/li&gt;
&lt;li&gt;输入：aidl后缀的文件，位于工程项目src/main/aidl目录下&lt;/li&gt;
&lt;li&gt;输出：可用于进程间通信的C/S端java代码，位于build/generated/source/aidl&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;          &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927084817603-1732745002.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                       工程项目中的aidl原始文件&lt;/p&gt;
&lt;p&gt;          &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927084927001-550083857.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                       aidl工具处理后生成的java文件&lt;/p&gt;
&lt;p&gt;  3、Java编译源码&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：javac.exe&lt;/li&gt;
&lt;li&gt;工具路径：jdk/bin/javac.exe&lt;/li&gt;
&lt;li&gt;输入：java source文件夹、aapt中生成的R.java文件、aidl生成的java文件、BuildConfig.java文件&lt;/li&gt;
&lt;li&gt;输出：对于gradle编译，生成的class文件保存在build/intermediates/classes里&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;         &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927091141733-1186665294.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                               BuildConfig.java和R.java文件&lt;/p&gt;
&lt;p&gt;         &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927091055729-1638521547.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                              输出的class文件&lt;/p&gt;
&lt;p&gt;  4、proguard代码混淆&lt;/p&gt;
&lt;p&gt;        完成javac编译之后，一般还会对其进行代码的混淆，其实就是类似于加密的功能，作用就是增加反编译的难度，同时也将一些代码的命名进行了缩短，减少代码占用的空间。推荐阅读：&lt;a href=&quot;https://www.jianshu.com/p/86ee6ef970ef&quot; target=&quot;_blank&quot;&gt;Android代码混淆零基础入门&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：ProGuard&lt;/li&gt;
&lt;li&gt;工具路径：sdk/tools/proguard/bin/proguard.bat&lt;/li&gt;
&lt;li&gt;输入：被编译过的class文件、混淆配置文件proguard-rules.pro&lt;/li&gt;
&lt;li&gt;输出：被混淆过的.class文件、混淆前后映射文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;         &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927104017950-142541900.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;  5、将所有.class文件转化为classes.dex文件&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：dx.bat&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/build-tools/版本号/dx.bat&lt;/li&gt;
&lt;li&gt;输入：编译后生成的所有.class文件、第三方库和.class文件&lt;/li&gt;
&lt;li&gt;输出：可以在Android虚拟机上使用的.dex文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;       调用dx.bat将所有的class文件转化为classes.dex文件，将二进制码转化为Android虚拟机（Android4.4以前虚拟机是Dalvik，4.4上是Dalvik和ART可以切换、Android5.0及以后是ART）上的字节码、生成常量池、消除冗余数据等。由于Android虚拟机是一种针对嵌入式设备而特殊设计的java虚拟机，所有dex文件与标准的class文件在结构设计上有着很大的区别，当javac将java程序编译成class后，dx工具将所有的class文件整合到一个dex文件中，这样做使得各个类能够共享数据，在一定程度上降低了容易，同时也使文结构更加紧凑，实验表明，dex文件时传统jar文件的50%左右。class文件结构和dex文件结构比对如下（该部分还会在后文讲Android虚拟机时提到）：&lt;/p&gt;
&lt;p&gt;           &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927110637327-361980182.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                     .class文件和.dex文件结构对比图&lt;/p&gt;
&lt;p&gt;  6、apkbuilder打包生成apk&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：ApkBuilder类&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/tools/lib/sdklib_xxx.jar&lt;/li&gt;
&lt;li&gt;输入：上一步生成的classes.dex文件，aapt时生成的resources.arsc、被编译后的res文件夹、AndroidManifest.xml，Other Resouces（assets文件夹）&lt;/li&gt;
&lt;li&gt;输出：.apk文件(Android Package)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;  7、对apk进行签名&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：apksigner.bat&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/build-tools/版本号/apksigner.bat&lt;/li&gt;
&lt;li&gt;输入：上一步中生成的.apk文件、签名文件（Debug or Release Keystore）&lt;/li&gt;
&lt;li&gt;输出：签名后的.apk文件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;      签名是一个apk身份的证明，Android系统在安装apk的时候，首先会检验apk的签名，如果发现签名文件不存在或者校验签名失败，就会拒绝安装。对一个apk文件签名后，apk文件根目录下回增加META-INF目录，该目录下有三个文件：&lt;/p&gt;
&lt;p&gt;        &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927134251573-1485605126.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;               META-IINF文件夹结构&lt;/p&gt;
&lt;p&gt;      Android系统就是根据这三个文件的内容对apk文件进行签名验证的：&lt;/p&gt;
&lt;p&gt;      MANIFEST.MF中包含对apk中除了/META-INF文件夹外所有文件的签名值。&lt;/p&gt;
&lt;p&gt;      &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927140029084-2000909632.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                 MANIFEST.MF内容截图&lt;/p&gt;
&lt;p&gt;      CERT.SF是对MANIFEST.MF文件整体签名以及其中各个条目的签名。一般地，如果是使用工具签名，还多包括一项，就是对MANIFEST.MF头部信息签名。&lt;/p&gt;
&lt;p&gt;      &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927140719496-1476867942.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;                                                               CERT.SF内容截图&lt;/p&gt;
&lt;p&gt;      CERT.RSA包含用私钥对CERT.SF的签名以及包含公钥信息的数字证书。用一般的文本打开后，会显示乱码。&lt;/p&gt;
&lt;p&gt;      &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927141333320-99750118.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　                CETR.RSA内容截图&lt;/p&gt;
&lt;p&gt;      推荐阅读：&lt;a href=&quot;https://blog.csdn.net/lb_fighting/article/details/52687691&quot; target=&quot;_blank&quot;&gt;Android签名有什么用？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;                     &lt;a href=&quot;https://blog.csdn.net/jiangwei0910410003/article/details/50402000&quot; target=&quot;_blank&quot;&gt; Android签名过程详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  8、zipalign优化&lt;/p&gt;
&lt;p&gt;      如果是在release mode下，还会对apk进行align，即对签名后的apk进行对齐处理，这种方式是对apk进行整理和优化。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;工具：zipalign&lt;/li&gt;
&lt;li&gt;工具路径：sdkpath/build-tools/版本号/zipalign.exe&lt;/li&gt;
&lt;li&gt;输入：上一步中签名后的apk文件&lt;/li&gt;
&lt;li&gt;输出：优化后的apk文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;四、APK文件结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;      一个apk解压后，其典型的结构如下所示，分别在apk打包流程中appt资源打包、javac编译、签名阶段所产生：&lt;/p&gt;
&lt;p&gt;      &lt;img src=&quot;https://img2018.cnblogs.com/blog/472002/201809/472002-20180927143444451-132441667.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Sep 2018 14:38:00 +0000</pubDate>
<dc:creator>宋者为王</dc:creator>
<og:description>APK，即Android Package，apk打包是将android程序和资源整合在一起，形成的一个.apk文件。相信所有的Android程序员是在IDE的帮助下，完成打包轻而易举，但对打包流程真正</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/andy-songwei/p/9721337.html</dc:identifier>
</item>
<item>
<title>可验证随机函数 - warm3snow</title>
<link>http://www.cnblogs.com/informatics/p/9721295.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/informatics/p/9721295.html</guid>
<description>&lt;p&gt;最近区块链领域流行了一种“怪病”，许多区块链项目或者设计方案都加入了一个叫做&lt;strong&gt;VRFs&lt;/strong&gt;的算法。&lt;br/&gt;（1） 那什么是VRFs？&lt;br/&gt;（2） 使用VRFs又是为了什么？&lt;br/&gt;本文旨在介绍VRFs的原理以及在区块链中的用途，不涉及复杂的VRFs的详细设计实现以及安全性证明。&lt;/p&gt;
&lt;h2 id=&quot;一什么是vrfs&quot;&gt;（一）什么是VRFs？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;VRFs&lt;/strong&gt;全称Verifiable Random Functions，也就是可验证随机函数。从名字上可以看出VRFs有三个重要的特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;可验证&lt;/li&gt;
&lt;li&gt;随机性&lt;/li&gt;
&lt;li&gt;函数组&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;实际上，VRFs是hash函数构造的公钥密码方案，因此VRFs又包含了hash函数和公钥密码算法（hash函数和公钥密码参考wiki，这里不在赘述），功能上简单来讲，hash函数一般用来保证信息完整性，公钥密码用来进行数据鉴权。&lt;br/&gt;VRFs介绍内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;关键术语介绍&lt;/li&gt;
&lt;li&gt;VRFs之函数组&lt;/li&gt;
&lt;li&gt;VRFs之随机性&lt;/li&gt;
&lt;li&gt;VRFs之可验证&lt;/li&gt;
&lt;li&gt;VRFs之确定性&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;关键术语&quot;&gt;关键术语&lt;/h3&gt;
&lt;p&gt;VRFs涉及的一些关键术语：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;&lt;li&gt;SK, PK: VRF中使用的公私钥对，SK为私钥，PK为公钥。PK默认为公开参数（比如说已经记录在区块链上）&lt;/li&gt;
&lt;li&gt;M: 输入数据&lt;/li&gt;
&lt;li&gt;R：VRF哈希输出&lt;/li&gt;
&lt;li&gt;P：VRF证明&lt;/li&gt;
&lt;li&gt;Prover：证明者，拥有VRF公私钥PK和SK的一方&lt;/li&gt;
&lt;li&gt;Verifier：验证着，拥有VRF中的公钥PK&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;vrfs之函数组&quot;&gt;VRFs之函数组&lt;/h3&gt;
&lt;p&gt;VRFs中涉及到四个重要的函数&lt;br/&gt;uploading-image-30552.png&lt;/p&gt;
&lt;p&gt;这四个函数可以分为两类，&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;生成函数：&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;R=VRF_Hash(SK,M)
P=VRF_Proof(SK,M)&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;&lt;li&gt;验证函数：&lt;/li&gt;
&lt;/ol&gt;&lt;pre&gt;
&lt;code&gt;R=VRF_P2H(P)
VRF_Verify(PK,M,P)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;应用上，（1）首先生成一对公私钥；（2）然后使用&lt;strong&gt;生成函数&lt;/strong&gt;分别生成哈希值&lt;em&gt;R&lt;/em&gt;和哈希值的证明&lt;em&gt;P&lt;/em&gt;；（3）使用验证函数分别验证&lt;strong&gt;R&lt;/strong&gt;和&lt;strong&gt;P&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;vrfs之随机性&quot;&gt;VRFs之随机性&lt;/h3&gt;
&lt;p&gt;像每个密码算法一样，首先VRF需要一个密钥生成算法，用来生成公私钥对&lt;code&gt;(SK,PK)&lt;/code&gt;。这里的SK的产生需要复杂的随机数产生函数（高端一点的需要特制的硬件随机数发生源）来保证密钥的随机性。&lt;br/&gt;当然，VRFs之随机性实际上并不是指的上述随机性，VRFs的随机性指的是，在不给定证明&lt;strong&gt;P&lt;/strong&gt;的情况下，&lt;code&gt;VRF_Hash&lt;/code&gt;的输出&lt;strong&gt;R&lt;/strong&gt;与随机数两者之间是敌手不可区分的，这是比较正式或者说学术上的说法，可以认为VRF_Hash输出的&lt;strong&gt;R&lt;/strong&gt;就是个随机数。&lt;/p&gt;
&lt;h3 id=&quot;vrfs之可验证&quot;&gt;VRFs之可验证&lt;/h3&gt;
&lt;p&gt;VRF的可验证性，有两层意思：&lt;br/&gt;一是&lt;strong&gt;P&lt;/strong&gt;对&lt;strong&gt;R&lt;/strong&gt;的验证；&lt;br/&gt;二是&lt;strong&gt;PK&lt;/strong&gt;对&lt;strong&gt;P&lt;/strong&gt;的验证。&lt;br/&gt;前者是VRF证明对VRF哈希的验证，后者是公钥对VRF证明的验证。有点类似验证链：拥有公钥&lt;strong&gt;PK&lt;/strong&gt;可以通过&lt;code&gt;VRF_Verify(PK,M,P)&lt;/code&gt;验证证明&lt;strong&gt;P&lt;/strong&gt;的合法性；拥有&lt;strong&gt;P&lt;/strong&gt;可以通过&lt;code&gt;R=VRF_P2H(P)&lt;/code&gt;来验证&lt;strong&gt;R&lt;/strong&gt;的合法性。&lt;/p&gt;
&lt;h3 id=&quot;vrfs之确定性&quot;&gt;VRFs之确定性&lt;/h3&gt;
&lt;p&gt;VRFs的确定性比较简单，就是对相同的&lt;strong&gt;SK&lt;/strong&gt;和&lt;strong&gt;M&lt;/strong&gt;，多次计算&lt;code&gt;R=VRF_Hash(SK,M)&lt;/code&gt;,得到的&lt;strong&gt;R&lt;/strong&gt;是相同的。&lt;/p&gt;
&lt;h2 id=&quot;二vrfs在区块链中的作用&quot;&gt;（二）VRFs在区块链中的作用&lt;/h2&gt;
&lt;p&gt;区块链技术包含了密码学、P2P协议以及共识算法等，是多种技术的巧妙组合，同时加入了经济激励机制。其中，共识算法可谓是区块链技术的灵魂。区块链技术从2009年至今发展了接近十年的时间，共识算法也一直围绕着安全性、去中心化以及高效低能者三个要求不断探索，从中本聪共识（POW类），到POS和DPOS共识，再到各种BFT共识等。&lt;/p&gt;
&lt;p&gt;在区块链世界中，矿工的工作是区块链安全运行的基础，而他们的工作就是挖矿⚒️，矿工挖到矿（区块）会获得一笔奖励金和一部分交易手续费。同一时间会有许多矿工进行挖矿，但最终只会有一个区块进入到主链上。&lt;/p&gt;
&lt;p&gt;POW挖矿算法：&lt;code&gt;Hash(Hash(block, nonce)) &amp;lt; D&lt;/code&gt;&lt;br/&gt;矿工挖矿的过程就是为了找到一个以上条件的nonce，谁先算出来谁就是本轮的获胜者。根据Hash算法的特点，其他矿工可以很容易验证上面不等式的有效性。众所周知这类算法：实现简单，易于理解，但低效高能。&lt;br/&gt;为了解决POW共识低效高能的缺点，出现了POS类共识，而这类共识首先要解决的问题就是 &lt;strong&gt;&lt;em&gt;谁来出块&lt;/em&gt;&lt;/strong&gt; 的问题，VRFs最初被引入区块链就是为了解决这个问题。&lt;/p&gt;
&lt;h3 id=&quot;vrfs如何决定出块者&quot;&gt;VRFs如何决定出块者&lt;/h3&gt;
&lt;p&gt;像选美大赛一样，评委和观众会有一个评选标准，比如说身材、相貌或者多才多艺。用VRF选择出块者也需要一个标准，跟POW挖矿算法中的难度&lt;strong&gt;D&lt;/strong&gt;一样，VRFs也需要类似的&lt;strong&gt;D&lt;/strong&gt;。&lt;br/&gt;VRFs挖矿算法：&lt;code&gt;R = VRF_Hash(SK,block) &amp;lt; D&lt;/code&gt;&lt;br/&gt;为了统一暂且也叫做挖矿算法。给定自己的私钥SK和block信息，可以很快的验证自己是否成为下一轮的出块者，不需要进行大量的Hash计算。&lt;/p&gt;
&lt;p&gt;这类算法特点：离线验证，高效低能，但实现复杂&lt;/p&gt;
&lt;h2 id=&quot;十万个为什么qa&quot;&gt;#### 十万个为什么Q&amp;amp;A&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;不过聪明的人可能一下就能看出其中的问题：&lt;strong&gt;SK&lt;/strong&gt;是矿工私钥不会公开，其他矿工如何证明&lt;strong&gt;R&lt;/strong&gt;不是随便选取的小于&lt;strong&gt;D&lt;/strong&gt;的数。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;因此需要有个对于&lt;strong&gt;R&lt;/strong&gt;有效性的证明，也就是上文中的&lt;strong&gt;P&lt;/strong&gt;：&lt;code&gt;P=VRF_Proof(SK,M)&lt;/code&gt;，然后通过&lt;code&gt;R'=VRF_P2H(P)&lt;/code&gt;，从&lt;strong&gt;P&lt;/strong&gt;中恢复出一个&lt;strong&gt;R'&lt;/strong&gt;,只要 &lt;code&gt;R == R'&lt;/code&gt;,就可以证明&lt;strong&gt;R&lt;/strong&gt;的有效性。然后用公钥&lt;strong&gt;PK&lt;/strong&gt;通过&lt;code&gt;VRF_Verify(PK,M,P)&lt;/code&gt;来对&lt;strong&gt;P&lt;/strong&gt;进行公开验证。&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;当然聪明的你可能又问了：看了半天，我感觉直接用签名算法不就可以了，干嘛整的这么复杂，比如说矿工直接对block签名，如果&lt;code&gt;Sign(SK, block) &amp;lt; D&lt;/code&gt;，那么矿工就有出块的权利。&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;在密码学签名算法中，大都会引入随机性，也就是对相同信息的多次签名会得到不同的签名值，因此矿工可以不断对相同的输入&lt;strong&gt;SK&lt;/strong&gt;和&lt;strong&gt;block&lt;/strong&gt;，计算签名，以满足结果小于&lt;strong&gt;D&lt;/strong&gt;。那么理论上任何人都会成为出块者，只要计算足够多次的签名。&lt;/p&gt;
&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;老师，还有个问题：RSA签名方案，每次得到的签名不就都是确定值么！&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;对。其实不管使用确定性签名还是随机性签名，都存在个安全隐患。就是一旦将自己的出块凭证公布，任何人都可以公开验证，包括攻击者。那么攻击者可以对出块节点进行攻击，使其不能出块。&lt;br/&gt;使用VRFs的方式，矿工只需要公布自己的&lt;strong&gt;R&lt;/strong&gt;表明自己的出块权，当出完块的时候再公布&lt;strong&gt;P&lt;/strong&gt;，那么攻击者就无法在出块之前知道谁具有出块权，因此也就无法实施针对性的攻击。&lt;br/&gt;当然对于&lt;strong&gt;R&lt;/strong&gt;作假，还有个比较有名的问题：&quot;&lt;strong&gt;&lt;em&gt;Nothing At Risk&lt;/em&gt;&lt;/strong&gt;&quot;，翻译过来叫无利害关系。对于这类攻击的解决方法，一般都会使用 &quot;&lt;strong&gt;&lt;em&gt;缴纳保证金&lt;/em&gt;&lt;/strong&gt;&quot; 的方式。&lt;/p&gt;
&lt;h3 id=&quot;三个人思考&quot;&gt;（三）个人思考&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;共识不是一个简单的算法问题，更像一个社会治理问题。&lt;/li&gt;
&lt;li&gt;共识算法的设计需要关注性能和安全性，以达到性能和安全性的平衡。&lt;/li&gt;
&lt;li&gt;区块链技术”&lt;strong&gt;不可能三角问题&lt;/strong&gt;“中的去中心化，个人认为应该叫做公平性，因为去中心化不是区块链的目的，优秀的区块链应该是高性能，高安全性，参与者相对平等。而去中心化只是实现上的效果。公平性不单指的是公平的出块权，未来也可能代表公平的获取信息的权利（当然可能只是借助了区块链技术的创新项目）。&lt;/li&gt;
&lt;li&gt;VRFs可以用来选出块者，也可以用来分组，通过分组，提高交易并行处理性能。&lt;/li&gt;
&lt;/ol&gt;&lt;h5&gt;个人思考，有感而发，欢迎批评指正~~&lt;/h5&gt;
</description>
<pubDate>Fri, 28 Sep 2018 14:25:00 +0000</pubDate>
<dc:creator>warm3snow</dc:creator>
<og:description>可验证随机函数（VRFs） 最近区块链领域流行了一种“怪病”，许多区块链项目或者设计方案都加入了一个叫做 VRFs 的算法。 （1） 那什么是VRFs？ （2） 使用VRFs又是为了什么？ 本文旨在介</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/informatics/p/9721295.html</dc:identifier>
</item>
<item>
<title>Python基础（上） - Jonins</title>
<link>http://www.cnblogs.com/jonins/p/9694546.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jonins/p/9694546.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;正式开始Python之旅，主要学习内容专注在&lt;strong&gt;爬虫&lt;/strong&gt;和&lt;strong&gt;人工智能&lt;/strong&gt;领域，如Web开发之类将跳过不研究。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;的意思是&lt;strong&gt;蟒蛇&lt;/strong&gt;，源于作者&lt;strong&gt;Guido van Rossum（龟叔）&lt;/strong&gt;喜欢的一部电视剧。所以现在开始暂时忘掉.NET忘掉C#，using干什么用的？不知道....&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;我只记得、我要玩蛇&lt;/strong&gt;！！！&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926205315986-442595381.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Python基础概述&lt;/h2&gt;
&lt;h3&gt;1.优点&lt;/h3&gt;
&lt;p&gt;简单：Python是一种代表简单主意的语言。Python这种伪代码本质是它最大的优点之一，它使你能够专注于解决问题而不是搞明白语言本身。&lt;/p&gt;
&lt;p&gt;易学：Python极易上手，它有着极其简单的语法，Python采用强制缩进的方式使得代码具有极佳的可读性。&lt;/p&gt;
&lt;p&gt;免费、开源：Python是FLOS（自由/开放源码软件）之一。可以自由地发布这个软件的拷贝、阅读它的源码、并改动它和闭源。&lt;/p&gt;
&lt;p&gt;高层语言：无需关心内存方面的管理之类的底层细节。&lt;/p&gt;
&lt;p&gt;跨平台（可移植性）：Python已经被移植在多个平台，在任何平台都可以在不修改源码的情况下运行Python程序。&lt;/p&gt;
&lt;p&gt;解释性：Python程序不需要编译成二进制码，可以直接源代码运行程序，在计算机内部，Python解释器把源代码转换成字节码的中间形式，再把它翻译成计算机使用的机器语言运行。&lt;/p&gt;
&lt;p&gt;面向对象：Python既支持面向过程编程也支持面向对象编程，相比其它语言如Java和C#相比，它以一种非常强大又简单的方式实现面向对象编程。&lt;/p&gt;
&lt;p&gt;可扩展性：如果需要关键代码运行得更快或希望某些算法不公开，可以把这一部分使用C或C++编写，然后在Python程序中使用它们。&lt;/p&gt;
&lt;p&gt;丰富的库：Python标准库很庞大。&lt;/p&gt;
&lt;h3&gt;2.缺点&lt;/h3&gt;
&lt;p&gt;运行速度：如果对运行速度有要求的话，用C++改写关键部分。&lt;/p&gt;
&lt;p&gt;中文资源匮乏：入门资料多，高级内容还得看英文版。&lt;/p&gt;
&lt;p&gt;架构选择太多：没有像C#这样的官方.NET企业架构，&lt;/p&gt;
&lt;h3&gt;3.应用场景&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Web应用开发：&lt;/strong&gt;一些Web框架，如&lt;span&gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/span&gt;,&lt;strong&gt;TurboGears&lt;/strong&gt;,&lt;strong&gt;&lt;span&gt;web2py&lt;/span&gt;&lt;/strong&gt;,&lt;span&gt;&lt;strong&gt;Zope&lt;/strong&gt;&lt;/span&gt;等，可以让程序员轻松地开发和管理复杂Web程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作系统管理、服务器运维和自动化脚本：&lt;/strong&gt;在很多操作系统里，Python是标准的系统组件。大多数Linux发行版和MacOS都集成了Python,可以在终端直接运行Python。Python能够访问Windows的COM服务及其它Windows API。使用IroPython,Python程序可以直接调用.Net Frameword。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;科学计算：&lt;span&gt;NumPy&lt;/span&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;span&gt;SciPy&lt;/span&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;span&gt;Matplotlib&lt;/span&gt;&lt;/strong&gt;、&lt;span&gt;&lt;strong&gt;Pandas&lt;/strong&gt;&lt;/span&gt;等，可以让Python程序员编写科学计算程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;桌面软件：&lt;/strong&gt;PyQt,PySide,wxPython,PyGTK可以使用Python快速开发桌面应用程序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务器软件：&lt;/strong&gt;Python对于各种网络协议的支持非常完美，因此常被用于编写服务器软件、网络爬虫、第三方库Twisted支持异步网络编程和多数标准的网络协议，并且提供了多种工具，被广泛用于编写高性能的服务器软件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;游戏：&lt;/strong&gt;很多游戏使用C++编写图形显示等高性能模块，使用Python编写游戏的逻辑、服务器。&lt;/p&gt;

&lt;h2&gt;注释&lt;/h2&gt;
&lt;h3&gt;1.单行注释&lt;/h3&gt;
&lt;p&gt;以&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;开头、&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;右边的所有内容当作说明而非真正要执行的内容。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt;我是单号注释&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;('&lt;span&gt;Hello Jonins'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.多行注释&lt;/h3&gt;
&lt;p&gt;以&lt;strong&gt;&lt;span&gt;'''&lt;/span&gt;&lt;/strong&gt;（3个单引号）开始以&lt;strong&gt;&lt;span&gt;'''&lt;/span&gt;&lt;/strong&gt;（3个单引号）结尾，中间的内容被当作说明。（也可以用3个双引号&quot;&quot;&quot;）&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;我是多行注释
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;'''&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;5&lt;/span&gt; &lt;span&gt;我是多行注释
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span&gt;7&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;Hello Jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;中文支持&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Python3支持中文&lt;/strong&gt;，但在&lt;strong&gt;Python2中&lt;/strong&gt;，程序只要包含中文，&lt;strong&gt;python2的解释器不能识别&lt;/strong&gt;所以会报错，所以需要在程序的最开头输入如下代码：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt;conding=utf-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还有一种写法，是&lt;strong&gt;python的语法规范中推荐&lt;/strong&gt;使用的：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;#&lt;/span&gt;&lt;span&gt;-*- conding:utf-8 -*-&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 完整的示例如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180924013004116-548602916.png&quot; alt=&quot;&quot; width=&quot;449&quot; height=&quot;88&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;变量及类型&lt;/h2&gt;
&lt;h3&gt;1.变量定义&lt;/h3&gt;
&lt;p&gt;python是一门&lt;strong&gt;弱类型&lt;/strong&gt;语言，意味着不用强调变量的类型，在变量的定义前面不需要加变量的类型。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; num1 = 10&lt;span&gt;#&lt;/span&gt;&lt;span&gt;num1在变量赋值的过程中自动赋值自己的类型&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; num2 = 20
&lt;span&gt;3&lt;/span&gt; total = num1+&lt;span&gt;num2
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(total)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;若想查看变量的类型，可以使用type(变量名)：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; num1 = 10
&lt;span&gt;2&lt;/span&gt; num1 = &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(type(num1))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180924014236944-79014664.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.变量类型&lt;/h3&gt;
&lt;p&gt;为了更充分的利用内存空间以及更高效的管理内存，变量有不同类型的，常用的数据类型如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180924015445256-456136972.png&quot; alt=&quot;&quot; width=&quot;669&quot; height=&quot;487&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;标识符和关键字 &lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;标识符&lt;/strong&gt;是我们自己定义的如：变量名、函数名等。&lt;/p&gt;
&lt;p&gt;标识符只能由&lt;strong&gt;数字、字母和&lt;/strong&gt;下划线组成，并且数字不能在开头。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键词&lt;/strong&gt;是python已经使用了的，具有特殊功能的标识符。python不允许开发者自己定义和关键词相同名字的标识符。可以通过代码查看python具有哪些关键词：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;import keyword
keys &lt;/span&gt;=&lt;span&gt; keyword.kwlist;
print(keys)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大致有如下这些：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;66&quot;&gt;
&lt;pre&gt;
[&lt;span&gt;'&lt;/span&gt;&lt;span&gt;False&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;None&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;True&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;and&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;as&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;assert&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;class&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;continue&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;del&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;elif&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;except&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;for&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;,&lt;br/&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;global&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;import&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;in&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;lambda&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;nonlocal&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;not&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;or&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;pass&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;raise&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;try&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;with&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;输入（input）&lt;/h2&gt;
&lt;h3&gt;1.Python2中输入&lt;/h3&gt;
&lt;p&gt;在&lt;span&gt;&lt;strong&gt;python2&lt;/strong&gt;&lt;/span&gt;中，获取键盘输入的数据的方式采用&lt;span&gt;&lt;strong&gt;raw-input()&lt;/strong&gt;&lt;/span&gt;函数，示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
name=raw_input(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;请输入姓名:&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
print(name)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;raw-input()&lt;/strong&gt;&lt;/span&gt;的小括号中放入的是，提示信息，用来在获取数据之前给用户一个提示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;raw-input()&lt;/span&gt;&lt;/strong&gt;在从键盘获取到数据以后，会将数据存放到等号右边的变量中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;raw-input()&lt;/span&gt;&lt;/strong&gt;会把用户输入的&lt;span&gt;&lt;strong&gt;任何值都作为字符串&lt;/strong&gt;&lt;/span&gt;来存储。&lt;/p&gt;
&lt;p&gt;而&lt;span&gt;&lt;strong&gt;python2&lt;/strong&gt;&lt;/span&gt;中的&lt;strong&gt;&lt;span&gt;input()&lt;/span&gt;&lt;/strong&gt;函数于&lt;span&gt;&lt;strong&gt;raw_input()&lt;/strong&gt;&lt;/span&gt;类似，但其接受的输入必须是表达式（切换&lt;strong&gt;python2&lt;/strong&gt;的交互窗口进行验证）如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; num=&lt;span&gt;input()
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; 123&lt;span&gt;#输入123自动识别为int&lt;/span&gt;
&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; num
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; 123
&lt;span&gt; 6&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; type(num)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &amp;lt;type &lt;span&gt;'&lt;/span&gt;&lt;span&gt;int&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&amp;gt;
&lt;span&gt; 8&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; str=&lt;span&gt;input()
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins&lt;/span&gt;&lt;span&gt;'&lt;span&gt;#输入&quot;或'自动识别为string&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;10&lt;/span&gt; 
&lt;span&gt;11&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; str
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;13&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; type(str)
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &amp;lt;type &lt;span&gt;'&lt;/span&gt;&lt;span&gt;str&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&amp;gt;
&lt;span&gt;15&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; num=&lt;span&gt;input()
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; 1+2+3&lt;span&gt;#同类型可以相加&lt;/span&gt;
&lt;span&gt;17&lt;/span&gt; 
&lt;span&gt;18&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; num
&lt;/span&gt;&lt;span&gt;19&lt;/span&gt; 6
&lt;span&gt;20&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; str=&lt;span&gt;input()
&lt;/span&gt;&lt;span&gt;21&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1010&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;+&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonsin&lt;/span&gt;&lt;span&gt;'&lt;span&gt;#string同类型则会拼接&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;22&lt;/span&gt; 
&lt;span&gt;23&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&lt;span&gt; str
&lt;/span&gt;&lt;span&gt;24&lt;/span&gt; &lt;span&gt;'&lt;/span&gt;&lt;span&gt;1010jonsin&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;25&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.Python3中输入&lt;/h3&gt;
&lt;p&gt;在&lt;span&gt;&lt;strong&gt;python3&lt;/strong&gt;&lt;span&gt;中没有&lt;span&gt;&lt;strong&gt;raw_input()&lt;/strong&gt;&lt;/span&gt;函数，只有&lt;strong&gt;&lt;span&gt;input()&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;并且&lt;strong&gt;&lt;span&gt;python3&lt;/span&gt;&lt;/strong&gt;中的&lt;span&gt;&lt;strong&gt;input()&lt;/strong&gt;&lt;/span&gt;功能与&lt;span&gt;&lt;strong&gt;python2&lt;/strong&gt;&lt;/span&gt;中的&lt;span&gt;&lt;strong&gt;raw_inpu()&lt;/strong&gt;&lt;/span&gt;功能一样。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;输出（print）&lt;/h2&gt;
&lt;h3&gt;1.普通输出&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;hello jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; age=18
&lt;span&gt;3&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(age)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.格式化输出&lt;/h3&gt;
&lt;p&gt;在程序中若想在输出中给变量占位需要使用&lt;span&gt;&lt;strong&gt;%&lt;/strong&gt;&lt;/span&gt;号格式化输出，如下所示&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; age=18
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;年龄是:%d已成年!&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt;age)
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;姓名%s,年龄%d岁.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%(name,age))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926213824659-1015811508.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在程序，看到&lt;span&gt;&lt;strong&gt;%&lt;/strong&gt;&lt;/span&gt;这样的操作符，&lt;strong&gt;就是python的格式化输出&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;3.常用的格式符号&lt;/h3&gt;
&lt;p&gt;下面是完整的，可以与&lt;strong&gt;&lt;span&gt;%&lt;/span&gt;&lt;/strong&gt;符号配合使用的列表： &lt;/p&gt;
&lt;table border=&quot;0&quot; align=&quot;left&quot;&gt;&lt;tbody readability=&quot;5&quot;&gt;&lt;tr&gt;&lt;td&gt;格式符号&lt;/td&gt;
&lt;td&gt;转换&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;字符&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%s&lt;/td&gt;
&lt;td&gt;通过str()字符串转换来的格式化&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%i&lt;/td&gt;
&lt;td&gt;有符号十进制整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;有符号十进制整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%u&lt;/td&gt;
&lt;td&gt;无符号十进制整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;八进制整数&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%x&lt;/td&gt;
&lt;td&gt;十六进制整数（小写字母）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%X&lt;/td&gt;
&lt;td&gt;十六进制整数（大写字母）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%e&lt;/td&gt;
&lt;td&gt;索引符号（小写e）&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;%E&lt;/td&gt;
&lt;td&gt;索引符号（大写E）&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;浮点实数&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%g&lt;/td&gt;
&lt;td&gt;%f和%e的简写&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%G&lt;/td&gt;
&lt;td&gt;%f和%E的简写&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;4.换行输出&lt;/h3&gt;
&lt;p&gt;在输出的时候，如果有&lt;span&gt;&lt;strong&gt;\n&lt;/strong&gt;&lt;/span&gt;那么，此时&lt;span&gt;&lt;strong&gt;\n&lt;/strong&gt;&lt;/span&gt;后的内容会在另外一行显示&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;姓名jonins\n年龄18岁&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926215024156-1460473976.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;运算符&lt;/h2&gt;
&lt;h3&gt;1.算术运算符&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926221957601-209246898.png&quot; alt=&quot;&quot; width=&quot;1341&quot; height=&quot;247&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;注意&lt;/span&gt;：当算术的运算两个对象不是同类型，也是可以计算的，结果会跟随类型较大的对象。如：9/3.0 =3.0&lt;/p&gt;
&lt;h3&gt;2.赋值运算符&lt;/h3&gt;
&lt;p&gt;运算符&lt;span&gt;&lt;strong&gt;=&lt;/strong&gt;&lt;/span&gt;，为&lt;strong&gt;赋值&lt;/strong&gt;运算符，作用是把等号右边的结果给左边的变量，示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; a,b=1,3
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(a+&lt;span&gt;b)
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; c,d=2.0,&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;4&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(c)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(d)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926222229777-551310913.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;3.复合赋值运算符&lt;/h3&gt;
&lt;table border=&quot;0&quot; align=&quot;left&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;运算符&lt;/td&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;td&gt;示例&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;+=&lt;/td&gt;
&lt;td&gt;加法赋值&lt;/td&gt;
&lt;td&gt;a+=b等效于a=a+b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-=&lt;/td&gt;
&lt;td&gt;减法赋值&lt;/td&gt;
&lt;td&gt;a-=b等效于a=a-b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;*=&lt;/td&gt;
&lt;td&gt;乘法赋值&lt;/td&gt;
&lt;td&gt;a*=b等效于a=a*b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;/=&lt;/td&gt;
&lt;td&gt;除法赋值&lt;/td&gt;
&lt;td&gt;a/=b等效于a=a/b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;//=&lt;/td&gt;
&lt;td&gt;取整除赋值&lt;/td&gt;
&lt;td&gt;a//=b等效于a=a//b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;%=&lt;/td&gt;
&lt;td&gt;取余赋值&lt;/td&gt;
&lt;td&gt;a%=b等效于a=a%b&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;**=&lt;/td&gt;
&lt;td&gt;幂计算赋值&lt;/td&gt;
&lt;td&gt;a**=b等效于a=a**b&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;数据类型转换&lt;/h2&gt;
&lt;p&gt; &lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926224434382-828394275.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; str=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; num=&lt;span&gt;float(str)
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(num)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180926224756677-617852263.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;判断语句（if&amp;amp;elif）&lt;/h2&gt;
&lt;h3&gt;1.if-else语句&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;if-else&lt;/strong&gt;&lt;/span&gt;的使用格式：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; 条件:
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    满足条件时要做的事情1
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    满足条件时要做的事情2
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    满足条件时要做的事情3
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    满足条件时要做的事情4
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    ...（省略）...
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    不满足条件时要做的事情1
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    不满足条件时要做的事情2
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    不满足条件时要做的事情3
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    不满足条件时要做的事情4
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;     ...（省略）...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; age=18
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;--------if判断开始----------&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; age&amp;gt;=18&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已成年&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;年龄是%i&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt;age)
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;未成年&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;年龄是%i&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt;age)
&lt;/span&gt;&lt;span&gt;9&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;--------if判断结束----------&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180927202210687-162115235.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注意：&lt;strong&gt;代码的缩进为一个tab键，或者4个空格&lt;/strong&gt;。解释器会将缩进的语句判定为满足条件时执行的代码。对应的C#代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('3906248c-89fd-43bb-9c2e-57e433e35ad2')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_3906248c-89fd-43bb-9c2e-57e433e35ad2&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_3906248c-89fd-43bb-9c2e-57e433e35ad2&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('3906248c-89fd-43bb-9c2e-57e433e35ad2',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_3906248c-89fd-43bb-9c2e-57e433e35ad2&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; age = &lt;span&gt;18&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------if判断开始----------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (age &amp;gt;= &lt;span&gt;18&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已成年&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;                 Console.WriteLine($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;年龄是{age}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;
&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;未成年&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;                 Console.WriteLine($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;年龄是{age}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------if判断结束----------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;             Console.ReadKey();
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;C# Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;2.elif语句 &lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;elif&lt;/strong&gt;&lt;/span&gt;的使用格式如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; 条件1:
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情1
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情2
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情3
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情4
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;    ...（省略）...
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;elif&lt;/span&gt;&lt;span&gt; 条件2:
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;    满足条件2时要做的事情1
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;    满足条件2时要做的事情2
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;    满足条件2时要做的事情3
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;    满足条件2时要做的事情4
&lt;/span&gt;&lt;span&gt;12&lt;/span&gt; &lt;span&gt;    ...（省略）...
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt; &lt;span&gt;    不满足上述所有条件时要做的事情1
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;    不满足上述所有条件时要做的事情2
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt; &lt;span&gt;    不满足上述所有条件时要做的事情3
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt; &lt;span&gt;    不满足上述所有条件时要做的事情4
&lt;/span&gt;&lt;span&gt;18&lt;/span&gt;     ...（省略）...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; age=18
&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;--------if判断开始----------&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; age==16&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已年满16岁&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;elif&lt;/span&gt; age==18&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;已成年&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;年龄是%i&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt;age)
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;未成年&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;年龄是%i&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;%&lt;span&gt;age)
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;--------if判断结束----------&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180927203654567-446504803.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;elif&lt;/strong&gt;&lt;/span&gt;语句一定要配合&lt;strong&gt;&lt;span&gt;if&lt;/span&gt;&lt;/strong&gt;使用，可以有&lt;strong&gt;&lt;span&gt;else&lt;/span&gt;&lt;/strong&gt;也可以没有，&lt;strong&gt;&lt;span&gt;elif&lt;/span&gt;&lt;/strong&gt;的条件不限制，对应的C#代码如下所示：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; onclick=&quot;cnblogs_code_show('5435b135-fe50-4956-aee2-36e57c26e785')&quot; readability=&quot;32.5&quot;&gt;&lt;img id=&quot;code_img_closed_5435b135-fe50-4956-aee2-36e57c26e785&quot; class=&quot;code_img_closed&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_5435b135-fe50-4956-aee2-36e57c26e785&quot; class=&quot;code_img_opened&quot; onclick=&quot;cnblogs_code_hide('5435b135-fe50-4956-aee2-36e57c26e785',event)&quot; src=&quot;https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_5435b135-fe50-4956-aee2-36e57c26e785&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;60&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt;             &lt;span&gt;int&lt;/span&gt; age = &lt;span&gt;18&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------if判断开始----------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; 
&lt;span&gt; 4&lt;/span&gt;             &lt;span&gt;if&lt;/span&gt; (age == &lt;span&gt;16&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已年满16岁&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (age == &lt;span&gt;18&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;已成年&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt;                 Console.WriteLine($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;年龄是{age}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;11&lt;/span&gt;             &lt;span&gt;else&lt;/span&gt;
&lt;span&gt;12&lt;/span&gt; &lt;span&gt;            {
&lt;/span&gt;&lt;span&gt;13&lt;/span&gt;                 Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;未成年&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;14&lt;/span&gt;                 Console.WriteLine($&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;年龄是{age}&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;15&lt;/span&gt; &lt;span&gt;            }
&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;             Console.WriteLine(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;--------if判断结束----------&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;);
&lt;/span&gt;&lt;span&gt;17&lt;/span&gt;             Console.ReadKey();
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;C# Code&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;3.if嵌套&lt;/h3&gt;
&lt;p&gt;if嵌套的格式大致如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;&lt;span&gt; 条件1:
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情1
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    满足条件1时要做的事情2
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    ...（省略）...
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;&lt;span&gt; 条件2:
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt; &lt;span&gt;        满足条件2时要做的事情1
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        满足条件2时要做的事情2
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        满足条件2时要做的事情3
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        满足条件2时要做的事情4
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         ..（省略）...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;外层的if判断，也可以是if-else&lt;/p&gt;
&lt;p&gt;内层的If判断，也可以是if-else&lt;/p&gt;

&lt;h2&gt;比较&amp;amp;关系运算符&lt;/h2&gt;
&lt;h3&gt;1.比较运算符&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180927205817835-1157803162.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.逻辑运算符&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180927210715153-1532222924.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;循环语句（while）&lt;/h2&gt;
&lt;h3&gt;1.while语句 &lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;while&lt;/strong&gt;&lt;/span&gt;循环的格式如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;while&lt;/span&gt;&lt;span&gt; 条件:
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    满足条件时，做事情1
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;    满足条件时，做事情2
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;    满足条件时，做事情3
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     ...（省略）...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; i=1
&lt;span&gt;2&lt;/span&gt; sum=&lt;span&gt;0
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;while&lt;/span&gt; i&amp;lt;=100&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     sum+=&lt;span&gt;i
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     i+=1
&lt;span&gt;6&lt;/span&gt; &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;1-100的累积和为:%i&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;%sum)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180928213624791-232769534.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;2.循环嵌套&lt;/h3&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt; 1&lt;/span&gt; &lt;span&gt;while&lt;/span&gt;&lt;span&gt; 条件:
&lt;/span&gt;&lt;span&gt; 2&lt;/span&gt; &lt;span&gt;    满足条件时，做事情1
&lt;/span&gt;&lt;span&gt; 3&lt;/span&gt; &lt;span&gt;    满足条件时，做事情2
&lt;/span&gt;&lt;span&gt; 4&lt;/span&gt; &lt;span&gt;    满足条件时，做事情3
&lt;/span&gt;&lt;span&gt; 5&lt;/span&gt; &lt;span&gt;    ...（省略）...
&lt;/span&gt;&lt;span&gt; 6&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt;&lt;span&gt; 条件:
&lt;/span&gt;&lt;span&gt; 7&lt;/span&gt; &lt;span&gt;        满足条件时，做事情1
&lt;/span&gt;&lt;span&gt; 8&lt;/span&gt; &lt;span&gt;        满足条件时，做事情2
&lt;/span&gt;&lt;span&gt; 9&lt;/span&gt; &lt;span&gt;        满足条件时，做事情3
&lt;/span&gt;&lt;span&gt;10&lt;/span&gt;         ...（省略）...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 示例如下:&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; i=1
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;while&lt;/span&gt; i&amp;lt;=5&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     j=1
&lt;span&gt;4&lt;/span&gt;     &lt;span&gt;while&lt;/span&gt; j&amp;lt;=&lt;span&gt;i:
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;         &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;* &lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;,end=&lt;span&gt;&quot;&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         j+=1
&lt;span&gt;7&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;     i+=1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180928214014584-642826812.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;循环语句（for）&lt;/h2&gt;
&lt;p&gt;在&lt;span&gt;python&lt;/span&gt;中&lt;span&gt;&lt;strong&gt;for&lt;/strong&gt;&lt;/span&gt;循环可以遍历任何序列的项目，如一个列表或者一个字符串&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; 临时变量 &lt;span&gt;in&lt;/span&gt;&lt;span&gt; 列表或者字符串等:
&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;    满足循环条件时执行的代码
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;     满足不循环条件时执行的代码
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt;&lt;span&gt; name:
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;&lt;span&gt;(x)
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;遍历完成&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180928214542685-497374515.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;break&amp;amp;continue&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;break&lt;/span&gt;&lt;/strong&gt;的作用：用来结束整个循环。&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;continue&lt;/strong&gt;&lt;/span&gt;的作用:用来结束本次循环，紧接着执行下一次的循环。&lt;/p&gt;
&lt;p&gt; 示例如下：&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&lt;span&gt;1&lt;/span&gt; name=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;jonins.com&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;
&lt;span&gt;2&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; x &lt;span&gt;in&lt;/span&gt;&lt;span&gt; name:
&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(x==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;         &lt;span&gt;continue&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;     &lt;span&gt;if&lt;/span&gt;(x==&lt;span&gt;'&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;):
&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;         &lt;span&gt;break&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;7&lt;/span&gt;     &lt;span&gt;print&lt;/span&gt;(x)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://img2018.cnblogs.com/blog/1440910/201809/1440910-20180928215048257-1595055383.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;span&gt;break&lt;/span&gt;&lt;/strong&gt;/&lt;span&gt;&lt;strong&gt;continue&lt;/strong&gt;&lt;/span&gt;只能用在循环中，除此以外不能单独使用。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;&lt;span&gt;break&lt;/span&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;span&gt;continue&lt;/span&gt;&lt;/strong&gt;在嵌套循环中，只对最近的一层循环起作用。&lt;/p&gt;

</description>
<pubDate>Fri, 28 Sep 2018 14:18:00 +0000</pubDate>
<dc:creator>Jonins</dc:creator>
<og:description>前言 正式开始Python之旅，主要学习内容专注在爬虫和人工智能领域，如Web开发之类将跳过不研究。 Python的意思是蟒蛇，源于作者Guido van Rossum（龟叔）喜欢的一部电视剧。所以现</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jonins/p/9694546.html</dc:identifier>
</item>
<item>
<title>现象级吃鸡类游戏软件调研 - 宁采晨</title>
<link>http://www.cnblogs.com/yangkae/p/9719154.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/yangkae/p/9719154.html</guid>
<description>&lt;p&gt;       吃鸡类游戏是一种战术竞技型射击类&lt;a href=&quot;https://baike.baidu.com/item/%E6%B2%99%E7%9B%92%E6%B8%B8%E6%88%8F/634349&quot; target=&quot;_blank&quot;&gt;沙盒游戏&lt;/a&gt;，每一局游戏将有最多100名玩家参与，他们将被投放在绝地岛上，在游戏的开始时所有人都一无所有。玩家需要在岛上收集各种资源，在不断缩小的安全区域内对抗其他玩家，让自己生存到最后。“吃鸡”一词最早来源于电影《决胜21点》中来自&lt;a href=&quot;https://baike.baidu.com/item/%E6%8B%89%E6%96%AF%E7%BB%B4%E5%8A%A0%E6%96%AF&quot; target=&quot;_blank&quot;&gt;拉斯维加斯&lt;/a&gt;赌场的一段台词：“Winner winner, chicken dinner！”，“大吉大利，今晚吃鸡”于是有了全新的生命力。时值当下，吃鸡类游戏已然成为一种现象级游戏。&lt;/p&gt;
&lt;p&gt;       笔者最近对以下三款吃鸡类手机游戏软件做了调研。&lt;/p&gt;

&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;1&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;荒野行动&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;绝地求生：刺激战场&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;小米枪战&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;发行商&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;网易游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;腾讯游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;小米互娱&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;开发商&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;网易游戏&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;光子工作室群&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;西山居&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;发行时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;2017年10月28日&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;2018年2月9日&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;2017年10月中旬&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;游戏平台&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&amp;amp;PC&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;       小米枪战其实在2017年4月已经发布，到10月中旬才发布了大逃杀模式，此前一直是一款传统的FPS类型的枪战手游。小米枪战可以说是吃鸡游戏的领先者，他在网易和腾讯之前起跑，这让我想起了人月神话中的一句话：It is  commeon sense to take a method and try it. If it fails, admit it frankly and try another. But above all, try something.&lt;/p&gt;
&lt;p&gt;       当腾讯还在做热身运动时，一贯以“慢工出细活”著称的网易却已先行一步，进入“吃鸡”游戏的赛场。2017年11月，“吃鸡”热潮初起之际，网易便抢先上架2款手游《荒野行动》、《终结者2：审判日》，其中荒野行动斩获大量用户。&lt;/p&gt;
&lt;p&gt;       直至2018年2月伊始，腾讯才靠着上线《刺激战场》和《全军出击》在“吃鸡”市场砸出水花。基于微信、QQ两大社交平台基础，再加以较高的还原度、较好的画面质量，《刺激战场》上线24小时后便登上App Store免费游戏榜榜首。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;基本功能比较&lt;/li&gt;
&lt;/ul&gt;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody readability=&quot;6&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;游戏软件名&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;荒野行动&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;绝地求生：刺激战场&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;小米枪战&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;游戏平台&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&amp;amp;PC&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;手机&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;画面&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;3D，画面艳丽&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;3D，画面柔和&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;3D，画面质量高&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;画质&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;高&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;高&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;极高&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;弹道&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;基本没有&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;模拟程度好&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;最近加入&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;组队&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持五人&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持四人&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持四人&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;9&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;经典模式和狙击大作战&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;经典模式和休闲模式&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;战场前线和实训排位&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;人称视角&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;支持第一人称和第三人称切换&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;支持第一人称和第三人称切换&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持第一人称&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;AI机器人&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;有&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;有&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;增加&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;放置系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;不支持&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;不支持&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;引擎&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;Messiah&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;虚幻4&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;虚幻4&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;枪械机瞄&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;自带倍镜&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;保留&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;保留&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;战术雷达&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;支持&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;玩家交流&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;社区互动&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;社区论坛&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot; width=&quot;138&quot;&gt;
&lt;p&gt;社区论坛&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;       在实际体验中，大家看中的大多是游戏软件的画面，流畅度，操作手感，枪械的后坐力真不真实，载具的物理引擎到不到位，这是能不能吸引玩家的关键点。&lt;/p&gt;
&lt;p&gt;       首先是画质问题，在这一点上《小米枪战》做得非常好，画风写实，有大片的风格，相比而言《荒野行动》过于艳丽。&lt;/p&gt;
&lt;p&gt;       然后是后坐力及弹道问题，因为在现实中子弹是会受重力和风的阻力的影响。这一点绝地求生刺激战场做得很好。不同于《荒野行动》中人人都可以成为狙神的“玩具狙”，如果在《绝地求生：刺激战场》里学不会距离的预判，那么就会发现，这里的敌人奔跑起来就像猎豹一样，子弹根本打不中他！&lt;/p&gt;
&lt;p&gt;       物理引擎问题，高速行驶下的蹦蹦操作起来有种脱离地心引力的快感，砂石与泥土飞扬，飙车时抓地和爬坡能力都能从手感上体验到。而对比《荒野行动》中的载具，行驶起来不仅相差不大，还相当难开。&lt;/p&gt;
&lt;p&gt;        三款游戏软件都是下载免费。&lt;/p&gt;
&lt;p&gt;        毋庸置疑，《小米枪战大逃杀》和《荒野行动 》都是以盈利为目标，而《绝地求生：刺激战场》的定论尚未可知，这是因为软件内并无任何增值入口，但经过调研后笔者认为它依然是以盈利为目标，如下。&lt;/p&gt;
&lt;p&gt;       直接盈利模式：即通过游戏软件平台直接获得盈利。直接盈利模式可以看成两种，一种是前向盈利模式：&lt;/p&gt;
&lt;p&gt;       1.付费服务。《荒野行动》和《小米枪战大逃杀》提供VIP服务，能享受到一定的特权，当然这些服务不会破坏竞技游戏的平衡性。&lt;/p&gt;
&lt;p&gt;       2.虚拟形象。《荒野行动》和《小米枪战大逃杀》在软件平台提供了大量枪械皮肤，人物服装，而这些都是要通过点劵和购买，点劵需要玩家充值。&lt;/p&gt;
&lt;p&gt;      另外一种是后向盈利模式。比如说广告服务：例如《小米枪战》在飞机和广告牌上印有百事可乐的标记，《荒野行动》大量与vivo、oppo、nike、adidas、百合网进行广告合作，这些在游戏场景中可以大量发现，而目前为止我并未在《刺激战场》中找到广告。&lt;/p&gt;
&lt;p&gt;       间接盈利模式：游戏软件作为增加用户粘性的整体模块中的一部分，软件服务商通过其他渠道或者产品获利。在这些大厂的游戏影子中，不可避免的有引流服务，小米、网易、腾讯在这些软件中都关系到自己整个庞大的生态圈。&lt;/p&gt;
&lt;p&gt;       特别注意的是，经过调研笔者发现，腾讯视频曾经联合刺激战场出了一个火箭少女活动，即开通腾讯视频的会员可以获得刺激战场里的枪械皮肤。我想，这也是从另一个方面间接地盈利。这也正是我对《绝地求生：刺激战场》盈利目标迟疑的说明。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;软件bug与更新&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;作为游戏软件，不可避免的会出现bug。&lt;/p&gt;
&lt;p&gt;建模问题：普遍都有，当人物看远处的景物时，可能会出现“空中楼阁”的景象；枪械顶墙的时候有可能出现顶出墙外的状况；山体不是密封的，可能掉下去。&lt;/p&gt;
&lt;p&gt;操作引起的运行冲突：小米枪战大逃杀：在水里按一下趴可以按正常速度跑。&lt;/p&gt;
&lt;p&gt;荒野行动：卡进房子里；加速bug。&lt;/p&gt;
&lt;p&gt;绝地求生：刺激战场：打爆车胎通过切换第一人称和第三人称可以无损开车；远处可见空气墙。&lt;/p&gt;
&lt;p&gt;我遗憾的是，bug众多不能一一查明。而在bug与debug中不断的徘徊，这也是互联网公司对游戏软件的常态。当然这也是软件开发商不断完善产品和升级产品的过程，“小步迭代，试错快跑”似乎是一切互联网公司的精神，这也是最能体想出mvp的思想。所以往往这些软件会频繁地更新，大概一个星期游戏开发商会将新版的app发布到app store或者应用商店，我们通过下载安装可以得到这些更新。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;吃鸡游戏的发展与竞争&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;前期：小米枪战——饥饿营销。《小米枪战》初期内测仅针对820、821以及新出的米6、MIX2等835一众高端处理器进行公开测试，对于当时在市场上主流的中端625、650、652全部被挡在门外，当玩家想要使用非测试机型进行游戏的时候会变得很卡。《小米枪战》大逃杀模式发布，运用虚幻4引擎，吸引大批玩家，渗透率（即当前装有目标应用的活跃智能设备占当期全部活跃智能设备的比例）高。&lt;/p&gt;
&lt;p&gt;中期：荒野行动——大行其道。“吃鸡”热潮初起之际，网易便抢先上架2款手游《荒野行动》、《终结者2：审判日》，再加上《荒野行动》PC版，斩获第一波“吃鸡”用户。因为有大厂的优势，很快《荒野行动》注册用户超2亿，成同品类内全球用户规模最大的产品；&lt;/p&gt;
&lt;p&gt;后期：刺激战场——后来居上。早在2017年8月，腾讯便与《绝地求生》出品方韩国蓝洞公司洽谈国服代理权问题，但直至4个月后才取得代理权，彼时《荒野行动》已上架近1个月。直至2018年2月伊始，腾讯才靠着上线《刺激战场》和《全军出击》在“吃鸡”市场砸出水花。基于微信、QQ两大社交平台基础，再加以较高的还原度、较好的画面质量，《刺激战场》上线24小时后便登上App Store免费游戏榜榜首。&lt;/p&gt;
&lt;p&gt;现在是2018年9月28日，吃鸡游戏软件现状：《刺激战场》领衔市场居于龙头地位，《荒野行动》老玩家留存不温不火，《小米枪战》昙花一现终成小众。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;由吃鸡游戏软件看软件开发的本质&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;       不同于硬件的可触性，游戏软件运行在手机上我们是摸不着的。软件开发的本质也正是对用户的需求所做出的建造、补充、更新等一系列系统工程。无论是看这些软件在竞争上的摩肩接踵，还是在更新上的小步迭代，都是开发者们用程序语言进行的对用户需求的一系列响应。不是一蹴而就，而是铁杵磨针。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;我与吃鸡游戏软件&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;       我第一次在应用商店下载时在寒假的时候，时值春节，宾客尽至，高朋满座，与亲朋好友畅玩一把，也是其乐融融。此外，很多许久不联系的同学朋友也会即兴一下，增进了感情。有时我会感慨，人生也是如游戏，优胜劣汰是不可避免的游戏规则。在软件行业，我更考虑的是这种现象级游戏软件背后的开发、运维和走向。当然，我不认为这种吃鸡游戏软件能够活到十年后，即使他目前达到现象级的万人空巷状况。&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;发展状况&amp;amp;假如我是产品经理&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;1.若想留住玩家，首先考虑一个问题——游戏软件卡顿。&lt;/p&gt;
&lt;p&gt;有这样一个段子“游戏不会让人产生暴力心理，但网络延迟却能。”这句话充分调侃了游戏卡顿对玩家影响之大。游戏卡顿大概分两种。一种是游戏自身优化差，比较明显的特点就是:①游戏自身画质不高却掉帧严重 ②bug多如家常便饭 ③游戏玩起来会有身体上多不适，比如头晕、手痛。第二种是服务器差，比较明显的特点是频繁的跳ping及间歇性重连接。&lt;/p&gt;
&lt;p&gt;2.吃鸡是一种竞技游戏，所以不可避免会出现单一性。所有人都按同一个竞争规则去进行竞技，而当人们玩过成百上千把时，带给新鲜感的规则就显得有些陈旧乏味。如果吃鸡不能进行玩法上的创新，相信用不了十年，很快会消失到软件的浪潮中。&lt;/p&gt;
&lt;p&gt;3.高端玩家和平民玩家的矛盾性。在竞技游戏泛滥的年代，很多厂商都喜欢把自己游戏弄一些职业比赛，把游戏职业化、电竞化、高逼格化。然而竞技游戏最大的两个矛盾点其实恰恰是职业选手与普通玩家。职业选手/高端玩家与普通玩家不同，他们对游戏有着独到的见解、更加新颖的思路玩法、无人可比的操作意识。这些东西会极大的左右官方对游戏做出的平衡，造成对平民玩家的“不公”。水可载舟，亦能覆舟。&lt;/p&gt;
</description>
<pubDate>Fri, 28 Sep 2018 14:17:00 +0000</pubDate>
<dc:creator>宁采晨</dc:creator>
<og:description>序 吃鸡类游戏是一种战术竞技型射击类沙盒游戏，每一局游戏将有最多100名玩家参与，他们将被投放在绝地岛上，在游戏的开始时所有人都一无所有。玩家需要在岛上收集各种资源，在不断缩小的安全区域内对抗其他玩家</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/yangkae/p/9719154.html</dc:identifier>
</item>
<item>
<title>工作一年多的感慨与总结（二） - JJian</title>
<link>http://www.cnblogs.com/jian0110/p/9721253.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/jian0110/p/9721253.html</guid>
<description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;blockquote readability=&quot;6.9126213592233&quot;&gt;
&lt;p&gt;　　前一篇（&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/jian0110/p/9710680.html&quot;&gt;工作一年多的感慨与总结（一）&lt;/a&gt;）算是对自己对这一年不如意的地方的一些抱怨与吐槽吧，那么今天这一篇就总结记录下那些正能量的事吧（自己能把自己感动的故事），废话不多说，趁着有足够的时间回忆，抓紧记录！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;2018/7-2018/9  跳槽准备&lt;/h2&gt;
&lt;h3&gt;（1）人总是要有点资本的&lt;/h3&gt;
&lt;p&gt;　　其实从当时的公司入职后不到一个月，就很想跳槽，这时候大家肯定都有同感。正所谓：面试造火箭，工作拧螺丝，面试之前说好的福利待遇（还被骗说会包吃包住，虽然最后住是勉强解决了，但环境就不说了，门一开对面就是污水处理器大声作响，简直让人无法睡眠！一个星期总有那么一两天很臭），都是浮云。嗯哼......好了，毕竟这些只是非必需条件，早点做好准备跳槽才是最重要的，但人总要有点资本才能谈薪资，想到这后，当时就决定每天多花时间学习看书做记录。每天下午6点下班，基本都是最晚走的。要么先吃饭之后上来继续看书，要么就是一呆就是晚上12点，不带吃饭的（后来意识到健康问题，就没发生过了）。&lt;/p&gt;
&lt;p&gt;　　从基本的Java 中常用的Spring+SpringMVC+Mybatis配置开始学起（当时不知做了很多次尝试，现在才能有个很清晰的配置过程与原理），之后继续学习前端JavaScript等（毕竟Java工程师都是要要求懂前端的），再到自学Python这门语言，再到MySQL数据库的全面了解。&lt;/p&gt;
&lt;p&gt;　　最后到项目的实践，再到单独实现一个功能模块，一步一步走来。无论是从编码规范还是思维方面成长了不少，这时候非常感谢我的师傅（一个从东北来西南打拼的人）是他教会我不少东西，正是这些东西让我每天都乐在其中，不断Coding！&lt;/p&gt;
&lt;h3&gt;（2）第一次写博客&lt;/h3&gt;
&lt;p&gt;　　当一个疑惑不解的问题终于尘埃落地之后，便会兴奋地记录在博客中，我第一次写博客是CSDN，前前后后写了60多篇，现在看以往的博文，不忍猝读，简直很烂（哈哈哈，或许这就是成长吧，所以我就在7月的时候才转来cnblog的），但还是要感谢当时勤劳的自己，现在很多问题我都会翻看之前的博客。&lt;/p&gt;
&lt;p&gt;　　我发现一个问题：有时候我们经常觉得我们以前做的事情都是很“幼稚”的，不知道你们有没有这样的感觉，总觉得以前的事好“羞耻”，怎么连个简单的东西当时都记不住，还要写博客。后来我想了很多，我给自己只有一个定义：&lt;strong&gt;&lt;span&gt;每当发现自己过去的很多事都没必要去做，或者说是多余的，幼稚的。可能说明我们在不停的成长.......但总归多么幼稚的事情，那都是自己的走向梦想的“脚印”啊！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;（3）第一次犯错&lt;/h3&gt;
&lt;p&gt;　　当我打开Navicat工具的执行一个简单的update的时候，不小心光标往下拉将没有where的SQL执行将所有数据误update，当时心慌慌，觉得肯定完了，第一时间寻找备份，什么！！没备份。第二时间想通过binlog恢复，纳尼！！！没开启！！！第三时间打电话给师傅（师傅请假了）：&lt;/p&gt;
&lt;p&gt;　　我：师傅，我不....不小心把所有数据update了。&lt;/p&gt;
&lt;p&gt;　　师傅：哦.......什么！啥？？？？快去看看备份啥的。&lt;/p&gt;
&lt;p&gt;　　我：那个备份没得，日志也没开启！&lt;/p&gt;
&lt;p&gt;　　师傅：业务部门估计要炸了，我估计也休息不好了，但是先别慌，去找下Excel，去整理下看能不能重新导入。&lt;/p&gt;
&lt;p&gt;　　我：好....好的！&lt;/p&gt;
&lt;p&gt;　　。。。。。。（省略1个小时的电话内容）&lt;/p&gt;
&lt;p&gt;　　这个项目是主要用于管理公司将近6000多员工人事信息，其中最重要的是核算工资。20号进行数据切片核算，犯错的那天是18号，所以我每次想到此我都是满头大汗......要不跑路？不不不，不太好，要不，工资都不要了，请个长假躲着？这怎么能行呢，还是要勇敢面对，再说是有Excel的，只是100多张而已..........&lt;/p&gt;
&lt;p&gt;　　&lt;span&gt;&lt;strong&gt;好了，对于自己犯的错都是要负责的。别躲避才是&lt;/strong&gt;&lt;/span&gt;！当天一直在整理Excel表一直到深夜，不知不觉凌晨2点，还差好多！而且也不能保证Excel与当前最新的数据是一致的，&lt;span&gt;&lt;strong&gt;所以我现在认识到每次无论是数据还是文件，都要好好保存，最好加版本号或者_20180927等日期后缀特意说明，这也算是好习惯吧！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;　　&lt;span&gt;第二天，师傅跟我业务部门去负荆请罪，然后我们俩兢兢战战先打听了下业务大佬是否在办公室，在的话等下再说，先跟主要对接人说下这件事，然后再看能不能想办法恢复，结果.......................................老天助我也，&lt;strong&gt;&lt;span&gt;业务部门的这个对接人居然在我误操作update之前的5分钟导出（备份）了所有的数据，当时的我感动的要死，哈哈哈。人生有时候就是这么跌宕起伏&lt;/span&gt;&lt;/strong&gt;.......随后赶紧数据恢复好了，并跟经理承认了错误，并要求（其实是建议，但是态度很强烈）开启备份，开启日志。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;　　当天夜晚本来应该安安心心的睡上一觉，但是总觉得需要记录点什么，所以就写了一篇&lt;/span&gt;&lt;/span&gt;&lt;a id=&quot;cb_post_title_url&quot; class=&quot;postTitle2&quot; href=&quot;https://www.cnblogs.com/jian0110/p/9404773.html&quot;&gt;MySQL的binlog恢复（Windows下）&lt;/a&gt;博文，算是对自己错误的总结与深刻认识！&lt;/p&gt;
&lt;h2&gt;2018/8-2018/9  面试准备&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;（1）选择创业公司OR外包？&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;　　当时由于朋友的推荐，来到一个本以为是电力行业的大公司做开发。但是面试的第一个环节就是询问我&lt;/p&gt;
&lt;p&gt;　　面试官：你对创业有什么看法？&lt;/p&gt;
&lt;p&gt;　　我内心：什么，创业？我当然想啊，但是你这肯定是套路我，测试我是否安心稳定为公司做贡献&lt;/p&gt;
&lt;p&gt;　　我说道：我还没毕业多久呢，还没那个阅历与资本&lt;/p&gt;
&lt;p&gt;　　面试官：哦........这样子啊，事情是这样的，我们是打算找一个属于自己的团队，然后逐步以接的小项目推动大项目发展&lt;/p&gt;
&lt;p&gt;　　我：不是贵公司平台还可以的嘛，为什么这么多&lt;/p&gt;
&lt;p&gt;　　面试官：可能我没表达清楚，我其实是想找一个自己的开发团队创业的&lt;/p&gt;
&lt;p&gt;　　我内心：什么，那之前说好的福利待遇是贵公司的，这是什么鬼，完全乱了！&lt;/p&gt;
&lt;p&gt;　　我说道：我考虑考虑吧！&lt;/p&gt;
&lt;p&gt;　　面试官：好的，我们打算9月份正是开启项目，到时候叫你，你那边可以的话做好打算&lt;/p&gt;
&lt;p&gt;其实这个面试官是我朋友的那边的一个项目经理，人挺好的。暂时先叫A哥吧，对话中间省去了我很多的震惊，明明是面试进公司啊，怎么就成创业了呢！不过只要能学到东西，待遇可以的话也可以考虑，之后便一直有跟A哥联系，算是在我一年职场中我的第二个贵人吧。&lt;/p&gt;
&lt;p&gt;　　最好你要问我选择了哪个公司，我想说的是我选择了外包公司，原因如下几点：&lt;/p&gt;
&lt;p&gt;　　第一是：外包公司主要是做金融，我觉得有点金融行业的知识可能会对以后有帮助的。&lt;/p&gt;
&lt;p&gt;　　第二是：虽然A哥也很努力邀请我，我曾经也很心动，但是每每与A哥谈话，都是我们的项目怎么运作怎么运作，有很好的前景，但丝毫没提待遇的事，也只能保证不少于之前在的公司的数。说实话可能是出了社会之后，我对口头上上保证的东西很是不相信，总以为要白纸黑字才是真！&lt;/p&gt;
&lt;p&gt;　　第三是：之前是说9月初开始，当时我也做好了准备，但是后来一直拖一直拖，A哥也有很多事要忙。我当已经面试通过了外包公司&lt;/p&gt;
&lt;h3&gt;（2）入职测试&lt;/h3&gt;
&lt;p&gt;　　本以为一切顺利的时候，当需要做一份入职测试题（题量很大，计算题有难度）的时候觉得小case，结果万万没想到最基本的测试都没过。当时无比惭愧啊，无比怀疑自己怎么连一个测试都做不够及格呢，后来才知道可以百度的，哈哈哈哈哈！！！为当时自己的耿直喝彩吧！当然按道理来说我肯定是被测试这关拒之门外的，技术再好也没用。&lt;/p&gt;
&lt;p&gt;　　后来确实如此，被拒之门外。而我已经选择了辞职（&lt;span&gt;&lt;strong&gt;我当时信心满满觉得肯定能过的，这件事教会我做事要考虑全面，特别是关系到以后发展的事&lt;/strong&gt;&lt;/span&gt;）。也就是说我没有其它退路了，这时候我想到了面试官，对我印象算是不错，可否有机会再试试。即使不能但我也努力了（&lt;span&gt;&lt;strong&gt;我这样安慰自己，这让我懂得有时候自我安慰是必要的&lt;/strong&gt;&lt;/span&gt;）。&lt;/p&gt;
&lt;p&gt;　　结果是被告之，测试没过的可是有很多人哦，好遗憾啊我看好的好几个测试都没过，但是你很特别啊，竟然还能找到我，坚持不放弃。我帮你问问试试看看，你等我消息！&lt;/p&gt;
&lt;p&gt;　　等待消息那几天我真的是大姑娘愁嫁的心情啊，每天都期待。后来事实证明：&lt;span&gt;&lt;strong&gt;有些事情多试试，把所有可能的都试了说不定就能成功了（我称之为“厚脸皮”学）。&lt;/strong&gt;&lt;span&gt;我成功进了某金融外包公司，整个过程持续了9天时间，够一波三折的！&lt;span&gt;&lt;strong&gt;可人生就是一波三折才是精彩的，不是嘛！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;2018/9/4-2018/9/10  新生活&lt;/h2&gt;
&lt;h3&gt; （1）租房&lt;/h3&gt;
&lt;p&gt;　　租房就没啥好说了，与中介斗智斗勇。与骗子聊聊人生理想之类的，对了，这里不得不吐槽下，KM的租房还是算偏高的了，还有听说其他地方中介只要半个月房租，而这里是需要一个月房租的，当然我也不懂其中的潜规则，总之：你也要吃饭，我也要吃饭，大家都是打工的！&lt;/p&gt;
&lt;h3&gt;（2）996的生活 &lt;/h3&gt;
&lt;p&gt;　　996的生活虽然早就有所耳闻，但是当第一次体验到的时候，还是有些许不习惯，虽然之前的公司也没有双休。不过听说只是项目任务急的时候有996，之后恢复正常！这里我要说对加班的看法的话，我想说必要的加班是必要的，公司要营业才有收入。这或许是一件矛盾的事情，但也有一定的道理！&lt;/p&gt;
&lt;h3&gt;（3）养猫的日子&lt;/h3&gt;
&lt;p&gt;　　很早以前就想养一只喵跟一只汪了，但是奈何租房养狗确实很多地方都不方便，那就只能先养一只瞄吧，于是我养了一只叫“咩咩”的猫，每天睁眼就看到可爱的小猫，整个人瞬间被治愈，似乎所有的不开心疲惫都烟消云散，似乎所有的加班都是值得的，因为要买猫粮啊！&lt;/p&gt;
&lt;p&gt;　　小猫非常皮，我连着一个星期睡不着。之后便有了半夜抓猫，撸猫的故事。后来也逐渐习惯了，小猫似乎也养成了我睡它也睡的习惯。嗯.........很和谐呢！哦，对了。昨天求朋友帮忙带小猫（因为要加班）去宠物医院打了第一针疫苗，据说被测体温“爆菊”很生无可恋，心如死灰。所以我也经常跟朋友说：&lt;span&gt;&lt;strong&gt;生活再苦再累也要自己找乐子啊，不止是工作啊，还要学会享乐啊！养养小植物，养养小宠物，装扮下房间等等...........&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2018/9/27  总结现在&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;　　&lt;/strong&gt;好了，懒懒洒洒写了好多。面对新技术，新的吐槽点，新的任务，新的环境人总是要适应的，从中找到平衡点，比如我每次面试一家公司的时候我都会问公司最主要用到的技术，试&lt;span&gt;&lt;strong&gt;图想抓住技术发展的一种趋势，以加强自身&lt;/strong&gt;&lt;/span&gt;。新公司虽然也有很多不如意的地方（外包公司，你们懂得），但是这里Nginx、Redis、Zookeeper、Jekins等东西都是一种趋势，也是值得学习的地方！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;------------------------------------------------------------------------------------终止符-&amp;gt;全剧终-------------------------------------------------------------------------------------------------&lt;/span&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 28 Sep 2018 14:11:00 +0000</pubDate>
<dc:creator>JJian</dc:creator>
<og:description>前言 前一篇（工作一年多的感慨与总结（一））算是对自己对这一年不如意的地方的一些抱怨与吐槽吧，那么今天这一篇就总结记录下那些正能量的事吧（自己能把自己感动的故事），废话不多说，趁着有足够的时间回忆，抓</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/jian0110/p/9721253.html</dc:identifier>
</item>
<item>
<title>第13天-迭代器和生成器 - 沉沦的罚</title>
<link>http://www.cnblogs.com/huwentao/p/9720509.html</link>
<guid isPermaLink="true" >http://www.cnblogs.com/huwentao/p/9720509.html</guid>
<description>&lt;p&gt;迭代器&lt;/p&gt;
&lt;p&gt;迭代就是重复的一个过程，但是不是单纯的重复，每一次的重复都是基于上一次的结果产生的。不过只记住迭代他就是重复的执行过程就是了。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#单纯的重复不是迭代，例如：
count &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;
&lt;span&gt;while&lt;/span&gt; count &amp;lt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;:
    print(count)
    count &lt;/span&gt;+= &lt;span&gt;1&lt;/span&gt;&lt;span&gt;

#每一次的重复都是基于上一次的结果产生的，随着count的改变输出不同的结果
count &lt;/span&gt;= &lt;span&gt;0&lt;/span&gt;&lt;span&gt;
list &lt;/span&gt;= [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;]
&lt;/span&gt;&lt;span&gt;while&lt;/span&gt; count &amp;lt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;:
    print(list[count])
    count &lt;/span&gt;+= &lt;span&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;迭代器就是迭代取数的一个工具，关键是我们为什么要用迭代器呢？我们都知道python中主要的一些数据类型有整型，字符串，元祖，列表，字典，集合，文件等。对于整型而言只要一个数没有什么迭代器的概念，对于字符串，元祖和列表我们可以通过索引去取值，但是对于字典，集合以及文件而言，我们怎么去像列表一样进行取值呢？这就是迭代器引入的原因，主要就是为了不依赖与索引进行迭代取值。在python中两个概念，一个就是可迭代对象（只要有__iter__方法的我们就称之为可迭代对象，字符串，元祖，列表，字典，集合都是可迭代对象），二是迭代器对象（不仅要有__iter__方法而且还要有__next__方法，文件是迭代器对象），从上面的描述我们就可以看出来，迭代器对象都是可迭代的对象，但是可迭代对象却不一定是迭代器对象。&lt;/p&gt;
&lt;p&gt;迭代器的使用方法&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
dic = {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;hu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 12&lt;span&gt;}
iter_dic &lt;/span&gt;= dic.&lt;span&gt;__iter__&lt;/span&gt;()  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 可迭代对象要变成迭代器才能够进行使用&lt;/span&gt;
res = iter_dic.&lt;span&gt;__next__&lt;/span&gt;()  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 变成迭代器之后通过__next__方法进行迭代取值&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(res)     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 对于dic迭代的值是key&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当迭代器把迭代对象循环完毕之后会报错&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;36&quot;&gt;
&lt;pre&gt;
dic = {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;hu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 12&lt;span&gt;}
count &lt;/span&gt;=&lt;span&gt; 0
iter_dic &lt;/span&gt;= dic.&lt;span&gt;__iter__&lt;/span&gt;()  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 可迭代对象要变成迭代器才能够进行使用&lt;/span&gt;
&lt;span&gt;while&lt;/span&gt; count &amp;lt;&lt;span&gt; len(dic):
    &lt;/span&gt;&lt;span&gt;try&lt;/span&gt;:   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 当最后一个迭代完了之后会报错，因此我们需要捕捉异常&lt;/span&gt;
        res = iter_dic.&lt;span&gt;__next__&lt;/span&gt;()  &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 变成迭代器之后通过__next__方法进行迭代取值&lt;/span&gt;
        &lt;span&gt;print&lt;/span&gt;(res)     &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 对于dic迭代的值是key&lt;/span&gt;
    &lt;span&gt;except&lt;/span&gt;&lt;span&gt; StopIteration:
        &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从上面的代码我们就可以看出来，对于迭代器的使用太过于麻烦，因此python给我们专门的设计了一个循环for循环来解决这样的事情，for循环可以专门的去解决可迭代对象的问题，当然迭代器对象的问题也可以，for循环处理的步骤1. 把可迭代对象转换成迭代器，（迭代器的话也会执行__iter__的方法，效果是一样的）2. 循环的去调用__next__方法进行迭代取值。3. 通过try去捕捉异常，捕捉到异常之后停止循环。&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 和上面的代码显示的效果是一样的&lt;/span&gt;
dic = {&lt;span&gt;'&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: &lt;span&gt;'&lt;/span&gt;&lt;span&gt;hu&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;age&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;: 12&lt;span&gt;}
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt;&lt;span&gt; dic:
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(i)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成器&lt;/p&gt;
&lt;p&gt;　　生成器本质上就是迭代器，只不过这个生成器是我们自己通过yield关键字自己创建的迭代器而已。迭代器有两个优点 1. 可以不依赖与索引迭代取值   2.节省内存。而我们创建生成器为了解决最大的问题其实就是节省内存。&lt;/p&gt;
&lt;p&gt;生成器创建的规则， 通过yield关键字进行创建迭代器。yield和return返回的是一样的，只是yield可以中断函数，当我需要的时候可以重新再进行创建&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; foo()
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(1&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;第一&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(2&lt;span&gt;)
    &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt; &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;第二&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;

iter_foo &lt;/span&gt;=&lt;span&gt; foo()
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(iter_foo)
next(iter_foo)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;三元表达式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt;&lt;span&gt; max2(a, b):
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; a &amp;gt;&lt;span&gt; b:
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; a
    &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
        &lt;/span&gt;&lt;span&gt;return&lt;/span&gt;&lt;span&gt; b

a &lt;/span&gt;= 1&lt;span&gt;
b &lt;/span&gt;= 2&lt;span&gt;

c &lt;/span&gt;= a &lt;span&gt;if&lt;/span&gt; a &amp;gt; b &lt;span&gt;else&lt;/span&gt;&lt;span&gt; b   # 这一行数据就是上面那一个函数的简洁的表达方式
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(c)
c &lt;/span&gt;=&lt;span&gt; max2(a, b)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(c)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;列表生成式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
l =&lt;span&gt; []
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(10&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; i &amp;gt; 5&lt;span&gt;:
        s &lt;/span&gt;= &lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;egg%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; %&lt;span&gt; i
        l.append(s)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(l)

l &lt;/span&gt;= [&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;egg%s&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt; % i &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(10) &lt;span&gt;if&lt;/span&gt; i &amp;gt; 5&lt;span&gt;]  # 这一句话和前面的几句话都是性质是一样的，只是简写了而已
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(l)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成字典表达式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;38&quot;&gt;
&lt;pre&gt;
d =&lt;span&gt; {}
s &lt;/span&gt;= [(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;hu&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, 12), (&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;zhou&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;, 14&lt;span&gt;)]
&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; k, v &lt;span&gt;in&lt;/span&gt;&lt;span&gt; s:
    d[k] &lt;/span&gt;=&lt;span&gt; v

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(d)


d &lt;/span&gt;= {k : v &lt;span&gt;for&lt;/span&gt; k, v &lt;span&gt;in&lt;/span&gt; s} &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 这个是上面几行代码的缩写&lt;/span&gt;
&lt;span&gt;print&lt;/span&gt;(d)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成器表达式&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
res = (i ** 2 &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(5&lt;span&gt;))

&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(res)
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(next(res))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(next(res))
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(next(res))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;练习题：&lt;/p&gt;
&lt;p&gt;1. 编写一个range的生成器&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33&quot;&gt;&lt;img id=&quot;code_img_closed_b0294b6a-491a-492e-a358-db77a81d5042&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_b0294b6a-491a-492e-a358-db77a81d5042&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_b0294b6a-491a-492e-a358-db77a81d5042&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;span&gt;def&lt;/span&gt; my_range(start, end , step=1&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;while&lt;/span&gt; start &amp;lt;&lt;span&gt; end:
        &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;&lt;span&gt; start
        start &lt;/span&gt;+=&lt;span&gt; step

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; my_range(0, 10&lt;span&gt;):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(i)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;2. 求一个文件中所包含的字符的个数，以及左右行中最大的个数&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;33.5&quot;&gt;&lt;img id=&quot;code_img_closed_92d1ba41-78b3-4ff3-abbb-a754f274c6d1&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_92d1ba41-78b3-4ff3-abbb-a754f274c6d1&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_92d1ba41-78b3-4ff3-abbb-a754f274c6d1&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;62&quot;&gt;
&lt;pre&gt;
with open(r&lt;span&gt;'&lt;/span&gt;&lt;span&gt;04_多层装饰器的联系.py&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, &lt;span&gt;'&lt;/span&gt;&lt;span&gt;rt&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, encoding=&lt;span&gt;'&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) as f:
    &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; count = 0&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; for line in f:&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;     count += 1&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; data = f.read()&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(len(data))  649&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; count = 0&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; for line in f:&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt;     count += len(line)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(count)&lt;/span&gt;
    &lt;span&gt;#&lt;/span&gt;&lt;span&gt; print(sum(len(line) for line in f))&lt;/span&gt;
    &lt;span&gt;print&lt;/span&gt;(max(len(line) &lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt; f))   &lt;span&gt;#&lt;/span&gt;&lt;span&gt; 通过生成器表达式一行写出&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;3. 模拟管道，实现功能:tail -f access.log | grep '404'&lt;/p&gt;
&lt;div class=&quot;cnblogs_code&quot; readability=&quot;34.5&quot;&gt;&lt;img id=&quot;code_img_closed_40d8a16c-bb16-4553-a69c-6ecf54c1a560&quot; class=&quot;code_img_closed&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot;/&gt;&lt;img id=&quot;code_img_opened_40d8a16c-bb16-4553-a69c-6ecf54c1a560&quot; class=&quot;code_img_opened&quot; src=&quot;http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot;/&gt;&lt;div id=&quot;cnblogs_code_open_40d8a16c-bb16-4553-a69c-6ecf54c1a560&quot; class=&quot;cnblogs_code_hide&quot; readability=&quot;64&quot;&gt;
&lt;pre&gt;
&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 2、模拟管道，实现功能:tail -f access.log | grep '404'&lt;/span&gt;

&lt;span&gt;import&lt;/span&gt;&lt;span&gt; time

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; tail(file_path):
    with open(file_path, &lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;rb&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;) as f:
        f.seek(0, &lt;/span&gt;2&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;while&lt;/span&gt;&lt;span&gt; True:
            &lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 查看是否有新的一行加入&lt;/span&gt;
            line =&lt;span&gt; f.readline()
            &lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt; line:
                &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;&lt;span&gt; line
            &lt;/span&gt;&lt;span&gt;else&lt;/span&gt;&lt;span&gt;:
                time.sleep(&lt;/span&gt;0.2&lt;span&gt;)

&lt;/span&gt;&lt;span&gt;def&lt;/span&gt;&lt;span&gt; grep(pattern, iter_tail):
    &lt;/span&gt;&lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt;&lt;span&gt; iter_tail:
        line &lt;/span&gt;= line.decode(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;utf-8&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)
        &lt;/span&gt;&lt;span&gt;if&lt;/span&gt; pattern &lt;span&gt;in&lt;/span&gt;&lt;span&gt; line:
            &lt;/span&gt;&lt;span&gt;yield&lt;/span&gt;&lt;span&gt; line

&lt;/span&gt;&lt;span&gt;for&lt;/span&gt; line &lt;span&gt;in&lt;/span&gt; grep(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;404&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;, tail(&lt;span&gt;'&lt;/span&gt;&lt;span&gt;access.log&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)):
    &lt;/span&gt;&lt;span&gt;print&lt;/span&gt;(line)
&lt;/pre&gt;&lt;/div&gt;
&lt;span class=&quot;cnblogs_code_collapse&quot;&gt;View Code&lt;/span&gt;&lt;/div&gt;

</description>
<pubDate>Fri, 28 Sep 2018 14:08:00 +0000</pubDate>
<dc:creator>沉沦的罚</dc:creator>
<og:description>迭代器 迭代就是重复的一个过程，但是不是单纯的重复，每一次的重复都是基于上一次的结果产生的。不过只记住迭代他就是重复的执行过程就是了。 迭代器就是迭代取数的一个工具，关键是我们为什么要用迭代器呢？我们</og:description>
<dc:language>zh-cn</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.cnblogs.com/huwentao/p/9720509.html</dc:identifier>
</item>
</channel>
</rss>